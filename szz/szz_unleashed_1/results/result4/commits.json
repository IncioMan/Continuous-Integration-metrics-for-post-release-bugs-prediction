{"422a756b9519773b3ac8a9b30e4253772581dae1":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/__tests__\/__snapshots__\/FilesView-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/FilesView.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["258","show_them=Show Them"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/__tests__\/__snapshots__\/FilesView-test.tsx.snap":[{"add":["50","    <div","51","      className=\"display-flex-center\"","53","      component_measures.hidden_best_score_metrics.9.","54","      <Button","55","        className=\"button-small spacer-left\"","56","        onClick={[Function]}","57","      >","58","        show_them","59","      <\/Button>","60","    <\/div>"],"delete":["50","    component_measures.hidden_best_score_metrics.1.","51","    <Button","52","      className=\"button-link spacer-left\"","53","      onClick={[Function]}","55","      show_all","56","    <\/Button>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/FilesView.tsx":[{"add":["103","  getVisibleComponents = () => {","104","    const { components } = this.props;","105","    if (this.state.showBestMeasures) {","135","    const { selectedIdx } = this.props;","136","    const visibleComponents = this.getVisibleComponents();","145","    const { selectedIdx } = this.props;","146","    const visibleComponents = this.getVisibleComponents();","165","    const filteredComponents = this.getVisibleComponents();","179","        {hidingBestMeasures &&","180","          this.props.paging && (","181","            <Alert className=\"spacer-top\" variant=\"info\">","182","              <div className=\"display-flex-center\">","183","                {translateWithParameters(","184","                  'component_measures.hidden_best_score_metrics',","185","                  formatMeasure(this.props.paging.total - filteredComponents.length, 'INT'),","186","                  formatMeasure(this.props.metric.bestValue, this.props.metric.type)","187","                )}","188","                <Button className=\"button-small spacer-left\" onClick={this.handleShowBestMeasures}>","189","                  {translate('show_them')}","190","                <\/Button>","191","              <\/div>","192","            <\/Alert>","193","          )}"],"delete":["103","  getVisibleComponents = (components: T.ComponentMeasureEnhanced[], showBestMeasures: boolean) => {","104","    if (showBestMeasures) {","134","    const { components, selectedIdx } = this.props;","135","    const visibleComponents = this.getVisibleComponents(components, this.state.showBestMeasures);","144","    const { components, selectedIdx } = this.props;","145","    const visibleComponents = this.getVisibleComponents(components, this.state.showBestMeasures);","164","    const filteredComponents = this.getVisibleComponents(components, this.state.showBestMeasures);","178","        {hidingBestMeasures && (","179","          <Alert className=\"spacer-top\" variant=\"info\">","180","            {translateWithParameters(","181","              'component_measures.hidden_best_score_metrics',","182","              components.length - filteredComponents.length,","183","              formatMeasure(this.props.metric.bestValue, this.props.metric.type)","184","            )}","185","            <Button className=\"button-link spacer-left\" onClick={this.handleShowBestMeasures}>","186","              {translate('show_all')}","187","            <\/Button>","188","          <\/Alert>","189","        )}"]}]}},"8c0b3350b714e835e91d89f958eefa531533070a":{"changes":{"sonar-application\/build.gradle":"MODIFY","server\/sonar-docs\/build.gradle":"MODIFY","sonar-application\/bundled_plugins.gradle":"ADD"},"diff":{"sonar-application\/build.gradle":[{"add":["29","    \/\/ please keep list ordered","30","    compile 'org.slf4j:slf4j-api'","32","    compile 'org.elasticsearch.client:transport'","33","    compile project(':server:sonar-ce')","34","    compile project(':server:sonar-main')","35","    compile project(':server:sonar-process')","36","    compile project(':server:sonar-webserver')","37","    compile project(':sonar-core')","38","    compile project(path: ':sonar-plugin-api', configuration: 'shadow')","39","    compile project(':sonar-plugin-api-impl')","41","    compileOnly 'com.google.code.findbugs:jsr305'","43","    jsw 'tanukisoft:wrapper:3.2.3'","44","    scanner project(path: ':sonar-scanner-engine-shaded', configuration: 'shadow')","45","    web project(':server:sonar-web')","46","    shutdowner project(':sonar-shutdowner')","48","    jdbc_h2 'com.h2database:h2'","49","    jdbc_mssql 'com.microsoft.sqlserver:mssql-jdbc'","50","    jdbc_postgresql 'org.postgresql:postgresql'","53","\/\/ declare dependencies in configuration bundledPlugin to be packaged in extensions\/plugins","54","apply from: 'bundled_plugins.gradle'","55",""],"delete":["29","  \/\/ please keep list ordered","30","  compile 'org.slf4j:slf4j-api'","32","  compile 'org.elasticsearch.client:transport'","33","  compile project(':server:sonar-ce')","34","  compile project(':server:sonar-main')","35","  compile project(':server:sonar-process')","36","  compile project(':server:sonar-webserver')","37","  compile project(':sonar-core')","38","  compile project(path: ':sonar-plugin-api', configuration: 'shadow')","39","  compile project(':sonar-plugin-api-impl')","41","  compileOnly 'com.google.code.findbugs:jsr305'","43","  jsw 'tanukisoft:wrapper:3.2.3'","44","  scanner project(path: ':sonar-scanner-engine-shaded', configuration: 'shadow')","45","  web project(':server:sonar-web')","46","  shutdowner project(':sonar-shutdowner')","48","  jdbc_h2 'com.h2database:h2'","49","  jdbc_mssql 'com.microsoft.sqlserver:mssql-jdbc'","50","  jdbc_postgresql 'org.postgresql:postgresql'","51","","52","  bundledPlugin 'org.sonarsource.css:sonar-css-plugin@jar'","53","  bundledPlugin \"org.sonarsource.dotnet:sonar-csharp-plugin@jar\"","54","  bundledPlugin \"org.sonarsource.dotnet:sonar-vbnet-plugin@jar\"","55","  bundledPlugin 'org.sonarsource.flex:sonar-flex-plugin@jar'","56","  bundledPlugin 'org.sonarsource.html:sonar-html-plugin@jar'","57","  bundledPlugin 'org.sonarsource.java:sonar-java-plugin@jar'","58","  bundledPlugin 'org.sonarsource.jacoco:sonar-jacoco-plugin@jar'","59","  bundledPlugin 'org.sonarsource.javascript:sonar-javascript-plugin@jar'","60","  bundledPlugin 'org.sonarsource.php:sonar-php-plugin@jar'","61","  bundledPlugin 'org.sonarsource.python:sonar-python-plugin@jar'","62","  bundledPlugin 'org.sonarsource.slang:sonar-go-plugin@jar'","63","  bundledPlugin \"org.sonarsource.slang:sonar-kotlin-plugin@jar\"","64","  bundledPlugin \"org.sonarsource.slang:sonar-ruby-plugin@jar\"","65","  bundledPlugin 'org.sonarsource.scm.git:sonar-scm-git-plugin@jar'","66","  bundledPlugin 'org.sonarsource.scm.svn:sonar-scm-svn-plugin@jar'","67","  bundledPlugin \"org.sonarsource.slang:sonar-scala-plugin@jar\"","68","  bundledPlugin 'org.sonarsource.typescript:sonar-typescript-plugin@jar'","69","  bundledPlugin 'org.sonarsource.xml:sonar-xml-plugin@jar'"]}],"server\/sonar-docs\/build.gradle":[{"add":["17","  bundledPlugin {","18","    transitive = false","19","  }","22","\/\/ loads the bundled_plugins.gradle of each edition","23","\/\/ (they will all add there own bundled plugins to the bundledPlugin dependency configuration)","24","apply from: new File(rootDir, 'sonar-application\/bundled_plugins.gradle')","25","File closeSourceDir = new File(rootDir, 'private');","26","if (closeSourceDir.exists()) {","27","  apply from: new File(closeSourceDir, 'edition-developer\/bundled_plugins.gradle')","28","  apply from: new File(closeSourceDir, 'edition-enterprise\/bundled_plugins.gradle')","29","  apply from: new File(closeSourceDir, 'edition-datacenter\/bundled_plugins.gradle')","34","    configurations.bundledPlugin.files.each {"],"delete":["17","  languagePlugin { transitive = false }","20","dependencies {","21","  languagePlugin 'com.sonarsource.abap:sonar-abap-plugin@jar' \/\/ private","22","  languagePlugin 'com.sonarsource.slang:sonar-apex-plugin@jar' \/\/ private","23","  languagePlugin \"org.sonarsource.dotnet:sonar-csharp-plugin@jar\"","24","  languagePlugin 'com.sonarsource.cpp:sonar-cfamily-plugin@jar' \/\/ private","25","  languagePlugin 'com.sonarsource.cobol:sonar-cobol-plugin@jar' \/\/ private","26","  languagePlugin 'org.sonarsource.css:sonar-css-plugin@jar'","27","  languagePlugin 'org.sonarsource.flex:sonar-flex-plugin@jar'","28","  languagePlugin 'org.sonarsource.java:sonar-java-plugin@jar'","29","  languagePlugin 'org.sonarsource.javascript:sonar-javascript-plugin@jar'","30","  languagePlugin \"org.sonarsource.slang:sonar-kotlin-plugin@jar\"","31","  languagePlugin 'org.sonarsource.php:sonar-php-plugin@jar'","32","  languagePlugin 'com.sonarsource.pli:sonar-pli-plugin@jar' \/\/ private","33","  languagePlugin 'com.sonarsource.plsql:sonar-plsql-plugin@jar' \/\/ private","34","  languagePlugin 'org.sonarsource.python:sonar-python-plugin@jar'","35","  languagePlugin 'com.sonarsource.rpg:sonar-rpg-plugin@jar' \/\/ private","36","  languagePlugin 'org.sonarsource.slang:sonar-go-plugin@jar'","37","  languagePlugin \"org.sonarsource.slang:sonar-ruby-plugin@jar\"","38","  languagePlugin \"org.sonarsource.slang:sonar-scala-plugin@jar\"","39","  languagePlugin 'com.sonarsource.swift:sonar-swift-plugin@jar' \/\/ private","40","  languagePlugin 'org.sonarsource.typescript:sonar-typescript-plugin@jar'","41","  languagePlugin 'com.sonarsource.tsql:sonar-tsql-plugin@jar' \/\/ private","42","  languagePlugin \"org.sonarsource.dotnet:sonar-vbnet-plugin@jar\"","43","  languagePlugin 'com.sonarsource.plugins.vb:sonar-vb-plugin@jar' \/\/ private","44","  languagePlugin 'org.sonarsource.html:sonar-html-plugin@jar'","45","  languagePlugin 'org.sonarsource.xml:sonar-xml-plugin@jar'","50","    configurations.languagePlugin.files.each {"]}],"sonar-application\/bundled_plugins.gradle":[{"add":[],"delete":[]}]}},"7b64b5d27664c32bcca218cfbd2f89eb2dff845f":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImpl.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImpl.java":[{"add":["105","    private volatile boolean keepRunning = true;","117","      if (keepRunning) {","118","        if (result == null) {","119","          chainWithEnabledTaskDelay();","120","        } else {","121","          switch (result) {","122","            case DISABLED:","123","              chainWithDisabledTaskDelay();","124","              break;","125","            case NO_TASK:","126","              chainWithEnabledTaskDelay();","127","              break;","128","            case TASK_PROCESSED:","129","            default:","130","              chainWithoutDelay();","131","          }","140","      } else if (keepRunning) {","146","      workerFuture = executorService.submit(worker);","151","      workerFuture = executorService.schedule(worker, delayBetweenEnabledTasks, timeUnit);","156","      workerFuture = executorService.schedule(worker, DELAY_BETWEEN_DISABLED_TASKS, timeUnit);","161","      if (workerFuture != null) {","167","      keepRunning = false;"],"delete":["26","import java.util.concurrent.atomic.AtomicBoolean;","106","    private final AtomicBoolean keepRunning = new AtomicBoolean(true);","118","      if (result == null) {","119","        chainWithEnabledTaskDelay();","120","      } else {","121","        switch (result) {","122","          case DISABLED:","123","            chainWithDisabledTaskDelay();","124","            break;","125","          case NO_TASK:","126","            chainWithEnabledTaskDelay();","127","            break;","128","          case TASK_PROCESSED:","129","          default:","130","            chainWithoutDelay();","139","      } else {","145","      if (keepRunning()) {","146","        workerFuture = executorService.submit(worker);","147","      }","152","      if (keepRunning()) {","153","        workerFuture = executorService.schedule(worker, delayBetweenEnabledTasks, timeUnit);","154","      }","159","      if (keepRunning()) {","160","        workerFuture = executorService.schedule(worker, DELAY_BETWEEN_DISABLED_TASKS, timeUnit);","161","      }","166","      if (workerFuture != null && keepRunning()) {","171","    private boolean keepRunning() {","172","      return keepRunning.get();","173","    }","174","","176","      this.keepRunning.set(false);"]}]}},"36b911c2beb62d63067f6c8a0d255ff42182ea9f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/PageSidebar-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/PageSidebar.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/PageSidebar-test.tsx.snap":[{"add":["30","    property=\"new_security_review\"","94","    property=\"new_security_review\""],"delete":["30","    property=\"new_security_review_rating\"","94","    property=\"new_security_review_rating\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/PageSidebar.tsx":[{"add":["142","            property=\"new_security_review\""],"delete":["142","            property=\"new_security_review_rating\""]}]}},"58c5f2d0729d2fb11ec100123b0311db0f8df4b1":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":[{"add":["23","import java.util.stream.IntStream;","186","  public void mass_insert_then_remove_rule() {","187","    int numberOfRules = 5000;","188","","189","    \/\/ register many rules","190","    execute(context -> {","191","      RulesDefinition.NewRepository repo = context.createRepository(\"fake\", \"java\");","192","      IntStream.range(0, numberOfRules).forEach(i ->","193","        repo.createRule(randomAlphanumeric(5))","194","        .setName(randomAlphanumeric(20))","195","        .setHtmlDescription(randomAlphanumeric(20)));","196","      repo.done();","197","    });","198","","199","    \/\/ verify db","200","    assertThat(dbClient.ruleDao().selectAllDefinitions(dbTester.getSession()))","201","      .hasSize(numberOfRules)","202","      .extracting(RuleDefinitionDto::getStatus)","203","      .containsOnly(RuleStatus.READY);","204","","205","    \/\/ verify index","206","    assertThat(esTester.countDocuments(RuleIndexDefinition.INDEX_TYPE_RULE)).isEqualTo(numberOfRules);","207","    assertThat(ruleIndex.search(new RuleQuery(), new SearchOptions()).getIds())","208","      .isNotEmpty();","209","","210","    \/\/ register no rule","211","    execute(context -> context.createRepository(\"fake\", \"java\").done());","212","","213","    \/\/ verify db","214","    assertThat(dbClient.ruleDao().selectAllDefinitions(dbTester.getSession()))","215","      .hasSize(numberOfRules)","216","      .extracting(RuleDefinitionDto::getStatus)","217","      .containsOnly(RuleStatus.REMOVED);","218","","219","    \/\/ verify index (documents are still in the index, but all are removed)","220","    assertThat(esTester.countDocuments(RuleIndexDefinition.INDEX_TYPE_RULE)).isEqualTo(numberOfRules);","221","    assertThat(ruleIndex.search(new RuleQuery(), new SearchOptions()).getIds())","222","      .isEmpty();","223","  }","224","","225","  @Test"],"delete":[]}]}},"3715dddeae5b101b705cd5d3e21d0173b445603c":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Search.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Search.tsx":[{"add":[],"delete":["63","    this.input.focus();"]}]}},"2d8b4511099529d8f36f89d64b357c51a27c173f":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/language\/ws\/ListAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/language\/ws\/LanguageWsTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/language\/ws\/ListAction.java":[{"add":["82","    Pattern pattern = Pattern.compile(query == null ? MATCH_ALL : MATCH_ALL + Pattern.quote(query) + MATCH_ALL, Pattern.CASE_INSENSITIVE);"],"delete":["82","    Pattern pattern = Pattern.compile(query == null ? MATCH_ALL : MATCH_ALL + query + MATCH_ALL, Pattern.CASE_INSENSITIVE);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/language\/ws\/LanguageWsTest.java":[{"add":["41","  private static final String EMPTY_JSON_RESPONSE = \"{\\\"languages\\\": []}\";","46","  private WsTester tester;","80","  public void list_all_languages() throws Exception {","92","  }","94","  @Test","95","  public void filter_languages_by_key_or_name() throws Exception {","104","  \/**","105","   * Potential vulnerability : the query provided by user must","106","   * not be executed as a regexp.","107","   *\/","108","  @Test","109","  public void filter_escapes_the_user_query() throws Exception {","110","    \/\/ invalid regexp","111","    tester.newGetRequest(CONTROLLER_LANGUAGES, ACTION_LIST)","112","      .setParam(\"q\", \"[\")","113","      .execute().assertJson(EMPTY_JSON_RESPONSE);","114","","115","    \/\/ do not consider param as a regexp","116","    tester.newGetRequest(CONTROLLER_LANGUAGES, ACTION_LIST)","117","      .setParam(\"q\", \".*\")","118","      .execute().assertJson(EMPTY_JSON_RESPONSE);","119","  }","120","","122","    TestLanguage(String key, String language) {"],"delete":["45","  WsTester tester;","79","  public void should_list_languages() throws Exception {","101","    public TestLanguage(String key, String language) {"]}]}},"3a7c8c60ca1a3cbd87959f795a70203d6556e35b":{"changes":{"server\/sonar-auth-gitlab\/src\/main\/java\/org\/sonar\/auth\/gitlab\/GitLabSettings.java":"MODIFY","server\/sonar-auth-gitlab\/src\/test\/java\/org\/sonar\/auth\/gitlab\/GitLabSettingsTest.java":"MODIFY"},"diff":{"server\/sonar-auth-gitlab\/src\/main\/java\/org\/sonar\/auth\/gitlab\/GitLabSettings.java":[{"add":["50","    String url = configuration.get(GITLAB_AUTH_URL).orElse(null);","51","    if (url != null && url.endsWith(\"\/\")) {","52","      return url.substring(0, url.length() - 1);","53","    }","54","    return url;"],"delete":["50","    return configuration.get(GITLAB_AUTH_URL).orElse(null);"]}],"server\/sonar-auth-gitlab\/src\/test\/java\/org\/sonar\/auth\/gitlab\/GitLabSettingsTest.java":[{"add":["53","","54","    settings.setProperty(GITLAB_AUTH_URL, \"https:\/\/gitlab.com\/api\/\");","55","    assertThat(config.url()).isEqualTo(\"https:\/\/gitlab.com\/api\");","56","","57",""],"delete":[]}]}},"76f302cc06533e740d8f1e4112b3d7110ae8eb9e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/CreateAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/UpdateActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/UpdateAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/DeleteAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/CreateAction.java":[{"add":["67","  private final RuleWsSupport ruleWsSupport;","69","  public CreateAction(DbClient dbClient, RuleCreator ruleCreator, RuleMapper ruleMapper, OrganizationFlags organizationFlags, RuleWsSupport ruleWsSupport) {","74","    this.ruleWsSupport = ruleWsSupport;","81","      .setDescription(\"Create a custom rule.<br>\" +","82","        \"Requires the 'Administer Quality Profiles' permission\")","142","    ruleWsSupport.checkQProfileAdminPermission();"],"delete":["68","  public CreateAction(DbClient dbClient, RuleCreator ruleCreator, RuleMapper ruleMapper, OrganizationFlags organizationFlags) {","79","      .setDescription(\"Create a custom rule\")"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/CreateActionTest.java":[{"add":["34","import org.sonar.server.exceptions.ForbiddenException;","35","import org.sonar.server.exceptions.UnauthorizedException;","36","import org.sonar.server.organization.DefaultOrganizationProvider;","42","import org.sonar.server.tester.UserSessionRule;","52","import static org.sonar.db.permission.OrganizationPermission.ADMINISTER_QUALITY_PROFILES;","66","  public UserSessionRule userSession = UserSessionRule.standalone();","67","","68","  @Rule","75","  private DefaultOrganizationProvider defaultOrganizationProvider = TestDefaultOrganizationProvider.from(db);","77","  private WsActionTester ws = new WsActionTester(new CreateAction(db.getDbClient(),","80","    new RuleMapper(new Languages(), createMacroInterpreter()), organizationFlags,","81","    new RuleWsSupport(db.getDbClient(), userSession, defaultOrganizationProvider)));","85","    logInAsQProfileAdministrator();","93","    String result = ws.newRequest()","130","    logInAsQProfileAdministrator();","144","    TestResponse response = ws.newRequest()","169","    logInAsQProfileAdministrator();","175","    ws.newRequest()","184","  @Test","185","  public void throw_ForbiddenException_if_not_profile_administrator() throws Exception {","186","    userSession.logIn();","187","","188","    expectedException.expect(ForbiddenException.class);","189","","190","    ws.newRequest().execute();","191","  }","192","","193","  @Test","194","  public void throw_UnauthorizedException_if_not_logged_in() throws Exception {","195","    expectedException.expect(UnauthorizedException.class);","196","","197","    ws.newRequest().execute();","198","  }","199","","206","  private void logInAsQProfileAdministrator() {","207","    userSession","208","      .logIn()","209","      .addPermission(ADMINISTER_QUALITY_PROFILES, defaultOrganizationProvider.get().getUuid());","210","  }","211",""],"delete":["68","  private WsActionTester wsTester = new WsActionTester(new CreateAction(db.getDbClient(),","71","    new RuleMapper(new Languages(), createMacroInterpreter()), organizationFlags));","82","    String result = wsTester.newRequest()","132","    TestResponse response = wsTester.newRequest()","162","    wsTester.newRequest()"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/UpdateActionTest.java":[{"add":["40","import org.sonar.server.exceptions.ForbiddenException;","41","import org.sonar.server.exceptions.UnauthorizedException;","313","  @Test","314","  public void throw_ForbiddenException_if_not_profile_administrator() throws Exception {","315","    userSession.logIn();","316","","317","    expectedException.expect(ForbiddenException.class);","318","","319","    ws.newRequest().setMethod(\"POST\").execute();","320","  }","321","","322","  @Test","323","  public void throw_UnauthorizedException_if_not_logged_in() throws Exception {","324","    expectedException.expect(UnauthorizedException.class);","325","","326","    ws.newRequest().setMethod(\"POST\").execute();","327","  }","328",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/UpdateAction.java":[{"add":["95","      .setDescription(\"Update an existing rule.<br>\" +","96","        \"Requires the 'Administer Quality Profiles' permission\")"],"delete":["95","      .setDescription(\"Update an existing rule\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/DeleteAction.java":[{"add":["43","      .setDescription(\"Delete custom rule.<br\/>\" +","44","        \"Requires the 'Administer Quality Profiles' permission\")"],"delete":["43","      .setDescription(\"Delete custom rule\")"]}]}},"01f2c2e66d698a60ad1f303cf7aafaf64852e7a8":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationRepositoryImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/measure\/MeasureTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/PurgeDatastoresStepTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/PurgeDatastoresStep.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/util\/WrapInSingleElementArray.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":[{"add":["55","  public ProjectCleaner purge(DbSession session, String rootUuid, String projectUuid, Configuration projectConfig, Collection<String> disabledComponentUuids) {","59","    periodCleaner.clean(session, rootUuid, projectConfig);","61","    PurgeConfiguration configuration = newDefaultPurgeConfiguration(projectConfig, rootUuid, projectUuid, disabledComponentUuids);"],"delete":["30","import org.sonar.db.purge.IdUuidPair;","56","  public ProjectCleaner purge(DbSession session, IdUuidPair rootId, Configuration projectConfig, Collection<String> disabledComponentUuids) {","60","    PurgeConfiguration configuration = newDefaultPurgeConfiguration(projectConfig, rootId, disabledComponentUuids);","62","    periodCleaner.clean(session, configuration.rootProjectIdUuid().getUuid(), projectConfig);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationRepositoryImplTest.java":[{"add":["137","    return Arrays.stream(Component.Type.values())","138","      .filter(t -> t != Component.Type.FILE)","139","      .map(WrapInSingleElementArray.INSTANCE)","140","      .toArray(Object[][]::new);"],"delete":["34","import static com.google.common.base.Predicates.equalTo;","35","import static com.google.common.base.Predicates.not;","36","import static com.google.common.collect.FluentIterable.from;","140","    return from(Arrays.asList(Component.Type.values()))","141","      .filter(not(equalTo(Component.Type.FILE)))","142","      .transform(WrapInSingleElementArray.INSTANCE)","143","      .toArray(Object[].class);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/measure\/MeasureTest.java":[{"add":["89","    return MEASURES.stream().map(WrapInSingleElementArray.INSTANCE).toArray(Object[][]::new);","93","    return MEASURES.stream()","94","      .filter(input -> input.getValueType() != valueType)","95","      .map(WrapInSingleElementArray.INSTANCE)","96","      .toArray(Object[][]::new);"],"delete":["35","import static com.google.common.collect.FluentIterable.from;","90","    return from(MEASURES).transform(WrapInSingleElementArray.INSTANCE).toArray(Object[].class);","94","    return from(MEASURES)","95","      .filter(input -> input.getValueType() != valueType).transform(WrapInSingleElementArray.INSTANCE)","96","      .toArray(Object[].class);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["86","  List<String> selectStaleShortLivingBranchesAndPullRequests(@Param(\"projectUuid\") String projectUuid, @Param(\"toDate\") Long toDate);"],"delete":["86","  List<String> selectStaleShortLivingBranchesAndPullRequests(@Param(\"mainBranchProjectUuid\") String mainBranchProjectUuid, @Param(\"toDate\") Long toDate);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/PurgeDatastoresStepTest.java":[{"add":["24","import java.util.Arrays;","25","import java.util.Collections;","26","import java.util.function.Predicate;","27","import org.junit.Before;","34","import org.sonar.ce.task.projectanalysis.analysis.AnalysisMetadataHolderRule;","45","import org.sonar.server.project.Project;","50","import static org.mockito.ArgumentMatchers.anyString;","66","  public AnalysisMetadataHolderRule analysisMetadataHolder = new AnalysisMetadataHolderRule();","72","  private PurgeDatastoresStep underTest = new PurgeDatastoresStep(mock(DbClient.class, Mockito.RETURNS_DEEP_STUBS), projectCleaner, treeRootHolder,","73","    settingsRepository, disabledComponentsHolder, analysisMetadataHolder);","74","","75","  @Before","76","  public void before() {","77","    analysisMetadataHolder.setProject(new Project(\"uuid\", \"key\", \"name\", null, Collections.emptyList()));","78","  }","96","    return dataproviderFromComponentTypeValues(input -> input.isReportType() && input != Component.Type.PROJECT);","109","    return dataproviderFromComponentTypeValues(input -> input.isViewsType() && input != Component.Type.VIEW);","134","    ArgumentCaptor<String> argumentCaptor = ArgumentCaptor.forClass(String.class);","135","    verify(projectCleaner).purge(any(), argumentCaptor.capture(), anyString(), any(), any());","136","    assertThat(argumentCaptor.getValue()).isEqualTo(PROJECT_UUID);","140","    return Arrays.stream(Component.Type.values())","142","      .map(WrapInSingleElementArray.INSTANCE)","143","      .toArray(Object[][]::new);"],"delete":["21","import com.google.common.base.Predicate;","22","import com.google.common.collect.FluentIterable;","34","import org.sonar.ce.task.projectanalysis.component.MutableDbIdsRepositoryRule;","43","import org.sonar.db.purge.IdUuidPair;","46","import static java.util.Arrays.asList;","59","  private static final long PROJECT_ID = 123L;","65","  public MutableDbIdsRepositoryRule dbIdsRepository = MutableDbIdsRepositoryRule.standalone();","71","  private PurgeDatastoresStep underTest = new PurgeDatastoresStep(mock(DbClient.class, Mockito.RETURNS_DEEP_STUBS), projectCleaner, dbIdsRepository, treeRootHolder,","72","    settingsRepository, disabledComponentsHolder);","90","    return dataproviderFromComponentTypeValues(new Predicate<Component.Type>() {","91","      @Override","92","      public boolean apply(Component.Type input) {","93","        return input.isReportType() && input != Component.Type.PROJECT;","94","      }","95","    });","108","    return dataproviderFromComponentTypeValues(new Predicate<Component.Type>() {","109","      @Override","110","      public boolean apply(Component.Type input) {","111","        return input.isViewsType() && input != Component.Type.VIEW;","112","      }","113","    });","135","    dbIdsRepository.setComponentId(project, PROJECT_ID);","139","    ArgumentCaptor<IdUuidPair> argumentCaptor = ArgumentCaptor.forClass(IdUuidPair.class);","140","    verify(projectCleaner).purge(any(), argumentCaptor.capture(), any(), any());","141","    assertThat(argumentCaptor.getValue().getId()).isEqualTo(PROJECT_ID);","142","    assertThat(argumentCaptor.getValue().getUuid()).isEqualTo(PROJECT_UUID);","146","    return FluentIterable.from(asList(Component.Type.values()))","148","      .transform(WrapInSingleElementArray.INSTANCE)","149","      .toArray(Object[].class);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["63","    String rootUuid = conf.rootUuid();","80","    List<String> branchUuids = mapper.selectStaleShortLivingBranchesAndPullRequests(conf.projectUuid(), dateToLong(maxDate.get()));","83","      if (!rootUuid.equals(branchUuid)) {","84","        deleteRootComponent(branchUuid, mapper, commands);","85","      }","100","    String rootUuid = conf.rootUuid();","156","    listener.onComponentsDisabling(conf.rootUuid(), conf.getDisabledComponentUuids());","218","   * This method has no effect when passed an empty collection or only root components."],"delete":["63","    String rootUuid = conf.rootProjectIdUuid().getUuid();","80","    List<String> branchUuids = mapper.selectStaleShortLivingBranchesAndPullRequests(rootUuid, dateToLong(maxDate.get()));","83","      deleteRootComponent(branchUuid, mapper, commands);","98","    String rootUuid = conf.rootProjectIdUuid().getUuid();","154","    listener.onComponentsDisabling(conf.rootProjectIdUuid().getUuid(), conf.getDisabledComponentUuids());","216","   *   This method has no effect when passed an empty collection or only root components."]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/PurgeDatastoresStep.java":[{"add":["21","import org.sonar.ce.task.projectanalysis.analysis.AnalysisMetadataHolder;","44","  private final AnalysisMetadataHolder analysisMetadataHolder;","46","  public PurgeDatastoresStep(DbClient dbClient, ProjectCleaner projectCleaner, TreeRootHolder treeRootHolder,","47","    ConfigurationRepository configRepository, DisabledComponentsHolder disabledComponentsHolder, AnalysisMetadataHolder analysisMetadataHolder) {","53","    this.analysisMetadataHolder = analysisMetadataHolder;","74","      String projectUuid = analysisMetadataHolder.getProject().getUuid();","75","      projectCleaner.purge(dbSession, root.getUuid(), projectUuid, configRepository.getConfiguration(), disabledComponentsHolder.getUuids());"],"delete":["23","import org.sonar.ce.task.projectanalysis.component.DbIdsRepository;","31","import org.sonar.db.purge.IdUuidPair;","42","  private final DbIdsRepository dbIdsRepository;","47","  public PurgeDatastoresStep(DbClient dbClient, ProjectCleaner projectCleaner, DbIdsRepository dbIdsRepository, TreeRootHolder treeRootHolder,","48","    ConfigurationRepository configRepository, DisabledComponentsHolder disabledComponentsHolder) {","51","    this.dbIdsRepository = dbIdsRepository;","75","      IdUuidPair idUuidPair = new IdUuidPair(dbIdsRepository.getComponentId(root), root.getUuid());","76","      projectCleaner.purge(dbSession, idUuidPair, configRepository.getConfiguration(), disabledComponentsHolder.getUuids());"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["54","        pb.project_uuid=#{projectUuid,jdbcType=VARCHAR}"],"delete":["54","        pb.project_uuid=#{mainBranchProjectUuid,jdbcType=VARCHAR}"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/util\/WrapInSingleElementArray.java":[{"add":["21","import java.util.function.Function;","30","    return new Object[] {input};"],"delete":["21","import com.google.common.base.Function;","30","    return new Object[]{input};"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":[{"add":["38","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 0, Optional.empty(), System2.INSTANCE, emptyList());","41","    conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), -1, Optional.empty(), System2.INSTANCE, emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.of(10), System2.INSTANCE, emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","77","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), \"root\", \"project\", emptyList());"],"delete":["38","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 0, Optional.empty(), System2.INSTANCE, emptyList());","41","    conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), -1, Optional.empty(), System2.INSTANCE, emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.of(10), System2.INSTANCE, emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","77","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), emptyList());"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":[{"add":["35","  private final String rootUuid;","36","  private final String projectUuid;","43","  public PurgeConfiguration(String rootUuid, String projectUuid, Collection<String> scopesWithoutHistoricalData, int maxAgeInDaysOfClosedIssues,","45","    this.rootUuid = rootUuid;","46","    this.projectUuid = projectUuid;","54","  public static PurgeConfiguration newDefaultPurgeConfiguration(Configuration config, String rootUuid, String projectUuid, Collection<String> disabledComponentUuids) {","55","    return new PurgeConfiguration(rootUuid, projectUuid, Arrays.asList(Scopes.DIRECTORY, Scopes.FILE), config.getInt(PurgeConstants.DAYS_BEFORE_DELETING_CLOSED_ISSUES).get(),","59","  \/**","60","   * UUID of the branch being analyzed (root of the component tree). Will be the same as {@link #projectUuid}","61","   * if it's the main branch.","62","   * Can also be a view.","63","   *\/","64","  public String rootUuid() {","65","    return rootUuid;","66","  }","67","","68","  \/**","69","   * @return UUID of the main branch of the project","70","   *\/","71","  public String projectUuid() {","72","    return projectUuid;"],"delete":["35","  private final IdUuidPair rootProjectIdUuid;","42","  public PurgeConfiguration(IdUuidPair rootProjectId, Collection<String> scopesWithoutHistoricalData, int maxAgeInDaysOfClosedIssues,","44","    this.rootProjectIdUuid = rootProjectId;","52","  public static PurgeConfiguration newDefaultPurgeConfiguration(Configuration config, IdUuidPair rootId, Collection<String> disabledComponentUuids) {","53","    return new PurgeConfiguration(rootId, Arrays.asList(Scopes.DIRECTORY, Scopes.FILE), config.getInt(PurgeConstants.DAYS_BEFORE_DELETING_CLOSED_ISSUES).get(),","57","  public IdUuidPair rootProjectIdUuid() {","58","    return rootProjectIdUuid;"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["92","  private static final String PROJECT_UUID = \"P1\";","143","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid()), PurgeListener.EMPTY, new PurgeProfiler());","169","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid()), PurgeListener.EMPTY, new PurgeProfiler());","176","  public void purge_inactive_SLB_when_analyzing_non_main_branch() {","177","    when(system2.now()).thenReturn(new Date().getTime());","178","    RuleDefinitionDto rule = db.rules().insert();","179","    ComponentDto project = db.components().insertMainBranch();","180","    ComponentDto longBranch = db.components().insertProjectBranch(project);","181","","182","    when(system2.now()).thenReturn(DateUtils.addDays(new Date(), -31).getTime());","183","","184","    \/\/ SLB updated 31 days ago","185","    ComponentDto slb1 = db.components().insertProjectBranch(project, b -> b.setBranchType(BranchType.SHORT));","186","","187","    \/\/ SLB with other components and issues, updated 31 days ago","188","    ComponentDto slb2 = db.components().insertProjectBranch(project, b -> b.setBranchType(BranchType.PULL_REQUEST));","189","    ComponentDto file = db.components().insertComponent(newFileDto(slb2));","190","    db.issues().insert(rule, slb2, file);","191","","192","    \/\/ back to present","193","    when(system2.now()).thenReturn(new Date().getTime());","194","    \/\/ analysing slb1","195","    underTest.purge(dbSession, newConfigurationWith30Days(system2, slb1.uuid(), slb1.getMainBranchProjectUuid()), PurgeListener.EMPTY, new PurgeProfiler());","196","    dbSession.commit();","197","","198","    \/\/ slb1 wasn't deleted since it was being analyzed!","199","    assertThat(uuidsIn(\"projects\")).containsOnly(project.uuid(), longBranch.uuid(), slb1.uuid());","200","  }","201","","202","  @Test","205","    PurgeConfiguration conf = new PurgeConfiguration(\"PROJECT_UUID\", \"PROJECT_UUID\", asList(Scopes.DIRECTORY, Scopes.FILE),","259","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid(), module.uuid(), dir.uuid(), srcFile.uuid(), testFile.uuid()), PurgeListener.EMPTY,","367","    List<PurgeableAnalysisDto> analyses = underTest.selectPurgeableAnalyses(PROJECT_UUID, dbSession);","897","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid()), PurgeListener.EMPTY, new PurgeProfiler());","1279","    return new PurgeConfiguration(PROJECT_UUID, PROJECT_UUID, emptyList(), 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","1282","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid, String... disabledComponentUuids) {","1283","    return new PurgeConfiguration(rootUuid, projectUuid, emptyList(), 30, Optional.of(30), system2, asList(disabledComponentUuids));"],"delete":["92","  private static final String THE_PROJECT_UUID = \"P1\";","93","  private static final long THE_PROJECT_ID = 1L;","144","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid()), PurgeListener.EMPTY, new PurgeProfiler());","170","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid()), PurgeListener.EMPTY, new PurgeProfiler());","179","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"PROJECT_UUID\"), asList(Scopes.DIRECTORY, Scopes.FILE),","233","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), module.uuid(), dir.uuid(), srcFile.uuid(), testFile.uuid()), PurgeListener.EMPTY,","341","    List<PurgeableAnalysisDto> analyses = underTest.selectPurgeableAnalyses(THE_PROJECT_UUID, dbSession);","871","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid()), PurgeListener.EMPTY, new PurgeProfiler());","1253","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, THE_PROJECT_UUID), emptyList(), 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","1256","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootProjectUuid, String... disabledComponentUuids) {","1257","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, rootProjectUuid), emptyList(), 30, Optional.of(30), system2, asList(disabledComponentUuids));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":[{"add":["59","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());","68","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());","77","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());"],"delete":["29","import org.sonar.db.purge.IdUuidPair;","60","    underTest.purge(mock(DbSession.class), mock(IdUuidPair.class), settings.asConfig(), emptyList());","69","    underTest.purge(mock(DbSession.class), mock(IdUuidPair.class), settings.asConfig(), emptyList());","78","    underTest.purge(mock(DbSession.class), mock(IdUuidPair.class), settings.asConfig(), emptyList());"]}]}},"335d323f8abe8e1af98f58c93ade7498abd85d9c":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/__snapshots__\/TypeFacet-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/facet\/FacetHeader.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/TypeFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/ResolutionFacet.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/__snapshots__\/TypeFacet-test.tsx.snap":[{"add":[],"delete":["100","    clearLabel=\"reset_verb\""]}],"server\/sonar-web\/src\/main\/js\/components\/facet\/FacetHeader.tsx":[{"add":["104","            {translate('clear')}"],"delete":["28","  clearLabel?: string;","105","            {translate(this.props.clearLabel || 'clear')}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/TypeFacet.tsx":[{"add":[],"delete":["143","          clearLabel=\"reset_verb\""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/ResolutionFacet.tsx":[{"add":[],"delete":["116","          clearLabel=\"reset_verb\""]}]}},"23bcc7aaf87af495bc2c2c1e3cc65bcba10703e9":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/create-profile-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/create-profile-view.js":[{"add":["24","import { createQualityProfile } from '..\/..\/api\/quality-profiles';","35","  onFormSubmit: function () {","37","","38","    const form = this.$('form')[0];","39","    const data = new FormData(form);","40","","41","    createQualityProfile(data)","42","        .then(r => {","43","          this.addProfile(r.profile);","44","          this.destroy();","45","        })","46","        .catch(e => {","47","          e.response.json().then(r => this.showErrors(r.errors, r.warnings));","48","        });"],"delete":["22","import uploader from '..\/..\/components\/common\/file-upload';","35","  onFormSubmit: function (e) {","37","    this.sendRequest(e);","67","  sendRequest: function (e) {","68","    var that = this;","69","    uploader({ form: $(e.currentTarget) }).done(function (r) {","70","      if (_.isArray(r.errors) || _.isArray(r.warnings)) {","71","        that.showErrors(r.errors, r.warnings);","72","      } else {","73","        that.addProfile(r.profile);","74","        that.destroy();","75","      }","76","    });","77","  },","78",""]}]}},"21369995bc5443108b2521a3126bebd002ca6444":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/UpdateConflictResolver.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/UpdateConflictResolverTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/issue\/IssueMapper.xml":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistIssuesStep.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueMapper.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistIssuesStepTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/UpdateConflictResolver.java":[{"add":["36","  public void resolve(DefaultIssue issue, IssueDto dbIssue, IssueMapper mapper) {","38","    mergeFields(dbIssue, issue);","39","    mapper.update(IssueDto.toDtoForUpdate(issue, System.currentTimeMillis()));"],"delete":["36","  public void resolve(DefaultIssue issue, IssueMapper mapper) {","38","","39","    IssueDto dbIssue = mapper.selectByKey(issue.key());","40","    if (dbIssue != null) {","41","      mergeFields(dbIssue, issue);","42","      mapper.update(IssueDto.toDtoForUpdate(issue, System.currentTimeMillis()));","43","    }"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/UpdateConflictResolverTest.java":[{"add":["52","    IssueDto issueDto = new IssueDto()","53","      .setKee(\"ABCDE\")","54","      .setType(CODE_SMELL)","55","      .setRuleId(10)","56","      .setRuleKey(\"squid\", \"AvoidCycles\")","57","      .setProjectUuid(\"U1\")","58","      .setComponentUuid(\"U2\")","59","      .setLine(10)","60","      .setStatus(STATUS_OPEN)","62","      \/\/ field changed by user","63","      .setAssigneeUuid(\"arthur-uuid\");","65","    new UpdateConflictResolver().resolve(issue, issueDto, mapper);"],"delete":["34","import static org.mockito.Mockito.when;","53","    when(mapper.selectByKey(\"ABCDE\")).thenReturn(","54","      new IssueDto()","55","        .setKee(\"ABCDE\")","56","        .setType(CODE_SMELL)","57","        .setRuleId(10)","58","        .setRuleKey(\"squid\", \"AvoidCycles\")","59","        .setProjectUuid(\"U1\")","60","        .setComponentUuid(\"U2\")","61","        .setLine(10)","62","        .setStatus(STATUS_OPEN)","64","        \/\/ field changed by user","65","        .setAssigneeUuid(\"arthur-uuid\"));","67","    new UpdateConflictResolver().resolve(issue, mapper);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/issue\/IssueMapper.xml":[{"add":["263","  <select id=\"selectByKeysIfNotUpdatedAt\" parameterType=\"map\" resultType=\"Issue\">","264","    select","265","      <include refid=\"issueColumns\"\/>","266","    from issues i","267","    inner join rules r on r.id=i.rule_id","268","    inner join projects p on p.uuid=i.component_uuid","269","    inner join projects root on root.uuid=i.project_uuid","270","    where","271","      i.kee in","272","        <foreach collection=\"keys\" open=\"(\" close=\")\" item=\"key\" separator=\",\">","273","          #{key,jdbcType=VARCHAR}","274","        <\/foreach>","275","      and i.updated_at &lt;&gt; #{updatedAt,jdbcType=BIGINT}","276","  <\/select>","277",""],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistIssuesStep.java":[{"add":["21","import java.util.ArrayList;","22","import java.util.List;","23","import java.util.Map;","31","import org.sonar.db.BatchSession;","39","import static org.sonar.core.util.stream.MoreCollectors.toList;","40","import static org.sonar.core.util.stream.MoreCollectors.uniqueIndex;","41","","43","  \/\/ holding up to 1000 DefaultIssue (max size of addedIssues and updatedIssues at any given time) in memory should not","44","  \/\/ be a problem while making sure we leverage extensively the batch feature to speed up persistence","45","  private static final int ISSUE_BATCHING_SIZE = BatchSession.MAX_BATCH_SIZE * 2;","69","      List<DefaultIssue> addedIssues = new ArrayList<>(ISSUE_BATCHING_SIZE);","70","      List<DefaultIssue> updatedIssues = new ArrayList<>(ISSUE_BATCHING_SIZE);","76","        if (issue.isNew() || issue.isCopied()) {","77","          addedIssues.add(issue);","78","          if (addedIssues.size() >= ISSUE_BATCHING_SIZE) {","79","            persistNewIssues(statistics, addedIssues, mapper, changeMapper);","80","            addedIssues.clear();","81","          }","82","        } else if (issue.isChanged()) {","83","          updatedIssues.add(issue);","84","          if (updatedIssues.size() >= ISSUE_BATCHING_SIZE) {","85","            persistUpdatedIssues(statistics, updatedIssues, mapper, changeMapper);","86","            updatedIssues.clear();","87","          }","88","        } else {","89","          statistics.untouched++;","92","      persistNewIssues(statistics, addedIssues, mapper, changeMapper);","93","      persistUpdatedIssues(statistics, updatedIssues, mapper, changeMapper);","94","      flushSession(dbSession);","100","  private void persistNewIssues(IssueStatistics statistics, List<DefaultIssue> addedIssues, IssueMapper mapper, IssueChangeMapper changeMapper) {","101","    if (addedIssues.isEmpty()) {","102","      return;","105","    long now = system2.now();","106","    addedIssues.forEach(i -> {","107","      int ruleId = ruleRepository.getByKey(i.ruleKey()).getId();","108","      IssueDto dto = IssueDto.toDtoForComputationInsert(i, ruleId, now);","109","      mapper.insert(dto);","110","      statistics.inserts++;","111","    });","113","    addedIssues.forEach(i -> issueStorage.insertChanges(changeMapper, i));","116","  private void persistUpdatedIssues(IssueStatistics statistics, List<DefaultIssue> updatedIssues, IssueMapper mapper, IssueChangeMapper changeMapper) {","117","    if (updatedIssues.isEmpty()) {","118","      return;","119","    }","120","","121","    long now = system2.now();","122","    updatedIssues.forEach(i -> {","123","      IssueDto dto = IssueDto.toDtoForUpdate(i, now);","124","      mapper.updateIfBeforeSelectedDate(dto);","125","      statistics.updates++;","126","    });","127","","128","    \/\/ retrieve those of the updatedIssues which have not been updated and apply conflictResolver on them","129","    List<String> updatedIssueKeys = updatedIssues.stream().map(DefaultIssue::key).collect(toList(updatedIssues.size()));","130","    List<IssueDto> conflictIssueKeys = mapper.selectByKeysIfNotUpdatedAt(updatedIssueKeys, now);","131","    if (!conflictIssueKeys.isEmpty()) {","132","      Map<String, DefaultIssue> issuesByKeys = updatedIssues.stream().collect(uniqueIndex(DefaultIssue::key, updatedIssues.size()));","133","      conflictIssueKeys","134","        .forEach(dbIssue -> {","135","          DefaultIssue updatedIssue = issuesByKeys.get(dbIssue.getKey());","136","          conflictResolver.resolve(updatedIssue, dbIssue, mapper);","137","          statistics.merged++;","138","        });","139","    }","140","","141","    updatedIssues.forEach(i -> issueStorage.insertChanges(changeMapper, i));","144","  private static void flushSession(DbSession dbSession) {","145","    dbSession.flushStatements();","146","    dbSession.commit();","157","    private int merged = 0;","164","        .add(\"merged\", String.valueOf(merged))"],"delete":["64","        boolean saved = persistIssueIfRequired(mapper, issue, statistics);","65","        if (saved) {","66","          issueStorage.insertChanges(changeMapper, issue);","69","      dbSession.flushStatements();","70","      dbSession.commit();","76","  private boolean persistIssueIfRequired(IssueMapper mapper, DefaultIssue issue, IssueStatistics issueStatistics) {","77","    if (issue.isNew() || issue.isCopied()) {","78","      persistNewIssue(mapper, issue);","79","      issueStatistics.inserts++;","80","      return true;","83","    if (issue.isChanged()) {","84","      persistChangedIssue(mapper, issue);","85","      issueStatistics.updates++;","86","      return true;","87","    }","89","    issueStatistics.untouched++;","90","    return false;","93","  private void persistNewIssue(IssueMapper mapper, DefaultIssue issue) {","94","    int ruleId = ruleRepository.getByKey(issue.ruleKey()).getId();","95","    IssueDto dto = IssueDto.toDtoForComputationInsert(issue, ruleId, system2.now());","96","    mapper.insert(dto);","99","  private void persistChangedIssue(IssueMapper mapper, DefaultIssue issue) {","100","    IssueDto dto = IssueDto.toDtoForUpdate(issue, system2.now());","101","    int updateCount = mapper.updateIfBeforeSelectedDate(dto);","102","    if (updateCount == 0) {","103","      \/\/ End-user and scan changed the issue at the same time.","104","      \/\/ See https:\/\/jira.sonarsource.com\/browse\/SONAR-4309","105","      conflictResolver.resolve(issue, mapper);","106","    }"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueMapper.java":[{"add":["36","  List<IssueDto> selectByKeysIfNotUpdatedAt(@Param(\"keys\") List<String> keys, @Param(\"updatedAt\") long updatedAt);","37","","57",""],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistIssuesStepTest.java":[{"add":["29","import org.mockito.ArgumentCaptor;","51","import org.sonar.db.issue.IssueMapper;","61","import static org.mockito.ArgumentMatchers.any;","62","import static org.mockito.ArgumentMatchers.eq;","64","import static org.mockito.Mockito.verify;","86","  private System2 system2 = mock(System2.class);","89","  private UpdateConflictResolver conflictResolver = mock(UpdateConflictResolver.class);","105","    underTest = new PersistIssuesStep(dbClient, system2, conflictResolver, new RuleRepositoryImpl(adHocRuleCreator, dbClient, analysisMetadataHolder), issueCache,","119","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","120","    ComponentDto file = db.components().insertComponent(newFileDto(project, null));","121","    when(system2.now()).thenReturn(NOW);","134","      .setSelectedAt(NOW)","165","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"merged\", \"0\"), entry(\"untouched\", \"0\"));","173","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","174","    ComponentDto file = db.components().insertComponent(newFileDto(project, null));","175","    when(system2.now()).thenReturn(NOW);","188","      .setSelectedAt(NOW)","218","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"merged\", \"0\"), entry(\"untouched\", \"0\"));","219","  }","220","","221","  @Test","222","  public void update_conflicting_issue() {","223","    RuleDefinitionDto rule = RuleTesting.newRule(RuleKey.of(\"xoo\", \"S01\"));","224","    db.rules().insert(rule);","225","    OrganizationDto organizationDto = db.organizations().insert();","226","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","227","    ComponentDto file = db.components().insertComponent(newFileDto(project, null));","228","    IssueDto issue = db.issues().insert(rule, project, file,","229","      i -> i.setStatus(STATUS_OPEN)","230","        .setResolution(null)","231","        .setCreatedAt(NOW - 1_000_000_000L)","232","        \/\/ simulate the issue has been updated after the analysis ran","233","        .setUpdatedAt(NOW + 1_000_000_000L));","234","    issue = dbClient.issueDao().selectByKey(db.getSession(), issue.getKey()).get();","235","    DiskCache<DefaultIssue>.DiskAppender issueCacheAppender = issueCache.newAppender();","236","    when(system2.now()).thenReturn(NOW);","237","","238","    DefaultIssue defaultIssue = issue.toDefaultIssue()","239","      .setStatus(STATUS_CLOSED)","240","      .setResolution(RESOLUTION_FIXED)","241","      .setSelectedAt(NOW)","242","      .setNew(false)","243","      .setChanged(true);","244","    issueCacheAppender.append(defaultIssue).close();","245","","246","    TestComputationStepContext context = new TestComputationStepContext();","247","    underTest.execute(context);","248","","249","    ArgumentCaptor<IssueDto> issueDtoCaptor = ArgumentCaptor.forClass(IssueDto.class);","250","    verify(conflictResolver).resolve(eq(defaultIssue), issueDtoCaptor.capture(), any(IssueMapper.class));","251","    assertThat(issueDtoCaptor.getValue().getId()).isEqualTo(issue.getId());","252","    assertThat(context.getStatistics().getAll()).containsOnly(","253","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"merged\", \"1\"), entry(\"untouched\", \"0\"));","254","","262","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","263","    ComponentDto file = db.components().insertComponent(newFileDto(project, null));","289","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"merged\", \"0\"), entry(\"untouched\", \"0\"));","320","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"merged\", \"0\"), entry(\"untouched\", \"0\"));","360","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"merged\", \"0\"), entry(\"untouched\", \"0\"));","398","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"merged\", \"0\"), entry(\"untouched\", \"0\"));"],"delete":["48","import org.sonar.db.component.ComponentTesting;","97","    System2 system2 = mock(System2.class);","98","    when(system2.now()).thenReturn(NOW);","101","    underTest = new PersistIssuesStep(dbClient, system2, new UpdateConflictResolver(), new RuleRepositoryImpl(adHocRuleCreator, dbClient, analysisMetadataHolder), issueCache,","115","    ComponentDto project = ComponentTesting.newPrivateProjectDto(organizationDto);","116","    dbClient.componentDao().insert(session, project);","117","    ComponentDto file = newFileDto(project, null);","118","    dbClient.componentDao().insert(session, file);","119","    session.commit();","162","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"untouched\", \"0\"));","170","    ComponentDto project = ComponentTesting.newPrivateProjectDto(organizationDto);","171","    dbClient.componentDao().insert(session, project);","172","    ComponentDto file = newFileDto(project, null);","173","    dbClient.componentDao().insert(session, file);","174","    session.commit();","216","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"untouched\", \"0\"));","224","    ComponentDto project = ComponentTesting.newPrivateProjectDto(organizationDto);","225","    dbClient.componentDao().insert(session, project);","226","    ComponentDto file = newFileDto(project, null);","227","    dbClient.componentDao().insert(session, file);","253","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"untouched\", \"0\"));","284","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"untouched\", \"0\"));","324","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"untouched\", \"0\"));","362","      entry(\"inserts\", \"0\"), entry(\"updates\", \"1\"), entry(\"untouched\", \"0\"));"]}]}},"60dc681dbf066bf2afa19992c678a132bdc19d54":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/workspace\/templates\/workspace-rule.hbs":"MODIFY","server\/sonar-web\/src\/main\/less\/init\/icons.less":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/icons-components\/LinkIcon.js":"ADD","server\/sonar-web\/src\/main\/js\/components\/charts\/TreeMapRect.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-rule-meta.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":[{"add":["25","import LinkIcon from '..\/..\/..\/components\/icons-components\/LinkIcon';","107","                  className=\"js-issue-permalink link-no-underline\"","110","                  to={issueUrl}>","111","                  <LinkIcon \/>","112","                <\/Link>"],"delete":["106","                  className=\"js-issue-permalink icon-link\"","109","                  to={issueUrl}","110","                \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/workspace\/templates\/workspace-rule.hbs":[{"add":["44","        <a class=\"link-no-underline\" target=\"_blank\" href=\"{{link permalink}}\">","45","          <svg","46","            xmlns=\"http:\/\/www.w3.org\/2000\/svg\"","47","            height=14","48","            width=14","49","            viewBox=\"0 0 16 16\">","50","            <path","51","              fill=\"currentColor\"","52","              d=\"M13.501 11.429q0-0.357-0.25-0.607l-1.857-1.857q-0.25-0.25-0.607-0.25-0.375 0-0.643 0.286 0.027 0.027 0.17 0.165t0.192 0.192 0.134 0.17 0.116 0.228 0.031 0.246q0 0.357-0.25 0.607t-0.607 0.25q-0.134 0-0.246-0.031t-0.228-0.116-0.17-0.134-0.192-0.192-0.165-0.17q-0.295 0.277-0.295 0.652 0 0.357 0.25 0.607l1.839 1.848q0.241 0.241 0.607 0.241 0.357 0 0.607-0.232l1.313-1.304q0.25-0.25 0.25-0.598zM7.224 5.134q0-0.357-0.25-0.607l-1.839-1.848q-0.25-0.25-0.607-0.25-0.348 0-0.607 0.241l-1.313 1.304q-0.25 0.25-0.25 0.598 0 0.357 0.25 0.607l1.857 1.857q0.241 0.241 0.607 0.241 0.375 0 0.643-0.277-0.027-0.027-0.17-0.165t-0.192-0.192-0.134-0.17-0.116-0.228-0.031-0.246q0-0.357 0.25-0.607t0.607-0.25q0.134 0 0.246 0.031t0.228 0.116 0.17 0.134 0.192 0.192 0.165 0.17q0.295-0.277 0.295-0.652zM15.215 11.429q0 1.071-0.759 1.813l-1.313 1.304q-0.741 0.741-1.813 0.741-1.080 0-1.821-0.759l-1.839-1.848q-0.741-0.741-0.741-1.813 0-1.098 0.786-1.866l-0.786-0.786q-0.768 0.786-1.857 0.786-1.071 0-1.821-0.75l-1.857-1.857q-0.75-0.75-0.75-1.821t0.759-1.813l1.313-1.304q0.741-0.741 1.813-0.741 1.080 0 1.821 0.759l1.839 1.848q0.741 0.741 0.741 1.813 0 1.098-0.786 1.866l0.786 0.786q0.768-0.786 1.857-0.786 1.071 0 1.821 0.75l1.857 1.857q0.75 0.75 0.75 1.821z\"","53","            \/>","54","          <\/svg>","55","        <\/a>"],"delete":["44","        <a class=\"icon-link\" target=\"_blank\" href=\"{{link permalink}}\"><\/a>"]}],"server\/sonar-web\/src\/main\/less\/init\/icons.less":[{"add":[],"delete":["524",".icon-link:before {","525","  content: \"\\f127\";","526","  font-size: @iconSmallFontSize;","527","}"]}],"server\/sonar-web\/src\/main\/js\/components\/icons-components\/LinkIcon.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/TreeMapRect.js":[{"add":["23","import LinkIcon from '..\/icons-components\/LinkIcon';","63","          <LinkIcon \/>"],"delete":["62","          <span className=\"icon-link\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-rule-meta.hbs":[{"add":["4","    <a class=\"coding-rules-detail-permalink link-no-underline spacer-left\" target=\"_blank\" href=\"{{permalink}}\"","5","       data-toggle=\"tooltip\" data-placement=\"left\" title=\"Rule permalink\">","6","      <svg","7","        class=\"text-text-top\"","8","        xmlns=\"http:\/\/www.w3.org\/2000\/svg\"","9","        height=14","10","        width=14","11","        viewBox=\"0 0 16 16\">","12","        <path","13","          fill=\"currentColor\"","14","          d=\"M13.501 11.429q0-0.357-0.25-0.607l-1.857-1.857q-0.25-0.25-0.607-0.25-0.375 0-0.643 0.286 0.027 0.027 0.17 0.165t0.192 0.192 0.134 0.17 0.116 0.228 0.031 0.246q0 0.357-0.25 0.607t-0.607 0.25q-0.134 0-0.246-0.031t-0.228-0.116-0.17-0.134-0.192-0.192-0.165-0.17q-0.295 0.277-0.295 0.652 0 0.357 0.25 0.607l1.839 1.848q0.241 0.241 0.607 0.241 0.357 0 0.607-0.232l1.313-1.304q0.25-0.25 0.25-0.598zM7.224 5.134q0-0.357-0.25-0.607l-1.839-1.848q-0.25-0.25-0.607-0.25-0.348 0-0.607 0.241l-1.313 1.304q-0.25 0.25-0.25 0.598 0 0.357 0.25 0.607l1.857 1.857q0.241 0.241 0.607 0.241 0.375 0 0.643-0.277-0.027-0.027-0.17-0.165t-0.192-0.192-0.134-0.17-0.116-0.228-0.031-0.246q0-0.357 0.25-0.607t0.607-0.25q0.134 0 0.246 0.031t0.228 0.116 0.17 0.134 0.192 0.192 0.165 0.17q0.295-0.277 0.295-0.652zM15.215 11.429q0 1.071-0.759 1.813l-1.313 1.304q-0.741 0.741-1.813 0.741-1.080 0-1.821-0.759l-1.839-1.848q-0.741-0.741-0.741-1.813 0-1.098 0.786-1.866l-0.786-0.786q-0.768 0.786-1.857 0.786-1.071 0-1.821-0.75l-1.857-1.857q-0.75-0.75-0.75-1.821t0.759-1.813l1.313-1.304q0.741-0.741 1.813-0.741 1.080 0 1.821 0.759l1.839 1.848q0.741 0.741 0.741 1.813 0 1.098-0.786 1.866l0.786 0.786q0.768-0.786 1.857-0.786 1.071 0 1.821 0.75l1.857 1.857q0.75 0.75 0.75 1.821z\"","15","        \/>","16","      <\/svg>","17","    <\/a>"],"delete":["4","    <a class=\"coding-rules-detail-permalink icon-link spacer-left\" target=\"_blank\" href=\"{{permalink}}\"","5","       data-toggle=\"tooltip\" data-placement=\"left\" title=\"Rule permalink\"><\/a>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.js":[{"add":["29","import LinkIcon from '..\/..\/..\/components\/icons-components\/LinkIcon';","92","            <Link","93","              to={{ pathname: '\/web_api\/' + actionKey }}","94","              className=\"spacer-right link-no-underline\">","95","              <LinkIcon \/>","96","            <\/Link>"],"delete":["91","            <Link to={{ pathname: '\/web_api\/' + actionKey }} className=\"spacer-right icon-link\" \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.js.snap":[{"add":["65","              className=\"js-issue-permalink link-no-underline\"","80","            >","81","              <LinkIcon \/>","82","            <\/Link>","154","              className=\"js-issue-permalink link-no-underline\"","169","            >","170","              <LinkIcon \/>","171","            <\/Link>"],"delete":["65","              className=\"js-issue-permalink icon-link\"","80","            \/>","152","              className=\"js-issue-permalink icon-link\"","167","            \/>"]}]}},"24bf49516a4cf103fdb4009954587353cc5af3d3":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeCommandsTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["268","  void deleteComponentsByMainBranchProjectUuid(String uuid) {","269","    profiler.start(\"deleteComponentsByMainBranchProjectUuid (projects)\");","270","    purgeMapper.deleteComponentsByMainBranchProjectUuid(uuid);","271","    session.commit();","272","    profiler.stop();","273","  }","274",""],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["225","    <delete id=\"deleteComponentsByMainBranchProjectUuid\" parameterType=\"map\">","226","    delete from components","227","    where","228","      main_branch_project_uuid = #{uuid,jdbcType=VARCHAR}","229","  <\/delete>","230",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeCommandsTest.java":[{"add":["151","  @UseDataProvider(\"projects\")","152","  public void deleteComponentsByMainBranchProjectUuid_deletes_all_branches_of_a_project(OrganizationDto organizationDto, ComponentDto project) {","153","    dbTester.organizations().insert(organizationDto);","154","    dbTester.components().insertComponent(project);","155","    ComponentDto branch = dbTester.components().insertProjectBranch(project);","156","    Stream.of(project, branch).forEach(prj -> {","157","      ComponentDto module = dbTester.components().insertComponent(ComponentTesting.newModuleDto(prj));","158","      ComponentDto directory1 = dbTester.components().insertComponent(ComponentTesting.newDirectory(module, \"a\"));","159","      ComponentDto directory2 = dbTester.components().insertComponent(ComponentTesting.newDirectory(prj, \"b\"));","160","      dbTester.components().insertComponent(newFileDto(prj));","161","      dbTester.components().insertComponent(newFileDto(module));","162","      dbTester.components().insertComponent(newFileDto(directory1));","163","      dbTester.components().insertComponent(newFileDto(directory2));","164","    });","165","","166","    underTest.deleteComponentsByMainBranchProjectUuid(project.uuid());","167","","168","    assertThat(countComponentOfRoot(project)).isEqualTo(8);","169","    assertThat(countComponentOfRoot(branch)).isZero();","170","  }","171","","172","  @Test"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["70","  void deleteComponentsByMainBranchProjectUuid(@Param(\"uuid\") String uuid);","71",""],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["209","    commands.deleteComponentsByMainBranchProjectUuid(rootUuid);"],"delete":[]}]}},"c839d88af83ce551bd171703ec0902b1e79b3db1":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.js":[{"add":["77","    let locationMessage = undefined;","78","    let locationLine = undefined;","79","    if (","83","    ) {","84","      locationMessage = {","85","        index: selectedLocationIndex,","86","        text: locations[selectedLocationIndex].msg","87","      };","88","      locationLine = locations[selectedLocationIndex].textRange.startLine;","89","    }","90","","91","    \/\/ if location is selected, show (and load) code around it","92","    \/\/ otherwise show code around the open issue","93","    const aroundLine = locationLine || (openIssue.textRange && openIssue.textRange.endLine);","98","          aroundLine={aroundLine}"],"delete":["77","    const locationMessage =","81","        ? { index: selectedLocationIndex, text: locations[selectedLocationIndex].msg }","82","        : undefined;","87","          aroundLine={openIssue.textRange ? openIssue.textRange.endLine : undefined}"]}]}},"39db83f50fc00ad01b2ed898bf6a8b39b51f4c9c":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ws\/SearchAction.java":[{"add":["94","        \"Field 'tokensCount' is only accessible to System Administrator and logged in user.<br\/>\" +","155","      setIfNeeded(isNeeded(FIELD_TOKENS_COUNT, fields) && user.getLogin().equals(userSession.getLogin()), tokensCount, userBuilder::setTokensCount);","164","      setIfNeeded(FIELD_TOKENS_COUNT, fields, tokensCount, userBuilder::setTokensCount);"],"delete":["154","      setIfNeeded(FIELD_TOKENS_COUNT, fields, tokensCount, userBuilder::setTokensCount);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/SearchActionTest.java":[{"add":["135","  public void return_tokens_count_for_logged_user() {","140","","142","    assertThat(ws.newRequest()","143","        .executeProtobuf(SearchWsResponse.class).getUsersList())","144","        .extracting(User::getLogin, User::hasTokensCount)","145","        .containsExactlyInAnyOrder(tuple(user.getLogin(), false));","147","    userSession.logIn(user);","148","    assertThat(ws.newRequest()","149","        .executeProtobuf(SearchWsResponse.class).getUsersList())","150","        .extracting(User::getLogin, User::getTokensCount)","151","        .containsExactlyInAnyOrder(tuple(user.getLogin(), 2));","152","  }","154","  @Test","155","  public void return_tokens_count_when_system_administer() {","156","    UserDto user = db.users().insertUser();","157","    db.users().insertToken(user);","158","    db.users().insertToken(user);","159","    userIndexer.indexOnStartup(null);","160","","161","    userSession.logIn().setSystemAdministrator();","162","    assertThat(ws.newRequest()","163","      .executeProtobuf(SearchWsResponse.class).getUsersList())","164","        .extracting(User::getLogin, User::getTokensCount)","165","        .containsExactlyInAnyOrder(tuple(user.getLogin(), 2));","166","","167","    userSession.logIn();","168","    assertThat(ws.newRequest()","169","        .executeProtobuf(SearchWsResponse.class).getUsersList())","170","        .extracting(User::getLogin, User::hasTokensCount)","171","        .containsExactlyInAnyOrder(tuple(user.getLogin(), false));"],"delete":["135","  public void return_tokens_count() {","142","    SearchWsResponse response = ws.newRequest()","143","      .executeProtobuf(SearchWsResponse.class);","145","    assertThat(response.getUsersList())","146","      .extracting(User::getLogin, User::getTokensCount)","147","      .containsExactlyInAnyOrder(tuple(user.getLogin(), 2));"]}]}},"d050cbd64722be89211c33d76995d37f8d6477f8":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/NewIndex.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/NewIndex.java":[{"add":["234","      Map<String, String> hash = new TreeMap<>();","235","      hash.put(\"type\", \"date\");","236","      hash.put(\"format\", \"date_time||epoch_second\");","237","      return setProperty(fieldName, hash);","356","      Map<String, Object> hash = new TreeMap<>();","357","      hash.put(\"type\", getFieldType());","358","      hash.put(INDEX, disableSearch ? INDEX_NOT_SEARCHABLE : INDEX_SEARCHABLE);","359","      hash.put(\"norms\", valueOf(!disableNorms));","360","      hash.put(\"store\", valueOf(store));","367","      return indexType.setProperty(fieldName, hash);","401","      Map<String, String> subHash = new TreeMap<>();","402","      subHash.put(\"type\", getFieldType());","403","      subHash.put(INDEX, INDEX_SEARCHABLE);","404","      subHash.put(\"norms\", \"false\");","405","      subHash.put(\"store\", valueOf(store));","407","        subHash.put(\"doc_values\", valueOf(!disabledDocValues));","409","      multiFields.put(fieldName, subHash);","497","      return setProperty(fieldName, ImmutableSortedMap.of(","513","      return indexType.setProperty(fieldName, ImmutableSortedMap.of(","514","        \"type\", \"nested\",","515","        \"properties\", properties));"],"delete":["234","      return setProperty(fieldName, ImmutableMap.of(\"type\", \"date\", \"format\", \"date_time||epoch_second\"));","353","      ImmutableMap.Builder<String, String> hash = ImmutableMap.builder();","354","      hash.put(\"type\", getFieldType())","355","        .put(INDEX, disableSearch ? INDEX_NOT_SEARCHABLE : INDEX_SEARCHABLE)","356","        .put(\"norms\", valueOf(!disableNorms))","357","        .put(\"store\", valueOf(store));","364","      return indexType.setProperty(fieldName, hash.build());","398","      ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();","399","      builder.put(\"type\", getFieldType())","400","        .put(INDEX, INDEX_SEARCHABLE)","401","        .put(\"norms\", \"false\")","402","        .put(\"store\", valueOf(store));","404","        builder.put(\"doc_values\", valueOf(!disabledDocValues));","406","      multiFields.put(fieldName, builder.build());","494","      return setProperty(fieldName, ImmutableMap.of(","509","      Map<String, Object> hash = new TreeMap<>();","510","      hash.put(\"type\", \"nested\");","511","      hash.put(\"properties\", properties);","513","      return indexType.setProperty(fieldName, hash);"]}]}},"a2c9177fd9e0f72b38cacdba32ab5cf1a9c22fcb":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectsList-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectsList-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectsList.tsx":"MODIFY","server\/sonar-web\/__mocks__\/react-virtualized\/dist\/commonjs\/WindowScroller.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/GraphHistory-test.tsx.snap":"MODIFY","server\/sonar-web\/__mocks__\/react-virtualized\/dist\/commonjs\/AutoSizer.ts":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectsList-test.tsx":[{"add":["21","import { ListRowProps } from 'react-virtualized';","22","import { AutoSizer } from 'react-virtualized\/dist\/commonjs\/AutoSizer';","23","import { WindowScroller } from 'react-virtualized\/dist\/commonjs\/WindowScroller';","26","jest.mock('react-virtualized\/dist\/commonjs\/AutoSizer');","27","jest.mock('react-virtualized\/dist\/commonjs\/WindowScroller');","28","","29","it('renders correctly', () => {","30","  const wrapper = shallowRender();","31","  expect(","32","    wrapper","33","      .find(WindowScroller)","34","      .dive()","35","      .find(AutoSizer)","36","      .dive()","37","  ).toMatchSnapshot('list element');","38","","39","  expect(","40","    wrapper.instance().renderRow({ index: 0, key: 'foo-key', style: {} } as ListRowProps)","41","  ).toMatchSnapshot('row element');","51","  return shallow<ProjectsList>("],"delete":["23","it('renders', () => {","24","  expect(shallowRender()).toMatchSnapshot();","34","  return shallow("]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectsList-test.tsx.snap":[{"add":["2","exports[`renders correctly: list element 1`] = `","3","<div>","4","  <List","5","    aria-label=\"project_plural\"","6","    autoHeight={true}","7","    estimatedRowSize={30}","8","    height={200}","9","    isScrolling={false}","10","    noRowsRenderer={[Function]}","11","    onRowsRendered={[Function]}","13","    overscanIndicesGetter={[Function]}","14","    overscanRowCount={2}","15","    rowCount={2}","16","    rowHeight={163}","17","    rowRenderer={[Function]}","18","    scrollToAlignment=\"auto\"","19","    scrollToIndex={-1}","20","    scrollTop={0}","21","    style={","22","      Object {","23","        \"outline\": \"none\",","24","      }","25","    }","26","    width={200}","27","  \/>","28","<\/div>","29","`;","30","","31","exports[`renders correctly: row element 1`] = `","32","<div","33","  role=\"row\"","34","  style={","35","    Object {","36","      \"height\": 143,","37","    }","38","  }","39",">","40","  <div","41","    role=\"gridcell\"","43","    <ProjectCard","44","      currentUser={","45","        Object {","46","          \"isLoggedIn\": true,","47","        }","48","      }","49","      height={143}","50","      project={","51","        Object {","52","          \"key\": \"foo\",","53","          \"name\": \"Foo\",","54","        }","55","      }","56","      type=\"overall\"","57","    \/>","58","  <\/div>"],"delete":["2","exports[`renders 1`] = `","3","<div","4","  className=\"projects-list\"","5",">","6","  <WindowScroller","7","    onResize={[Function]}","9","    scrollElement={[Window]}","10","    scrollingResetTimeInterval={150}","11","    serverHeight={0}","12","    serverWidth={0}","14","    <Component \/>","15","  <\/WindowScroller>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectsList.tsx":[{"add":["23","import { translate } from 'sonar-ui-common\/helpers\/l10n';","77","      <div key={key} role=\"row\" style={{ ...style, height }}>","78","        <div role=\"gridcell\">","79","          <ProjectCard","80","            currentUser={this.props.currentUser}","81","            handleFavorite={this.props.handleFavorite}","82","            height={height}","83","            key={project.key}","84","            organization={this.props.organization}","85","            project={project}","86","            type={this.props.cardType}","87","          \/>","88","        <\/div>","102","                  aria-label={translate('project_plural')}"],"delete":["76","      <div key={key} style={{ ...style, height }}>","77","        <ProjectCard","78","          currentUser={this.props.currentUser}","79","          handleFavorite={this.props.handleFavorite}","80","          height={height}","81","          key={project.key}","82","          organization={this.props.organization}","83","          project={project}","84","          type={this.props.cardType}","85","        \/>"]}],"server\/sonar-web\/__mocks__\/react-virtualized\/dist\/commonjs\/WindowScroller.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/GraphHistory-test.tsx.snap":[{"add":["34","    <AutoSizer>"],"delete":["34","    <AutoSizer","35","      disableHeight={false}","36","      disableWidth={false}","37","      onResize={[Function]}","38","      style={Object {}}","39","    >"]}],"server\/sonar-web\/__mocks__\/react-virtualized\/dist\/commonjs\/AutoSizer.ts":[{"add":[],"delete":[]}]}},"c87a24252f272406260a8e407600ace50885cf90":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigrationH2Test.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigration.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigrationTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigrationH2Test\/schema_migrations.sql":"ADD"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigrationH2Test.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigration.java":[{"add":["23","import java.sql.PreparedStatement;","24","import java.sql.SQLException;","70","      createH2Schema(connection, dbClient.getDatabase().getDialect().getId());","77","  protected void createH2Schema(Connection connection, String dialectId) {","79","    hackFixForProjectMeasureTreeQueries(connection);","80","  }","81","","82","  \/**","83","   * see SONAR-8586","84","   *\/","85","  private static void hackFixForProjectMeasureTreeQueries(Connection connection) {","86","    int metricId = 1;","87","    try (PreparedStatement preparedStatement = connection.prepareStatement(\"insert into PROJECT_MEASURES (METRIC_ID,COMPONENT_UUID,ANALYSIS_UUID) values (?,?,?);\")) {","88","      for (int i = 1; i < 1000; i++) {","89","        preparedStatement.setInt(1, metricId);","90","        preparedStatement.setString(2, \"foo_\" + i);","91","        preparedStatement.setString(3, \"bar_\" + i);","92","        preparedStatement.addBatch();","93","        if (i % 250 == 0) {","94","          preparedStatement.executeBatch();","95","          connection.commit();","96","        }","97","      }","98","      preparedStatement.executeBatch();","99","      connection.commit();","100","    } catch (SQLException e) {","101","      throw new RuntimeException(\"Failed to insert fake rows into table PROJECT_MEASURES\", e);","102","    }"],"delete":["68","      createSchema(connection, dbClient.getDatabase().getDialect().getId());","75","  protected void createSchema(Connection connection, String dialectId) {"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigrationTest.java":[{"add":["60","    protected void createH2Schema(Connection connection, String dialectId) {","61","      \/\/ do nothing"],"delete":["60","    protected void createSchema(Connection connection, String dialectId) {"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/AutoDbMigrationH2Test\/schema_migrations.sql":[{"add":[],"delete":[]}]}},"35428013060d9fb81e7119426e9bfe9858521d4a":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/config\/CorePropertyDefinitionsTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/config\/CorePropertyDefinitions.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImplTest.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/config\/CorePropertyDefinitionsTest.java":[{"add":["32","    assertThat(defs).hasSize(54);"],"delete":["32","    assertThat(defs).hasSize(58);"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/config\/CorePropertyDefinitions.java":[{"add":[],"delete":["71","      PropertyDefinition.builder(CoreProperties.LINKS_HOME_PAGE)","72","        .name(\"Project Home Page\")","73","        .description(\"HTTP URL of the home page of the project.\")","74","        .hidden()","75","        .build(),","76","      PropertyDefinition.builder(CoreProperties.LINKS_CI)","77","        .name(\"CI server\")","78","        .description(\"HTTP URL of the continuous integration server.\")","79","        .category(CoreProperties.CATEGORY_GENERAL)","80","        .build(),","81","      PropertyDefinition.builder(CoreProperties.LINKS_ISSUE_TRACKER)","82","        .name(\"Issue Tracker\")","83","        .description(\"HTTP URL of the issue tracker.\")","84","        .category(CoreProperties.CATEGORY_GENERAL)","85","        .hidden()","86","        .build(),","87","      PropertyDefinition.builder(CoreProperties.LINKS_SOURCES)","88","        .name(\"SCM server\")","89","        .description(\"HTTP URL of the server which hosts the sources of the project.\")","90","        .category(CoreProperties.CATEGORY_GENERAL)","91","        .build(),"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImplTest.java":[{"add":["125","          + 54 \/\/ content of CorePropertyDefinitions"],"delete":["125","          + 58 \/\/ content of CorePropertyDefinitions"]}]}},"1e44d80e9c900ac61274c7c3ada3c4c2df3e10ee":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/activity-graph\/AddGraphMetric.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/activity-graph\/__tests__\/__snapshots__\/AddGraphMetric-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/activity-graph\/AddGraphMetric.tsx":[{"add":["128","        closeOnClick={false}","129","        closeOnClickOutside={true}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/activity-graph\/__tests__\/__snapshots__\/AddGraphMetric-test.tsx.snap":[{"add":["5","  closeOnClick={false}","6","  closeOnClickOutside={true}"],"delete":[]}]}},"4bba4b305c806a47c6fcc39d41f7e57a44c4072e":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/period\/NewCodePeriodResolver.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/period\/NewCodePeriodResolver.java":[{"add":["83","    return newPeriod(NewCodePeriodType.SPECIFIC_ANALYSIS, value, baseline.getCreatedAt());","95","    if (versions.size() == 1 && projectVersion.equals(mostRecentVersion)) {","98","","110","    return newPeriod(NewCodePeriodType.NUMBER_OF_DAYS, String.valueOf((int) days), snapshot.getCreatedAt());","122","      .map(dto -> newPeriod(NewCodePeriodType.PREVIOUS_VERSION, null, dto.getCreatedAt()));","129","      .map(dto -> newPeriod(NewCodePeriodType.PREVIOUS_VERSION, dto.getProjectVersion(), dto.getCreatedAt()));","137","  private static Period newPeriod(NewCodePeriodType type, @Nullable String value, long date) {","138","    return new Period(type.name(), value, date);"],"delete":["83","    return newPeriod(NewCodePeriodType.SPECIFIC_ANALYSIS, value, Instant.ofEpochMilli(baseline.getCreatedAt()));","95","    if (versions.size() == 1) {","109","    return newPeriod(NewCodePeriodType.NUMBER_OF_DAYS, String.valueOf((int) days), Instant.ofEpochMilli(snapshot.getCreatedAt()));","121","      .map(dto -> newPeriod(NewCodePeriodType.PREVIOUS_VERSION, null, Instant.ofEpochMilli(dto.getCreatedAt())));","128","      .map(dto -> newPeriod(NewCodePeriodType.PREVIOUS_VERSION, dto.getProjectVersion(), Instant.ofEpochMilli(dto.getCreatedAt())));","136","  private static Period newPeriod(NewCodePeriodType type, @Nullable String value, Instant instant) {","137","    return new Period(type.name(), value, instant.toEpochMilli());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":[{"add":["290","    dbTester.events().insertEvent(newEvent(analysis5).setName(\"1.1\").setCategory(CATEGORY_VERSION).setDate(analysis5.getCreatedAt()));","302","  public void load_previous_version_when_version_is_changing() {","303","    SnapshotDto analysis1 = dbTester.components().insertSnapshot(project, snapshot -> snapshot.setCreatedAt(1226379600000L).setProjectVersion(\"0.9\").setLast(false)); \/\/ 2008-11-11","304","    SnapshotDto analysis2 = dbTester.components().insertSnapshot(project, snapshot -> snapshot.setCreatedAt(1226494680000L).setProjectVersion(\"0.9\").setLast(true)); \/\/ 2008-11-12","305","","306","    dbTester.events().insertEvent(newEvent(analysis2).setName(\"0.9\").setCategory(CATEGORY_VERSION).setDate(analysis2.getCreatedAt()));","307","    setupRoot(project, \"1.0\");","308","    setProjectPeriod(project.uuid(), NewCodePeriodType.PREVIOUS_VERSION, null);","309","","310","    underTest.execute(new TestComputationStepContext());","311","","312","    assertPeriod(NewCodePeriodType.PREVIOUS_VERSION, \"0.9\", analysis2.getCreatedAt());","313","","314","    verifyDebugLogs(\"Resolving new code period by previous version: 0.9\");","315","  }","316","","317","  @Test","331","    SnapshotDto analysis3 = dbTester.components().insertSnapshot(project, snapshot -> snapshot.setCreatedAt(1227157200000L).setProjectVersion(\"1.1\").setLast(true)); \/\/ 2008-11-20","366","    assertPeriod(NewCodePeriodType.PREVIOUS_VERSION, \"0.9\", analysis.getCreatedAt());","367","    verifyDebugLogs(\"Resolving new code period by previous version: 0.9\");","394","    return new Object[][] {","402","    return new Object[][] {","414","    return new Object[][] {","422","    return new Object[][] {"],"delete":["290","    dbTester.events().insertEvent(newEvent(analysis5).setName(\"1.1\").setCategory(CATEGORY_VERSION).setDate(analysis4.getCreatedAt()));","315","    SnapshotDto analysis3 = dbTester.components().insertSnapshot(project, snapshot -> snapshot.setCreatedAt(1227157200000L).setProjectVersion(\"1.1\").setLast(false)); \/\/ 2008-11-20","318","    dbTester.events().insertEvent(newEvent(analysis3).setName(\"1.1\").setCategory(CATEGORY_VERSION));","351","    assertPeriod(NewCodePeriodType.PREVIOUS_VERSION, null, analysis.getCreatedAt());","352","    verifyDebugLogs(\"Resolving first analysis as new code period as there is only one existing version\");","379","    return new Object[][]{","387","    return new Object[][]{","399","    return new Object[][]{","407","    return new Object[][]{"]}]}},"d11fb8ece1a77f028a7ba95004df46ce725a0c00":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/DefinitionActions-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/InputForPassword.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/__tests__\/InputForPassword-test.js":"MODIFY","tests\/build.gradle":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/__snapshots__\/DefinitionActions-test.tsx.snap":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/settings\/SettingsSuite.java":"ADD","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/settings\/SettingsPage.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/settings\/ValidatorsTest.java":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/DefinitionActions-test.tsx":[{"add":["76","      hasValueChanged={changedValue !== ''}"],"delete":["71","it('displays default value label when current value differs', () => {","72","  const wrapper = shallowRender('foobar', true, false);","73","  expect(wrapper).toMatchSnapshot();","74","});","75",""]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/InputForPassword.js":[{"add":["31","  componentWillReceiveProps(nextProps \/*: Props*\/) {","32","    if (!nextProps.hasValueChanged && this.props.hasValueChanged) {","33","      this.setState({ changing: false, value: '' });","34","    }","35","  }","36","","38","    this.props.onChange(e.target.value);","39","    this.setState({ changing: true, value: e.target.value });","50","      <form>","51","        <input className=\"hidden\" type=\"password\" \/>","52","        <input","53","          autoComplete=\"off\"","54","          autoFocus={this.state.changing}","55","          className=\"js-password-input settings-large-input text-top\"","56","          name={this.props.name}","57","          onChange={e => this.handleInputChange(e)}","58","          type=\"password\"","59","          value={this.state.value}","60","        \/>","61","      <\/form>","66","    const hasValue = !!this.props.value;","67","","68","    if (this.state.changing || !hasValue) {","74","        <i className=\"big-spacer-right icon-lock icon-gray\" \/>","75","        <button onClick={e => this.handleChangeClick(e)}>{translate('change_verb')}<\/button>"],"delete":["32","    this.setState({ value: e.target.value });","41","  handleCancelChangeClick(e) {","42","    e.preventDefault();","43","    e.target.blur();","44","    this.setState({ changing: false, value: '' });","45","  }","46","","47","  handleFormSubmit(e) {","48","    e.preventDefault();","49","    this.props.onChange(this.state.value);","50","    this.setState({ changing: false, value: '' });","51","  }","52","","55","      <div>","56","        <form onSubmit={e => this.handleFormSubmit(e)}>","57","          <input className=\"hidden\" type=\"password\" \/>","58","          <input","59","            value={this.state.value}","60","            name={this.props.name}","61","            className=\"js-password-input settings-large-input text-top\"","62","            type=\"password\"","63","            autoFocus={true}","64","            autoComplete={false}","65","            onChange={e => this.handleInputChange(e)}","66","          \/>","67","","68","          <button className=\"spacer-left button-success\">{translate('save')}<\/button>","69","","70","          <a className=\"spacer-left\" href=\"#\" onClick={e => this.handleCancelChangeClick(e)}>","71","            {translate('cancel')}","72","          <\/a>","73","        <\/form>","74","      <\/div>","79","    if (this.state.changing) {","83","    const hasValue = !!this.props.value;","84","","87","        {hasValue && <i className=\"big-spacer-right icon-lock icon-gray\" \/>}","88","","89","        <button onClick={e => this.handleChangeClick(e)}>","90","          {hasValue ? translate('change_verb') : translate('set')}","91","        <\/button>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/__tests__\/InputForPassword-test.js":[{"add":[],"delete":["45","it('should close form', () => {","46","  const onChange = jest.fn();","47","  const input = shallow(","48","    <InputForPassword name=\"foo\" value=\"bar\" isDefault={false} onChange={onChange} \/>","49","  );","50","  const button = input.find('button');","51","  expect(button.length).toBe(1);","52","","53","  click(button);","54","  expect(input.find('form').length).toBe(1);","55","","56","  click(input.find('form').find('a'));","57","  expect(input.find('form').length).toBe(0);","58","});","59",""]}],"tests\/build.gradle":[{"add":["104","        includeTestsMatching 'org.sonarqube.tests.settings.*Suite'"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/__snapshots__\/DefinitionActions-test.tsx.snap":[{"add":["84","      className=\"spacer-right\"","87","      reset_verb"],"delete":["5","    className=\"spacer-top note\"","6","    style={","7","      Object {","8","        \"lineHeight\": \"24px\",","9","      }","10","    }","11","  >","12","    settings._default","13","  <\/div>","14","  <div","37","    className=\"spacer-top note\"","38","    style={","39","      Object {","40","        \"lineHeight\": \"24px\",","41","      }","42","    }","43","  >","44","    settings._default","45","  <\/div>","46","  <div","69","    className=\"spacer-top note\"","70","    style={","71","      Object {","72","        \"lineHeight\": \"24px\",","73","      }","74","    }","75","  >","76","    settings._default","77","  <\/div>","78","  <div","114","      className=\"spacer-right button-success\"","115","      disabled={false}","118","      save","119","    <\/Button>","120","    <Button","121","      className=\"spacer-right button-link\"","122","      onClick={[Function]}","123","    >","124","      cancel","125","    <\/Button>","126","  <\/div>","127","<\/React.Fragment>","128","`;","129","","130","exports[`displays default value label when current value differs 1`] = `","131","<React.Fragment>","132","  <div","133","    className=\"settings-definition-changes nowrap\"","134","  >","135","    <Button","136","      className=\"spacer-right button-success\"","137","      disabled={true}","138","      onClick={[Function]}","139","    >","140","      save","141","    <\/Button>","142","    <Button","143","      className=\"spacer-right button-link\"","144","      onClick={[Function]}","145","    >","146","      cancel","165","      className=\"spacer-right button-success\"","166","      disabled={true}","167","      onClick={[Function]}","168","    >","169","      save","170","    <\/Button>","171","    <Button","177","    <Button","178","      className=\"spacer-right button-link\"","179","      onClick={[Function]}","180","    >","181","      cancel","182","    <\/Button>","197","    className=\"spacer-top note\"","198","    style={","199","      Object {","200","        \"lineHeight\": \"24px\",","201","      }","202","    }","203","  >","204","    settings._default","205","  <\/div>","206","  <div"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/settings\/SettingsSuite.java":[{"add":[],"delete":[]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/settings\/SettingsPage.java":[{"add":["25","import org.openqa.selenium.Keys;","26","","27","import static com.codeborne.selenide.Selectors.byText;","60","  public SettingsPage assertSettingValueIsNotedAsDefault(String settingKey) {","61","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(\".spacer-top.note\")","62","      .shouldBe(Condition.text(\"(default)\"));","63","    return this;","64","  }","65","","76","  public SettingsPage assertSettingValueCanBeSaved(String settingKey) {","77","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(byText(\"Save\"))","78","      .should(Condition.exist)","79","      .shouldNotBe(Condition.attribute(\"disabled\"));","80","    return this;","81","  }","82","","83","  public SettingsPage assertSettingValueCannotBeSaved(String settingKey) {","84","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(byText(\"Save\"))","85","      .should(Condition.exist)","86","      .shouldBe(Condition.attribute(\"disabled\"));","87","    return this;","88","  }","89","","90","  public SettingsPage assertSettingValueCanBeReset(String settingKey) {","91","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(byText(\"Reset\"))","92","      .should(Condition.exist);","93","    return this;","94","  }","95","","96","  public SettingsPage assertSettingValueCanBeCanceled(String settingKey) {","97","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(byText(\"Cancel\"))","98","      .should(Condition.exist);","99","    return this;","100","  }","101","","102","  public SettingsPage assertInputCount(String settingKey, int count) {","103","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").findAll(\"input\").shouldHaveSize(count);","104","    return this;","105","  }","106","","107","  public SettingsPage changeSettingValue(String settingKey, String value) {","108","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(\"input\").val(value);","109","    return this;","110","  }","111","","112","  public SettingsPage changeSettingValue(String settingKey, int index, String value) {","113","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").findAll(\"input\").get(index).val(value);","114","    return this;","115","  }","116","","117","  public SettingsPage clickOnCancel(String settingKey) {","118","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(byText(\"Cancel\")).click();","119","    return this;","120","  }","121","","122","  public SettingsPage removeFirstValue(String settingKey) {","123","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(\".button.js-remove-value.button-icon\").click();","124","    return this;","125","  }","126","","127","  public SettingsPage sendDeleteKeyToSettingField(String settingKey) {","128","    Selenide.$(\"[data-key=\\\"\" + settingKey + \"\\\"]\").find(\"input\").sendKeys(Keys.BACK_SPACE);","129","    return this;","130","  }","131",""],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/settings\/ValidatorsTest.java":[{"add":[],"delete":[]}]}},"ee55e4492b069f30e5c25fa51e92170412f006d5":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/ws\/MetricDtoToWsMetric.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/ComponentTreeActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/ws\/MetricDtoToWsMetric.java":[{"add":["24","import static org.sonar.core.util.Protobuf.setNullable;","37","    setNullable(metricDto.getDescription(), metric::setDescription);","38","    setNullable(metricDto.getDomain(), metric::setDomain);","45","    setNullable(metricDto.getDecimalScale(), metric::setDecimalScale);","46","    setNullable(metricDto.getBestValue(), bv -> metric.setBestValue(formatNumericalValue(bv, metricDto)));","47","    setNullable(metricDto.getWorstValue(), wv -> metric.setWorstValue(formatNumericalValue(wv, metricDto)));"],"delete":["36","    if (metricDto.getDescription() != null) {","37","      metric.setDescription(metricDto.getDescription());","38","    }","39","    metric.setDomain(metricDto.getDomain());","46","    if (metricDto.getDecimalScale() != null) {","47","      metric.setDecimalScale(metricDto.getDecimalScale());","48","    }","49","    if (metricDto.getBestValue() != null) {","50","      metric.setBestValue(formatNumericalValue(metricDto.getBestValue(), metricDto));","51","    }","52","    if (metricDto.getWorstValue() != null) {","53","      metric.setWorstValue(formatNumericalValue(metricDto.getWorstValue(), metricDto));","54","    }"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/ComponentActionTest.java":[{"add":["25","import org.sonar.api.measures.Metric.ValueType;","28","import org.sonar.api.server.ws.WebService.Param;","44","import org.sonarqube.ws.Common;","54","import static org.sonar.db.component.SnapshotTesting.newAnalysis;","86","  public void definition() {","90","    assertThat(def.params()).extracting(Param::key)","155","  public void metric_without_a_domain() {","156","    ComponentDto project = db.components().insertPrivateProject();","157","    SnapshotDto analysis = db.getDbClient().snapshotDao().insert(dbSession, newAnalysis(project));","158","    MetricDto metricWithoutDomain = db.measureDbTester().insertMetric(m -> m","159","      .setValueType(ValueType.INT.name())","160","      .setDomain(null));","161","    db.measureDbTester().insertMeasure(project, analysis, metricWithoutDomain);","162","","163","    ComponentWsResponse response = ws.newRequest()","164","      .setParam(PARAM_COMPONENT_KEY, project.getKey())","165","      .setParam(PARAM_METRIC_KEYS, metricWithoutDomain.getKey())","166","      .setParam(PARAM_ADDITIONAL_FIELDS, \"metrics\")","167","      .executeProtobuf(ComponentWsResponse.class);","168","","169","    assertThat(response.getComponent().getMeasures(0).getMetric()).isEqualTo(metricWithoutDomain.getKey());","170","    Common.Metric responseMetric = response.getMetrics().getMetrics(0);","171","    assertThat(responseMetric.getKey()).isEqualTo(metricWithoutDomain.getKey());","172","    assertThat(responseMetric.hasDomain()).isFalse();","173","  }","174","","175","  @Test"],"delete":["82","  public void test_definition_of_web_service() {","86","    assertThat(def.params()).extracting(WebService.Param::key)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/ComponentTreeActionTest.java":[{"add":["28","import org.sonar.api.measures.Metric;","435","  public void metric_without_a_domain() {","436","    ComponentDto project = db.components().insertPrivateProject();","437","    SnapshotDto analysis = db.getDbClient().snapshotDao().insert(dbSession, newAnalysis(project));","438","    MetricDto metricWithoutDomain = db.measureDbTester().insertMetric(m -> m","439","      .setValueType(Metric.ValueType.INT.name())","440","      .setDomain(null));","441","    db.measureDbTester().insertMeasure(project, analysis, metricWithoutDomain);","442","","443","    ComponentTreeWsResponse result = ws.newRequest()","444","      .setParam(PARAM_BASE_COMPONENT_KEY, project.getKey())","445","      .setParam(PARAM_METRIC_KEYS, metricWithoutDomain.getKey())","446","      .setParam(PARAM_ADDITIONAL_FIELDS, \"metrics\")","447","      .executeProtobuf(ComponentTreeWsResponse.class);","448","","449","    assertThat(result.getBaseComponent().getMeasures(0).getMetric()).isEqualTo(metricWithoutDomain.getKey());","450","    Common.Metric responseMetric = result.getMetrics().getMetrics(0);","451","    assertThat(responseMetric.getKey()).isEqualTo(metricWithoutDomain.getKey());","452","    assertThat(responseMetric.hasDomain()).isFalse();","453","  }","454","","455","  @Test"],"delete":[]}]}},"79960d4a9de4b9dfce800c45b24816d30bd0d4d3":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/DirectoryFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/DirectoryFacet-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/DirectoryFacet.tsx":[{"add":["55","    return directory.path;"],"delete":["55","    return directory.name;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/DirectoryFacet-test.tsx":[{"add":["72","    expect(instance.getSearchResultText({ path: 'bar' } as TreeComponentWithPath)).toBe('bar');"],"delete":["72","    expect(instance.getSearchResultText({ name: 'bar' } as TreeComponentWithPath)).toBe('bar');"]}]}},"96672b1c1ab448e71507d1ba983b8a125af2cee7":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchMyOrganizationsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchMyOrganizationsAction.java":[{"add":["59","    try (DbSession dbSession = dbClient.openSession(false)) {","60","      JsonWriter json = response.newJsonWriter();","61","      json.beginObject();","62","      json.name(\"organizations\").beginArray();","64","        .forEach(dto -> json.value(dto.getKey()));","65","      json.endArray();","66","      json.endObject();","67","      json.close();"],"delete":["59","    try (DbSession dbSession = dbClient.openSession(false);","60","      JsonWriter jsonWriter = response.newJsonWriter()) {","61","      jsonWriter.beginObject();","62","      jsonWriter.name(\"organizations\").beginArray();","64","        .forEach(dto -> jsonWriter.value(dto.getKey()));","65","      jsonWriter.endArray();","66","      jsonWriter.endObject();"]}]}},"8adaa6faef1a9f78663be3656cf0007903c9c6cb":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":[{"add":["225","              key={`${this.props.issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}"],"delete":["225","              key={`${this.props.issue.key}-${this.props.selectedFlowIndex}-${i}`}"]}]}},"0c2f6292c648f0ab951f6fe2700d6e445464e3bf":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddGroupAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/WsParameters.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddUserAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveGroupAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveUserAction.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddGroupAction.java":[{"add":["68","      .setDescription(\"Add a permission to a group.<br \/> \" +","82","    wsParameters.createPermissionParameter(action, \"The permission you would like to grant to the group.\");"],"delete":["68","      .setDescription(\"Add permission to a group.<br \/> \" +","82","    wsParameters.createPermissionParameter(action);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/WsParameters.java":[{"add":["50","    permissionParamDescription = String.format(\"<ul>\" +","51","        \"<li>Possible values for global permissions: %s<\/li>\" +","52","        \"<li>Possible values for project permissions %s<\/li>\" +","53","        \"<\/ul>\",","57","        \"<ul>\" +","58","        \"<li>Possible values for project permissions %s<\/li>\" +","59","        \"<\/ul>\",","64","    return createPermissionParameter(action, \"Permission.\");","65","  }","66","","67","  public WebService.NewParam createPermissionParameter(WebService.NewAction action, String descriptionHeader) {","69","      .setDescription(descriptionHeader + permissionParamDescription)"],"delete":["50","    permissionParamDescription = String.format(\"Permission\" +","51","      \"<ul>\" +","52","      \"<li>Possible values for global permissions: %s<\/li>\" +","53","      \"<li>Possible values for project permissions %s<\/li>\" +","54","      \"<\/ul>\",","58","      \"<ul>\" +","59","      \"<li>Possible values for project permissions %s<\/li>\" +","60","      \"<\/ul>\",","66","      .setDescription(permissionParamDescription)"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddUserAction.java":[{"add":["86","    wsParameters.createPermissionParameter(action, \"The permission you would like to grant to the user\");"],"delete":["86","    wsParameters.createPermissionParameter(action);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveGroupAction.java":[{"add":["82","    wsParameters.createPermissionParameter(action, \"The permission you would like to revoke from the group.\");"],"delete":["82","    wsParameters.createPermissionParameter(action);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveUserAction.java":[{"add":["80","    wsParameters.createPermissionParameter(action, \"The permission you would like to revoke from the user.\");"],"delete":["80","    wsParameters.createPermissionParameter(action);"]}]}},"75f327a6a5fae38e2d1ccf1e5ee83555da7953dc":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":[{"add":["63","    permissionTemplateService,","64","    new FavoriteUpdater(db.getDbClient()),","65","    projectIndexer);","127","      NewComponent.newComponentBuilder()","128","        .setKey(DEFAULT_PROJECT_KEY)","129","        .setName(DEFAULT_PROJECT_NAME)","130","        .setBranch(\"origin\/master\")","131","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","132","        .build(),","133","      null);","142","      .setKey(DEFAULT_PROJECT_KEY)","143","      .setName(DEFAULT_PROJECT_NAME)","144","      .setOrganizationUuid(db.getDefaultOrganization().getUuid())","145","      .build();","155","      .setKey(DEFAULT_PROJECT_KEY)","156","      .setName(DEFAULT_PROJECT_NAME)","157","      .setOrganizationUuid(db.getDefaultOrganization().getUuid())","158","      .build();","160","      .thenReturn(true);","163","      project,","164","      userDto.getId());","172","      NewComponent.newComponentBuilder()","173","        .setKey(DEFAULT_PROJECT_KEY)","174","        .setName(DEFAULT_PROJECT_NAME)","175","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","176","        .build(),","177","      null);","185","      NewComponent.newComponentBuilder()","186","        .setKey(DEFAULT_PROJECT_KEY)","187","        .setName(DEFAULT_PROJECT_NAME)","188","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","189","        .build(),","190","      null);","203","      NewComponent.newComponentBuilder()","204","        .setKey(existing.key())","205","        .setName(DEFAULT_PROJECT_NAME)","206","        .setOrganizationUuid(existing.getOrganizationUuid())","207","        .build(),","208","      null);","219","      NewComponent.newComponentBuilder()","220","        .setKey(existing.key())","221","        .setName(DEFAULT_PROJECT_NAME)","222","        .setOrganizationUuid(existing.getOrganizationUuid())","223","        .build(),","224","      null);","233","      NewComponent.newComponentBuilder()","234","        .setKey(\"1234\")","235","        .setName(DEFAULT_PROJECT_NAME)","236","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","237","        .build(),","238","      null);","239","  }","240","","241","  @Test","242","  public void properly_fail_when_key_contains_percent_character() {","243","    expectedException.expect(BadRequestException.class);","244","    expectedException.expectMessage(\"Malformed key for Project: project%Key\");","245","","246","    underTest.create(db.getSession(),","247","      NewComponent.newComponentBuilder()","248","        .setKey(\"project%Key\")","249","        .setName(DEFAULT_PROJECT_NAME)","250","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","251","        .build(),","252","      null);","261","      NewComponent.newComponentBuilder()","262","        .setKey(DEFAULT_PROJECT_KEY)","263","        .setName(DEFAULT_PROJECT_NAME)","264","        .setBranch(\"origin?branch\")","265","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","266","        .build(),","267","      null);","273","      .setKey(\"view-key\")","274","      .setName(\"view-name\")","275","      .setQualifier(VIEW)","276","      .setOrganizationUuid(db.getDefaultOrganization().getUuid())","277","      .build();"],"delete":["63","      permissionTemplateService,","64","      new FavoriteUpdater(db.getDbClient()),","65","      projectIndexer);","127","        NewComponent.newComponentBuilder()","128","            .setKey(DEFAULT_PROJECT_KEY)","129","            .setName(DEFAULT_PROJECT_NAME)","130","            .setBranch(\"origin\/master\")","131","            .setOrganizationUuid(db.getDefaultOrganization().getUuid())","132","            .build(),","133","        null);","142","        .setKey(DEFAULT_PROJECT_KEY)","143","        .setName(DEFAULT_PROJECT_NAME)","144","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","145","        .build();","155","        .setKey(DEFAULT_PROJECT_KEY)","156","        .setName(DEFAULT_PROJECT_NAME)","157","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","158","        .build();","160","        .thenReturn(true);","163","        project,","164","        userDto.getId());","172","        NewComponent.newComponentBuilder()","173","            .setKey(DEFAULT_PROJECT_KEY)","174","            .setName(DEFAULT_PROJECT_NAME)","175","            .setOrganizationUuid(db.getDefaultOrganization().getUuid())","176","            .build(),","177","        null);","185","        NewComponent.newComponentBuilder()","186","            .setKey(DEFAULT_PROJECT_KEY)","187","            .setName(DEFAULT_PROJECT_NAME)","188","            .setOrganizationUuid(db.getDefaultOrganization().getUuid())","189","            .build(),","190","        null);","203","        NewComponent.newComponentBuilder()","204","            .setKey(existing.key())","205","            .setName(DEFAULT_PROJECT_NAME)","206","            .setOrganizationUuid(existing.getOrganizationUuid())","207","            .build(),","208","        null);","219","        NewComponent.newComponentBuilder()","220","            .setKey(existing.key())","221","            .setName(DEFAULT_PROJECT_NAME)","222","            .setOrganizationUuid(existing.getOrganizationUuid())","223","            .build(),","224","        null);","233","        NewComponent.newComponentBuilder()","234","            .setKey(\"1234\")","235","            .setName(DEFAULT_PROJECT_NAME)","236","            .setOrganizationUuid(db.getDefaultOrganization().getUuid())","237","            .build(),","238","        null);","247","        NewComponent.newComponentBuilder()","248","            .setKey(DEFAULT_PROJECT_KEY)","249","            .setName(DEFAULT_PROJECT_NAME)","250","            .setBranch(\"origin?branch\")","251","            .setOrganizationUuid(db.getDefaultOrganization().getUuid())","252","            .build(),","253","        null);","259","        .setKey(\"view-key\")","260","        .setName(\"view-name\")","261","        .setQualifier(VIEW)","262","        .setOrganizationUuid(db.getDefaultOrganization().getUuid())","263","        .build();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["32","import org.sonar.server.es.ProjectIndexer;","35","import org.sonar.server.favorite.FavoriteUpdater;","36","import org.sonar.server.i18n.I18nRule;","42","import org.sonar.server.permission.PermissionTemplateService;","47","import org.sonarqube.ws.WsProjects.CreateWsResponse.Project;","79","  @Rule","80","  public I18nRule i18n = new I18nRule().put(\"qualifier.TRK\", \"Project\");","89","      new ComponentUpdater(db.getDbClient(), i18n, system2, mock(PermissionTemplateService.class), new FavoriteUpdater(db.getDbClient()),","90","        mock(ProjectIndexer.class)),","102","    assertThat(response.getProject())","103","      .extracting(Project::getKey, Project::getName, Project::getQualifier, Project::getVisibility)","104","      .containsOnly(DEFAULT_PROJECT_KEY, DEFAULT_PROJECT_NAME, \"TRK\", \"public\");","105","    assertThat(db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get())","106","      .extracting(ComponentDto::getKey, ComponentDto::name, ComponentDto::qualifier, ComponentDto::scope, ComponentDto::isPrivate)","107","      .containsOnly(DEFAULT_PROJECT_KEY, DEFAULT_PROJECT_NAME, \"TRK\", \"PRJ\", false);","114","    CreateWsResponse response = call(CreateRequest.builder()","120","    assertThat(response.getProject())","121","      .extracting(Project::getKey, Project::getName, Project::getQualifier, Project::getVisibility)","122","      .containsOnly(DEFAULT_PROJECT_KEY + \":origin\/master\", DEFAULT_PROJECT_NAME, \"TRK\", \"public\");","130","    CreateWsResponse response = ws.newRequest()","135","      .executeProtobuf(CreateWsResponse.class);","137","    assertThat(response.getProject())","138","      .extracting(Project::getKey, Project::getName, Project::getQualifier, Project::getVisibility)","139","      .containsOnly(DEFAULT_PROJECT_KEY, DEFAULT_PROJECT_NAME, \"TRK\", \"public\");","240","    db.components().insertPublicProject(project -> project.setKey(DEFAULT_PROJECT_KEY));","253","  public void properly_fail_when_project_key_contains_percent_character() {","254","    userSession.addPermission(PROVISION_PROJECTS, db.getDefaultOrganization());","255","","256","    expectedException.expect(BadRequestException.class);","257","    expectedException.expectMessage(\"Malformed key for Project: project%Key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","258","","259","    call(CreateRequest.builder()","260","      .setKey(\"project%Key\")","261","      .setName(DEFAULT_PROJECT_NAME)","262","      .build());","263","  }","264","","265","  @Test","314","      PARAM_BRANCH);"],"delete":["26","import org.mockito.ArgumentCaptor;","27","import org.mockito.Mockito;","30","import org.sonar.db.DbSession;","35","import org.sonar.server.component.NewComponent;","51","import static org.mockito.Matchers.anyInt;","55","import static org.mockito.Mockito.verify;","56","import static org.mockito.Mockito.when;","83","  private ComponentUpdater componentUpdater = mock(ComponentUpdater.class, Mockito.RETURNS_MOCKS);","90","      componentUpdater,","96","    expectSuccessfulCallToComponentUpdater();","103","    assertThat(response.getProject().getKey()).isEqualTo(DEFAULT_PROJECT_KEY);","104","    assertThat(response.getProject().getName()).isEqualTo(DEFAULT_PROJECT_NAME);","105","    assertThat(response.getProject().getQualifier()).isEqualTo(\"TRK\");","112","    call(CreateRequest.builder()","118","    NewComponent called = verifyCallToComponentUpdater();","119","    assertThat(called.key()).isEqualTo(DEFAULT_PROJECT_KEY);","120","    assertThat(called.branch()).isEqualTo(\"origin\/master\");","128","    ws.newRequest()","133","      .execute();","135","    NewComponent called = verifyCallToComponentUpdater();","136","    assertThat(called.key()).isEqualTo(DEFAULT_PROJECT_KEY);","137","    assertThat(called.branch()).isNull();","144","    expectSuccessfulCallToComponentUpdater();","160","    expectSuccessfulCallToComponentUpdater();","177","    expectSuccessfulCallToComponentUpdater();","193","    expectSuccessfulCallToComponentUpdater();","208","    expectSuccessfulCallToComponentUpdater();","226","    expectSuccessfulCallToComponentUpdater();","244","    when(componentUpdater.create(any(DbSession.class), any(NewComponent.class), anyInt())).thenThrow(BadRequestException.create(\"already exists\"));","282","    expectSuccessfulCallToComponentUpdater();","306","      PARAM_BRANCH","307","    );","333","  private NewComponent verifyCallToComponentUpdater() {","334","    ArgumentCaptor<NewComponent> argument = ArgumentCaptor.forClass(NewComponent.class);","335","    verify(componentUpdater).create(any(DbSession.class), argument.capture(), anyInt());","336","    return argument.getValue();","337","  }","338","","339","  private void expectSuccessfulCallToComponentUpdater() {","340","    when(componentUpdater.create(any(DbSession.class), any(NewComponent.class), anyInt())).thenAnswer(invocation -> {","341","      NewComponent newC = invocation.getArgumentAt(1, NewComponent.class);","342","      return new ComponentDto().setKey(newC.key()).setQualifier(newC.qualifier()).setName(newC.name()).setPrivate(newC.isPrivate());","343","    });","344","  }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":[{"add":["84","      \"Could not create %s, key already exists: %s\", getQualifierToDisplay(newComponent.qualifier()), keyWithBranch);","128","  private void checkKeyFormat(String qualifier, String key) {","129","    checkRequest(isValidModuleKey(key),","130","      \"Malformed key for %s: %s. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\", getQualifierToDisplay(qualifier), key);","135","      \"Malformed branch for %s: %s. Allowed characters are alphanumeric, '-', '_', '.' and '\/', with at least one non-digit.\", getQualifierToDisplay(qualifier), branch);","138","  private String getQualifierToDisplay(String qualifier) {","139","    return i18n.message(Locale.getDefault(), \"qualifier.\" + qualifier, \"Project\");"],"delete":["84","      formatMessage(\"Could not create %s, key already exists: %s\", newComponent.qualifier(), keyWithBranch));","128","  private void checkKeyFormat(String qualifier, String kee) {","129","    checkRequest(isValidModuleKey(kee), formatMessage(\"Malformed key for %s: %s. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\",","130","      qualifier, kee));","135","      formatMessage(\"Malformed branch for %s: %s. Allowed characters are alphanumeric, '-', '_', '.' and '\/', with at least one non-digit.\", qualifier, branch));","138","  private String formatMessage(String message, String qualifier, String key) {","139","    return String.format(message, i18n.message(Locale.getDefault(), \"qualifier.\" + qualifier, \"Project\"), key);"]}]}},"60c64b2c9f95bb52d070758fa88a3881ae69b5e7":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/ce\/posttask\/PostProjectAnalysisTaskTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/ce\/posttask\/PostProjectAnalysisTask.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/ce\/posttask\/PostProjectAnalysisTaskTest.java":[{"add":["36","  public void default_implementation_of_finished_ProjectAnalysis_returns_class_name() {","37","    PostProjectAnalysisTask underTest = new PostTask();","39","    assertThat(underTest.getDescription()).isEqualTo(\"PostTask\");","40","  }","41","","42","  private static class PostTask implements PostProjectAnalysisTask {","43",""],"delete":["27","import static org.assertj.core.api.Assertions.fail;","37","  public void default_implementation_of_finished_ProjectAnalysis_throws_ISE() {","38","    PostProjectAnalysisTask underTest = () -> {","39","      throw new UnsupportedOperationException(\"getDescription not implemented\");","40","    };","42","    try {","43","      underTest.finished(projectAnalysis);","44","      fail(\"should have thrown an ISE\");","45","    } catch (IllegalStateException e) {","46","      assertThat(e.getMessage()).isEqualTo(\"Provide an implementation of method finished(Context)\");","47","      Mockito.verifyZeroInteractions(projectAnalysis);","48","    }"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/ce\/posttask\/PostProjectAnalysisTask.java":[{"add":["48","   * @since 8.0","50","  default String getDescription() {","51","    return this.getClass().getSimpleName();","52","  }","57","   * @deprecated in 8.0. Implement {@link #finished(Context)} instead","64","  \/**","65","   * @since 8.0","66","   *\/"],"delete":["49","  String getDescription();","54","   * @deprecated implement {@link #finished(Context)} instead"]}]}},"c69b7b9b257125bc3b24431a7a93f32224c60d71":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileInheritanceBox-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/app\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritance.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfileInheritanceBox-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritanceBox.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/testMocks.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileInheritanceBox-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":[{"add":["616","  export interface ProfileInheritanceDetails {","617","    activeRuleCount: number;","618","    isBuiltIn: boolean;","619","    key: string;","620","    name: string;","621","    overridingRuleCount?: number;","622","  }","623",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritance.tsx":[{"add":["36","  ancestors?: T.ProfileInheritanceDetails[];","37","  children?: T.ProfileInheritanceDetails[];","40","  profile?: T.ProfileInheritanceDetails;","71","          ancestors.reverse();","72","","75","            ancestors,"],"delete":["35","interface ProfileInheritanceDetails {","36","  activeRuleCount: number;","37","  isBuiltIn: boolean;","38","  key: string;","39","  language: string;","40","  name: string;","41","  overridingRuleCount?: number;","42","}","43","","45","  ancestors?: Array<ProfileInheritanceDetails>;","46","  children?: Array<ProfileInheritanceDetails>;","49","  profile?: ProfileInheritanceDetails;","82","            ancestors: ancestors.reverse(),","169","                    type=\"current\""]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfileInheritanceBox-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritanceBox.tsx":[{"add":["32","  profile: T.ProfileInheritanceDetails;","33","  type?: string;","36","export default function ProfileInheritanceBox(props: Props) {","37","  const {","38","    className,","39","    depth,","40","    extendsBuiltIn,","41","    language,","42","    organization,","43","    profile,","44","    displayLink = true,","45","    type = 'current'","46","  } = props;","47","  const offset = 25 * depth;","56","              language={language}","58","              organization={organization}>"],"delete":["32","  profile: {","33","    activeRuleCount: number;","34","    isBuiltIn: boolean;","35","    key: string;","36","    language: string;","37","    name: string;","38","    overridingRuleCount?: number;","39","  };","40","  type: string;","43","export default function ProfileInheritanceBox({ type, displayLink = true, ...props }: Props) {","44","  const { profile, className, extendsBuiltIn } = props;","45","  const offset = 25 * props.depth;","54","              language={props.language}","56","              organization={props.organization}>"]}],"server\/sonar-web\/src\/main\/js\/helpers\/testMocks.ts":[{"add":["554","export function mockQualityProfileInheritance(","555","  overrides: Partial<T.ProfileInheritanceDetails> = {}","556","): T.ProfileInheritanceDetails {","557","  return {","558","    activeRuleCount: 4,","559","    isBuiltIn: false,","560","    key: 'foo',","561","    name: 'Foo',","562","    overridingRuleCount: 0,","563","    ...overrides","564","  };","565","}","566",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":[{"add":["103","export function getProfileInheritance(","104","  profileKey: string","105","): Promise<{","106","  ancestors: T.ProfileInheritanceDetails[];","107","  children: T.ProfileInheritanceDetails[];","108","  profile: T.ProfileInheritanceDetails;","109","}> {"],"delete":["103","export function getProfileInheritance(profileKey: string): Promise<any> {"]}]}},"3a99ed1448f43fd342c8bf8aae2b525ae2e39a8d":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesActionTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesAction.java":[{"add":["21","import java.util.Collections;","22","import java.util.HashMap;","23","import java.util.HashSet;","25","import java.util.Map;","26","import java.util.function.Function;","27","import java.util.stream.Collectors;","39","import org.sonar.server.exceptions.ForbiddenException;","117","    Map<String, ProjectDto> projectUuidMap;","124","        projectUuidMap = getProjectsDto(dbSession, deliveries);","126","        ProjectDto project = componentFinder.getProjectByKey(dbSession, projectKey);","127","        projectUuidMap = new HashMap<>();","128","        projectUuidMap.put(project.getUuid(), project);","134","        projectUuidMap = getProjectsDto(dbSession, deliveries);","137","    return new Data(projectUuidMap, deliveries).withPagingInfo(page, pageSize, totalElements);","140","  private Map<String, ProjectDto> getProjectsDto(DbSession dbSession, List<WebhookDeliveryLiteDto> deliveries) {","141","    Map<String, String> deliveredComponentUuid = deliveries","143","      .collect(Collectors.toMap(WebhookDeliveryLiteDto::getUuid, WebhookDeliveryLiteDto::getComponentUuid));","145","    if (!deliveredComponentUuid.isEmpty()) {","146","      return dbClient.projectDao().selectByUuids(dbSession, new HashSet<>(deliveredComponentUuid.values()))","147","        .stream()","148","        .collect(Collectors.toMap(ProjectDto::getUuid, Function.identity()));","150","      return Collections.emptyMap();","155","    private final Map<String, ProjectDto> projectUuidMap;","162","    Data(Map<String, ProjectDto> projectUuidMap, List<WebhookDeliveryLiteDto> deliveries) {","165","        this.projectUuidMap = projectUuidMap;","167","        checkArgument(!projectUuidMap.isEmpty());","168","        this.projectUuidMap = projectUuidMap;","173","      if (!projectUuidMap.isEmpty()) {","174","        List<ProjectDto> projectsUserHasAccessTo = userSession.keepAuthorizedProjects(UserRole.ADMIN, projectUuidMap.values());","175","        if (projectsUserHasAccessTo.size() != projectUuidMap.size()) {","176","          throw new ForbiddenException(\"Insufficient privileges\");","177","        }","185","        ProjectDto project = projectUuidMap.get(dto.getComponentUuid());"],"delete":["22","import java.util.Optional;","39","import static java.util.Objects.requireNonNull;","112","    ProjectDto project;","119","        project = getProjectDto(dbSession, deliveries);","121","        project = componentFinder.getProjectByKey(dbSession, projectKey);","127","        project = getProjectDto(dbSession, deliveries);","130","    return new Data(project, deliveries).withPagingInfo(page, pageSize, totalElements);","133","  private ProjectDto getProjectDto(DbSession dbSession, List<WebhookDeliveryLiteDto> deliveries) {","134","    Optional<String> deliveredComponentUuid = deliveries","136","      .map(WebhookDeliveryLiteDto::getComponentUuid)","137","      .findFirst();","139","    if (deliveredComponentUuid.isPresent()) {","140","      return componentFinder.getProjectByUuid(dbSession, deliveredComponentUuid.get());","142","      return null;","147","    private final ProjectDto project;","154","    Data(@Nullable ProjectDto project, List<WebhookDeliveryLiteDto> deliveries) {","157","        this.project = null;","159","        this.project = requireNonNull(project);","164","      if (project != null) {","165","        userSession.checkProjectPermission(UserRole.ADMIN, project);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesActionTest.java":[{"add":["37","import org.sonar.server.ws.TestRequest;","42","import static org.assertj.core.api.Assertions.assertThatThrownBy;","43","import static org.assertj.core.api.Assertions.tuple;","60","  private ComponentDto otherProject;","68","    otherProject = db.components().insertPrivateProject(c -> c.setDbKey(\"other-project\"));","81","    TestRequest request = ws.newRequest();","82","    assertThatThrownBy(request::execute)","83","      .isInstanceOf(UnauthorizedException.class);","166","","167","    WebhookDeliveryDto dto4 = newDto().setComponentUuid(otherProject.uuid()).setCeTaskUuid(\"t4\").setWebhookUuid(\"wh-1-uuid\");","168","    WebhookDeliveryDto dto5 = newDto().setComponentUuid(otherProject.uuid()).setCeTaskUuid(\"t5\").setWebhookUuid(\"wh-1-uuid\");","169","","173","    dbClient.webhookDeliveryDao().insert(db.getSession(), dto4);","174","    dbClient.webhookDeliveryDao().insert(db.getSession(), dto5);","176","    userSession.logIn().addProjectPermission(UserRole.ADMIN, project, otherProject);","181","    assertThat(response.getDeliveriesCount()).isEqualTo(4);","182","    assertThat(response.getDeliveriesList()).extracting(Webhooks.Delivery::getId)","183","      .containsOnly(dto1.getUuid(), dto2.getUuid(), dto4.getUuid(), dto5.getUuid());","184","    assertThat(response.getDeliveriesList()).extracting(Webhooks.Delivery::getId, Webhooks.Delivery::getComponentKey)","185","      .containsOnly(","186","        tuple(dto1.getUuid(), project.getDbKey()),","187","        tuple(dto2.getUuid(), project.getDbKey()),","188","        tuple(dto4.getUuid(), otherProject.getDbKey()),","189","        tuple(dto5.getUuid(), otherProject.getDbKey()));","257","    TestRequest request = ws.newRequest()","258","      .setParam(\"componentKey\", project.getDbKey());","259","    assertThatThrownBy(request::execute)","260","      .isInstanceOf(ForbiddenException.class)","261","      .hasMessage(\"Insufficient privileges\");","272","    TestRequest request = ws.newRequest()","273","      .setParam(\"ceTaskId\", dto.getCeTaskUuid());","274","    assertThatThrownBy(request::execute)","275","      .isInstanceOf(ForbiddenException.class)","276","      .hasMessage(\"Insufficient privileges\");","283","    TestRequest request = ws.newRequest()","285","      .setParam(\"ceTaskId\", \"t1\");","286","    assertThatThrownBy(request::execute)","287","      .isInstanceOf(IllegalArgumentException.class)","288","      .hasMessage(\"Either 'ceTaskId' or 'componentKey' or 'webhook' must be provided\");","295","    TestRequest request = ws.newRequest()","297","      .setParam(\"webhook\", \"wh-uuid\");","298","    assertThatThrownBy(request::execute)","299","      .isInstanceOf(IllegalArgumentException.class)","300","      .hasMessage(\"Either 'ceTaskId' or 'componentKey' or 'webhook' must be provided\");"],"delete":["24","import org.junit.rules.ExpectedException;","42","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","49","  public ExpectedException expectedException = ExpectedException.none();","50","","51","  @Rule","81","    expectedException.expect(UnauthorizedException.class);","82","","83","    ws.newRequest().execute();","170","    userSession.logIn().addProjectPermission(UserRole.ADMIN, project);","175","    assertThat(response.getDeliveriesCount()).isEqualTo(2);","176","    assertThat(response.getDeliveriesList()).extracting(Webhooks.Delivery::getId).containsOnly(dto1.getUuid(), dto2.getUuid());","244","    expectedException.expect(ForbiddenException.class);","245","    expectedException.expectMessage(\"Insufficient privileges\");","246","","247","    ws.newRequest()","248","      .setParam(\"componentKey\", project.getDbKey())","249","      .execute();","260","    expectedException.expect(ForbiddenException.class);","261","    expectedException.expectMessage(\"Insufficient privileges\");","262","","263","    ws.newRequest()","264","      .setParam(\"ceTaskId\", dto.getCeTaskUuid())","265","      .execute();","272","    expectedException.expect(IllegalArgumentException.class);","273","    expectedException.expectMessage(\"Either 'ceTaskId' or 'componentKey' or 'webhook' must be provided\");","274","","275","    ws.newRequest()","277","      .setParam(\"ceTaskId\", \"t1\")","278","      .execute();","285","    expectedException.expect(IllegalArgumentException.class);","286","    expectedException.expectMessage(\"Either 'ceTaskId' or 'componentKey' or 'webhook' must be provided\");","287","","288","    ws.newRequest()","290","      .setParam(\"webhook\", \"wh-uuid\")","291","      .execute();"]}]}},"f86a1094588e4e47b3abf612891af0431653cd0e":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/DbLineHashVersion.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/DbLineHashVersionTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/DbLineHashVersion.java":[{"add":["23","import javax.annotation.CheckForNull;","24","import org.sonar.ce.task.projectanalysis.analysis.AnalysisMetadataHolder;","26","import org.sonar.ce.task.projectanalysis.component.ReferenceBranchComponentUuids;","34","  private final AnalysisMetadataHolder analysisMetadataHolder;","35","  private final ReferenceBranchComponentUuids referenceBranchComponentUuids;","37","  public DbLineHashVersion(DbClient dbClient, AnalysisMetadataHolder analysisMetadataHolder, ReferenceBranchComponentUuids referenceBranchComponentUuids) {","39","    this.analysisMetadataHolder = analysisMetadataHolder;","40","    this.referenceBranchComponentUuids = referenceBranchComponentUuids;","52","  @CheckForNull","55","      String referenceComponentUuid = getReferenceComponentUuid(component);","56","      if (referenceComponentUuid != null) {","57","        return dbClient.fileSourceDao().selectLineHashesVersion(session, referenceComponentUuid);","58","      } else {","59","        return null;","60","      }","61","    }","62","  }","63","","64","  @CheckForNull","65","  private String getReferenceComponentUuid(Component component) {","66","    if (analysisMetadataHolder.isPullRequest()) {","67","      return referenceBranchComponentUuids.getComponentUuid(component.getDbKey());","68","    } else {","69","      return component.getUuid();"],"delete":["32","  public DbLineHashVersion(DbClient dbClient) {","47","      return dbClient.fileSourceDao().selectLineHashesVersion(session, component.getUuid());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/DbLineHashVersionTest.java":[{"add":["23","import org.sonar.ce.task.projectanalysis.analysis.AnalysisMetadataHolder;","24","import org.sonar.ce.task.projectanalysis.analysis.AnalysisMetadataHolderRule;","26","import org.sonar.ce.task.projectanalysis.component.ReferenceBranchComponentUuids;","34","import static org.mockito.Mockito.mock;","35","import static org.mockito.Mockito.verify;","36","import static org.mockito.Mockito.when;","42","  private AnalysisMetadataHolder analysisMetadataHolder = mock(AnalysisMetadataHolder.class);","43","  private ReferenceBranchComponentUuids referenceBranchComponentUuids = mock(ReferenceBranchComponentUuids.class);","44","  private DbLineHashVersion underTest = new DbLineHashVersion(db.getDbClient(), analysisMetadataHolder, referenceBranchComponentUuids);","63","  public void hasLineHashWithSignificantCode_should_return_false_if_pr_reference_doesnt_have_file() {","64","    when(analysisMetadataHolder.isPullRequest()).thenReturn(true);","65","    Component component = ReportComponent.builder(Component.Type.FILE, 1).setKey(\"key\").setUuid(\"123\").build();","66","    assertThat(underTest.hasLineHashesWithSignificantCode(component)).isFalse();","67","","68","    verify(analysisMetadataHolder).isPullRequest();","69","    verify(referenceBranchComponentUuids).getComponentUuid(component.getDbKey());","70","  }","71","","72","  @Test","73","  public void hasLineHashWithSignificantCode_should_return_false_if_pr_reference_has_file_but_it_is_not_in_db() {","74","    ComponentDto project = db.components().insertPublicProject();","75","    ComponentDto file = db.components().insertComponent(ComponentTesting.newFileDto(project));","76","","77","    when(analysisMetadataHolder.isPullRequest()).thenReturn(true);","78","    when(referenceBranchComponentUuids.getComponentUuid(\"key\")).thenReturn(file.uuid());","79","","80","    Component component = ReportComponent.builder(Component.Type.FILE, 1).setKey(\"key\").setUuid(\"123\").build();","81","    assertThat(underTest.hasLineHashesWithSignificantCode(component)).isFalse();","82","","83","    verify(analysisMetadataHolder).isPullRequest();","84","    verify(referenceBranchComponentUuids).getComponentUuid(component.getDbKey());","85","  }","86","","87","  @Test","88","  public void hasLineHashWithSignificantCode_should_return_true_if_pr_reference_has_file_and_it_is_in_db() {","89","    ComponentDto project = db.components().insertPublicProject();","90","    ComponentDto file = db.components().insertComponent(ComponentTesting.newFileDto(project));","91","    db.fileSources().insertFileSource(file, dto -> dto.setLineHashesVersion(LineHashVersion.WITH_SIGNIFICANT_CODE.getDbValue()));","92","","93","    when(analysisMetadataHolder.isPullRequest()).thenReturn(true);","94","    when(referenceBranchComponentUuids.getComponentUuid(\"key\")).thenReturn(file.uuid());","95","","96","    Component component = ReportComponent.builder(Component.Type.FILE, 1).setKey(\"key\").setUuid(\"123\").build();","97","    assertThat(underTest.hasLineHashesWithSignificantCode(component)).isTrue();","98","","99","    verify(analysisMetadataHolder).isPullRequest();","100","    verify(referenceBranchComponentUuids).getComponentUuid(component.getDbKey());","101","  }","102","","103","  @Test"],"delete":["36","  private DbLineHashVersion underTest = new DbLineHashVersion(db.getDbClient());"]}]}},"ffbf06564219421bae3580215fff40cfe65adfc5":{"changes":{"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfiguratorTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfigurator.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/log\/LogListenerTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfiguration.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/Batch.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfigurationTest.java":"MODIFY"},"diff":{"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfiguratorTest.java":[{"add":["114","  public void testConfigureMultipleTimes() throws UnsupportedEncodingException {","115","    System.setOut(new PrintStream(out, false, StandardCharsets.UTF_8.name()));","116","    conf.setLogOutput(listener);","117","    LoggingConfigurator.apply(conf);","118","","119","    Logger logger = LoggerFactory.getLogger(this.getClass());","120","    logger.debug(\"debug\");","121","    assertThat(listener.msg).isNull();","122","","123","    conf.setVerbose(true);","124","    LoggingConfigurator.apply(conf);","125","","126","    logger.debug(\"debug\");","127","    assertThat(listener.msg).isEqualTo(\"debug\");","128","  }","129","","130","  @Test"],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfigurator.java":[{"add":["31","  private static final String CUSTOM_APPENDER_NAME = \"custom_stream\";","32","","61","    if (logger.getAppender(CUSTOM_APPENDER_NAME) == null) {","62","      logger.detachAndStopAllAppenders();","63","      logger.addAppender(createAppender(conf.getLogOutput()));","64","    }","68","  private static Appender<ILoggingEvent> createAppender(LogOutput target) {","70","    appender.setName(CUSTOM_APPENDER_NAME);"],"delete":["57","    String pattern = StringUtils.defaultIfBlank(conf.getSubstitutionVariables().get(LoggingConfiguration.PROPERTY_FORMAT), LoggingConfiguration.FORMAT_DEFAULT);","60","    logger.detachAndStopAllAppenders();","61","    logger.addAppender(createAppender(pattern, conf.getLogOutput()));","65","  private static Appender<ILoggingEvent> createAppender(String pattern, LogOutput target) {","67","    appender.setName(\"custom_stream\");"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/log\/LogListenerTest.java":[{"add":["55","  private StringBuilder logOutputStr;","93","    logOutputStr = new StringBuilder();","124","  @Test","125","  public void testChangeLogForAnalysis() throws IOException, InterruptedException {","126","    File srcDir = new File(baseDir, \"src\");","127","    srcDir.mkdir();","128","","129","    File xooFile = new File(srcDir, \"sample.xoo\");","130","    FileUtils.write(xooFile, \"Sample xoo\\ncontent\");","131","","132","    tester.newTask()","133","      .properties(builder","134","        .put(\"sonar.sources\", \"src\")","135","        .put(\"sonar.verbose\", \"true\")","136","        .build())","137","      .start();","138","","140","    for (LogEvent e : logOutput) {","141","      savedStdOut.println(\"[captured]\" + e.level + \" \" + e.msg);","142","    }","143","","144","    \/\/ only done in DEBUG during analysis","145","    assertThat(logOutputStr.toString()).contains(\"Post-jobs : \");","161","    tester.stop();","186","    tester.stop();","202","      logOutputStr.append(msg).append(\"\\n\");"],"delete":["34","import org.junit.After;","123","  @After","124","  public void stop() {"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfiguration.java":[{"add":["23","","25","","26","import javax.annotation.CheckForNull;","28","","66","    setShowSql(properties, null);","67","    setVerbose(properties, null);","68","    return this;","69","  }","70","","71","  public LoggingConfiguration setProperties(Map<String, String> properties, @Nullable Map<String, String> fallback) {","72","    setShowSql(properties, fallback);","73","    setVerbose(properties, fallback);","86","  public LoggingConfiguration setVerbose(Map<String, String> props, @Nullable Map<String, String> fallback) {","87","    String logLevel = getFallback(\"sonar.log.level\", props, fallback);","88","    String deprecatedProfilingLevel = getFallback(\"sonar.log.profilingLevel\", props, fallback);","89","    boolean verbose = \"true\".equals(getFallback(\"sonar.verbose\", props, fallback)) ||","96","  @CheckForNull","97","  private static String getFallback(String key, Map<String, String> properties, @Nullable Map<String, String> fallback) {","98","    if (properties.containsKey(key)) {","99","      return properties.get(key);","100","    }","101","","102","    if (fallback != null) {","103","      return fallback.get(key);","104","    }","105","","106","    return null;","107","  }","108","","117","  public LoggingConfiguration setShowSql(Map<String, String> properties, @Nullable Map<String, String> fallback) {","118","    String logLevel = getFallback(\"sonar.log.level\", properties, fallback);","119","    String deprecatedProfilingLevel = getFallback(\"sonar.log.profilingLevel\", properties, fallback);"],"delete":["62","    setShowSql(properties);","63","    setVerbose(properties);","76","  public LoggingConfiguration setVerbose(Map<String, String> properties) {","77","    String logLevel = properties.get(\"sonar.log.level\");","78","    String deprecatedProfilingLevel = properties.get(\"sonar.log.profilingLevel\");","79","    boolean verbose = \"true\".equals(properties.get(\"sonar.verbose\")) ||","94","  public LoggingConfiguration setShowSql(Map<String, String> properties) {","95","    String logLevel = properties.get(\"sonar.log.level\");","96","    String deprecatedProfilingLevel = properties.get(\"sonar.log.profilingLevel\");"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/Batch.java":[{"add":["109","    configureTaskLogging(analysisProperties);","111","    configureLogging();","120","    configureTaskLogging(analysisProperties);","122","    configureLogging();","156","      loggingConfig.setProperties(bootstrapProperties);","157","      LoggingConfigurator.apply(loggingConfig);","158","    }","159","  }","160","","161","  private void configureTaskLogging(Map<String, String> taskProperties) {","162","    if (loggingConfig != null) {","163","      loggingConfig.setProperties(taskProperties, bootstrapProperties);"],"delete":[]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LoggingConfigurationTest.java":[{"add":["43","  public void testSetVerboseAnalysis() {","44","    Map<String, String> globalProps = Maps.newHashMap();","45","    LoggingConfiguration conf = new LoggingConfiguration(null).setProperties(globalProps);","46","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_ROOT_LOGGER_LEVEL)).isEqualTo(LoggingConfiguration.LEVEL_ROOT_DEFAULT);","47","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_SQL_LOGGER_LEVEL)).isEqualTo(\"WARN\");","48","","49","    Map<String, String> analysisProperties = Maps.newHashMap();","50","    analysisProperties.put(\"sonar.verbose\", \"true\");","51","","52","    conf.setProperties(analysisProperties, globalProps);","53","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_ROOT_LOGGER_LEVEL)).isEqualTo(LoggingConfiguration.LEVEL_ROOT_VERBOSE);","54","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_SQL_LOGGER_LEVEL)).isEqualTo(\"WARN\");","55","  }","56","","57","  @Test","58","  public void testOverrideVerbose() {","59","    Map<String, String> globalProps = Maps.newHashMap();","60","    globalProps.put(\"sonar.verbose\", \"true\");","61","    LoggingConfiguration conf = new LoggingConfiguration(null).setProperties(globalProps);","62","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_ROOT_LOGGER_LEVEL)).isEqualTo(LoggingConfiguration.LEVEL_ROOT_VERBOSE);","63","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_SQL_LOGGER_LEVEL)).isEqualTo(\"WARN\");","64","","65","    Map<String, String> analysisProperties = Maps.newHashMap();","66","    analysisProperties.put(\"sonar.verbose\", \"false\");","67","","68","    conf.setProperties(analysisProperties, globalProps);","69","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_ROOT_LOGGER_LEVEL)).isEqualTo(LoggingConfiguration.LEVEL_ROOT_DEFAULT);","70","    assertThat(conf.getSubstitutionVariable(LoggingConfiguration.PROPERTY_SQL_LOGGER_LEVEL)).isEqualTo(\"WARN\");","71","  }","72","","73","  @Test"],"delete":[]}]}},"a08697f54c9f0b98c1a811c22135b9ae303df05e":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistLiveMeasuresStep.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistLiveMeasuresStep.java":[{"add":["139","      dbSession.commit();"],"delete":["91","      dbSession.commit();"]}]}},"bdd538eb0c2b5937c565480ecab58908d095aad2":{"changes":{"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/FieldDiffs.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/ChangelogAction.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/FieldDiffsTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueChangeDto.java":"MODIFY"},"diff":{"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/FieldDiffs.java":[{"add":["24","import java.nio.charset.StandardCharsets;","25","import java.util.Base64;","31","import org.apache.commons.lang.StringUtils;","44","  private static final String CHAR_TO_ESCAPE = \"|,{}=:\";","49","  public static final String ASSIGNEE = \"assignee\";","50","  public static final String ENCODING_PREFIX = \"{base64:\";","51","  public static final String ENCODING_SUFFIX = \"}\";","56","    if (diffs.containsKey(ASSIGNEE)) {","57","      Map<String, Diff> result = Maps.newLinkedHashMap(diffs);","58","      result.put(ASSIGNEE, decode(result.get(ASSIGNEE)));","59","      return result;","60","    }","65","    if (field.equals(ASSIGNEE)) {","66","      return decode(diffs.get(ASSIGNEE));","67","    }","102","    if (field.equals(ASSIGNEE)) {","103","      oldValue = encodeField(oldValue);","104","      newValue = encodeField(newValue);","105","    }","115","  public String toEncodedString() {","116","    return serialize(true);","117","  }","118","","121","    return serialize(false);","122","  }","123","","124","  private String serialize(boolean shouldEncode) {","135","      if (shouldEncode) {","136","        sb.append(entry.getValue().toEncodedString());","137","      } else {","138","        sb.append(entry.getValue().toString());","139","      }","151","      String[] keyValues = field.split(\"=\", 2);","156","          diffs.setDiff(keyValues[0], emptyToNull(values.substring(0, split)), emptyToNull(values.substring(split + 1)));","158","          diffs.setDiff(keyValues[0], null, emptyToNull(values));","161","        diffs.setDiff(keyValues[0], null, null);","167","  @SuppressWarnings(\"unchecked\")","168","  Diff decode(Diff encoded) {","169","    return new Diff(","170","        decodeField(encoded.oldValue),","171","        decodeField(encoded.newValue)","172","    );","173","  }","174","","175","  private static Serializable decodeField(@Nullable Serializable field) {","176","    if (field == null || !isEncoded(field)) {","177","      return field;","178","    }","179","","180","    String encodedField = field.toString();","181","    String value = encodedField.substring(ENCODING_PREFIX.length(), encodedField.indexOf(ENCODING_SUFFIX));","182","    return new String(Base64.getDecoder().decode(value), StandardCharsets.UTF_8);","183","  }","184","","185","  private static Serializable encodeField(@Nullable Serializable field) {","186","    if (field == null || !shouldEncode(field.toString())) {","187","      return field;","188","    }","189","","190","    return ENCODING_PREFIX + Base64.getEncoder().encodeToString(field.toString().getBytes(StandardCharsets.UTF_8)) + ENCODING_SUFFIX;","191","  }","192","","193","  private static boolean shouldEncode(String field) {","194","    return !field.isEmpty() && !isEncoded(field) && containsCharToEscape(field);","195","  }","196","","197","  private static boolean containsCharToEscape(Serializable s) {","198","    return StringUtils.containsAny(s.toString(), CHAR_TO_ESCAPE);","199","  }","200","","201","  private static boolean isEncoded(Serializable field) {","202","    return field.toString().startsWith(ENCODING_PREFIX) && field.toString().endsWith(ENCODING_SUFFIX);","203","  }","204","","234","    void setNewValue(@Nullable T t) {","250","    private String toEncodedString() {","251","      return serialize(true);","252","    }","253","","256","      return serialize(false);","257","    }","258","","259","    private String serialize(boolean shouldEncode) {","262","        sb.append(shouldEncode ? oldValue : decodeField(oldValue));","266","        sb.append(shouldEncode ? newValue : decodeField(newValue));"],"delete":["108","      sb.append(entry.getValue().toString());","120","      String[] keyValues = field.split(\"=\");","125","          diffs.setDiff(keyValues[0], values.substring(0, split), values.substring(split +1));","127","          diffs.setDiff(keyValues[0], \"\", emptyToNull(values));","130","        diffs.setDiff(keyValues[0], \"\", \"\");","165","    void setNewValue(T t) {","183","      \/\/ TODO escape , and | characters","186","        sb.append(oldValue.toString());","190","        sb.append(newValue.toString());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/ChangelogAction.java":[{"add":["144","      String oldValue = value.oldValue() != null ? value.oldValue().toString() : null;","145","      String newValue = value.newValue() != null ? value.newValue().toString() : null;","148","        setNullable(results.getFileLongName(emptyToNull(newValue)), diffBuilder::setNewValue);","149","        setNullable(results.getFileLongName(emptyToNull(oldValue)), diffBuilder::setOldValue);","152","        setNullable(emptyToNull(newValue), diffBuilder::setNewValue);","153","        setNullable(emptyToNull(oldValue), diffBuilder::setOldValue);"],"delete":["146","        setNullable(results.getFileLongName(emptyToNull(value.newValue().toString())), diffBuilder::setNewValue);","147","        setNullable(results.getFileLongName(emptyToNull(value.oldValue().toString())), diffBuilder::setOldValue);","150","        setNullable(emptyToNull(value.newValue().toString()), diffBuilder::setNewValue);","151","        setNullable(emptyToNull(value.oldValue().toString()), diffBuilder::setOldValue);"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/FieldDiffsTest.java":[{"add":["27","  private static final String NAME_WITH_RESERVED_CHARS = \"name,with|reserved=chars:\";","28","  private static final String ENCODED_NAME_WITH_RESERVED_CHARS = \"{base64:bmFtZSx3aXRofHJlc2VydmVkPWNoYXJzOg==}\";","29","","30","  private FieldDiffs diffs = new FieldDiffs();","55","    diffs.setDiff(\"technicalDebt\", 50L, \"100\");","58","    assertThat(diff.oldValueLong()).isEqualTo(50L);","59","    assertThat(diff.newValueLong()).isEqualTo(100L);","72","  public void diff_with_assignee() {","73","    diffs.setDiff(\"assignee\", \"oldAssignee\", NAME_WITH_RESERVED_CHARS);","74","","75","    FieldDiffs.Diff diff = diffs.diffs().get(\"assignee\");","76","    assertThat(diff.oldValue()).isEqualTo(\"oldAssignee\");","77","    assertThat(diff.newValue()).isEqualTo(NAME_WITH_RESERVED_CHARS);","78","  }","79","","80","  @Test","81","  public void get() {","82","    diffs.setDiff(\"severity\", \"BLOCKER\", \"INFO\");","83","","84","    FieldDiffs.Diff diff = diffs.get(\"severity\");","85","    assertThat(diff.oldValue()).isEqualTo(\"BLOCKER\");","86","    assertThat(diff.newValue()).isEqualTo(\"INFO\");","87","  }","88","","89","  @Test","90","  public void get_with_assignee() {","91","    diffs.setDiff(\"assignee\", \"oldAssignee\", NAME_WITH_RESERVED_CHARS);","92","","93","    FieldDiffs.Diff diff = diffs.get(\"assignee\");","94","    assertThat(diff.oldValue()).isEqualTo(\"oldAssignee\");","95","    assertThat(diff.newValue()).isEqualTo(NAME_WITH_RESERVED_CHARS);","96","  }","97","","98","  @Test","132","  public void test_toEncodedString() {","133","    diffs.setDiff(\"assignee\", \"oldAssignee\", NAME_WITH_RESERVED_CHARS);","134","    diffs.setDiff(\"resolution\", \"OPEN\", \"FIXED\");","135","","136","    assertThat(diffs.toEncodedString()).isEqualTo(\"assignee=oldAssignee|\" + ENCODED_NAME_WITH_RESERVED_CHARS + \",resolution=OPEN|FIXED\");","137","  }","138","","139","  @Test","161","    assertThat(diff.oldValue()).isEqualTo(null);","165","    assertThat(diff.oldValue()).isEqualTo(null);","170","    assertThat(diff.newValue()).isEqualTo(null);","171","  }","172","","173","  @Test","174","  public void test_parse_encoded_assignee() {","175","    diffs = FieldDiffs.parse(\"severity=BLOCKER|INFO,assignee=oldValue|\" + ENCODED_NAME_WITH_RESERVED_CHARS);","176","    assertThat(diffs.diffs()).hasSize(2);","177","","178","    FieldDiffs.Diff diff = diffs.diffs().get(\"severity\");","179","    assertThat(diff.oldValue()).isEqualTo(\"BLOCKER\");","180","    assertThat(diff.newValue()).isEqualTo(\"INFO\");","181","","182","    diff = diffs.diffs().get(\"assignee\");","183","    assertThat(diff.oldValue()).isEqualTo(\"oldValue\");","184","    assertThat(diff.newValue()).isEqualTo(NAME_WITH_RESERVED_CHARS);","193","    assertThat(diff.oldValue()).isEqualTo(null);","197","    assertThat(diff.oldValue()).isEqualTo(null);","198","    assertThat(diff.newValue()).isEqualTo(null);"],"delete":["27","  FieldDiffs diffs = new FieldDiffs();","52","    diffs.setDiff(\"technicalDebt\", 50l, \"100\");","55","    assertThat(diff.oldValueLong()).isEqualTo(50l);","56","    assertThat(diff.newValueLong()).isEqualTo(100l);","123","    assertThat(diff.oldValue()).isEqualTo(\"\");","127","    assertThat(diff.oldValue()).isEqualTo(\"\");","132","    assertThat(diff.newValue()).isEqualTo(\"\");","141","    assertThat(diff.oldValue()).isEqualTo(\"\");","145","    assertThat(diff.oldValue()).isEqualTo(\"\");","146","    assertThat(diff.newValue()).isEqualTo(\"\");"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueChangeDto.java":[{"add":["74","    dto.setChangeData(diffs.toEncodedString());"],"delete":["74","    dto.setChangeData(diffs.toString());"]}]}},"88bb8230b1bfd3e6ec923c35890c1daba93fece4":{"changes":{"sonar-duplications\/src\/test\/java\/org\/sonar\/duplications\/internal\/pmd\/TokenizerBridgeTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/cpd\/deprecated\/JavaCpdBlockIndexerTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/cpd\/deprecated\/DefaultCpdBlockIndexer.java":"MODIFY","sonar-duplications\/src\/main\/java\/org\/sonar\/duplications\/cpd\/FileCodeLoaderWithoutCache.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/cpd\/deprecated\/JavaCpdBlockIndexer.java":"MODIFY","plugins\/sonar-xoo-plugin\/src\/test\/java\/org\/sonar\/xoo\/lang\/XooTokenizerTest.java":"MODIFY","sonar-duplications\/src\/test\/java\/org\/sonar\/duplications\/internal\/pmd\/PmdBridgeTest.java":"MODIFY","sonar-duplications\/src\/main\/java\/org\/sonar\/duplications\/internal\/pmd\/TokenizerBridge.java":"MODIFY","plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/lang\/XooTokenizer.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/cpd\/deprecated\/DeprecatedCpdBlockIndexerSensor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/SourcePublisher.java":"MODIFY"},"diff":{"sonar-duplications\/src\/test\/java\/org\/sonar\/duplications\/internal\/pmd\/TokenizerBridgeTest.java":[{"add":["21","import java.io.ByteArrayInputStream;","22","import java.io.IOException;","23","import java.io.InputStreamReader;","24","import java.nio.charset.StandardCharsets;","25","import java.util.List;","53","    bridge = new TokenizerBridge(tokenizer, 10);","58","    bridge.chunk(\"file.txt\", new InputStreamReader(new ByteArrayInputStream(new byte[0]), StandardCharsets.UTF_8));","67","    bridge.chunk(\"file.txt\", new InputStreamReader(new ByteArrayInputStream(new byte[0]), StandardCharsets.UTF_8));","68","    List<TokensLine> lines = bridge.chunk(\"file.txt\", new InputStreamReader(new ByteArrayInputStream(new byte[0]), StandardCharsets.UTF_8));"],"delete":["28","import java.io.IOException;","29","import java.util.List;","30","","51","    bridge = new TokenizerBridge(tokenizer, \"UTF-8\", 10);","56","    bridge.chunk(null);","65","    bridge.chunk(null);","66","    List<TokensLine> lines = bridge.chunk(null);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/cpd\/deprecated\/JavaCpdBlockIndexerTest.java":[{"add":["23","import java.nio.charset.StandardCharsets;","40","import org.sonar.api.config.Settings;","74","      .setCharset(StandardCharsets.UTF_8)"],"delete":["38","import org.sonar.api.config.Settings;"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/cpd\/deprecated\/DefaultCpdBlockIndexer.java":[{"add":["23","import java.io.IOException;","24","import java.io.InputStreamReader;","84","    TokenizerBridge bridge = new TokenizerBridge(mapping.getTokenizer(), getBlockSize(languageKey));","89","        List<Block> blocks;","90","        try (InputStreamReader isr = new InputStreamReader(inputFile.inputStream(), inputFile.charset())) {","91","          blocks = bridge.chunk(resourceEffectiveKey, inputFile.absolutePath(), isr);","92","        } catch (IOException e) {","93","          throw new IllegalStateException(\"Unable to read content of file \" + inputFile.absolutePath(), e);","94","        }"],"delete":["82","    TokenizerBridge bridge = new TokenizerBridge(mapping.getTokenizer(), fs.encoding().name(), getBlockSize(languageKey));","87","        List<Block> blocks = bridge.chunk(resourceEffectiveKey, inputFile.file());"]}],"sonar-duplications\/src\/main\/java\/org\/sonar\/duplications\/cpd\/FileCodeLoaderWithoutCache.java":[{"add":["25","  private final String fileName;","26","  private final Reader fileReader;","28","  public FileCodeLoaderWithoutCache(String fileName, Reader fileReader) {","29","    this.fileName = fileName;","30","    this.fileReader = fileReader;","35","    return fileReader;","40","    return fileName;"],"delete":["21","import java.io.File;","22","import java.io.FileInputStream;","23","import java.io.InputStreamReader;","28","  private File file;","29","  private String encoding;","31","  public FileCodeLoaderWithoutCache(File file, String encoding) {","32","    this.file = file;","33","    this.encoding = encoding;","38","    return new InputStreamReader(new FileInputStream(file), encoding);","43","    return this.file.getAbsolutePath();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/cpd\/deprecated\/JavaCpdBlockIndexer.java":[{"add":["92","      try (InputStream is = inputFile.inputStream();","93","        Reader reader = new InputStreamReader(is, inputFile.charset())) {","101","      List<Block> blocks;","102","      try {","103","        blocks = blockChunker.chunk(resourceEffectiveKey, statements);","104","      } catch (Exception e) {","105","        throw new IllegalStateException(\"Cannot process file \" + inputFile.file(), e);","106","      }"],"delete":["22","import java.io.FileInputStream;","93","      try (InputStream is = new FileInputStream(inputFile.file());","94","        Reader reader = new InputStreamReader(is, fs.encoding())) {","102","      List<Block> blocks = blockChunker.chunk(resourceEffectiveKey, statements);"]}],"plugins\/sonar-xoo-plugin\/src\/test\/java\/org\/sonar\/xoo\/lang\/XooTokenizerTest.java":[{"add":["21","import java.io.File;","22","import java.io.IOException;","23","import java.io.InputStreamReader;","24","import java.nio.charset.StandardCharsets;","38","import org.sonar.api.config.Settings;","39","import org.sonar.duplications.cpd.FileCodeLoaderWithoutCache;","67","    FileUtils.write(source, \"token1 token2 token3\\ntoken4\", StandardCharsets.UTF_8);","71","      .setCharset(StandardCharsets.UTF_8)","77","    try (InputStreamReader reader = new InputStreamReader(inputFile.inputStream(), inputFile.charset())) {","78","      SourceCode sourceCode = new SourceCode(new FileCodeLoaderWithoutCache(inputFile.absolutePath(), reader));","79","      tokenizer.tokenize(sourceCode, cpdTokens);","80","    }"],"delete":["33","import org.sonar.api.config.Settings;","34","","35","import java.io.File;","36","import java.io.IOException;","65","    FileUtils.write(source, \"token1 token2 token3\\ntoken4\");","73","    SourceCode sourceCode = mock(SourceCode.class);","74","    when(sourceCode.getFileName()).thenReturn(inputFile.absolutePath());","76","    tokenizer.tokenize(sourceCode, cpdTokens);"]}],"sonar-duplications\/src\/test\/java\/org\/sonar\/duplications\/internal\/pmd\/PmdBridgeTest.java":[{"add":["21","import java.io.File;","22","import java.io.IOException;","23","import java.nio.charset.StandardCharsets;","24","import java.nio.file.Files;","25","import java.util.Collection;","26","import java.util.List;","47","    bridge = new TokenizerBridge(new JavaTokenizer(), 10);","51","  public void testDuplicationInSingleFile() throws IOException {","70","  public void testDuplicationBetweenTwoFiles() throws IOException {","92","  private void addToIndex(File file) throws IOException {","93","    List<Block> blocks = bridge.chunk(file.getAbsolutePath(), file.getAbsolutePath(), Files.newBufferedReader(file.toPath(), StandardCharsets.UTF_8));"],"delete":["31","import java.io.File;","32","import java.util.Collection;","33","import java.util.List;","34","","45","    bridge = new TokenizerBridge(new JavaTokenizer(), \"UTF-8\", 10);","49","  public void testDuplicationInSingleFile() {","68","  public void testDuplicationBetweenTwoFiles() {","90","  private void addToIndex(File file) {","91","    List<Block> blocks = bridge.chunk(file.getAbsolutePath(), file);"]}],"sonar-duplications\/src\/main\/java\/org\/sonar\/duplications\/internal\/pmd\/TokenizerBridge.java":[{"add":["23","import java.io.IOException;","24","import java.io.Reader;","25","import java.util.List;","41","  public TokenizerBridge(Tokenizer tokenizer, int blockSize) {","46","  public List<Block> chunk(String resourceId, String fileName, Reader fileReader) {","47","    return blockBuilder.chunk(resourceId, chunk(fileName, fileReader));","50","  public List<TokensLine> chunk(String fileName, Reader fileReader) {","51","    SourceCode sourceCode = new SourceCode(new FileCodeLoaderWithoutCache(fileName, fileReader));"],"delete":["30","import java.io.File;","31","import java.io.IOException;","32","import java.util.List;","33","","40","  private final String encoding;","43","  public TokenizerBridge(Tokenizer tokenizer, String encoding, int blockSize) {","45","    this.encoding = encoding;","49","  \/\/ TODO remove from here","50","  public List<Block> chunk(String resourceId, File file) {","51","    return blockBuilder.chunk(resourceId, chunk(file));","54","  public List<TokensLine> chunk(File file) {","55","    SourceCode sourceCode = new SourceCode(new FileCodeLoaderWithoutCache(file, encoding));"]}],"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/lang\/XooTokenizer.java":[{"add":["50","    for (String line : source.getCode()) {","51","      for (String token : Splitter.on(\" \").split(line)) {","52","        TokenEntry cpdToken = new TokenEntry(token, fileName, lineIdx);","53","        cpdTokens.add(cpdToken);","55","      lineIdx++;"],"delete":["50","    try {","51","      for (String line : FileUtils.readLines(new File(fileName), fs.encoding())) {","52","        for (String token : Splitter.on(\" \").split(line)) {","53","          TokenEntry cpdToken = new TokenEntry(token, fileName, lineIdx);","54","          cpdTokens.add(cpdToken);","55","        }","56","        lineIdx++;","58","    } catch (IOException e) {","59","      throw new IllegalStateException(\"Unable to tokenize\", e);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/cpd\/deprecated\/DeprecatedCpdBlockIndexerSensor.java":[{"add":["74","      LOG.debug(\"{} is used for {}\", blockIndexer.getClass().getName(), language);"],"delete":["74","      LOG.info(\"{} is used for {}\", blockIndexer, language);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/SourcePublisher.java":[{"add":["21","import java.io.BufferedReader;","22","import java.io.File;","23","import java.io.FileOutputStream;","24","import java.io.IOException;","25","import java.io.InputStream;","26","import java.io.InputStreamReader;","27","import java.nio.charset.StandardCharsets;","47","        InputStream in = inputFile.inputStream();","48","        BufferedReader reader = new BufferedReader(new InputStreamReader(in, inputFile.charset()))) {"],"delete":["21","import org.apache.commons.io.ByteOrderMark;","23","import org.apache.commons.io.input.BOMInputStream;","28","import java.io.BufferedReader;","29","import java.io.File;","30","import java.io.FileInputStream;","31","import java.io.FileOutputStream;","32","import java.io.IOException;","33","import java.io.InputStreamReader;","34","import java.nio.charset.StandardCharsets;","35","","50","        BOMInputStream bomIn = new BOMInputStream(new FileInputStream(inputFile.file()),","51","          ByteOrderMark.UTF_8, ByteOrderMark.UTF_16LE, ByteOrderMark.UTF_16BE, ByteOrderMark.UTF_32LE, ByteOrderMark.UTF_32BE);","52","        BufferedReader reader = new BufferedReader(new InputStreamReader(bomIn, inputFile.charset()))) {"]}]}},"d6164e9a32c80240cb36bab6812121c1bfd3b539":{"changes":{"server\/sonar-webserver-core\/src\/main\/java\/org\/sonar\/server\/rule\/RegisterRules.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-core\/src\/main\/java\/org\/sonar\/server\/rule\/RegisterRules.java":[{"add":["819","  private static Stream<String> filterInvalidDeprecatedRuleKeys(Map<RuleKey, SingleDeprecatedRuleKey> dbDeprecatedRuleKeysByOldRuleKey, RulesDefinition.Rule rule) {","832","        if (rule.deprecatedRuleKeys().contains(singleDeprecatedRuleKey.getNewRuleKeyAsRuleKey())) {"],"delete":["819","  private static Stream<String> filterInvalidDeprecatedRuleKeys(ImmutableMap<RuleKey, SingleDeprecatedRuleKey> dbDeprecatedRuleKeysByOldRuleKey,","820","    RulesDefinition.Rule rule) {","833","        if (rule.deprecatedRuleKeys().contains(parentRuleKey)) {"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":[{"add":["74","import static java.util.Collections.emptySet;","78","import static org.assertj.core.api.Assertions.tuple;","854","    assertThat(rules).hasSize(1).extracting(RuleDefinitionDto::getKey, RuleDefinitionDto::getSystemTags)","855","      .containsOnly(tuple(RuleKey.of(\"findbugs\", \"rule1\"), emptySet()));","879","      createRule(repo, \"rule1\");","885","      createRule(repo, \"newKey\")","901","      createRule(repo, \"rule1\");","907","      createRule(repo, \"newKey\")","919","      createRule(repo, \"newKey\");","935","      createRule(repo, \"newKey1\")","936","        .addDeprecatedRuleKey(\"fake\", \"old\");","937","      createRule(repo, \"newKey2\")","938","        .addDeprecatedRuleKey(\"fake\", \"old\");","950","      createRule(repo, \"newKey1\");","951","      createRule(repo, \"newKey2\")","952","        .addDeprecatedRuleKey(\"fake\", \"newKey1\");","973","  public void deprecate_rule_that_deprecated_another_rule() {","974","    execute(context -> createRule(context, \"javascript\", \"javascript\", \"s103\"));","975","    execute(context -> createRule(context, \"javascript\", \"javascript\", \"s104\",","976","      r -> r.addDeprecatedRuleKey(\"javascript\", \"s103\")));","977","","978","    \/\/ This rule should have been moved to another repository","979","    execute(context -> createRule(context, \"javascript\", \"sonarjs\", \"s105\",","980","      r -> r.addDeprecatedRuleKey(\"javascript\", \"s103\")","981","        .addDeprecatedRuleKey(\"javascript\", \"s104\")));","982","  }","983","","984","  @Test","991","      createRule(repo, \"newKey1\");","992","      createRule(repo, \"newKey1\");","1015","  private NewRule createRule(NewRepository repo, String key) {","1016","    return repo.createRule(key)","1017","      .setName(key + \" name\")","1018","      .setHtmlDescription(\"Description of \" + key)","1019","      .setSeverity(BLOCKER)","1020","      .setInternalKey(\"config1\")","1021","      .setTags(\"tag1\", \"tag2\", \"tag3\")","1022","      .setType(RuleType.CODE_SMELL)","1023","      .setStatus(RuleStatus.BETA);","1024","  }","1025",""],"delete":["852","    assertThat(rules).hasSize(1);","853","    RuleDefinitionDto result = rules.get(0);","854","    assertThat(result.getKey()).isEqualTo(RuleKey.of(\"findbugs\", \"rule1\"));","855","    assertThat(result.getSystemTags()).isEmpty();","879","      repo.createRule(\"rule1\")","880","        .setName(\"One\")","881","        .setHtmlDescription(\"Description of One\")","882","        .setSeverity(BLOCKER)","883","        .setInternalKey(\"config1\")","884","        .setTags(\"tag1\", \"tag2\", \"tag3\")","885","        .setType(RuleType.CODE_SMELL)","886","        .setStatus(RuleStatus.BETA);","892","      repo.createRule(\"newKey\")","893","        .setName(\"One\")","894","        .setHtmlDescription(\"Description of One\")","895","        .setSeverity(BLOCKER)","896","        .setInternalKey(\"config1\")","897","        .setTags(\"tag1\", \"tag2\", \"tag3\")","898","        .setType(RuleType.CODE_SMELL)","899","        .setStatus(RuleStatus.BETA)","915","      repo.createRule(\"rule1\")","916","        .setName(\"One\")","917","        .setHtmlDescription(\"Description of One\")","918","        .setSeverity(BLOCKER)","919","        .setInternalKey(\"config1\")","920","        .setTags(\"tag1\", \"tag2\", \"tag3\")","921","        .setType(RuleType.CODE_SMELL)","922","        .setStatus(RuleStatus.BETA);","928","      repo.createRule(\"newKey\")","929","        .setName(\"One\")","930","        .setHtmlDescription(\"Description of One\")","931","        .setSeverity(BLOCKER)","932","        .setInternalKey(\"config1\")","933","        .setTags(\"tag1\", \"tag2\", \"tag3\")","934","        .setType(RuleType.CODE_SMELL)","935","        .setStatus(RuleStatus.BETA)","947","      repo.createRule(\"newKey\")","948","        .setName(\"One\")","949","        .setHtmlDescription(\"Description of One\")","950","        .setSeverity(BLOCKER)","951","        .setInternalKey(\"config1\")","952","        .setTags(\"tag1\", \"tag2\", \"tag3\")","953","        .setType(RuleType.CODE_SMELL)","954","        .setStatus(RuleStatus.BETA);","970","      repo.createRule(\"newKey1\")","971","        .setName(\"One\")","972","        .setHtmlDescription(\"Description of One\")","973","        .setSeverity(BLOCKER)","974","        .setInternalKey(\"config1\")","975","        .setTags(\"tag1\", \"tag2\", \"tag3\")","976","        .setType(RuleType.CODE_SMELL)","977","        .addDeprecatedRuleKey(\"fake\", \"old\")","978","        .setStatus(RuleStatus.BETA);","979","      repo.createRule(\"newKey2\")","980","        .setName(\"One\")","981","        .setHtmlDescription(\"Description of One\")","982","        .setSeverity(BLOCKER)","983","        .setInternalKey(\"config1\")","984","        .setTags(\"tag1\", \"tag2\", \"tag3\")","985","        .setType(RuleType.CODE_SMELL)","986","        .addDeprecatedRuleKey(\"fake\", \"old\")","987","        .setStatus(RuleStatus.BETA);","999","      repo.createRule(\"newKey1\")","1000","        .setName(\"One\")","1001","        .setHtmlDescription(\"Description of One\")","1002","        .setSeverity(BLOCKER)","1003","        .setInternalKey(\"config1\")","1004","        .setTags(\"tag1\", \"tag2\", \"tag3\")","1005","        .setType(RuleType.CODE_SMELL)","1006","        .setStatus(RuleStatus.BETA);","1007","","1008","      repo.createRule(\"newKey2\")","1009","        .setName(\"One\")","1010","        .setHtmlDescription(\"Description of One\")","1011","        .setSeverity(BLOCKER)","1012","        .setInternalKey(\"config1\")","1013","        .setTags(\"tag1\", \"tag2\", \"tag3\")","1014","        .setType(RuleType.CODE_SMELL)","1015","        .addDeprecatedRuleKey(\"fake\", \"newKey1\")","1016","        .setStatus(RuleStatus.BETA);","1043","      repo.createRule(\"newKey1\")","1044","        .setName(\"One\")","1045","        .setHtmlDescription(\"Description of One\")","1046","        .setSeverity(BLOCKER)","1047","        .setInternalKey(\"config1\")","1048","        .setTags(\"tag1\", \"tag2\", \"tag3\")","1049","        .setType(RuleType.CODE_SMELL)","1050","        .setStatus(RuleStatus.BETA);","1051","","1052","      repo.createRule(\"newKey1\")","1053","        .setName(\"One\")","1054","        .setHtmlDescription(\"Description of One\")","1055","        .setSeverity(BLOCKER)","1056","        .setInternalKey(\"config1\")","1057","        .setTags(\"tag1\", \"tag2\", \"tag3\")","1058","        .setType(RuleType.CODE_SMELL)","1059","        .addDeprecatedRuleKey(\"fake\", \"newKey1\")","1060","        .setStatus(RuleStatus.BETA);"]}]}},"2ffc1c1e25a0c2c7a8589e9e189ffe84cc0b125a":{"changes":{"build.gradle":"MODIFY"},"diff":{"build.gradle":[{"add":["135","      dependency 'com.google.code.gson:gson:2.8.5'"],"delete":["135","      dependency 'com.google.code.gson:gson:2.8.4'"]}]}},"61e72deca5f7a39ea0b3e4236fc668089c885eee":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/bulk-change-modal-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/bulk-change-modal-view.js":[{"add":["71","    this.disableForm();","76","          if (!that.isDestroyed) {","77","            if (r.failed) {","78","              that.showWarnMessage(profile, r.succeeded, r.failed);","79","            } else {","80","              that.showSuccessMessage(profile, r.succeeded);","81","            }","88","      if (!that.isDestroyed) {","89","        that.$(that.ui.codingRulesSubmitBulkChange.selector).hide();","90","        that.enableForm();","91","        that.$('.modal-field').hide();","92","        that.$('.js-modal-close').focus();","93","      }"],"delete":["75","          if (r.failed) {","76","            that.showWarnMessage(profile, r.succeeded, r.failed);","77","          } else {","78","            that.showSuccessMessage(profile, r.succeeded);","85","      that.$(that.ui.codingRulesSubmitBulkChange.selector).hide();","86","      that.$('.modal-field').hide();","87","      that.$('.js-modal-close').focus();"]}]}},"7b3100c87c761e5e8a7ef32df12abae7649d158d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/OAuth2AuthenticationParametersImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/OAuth2AuthenticationParametersImplTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/OAuth2AuthenticationParametersImpl.java":[{"add":["22","import com.google.common.base.Strings;","31","import javax.annotation.Nullable;","38","import static java.util.Optional.empty;","73","    Optional<String> sanitizeRedirectUrl = sanitizeRedirectUrl(returnTo);","74","    sanitizeRedirectUrl.ifPresent(s -> parameters.put(RETURN_TO_PARAMETER, s));","112","      return empty();","117","      return empty();","149","","150","  \/**","151","   * This sanitization has been inspired by 'IsUrlLocalToHost()' method in","152","   * https:\/\/docs.microsoft.com\/en-us\/aspnet\/mvc\/overview\/security\/preventing-open-redirection-attacks","153","   *\/","154","  private static Optional<String> sanitizeRedirectUrl(@Nullable String url) {","155","    if (Strings.isNullOrEmpty(url)) {","156","      return empty();","157","    }","158","    if (url.startsWith(\"\/\/\") || url.startsWith(\"\/\\\\\")) {","159","      return empty();","160","    }","161","    if (!url.startsWith(\"\/\")) {","162","      return empty();","163","    }","164","    return Optional.of(url);","165","  }","166",""],"delete":["70","    if (isNotBlank(returnTo)) {","71","      parameters.put(RETURN_TO_PARAMETER, returnTo);","72","    }","110","      return Optional.empty();","115","      return Optional.empty();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/OAuth2AuthenticationParametersImplTest.java":[{"add":["99","  public void return_to_is_not_set_when_not_local() {","100","    when(request.getParameter(\"return_to\")).thenReturn(\"http:\/\/external_url\");","101","    underTest.init(request, response);","102","    verify(response, never()).addCookie(any());","103","","104","    when(request.getParameter(\"return_to\")).thenReturn(\"\/\/local_file\");","105","    underTest.init(request, response);","106","    verify(response, never()).addCookie(any());","107","","108","    when(request.getParameter(\"return_to\")).thenReturn(\"\/\\\\local_file\");","109","    underTest.init(request, response);","110","    verify(response, never()).addCookie(any());","111","","112","    when(request.getParameter(\"return_to\")).thenReturn(\"something_else\");","113","    underTest.init(request, response);","114","    verify(response, never()).addCookie(any());","115","  }","116","","117","  @Test"],"delete":[]}]}},"75aa5f3882c913fe5e145640ebe9b2b18d2b7895":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/__tests__\/pages-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/documentation\/pages.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/__tests__\/pages-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/documentation\/pages.ts":[{"add":["42","  }).filter((page: DocumentationEntry) => {","43","    if (!page.scope) {","44","      return true;","45","    }","46","    return isSonarCloud() ? page.scope === 'sonarcloud' : page.scope === 'sonarqube';","47","  });"],"delete":["42","  }).filter(","43","    (page: DocumentationEntry) =>","44","      page.scope !== 'static' && (isSonarCloud() || page.scope !== 'sonarcloud')","45","  );"]}]}},"6c12781c2f9f5ee27dea9304c747e1ac14c6a81f":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/UserPermissionDaoTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/ApplyTemplateActionTest.java":"MODIFY","server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/component\/ComponentTesting.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/PermissionQueryTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/GroupPermissionDaoTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/UsersAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/GroupsAction.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/GroupPermissionMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/PermissionQuery.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/UserPermissionDaoTest.java":[{"add":["28","import java.util.stream.IntStream;","51","import static org.sonar.core.permission.GlobalPermissions.QUALITY_PROFILE_ADMIN;","53","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","58","import static org.sonar.db.permission.PermissionQuery.DEFAULT_PAGE_SIZE;","138","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).withAtLeastOnePermission().setComponent(project1).build();","142","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setPermission(\"missing\").setComponent(project1).build();","146","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setSearchQuery(\"Mari\").withAtLeastOnePermission().setComponent(project1).build();","150","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setSearchQuery(\"Mari\").setPermission(ISSUE_ADMIN).setComponent(project1).build();","154","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setSearchQuery(\"Unknown\").setComponent(project1).build();","158","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setComponent(newPrivateProjectDto(organization)).withAtLeastOnePermission().build();","170","    addGlobalPermission(organization, QUALITY_PROFILE_ADMIN, user2);","174","    assertThat(underTest.selectUserIdsByQueryAndScope(dbSession, query))","179","  public void selectUserIdsByQuery_is_ordering_by_users_having_permissions_first_then_by_name_lowercase_when_high_number_of_users_for_global_permissions() {","180","    OrganizationDto organization = db.organizations().insert();","181","    ComponentDto project = db.components().insertPrivateProject(organization);","182","    IntStream.rangeClosed(1, DEFAULT_PAGE_SIZE + 1).forEach(i -> {","183","      UserDto user = insertUser(u -> u.setLogin(\"login\" + i).setName(\"\" + i), organization);","184","      \/\/ Add permission on project to be sure projects are excluded","185","      db.users().insertProjectPermissionOnUser(user, SCAN.getKey(), project);","186","    });","187","    String lastLogin = \"login\" + (DEFAULT_PAGE_SIZE + 1);","188","    UserDto lastUser = db.getDbClient().userDao().selectByLogin(dbSession, lastLogin);","189","    addGlobalPermission(organization, SYSTEM_ADMIN, lastUser);","190","","191","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).build();","192","","193","    assertThat(underTest.selectUserIdsByQueryAndScope(dbSession, query))","194","      .hasSize(DEFAULT_PAGE_SIZE)","195","      .startsWith(lastUser.getId());","196","  }","197","","198","  @Test","199","  public void selectUserIdsByQuery_is_ordering_by_users_having_permissions_first_then_by_name_lowercase_when_high_number_of_users_for_project_permissions() {","200","    OrganizationDto organization = db.organizations().insert();","201","    IntStream.rangeClosed(1, DEFAULT_PAGE_SIZE + 1).forEach(i -> {","202","      UserDto user = insertUser(u -> u.setLogin(\"login\" + i).setName(\"\" + i), organization);","203","      \/\/ Add global permission to be sure they are excluded","204","      addGlobalPermission(organization, SYSTEM_ADMIN, user);","205","    });","206","    String lastLogin = \"login\" + (DEFAULT_PAGE_SIZE + 1);","207","    UserDto lastUser = db.getDbClient().userDao().selectByLogin(dbSession, lastLogin);","208","    ComponentDto project = db.components().insertPrivateProject(organization);","209","    db.users().insertProjectPermissionOnUser(lastUser, SCAN.getKey(), project);","210","","211","    PermissionQuery query = PermissionQuery.builder()","212","      .setComponent(project)","213","      .setOrganizationUuid(organization.getUuid()).build();","214","","215","    assertThat(underTest.selectUserIdsByQueryAndScope(dbSession, query))","216","      .hasSize(DEFAULT_PAGE_SIZE)","217","      .startsWith(lastUser.getId());","218","  }","219","","220","  @Test","281","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project1.getOrganizationUuid()).setComponent(project1).withAtLeastOnePermission().build();","283","    query = PermissionQuery.builder().setOrganizationUuid(\"anotherOrg\").setComponent(project1).withAtLeastOnePermission().build();","287","    query = PermissionQuery.builder().setOrganizationUuid(org1.getUuid()).setComponent(newPrivateProjectDto(org1)).withAtLeastOnePermission().build();","299","    query = PermissionQuery.builder().setOrganizationUuid(org1.getUuid()).setSearchQuery(\"mariu\").setComponent(project1).build();","339","      .setComponent(project1)"],"delete":["134","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).withAtLeastOnePermission().setComponentUuid(project1.uuid()).build();","138","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setPermission(\"missing\").setComponentUuid(project1.uuid()).build();","142","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setSearchQuery(\"Mari\").withAtLeastOnePermission().setComponentUuid(project1.uuid()).build();","146","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setSearchQuery(\"Mari\").setPermission(ISSUE_ADMIN).setComponentUuid(project1.uuid()).build();","150","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setSearchQuery(\"Unknown\").setComponentUuid(project1.uuid()).build();","154","    query = PermissionQuery.builder().setOrganizationUuid(organization.getUuid()).setComponentUuid(\"missing\").withAtLeastOnePermission().build();","166","    ComponentDto project1 = db.components().insertPrivateProject(organization);","167","    addProjectPermission(organization, USER, user2, project1);","171","    assertThat(underTest.selectUserIdsByQuery(dbSession, query))","236","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project1.getOrganizationUuid()).setComponentUuid(project1.uuid()).withAtLeastOnePermission().build();","238","    query = PermissionQuery.builder().setOrganizationUuid(\"anotherOrg\").setComponentUuid(project1.uuid()).withAtLeastOnePermission().build();","242","    query = PermissionQuery.builder().setOrganizationUuid(org1.getUuid()).setComponentUuid(\"missing\").withAtLeastOnePermission().build();","254","    query = PermissionQuery.builder().setOrganizationUuid(org1.getUuid()).setSearchQuery(\"mariu\").setComponentUuid(project1.uuid()).build();","294","      .setComponentUuid(project1.uuid())","295","      .setComponentId(project1.getId())"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/ApplyTemplateActionTest.java":[{"add":["61","    new TestProjectIndexers(), userSession, defaultTemplatesResolver);","193","  private void newRequest(@Nullable String templateUuid, @Nullable String projectUuid, @Nullable String projectKey) {","204","    request.execute();","218","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponent(project).build();","223","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponent(project).build();"],"delete":["40","import org.sonar.server.ws.TestResponse;","62","     new TestProjectIndexers(), userSession, defaultTemplatesResolver);","194","  private TestResponse newRequest(@Nullable String templateUuid, @Nullable String projectUuid, @Nullable String projectKey) {","205","","206","    return request.execute();","220","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponentUuid(project.uuid()).build();","225","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponentUuid(project.uuid()).build();"]}],"server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/component\/ComponentTesting.java":[{"add":["31","import static org.apache.commons.lang.math.RandomUtils.nextLong;","142","      .setId(nextLong())"],"delete":[]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":[{"add":["356","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponent(project).build();","361","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponent(project).build();"],"delete":["356","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponentUuid(project.uuid()).build();","361","    PermissionQuery query = PermissionQuery.builder().setOrganizationUuid(project.getOrganizationUuid()).setPermission(permission).setComponentUuid(project.uuid()).build();"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/PermissionQueryTest.java":[{"add":["24","import org.sonar.db.component.ComponentDto;","25","import org.sonar.db.organization.OrganizationDto;","28","import static org.sonar.db.component.ComponentTesting.newPublicProjectDto;","29","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","38","    OrganizationDto organization = newOrganizationDto();","39","    ComponentDto project= newPublicProjectDto(organization);","40","    PermissionQuery query = PermissionQuery.builder()","41","      .setComponent(project)","47","    assertThat(query.getComponentUuid()).isEqualTo(project.uuid());","48","    assertThat(query.getComponentId()).isEqualTo(project.getId());","49","    assertThat(query.getOrganizationUuid()).isEqualTo(\"ORGANIZATION_UUID\");","50","    assertThat(query.getPermission()).isEqualTo(\"user\");","51","    assertThat(query.getSearchQuery()).isEqualTo(\"sonar\");","56","    PermissionQuery query = PermissionQuery.builder()","62","    assertThat(query.getPageOffset()).isEqualTo(40);","63","    assertThat(query.getPageSize()).isEqualTo(10);","68","    PermissionQuery query = PermissionQuery.builder()","72","    assertThat(query.getPageOffset()).isEqualTo(0);","73","    assertThat(query.getPageSize()).isEqualTo(20);"],"delete":["34","    PermissionQuery quey = PermissionQuery.builder()","35","      .setComponentUuid(\"COMPONENT_UUID\")","36","      .setComponentId(1234L)","42","    assertThat(quey.getComponentUuid()).isEqualTo(\"COMPONENT_UUID\");","43","    assertThat(quey.getComponentId()).isEqualTo(1234L);","44","    assertThat(quey.getOrganizationUuid()).isEqualTo(\"ORGANIZATION_UUID\");","45","    assertThat(quey.getPermission()).isEqualTo(\"user\");","46","    assertThat(quey.getSearchQuery()).isEqualTo(\"sonar\");","51","    PermissionQuery quey = PermissionQuery.builder()","57","    assertThat(quey.getPageOffset()).isEqualTo(40);","58","    assertThat(quey.getPageSize()).isEqualTo(10);","63","    PermissionQuery quey = PermissionQuery.builder()","67","    assertThat(quey.getPageOffset()).isEqualTo(0);","68","    assertThat(quey.getPageSize()).isEqualTo(20);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/GroupPermissionDaoTest.java":[{"add":["53","import static org.sonar.db.permission.PermissionQuery.DEFAULT_PAGE_SIZE;","140","  public void selectGroupNamesByQuery_is_ordered_by_permissions_then_by_group_when_many_groups_for_global_permissions() {","141","    OrganizationDto organizationDto = db.organizations().insert();","142","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","143","    IntStream.rangeClosed(1, DEFAULT_PAGE_SIZE + 1).forEach(i -> {","144","      GroupDto group = db.users().insertGroup(organizationDto, \"Group-\" + i);","145","      \/\/ Add permission on project to be sure projects are excluded","146","      db.users().insertProjectPermissionOnGroup(group, SCAN.getKey(), project);","147","    });","148","    String lastGroupName = \"Group-\" + (DEFAULT_PAGE_SIZE + 1);","149","    db.users().insertPermissionOnGroup(db.users().selectGroup(organizationDto, lastGroupName).get(), SCAN);","150","","151","    assertThat(underTest.selectGroupNamesByQuery(dbSession, newQuery()","152","      .setOrganizationUuid(organizationDto.getUuid()).build()))","153","        .hasSize(DEFAULT_PAGE_SIZE)","154","        .startsWith(ANYONE, lastGroupName, \"Group-1\");","155","  }","156","","157","  @Test","158","  public void selectGroupNamesByQuery_is_ordered_by_global_permissions_then_by_group_when_many_groups_for_project_permissions() {","159","    OrganizationDto organizationDto = db.organizations().insert();","160","    IntStream.rangeClosed(1, DEFAULT_PAGE_SIZE + 1).forEach(i -> {","161","      GroupDto group = db.users().insertGroup(organizationDto, \"Group-\" + i);","162","      \/\/ Add global permission to be sure they are excluded","163","      db.users().insertPermissionOnGroup(group, SCAN.getKey());","164","    });","165","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","166","    String lastGroupName = \"Group-\" + (DEFAULT_PAGE_SIZE + 1);","167","    db.users().insertProjectPermissionOnGroup(db.users().selectGroup(organizationDto, lastGroupName).get(), SCAN.getKey(), project);","168","","169","    assertThat(underTest.selectGroupNamesByQuery(dbSession, newQuery()","170","      .setOrganizationUuid(organizationDto.getUuid())","171","      .setComponent(project)","172","      .build()))","173","        .hasSize(DEFAULT_PAGE_SIZE)","174","        .startsWith(ANYONE, lastGroupName, \"Group-1\");","175","  }","176","","177","  @Test","241","    PermissionQuery.Builder builderOnComponent = newQuery()","242","      .setComponent(project);","267","    PermissionQuery.Builder builderOnComponent = newQuery()","268","      .setComponent(project);"],"delete":["202","    PermissionQuery.Builder builderOnComponent = newQuery().setComponentUuid(project.uuid());","227","    PermissionQuery.Builder builderOnComponent = newQuery().setComponentUuid(project.uuid());"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/UsersAction.java":[{"add":["134","    project.ifPresent(projectId -> permissionQuery.setComponent(projectId.getUuid(), projectId.getId()));","182","    project.ifPresent(p -> queryBuilder.setComponent(p.getUuid(), p.getId()));"],"delete":["134","    project.ifPresent(projectId -> {","135","      permissionQuery.setComponentUuid(projectId.getUuid());","136","      permissionQuery.setComponentId(projectId.getId());","137","    });","185","    project.ifPresent(p -> queryBuilder.setComponentUuid(p.getUuid()));"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/GroupsAction.java":[{"add":["125","    project.ifPresent(projectId -> permissionQuery.setComponent(projectId.getUuid(), projectId.getId()));"],"delete":["125","    if (project.isPresent()) {","126","      permissionQuery.setComponentUuid(project.get().getUuid());","127","      permissionQuery.setComponentId(project.get().getId());","128","    }","129",""]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/GroupPermissionMapper.xml":[{"add":["60","      <if test=\"query.componentId == null\">","61","        and gr.resource_id is null","62","      <\/if>","63","      <if test=\"query.componentId != null\">","64","        and gr.resource_id = #{query.componentId,jdbcType=BIGINT}","65","      <\/if>","67","        g.organization_uuid = #{query.organizationUuid,jdbcType=VARCHAR}","73","    <where>","74","      <if test=\"query.componentId == null\">","75","        and gr.resource_id is null","76","      <\/if>","77","      <if test=\"query.componentId != null\">","78","        and gr.resource_id = #{query.componentId,jdbcType=BIGINT}","79","      <\/if>","80","      <if test=\"query.withAtLeastOnePermission()\">","81","        and gr.organization_uuid = #{query.organizationUuid,jdbcType=VARCHAR} and","82","        gr.group_id is null","83","      <\/if>","84","    <\/where>"],"delete":["61","      g.organization_uuid = #{query.organizationUuid,jdbcType=VARCHAR}","67","    <if test=\"query.withAtLeastOnePermission()\">","68","      where","69","      gr.organization_uuid = #{query.organizationUuid,jdbcType=VARCHAR} and","70","      gr.group_id is null","71","    <\/if>"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/PermissionQuery.java":[{"add":["26","import org.sonar.db.component.ComponentDto;","163","    public Builder setComponent(ComponentDto component) {","164","      return setComponent(component.uuid(), component.getId());","167","    public Builder setComponent(String componentUuid, long componentId) {","168","      this.componentUuid = componentUuid;"],"delete":["162","    public Builder setComponentUuid(String componentUuid) {","163","      this.componentUuid = componentUuid;","164","      return this;","167","    public Builder setComponentId(Long componentId) {"]}]}},"7e1bd1a88c7b36d2dd7a678423705d2efddb5d83":{"changes":{"server\/sonar-web\/webpack.config.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.js":"ADD","server\/sonar-web\/src\/main\/js\/api\/web-api.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.js":"ADD","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/web_api_controller.rb":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/styles\/web-api.css":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/InternalBadge.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ResponseExample.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/DeprecatedBadge.js":"ADD","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/main\/nav\/templates\/nav-shortcuts-help.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.js":"ADD","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/layouts\/_layout.html.erb":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/config\/routes.rb":"MODIFY","server\/sonar-web\/src\/main\/less\/sonar.less":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/web_api\/index.html.erb":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/app.js":"ADD"},"diff":{"server\/sonar-web\/webpack.config.js":[{"add":["53","    'web-api': '.\/src\/main\/js\/apps\/web-api\/app.js',"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/web-api.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/web_api_controller.rb":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/styles\/web-api.css":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/InternalBadge.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ResponseExample.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/DeprecatedBadge.js":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/main\/nav\/templates\/nav-shortcuts-help.hbs":[{"add":["10","    <a href=\"{{link '\/web_api'}}\">Web API<\/a>"],"delete":["10","    <a href=\"{{link '\/api_documentation'}}\">Web Service API<\/a>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/layouts\/_layout.html.erb":[{"add":["58","      <a href=\"\/web_api\">Web API<\/a>"],"delete":["58","      <a href=\"\/api_documentation\">Web Service API<\/a>"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/config\/routes.rb":[{"add":["33","  map.connect 'web_api\/*other', :controller => 'web_api', :action => 'index'"],"delete":["33","  map.connect 'api_documentation\/*other', :controller => 'api_documentation', :action => 'index'"]}],"server\/sonar-web\/src\/main\/less\/sonar.less":[{"add":[],"delete":["66","@import \"pages\/api-documentation\";"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/web_api\/index.html.erb":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/app.js":[{"add":[],"delete":[]}]}},"6e6c533c1299ec31a1c0923e259e135912220c17":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/FileFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/__snapshots__\/FileFacet-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/api\/components.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/FileFacet-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/Sidebar.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/FileFacet.tsx":[{"add":["25","import { isDefined } from 'sonar-ui-common\/helpers\/types';","26","import { getFiles, TreeComponentWithPath } from '..\/..\/..\/api\/components';","33","  fileUuids: string[];","40","  stats: Facet | undefined;","44","  getFilePath = (fileUuid: string) => {","46","    return referencedComponents[fileUuid]","47","      ? collapsePath(referencedComponents[fileUuid].path || '', 15)","48","      : fileUuid;","51","  getReferencedComponent = (key: string) => {","53","    const fileUuid = Object.keys(referencedComponents).find(uuid => {","54","      return referencedComponents[uuid].key === key;","55","    });","56","    return fileUuid ? referencedComponents[fileUuid] : undefined;","59","  getFacetItemText = (fileUuid: string) => {","60","    const { referencedComponents } = this.props;","61","    return referencedComponents[fileUuid] ? referencedComponents[fileUuid].path || '' : fileUuid;","64","  getSearchResultKey = (file: TreeComponentWithPath) => {","65","    const component = this.getReferencedComponent(file.key);","66","    return component ? component.uuid : file.key;","67","  };","68","","69","  getSearchResultText = (file: TreeComponentWithPath) => {","70","    return file.path;","74","    return getFiles({","79","    }).then(({ components, paging }) => ({","80","      paging,","81","      results: components.filter(file => file.path !== undefined)","82","    }));","85","  loadSearchResultCount = (files: TreeComponentWithPath[]) => {","86","    return this.props.loadSearchResultCount('files', {","87","      files: files","88","        .map(file => {","89","          const component = this.getReferencedComponent(file.key);","90","          return component && component.uuid;","91","        })","92","        .filter(isDefined)","93","    });","103","  renderFacetItem = (fileUuid: string) => {","104","    const name = this.getFilePath(fileUuid);","108","  renderSearchResult = (file: TreeComponentWithPath, term: string) => {","109","    return this.renderFile(highlightTerm(collapsePath(file.path, 15), term));","114","      <ListStyleFacet<TreeComponentWithPath>","132","        values={this.props.fileUuids}"],"delete":["25","import { getTree, TreeComponent } from '..\/..\/..\/api\/components';","32","  files: string[];","39","  stats: T.Dict<number> | undefined;","43","  getFile = (file: string) => {","45","    return referencedComponents[file]","46","      ? collapsePath(referencedComponents[file].path || '', 15)","47","      : file;","50","  getFacetItemText = (file: string) => {","52","    return referencedComponents[file] ? referencedComponents[file].path || '' : file;","55","  getSearchResultKey = (file: TreeComponent) => {","56","    return file.id;","59","  getSearchResultText = (file: TreeComponent) => {","60","    return file.path || file.name;","64","    return getTree({","67","      qualifiers: 'FIL',","70","    }).then(({ components, paging }) => ({ paging, results: components }));","73","  loadSearchResultCount = (files: TreeComponent[]) => {","74","    return this.props.loadSearchResultCount('files', { files: files.map(file => file.id) });","84","  renderFacetItem = (file: string) => {","85","    const name = this.getFile(file);","89","  renderSearchResult = (file: TreeComponent, term: string) => {","90","    return this.renderFile(highlightTerm(collapsePath(file.path || file.name, 15), term));","95","      <ListStyleFacet<TreeComponent>","113","        values={this.props.files}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/__snapshots__\/FileFacet-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/components.ts":[{"add":["129","  id?: string;","138","export interface TreeComponentWithPath extends TreeComponent {","139","  path: string;","140","}","141","","142","type GetTreeParams = {","150","} & T.BranchParameters;","151","","152","export function getTree<T = TreeComponent>(","153","  data: GetTreeParams & { qualifiers?: string }","154","): Promise<{ baseComponent: TreeComponent; components: T[]; paging: T.Paging }> {","158","export function getFiles(data: GetTreeParams) {","159","  return getTree<TreeComponentWithPath>({ ...data, qualifiers: 'FIL' });","160","}","161",""],"delete":["129","  id: string;","138","export function getTree(data: {","140","  branch?: string;","144","  pullRequest?: string;","146","  qualifiers?: string;","149","}): Promise<{ baseComponent: TreeComponent; components: TreeComponent[]; paging: T.Paging }> {"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/__tests__\/FileFacet-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/Sidebar.tsx":[{"add":["38","  facets: T.Dict<Facet | undefined>;","81","          fileUuids={query.files}"],"delete":["38","  facets: T.Dict<Facet>;","81","          files={query.files}"]}]}},"4876424dd7c24074f4fa9fa073d7310295614179":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/scanner\/IssueExclusionsRegexpScannerTest.java":"MODIFY","sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/fs\/DefaultInputFileTest.java":"MODIFY","sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/ignore\/IgnoreIssuesFilter.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/ignore\/scanner\/IssueExclusionsRegexpScanner.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/scanner\/IssueExclusionsRegexpScannerTest.java":[{"add":["42","import static org.mockito.Mockito.mock;","46","  private IssueExclusionPatternInitializer patternsInitializer = mock(IssueExclusionPatternInitializer.class);"],"delete":["34","import org.mockito.Mock;","35","import org.mockito.MockitoAnnotations;","47","","48","  @Mock","49","  private IssueExclusionPatternInitializer patternsInitializer;","58","    MockitoAnnotations.initMocks(this);","59",""]}],"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/fs\/DefaultInputFileTest.java":[{"add":["35","import java.util.function.Consumer;","52","import static org.mockito.Mockito.verify;"],"delete":[]}],"sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":[{"add":["405","    checkMetadata();","421","    checkMetadata();"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/ignore\/IgnoreIssuesFilter.java":[{"add":["45","","46","    if (isIgnoreIssue(component, issue)) {","49","","56","  private static boolean isIgnoreIssue(InputComponent component, FilterableIssue issue) {","57","    if (component.isFile()) {","58","      DefaultInputFile inputFile = (DefaultInputFile) component;","59","      return inputFile.isIgnoreAllIssues() || inputFile.isIgnoreAllIssuesOnLine(issue.line());","60","    }","61","    return false;","62","  }","63",""],"delete":["45","    if (component.isFile() && ((DefaultInputFile) component).isIgnoreAllIssues()) {","48","    if (component.isFile() && ((DefaultInputFile) component).isIgnoreAllIssuesOnLine(issue.line())) {","49","      return false;","50","    }"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/ignore\/scanner\/IssueExclusionsRegexpScanner.java":[{"add":["47","  private boolean ignoreAllIssues;","58","    if (ignoreAllIssues) {","66","    if (ignoreAllIssues) {","76","    if (ignoreAllIssues) {","105","        ignoreAllIssues = true;"],"delete":["57","    if (inputFile.isIgnoreAllIssues()) {","65","    if (inputFile.isIgnoreAllIssues()) {","75","    if (inputFile.isIgnoreAllIssues()) {"]}]}},"33e68fd792458053de7492ba6cba4edf0f517ac7":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityGraphs-test.js.snap":"ADD","server\/sonar-web\/src\/main\/js\/components\/charts\/line-chart.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/history\/MeasureHistory.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/ProjectActivityGraphs-test.js":"ADD","server\/sonar-web\/src\/main\/js\/components\/charts\/AdvancedTimeline.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityGraphs-test.js.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/line-chart.js":[{"add":["65","      .defined(d => d.y != null)","80","    const points = this.props.data.filter(point => point.y != null).map((point, index) => {","128","    const p = d3Line()","129","      .x(d => xScale(d.x))","130","      .y(d => yScale(d.y))","131","      .defined(d => d.y != null)","132","      .curve(curveBasis);"],"delete":["79","    const points = this.props.data.map((point, index) => {","127","    const p = d3Line().x(d => xScale(d.x)).y(d => yScale(d.y)).curve(curveBasis);"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/history\/MeasureHistory.js":[{"add":["78","      return r.measures[0].history.filter(analysis => analysis.value != null).map(analysis => ({"],"delete":["78","      return r.measures[0].history.map(analysis => ({"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/ProjectActivityGraphs-test.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/AdvancedTimeline.js":[{"add":["162","    const lineGenerator = d3Line()","163","      .defined(d => d.y || d.y === 0)","164","      .x(d => xScale(d.x))","165","      .y(d => yScale(d.y));","183","    const areaGenerator = area()","184","      .defined(d => d.y || d.y === 0)","185","      .x(d => xScale(d.x))","186","      .y1(d => yScale(d.y))","187","      .y0(yScale(0));"],"delete":["162","    const lineGenerator = d3Line().x(d => xScale(d.x)).y(d => yScale(d.y));","180","    const areaGenerator = area().x(d => xScale(d.x)).y1(d => yScale(d.y)).y0(yScale(0));"]}]}},"355a3b65066e968e3669a97892df81ef15770a55":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/utils\/PathUtilsTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/RelativePathPredicate.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/OrPredicateTest.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/RelativePathPredicateTest.java":"ADD"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/utils\/PathUtilsTest.java":[{"add":["44","  public void sanitize_succeeds() {","51","  public void sanitize_invalid_paths_returns_null() {","52","    assertThat(PathUtils.sanitize(\"..\/foo\")).isNull();","53","  }","54","","55","  @Test","56","  public void canonicalPath_succeeds() throws Exception {"],"delete":["44","  public void testSanitize() throws Exception {","51","  public void test_canonicalPath() throws Exception {"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/RelativePathPredicate.java":[{"add":["21","import java.util.Collections;","22","import javax.annotation.Nullable;","32","  @Nullable","45","    if (path == null) {","46","      return false;","47","    }","48","","54","    if (path != null) {","55","      InputFile f = index.inputFile(this.path);","56","      if (f != null) {","57","        return Collections.singletonList(f);","58","      }","59","    }","60","    return Collections.emptyList();"],"delete":["25","import java.util.Arrays;","26","import java.util.Collections;","27","","50","    InputFile f = index.inputFile(this.path);","51","    return f != null ? Arrays.asList(f) : Collections.<InputFile>emptyList();"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/OrPredicateTest.java":[{"add":["35","    FilePredicate orPredicate = OrPredicate.create(Arrays.asList(pathPatternPredicate1,","36","      OrPredicate.create(Arrays.asList(pathPatternPredicate2, pathPatternPredicate3))));","42","    FilePredicate orPredicate = OrPredicate.create(Arrays.asList());","50","    FilePredicate andPredicate = OrPredicate.create(Arrays.asList(pathPatternPredicate1,","59","    FilePredicate andPredicate = OrPredicate.create(Arrays.asList(pathPatternPredicate1,"],"delete":["35","    FilePredicate orPredicate = OrPredicate.create(Arrays.<FilePredicate>asList(pathPatternPredicate1,","36","      OrPredicate.create(Arrays.<FilePredicate>asList(pathPatternPredicate2, pathPatternPredicate3))));","42","    FilePredicate orPredicate = OrPredicate.create(Arrays.<FilePredicate>asList());","50","    FilePredicate andPredicate = OrPredicate.create(Arrays.<FilePredicate>asList(pathPatternPredicate1,","59","    FilePredicate andPredicate = OrPredicate.create(Arrays.<FilePredicate>asList(pathPatternPredicate1,"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/RelativePathPredicateTest.java":[{"add":[],"delete":[]}]}},"27249ed2abb99bc945cc8b0917f33b50ae96f786":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/NewEffortAggregatorTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/NewEffortAggregator.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/NewEffortAggregatorTest.java":[{"add":["126","","267","  @Test","268","  public void should_have_empty_measures_if_no_issues() {","269","    periodsHolder.setPeriod(PERIOD);","270","","271","    underTest.beforeComponent(FILE);","272","    underTest.afterComponent(FILE);","273","","274","    assertVariation(FILE, NEW_TECHNICAL_DEBT_KEY, 0);","275","    assertVariation(FILE, NEW_RELIABILITY_REMEDIATION_EFFORT_KEY, 0);","276","    assertVariation(FILE, NEW_SECURITY_REMEDIATION_EFFORT_KEY, 0);","277","  }","278","","282","    assertThat(newMeasure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);"],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/NewEffortAggregator.java":[{"add":["32","import org.sonar.core.issue.DefaultIssue;","87","    if (periodHolder.hasPeriod()) {","88","      computeMeasure(component, newMaintainabilityEffortMetric, counter.maintainabilitySum);","89","      computeMeasure(component, newReliabilityEffortMetric, counter.reliabilitySum);","90","      computeMeasure(component, newSecurityEffortMetric, counter.securitySum);","91","    }","96","    double variation = effortSum.isEmpty ? 0.0 : effortSum.newEffort;","97","    measureRepository.add(component, metric, Measure.newMeasureBuilder().setVariation(variation).createNoValue());"],"delete":["26","import org.sonar.core.issue.DefaultIssue;","87","    computeMeasure(component, newMaintainabilityEffortMetric, counter.maintainabilitySum);","88","    computeMeasure(component, newReliabilityEffortMetric, counter.reliabilitySum);","89","    computeMeasure(component, newSecurityEffortMetric, counter.securitySum);","94","    if (!effortSum.isEmpty) {","95","      measureRepository.add(component, metric, Measure.newMeasureBuilder().setVariation(effortSum.newEffort).createNoValue());","96","    }"]}]}},"9b55dfb4c834e56c248c4fd4e62e3347553f08f3":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/RepositoriesAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/RepositoriesActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/RepositoriesAction.java":[{"add":["86","    Pattern pattern = Pattern.compile(query == null ? MATCH_ALL : MATCH_ALL + Pattern.quote(query) + MATCH_ALL, Pattern.CASE_INSENSITIVE);"],"delete":["86","    Pattern pattern = Pattern.compile(query == null ? MATCH_ALL : MATCH_ALL + query + MATCH_ALL, Pattern.CASE_INSENSITIVE);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/RepositoriesActionTest.java":[{"add":["35","  private static final String EMPTY_JSON_RESPONSE = \"{\\\"repositories\\\":[]}\";","51","  }","53","  @Test","54","  public void should_list_repositories() throws Exception {","58","  }","59","","60","  @Test","61","  public void filter_repositories_by_name() throws Exception {","67","  @Test","68","  public void do_not_consider_query_as_regexp_when_filtering_repositories_by_name() throws Exception {","69","    \/\/ invalid regexp : do not fail. Query is not a regexp.","70","    newRequest().setParam(\"q\", \"[\").execute().assertJson(EMPTY_JSON_RESPONSE);","71","","72","    \/\/ this is not the \"match all\" regexp","73","    newRequest().setParam(\"q\", \".*\").execute().assertJson(EMPTY_JSON_RESPONSE);","74","","75","  }","76",""],"delete":["42","    wsTester = new WsTester(new RulesWs(new RepositoriesAction(dbTester.getDbClient())));","43","  }","44","","45","  @Test","46","  public void should_list_repositories() throws Exception {"]}]}},"8b35108c4852be1e995d897bdafbeb846d06fa65":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ws\/WsUtils.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/WsUtilsTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ws\/WsUtils.java":[{"add":["36","import static java.nio.charset.StandardCharsets.UTF_8;","37","import static org.sonarqube.ws.MediaTypes.JSON;","38","import static org.sonarqube.ws.MediaTypes.PROTOBUF;","49","      if (request.getMediaType().equals(PROTOBUF)) {","50","        response.stream().setMediaType(PROTOBUF);","53","        response.stream().setMediaType(JSON);","54","        try (JsonWriter writer = JsonWriter.of(new OutputStreamWriter(output, UTF_8))) {","59","      throw new IllegalStateException(\"Error while writing protobuf message\", e);"],"delete":["25","import java.nio.charset.StandardCharsets;","35","import org.sonarqube.ws.MediaTypes;","36","import org.sonarqube.ws.MessageFormatter;","49","      if (request.getMediaType().equals(MediaTypes.PROTOBUF)) {","50","        response.stream().setMediaType(MediaTypes.PROTOBUF);","53","        response.stream().setMediaType(MediaTypes.JSON);","54","        try (JsonWriter writer = JsonWriter.of(new OutputStreamWriter(output, StandardCharsets.UTF_8))) {","59","      throw new IllegalStateException(format(\"Error while writing protobuf message %s\", MessageFormatter.print(msg)), e);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/WsUtilsTest.java":[{"add":["71","  public void rethrow_error_as_ISE_when_error_writing_message() throws IOException {","79","    expectedException.expectMessage(\"Error while writing protobuf message\");"],"delete":["71","  public void log_message_when_error_writing_message() throws IOException {","79","    expectedException.expectMessage(\"Error while writing protobuf message org.sonarqube.ws.WsPermissions.Permission[name: \\\"permission-name\\\"]\");"]}]}},"2fc3a692b63d2fbb83bb35119481116aaa3932ea":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainerRenderer-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":[{"add":["124","      const { lastLine: previousLastLine } = this.state;","125","","127","        direction === 'down' ? this.checkLastLine(additionalLines, range.to) : previousLastLine;"],"delete":["125","        direction === 'down' ? this.checkLastLine(additionalLines, range.to) : undefined;","162","        lastLine={lastLine}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":[{"add":[],"delete":["32","  lastLine?: number;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainerRenderer-test.tsx":[{"add":[],"delete":["40","      lastLine={undefined}"]}]}},"ed698231768df7018f76f15dcada9b9f731c08bd":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/common\/LocationMessage.css":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/issues.less":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/common\/LocationMessage.css":[{"add":["10","  text-overflow: ellipsis;","11","  overflow: hidden;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":[{"add":["76","    <div className=\"issue-row\">","77","      <IssueMessage message={issue.message} rule={issue.rule} organization={issue.organization} \/>","78","","79","      <div className=\"issue-row-meta\">","80","        <ul className=\"list-inline issue-meta-list\">","81","          <li className=\"issue-meta\">","82","            <IssueChangelog","83","              creationDate={issue.creationDate}","84","              isOpen={props.currentPopup === 'changelog'}","85","              issue={issue}","86","              togglePopup={props.togglePopup}","87","              onFail={props.onFail}","89","          <\/li>","90","          {issue.textRange != null && (","91","            <li className=\"issue-meta\">","92","              <span className=\"issue-meta-label\" title={translate('line_number')}>","93","                L{issue.textRange.endLine}","94","              <\/span>","95","            <\/li>","96","          )}","97","          {displayLocations && (","98","            <li className=\"issue-meta\">","99","              {props.displayLocationsLink ? (","100","                <Link onClick={stopPropagation} target=\"_blank\" to={issueUrl}>","101","                  {locationsBadge}","103","              ) : (","104","                locationsBadge","106","            <\/li>","107","          )}","108","          <li className=\"issue-meta\">","109","            <Link","110","              className=\"js-issue-permalink link-no-underline\"","111","              onClick={stopPropagation}","112","              target=\"_blank\"","113","              to={issueUrl}>","114","              <LinkIcon \/>","115","            <\/Link>","116","          <\/li>","117","          {hasSimilarIssuesFilter && (","118","            <li className=\"issue-meta\">","119","              <SimilarIssuesFilter","120","                isOpen={props.currentPopup === 'similarIssues'}","121","                issue={issue}","122","                togglePopup={props.togglePopup}","123","                onFail={props.onFail}","124","                onFilter={props.onFilter}","125","              \/>","126","            <\/li>","127","          )}","128","        <\/ul>","129","      <\/div>","130","    <\/div>"],"delete":["76","    <table className=\"issue-table\">","77","      <tbody>","78","        <tr>","79","          <td>","80","            <IssueMessage","81","              message={issue.message}","82","              rule={issue.rule}","83","              organization={issue.organization}","85","          <\/td>","86","          <td className=\"issue-table-meta-cell issue-table-meta-cell-first\">","87","            <ul className=\"list-inline issue-meta-list\">","88","              <li className=\"issue-meta\">","89","                <IssueChangelog","90","                  creationDate={issue.creationDate}","91","                  isOpen={props.currentPopup === 'changelog'}","92","                  issue={issue}","93","                  togglePopup={props.togglePopup}","94","                  onFail={props.onFail}","95","                \/>","96","              <\/li>","97","              {issue.textRange != null && (","98","                <li className=\"issue-meta\">","99","                  <span className=\"issue-meta-label\" title={translate('line_number')}>","100","                    L{issue.textRange.endLine}","101","                  <\/span>","102","                <\/li>","103","              )}","104","              {displayLocations && (","105","                <li className=\"issue-meta\">","106","                  {props.displayLocationsLink ? (","107","                    <Link onClick={stopPropagation} target=\"_blank\" to={issueUrl}>","108","                      {locationsBadge}","109","                    <\/Link>","110","                  ) : (","111","                    locationsBadge","112","                  )}","113","                <\/li>","114","              )}","115","              <li className=\"issue-meta\">","116","                <Link","117","                  className=\"js-issue-permalink link-no-underline\"","118","                  onClick={stopPropagation}","119","                  target=\"_blank\"","120","                  to={issueUrl}>","121","                  <LinkIcon \/>","123","              <\/li>","124","              {hasSimilarIssuesFilter && (","125","                <li className=\"issue-meta\">","126","                  <SimilarIssuesFilter","127","                    isOpen={props.currentPopup === 'similarIssues'}","128","                    issue={issue}","129","                    togglePopup={props.togglePopup}","130","                    onFail={props.onFail}","131","                    onFilter={props.onFilter}","132","                  \/>","133","                <\/li>","135","            <\/ul>","136","          <\/td>","137","        <\/tr>","138","      <\/tbody>","139","    <\/table>"]}],"server\/sonar-web\/src\/main\/less\/components\/issues.less":[{"add":["76",".issue-row {","77","  display: flex;","78","  margin-bottom: 5px;","79","}","80","","81",".issue-row-meta {","82","  flex-grow: 0;","83","  padding-right: 5px;","84","  white-space: nowrap;","94","  flex-grow: 1;","100","  text-overflow: ellipsis;","101","  overflow: hidden;"],"delete":["76",".issue-table + .issue-table {","77","  margin-top: 5px;"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.js.snap":[{"add":["11","<div","12","  className=\"issue-row\"","14","  <IssueMessage","15","    message=\"Reduce the number of conditional operators (4) used in the expression\"","16","    organization=\"myorg\"","17","    rule=\"javascript:S1067\"","18","  \/>","19","  <div","20","    className=\"issue-row-meta\"","21","  >","22","    <ul","23","      className=\"list-inline issue-meta-list\"","24","    >","25","      <li","26","        className=\"issue-meta\"","28","        <IssueChangelog","29","          creationDate=\"2017-03-01T09:36:01+0100\"","30","          isOpen={false}","31","          issue={","32","            Object {","33","              \"creationDate\": \"2017-03-01T09:36:01+0100\",","34","              \"flows\": Array [],","35","              \"key\": \"AVsae-CQS-9G3txfbFN2\",","36","              \"line\": 25,","37","              \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","38","              \"organization\": \"myorg\",","39","              \"project\": \"myproject\",","40","              \"rule\": \"javascript:S1067\",","41","              \"secondaryLocations\": Array [],","42","              \"textRange\": Object {","43","                \"endLine\": 26,","44","                \"endOffset\": 15,","45","                \"startLine\": 25,","46","                \"startOffset\": 0,","47","              },","48","            }","49","          }","50","          onFail={[Function]}","51","          togglePopup={[Function]}","52","        \/>","53","      <\/li>","54","      <li","55","        className=\"issue-meta\"","56","      >","57","        <span","58","          className=\"issue-meta-label\"","59","          title=\"line_number\"","61","          L","62","          26","63","        <\/span>","64","      <\/li>","65","      <li","66","        className=\"issue-meta\"","67","      >","68","        <Link","69","          className=\"js-issue-permalink link-no-underline\"","70","          onClick={[Function]}","71","          onlyActiveOnIndex={false}","72","          style={Object {}}","73","          target=\"_blank\"","74","          to={","75","            Object {","76","              \"pathname\": \"\/project\/issues\",","77","              \"query\": Object {","78","                \"branch\": \"feature-1.0\",","79","                \"id\": \"myproject\",","80","                \"issues\": \"AVsae-CQS-9G3txfbFN2\",","81","                \"open\": \"AVsae-CQS-9G3txfbFN2\",","82","              },","83","            }","84","          }","85","        >","86","          <LinkIcon \/>","87","        <\/Link>","88","      <\/li>","89","    <\/ul>","90","  <\/div>","91","<\/div>","95","<div","96","  className=\"issue-row\"","98","  <IssueMessage","99","    message=\"Reduce the number of conditional operators (4) used in the expression\"","100","    organization=\"myorg\"","101","    rule=\"javascript:S1067\"","102","  \/>","103","  <div","104","    className=\"issue-row-meta\"","105","  >","106","    <ul","107","      className=\"list-inline issue-meta-list\"","108","    >","109","      <li","110","        className=\"issue-meta\"","112","        <IssueChangelog","113","          creationDate=\"2017-03-01T09:36:01+0100\"","114","          isOpen={false}","115","          issue={","116","            Object {","117","              \"creationDate\": \"2017-03-01T09:36:01+0100\",","118","              \"flows\": Array [],","119","              \"key\": \"AVsae-CQS-9G3txfbFN2\",","120","              \"line\": 25,","121","              \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","122","              \"organization\": \"myorg\",","123","              \"project\": \"myproject\",","124","              \"rule\": \"javascript:S1067\",","125","              \"secondaryLocations\": Array [],","126","              \"textRange\": Object {","127","                \"endLine\": 26,","128","                \"endOffset\": 15,","129","                \"startLine\": 25,","130","                \"startOffset\": 0,","131","              },","132","            }","133","          }","134","          onFail={[Function]}","135","          togglePopup={[Function]}","136","        \/>","137","      <\/li>","138","      <li","139","        className=\"issue-meta\"","140","      >","141","        <span","142","          className=\"issue-meta-label\"","143","          title=\"line_number\"","145","          L","146","          26","147","        <\/span>","148","      <\/li>","149","      <li","150","        className=\"issue-meta\"","151","      >","152","        <Link","153","          className=\"js-issue-permalink link-no-underline\"","154","          onClick={[Function]}","155","          onlyActiveOnIndex={false}","156","          style={Object {}}","157","          target=\"_blank\"","158","          to={","159","            Object {","160","              \"pathname\": \"\/project\/issues\",","161","              \"query\": Object {","162","                \"branch\": undefined,","163","                \"id\": \"myproject\",","164","                \"issues\": \"AVsae-CQS-9G3txfbFN2\",","165","                \"open\": \"AVsae-CQS-9G3txfbFN2\",","166","              },","167","            }","168","          }","169","        >","170","          <LinkIcon \/>","171","        <\/Link>","172","      <\/li>","173","      <li","174","        className=\"issue-meta\"","175","      >","176","        <SimilarIssuesFilter","177","          isOpen={false}","178","          issue={","179","            Object {","180","              \"creationDate\": \"2017-03-01T09:36:01+0100\",","181","              \"flows\": Array [],","182","              \"key\": \"AVsae-CQS-9G3txfbFN2\",","183","              \"line\": 25,","184","              \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","185","              \"organization\": \"myorg\",","186","              \"project\": \"myproject\",","187","              \"rule\": \"javascript:S1067\",","188","              \"secondaryLocations\": Array [],","189","              \"textRange\": Object {","190","                \"endLine\": 26,","191","                \"endOffset\": 15,","192","                \"startLine\": 25,","193","                \"startOffset\": 0,","194","              },","195","            }","196","          }","197","          onFail={[Function]}","198","          onFilter={[Function]}","199","          togglePopup={[Function]}","200","        \/>","201","      <\/li>","202","    <\/ul>","203","  <\/div>","204","<\/div>"],"delete":["11","<table","12","  className=\"issue-table\"","14","  <tbody>","15","    <tr>","16","      <td>","17","        <IssueMessage","18","          message=\"Reduce the number of conditional operators (4) used in the expression\"","19","          organization=\"myorg\"","20","          rule=\"javascript:S1067\"","21","        \/>","22","      <\/td>","23","      <td","24","        className=\"issue-table-meta-cell issue-table-meta-cell-first\"","26","        <ul","27","          className=\"list-inline issue-meta-list\"","29","          <li","30","            className=\"issue-meta\"","31","          >","32","            <IssueChangelog","33","              creationDate=\"2017-03-01T09:36:01+0100\"","34","              isOpen={false}","35","              issue={","36","                Object {","37","                  \"creationDate\": \"2017-03-01T09:36:01+0100\",","38","                  \"flows\": Array [],","39","                  \"key\": \"AVsae-CQS-9G3txfbFN2\",","40","                  \"line\": 25,","41","                  \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","42","                  \"organization\": \"myorg\",","43","                  \"project\": \"myproject\",","44","                  \"rule\": \"javascript:S1067\",","45","                  \"secondaryLocations\": Array [],","46","                  \"textRange\": Object {","47","                    \"endLine\": 26,","48","                    \"endOffset\": 15,","49","                    \"startLine\": 25,","50","                    \"startOffset\": 0,","51","                  },","52","                }","53","              }","54","              onFail={[Function]}","55","              togglePopup={[Function]}","56","            \/>","57","          <\/li>","58","          <li","59","            className=\"issue-meta\"","60","          >","61","            <span","62","              className=\"issue-meta-label\"","63","              title=\"line_number\"","64","            >","65","              L","66","              26","67","            <\/span>","68","          <\/li>","69","          <li","70","            className=\"issue-meta\"","71","          >","72","            <Link","73","              className=\"js-issue-permalink link-no-underline\"","74","              onClick={[Function]}","75","              onlyActiveOnIndex={false}","76","              style={Object {}}","77","              target=\"_blank\"","78","              to={","79","                Object {","80","                  \"pathname\": \"\/project\/issues\",","81","                  \"query\": Object {","82","                    \"branch\": \"feature-1.0\",","83","                    \"id\": \"myproject\",","84","                    \"issues\": \"AVsae-CQS-9G3txfbFN2\",","85","                    \"open\": \"AVsae-CQS-9G3txfbFN2\",","86","                  },","87","                }","88","              }","89","            >","90","              <LinkIcon \/>","91","            <\/Link>","92","          <\/li>","93","        <\/ul>","94","      <\/td>","95","    <\/tr>","96","  <\/tbody>","97","<\/table>","101","<table","102","  className=\"issue-table\"","104","  <tbody>","105","    <tr>","106","      <td>","107","        <IssueMessage","108","          message=\"Reduce the number of conditional operators (4) used in the expression\"","109","          organization=\"myorg\"","110","          rule=\"javascript:S1067\"","111","        \/>","112","      <\/td>","113","      <td","114","        className=\"issue-table-meta-cell issue-table-meta-cell-first\"","116","        <ul","117","          className=\"list-inline issue-meta-list\"","119","          <li","120","            className=\"issue-meta\"","121","          >","122","            <IssueChangelog","123","              creationDate=\"2017-03-01T09:36:01+0100\"","124","              isOpen={false}","125","              issue={","126","                Object {","127","                  \"creationDate\": \"2017-03-01T09:36:01+0100\",","128","                  \"flows\": Array [],","129","                  \"key\": \"AVsae-CQS-9G3txfbFN2\",","130","                  \"line\": 25,","131","                  \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","132","                  \"organization\": \"myorg\",","133","                  \"project\": \"myproject\",","134","                  \"rule\": \"javascript:S1067\",","135","                  \"secondaryLocations\": Array [],","136","                  \"textRange\": Object {","137","                    \"endLine\": 26,","138","                    \"endOffset\": 15,","139","                    \"startLine\": 25,","140","                    \"startOffset\": 0,","141","                  },","142","                }","143","              }","144","              onFail={[Function]}","145","              togglePopup={[Function]}","146","            \/>","147","          <\/li>","148","          <li","149","            className=\"issue-meta\"","150","          >","151","            <span","152","              className=\"issue-meta-label\"","153","              title=\"line_number\"","154","            >","155","              L","156","              26","157","            <\/span>","158","          <\/li>","159","          <li","160","            className=\"issue-meta\"","161","          >","162","            <Link","163","              className=\"js-issue-permalink link-no-underline\"","164","              onClick={[Function]}","165","              onlyActiveOnIndex={false}","166","              style={Object {}}","167","              target=\"_blank\"","168","              to={","169","                Object {","170","                  \"pathname\": \"\/project\/issues\",","171","                  \"query\": Object {","172","                    \"branch\": undefined,","173","                    \"id\": \"myproject\",","174","                    \"issues\": \"AVsae-CQS-9G3txfbFN2\",","175","                    \"open\": \"AVsae-CQS-9G3txfbFN2\",","176","                  },","177","                }","178","              }","179","            >","180","              <LinkIcon \/>","181","            <\/Link>","182","          <\/li>","183","          <li","184","            className=\"issue-meta\"","185","          >","186","            <SimilarIssuesFilter","187","              isOpen={false}","188","              issue={","189","                Object {","190","                  \"creationDate\": \"2017-03-01T09:36:01+0100\",","191","                  \"flows\": Array [],","192","                  \"key\": \"AVsae-CQS-9G3txfbFN2\",","193","                  \"line\": 25,","194","                  \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","195","                  \"organization\": \"myorg\",","196","                  \"project\": \"myproject\",","197","                  \"rule\": \"javascript:S1067\",","198","                  \"secondaryLocations\": Array [],","199","                  \"textRange\": Object {","200","                    \"endLine\": 26,","201","                    \"endOffset\": 15,","202","                    \"startLine\": 25,","203","                    \"startOffset\": 0,","204","                  },","205","                }","206","              }","207","              onFail={[Function]}","208","              onFilter={[Function]}","209","              togglePopup={[Function]}","210","            \/>","211","          <\/li>","212","        <\/ul>","213","      <\/td>","214","    <\/tr>","215","  <\/tbody>","216","<\/table>"]}]}}}