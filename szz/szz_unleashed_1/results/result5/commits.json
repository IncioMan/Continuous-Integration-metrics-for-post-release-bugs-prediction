{"68acdc5ba2456d2a7b871a1c8f85eebf246f175d":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/index\/UserIndexTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/issue\/AutoAssignTest.java":"MODIFY","it\/it-projects\/issue\/AutoAssignTest\/src\/sample.xoo":"ADD","it\/it-projects\/issue\/AutoAssignTest\/src\/sample.xoo.measures":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndexDefinition.java":"MODIFY","it\/it-projects\/issue\/AutoAssignTest\/src\/sample.xoo.scm":"ADD","it\/it-projects\/issue\/AutoAssignTest\/sonar-project.properties":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndex.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/index\/UserIndexTest.java":[{"add":["140","  public void getAtMostThreeActiveUsersForScmAccount_is_case_insensitive_for_email()  {","145","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"the_email@corp.com\")).hasSize(1);","146","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"email\")).isEmpty();","150","  public void getAtMostThreeActiveUsersForScmAccount_is_case_insensitive_for_scm_account()  {","155","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"JOHN.SMIth\")).hasSize(1);","156","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"JOHN.SMITH\")).hasSize(1);","157","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"JOHN\")).isEmpty();"],"delete":["140","  public void getAtMostThreeActiveUsersForScmAccount_is_case_sensitive_for_email()  {","145","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"the_email@corp.com\")).isEmpty();","149","  public void getAtMostThreeActiveUsersForScmAccount_is_case_sensitive_for_scm_account()  {","154","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"JOHN.SMIth\")).isEmpty();","155","    assertThat(underTest.getAtMostThreeActiveUsersForScmAccount(\"JOHN.SMITH\")).isEmpty();"]}],"it\/it-tests\/src\/test\/java\/it\/issue\/AutoAssignTest.java":[{"add":["21","import java.util.Arrays;","23","import javax.annotation.Nullable;","30","import org.sonarqube.ws.WsUsers;","32","import org.sonarqube.ws.client.WsClient;","33","import org.sonarqube.ws.client.user.CreateRequest;","34","import org.sonarqube.ws.client.user.SearchRequest;","52","    String projectKey = projectAnalysisRule.registerProject(\"issue\/AutoAssignTest\");","60","    newAdminWsClient(ORCHESTRATOR).wsConnector().call(new PostRequest(\"api\/projects\/delete\").setParam(\"project\", \"AutoAssignTest\"));","61","    deleteAllUsers();","69","    \/\/ verify that login matches, case-sensitive","70","    createUser(\"user1\", \"User 1\", \"user1@email.com\");","71","    createUser(\"USER2\", \"User 2\", \"user2@email.com\");","72","    \/\/ verify that name is not used to match, whatever the case","73","    createUser(\"user3\", \"User 3\", \"user3@email.com\");","74","    createUser(\"user4\", \"USER 4\", \"user4@email.com\");","75","    \/\/ verify that email matches, case-insensitive","76","    createUser(\"user5\", \"User 5\", \"user5@email.com\");","77","    createUser(\"user6\", \"User 6\", \"USER6@email.COM\");","78","    \/\/ verify that SCM account matches, case-insensitive","79","    createUser(\"user7\", \"User 7\", \"user7@email.com\", \"user7ScmAccount\");","80","    createUser(\"user8\", \"User 8\", \"user8@email.com\", \"user8SCMaccOUNT\");","81","","84","    List<Issue> issues = search(IssueQuery.create().components(\"AutoAssignTest:src\/sample.xoo\").sort(\"FILE_LINE\")).list();","85","    \/\/ login match, case-sensitive","86","    verifyIssueAssignee(issues, 1, \"user1\");","87","    verifyIssueAssignee(issues, 2, null);","88","    \/\/ user name is not used to match","89","    verifyIssueAssignee(issues, 3, null);","90","    verifyIssueAssignee(issues, 4, null);","91","    \/\/ email match, case-insensitive","92","    verifyIssueAssignee(issues, 5, \"user5\");","93","    verifyIssueAssignee(issues, 6, \"user6\");","94","    \/\/ SCM account match, case-insensitive","95","    verifyIssueAssignee(issues, 7, \"user7\");","96","    verifyIssueAssignee(issues, 8, \"user8\");","97","  }","98","","99","  private static void verifyIssueAssignee(List<Issue> issues, int line, @Nullable String expectedAssignee) {","100","    assertThat(issues.get(line - 1).assignee()).isEqualTo(expectedAssignee);","105","    createUser(\"user1\", \"User 1\", \"user1@email.com\");","106","    createUser(\"user2\", \"User 2\", \"user2@email.com\");","107","    setServerProperty(ORCHESTRATOR, \"sonar.issues.defaultAssigneeLogin\", \"user2\");","110","    \/\/ user1 is assigned to his issues. All other issues are assigned to the default assignee.","111","    assertThat(search(IssueQuery.create().assignees(\"user1\")).list()).hasSize(1);","112","    assertThat(search(IssueQuery.create().assignees(\"user2\")).list()).hasSize(8);","127","    createUser(\"user1\", \"User 1\", \"user1@email.com\");","149","    assertThat(search(IssueQuery.create().assignees(\"user1\")).list()).hasSize(1);","152","  private static void createUser(String login, String name, String email, String... scmAccounts) {","153","    newAdminWsClient(ORCHESTRATOR).users().create(","154","      CreateRequest.builder()","155","        .setLogin(login)","156","        .setName(name)","157","        .setEmail(email)","158","        .setPassword(\"xxxxxxx\")","159","        .setScmAccounts(Arrays.asList(scmAccounts))","160","        .build());","161","  }","162","","163","  private static void deleteAllUsers() {","164","    WsClient wsClient = newAdminWsClient(ORCHESTRATOR);","165","    WsUsers.SearchWsResponse searchResponse = wsClient.users().search(SearchRequest.builder().build());","166","    searchResponse.getUsersList().forEach(user -> {","167","      wsClient.wsConnector().call(new PostRequest(\"api\/users\/deactivate\").setParam(\"login\", user.getLogin()));","168","    });"],"delete":["29","import org.sonarqube.ws.client.WsResponse;","39","  static final String SIMON_USER = \"simon\";","40","","48","    ORCHESTRATOR.resetData();","49","","51","    String projectKey = projectAnalysisRule.registerProject(\"issue\/xoo-with-scm\");","59","    \/\/ Remove user simon","60","    newAdminWsClient(ORCHESTRATOR).wsConnector().call(","61","      new PostRequest(\"api\/users\/deactivate\")","62","        .setParam(\"login\", SIMON_USER));","70","    createUser(SIMON_USER, SIMON_USER);","73","    \/\/ Simon has 3 issues","74","    assertThat(search(IssueQuery.create().assignees(SIMON_USER)).list()).hasSize(3);","75","    \/\/ Other issues are not assigned as no user have been created on their author","76","    assertThat(search(IssueQuery.create().assigned(false)).list()).hasSize(10);","81","    createUser(SIMON_USER, SIMON_USER);","82","    setServerProperty(ORCHESTRATOR, \"sonar.issues.defaultAssigneeLogin\", SIMON_USER);","85","    \/\/ Simon has all issues","86","    assertThat(search(IssueQuery.create().assignees(SIMON_USER)).list()).hasSize(13);","101","    createUser(SIMON_USER, SIMON_USER);","123","    assertThat(search(IssueQuery.create().assignees(SIMON_USER)).list()).hasSize(3);","126","  private void createUser(String login, String password) {","127","    WsResponse response = newAdminWsClient(ORCHESTRATOR).wsConnector().call(","128","      new PostRequest(\"api\/users\/create\")","129","        .setParam(\"login\", login)","130","        .setParam(\"name\", login)","131","        .setParam(\"password\", password));","132","    assertThat(response.code()).isEqualTo(200);"]}],"it\/it-projects\/issue\/AutoAssignTest\/src\/sample.xoo":[{"add":[],"delete":[]}],"it\/it-projects\/issue\/AutoAssignTest\/src\/sample.xoo.measures":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndexDefinition.java":[{"add":["64","    mapping.stringFieldBuilder(FIELD_SCM_ACCOUNTS).disableNorms().addSubFields(SORTABLE_ANALYZER).build();"],"delete":["64","    mapping.stringFieldBuilder(FIELD_SCM_ACCOUNTS).disableNorms().build();"]}],"it\/it-projects\/issue\/AutoAssignTest\/src\/sample.xoo.scm":[{"add":[],"delete":[]}],"it\/it-projects\/issue\/AutoAssignTest\/sonar-project.properties":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndex.java":[{"add":["49","import static org.elasticsearch.index.query.QueryBuilders.matchQuery;","52","import static org.sonar.server.es.DefaultIndexSettingsElement.SORTABLE_ANALYZER;","95","            .should(matchQuery(SORTABLE_ANALYZER.subField(FIELD_EMAIL), scmAccount))","96","            .should(matchQuery(SORTABLE_ANALYZER.subField(FIELD_SCM_ACCOUNTS), scmAccount))))"],"delete":["93","            .should(termQuery(FIELD_EMAIL, scmAccount))","94","            .should(termQuery(FIELD_SCM_ACCOUNTS, scmAccount))))"]}]}},"f5d0d6237b0e52afcb1981953a7c08baee794915":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/Changelog.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/__tests__\/Changelog-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/Changelog.tsx":[{"add":["40","    e => -Number(parseDate(e.date)),"],"delete":["23","import * as startOfMinute from 'date-fns\/start_of_minute';","41","    e => -Number(startOfMinute(parseDate(e.date))),"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1505","my_account.tokens_last_usage=Last use"],"delete":["1505","my_account.tokens_last_usage=Last usage"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/__tests__\/Changelog-test.tsx":[{"add":["81","","82","it('should render events sorted by time and action', () => {","83","  const events = [","84","    createEvent({ date: '2019-02-07T14:03:45', action: 'DEACTIVATED' }),","85","    createEvent({ date: '2019-02-07T14:03:14', action: 'DEACTIVATED' }),","86","    createEvent({ date: '2019-02-07T14:03:14', action: 'ACTIVATED' }),","87","    createEvent({ date: '2019-02-07T14:03:07', action: 'ACTIVATED' })","88","  ];","89","  const changelog = shallow(<Changelog events={events} organization={null} \/>);","90","  const rows = changelog.find('tbody').find('tr');","91","","92","  const getAction = (index: number) =>","93","    rows","94","      .at(index)","95","      .childAt(2)","96","      .childAt(0)","97","      .text();","98","","99","  expect(getAction(0)).toBe('quality_profiles.changelog.DEACTIVATED');","100","  expect(getAction(1)).toBe('quality_profiles.changelog.ACTIVATED');","101","  expect(getAction(2)).toBe('quality_profiles.changelog.DEACTIVATED');","102","  expect(getAction(3)).toBe('quality_profiles.changelog.ACTIVATED');","103","});"],"delete":[]}]}},"09a93fb52007589a5f49fca38af56a9c4dcde478":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStepTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStep.java":[{"add":["107","    if (service.hasProjectSubscribersForTypes(analysisMetadataHolder.getProject().getUuid(), NOTIF_TYPES)) {"],"delete":["107","    if (service.hasProjectSubscribersForTypes(project.getUuid(), NOTIF_TYPES)) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStepTest.java":[{"add":["63","import org.sonar.server.project.Project;","66","import static java.util.Collections.emptyList;","150","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","163","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","197","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","218","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","235","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","236","    ComponentDto branch = setUpBranch(project);","239","    when(notificationService.hasProjectSubscribersForTypes(project.uuid(), NOTIF_TYPES)).thenReturn(true);","240","    analysisMetadataHolder.setProject(Project.from(project));","256","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","257","    ComponentDto branch = setUpBranch(project);","260","    when(notificationService.hasProjectSubscribersForTypes(project.uuid(), NOTIF_TYPES)).thenReturn(true);","261","    analysisMetadataHolder.setProject(Project.from(project));","278","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","279","    ComponentDto branch = setUpBranch(project);","283","    analysisMetadataHolder.setProject(Project.from(project));","297","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","344","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","415","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","459","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","487","    analysisMetadataHolder.setProject(new Project(PROJECT.getUuid(), PROJECT.getKey(), PROJECT.getName(), null, emptyList()));","488","    when(notificationService.hasProjectSubscribersForTypes(PROJECT.getUuid(), NOTIF_TYPES)).thenReturn(true);","506","    analysisMetadataHolder.setProject(Project.from(project));","532","    when(notificationService.hasProjectSubscribersForTypes(project.projectUuid(), NOTIF_TYPES)).thenReturn(true);","552","    analysisMetadataHolder.setProject(Project.from(project));","562","    when(notificationService.hasProjectSubscribersForTypes(project.uuid(), NOTIF_TYPES)).thenReturn(true);","592","    analysisMetadataHolder.setProject(Project.from(project));","593","    when(notificationService.hasProjectSubscribersForTypes(project.uuid(), NOTIF_TYPES)).thenReturn(true);","641","  private ComponentDto setUpBranch(ComponentDto project) {"],"delete":["142","","230","    ComponentDto branch = setUpProjectWithBranch();","233","    when(notificationService.hasProjectSubscribersForTypes(branch.uuid(), NOTIF_TYPES)).thenReturn(true);","249","    ComponentDto branch = setUpProjectWithBranch();","252","    when(notificationService.hasProjectSubscribersForTypes(branch.uuid(), NOTIF_TYPES)).thenReturn(true);","269","    ComponentDto branch = setUpProjectWithBranch();","514","    when(notificationService.hasProjectSubscribersForTypes(PROJECT.getUuid(), NOTIF_TYPES)).thenReturn(true);","543","    when(notificationService.hasProjectSubscribersForTypes(branch.uuid(), NOTIF_TYPES)).thenReturn(true);","573","    when(notificationService.hasProjectSubscribersForTypes(PROJECT.getUuid(), NOTIF_TYPES)).thenReturn(true);","621","  private ComponentDto setUpProjectWithBranch() {","622","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());"]}]}},"361a052fbf628ad177980c883984e80102242bc1":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueMapper.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/DeleteIf.java":"ADD","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeQueueDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeQueueMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueDao.java":"MODIFY","server\/sonar-ce-common\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueImpl.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueMapper.java":[{"add":["76","  int deleteByUuid(@Param(\"uuid\") String uuid, @Nullable @Param(\"deleteIf\") DeleteIf deleteIf);"],"delete":["76","  void deleteByUuid(@Param(\"uuid\") String uuid);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/DeleteIf.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeQueueDaoTest.java":[{"add":["189","    insertPending(TASK_UUID_2, COMPONENT_UUID_1);","191","    int deletedCount = underTest.deleteByUuid(db.getSession(), \"UNKNOWN\");","192","    assertThat(deletedCount).isEqualTo(0);","195","    deletedCount = underTest.deleteByUuid(db.getSession(), TASK_UUID_1);","196","    assertThat(deletedCount).isEqualTo(1);","197","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_1)).isEmpty();","198","","199","    deletedCount = underTest.deleteByUuid(db.getSession(), TASK_UUID_2, null);","200","    assertThat(deletedCount).isEqualTo(1);","201","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_2)).isEmpty();","202","  }","203","","204","  @Test","205","  public void test_delete_with_expected_status() {","206","    insertPending(TASK_UUID_1, COMPONENT_UUID_1);","207","    insertInProgress(TASK_UUID_2, COMPONENT_UUID_1);","208","","209","    int deletedCount = underTest.deleteByUuid(db.getSession(), \"UNKNOWN\", null);","210","    assertThat(deletedCount).isEqualTo(0);","211","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_1)).isPresent();","212","","213","    deletedCount = underTest.deleteByUuid(db.getSession(), TASK_UUID_1, new DeleteIf(IN_PROGRESS));","214","    assertThat(deletedCount).isEqualTo(0);","215","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_1)).isPresent();","216","","217","    deletedCount = underTest.deleteByUuid(db.getSession(), TASK_UUID_2, new DeleteIf(PENDING));","218","    assertThat(deletedCount).isEqualTo(0);","219","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_2)).isPresent();","220","","221","    deletedCount = underTest.deleteByUuid(db.getSession(), TASK_UUID_1, new DeleteIf(PENDING));","222","    assertThat(deletedCount).isEqualTo(1);","223","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_1)).isEmpty();","224","","225","    deletedCount = underTest.deleteByUuid(db.getSession(), TASK_UUID_2, new DeleteIf(IN_PROGRESS));","226","    assertThat(deletedCount).isEqualTo(1);","227","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_2)).isEmpty();","584","  private CeQueueDto insertInProgress(String uuid, String componentUuid) {","585","    CeQueueDto ceQueueDto = insertPending(uuid);","586","    CeQueueTesting.makeInProgress(db.getSession(), \"workerUuid\", System2.INSTANCE.now(), ceQueueDto);","587","    return underTest.selectByUuid(db.getSession(), uuid).get();","588","  }","589",""],"delete":["190","    underTest.deleteByUuid(db.getSession(), \"UNKNOWN\");","193","    underTest.deleteByUuid(db.getSession(), TASK_UUID_1);","194","    assertThat(underTest.selectByUuid(db.getSession(), TASK_UUID_1).isPresent()).isFalse();"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeQueueMapper.xml":[{"add":["257","      <if test=\"deleteIf != null\">","258","        and status = #{deleteIf.expectedStatus,jdbcType=VARCHAR}","259","      <\/if>"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueDao.java":[{"add":["116","  public int deleteByUuid(DbSession session, String uuid) {","117","    return deleteByUuid(session, uuid, null);","118","  }","119","","120","  public int deleteByUuid(DbSession session, String uuid, @Nullable DeleteIf deleteIf) {","121","    return mapper(session).deleteByUuid(uuid, deleteIf);"],"delete":["116","  public void deleteByUuid(DbSession session, String uuid) {","117","    mapper(session).deleteByUuid(uuid);"]}],"server\/sonar-ce-common\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueImpl.java":[{"add":["36","import org.sonar.api.utils.log.Loggers;","44","import org.sonar.db.ce.DeleteIf;","200","  protected void remove(DbSession dbSession, CeQueueDto queueDto, CeActivityDto activityDto) {","201","    String taskUuid = queueDto.getUuid();","202","    CeQueueDto.Status expectedQueueDtoStatus = queueDto.getStatus();","203","","204","    dbClient.ceActivityDao().insert(dbSession, activityDto);","205","    dbClient.ceTaskInputDao().deleteByUuids(dbSession, singleton(taskUuid));","206","    int deletedTasks = dbClient.ceQueueDao().deleteByUuid(dbSession, taskUuid, new DeleteIf(expectedQueueDtoStatus));","207","","208","    if (deletedTasks == 1) {","209","      dbSession.commit();","210","    } else {","211","      Loggers.get(CeQueueImpl.class).debug(","212","        \"Remove rolled back because task in queue with uuid {} and status {} could not be deleted\",","213","        taskUuid, expectedQueueDtoStatus);","214","      dbSession.rollback();","215","    }","216","  }","217",""],"delete":["247","  protected void remove(DbSession dbSession, CeQueueDto queueDto, CeActivityDto activityDto) {","248","    dbClient.ceActivityDao().insert(dbSession, activityDto);","249","    dbClient.ceQueueDao().deleteByUuid(dbSession, queueDto.getUuid());","250","    dbClient.ceTaskInputDao().deleteByUuids(dbSession, singleton(queueDto.getUuid()));","251","    dbSession.commit();","252","  }","253",""]}]}},"7275c439ba18a33694ea41c97dce40ac0e84fcd5":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIteratorForSingleChunk.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIteratorForSingleChunk.java":[{"add":["86","  private static final String PROJECT_FILTER = \" and c.project_uuid = ? and i.project_uuid = ? \";","157","      stmt.setString(index, projectUuid);","158","      index++;"],"delete":["86","  private static final String PROJECT_FILTER = \" and c.project_uuid = ?\";"]}]}},"8d3f4bd7495ee6aa204f31c7329ffffedc7e5ae7":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/ProjectPullRequests.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisher.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/branch\/ws\/ListActionTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/ProjectBranches.java":"MODIFY","server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/branch\/ws\/list-example.json":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/ProjectPullRequests.java":[{"add":["34","  private static final BinaryOperator<PullRequestInfo> PICK_MOST_RECENT_ANALYSIS = (a, b) -> a.getAnalysisDate() < b.getAnalysisDate() ? b : a;","38","    this.pullRequestsByBranchName = pullRequestInfos.stream().collect(Collectors.toMap(PullRequestInfo::getBranch, Function.identity(), PICK_MOST_RECENT_ANALYSIS));"],"delete":["34","","38","    BinaryOperator<PullRequestInfo> mergeFunction = pickMostRecentAnalysis();","39","    this.pullRequestsByBranchName = pullRequestInfos.stream().collect(Collectors.toMap(PullRequestInfo::getBranch, Function.identity(), mergeFunction));","40","  }","41","","42","  private static BinaryOperator<PullRequestInfo> pickMostRecentAnalysis() {","43","    return (a, b) -> a.getAnalysisDate() < b.getAnalysisDate() ? b : a;"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisher.java":[{"add":[],"delete":["75",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/branch\/ws\/ListActionTest.java":[{"add":["109","    ComponentDto project = db.components().insertMainBranch(p -> p.setDbKey(\"sonarqube\"));","111","      newAnalysis(project).setLast(true).setCreatedAt(parseDateTime(\"2017-04-01T01:15:42+0100\").getTime()));","112","    db.measures().insertLiveMeasure(project, qualityGateStatus, m -> m.setData(\"ERROR\"));","115","      .insertProjectBranch(project, b -> b.setKey(\"feature\/foo\").setBranchType(SHORT).setMergeBranchUuid(project.uuid()));","138","    ComponentDto project = db.components().insertMainBranch(p -> p.setDbKey(\"sonarqube\"));","140","      newAnalysis(project).setLast(true).setCreatedAt(parseDateTime(\"2017-04-01T01:15:42+0100\").getTime()));","141","    db.measures().insertLiveMeasure(project, qualityGateStatus, m -> m.setData(\"ERROR\"));","144","      .insertProjectBranch(project, b -> b.setKey(\"feature\/foo\").setBranchType(SHORT).setMergeBranchUuid(project.uuid()));"],"delete":["109","    ComponentDto project = db.components().insertPrivateProject(p -> p.setDbKey(\"sonarqube\"));","110","","111","    ComponentDto longLivingBranch = db.components()","112","      .insertProjectBranch(project, b -> b.setKey(\"feature\/bar\").setBranchType(org.sonar.db.component.BranchType.LONG));","114","      newAnalysis(longLivingBranch).setLast(true).setCreatedAt(parseDateTime(\"2017-04-01T01:15:42+0100\").getTime()));","115","    db.measures().insertLiveMeasure(longLivingBranch, qualityGateStatus, m -> m.setData(\"OK\"));","118","      .insertProjectBranch(project, b -> b.setKey(\"feature\/foo\").setBranchType(SHORT).setMergeBranchUuid(longLivingBranch.uuid()));","141","    ComponentDto project = db.components().insertPrivateProject(p -> p.setDbKey(\"sonarqube\"));","142","","143","    ComponentDto longLivingBranch = db.components()","144","      .insertProjectBranch(project, b -> b.setKey(\"feature\/bar\").setBranchType(org.sonar.db.component.BranchType.LONG));","146","      newAnalysis(longLivingBranch).setLast(true).setCreatedAt(parseDateTime(\"2017-04-01T01:15:42+0100\").getTime()));","147","    db.measures().insertLiveMeasure(longLivingBranch, qualityGateStatus, m -> m.setData(\"OK\"));","150","      .insertProjectBranch(project, b -> b.setKey(\"feature\/foo\").setBranchType(SHORT).setMergeBranchUuid(longLivingBranch.uuid()));"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/ProjectBranches.java":[{"add":[],"delete":["25","import javax.annotation.Nullable;","33","","35","","36","  @Nullable","61","  @CheckForNull"]}],"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/branch\/ws\/list-example.json":[{"add":["6","      \"mergeBranch\": \"master\",","14","    },","15","    {","16","      \"name\": \"master\",","17","      \"isMain\": true,","18","      \"type\": \"LONG\",","19","      \"status\": {","20","        \"qualityGateStatus\": \"ERROR\"","21","      },","22","      \"analysisDate\": \"2017-04-01T01:15:42+0100\""],"delete":["3","      \"name\": \"feature\/bar\",","4","      \"isMain\": false,","5","      \"type\": \"LONG\",","6","      \"status\": {","7","        \"qualityGateStatus\": \"OK\"","8","      },","9","      \"analysisDate\": \"2017-04-01T01:15:42+0100\"","10","    },","11","    {","15","      \"mergeBranch\": \"feature\/bar\","]}]}},"bab3c7d6847c723bd3f0cacd4ef4b0cb3099947d":{"changes":{"build.gradle":"MODIFY"},"diff":{"build.gradle":[{"add":["99","      dependencySet(group: 'com.fasterxml.jackson.core', version: '2.9.5') {"],"delete":["99","      dependencySet(group: 'com.fasterxml.jackson.core', version: '2.8.11') {"]}]}},"af241cb7560f391516e5b5039814fcd72766bf23":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["55","import handleRequiredAuthentication from '..\/..\/..\/app\/utils\/handleRequiredAuthentication';","142","    if (this.state.myIssues && !this.props.currentUser.isLoggedIn) {","143","      handleRequiredAuthentication();","144","      return;","145","    }","146",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":[{"add":["26","import handleRequiredAuthentication from '..\/..\/..\/app\/utils\/handleRequiredAuthentication';","63","    if (this.props.isFavorite && !this.context.currentUser.isLoggedIn) {","64","      handleRequiredAuthentication();","65","      return;","66","    }"],"delete":[]}]}},"47b6860dcd8520b6a2d7cdf66f26a6c41b26bbfb":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsSettings.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsSettingsTest.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsSettings.java":[{"add":["46","  private static final String SECCOMP_PROPERTY = \"bootstrap.system_call_filter\";","78","    configureOthers(builder);","149","  private void configureOthers(Map<String, String> builder) {","151","    if (props.value(\"sonar.search.javaAdditionalOpts\", \"\").contains(\"-D\" + SECCOMP_PROPERTY + \"=false\")) {","152","      builder.put(SECCOMP_PROPERTY, \"false\");","153","    }"],"delete":["77","    configureAction(builder);","148","  private static void configureAction(Map<String, String> builder) {"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsSettingsTest.java":[{"add":["313","  @Test","314","  public void enable_seccomp_filter_by_default() throws Exception {","315","    Props props = minProps(CLUSTER_DISABLED);","316","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","317","","318","    assertThat(settings.get(\"bootstrap.system_call_filter\")).isNull();","319","  }","320","","321","  @Test","322","  public void disable_seccomp_filter_if_configured_in_search_additional_props() throws Exception {","323","    Props props = minProps(CLUSTER_DISABLED);","324","    props.set(\"sonar.search.javaAdditionalOpts\", \"-Xmx1G -Dbootstrap.system_call_filter=false -Dfoo=bar\");","325","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","326","","327","    assertThat(settings.get(\"bootstrap.system_call_filter\")).isEqualTo(\"false\");","328","  }","329",""],"delete":[]}]}},"ce5749103936828955d9de52108a0e4b5cd76f12":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/SearchBox.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/SearchBox-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/SearchBox.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/SearchBox.tsx":[{"add":["133","      <div","134","        className={classNames('search-box', this.props.className)}","135","        id={this.props.id}","136","        title={tooShort ? translateWithParameters('select2.tooShort', minLength!) : ''}>","167","          <span className=\"search-box-note\">"],"delete":["133","      <div className={classNames('search-box', this.props.className)} id={this.props.id}>","164","          <span","165","            className=\"search-box-note\"","166","            title={translateWithParameters('select2.tooShort', minLength!)}>"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/SearchBox-test.tsx.snap":[{"add":["5","  title=\"\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":[{"add":["249","                          title=\"\"","496","                              title=\"\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/SearchBox.css":[{"add":["68","  pointer-events: none;"],"delete":[]}]}},"5fe552a778b1d29165f38208a2f91ea5adbac0d5":{"changes":{"server\/sonar-web\/yarn.lock":"MODIFY"},"diff":{"server\/sonar-web\/yarn.lock":[{"add":["6210","mdast-util-toc@2.1.0:"],"delete":["6210","mdast-util-toc@2.1.0, mdast-util-toc@^2.0.0:","8094","remark-slug@^5.0.0:","8095","  version \"5.1.1\"","8096","  resolved \"https:\/\/registry.yarnpkg.com\/remark-slug\/-\/remark-slug-5.1.1.tgz#eb5dba0cf779487ef7ddf65c735ba4d4ca017542\"","8097","  integrity sha512-r591rdoDPJkSSAVvEaTVUkqbMp7c7AyZfif14V0Dp66GQkOHzaPAS6wyhawSbqpS0ZdTnfJS+TltFoxzi6bdIA==","8098","  dependencies:","8099","    github-slugger \"^1.0.0\"","8100","    mdast-util-to-string \"^1.0.0\"","8101","    unist-util-visit \"^1.0.0\"","8102","","8123","remark-toc@5.0.0:","8124","  version \"5.0.0\"","8125","  resolved \"https:\/\/registry.yarnpkg.com\/remark-toc\/-\/remark-toc-5.0.0.tgz#f1e13ed11062ad4d102b02e70168bd85015bf129\"","8126","  integrity sha512-j2A\/fpio1nzNRJtY6nVaFUCtXNfFPxaj6I5UHFsFgo4xKmc0VokRRIzGqz4Vfs7u+dPrHjnoHkImu1Dia0jDSQ==","8127","  dependencies:","8128","    mdast-util-toc \"^2.0.0\"","8129","    remark-slug \"^5.0.0\"","8130",""]}]}},"5cb5deb5e5f41648120e8757104c0fd412483e26":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/DbLineHashVersion.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/PersistFileSourcesStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MutableMovedFilesRepositoryRule.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/RemoveProcessedComponentsVisitor.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/source\/FileSourceDao.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/IntegrateIssuesVisitorTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/MovedIssueVisitor.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/ClosedIssuesInputFactoryTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/scm\/ScmInfoDbLoaderTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesHashRepositoryImpl.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MutableMovedFilesRepositoryImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesDiffImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesHashRepositoryImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/ClosedIssuesInputFactory.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/FileSimilarity.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MovedFilesRepository.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/TrackerBaseInputFactoryTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MutableMovedFilesRepositoryImpl.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/MovedIssueVisitorTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/TrackerBaseInputFactory.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/RemoveProcessedComponentsVisitorTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/scm\/ScmInfoDbLoader.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesDiffImpl.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/DbLineHashVersion.java":[{"add":["44","   * Reads from DB the version of line hashes for a component and returns whether it was generated taking into account the ranges of significant code.","52","  \/**","53","   * Reads from DB the version of line hashes for a component and returns whether it was generated taking into account the ranges of significant code.","54","   * The response is cached.","55","   * Returns false if the component is not in the DB.","56","   *\/","57","  public boolean hasLineHashesWithoutSignificantCode(Component component) {","58","    return lineHashVersionPerComponent.computeIfAbsent(component, this::compute) == LineHashVersion.WITHOUT_SIGNIFICANT_CODE;","59","  }","60",""],"delete":["44","   * Reads from DB the version of line hashes for a component and returns if it was generated taking into account the ranges of significant code."]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/PersistFileSourcesStep.java":[{"add":[],"delete":["115",""]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MutableMovedFilesRepositoryRule.java":[{"add":["22","import java.util.Optional;"],"delete":["21","import com.google.common.base.Optional;"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/RemoveProcessedComponentsVisitor.java":[{"add":["21","import java.util.Optional;"],"delete":["21","import com.google.common.base.Optional;"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/source\/FileSourceDao.java":[{"add":["52","    return version == null ? null : LineHashVersion.valueOf(version);","84","    for (List<String> fileUuidsPartition : toUniqueAndSortedPartitions(fileUUids)) {","85","      mapper(dbSession).scrollLineHashes(fileUuidsPartition, rowHandler);"],"delete":["52","    return version == null ? LineHashVersion.WITHOUT_SIGNIFICANT_CODE : LineHashVersion.valueOf(version);","84","    for (List<String> partition : toUniqueAndSortedPartitions(fileUUids)) {","85","      mapper(dbSession).scrollLineHashes(partition, rowHandler);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/IntegrateIssuesVisitorTest.java":[{"add":["22","import java.util.Optional;","142","    when(movedFilesRepository.getOriginalFile(any(Component.class))).thenReturn(Optional.empty());"],"delete":["21","import com.google.common.base.Optional;","142","    when(movedFilesRepository.getOriginalFile(any(Component.class))).thenReturn(Optional.absent());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/MovedIssueVisitor.java":[{"add":["22","import java.util.Optional;"],"delete":["21","import com.google.common.base.Optional;"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/ClosedIssuesInputFactoryTest.java":[{"add":["23","import java.util.Optional;","49","    when(movedFilesRepository.getOriginalFile(component)).thenReturn(Optional.empty());","83","    when(movedFilesRepository.getOriginalFile(component)).thenReturn(Optional.empty());"],"delete":["21","import com.google.common.base.Optional;","49","    when(movedFilesRepository.getOriginalFile(component)).thenReturn(Optional.absent());","83","    when(movedFilesRepository.getOriginalFile(component)).thenReturn(Optional.absent());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/scm\/ScmInfoDbLoaderTest.java":[{"add":["37","import org.sonar.ce.task.projectanalysis.filemove.MutableMovedFilesRepositoryRule;","70","  @Rule","71","  public MutableMovedFilesRepositoryRule movedFiles = new MutableMovedFilesRepositoryRule();","76","  private ScmInfoDbLoader underTest = new ScmInfoDbLoader(analysisMetadataHolder, movedFiles, dbTester.getDbClient(), referenceBranchComponentUuids);"],"delete":["73","  private ScmInfoDbLoader underTest = new ScmInfoDbLoader(analysisMetadataHolder, dbTester.getDbClient(), referenceBranchComponentUuids);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesHashRepositoryImpl.java":[{"add":["63","    if (cacheHit && !dbLineHashesVersion.hasLineHashesWithoutSignificantCode(component)) {","77","    if (dbLineHashesVersion.hasLineHashesWithoutSignificantCode(component)) {","81","    \/\/ if the file is not in the DB, this will be used too"],"delete":["63","    if (cacheHit && dbLineHashesVersion.hasLineHashesWithSignificantCode(component)) {","77","    if (!dbLineHashesVersion.hasLineHashesWithSignificantCode(component)) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MutableMovedFilesRepositoryImplTest.java":[{"add":["114","    assertThat(underTest.getOriginalFile(SOME_FILE)).isEmpty();","116","      assertThat(underTest.getOriginalFile(component)).isEmpty();","125","      assertThat(underTest.getOriginalFile(component)).isEmpty();"],"delete":["30","import static org.assertj.guava.api.Assertions.assertThat;","115","    assertThat(underTest.getOriginalFile(SOME_FILE)).isAbsent();","117","      assertThat(underTest.getOriginalFile(component)).isAbsent();","126","      assertThat(underTest.getOriginalFile(component)).isAbsent();"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesDiffImplTest.java":[{"add":["23","import org.junit.Rule;","28","import org.sonar.ce.task.projectanalysis.filemove.MutableMovedFilesRepositoryRule;","49","  @Rule","50","  public MutableMovedFilesRepositoryRule movedFiles = new MutableMovedFilesRepositoryRule();","53","    referenceBranchComponentUuids, movedFiles, analysisMetadataHolder);"],"delete":["49","    referenceBranchComponentUuids, analysisMetadataHolder);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":[{"add":["28","import java.util.Collection;","36","import java.util.stream.Collectors;","128","    \/\/ can't find matches if at least one of the added or removed files groups is empty => abort","136","    Map<String, File> addedFileHashesByUuid = getReportFileHashesByUuid(reportFilesByUuid, addedFileUuids);","141","    ScoreMatrix scoreMatrix = computeScoreMatrix(dbFilesByUuid, removedFileUuids, addedFileHashesByUuid);","156","    ElectedMatches electedMatches = electMatches(removedFileUuids, addedFileHashesByUuid, matchesByScore);","222","  private Map<String, File> getReportFileHashesByUuid(Map<String, Component> reportFilesByUuid, Set<String> addedFileUuids) {","223","    return addedFileUuids.stream().collect(Collectors.toMap(fileUuid -> fileUuid, fileUuid -> {","225","      return new LazyFileImpl(() -> getReportFileLineHashes(component), component.getFileAttributes().getLines());","226","    }));","230","    \/\/ this is not ideal because if the file moved, this component won't exist in DB with the same UUID.","231","    \/\/ Assuming that the file also had significant code before the move, it will be fine.","235","  private ScoreMatrix computeScoreMatrix(Map<String, DbComponent> dtosByUuid, Set<String> removedFileUuids, Map<String, File> addedFileHashesByUuid) {","236","    ScoreMatrix.ScoreFile[] addedFiles = addedFileHashesByUuid.entrySet().stream()","246","    \/\/ sort by highest line count first","247","    Arrays.sort(addedFiles, SCORE_FILE_COMPARATOR);","248","    Arrays.sort(removedFiles, SCORE_FILE_COMPARATOR);","249","    int[][] scoreMatrix = new int[removedFiles.length][addedFiles.length];","250","    int smallestAddedFileSize = addedFiles[0].getLineCount();","251","    int largestAddedFileSize = addedFiles[addedFiles.length - 1].getLineCount();","252","","253","    Map<String, Integer> removedFilesIndexesByUuid = new HashMap<>(removedFileUuids.size());","259","      if (smallestAddedFileSize <= lowerBound || largestAddedFileSize >= upperBound) {","262","      removedFilesIndexesByUuid.put(removedFile.getFileUuid(), removeFileIndex);","265","    LineHashesWithKeyDtoResultHandler rowHandler = new LineHashesWithKeyDtoResultHandler(removedFilesIndexesByUuid, removedFiles,","266","      addedFiles, addedFileHashesByUuid, scoreMatrix);","268","      dbClient.fileSourceDao().scrollLineHashes(dbSession, removedFilesIndexesByUuid.keySet(), rowHandler);","271","    return new ScoreMatrix(removedFiles, addedFiles, scoreMatrix, rowHandler.getMaxScore());","275","    private final Map<String, Integer> removedFileIndexesByUuid;","278","    private final Map<String, File> newFilesByUuid;","282","    private LineHashesWithKeyDtoResultHandler(Map<String, Integer> removedFileIndexesByUuid, ScoreMatrix.ScoreFile[] removedFiles,","283","      ScoreMatrix.ScoreFile[] newFiles, Map<String, File> newFilesByUuid,","285","      this.removedFileIndexesByUuid = removedFileIndexesByUuid;","288","      this.newFilesByUuid = newFilesByUuid;","298","      int removedFileIndex = removedFileIndexesByUuid.get(lineHashesDto.getUuid());","299","      ScoreMatrix.ScoreFile removedFile = removedFiles[removedFileIndex];","312","        File fileHashesInDb = new FileImpl(lineHashesDto.getLineHashes());","313","        File unmatchedFile = newFilesByUuid.get(newFile.getFileUuid());","314","        int score = fileSimilarity.score(fileHashesInDb, unmatchedFile);","315","        scoreMatrix[removedFileIndex][newFileIndex] = score;","409","    public ElectedMatches(MatchesByScore matchesByScore, Set<String> dbFileUuids, Map<String, File> reportFileHashesByUuid) {","411","      this.matchedFileUuids = new HashSet<>(dbFileUuids.size() + reportFileHashesByUuid.size());","420","    public List<Match> filter(Collection<Match> matches) {","421","      return matches.stream().filter(this::notAlreadyMatched).collect(Collectors.toList());"],"delete":["59","import static com.google.common.collect.FluentIterable.from;","127","    \/\/ can find matches if at least one of the added or removed files groups is empty => abort","135","    Map<String, File> reportFileSourcesByUuid = getReportFileSourcesByUuid(reportFilesByUuid, addedFileUuids);","140","    ScoreMatrix scoreMatrix = computeScoreMatrix(dbFilesByUuid, removedFileUuids, reportFileSourcesByUuid);","155","    ElectedMatches electedMatches = electMatches(removedFileUuids, reportFileSourcesByUuid, matchesByScore);","221","  private Map<String, File> getReportFileSourcesByUuid(Map<String, Component> reportFilesByUuid, Set<String> addedFileUuids) {","222","    ImmutableMap.Builder<String, File> builder = ImmutableMap.builder();","223","    for (String fileUuid : addedFileUuids) {","225","      File file = new LazyFileImpl(","226","        component.getName(),","227","        () -> getReportFileLineHashes(component),","228","        component.getFileAttributes().getLines());","229","      builder.put(fileUuid, file);","230","    }","231","    return builder.build();","238","  private ScoreMatrix computeScoreMatrix(Map<String, DbComponent> dtosByUuid, Set<String> removedFileUuids, Map<String, File> newFileSourcesByUuid) {","239","    ScoreMatrix.ScoreFile[] newFiles = newFileSourcesByUuid.entrySet().stream()","248","    \/\/ sort by highest line count first","249","    Arrays.sort(newFiles, SCORE_FILE_COMPARATOR);","250","    Arrays.sort(removedFiles, SCORE_FILE_COMPARATOR);","251","    int[][] scoreMatrix = new int[removedFiles.length][newFiles.length];","252","    int lastNewFileIndex = newFiles.length - 1;","254","    Map<String, Integer> removedFilesIndexes = new HashMap<>(removedFileUuids.size());","260","      if (newFiles[0].getLineCount() <= lowerBound || newFiles[lastNewFileIndex].getLineCount() >= upperBound) {","263","      removedFilesIndexes.put(removedFile.getFileUuid(), removeFileIndex);","266","    LineHashesWithKeyDtoResultHandler rowHandler = new LineHashesWithKeyDtoResultHandler(removedFilesIndexes, removedFiles,","267","      newFiles, newFileSourcesByUuid, scoreMatrix);","269","      dbClient.fileSourceDao().scrollLineHashes(dbSession, removedFilesIndexes.keySet(), rowHandler);","272","    return new ScoreMatrix(removedFiles, newFiles, scoreMatrix, rowHandler.getMaxScore());","276","    private final Map<String, Integer> removedFilesIndexes;","279","    private final Map<String, File> newFileSourcesByKey;","283","    private LineHashesWithKeyDtoResultHandler(Map<String, Integer> removedFilesIndexes, ScoreMatrix.ScoreFile[] removedFiles,","284","      ScoreMatrix.ScoreFile[] newFiles, Map<String, File> newFileSourcesByKey,","286","      this.removedFilesIndexes = removedFilesIndexes;","289","      this.newFileSourcesByKey = newFileSourcesByKey;","299","      int removeFileIndex = removedFilesIndexes.get(lineHashesDto.getUuid());","300","      ScoreMatrix.ScoreFile removedFile = removedFiles[removeFileIndex];","313","        File fileInDb = new FileImpl(lineHashesDto.getPath(), lineHashesDto.getLineHashes());","314","        File unmatchedFile = newFileSourcesByKey.get(newFile.getFileUuid());","315","        int score = fileSimilarity.score(fileInDb, unmatchedFile);","316","        scoreMatrix[removeFileIndex][newFileIndex] = score;","410","    public ElectedMatches(MatchesByScore matchesByScore, Set<String> dbFileUuids, Map<String, File> reportFileSourcesByUuid) {","412","      this.matchedFileUuids = new HashSet<>(dbFileUuids.size() + reportFileSourcesByUuid.size());","421","    public List<Match> filter(Iterable<Match> matches) {","422","      return from(matches).filter(this::notAlreadyMatched).toList();"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesHashRepositoryImplTest.java":[{"add":["90","    when(dbLineHashVersion.hasLineHashesWithoutSignificantCode(file)).thenReturn(true);","94","    verify(dbLineHashVersion).hasLineHashesWithoutSignificantCode(file);","101","    when(dbLineHashVersion.hasLineHashesWithoutSignificantCode(file)).thenReturn(false);","107","    verify(dbLineHashVersion).hasLineHashesWithoutSignificantCode(file);","123","    verify(dbLineHashVersion).hasLineHashesWithoutSignificantCode(file);","156","    when(dbLineHashVersion.hasLineHashesWithoutSignificantCode(file)).thenReturn(false);","170","    when(dbLineHashVersion.hasLineHashesWithoutSignificantCode(file)).thenReturn(true);","187","    when(dbLineHashVersion.hasLineHashesWithoutSignificantCode(file)).thenReturn(true);"],"delete":["90","    when(dbLineHashVersion.hasLineHashesWithSignificantCode(file)).thenReturn(false);","94","    verify(dbLineHashVersion).hasLineHashesWithSignificantCode(file);","101","    when(dbLineHashVersion.hasLineHashesWithSignificantCode(file)).thenReturn(true);","107","    verify(dbLineHashVersion).hasLineHashesWithSignificantCode(file);","123","    verify(dbLineHashVersion).hasLineHashesWithSignificantCode(file);","156","    when(dbLineHashVersion.hasLineHashesWithSignificantCode(file)).thenReturn(true);","170","    when(dbLineHashVersion.hasLineHashesWithSignificantCode(file)).thenReturn(false);","187","    when(dbLineHashVersion.hasLineHashesWithSignificantCode(file)).thenReturn(false);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/ClosedIssuesInputFactory.java":[{"add":["41","    return new ClosedIssuesLazyInput(dbClient, component, movedFilesRepository.getOriginalFile(component).orElse(null));"],"delete":["41","    return new ClosedIssuesLazyInput(dbClient, component, movedFilesRepository.getOriginalFile(component).orNull());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/FileSimilarity.java":[{"add":["40","    FileImpl(List<String> lineHashes) {","63","    LazyFileImpl(Supplier<List<String>> supplier, int lineCount) {"],"delete":["31","    String getPath();","32","","39","    private final String path;","43","    FileImpl(String path, List<String> lineHashes) {","44","      this.path = requireNonNull(path, \"path can not be null\");","49","    public String getPath() {","50","      return path;","51","    }","52","","67","    private final String path;","72","    LazyFileImpl(String path, Supplier<List<String>> supplier, int lineCount) {","73","      this.path = requireNonNull(path, \"path can not be null\");","78","    public String getPath() {","79","      return path;","80","    }","81",""]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MovedFilesRepository.java":[{"add":["21","import java.util.Optional;","31","   * Calling this method with a Component which is not a file, will always return {@link Optional#empty()}."],"delete":["21","import com.google.common.base.Optional;","31","   * Calling this method with a Component which is not a file, will always return {@link Optional#absent()}."]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/TrackerBaseInputFactoryTest.java":[{"add":["21","import java.util.Optional;","67","      .thenReturn(Optional.empty());"],"delete":["21","import com.google.common.base.Optional;","67","      .thenReturn(Optional.absent());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/filemove\/MutableMovedFilesRepositoryImpl.java":[{"add":["23","import java.util.Optional;","51","      return Optional.empty();","54","    return Optional.ofNullable(originalFiles.get(file.getDbKey()));"],"delete":["21","import com.google.common.base.Optional;","51","      return Optional.absent();","54","    return Optional.fromNullable(originalFiles.get(file.getDbKey()));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/MovedIssueVisitorTest.java":[{"add":["22","import java.util.Optional;","65","      .thenReturn(Optional.empty());"],"delete":["21","import com.google.common.base.Optional;","65","      .thenReturn(Optional.absent());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/TrackerBaseInputFactory.java":[{"add":["65","    return new FileTrackerBaseLazyInput(dbClient, component, movedFilesRepository.getOriginalFile(component).orElse(null));"],"delete":["65","    return new FileTrackerBaseLazyInput(dbClient, component, movedFilesRepository.getOriginalFile(component).orNull());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/RemoveProcessedComponentsVisitorTest.java":[{"add":["21","import java.util.Optional;","48","    when(movedFilesRepository.getOriginalFile(any(Component.class))).thenReturn(Optional.empty());"],"delete":["21","import com.google.common.base.Optional;","48","    when(movedFilesRepository.getOriginalFile(any(Component.class))).thenReturn(Optional.absent());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/scm\/ScmInfoDbLoader.java":[{"add":["28","import org.sonar.ce.task.projectanalysis.filemove.MovedFilesRepository;","37","  private final MovedFilesRepository movedFilesRepository;","41","  public ScmInfoDbLoader(AnalysisMetadataHolder analysisMetadataHolder, MovedFilesRepository movedFilesRepository, DbClient dbClient,","42","    ReferenceBranchComponentUuids referenceBranchComponentUuid) {","44","    this.movedFilesRepository = movedFilesRepository;","67","      Optional<MovedFilesRepository.OriginalFile> originalFile = movedFilesRepository.getOriginalFile(file);","68","      if (originalFile.isPresent()) {","69","        return originalFile.map(MovedFilesRepository.OriginalFile::getUuid);","70","      }"],"delete":["39","  public ScmInfoDbLoader(AnalysisMetadataHolder analysisMetadataHolder, DbClient dbClient, ReferenceBranchComponentUuids referenceBranchComponentUuid) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesDiffImpl.java":[{"add":["23","import java.util.Optional;","27","import org.sonar.ce.task.projectanalysis.filemove.MovedFilesRepository;","38","  private final MovedFilesRepository movedFilesRepository;","42","    ReferenceBranchComponentUuids referenceBranchComponentUuids, MovedFilesRepository movedFilesRepository, AnalysisMetadataHolder analysisMetadataHolder) {","47","    this.movedFilesRepository = movedFilesRepository;","65","        Optional<MovedFilesRepository.OriginalFile> originalFile = movedFilesRepository.getOriginalFile(component);","66","        uuid = originalFile.map(MovedFilesRepository.OriginalFile::getUuid).orElse(component.getUuid());"],"delete":["39","    ReferenceBranchComponentUuids referenceBranchComponentUuids, AnalysisMetadataHolder analysisMetadataHolder) {","61","        uuid = component.getUuid();"]}]}},"d9591923fcffc90a24eee16af6a585bee25f18d7":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/issues.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.tsx":[{"add":["24","import { CurrentUser } from '..\/..\/..\/app\/types';","49","const fetchIssueOrganizations = (organizationKeys: string[]) => (dispatch: Dispatch<any>) => {","50","  if (!organizationKeys.length) {","74","      const organizationKeys = uniq([","75","        ...response.issues.map(issue => issue.organization),","76","        ...(response.components || []).map(component => component.organization)","77","      ]);","79","        ? dispatch(fetchIssueOrganizations(organizationKeys)).then(() => response)"],"delete":["24","import { CurrentUser, Issue } from '..\/..\/..\/app\/types';","49","const fetchIssueOrganizations = (issues: Issue[]) => (dispatch: Dispatch<any>) => {","50","  if (!issues.length) {","54","  const organizationKeys = uniq(issues.map(issue => issue.organization));","76","        ? dispatch(fetchIssueOrganizations(response.issues)).then(() => response)"]}],"server\/sonar-web\/src\/main\/js\/api\/issues.ts":[{"add":["32","  components?: { key: string; organization: string; name: string; uuid: string }[];"],"delete":["32","  components?: { key: string; name: string; uuid: string }[];"]}]}},"47068be19be3b7e80b27c34ccb9278c2e83ae9de":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/__snapshots__\/DocMarkdownBlock-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/markdown-test.ts":"MODIFY","server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/package.json":"ADD","server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/index.js":"ADD","server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/gatsby-node.js":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/markdown.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/__snapshots__\/markdown-test.ts.snap":"ADD","server\/sonar-docs\/gatsby-config.js":"MODIFY","server\/sonar-docs\/src\/templates\/page.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/DocMarkdownBlock-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/__snapshots__\/DocMarkdownBlock-test.tsx.snap":[{"add":[],"delete":["2","exports[`should cut sonarqube\/sonarcloud\/static content 1`] = `","3","<div","4","  className=\"markdown\"","5",">","6","  <div","7","    className=\"markdown-content\"","8","  >","9","    <Block","10","      key=\"h-1\"","11","    >","12","      <p","13","        key=\"h-2\"","14","      >","15","        some","16","      <\/p>","17","      ","18","","19","      <p","20","        key=\"h-3\"","21","      >","22","        sonarqube","23","      <\/p>","24","      ","25","","26","      <p","27","        key=\"h-4\"","28","      >","29","          long","30","      <\/p>","31","      ","32","","33","      <p","34","        key=\"h-5\"","35","      >","36","          multiline","37","      <\/p>","38","      ","39","","40","      <p","41","        key=\"h-6\"","42","      >","43","        text","44","      <\/p>","45","    <\/Block>","46","  <\/div>","47","<\/div>","48","`;","49","","50","exports[`should cut sonarqube\/sonarcloud\/static content 2`] = `","51","<div","52","  className=\"markdown\"","53",">","54","  <div","55","    className=\"markdown-content\"","56","  >","57","    <Block","58","      key=\"h-1\"","59","    >","60","      <p","61","        key=\"h-2\"","62","      >","63","        some","64","      <\/p>","65","      ","66","","67","      <p","68","        key=\"h-3\"","69","      >","70","        sonarcloud","71","      <\/p>","72","      ","73","","74","      <p","75","        key=\"h-4\"","76","      >","77","        text","78","      <\/p>","79","    <\/Block>","80","  <\/div>","81","<\/div>","82","`;","83",""]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/markdown-test.ts":[{"add":["20","import { isSonarCloud } from '..\/system';","24","  isSonarCloud: jest.fn().mockReturnValue(false)","119","","120","it('should cut sonarqube\/sonarcloud\/static content', () => {","121","  const content = `","122","This text has inline text for <!-- sonarqube -->SonarQube<!-- \/sonarqube --><!-- sonarcloud -->SonarCloud<!-- \/sonarcloud -->. Donec sed nulla magna.","123","","124","<!-- sonarqube -->","125","This is text for SonarQube, multi-line. Consectetur adipiscing elit. Duis dignissim nulla at massa iaculis interdum.","126","Aenean sit amet lacus a tortor ullamcorper interdum. Donec sed nulla magna.","127","<!-- \/sonarqube -->","128","","129","<!-- sonarcloud -->","130","This is text for SonarCloud, multi-line. In hac habitasse platea dictumst. Duis sagittis semper sapien nec tempor. Nullam vehicula nisi vitae nisi interdum aliquam. Mauris volutpat nunc non fermentum rhoncus. Aenean laoreet, orci vitae tempor bibendum,","131","metus nisl euismod neque, vitae euismod nibh nisl eu velit. Vivamus luctus suscipit elit vel semper.","132","<!-- \/sonarcloud -->","133","","134","<!-- static -->","135","This is static text.","136","<!-- \/static -->","137","","138","<!-- sonarqube -->","139","This is text for SonarQube, single line.","140","<!-- \/sonarqube -->","141","","142","* In hac habitasse","143","* Duis sagittis semper sapien nec tempor","144","<!-- sonarqube -->* This is a bullet point for SonarQube<!-- \/sonarqube -->","145","<!-- sonarcloud -->* This is a bullet point for SonarCloud<!-- \/sonarcloud -->","146","* Platea dictumst","147","","148","Duis sagittis semper sapien nec tempor. Nullam vehicula nisi vitae nisi interdum aliquam.","149","","150","| Parameter Name        | Description |","151","| --------------------- | ------------------ |","152","| sonar.pullrequest.github.repository | SLUG of the GitHub Repo |","153","<!-- sonarqube -->","154","| sonar.pullrequest.github.endpoint | The API url for your GitHub instance. |","155","<!-- \/sonarqube -->","156","`;","157","","158","  expect(filterContent(content)).toMatchSnapshot();","159","","160","  (isSonarCloud as jest.Mock).mockReturnValueOnce(true);","161","  expect(filterContent(content)).toMatchSnapshot();","162","});"],"delete":["23","  isSonarCloud: () => false"]}],"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/package.json":[{"add":[],"delete":[]}],"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/index.js":[{"add":[],"delete":[]}],"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/gatsby-node.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/markdown.js":[{"add":["73","  const regexBase = '<!-- \\\\\/?(sonarqube|sonarcloud|static) -->';","77","  const filteredContent = isSonarCloud()","80","  return filteredContent","81","    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') \/\/ First, remove single-line ones, including ending carriage-returns.","82","    .replace(new RegExp(`${regexBase}`, 'g'), ''); \/\/ Now remove all remaining ones."],"delete":["76","  return isSonarCloud()"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/__snapshots__\/markdown-test.ts.snap":[{"add":[],"delete":[]}],"server\/sonar-docs\/gatsby-config.js":[{"add":["28","      resolve: `sonarsource-source-filesystem`,"],"delete":["28","      resolve: 'gatsby-source-filesystem',"]}],"server\/sonar-docs\/src\/templates\/page.js":[{"add":["48","    let htmlWithInclusions = page.html.replace(\/<p>@include (.*)<\\\/p>\/, (_, path) => {","49","      const chunk = data.allMarkdownRemark.edges.find(edge => edge.node.fields.slug === path);","50","      return chunk ? chunk.node.html : '';","51","    });","54",""],"delete":["48","    let htmlWithInclusions = cutSonarCloudContent(page.html).replace(","49","      \/<p>@include (.*)<\\\/p>\/,","50","      (_, path) => {","51","        const chunk = data.allMarkdownRemark.edges.find(edge => edge.node.fields.slug === path);","52","        return chunk ? chunk.node.html : '';","53","      }","54","    );","192","","193","function cutSonarCloudContent(content) {","194","  const beginning = '<!-- sonarcloud -->';","195","  const ending = '<!-- \/sonarcloud -->';","196","","197","  let newContent = content;","198","  let start = newContent.indexOf(beginning);","199","  let end = newContent.indexOf(ending);","200","  while (start !== -1 && end !== -1) {","201","    newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);","202","    start = newContent.indexOf(beginning);","203","    end = newContent.indexOf(ending);","204","  }","205","","206","  return newContent;","207","}"]}],"server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/DocMarkdownBlock-test.tsx":[{"add":[],"delete":["22","import { isSonarCloud } from '..\/..\/..\/helpers\/system';","77","it('should cut sonarqube\/sonarcloud\/static content', () => {","78","  const content = `","79","some","80","","81","<!-- sonarqube -->","82","sonarqube","83","<!-- \/sonarqube -->","84","","85","<!-- sonarcloud -->","86","sonarcloud","87","<!-- \/sonarcloud -->","88","","89","<!-- static -->","90","static","91","<!-- \/static -->","92","","93","<!-- sonarqube -->","94","  long","95","","96","  multiline","97","<!-- \/sonarqube -->","98","","99","text`;","100","","101","  (isSonarCloud as jest.Mock).mockImplementation(() => false);","102","  expect(shallowRender({ content })).toMatchSnapshot();","103","","104","  (isSonarCloud as jest.Mock).mockImplementation(() => true);","105","  expect(shallowRender({ content })).toMatchSnapshot();","106","});","107",""]}]}},"e1a6620e18b4b5d14435461289808db9221799f8":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/ReportPublisherTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ReportPublisher.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/ReportPublisherTest.java":[{"add":["203","      .contains(\"ANALYSIS SUCCESSFUL, you can browse https:\/\/publicserver\/sonarqube\/dashboard?id=org.sonarsource.sonarqube%3Asonarqube&pullRequest=105\")","210","        \"dashboardUrl=https:\/\/publicserver\/sonarqube\/dashboard?id=org.sonarsource.sonarqube%3Asonarqube&pullRequest=105\\n\" +"],"delete":["203","      .contains(\"ANALYSIS SUCCESSFUL, you can browse https:\/\/publicserver\/sonarqube\/project\/issues?id=org.sonarsource.sonarqube%3Asonarqube&pullRequest=105&resolved=false\")","210","        \"dashboardUrl=https:\/\/publicserver\/sonarqube\/project\/issues?id=org.sonarsource.sonarqube%3Asonarqube&pullRequest=105&resolved=false\\n\" +"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ReportPublisher.java":[{"add":["248","        .addPathSegment(DASHBOARD)"],"delete":["248","        .addPathSegment(\"project\")","249","        .addPathSegment(\"issues\")","252","        .addQueryParameter(RESOLVED, \"false\")"]}]}},"f407bd791e4ccc09dd0b01d7e8f3776e2cdc8246":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/MediaTypes.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/MediaTypes.java":[{"add":["38","  public static final String JAVASCRIPT = \"application\/javascript\";","42","    .put(\"js\", JAVASCRIPT)"],"delete":[]}]}},"1ff9a01fd6e822793ef223f9ce259b15d17eecc4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/projectActivity.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/projectActivity.css":[{"add":["114",".project-activity-event * {","115","  text-indent: 0;","116","}","117",""],"delete":[]}]}},"8efeb32ba9dbfe0ebb8d834180f4cc33b0ebbf6b":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2382","overview.badges.quality_gate.description.APP=This badge dynamically displays the current quality gate status of your application.","2383","overview.badges.quality_gate.description.TRK=This badge dynamically displays the current quality gate status of your project.","2384","overview.badges.quality_gate.description.VW=This badge dynamically displays the current quality gate status of your portfolio."],"delete":[]}]}},"e3ab105183d7b7678340b2cca8902929fda8200d":{"changes":{"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/TesterSession.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/branch\/pr\/ws\/ListAction.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/PermissionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/branch\/pr\/ws\/ListActionTest.java":"MODIFY","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/PermissionTester.java":"ADD","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/Tester.java":"MODIFY"},"diff":{"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/TesterSession.java":[{"add":["45","  PermissionTester permissions();","46",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/branch\/pr\/ws\/ListAction.java":[{"add":["36","import org.sonar.db.permission.OrganizationPermission;","50","import static org.sonar.api.web.UserRole.USER;","51","import static org.sonar.core.permission.GlobalPermissions.SCAN_EXECUTION;","58","import static org.sonar.server.user.AbstractUserSession.insufficientPrivilegesException;","80","        \"One of the following permissions is required: \" +","81","        \"<ul>\" +","82","        \"<li>'Browse' rights on the specified project<\/li>\" +","83","        \"<li>'Execute Analysis' rights on the specified project<\/li>\" +","84","        \"<\/ul>\")","97","      checkPermission(project);","118","        .forEach(b -> addPullRequest(protobufResponse, b, mergeBranchesByUuid, qualityGateMeasuresByComponentUuids.get(b.getUuid()), branchStatisticsByBranchUuid.get(b.getUuid()),","124","  private void checkPermission(ComponentDto component) {","125","    if (userSession.hasComponentPermission(USER, component) ||","126","      userSession.hasComponentPermission(SCAN_EXECUTION, component) ||","127","      userSession.hasPermission(OrganizationPermission.SCAN, component.getOrganizationUuid())) {","128","      return;","129","    }","130","    throw insufficientPrivilegesException();","131","  }","132","","134","    @Nullable LiveMeasureDto qualityGateMeasure, BranchStatistics branchStatistics, @Nullable String analysisDate) {"],"delete":["30","import org.sonar.api.web.UserRole;","77","        \"Requires 'Administer' rights on the specified project.\")","90","      userSession.checkComponentPermission(UserRole.USER, project);","111","        .forEach(b -> addPullRequest(protobufResponse, b, mergeBranchesByUuid, qualityGateMeasuresByComponentUuids.get(b.getUuid()),  branchStatisticsByBranchUuid.get(b.getUuid()),","118","                                     @Nullable LiveMeasureDto qualityGateMeasure, BranchStatistics branchStatistics, @Nullable String analysisDate) {"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/PermissionTest.java":[{"add":["28","import org.sonarqube.qa.util.Tester;","29","import org.sonarqube.tests.Category3Suite;","30","import org.sonarqube.ws.Permissions;","31","import org.sonarqube.ws.Projects.CreateWsResponse.Project;","33","import org.sonarqube.ws.Users.CreateWsResponse.User;","46","  public Tester tester = new Tester(orchestrator).disableOrganizations();","51","    tester.settings().setGlobalSetting(\"sonar.forceAuthentication\", \"true\");","56","    User user = createUserWithProvisioningAndScanPermissions();","59","    UserTokens.GenerateWsResponse generateWsResponse = tester.wsClient().userTokens().generate(new GenerateRequest()","60","      .setLogin(user.getLogin())","89","    User user = createUserWithProvisioningAndScanPermissions();","109","      \"sonar.login\", user.getLogin(),","110","      \"sonar.password\", user.getLogin());","115","  public void run_scanner_with_user_having_only_scan_permission_on_project() {","116","    User user = tester.users().generate();","117","    Project project = tester.projects().provision(c -> c.setVisibility(\"private\"));","118","    Permissions.PermissionTemplate template = tester.permissions().generateTemplate();","119","    tester.permissions().addUserToTemplate(user, template, \"scan\");","120","    tester.permissions().applyTemplate(template, project);","122","    BuildResult buildResult = scanQuietly(\"shared\/xoo-sample\",","123","      \"sonar.projectKey\", project.getKey(),","124","      \"sonar.login\", user.getLogin(),","125","      \"sonar.password\", user.getLogin());","145","  private User createUserWithProvisioningAndScanPermissions() {","146","    User user = tester.users().generate();","147","    tester.wsClient().permissions().addUser(new AddUserRequest().setLogin(user.getLogin()).setPermission(\"provisioning\"));","148","    tester.wsClient().permissions().addUser(new AddUserRequest().setLogin(user.getLogin()).setPermission(\"scan\"));","149","    return user;"],"delete":["24","import org.sonarqube.tests.Category3Suite;","25","import javax.annotation.Nullable;","26","import org.junit.After;","32","import org.sonarqube.ws.client.WsClient;","35","import org.sonarqube.ws.client.usertokens.RevokeRequest;","36","import org.sonarqube.ws.client.usertokens.UserTokensService;","37","import util.user.UserRule;","40","import static util.ItUtils.newAdminWsClient;","42","import static util.ItUtils.resetSettings;","43","import static util.ItUtils.setServerProperty;","47","  private static final String A_LOGIN = \"a_login\";","48","  private static final String A_PASSWORD = \"a_password\";","49","","54","  public UserRule userRule = UserRule.from(orchestrator);","55","","56","  private WsClient adminWsClient;","57","  private UserTokensService userTokensWsClient;","61","    orchestrator.resetData();","62","","64","    setServerProperty(orchestrator, \"sonar.forceAuthentication\", \"true\");","65","","66","    adminWsClient = newAdminWsClient(orchestrator);","67","    userTokensWsClient = adminWsClient.userTokens();","68","  }","69","","70","  @After","71","  public void tearDown() {","72","    resetSettings(orchestrator, null, \"sonar.forceAuthentication\");","73","    userRule.resetUsers();","78","    createUserWithProvisioningAndScanPermissions();","81","    UserTokens.GenerateWsResponse generateWsResponse = userTokensWsClient.generate(new GenerateRequest()","82","      .setLogin(A_LOGIN)","92","    userTokensWsClient.revoke(new RevokeRequest().setLogin(A_LOGIN).setName(tokenName));","112","    createUserWithProvisioningAndScanPermissions();","132","      \"sonar.login\", A_LOGIN,","133","      \"sonar.password\", A_PASSWORD);","138","  public void run_scanner_with_user_having_scan_permission_only_on_project() {","139","    userRule.createUser(A_LOGIN, A_PASSWORD);","140","    orchestrator.getServer().provisionProject(\"sample\", \"sample\");","141","    addUserPermission(A_LOGIN, \"scan\", \"sample\");","143","    BuildResult buildResult = scanQuietly(\"shared\/xoo-sample\", \"sonar.login\", A_LOGIN, \"sonar.password\", A_PASSWORD);","148","  private void addUserPermission(String login, String permission, @Nullable String projectKey) {","149","    adminWsClient.permissions().addUser(new AddUserRequest()","150","      .setLogin(login)","151","      .setPermission(permission)","152","      .setProjectKey(projectKey));","153","  }","154","","170","  private void createUserWithProvisioningAndScanPermissions() {","171","    userRule.createUser(A_LOGIN, A_PASSWORD);","172","    addUserPermission(A_LOGIN, \"provisioning\", null);","173","    addUserPermission(A_LOGIN, \"scan\", null);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/branch\/pr\/ws\/ListActionTest.java":[{"add":["38","import org.sonar.db.permission.OrganizationPermission;","43","import org.sonar.server.exceptions.ForbiddenException;","70","import static org.sonar.api.web.UserRole.CODEVIEWER;","71","import static org.sonar.core.permission.GlobalPermissions.SCAN_EXECUTION;","271","      .extracting(Status::getQualityGateStatus, Status::hasBugs, Status::getBugs, Status::hasVulnerabilities, Status::getVulnerabilities, Status::hasCodeSmells,","272","        Status::getCodeSmells)","343","  public void does_not_fail_when_only_browse_permission_on_project() {","344","    ComponentDto project = db.components().insertMainBranch();","345","    db.components().insertProjectBranch(project,","346","      b -> b.setKey(\"123\")","347","        .setBranchType(PULL_REQUEST)","348","        .setMergeBranchUuid(project.uuid())","349","        .setPullRequestData(DbProjectBranches.PullRequestData.newBuilder().setBranch(\"feature\/bar\").build()));","350","    userSession.logIn().addProjectPermission(UserRole.USER, project);","351","","352","    ListWsResponse response = ws.newRequest()","353","      .setParam(\"project\", project.getKey())","354","      .executeProtobuf(ListWsResponse.class);","355","","356","    assertThat(response.getPullRequestsList())","357","      .extracting(PullRequest::getKey)","358","      .containsExactlyInAnyOrder(\"123\");","359","  }","360","","361","  @Test","362","  public void does_not_fail_when_only_scan_permission_on_project() {","363","    ComponentDto project = db.components().insertMainBranch();","364","    db.components().insertProjectBranch(project,","365","      b -> b.setKey(\"123\")","366","        .setBranchType(PULL_REQUEST)","367","        .setMergeBranchUuid(project.uuid())","368","        .setPullRequestData(DbProjectBranches.PullRequestData.newBuilder().setBranch(\"feature\/bar\").build()));","369","    userSession.logIn().addProjectPermission(SCAN_EXECUTION, project);","370","","371","    ListWsResponse response = ws.newRequest()","372","      .setParam(\"project\", project.getKey())","373","      .executeProtobuf(ListWsResponse.class);","374","","375","    assertThat(response.getPullRequestsList())","376","      .extracting(PullRequest::getKey)","377","      .containsExactlyInAnyOrder(\"123\");","378","  }","379","","380","  @Test","381","  public void does_not_fail_when_only_scan_permission_on_organization() {","382","    OrganizationDto organization = db.organizations().insert();","383","    userSession.logIn().addPermission(OrganizationPermission.SCAN, organization);","384","    ComponentDto project = db.components().insertMainBranch(organization);","385","    db.components().insertProjectBranch(project,","386","      b -> b.setKey(\"123\")","387","        .setBranchType(PULL_REQUEST)","388","        .setMergeBranchUuid(project.uuid())","389","        .setPullRequestData(DbProjectBranches.PullRequestData.newBuilder().setBranch(\"feature\/bar\").build()));","390","","391","    ListWsResponse response = ws.newRequest()","392","      .setParam(\"project\", project.getKey())","393","      .executeProtobuf(ListWsResponse.class);","394","","395","    assertThat(response.getPullRequestsList())","396","      .extracting(PullRequest::getKey)","397","      .containsExactlyInAnyOrder(\"123\");","398","  }","399","","400","  @Test","447","  @Test","448","  public void fail_when_not_having_right_permission() {","449","    ComponentDto project = db.components().insertMainBranch();","450","    db.components().insertProjectBranch(project,","451","      b -> b.setKey(\"123\")","452","        .setBranchType(PULL_REQUEST)","453","        .setMergeBranchUuid(project.uuid())","454","        .setPullRequestData(DbProjectBranches.PullRequestData.newBuilder().setBranch(\"feature\/bar\").build()));","455","    userSession.logIn().addProjectPermission(CODEVIEWER, project);","456","","457","    expectedException.expect(ForbiddenException.class);","458","","459","    ws.newRequest()","460","      .setParam(\"project\", project.getDbKey())","461","      .execute();","462","  }","463",""],"delete":["267","      .extracting(Status::getQualityGateStatus, Status::hasBugs, Status::getBugs, Status::hasVulnerabilities, Status::getVulnerabilities, Status::hasCodeSmells, Status::getCodeSmells)"]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/PermissionTester.java":[{"add":[],"delete":[]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/Tester.java":[{"add":["215","  @Override","216","  public PermissionTester permissions() {","217","    return rootSession.permissions();","218","  }","219","","280","","281","    @Override","282","    public PermissionTester permissions() {","283","      return new PermissionTester(this);","284","    }"],"delete":[]}]}},"c992c853f2efb2f7fcb72471af5f69feed99ba39":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/MeasureHeader-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureHeader.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/MeasureHeader-test.js":[{"add":["92","it('should not render link to activity page for files', () => {","93","  expect(","94","    shallow(<MeasureHeader {...PROPS} \/>)","95","      .find('IconHistory')","96","      .exists()","97","  ).toBeTruthy();","98","","99","  expect(","100","    shallow(<MeasureHeader {...PROPS} component={{ ...PROPS.component, qualifier: 'FIL' }} \/>)","101","      .find('IconHistory')","102","      .exists()","103","  ).toBeFalsy();","104","});","105",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureHeader.js":[{"add":["48","  const hasHistory = component.qualifier !== 'FIL' && component.qualifier !== 'UTS';","73","          {!isDiff &&","74","            hasHistory && (","75","              <Tooltip","76","                overlay={translate('component_measures.show_metric_history')}","77","                placement=\"right\">","78","                <Link","79","                  className=\"js-show-history spacer-left button button-small\"","80","                  to={getMeasureHistoryUrl(component.key, metric.key, branchLike)}>","81","                  <HistoryIcon \/>","82","                <\/Link>","83","              <\/Tooltip>","84","            )}"],"delete":["72","          {!isDiff && (","73","            <Tooltip","74","              overlay={translate('component_measures.show_metric_history')}","75","              placement=\"right\">","76","              <Link","77","                className=\"js-show-history spacer-left button button-small\"","78","                to={getMeasureHistoryUrl(component.key, metric.key, branchLike)}>","79","                <HistoryIcon \/>","80","              <\/Link>","81","            <\/Tooltip>","82","          )}"]}]}},"343905b1c517efa5902f92d45b57953e75537182":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/test\/index\/TestResultSetIterator.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/index\/TestResultSetIteratorTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/test\/index\/TestResultSetIterator.java":[{"add":["33","import org.sonar.api.utils.log.Loggers;","82","    List<DbFileSources.Test> tests = parseData(fileUuid, rs.getBinaryStream(4));","83","    return toRow(projectUuid, fileUuid, updatedAt, tests);","84","  }","85","","86","  private static List<DbFileSources.Test> parseData(String fileUuid, @Nullable InputStream dataInput) {","87","    List<DbFileSources.Test> tests = Collections.emptyList();","89","      try {","90","        tests = FileSourceDto.decodeTestData(dataInput);","91","      } catch (Exception e) {","92","        Loggers.get(TestResultSetIterator.class).warn(String.format(\"Invalid file_sources.binary_data on row with file_uuid='%s', test file will be ignored\", fileUuid), e);","93","      }","95","    return tests;"],"delete":["81","    InputStream dataInput = rs.getBinaryStream(4);","82","    List<DbFileSources.Test> data;","84","      data = FileSourceDto.decodeTestData(dataInput);","85","    } else {","86","      data = Collections.emptyList();","88","    return toRow(projectUuid, fileUuid, updatedAt, data);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/index\/TestResultSetIteratorTest.java":[{"add":["30","import org.sonar.api.utils.log.LogTester;","31","import org.sonar.api.utils.log.LoggerLevel;","55","  @Rule","56","  public LogTester logTester = new LogTester();","57","","189","  public void read_does_not_fail_if_corrupted_data() throws Exception {","195","    FileSourcesUpdaterHelper.Row row = underTest.next();","196","    assertThat(row.getFileUuid()).isEqualTo(\"F1\");","197","    assertThat(row.getUpdateRequests()).isEmpty();","198","    assertThat(underTest.hasNext()).isFalse();","199","","200","    assertThat(logTester.logs(LoggerLevel.WARN)).contains(\"Invalid file_sources.binary_data on row with file_uuid='F1', test file will be ignored\");"],"delete":["36","import static org.assertj.core.api.Assertions.fail;","185","  public void fail_on_bad_data_format() throws Exception {","191","    try {","192","      assertThat(underTest.hasNext()).isTrue();","193","      underTest.next();","194","      fail(\"it should not be possible to go through not compliant data\");","195","    } catch (IllegalStateException e) {","196","      \/\/ ok","197","    }"]}]}},"b39d79b8ffa7d920b530c8d68821e01bd5b7142b":{"changes":{"server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY"},"diff":{"server\/sonar-web\/package.json":[{"add":["14","    \"d3-selection\": \"1.4.0\","],"delete":["14","    \"d3-selection\": \"1.3.2\","]}],"server\/sonar-web\/yarn.lock":[{"add":["2818","d3-selection@1, d3-selection@1.4.0, d3-selection@^1.1.0:"],"delete":["2818","d3-selection@1, d3-selection@^1.1.0:","2823","d3-selection@1.3.2:","2824","  version \"1.3.2\"","2825","  resolved \"https:\/\/registry.yarnpkg.com\/d3-selection\/-\/d3-selection-1.3.2.tgz#6e70a9df60801c8af28ac24d10072d82cbfdf652\"","2826","  integrity sha512-OoXdv1nZ7h2aKMVg3kaUFbLLK5jXUFAMLD\/Tu5JA96mjf8f2a9ZUESGY+C36t8R1WFeWk\/e55hy54Ml2I62CRQ==","2827",""]}]}},"88189313e33c91d3b9f890740cd9fc3f4cb644c2":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeScannerContextMapper.xml":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeScannerContextMapper.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeScannerContextDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeScannerContextDao.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeScannerContextMapper.xml":[{"add":["10","  <select id=\"selectOlderThan\" parameterType=\"long\" resultType=\"String\">","11","    select","12","      task_uuid","13","    from ce_scanner_context csc","14","    where","15","      csc.created_at &lt; #{beforeDate,jdbcType=BIGINT}","16","  <\/select>","17","","18",""],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":[{"add":["21","import java.time.LocalDateTime;","22","import java.time.ZoneOffset;","23","import java.util.Optional;","32","import static java.time.ZoneOffset.UTC;","34","import static org.mockito.Mockito.mock;","39","  private System2 system2 = mock(System2.class);","47","  public void delete_activity_older_than_180_days_and_their_scanner_context() {","48","    LocalDateTime now = LocalDateTime.now();","49","    insertWithDate(\"VERY_OLD\", now.minusDays(180).minusMonths(10));","50","    insertWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(180).minusDays(1));","51","    insertWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(180));","52","    insertWithDate(\"RECENT\", now.minusDays(1));","53","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","57","    assertThat(selectActivity(\"VERY_OLD\").isPresent()).isFalse();","58","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","59","    assertThat(selectActivity(\"JUST_OLD_ENOUGH\").isPresent()).isFalse();","60","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","61","    assertThat(selectActivity(\"NOT_OLD_ENOUGH\").isPresent()).isTrue();","62","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isFalse(); \/\/ because more than 4 weeks old","63","    assertThat(selectActivity(\"RECENT\").isPresent()).isTrue();","64","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","67","  @Test","68","  public void delete_ce_scanner_context_older_than_28_days() {","69","    LocalDateTime now = LocalDateTime.now();","70","    insertWithDate(\"VERY_OLD\", now.minusDays(28).minusMonths(12));","71","    insertWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(28).minusDays(1));","72","    insertWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(28));","73","    insertWithDate(\"RECENT\", now.minusDays(1));","74","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","75","","76","    underTest.start();","77","","78","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","79","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","80","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","81","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","82","  }","83","","84","  private Optional<CeActivityDto> selectActivity(String very_old) {","85","    return dbTester.getDbClient().ceActivityDao().selectByUuid(dbTester.getSession(), very_old);","86","  }","87","","88","  private boolean scannerContextExists(String uuid) {","89","    return dbTester.countSql(\"select count(1) from ce_scanner_context where task_uuid = '\" + uuid + \"'\") == 1;","90","  }","91","","92","  private void insertWithDate(String uuid, LocalDateTime dateTime) {","93","    long date = dateTime.toInstant(UTC).toEpochMilli();","103","","104","    insertScannerContext(uuid, date);","105","  }","106","","107","  private void insertScannerContext(String uuid, long createdAt) {","108","    dbTester.executeInsert(","109","      \"CE_SCANNER_CONTEXT\",","110","      \"task_uuid\", uuid,","111","      \"created_at\", createdAt,","112","      \"updated_at\", 1,","113","      \"context_data\", \"YoloContent\".getBytes());","114","    dbTester.commit();"],"delete":["30","import static org.mockito.Mockito.spy;","35","  private System2 system2 = spy(System2.INSTANCE);","43","  public void delete_older_than_6_months() {","44","    insertWithDate(\"VERY_OLD\", 1_000_000_000_000L);","45","    insertWithDate(\"RECENT\", 1_500_000_000_000L);","46","    when(system2.now()).thenReturn(1_500_000_000_100L);","50","    assertThat(dbTester.getDbClient().ceActivityDao().selectByUuid(dbTester.getSession(), \"VERY_OLD\").isPresent()).isFalse();","51","    assertThat(dbTester.getDbClient().ceActivityDao().selectByUuid(dbTester.getSession(), \"RECENT\").isPresent()).isTrue();","54","  private void insertWithDate(String uuid, long date) {"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeScannerContextMapper.java":[{"add":["22","import java.util.Set;","28","","29","  Set<String> selectOlderThan(@Param(\"beforeDate\") long beforeDate);"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeScannerContextDaoTest.java":[{"add":["124","  @Test","125","  public void selectOlderThan() {","126","    insertWithCreationDate(\"TASK_1\", 1_450_000_000_000L);","127","    insertWithCreationDate(\"TASK_2\", 1_460_000_000_000L);","128","    insertWithCreationDate(\"TASK_3\", 1_470_000_000_000L);","129","","130","    assertThat(underTest.selectOlderThan(dbSession, 1_465_000_000_000L))","131","      .containsOnly(\"TASK_1\", \"TASK_2\");","132","    assertThat(underTest.selectOlderThan(dbSession, 1_450_000_000_000L))","133","      .isEmpty();","134","  }","135","","136","  private void insertWithCreationDate(String uuid, long createdAt) {","137","    dbTester.executeInsert(","138","      \"CE_SCANNER_CONTEXT\",","139","      \"task_uuid\", uuid,","140","      \"created_at\", createdAt,","141","      \"updated_at\", 1,","142","      \"context_data\", \"YoloContent\".getBytes());","143","    dbSession.commit();","144","  }","145",""],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeScannerContextDao.java":[{"add":["30","import java.util.Set;","89","  public Set<String> selectOlderThan(DbSession dbSession, long beforeDate) {","90","    return mapper(dbSession).selectOlderThan(beforeDate);","91","  }","92",""],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":[{"add":["32","import static java.util.stream.Stream.concat;","33","import static org.sonar.core.util.stream.MoreCollectors.toSet;","34","","52","      long now = system2.now();","53","      sixMonthsAgo.setTimeInMillis(now);","60","        .collect(toSet());","62","","63","      Calendar fourWeeksAgo = Calendar.getInstance();","64","      fourWeeksAgo.setTimeInMillis(system2.now());","65","      fourWeeksAgo.add(Calendar.DATE, -28);","66","","67","      LOGGER.info(\"Delete the Scanner contexts tasks created before {}\", fourWeeksAgo.getTime());","68","      Set<String> scannerContextUuids = dbClient.ceScannerContextDao().selectOlderThan(dbSession, fourWeeksAgo.getTimeInMillis());","69","      dbClient.ceScannerContextDao().deleteByUuids(","70","        dbSession,","71","        concat(ceActivityUuids.stream(), scannerContextUuids.stream()).collect(toSet()));"],"delete":["28","import org.sonar.core.util.stream.MoreCollectors;","50","      sixMonthsAgo.setTimeInMillis(system2.now());","57","        .collect(MoreCollectors.toSet());","59","      dbClient.ceScannerContextDao().deleteByUuids(dbSession, ceActivityUuids);"]}]}},"bd2717036288c9feea942fdfcefcd096363bc006":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/profiling\/PhasesSumUpTimeProfiler.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/SourcePublisher.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/profiling\/PhasesSumUpTimeProfiler.java":[{"add":["21","import static org.sonar.scanner.profiling.AbstractTimeProfiling.sortByDescendingTotalTime;","22","import static org.sonar.scanner.profiling.AbstractTimeProfiling.truncate;","23","","24","import java.io.BufferedOutputStream;","27","import java.io.OutputStream;","31","","33","","52","import com.google.common.annotations.VisibleForTesting;","143","    try (OutputStream fos = new BufferedOutputStream(new FileOutputStream(file))) {"],"delete":["21","import com.google.common.annotations.VisibleForTesting;","46","import static org.sonar.scanner.profiling.AbstractTimeProfiling.sortByDescendingTotalTime;","47","import static org.sonar.scanner.profiling.AbstractTimeProfiling.truncate;","138","    try (FileOutputStream fos = new FileOutputStream(file)) {"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/SourcePublisher.java":[{"add":["21","import java.io.BufferedOutputStream;","28","import java.io.OutputStream;","30","","49","      try (OutputStream output = new BufferedOutputStream(new FileOutputStream(iofile));","59","  private static void writeSource(BufferedReader reader, OutputStream output, int lines) throws IOException {"],"delete":["46","      try (FileOutputStream output = new FileOutputStream(iofile);","56","  private static void writeSource(BufferedReader reader, FileOutputStream output, int lines) throws IOException {"]}]}},"86db744a5fc2ac3c998fc5c126c1298e9c085df9":{"changes":{"server\/sonar-docs\/src\/layouts\/index.js":"MODIFY","server\/sonar-docs\/src\/images\/newspaper.svg":"ADD","server\/sonar-docs\/gatsby-config.js":"MODIFY","server\/sonar-docs\/src\/templates\/page.css":"MODIFY","server\/sonar-docs\/src\/layouts\/components\/VersionSelect.js":"MODIFY","server\/sonar-docs\/src\/layouts\/components\/Sidebar.js":"MODIFY","server\/sonar-docs\/src\/templates\/page.js":"MODIFY","\/dev\/null":"DELETE","server\/sonar-docs\/src\/utils\/typography.js":"MODIFY","server\/sonar-docs\/src\/images\/community.svg":"ADD","server\/sonar-docs\/static\/favicon.ico":"ADD","server\/sonar-docs\/src\/images\/twitter.svg":"ADD","server\/sonar-docs\/build.gradle":"MODIFY"},"diff":{"server\/sonar-docs\/src\/layouts\/index.js":[{"add":[],"delete":["21","import DownloadIcon from '.\/components\/icons\/DownloadIcon';","46","              <div className=\"useful-links-block\">","47","                <div className=\"useful-link-title\">Download<\/div>","48","                <a href=\"https:\/\/www.sonarqube.org\/\" rel=\"noopener noreferrer\" target=\"_blank\">","49","                  <DownloadIcon \/> SonarQube","50","                <\/a>","51","                <div className=\"useful-link-title\">Get Help<\/div>","52","                <a","53","                  href=\"https:\/\/community.sonarsource.com\/\"","54","                  rel=\"noopener noreferrer\"","55","                  target=\"_blank\">","56","                  <img src=\"\/images\/community-icon.svg\" alt=\"Community\" \/> Community","57","                <\/a>","58","                <div className=\"useful-link-title\">Stay Connected<\/div>","59","                <a href=\"https:\/\/twitter.com\/SonarQube\" rel=\"noopener noreferrer\" target=\"_blank\">","60","                  <img src=\"\/images\/tw-icon-small.svg\" alt=\"Twitter\" \/> Twitter","61","                <\/a>","62","                <a","63","                  href=\"https:\/\/www.sonarsource.com\/resources\/product-news\/\"","64","                  rel=\"noopener noreferrer\"","65","                  target=\"_blank\">","66","                  <img src=\"\/images\/sq-icon-small.svg\" alt=\"Product News\" \/> Product News","67","                <\/a>","68","              <\/div>"]}],"server\/sonar-docs\/src\/images\/newspaper.svg":[{"add":[],"delete":[]}],"server\/sonar-docs\/gatsby-config.js":[{"add":["21","const prefix = { pathPrefix: '\/' + DOCS_VERSION }"],"delete":["21","const prefix =","22","  process.env.GATSBY_USE_PREFIX === '1'","23","    ? { pathPrefix: '\/' + process.env.GATSBY_DOCS_VERSION }","24","    : {};"]}],"server\/sonar-docs\/src\/templates\/page.css":[{"add":["67",".sidebar-footer {","68","  border-top: 1px solid #cfd3d7;","69","  flex-grow: 0;","70","  font-size: 12px;","71","}","72","","73",".sidebar-footer a {","74","  position: relative;","75","  display: inline-block;","76","  text-decoration: none;","77","  color: rgba(0, 0, 0, 0.8);","78","  line-height: 30px;","79","  margin: 10px 10px 10px -8px;","80","  padding: 0 8px;","81","  border-radius: 3px;","82","}","83","","84",".sidebar-footer a img,","85",".sidebar-footer a svg {","86","  height: 16px;","87","  color: #8a8c8f;","88","  margin-right: 5px;","89","  margin-bottom: 0;","90","  transform: translateY(2px);","91","}","92","","93",".sidebar-footer a.icon-only img {","94","  height: 12px;","95","  margin-right: 0;","96","}","97","","98",".sidebar-footer a:hover {","99","  background: #e8eff5;","100","}","101","","106",".page-sidebar a .tooltip {","107","  opacity: 0;","108","  background: rgba(0, 0, 0, 0.8);","109","  color: #fff;","110","  font-size: 12px;","111","  border-radius: 3px;","112","  line-height: 24px;","113","  padding: 0 8px;","114","  position: absolute;","115","  top: -30px;","116","  left: -50px;","117","  white-space: nowrap;","118","  transition: opacity 0.2s ease;","119","}","120","","121",".page-sidebar a .tooltip:after {","122","  top: 100%;","123","  right: 20px;","124","  border: solid transparent;","125","  content: ' ';","126","  height: 0;","127","  width: 0;","128","  position: absolute;","129","  pointer-events: none;","130","  border-color: rgba(0, 0, 0, 0);","131","  border-top-color: rgba(0, 0, 0, 0.8);","132","  border-width: 6px;","133","  margin-left: -6px;","134","}","135","","136",".page-sidebar a:hover .tooltip {","137","  opacity: 1;","138","  display: block;","139","}","140","","259","  font-weight: 500;","270","  color: #2679af;","274","  font-weight: 700;","305",".sub-menu-link.active {","306","  font-weight: 700;","307","}","308","","368","  margin: 0 auto;","682","img[src$='\/images\/exclamation.svg'],","683","img[src$='\/images\/check.svg'],","684","img[src$='\/images\/cross.svg'],","685","img[src$='\/images\/info.svg'] {"],"delete":["83",".useful-links-block {","84","  width: 200px;","85","  right: 32px;","86","  top: 32px;","87","  position: fixed;","88","  background: #f9f9fb;","89","  padding: 0 22px 22px 22px;","90","  border-radius: 3px;","91","}","92","","93",".useful-link-title {","94","  font-size: 12px;","95","  margin-top: 16px;","96","  margin-bottom: 4px;","97","}","98","","99",".useful-links-block a {","100","  color: #070706;","101","  display: block;","102","  font-size: 14px;","103","  text-decoration: inherit;","104","  line-height: 25px;","105","  transition: all 0.2s ease;","106","  margin: -4px;","107","  padding: 4px;","108","  border-radius: 3px;","109","}","110","","111",".useful-links-block a:hover {","112","  background-color: #e8eff5;","113","}","114","","115",".useful-links-block a svg,","116",".useful-links-block a img {","117","  margin-right: 6px;","118","  margin-left: 4px;","119","  margin-bottom: 0;","120","  height: 16px;","121","  transform: translateY(2px);","122","}","123","","125","  .useful-links-block {","126","    display: none;","127","  }","233","  font-weight: bold;","649","img[src='\/images\/exclamation.svg'],","650","img[src='\/images\/check.svg'],","651","img[src='\/images\/cross.svg'],","652","img[src='\/images\/info.svg'] {"]}],"server\/sonar-docs\/src\/layouts\/components\/VersionSelect.js":[{"add":["39","    const currentVersion = versions.find(v => v.current);","40","    const versionLabel =","41","      this.props.version === 'latest' && currentVersion ? currentVersion.value : this.props.version;","43","      !hasVersions || (currentVersion && versionLabel === currentVersion.value);","44","","48","          Docs <span className={isOnCurrentVersion ? 'current' : ''}>{versionLabel}<\/span>"],"delete":["40","      !hasVersions || versions.find(v => v.value === this.props.version) !== undefined;","44","          Docs <span className={isOnCurrentVersion ? 'current' : ''}>{this.props.version}<\/span>"]}],"server\/sonar-docs\/src\/layouts\/components\/Sidebar.js":[{"add":["27","import DownloadIcon from '.\/icons\/DownloadIcon';","132","      this.props.version === 'latest' ||","141","              src={`\/${this.props.version}\/images\/SonarQubeIcon.svg`}","170","        <div className=\"sidebar-footer\">","171","          <a href=\"https:\/\/www.sonarqube.org\/\" rel=\"noopener noreferrer\" target=\"_blank\">","172","            <DownloadIcon \/> SonarQube","173","          <\/a>","174","          <a href=\"https:\/\/community.sonarsource.com\/\" rel=\"noopener noreferrer\" target=\"_blank\">","175","            <img src={`\/${this.props.version}\/images\/community.svg`} alt=\"Community\" \/> Community","176","          <\/a>","177","          <a","178","            className=\"icon-only\"","179","            href=\"https:\/\/twitter.com\/SonarQube\"","180","            rel=\"noopener noreferrer\"","181","            target=\"_blank\">","182","            <img src={`\/${this.props.version}\/images\/twitter.svg`} alt=\"Twitter\" \/>","183","          <\/a>","184","          <a","185","            className=\"icon-only\"","186","            href=\"https:\/\/www.sonarsource.com\/resources\/product-news\/\"","187","            rel=\"noopener noreferrer\"","188","            target=\"_blank\">","189","            <img src={`\/${this.props.version}\/images\/newspaper.svg`} alt=\"Product News\" \/>","190","            <span className=\"tooltip\">Product News<\/span>","191","          <\/a>","192","        <\/div>"],"delete":["139","              src=\"\/images\/SonarQubeIcon.svg\""]}],"server\/sonar-docs\/src\/templates\/page.js":[{"add":["24","const version = process.env.GATSBY_DOCS_VERSION || '1.0';","25","","55","    htmlWithInclusions = replaceImageLinks(htmlWithInclusions);","58","    const version = process.env.GATSBY_DOCS_VERSION || '';","59","","64","          <link rel=\"icon\" href={`\/${version}\/favicon.ico`} \/>","65","          <link rel=\"canonical\" href={this.props.location.pathname.replace('latest', version)} \/>","113","function replaceImageLinks(content) {","114","  const version = process.env.GATSBY_DOCS_VERSION || '';","115","  if (version !== '') {","116","    content = content.replace(\/\\<img src=\"\\\/images\\\/(.*)\"\/gim, `<img src=\"\/${version}\/images\/$1\"`);","117","  }","118","  return content;","119","}","120","","123","  if (version !== '') {"],"delete":["108","  const usePrefix = process.env.GATSBY_USE_PREFIX === '1';","109","  if (usePrefix && version !== '') {"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-docs\/src\/utils\/typography.js":[{"add":["29","  googleFonts: [{ name: fontFamily, styles: ['400,500,700'] }],"],"delete":["29","  googleFonts: [{ name: fontFamily, styles: ['400,700'] }],"]}],"server\/sonar-docs\/src\/images\/community.svg":[{"add":[],"delete":[]}],"server\/sonar-docs\/static\/favicon.ico":[{"add":[],"delete":[]}],"server\/sonar-docs\/src\/images\/twitter.svg":[{"add":[],"delete":[]}],"server\/sonar-docs\/build.gradle":[{"add":["11","  environment = [ GATSBY_DOCS_VERSION: version ]","12","  inputs.property('version', version)","31","  def archiveDir = \"$version\""],"delete":["29","  def archiveDir = \"sonarqube-docs-$version\""]}]}},"4431df6a819734c4e4988c04be4148bcaa82cbab":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["89","  public DbTester db = DbTester.create(System2.INSTANCE);","93","  private DbClient dbClient = db.getDbClient();","94","  private ComponentDbTester componentDbTester = db.components();","95","  private PropertyDbTester propertyDbTester = new PropertyDbTester(db);","140","    UserDto user = db.users().insertUser(\"obiwan\");","151","    db.components().insertSnapshot(project, snapshot -> snapshot","162","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org2\"));","163","    db.qualityGates().createDefaultQualityGate(organization);","180","    OrganizationDto organization = db.organizations().insertForKey(\"my-org2\");","181","    db.qualityGates().createDefaultQualityGate(organization);","182","    ComponentDto project = componentDbTester.insertMainBranch(organization, p -> p.setName(\"Sample\").setDbKey(\"sample\"));","189","      .setName(\"Main.xoo\"));","192","      .setParam(\"componentKey\", fileDto.getKey())","196","","197","    assertJson(json).isSimilarTo(\"{\\n\" +","198","      \"  \\\"key\\\": \\\"\" + fileDto.getKey() + \"\\\",\\n\" +","199","      \"  \\\"branch\\\": \\\"feature1\\\",\\n\" +","200","      \"  \\\"name\\\": \\\"Main.xoo\\\",\\n\" +","201","      \"  \\\"breadcrumbs\\\": [\\n\" +","202","      \"    {\\n\" +","203","      \"      \\\"key\\\": \\\"sample\\\",\\n\" +","204","      \"      \\\"name\\\": \\\"Sample\\\",\\n\" +","205","      \"      \\\"qualifier\\\": \\\"TRK\\\"\\n\" +","206","      \"    },\\n\" +","207","      \"    {\\n\" +","208","      \"      \\\"key\\\": \\\"sample:src\\\",\\n\" +","209","      \"      \\\"name\\\": \\\"src\\\",\\n\" +","210","      \"      \\\"qualifier\\\": \\\"DIR\\\"\\n\" +","211","      \"    },\\n\" +","212","      \"    {\\n\" +","213","      \"      \\\"key\\\": \\\"\" + fileDto.getKey() + \"\\\",\\n\" +","214","      \"      \\\"name\\\": \\\"Main.xoo\\\",\\n\" +","215","      \"      \\\"qualifier\\\": \\\"FIL\\\"\\n\" +","216","      \"    }\\n\" +","217","      \"  ]\\n\" +","218","      \"}\\n\");","244","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org\"));","245","    db.qualityGates().createDefaultQualityGate(organization);","246","    ComponentDto project = db.components().insertPrivateProject(organization);","247","    QualityGateDto qualityGateDto = db.qualityGates().insertQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","248","    db.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","257","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org\"));","258","    ComponentDto project = db.components().insertPrivateProject(organization);","259","    db.qualityGates().createDefaultQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","277","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org\"));","278","    db.qualityGates().createDefaultQualityGate(organization);","279","    ComponentDto project = db.components().insertPrivateProject(organization);","286","    QualityGateDto qualityGateDto = db.qualityGates().insertQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","287","    db.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","312","    UserDto user = db.users().insertUser();","413","    OrganizationDto org = db.organizations().insert();","414","    db.qualityGates().createDefaultQualityGate(org);","415","    ComponentDto project = db.components().insertPrivateProject(org);","426","    OrganizationDto org = db.organizations().insert();","427","    db.qualityGates().createDefaultQualityGate(org);","428","    ComponentDto project = db.components().insertPublicProject(org);","439","    OrganizationDto org = db.organizations().insert();","440","    db.qualityGates().createDefaultQualityGate(org);","441","    ComponentDto project = db.components().insertPrivateProject(org);","442","    ComponentDto module = db.components().insertComponent(ComponentTesting.newModuleDto(project));","454","    OrganizationDto org = db.organizations().insert();","455","    db.qualityGates().createDefaultQualityGate(org);","456","    ComponentDto project = db.components().insertPrivateProject(org);","472","    OrganizationDto org = db.organizations().insert();","473","    db.qualityGates().createDefaultQualityGate(org);","474","    ComponentDto project = db.components().insertPublicProject(org);","517","    OrganizationDto organizationDto = db.organizations().insertForKey(\"my-org-1\");","529","    UserDto user = db.users().insertUser(\"obiwan\");","534","    QualityGateDto qualityGateDto = db.qualityGates().insertQualityGate(db.getDefaultOrganization(), qg -> qg.setName(\"Sonar way\"));","535","    db.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","565","  private ComponentDto insertOrganizationAndProject() {","566","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org\"));","567","    db.qualityGates().createDefaultQualityGate(organization);","568","    return db.components().insertPrivateProject(organization, \"abcd\", p -> p.setDbKey(\"polop\").setName(\"Polop\").setDescription(\"test project\"));","599","    dbClient.metricDao().insert(db.getSession(), metric);","600","    dbClient.liveMeasureDao().insert(db.getSession(),","603","    db.commit();"],"delete":["89","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","93","  private DbClient dbClient = dbTester.getDbClient();","94","  private ComponentDbTester componentDbTester = dbTester.components();","95","  private PropertyDbTester propertyDbTester = new PropertyDbTester(dbTester);","99","  private ComponentDto project;","101","  private OrganizationDto organization;","142","    UserDto user = dbTester.users().insertUser(\"obiwan\");","153","    dbTester.components().insertSnapshot(project, snapshot -> snapshot","164","    OrganizationDto organization = dbTester.organizations().insert(o -> o.setKey(\"my-org2\"));","165","    dbTester.qualityGates().createDefaultQualityGate(organization);","182","    OrganizationDto organization = dbTester.organizations().insertForKey(\"my-org2\");","183","    dbTester.qualityGates().createDefaultQualityGate(organization);","184","    ComponentDto project = componentDbTester.insertMainBranch(organization, p -> p.setName(\"Sample\"), p -> p.setDbKey(\"sample\"));","188","","190","","193","      .setName(\"Main.xoo\")","194","      .setDbKey(\"sample:src\/Main.xoo\"));","197","      .setParam(\"componentKey\", fileDto.getDbKey())","201","    verify(json, \"return_component_info_when_file_on_branch.json\");","227","    OrganizationDto organization = dbTester.organizations().insert(o -> o.setKey(\"my-org\"));","228","    dbTester.qualityGates().createDefaultQualityGate(organization);","229","    ComponentDto project = dbTester.components().insertPrivateProject(organization);","230","    QualityGateDto qualityGateDto = dbTester.qualityGates().insertQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","231","    dbTester.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","240","    OrganizationDto organization = dbTester.organizations().insert(o -> o.setKey(\"my-org\"));","241","    ComponentDto project = dbTester.components().insertPrivateProject(organization);","242","    dbTester.qualityGates().createDefaultQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","260","    OrganizationDto organization = dbTester.organizations().insert(o -> o.setKey(\"my-org\"));","261","    dbTester.qualityGates().createDefaultQualityGate(organization);","262","    ComponentDto project = dbTester.components().insertPrivateProject(organization);","269","    QualityGateDto qualityGateDto = dbTester.qualityGates().insertQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","270","    dbTester.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","295","    UserDto user = dbTester.users().insertUser();","396","    OrganizationDto org = dbTester.organizations().insert();","397","    dbTester.qualityGates().createDefaultQualityGate(org);","398","    ComponentDto project = dbTester.components().insertPrivateProject(org);","409","    OrganizationDto org = dbTester.organizations().insert();","410","    dbTester.qualityGates().createDefaultQualityGate(org);","411","    ComponentDto project = dbTester.components().insertPublicProject(org);","422","    OrganizationDto org = dbTester.organizations().insert();","423","    dbTester.qualityGates().createDefaultQualityGate(org);","424","    ComponentDto project = dbTester.components().insertPrivateProject(org);","425","    ComponentDto module = dbTester.components().insertComponent(ComponentTesting.newModuleDto(project));","437","    OrganizationDto org = dbTester.organizations().insert();","438","    dbTester.qualityGates().createDefaultQualityGate(org);","439","    ComponentDto project = dbTester.components().insertPrivateProject(org);","455","    OrganizationDto org = dbTester.organizations().insert();","456","    dbTester.qualityGates().createDefaultQualityGate(org);","457","    ComponentDto project = dbTester.components().insertPublicProject(org);","500","    OrganizationDto organizationDto = dbTester.organizations().insertForKey(\"my-org-1\");","512","    UserDto user = dbTester.users().insertUser(\"obiwan\");","517","    QualityGateDto qualityGateDto = dbTester.qualityGates().insertQualityGate(dbTester.getDefaultOrganization(), qg -> qg.setName(\"Sonar way\"));","518","    dbTester.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","548","  private ComponentDto insertOrganizationAndProject(){","549","    OrganizationDto organization = dbTester.organizations().insert(o -> o.setKey(\"my-org\"));","550","    dbTester.qualityGates().createDefaultQualityGate(organization);","551","    return dbTester.components().insertPrivateProject(organization, \"abcd\", p -> p.setDbKey(\"polop\").setName(\"Polop\").setDescription(\"test project\"));","582","    dbClient.metricDao().insert(dbTester.getSession(), metric);","583","    dbClient.liveMeasureDao().insert(dbTester.getSession(),","586","    dbTester.commit();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["182","    json.prop(\"key\", component.getKey())","188","    String branch = component.getBranch();","189","    if (branch != null) {","190","      json.prop(\"branch\", branch);","191","    }"],"delete":["182","    json.prop(\"key\", component.getDbKey())"]}]}},"3254f4804263e94f81d696e717322c1460d5b737":{"changes":{"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/rule\/RulesServiceTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/BulkRuleActivationActions.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/RuleQueryFactoryTest.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest\/bulk_activate_rule.json":"ADD","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/rule\/RulesService.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest\/bulk_activate_rule_not_all.json":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/RuleQueryFactory.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest\/does_not_return_warnings_when_bulk_activate_on_profile_and_rules_exist_on_another_language_than_profile.json":"ADD"},"diff":{"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/rule\/RulesServiceTest.java":[{"add":["42","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_RULE_KEY;"],"delete":["39","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_RULE_KEY;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/BulkRuleActivationActions.java":[{"add":["31","import org.sonar.server.rule.ws.RuleQueryFactory;","34","import static org.sonar.server.rule.ws.SearchAction.defineRuleSearchParameters;","46","  private final RuleQueryFactory ruleQueryFactory;","50","  public BulkRuleActivationActions(QProfileService profileService, RuleQueryFactory ruleQueryFactory, I18n i18n, UserSession userSession) {","52","    this.ruleQueryFactory = ruleQueryFactory;","75","    defineRuleSearchParameters(activate);","96","    defineRuleSearchParameters(deactivate);","109","      ruleQueryFactory.createRuleQuery(request),","117","      ruleQueryFactory.createRuleQuery(request),"],"delete":["22","import org.sonar.api.rule.RuleStatus;","24","import org.sonar.api.rules.RuleType;","30","import org.sonar.api.server.ws.WebService.Param;","32","import org.sonar.db.DbClient;","35","import org.sonar.server.rule.RuleService;","36","import org.sonar.server.rule.index.RuleQuery;","37","import org.sonar.server.rule.ws.SearchAction;","40","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_ACTIVATION;","41","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_ACTIVE_SEVERITIES;","42","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_AVAILABLE_SINCE;","43","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_INHERITANCE;","44","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_IS_TEMPLATE;","45","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_LANGUAGES;","46","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_QPROFILE;","47","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_REPOSITORIES;","48","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_RULE_KEY;","49","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_SEVERITIES;","50","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_STATUSES;","51","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_TAGS;","52","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_TEMPLATE_KEY;","53","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_TYPES;","64","  private final DbClient dbClient;","66","  private final RuleService ruleService;","70","  public BulkRuleActivationActions(DbClient dbClient, QProfileService profileService, RuleService ruleService, I18n i18n, UserSession userSession) {","71","    this.dbClient = dbClient;","73","    this.ruleService = ruleService;","96","    SearchAction.defineRuleSearchParameters(activate);","117","    SearchAction.defineRuleSearchParameters(deactivate);","130","      createRuleQuery(ruleService.newRuleQuery(), request),","137","    \/\/ TODO filter on rule language","139","      createRuleQuery(ruleService.newRuleQuery(), request),","144","  private static RuleQuery createRuleQuery(RuleQuery query, Request request) {","145","    query.setQueryText(request.param(Param.TEXT_QUERY));","146","    query.setSeverities(request.paramAsStrings(PARAM_SEVERITIES));","147","    query.setRepositories(request.paramAsStrings(PARAM_REPOSITORIES));","148","    query.setAvailableSince(request.hasParam(PARAM_AVAILABLE_SINCE) ? request.paramAsDate(PARAM_AVAILABLE_SINCE).getTime() : null);","149","    query.setStatuses(request.paramAsEnums(PARAM_STATUSES, RuleStatus.class));","150","    query.setLanguages(request.paramAsStrings(PARAM_LANGUAGES));","151","    query.setActivation(request.paramAsBoolean(PARAM_ACTIVATION));","152","    query.setQProfileKey(request.param(PARAM_QPROFILE));","153","    query.setTags(request.paramAsStrings(PARAM_TAGS));","154","    query.setInheritance(request.paramAsStrings(PARAM_INHERITANCE));","155","    query.setActiveSeverities(request.paramAsStrings(PARAM_ACTIVE_SEVERITIES));","156","    query.setIsTemplate(request.paramAsBoolean(PARAM_IS_TEMPLATE));","157","    query.setTemplateKey(request.param(PARAM_TEMPLATE_KEY));","158","    query.setTypes(request.paramAsEnums(PARAM_TYPES, RuleType.class));","159","    query.setKey(request.param(PARAM_RULE_KEY));","160","","161","    String sortParam = request.param(Param.SORT);","162","    if (sortParam != null) {","163","      query.setSortField(sortParam);","164","      query.setAscendingSort(request.mandatoryParamAsBoolean(Param.ASCENDING));","165","    }","166","    return query;","167","  }","168",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":[{"add":["253","import org.sonar.server.rule.ws.RuleQueryFactory;","445","      RuleQueryFactory.class,"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":[{"add":["61","      new BulkRuleActivationActions(profileService, null, i18n, userSessionRule),","79","      new RenameAction(null, userSessionRule))).controller(QProfilesWs.API_ENDPOINT);","235","      \"profileKey\", \"profileName\", \"language\", \"since\", \"to\", \"p\", \"ps\");","245","      \"profileKey\", \"profileName\", \"language\", \"parentKey\", \"parentName\");","255","      \"leftKey\", \"rightKey\");","265","      \"fromKey\", \"toName\");","274","      \"profileKey\", \"language\", \"profileName\");","283","      \"language\", \"name\");","301","      \"profileKey\", \"language\", \"profileName\");","311","      \"key\", \"name\");"],"delete":["35","import org.sonar.server.rule.RuleService;","54","    RuleService ruleService = mock(RuleService.class);","63","      new BulkRuleActivationActions(null, profileService, ruleService, i18n, userSessionRule),","81","      new RenameAction(null, userSessionRule)","82","      )).controller(QProfilesWs.API_ENDPOINT);","238","      \"profileKey\", \"profileName\", \"language\", \"since\", \"to\", \"p\", \"ps\"","239","      );","249","      \"profileKey\", \"profileName\", \"language\", \"parentKey\", \"parentName\"","250","      );","260","      \"leftKey\", \"rightKey\"","261","      );","271","      \"fromKey\", \"toName\"","272","      );","281","      \"profileKey\", \"language\", \"profileName\"","282","      );","291","      \"language\", \"name\"","292","      );","310","      \"profileKey\", \"language\", \"profileName\"","311","      );","321","      \"key\", \"name\"","322","      );"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/RuleQueryFactoryTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/SearchAction.java":[{"add":["99","  private final RuleQueryFactory ruleQueryFactory;","105","  public SearchAction(RuleIndex ruleIndex, ActiveRuleCompleter activeRuleCompleter, RuleQueryFactory ruleQueryFactory, DbClient dbClient, RuleMapper mapper) {","108","    this.ruleQueryFactory = ruleQueryFactory;","150","      RuleQuery query = ruleQueryFactory.createRuleQuery(request);","152","      SearchResponse responseBuilder = buildResponse(dbSession, searchWsRequest, context, searchResult, query);","159","  private SearchResponse buildResponse(DbSession dbSession, SearchWsRequest request, SearchOptions context, SearchResult result, RuleQuery query) {","162","    doContextResponse(dbSession, request, result, responseBuilder, query);","378","  protected void doContextResponse(DbSession dbSession, SearchWsRequest request, SearchResult result, SearchResponse.Builder response, RuleQuery query) {","382","      activeRuleCompleter.completeSearch(dbSession, query, result.rules, response);"],"delete":["24","import com.google.common.collect.ImmutableList;","52","import org.sonar.db.qualityprofile.QualityProfileDto;","67","import static org.sonar.api.utils.DateUtils.parseDate;","77","import static org.sonar.server.util.EnumUtils.toEnums;","108","  public SearchAction(RuleIndex ruleIndex, ActiveRuleCompleter activeRuleCompleter, DbClient dbClient, RuleMapper mapper) {","152","      RuleQuery query = doQuery(searchWsRequest);","154","      SearchResponse responseBuilder = buildResponse(dbSession, searchWsRequest, context, searchResult);","161","  private SearchResponse buildResponse(DbSession dbSession, SearchWsRequest request, SearchOptions context, SearchResult result) {","164","    doContextResponse(dbSession, request, result, responseBuilder);","313","  private static RuleQuery createRuleQuery(RuleQuery query, SearchWsRequest request) {","314","    query.setQueryText(request.getQuery());","315","    query.setSeverities(request.getSeverities());","316","    query.setRepositories(request.getRepositories());","317","    query.setAvailableSince(request.getAvailableSince() != null ? parseDate(request.getAvailableSince()).getTime() : null);","318","    query.setStatuses(toEnums(request.getStatuses(), RuleStatus.class));","319","    query.setLanguages(request.getLanguages());","320","    query.setActivation(request.getActivation());","321","    query.setQProfileKey(request.getQProfile());","322","    query.setTags(request.getTags());","323","    query.setInheritance(request.getInheritance());","324","    query.setActiveSeverities(request.getActiveSeverities());","325","    query.setIsTemplate(request.getIsTemplate());","326","    query.setTemplateKey(request.getTemplateKey());","327","    query.setTypes(toEnums(request.getTypes(), RuleType.class));","328","    query.setKey(request.getRuleKey());","329","","330","    String sortParam = request.getSort();","331","    if (sortParam != null) {","332","      query.setSortField(sortParam);","333","      query.setAscendingSort(request.getAsc());","334","    }","335","    return query;","336","  }","337","","345","    \/\/ TODO Get rid of this horrible hack: fields on request are not the same as fields for ES search ! 1\/2","406","  protected RuleQuery doQuery(SearchWsRequest request) {","407","    RuleQuery plainQuery = createRuleQuery(new RuleQuery(), request);","408","","409","    String qProfileKey = request.getQProfile();","410","    if (qProfileKey != null) {","411","      QualityProfileDto qProfile = activeRuleCompleter.loadProfile(qProfileKey);","412","      if (qProfile != null) {","413","        plainQuery.setLanguages(ImmutableList.of(qProfile.getLanguage()));","414","      }","415","    }","416","","417","    return plainQuery;","418","  }","419","","420","  protected void doContextResponse(DbSession dbSession, SearchWsRequest request, SearchResult result, SearchResponse.Builder response) {","421","    \/\/ TODO Get rid of this horrible hack: fields on request are not the same as fields for ES search ! 2\/2","425","      activeRuleCompleter.completeSearch(dbSession, doQuery(request), result.rules, response);","602","  private enum TypeToString implements Function<RuleType, String> {","603","    INSTANCE;","604","","605","    @Override","606","    public String apply(@Nonnull RuleType input) {","607","      return input.name();","608","    }","609","","610","  }"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest\/bulk_activate_rule.json":[{"add":[],"delete":[]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/rule\/RulesService.java":[{"add":["35","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_RULE_KEY;"],"delete":["32","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_RULE_KEY;"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest\/bulk_activate_rule_not_all.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/RuleQueryFactory.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest.java":[{"add":["58","import static org.sonarqube.ws.client.rule.RulesWsParameters.PARAM_QPROFILE;","272","    createRule(profile.getLanguage(), \"toto\");","273","    createRule(profile.getLanguage(), \"tata\");","274","    createRule(profile.getLanguage(), \"hello\");","275","    createRule(profile.getLanguage(), \"world\");","286","    request.execute().assertJson(getClass(), \"bulk_activate_rule.json\");","297","    createRule(java.getLanguage(), \"toto\");","298","    createRule(java.getLanguage(), \"tata\");","299","    createRule(php.getLanguage(), \"hello\");","300","    createRule(php.getLanguage(), \"world\");","311","    request.execute().assertJson(getClass(), \"bulk_activate_rule_not_all.json\");","321","    createRule(profile.getLanguage(), \"toto\");","322","    createRule(profile.getLanguage(), \"tata\");","323","    createRule(profile.getLanguage(), \"hello\");","324","    createRule(profile.getLanguage(), \"world\");","335","    request.execute();","345","    request.execute();","378","  }","380","  @Test","381","  public void does_not_return_warnings_when_bulk_activate_on_profile_and_rules_exist_on_another_language_than_profile() throws Exception {","382","    QualityProfileDto javaProfile = createProfile(\"java\");","383","    createRule(javaProfile.getLanguage(), \"toto\");","384","    createRule(javaProfile.getLanguage(), \"tata\");","385","    QualityProfileDto phpProfile = createProfile(\"php\");","386","    createRule(phpProfile.getLanguage(), \"hello\");","387","    createRule(phpProfile.getLanguage(), \"world\");","388","    session.commit();","389","    ruIndexer.index();","390","","391","    \/\/ 1. Activate Rule","392","    WsTester.TestRequest request = wsTester.newPostRequest(QProfilesWs.API_ENDPOINT, BulkRuleActivationActions.BULK_ACTIVATE_ACTION);","393","    request.setParam(RuleActivationActions.PROFILE_KEY, javaProfile.getKey());","394","    request.setParam(PARAM_QPROFILE, javaProfile.getKey());","395","    request.setParam(\"activation\", \"false\");","396","    request.execute().assertJson(getClass(), \"does_not_return_warnings_when_bulk_activate_on_profile_and_rules_exist_on_another_language_than_profile.json\");","397","    session.clearCache();","398","","399","    \/\/ 2. Assert ActiveRule in DAO","400","    assertThat(db.activeRuleDao().selectByProfileKey(session, javaProfile.getKey())).hasSize(2);"],"delete":["271","    RuleDto rule0 = createRule(profile.getLanguage(), \"toto\");","272","    RuleDto rule1 = createRule(profile.getLanguage(), \"tata\");","273","    RuleDto rule2 = createRule(profile.getLanguage(), \"hello\");","274","    RuleDto rule3 = createRule(profile.getLanguage(), \"world\");","285","    WsTester.Result result = request.execute();","296","    RuleDto rule0 = createRule(java.getLanguage(), \"toto\");","297","    RuleDto rule1 = createRule(java.getLanguage(), \"tata\");","298","    RuleDto rule2 = createRule(php.getLanguage(), \"hello\");","299","    RuleDto rule3 = createRule(php.getLanguage(), \"world\");","310","    WsTester.Result result = request.execute();","320","    RuleDto rule0 = createRule(profile.getLanguage(), \"toto\");","321","    RuleDto rule1 = createRule(profile.getLanguage(), \"tata\");","322","    RuleDto rule2 = createRule(profile.getLanguage(), \"hello\");","323","    RuleDto rule3 = createRule(profile.getLanguage(), \"world\");","334","    WsTester.Result result = request.execute();","344","    result = request.execute();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["255","      newDoc(RULE_KEY_4).setType(BUG));","266","    assertThat(index.search(query, new SearchOptions()).getIds()).containsOnly(RULE_KEY_3, RULE_KEY_4);","459","        .hasSize(3);","464","        .containsOnly(RULE_KEY_4);","471","        .isEmpty();","478","        .hasSize(2);","485","        .isEmpty();","492","        .hasSize(1);","499","        .isEmpty();","506","        .hasSize(3);","624","    result = index.search(new RuleQuery().setLanguages(ImmutableList.of(\"cpp\")), new SearchOptions().addFacets(asList(FACET_LANGUAGES, FACET_REPOSITORIES, FACET_TAGS)));","635","      .setTags(ImmutableList.of(\"T2\")), new SearchOptions().addFacets(asList(FACET_LANGUAGES, FACET_REPOSITORIES, FACET_TAGS)));","650","      .setTypes(asList(BUG, CODE_SMELL)), new SearchOptions().addFacets(asList(FACET_LANGUAGES, FACET_REPOSITORIES, FACET_TAGS, FACET_TYPES)));","749","  @Test","750","  public void search_all_keys_by_profile() {","751","    indexRules(","752","      newDoc(RULE_KEY_1),","753","      newDoc(RULE_KEY_2),","754","      newDoc(RULE_KEY_3));","755","","756","    indexActiveRules(","757","      ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY1, RULE_KEY_1)),","758","      ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY2, RULE_KEY_1)),","759","      ActiveRuleDocTesting.newDoc(ActiveRuleKey.of(QUALITY_PROFILE_KEY1, RULE_KEY_2)));","760","","761","    assertThat(tester.countDocuments(INDEX, TYPE_ACTIVE_RULE)).isEqualTo(3);","762","","763","    \/\/ 1. get all active rules.","764","    assertThat(index.searchAll(new RuleQuery().setActivation(true))).containsOnly(RULE_KEY_1, RULE_KEY_2);","765","","766","    \/\/ 2. get all inactive rules.","767","    assertThat(index.searchAll(new RuleQuery().setActivation(false))).containsOnly(RULE_KEY_3);","768","","769","    \/\/ 3. get all rules not active on profile","770","    assertThat(index.searchAll(new RuleQuery().setActivation(false).setQProfileKey(QUALITY_PROFILE_KEY2))).containsOnly(RULE_KEY_2, RULE_KEY_3);","771","","772","    \/\/ 4. get all active rules on profile","773","    assertThat(index.searchAll(new RuleQuery().setActivation(true).setQProfileKey(QUALITY_PROFILE_KEY2))).containsOnly(RULE_KEY_1);","774","  }","775",""],"delete":["255","      newDoc(RULE_KEY_4).setType(BUG)","256","    );","267","    assertThat(index.search(query, new SearchOptions()).getIds()).containsOnly(RULE_KEY_3,RULE_KEY_4);","460","      .hasSize(3);","465","      .containsOnly(RULE_KEY_4);","472","      .isEmpty();","479","      .hasSize(2);","486","      .isEmpty();","493","      .hasSize(1);","500","      .isEmpty();","507","      .hasSize(3);","625","    result = index.search(new RuleQuery().setLanguages(ImmutableList.of(\"cpp\"))","626","      , new SearchOptions().addFacets(asList(FACET_LANGUAGES, FACET_REPOSITORIES, FACET_TAGS)));","637","      .setTags(ImmutableList.of(\"T2\"))","638","      , new SearchOptions().addFacets(asList(FACET_LANGUAGES, FACET_REPOSITORIES, FACET_TAGS)));","653","      .setTypes(asList(BUG, CODE_SMELL))","654","      , new SearchOptions().addFacets(asList(FACET_LANGUAGES, FACET_REPOSITORIES, FACET_TAGS, FACET_TYPES)));"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest\/does_not_return_warnings_when_bulk_activate_on_profile_and_rules_exist_on_another_language_than_profile.json":[{"add":[],"delete":[]}]}},"0433161433a5f234790fae5eba2cf438cbde5d36":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/measure\/LiveMeasureMapper.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistLiveMeasuresStep.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/measure\/LiveMeasureDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/measure\/LiveMeasureMapper.xml":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistDuplicationDataStep.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/measure\/LiveMeasureDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/measure\/LiveMeasureMapper.java":[{"add":["23","import java.util.Set;","27","import org.sonar.db.DbSession;","74","    @Param(\"dto\") LiveMeasureDto dto,","77","  void deleteByComponentUuidExcludingMetricIds(","80","","81","  void deleteByComponent(@Param(\"componentUuid\") String componentUuid);","82",""],"delete":["72","    @Param(\"dtos\") List<LiveMeasureDto> dtos,","75","  int deleteByComponentUuidExcludingMetricIds("]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistLiveMeasuresStep.java":[{"add":["82","    try (DbSession dbSession = dbClient.openSession(true)) {","86","      dbSession.commit();","116","        if (!NonEmptyMeasure.INSTANCE.test(m) || !notBestValueOptimized.test(m)) {","117","          continue;","120","        LiveMeasureDto lm = measureToMeasureDto.toLiveMeasureDto(m, metric, component);","121","        dtos.add(lm);","122","        metricIds.add(metric.getId());","123","      }","124","","125","      if (supportUpsert) {","126","        for (LiveMeasureDto dto : dtos) {","127","          dbClient.liveMeasureDao().upsert(dbSession, dto);","128","        }","129","        \/\/ The measures that no longer exist on the component must be deleted, for example","130","        \/\/ when the coverage on a file goes to the \"best value\" 100%.","131","        \/\/ The measures on deleted components are deleted by the step PurgeDatastoresStep","132","        dbClient.liveMeasureDao().deleteByComponentUuidExcludingMetricIds(dbSession, component.getUuid(), metricIds);","133","      } else {","134","        dbClient.liveMeasureDao().deleteByComponent(dbSession, component.getUuid());","135","        dtos.forEach(dto -> dbClient.liveMeasureDao().insert(dbSession, dto));","136","      }","137","","139","      insertsOrUpdates += dtos.size();"],"delete":["27","import java.util.stream.Stream;","83","    try (DbSession dbSession = dbClient.openSession(false)) {","87","","117","        Stream.of(m)","118","          .filter(NonEmptyMeasure.INSTANCE)","119","          .filter(notBestValueOptimized)","120","          .map(measure -> measureToMeasureDto.toLiveMeasureDto(measure, metric, component))","121","          .forEach(lm -> {","122","            dtos.add(lm);","123","            metricIds.add(metric.getId());","124","          });","125","      }","126","      if (supportUpsert) {","127","        dbClient.liveMeasureDao().upsert(dbSession, dtos);","128","      } else {","129","        for (LiveMeasureDto dto : dtos) {","130","          dbClient.liveMeasureDao().insertOrUpdate(dbSession, dto);","132","      }","133","      insertsOrUpdates += dtos.size();","135","      \/\/ The measures that no longer exist on the component must be deleted, for example","136","      \/\/ when the coverage on a file goes to the \"best value\" 100%.","137","      \/\/ The measures on deleted components are deleted by the step PurgeDatastoresStep","138","      dbClient.liveMeasureDao().deleteByComponentUuidExcludingMetricIds(dbSession, component.getUuid(), metricIds);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/measure\/LiveMeasureDao.java":[{"add":["113","  public void update(DbSession dbSession, LiveMeasureDto dto) {","114","    mapper(dbSession).update(dto, system2.now());","115","  }","116","","125","  public void deleteByComponent(DbSession dbSession, String componentUuid) {","126","    mapper(dbSession).deleteByComponent(componentUuid);","129","  \/**","130","   * Similar to {@link #insertOrUpdate(DbSession, LiveMeasureDto)}, except that it triggers a single SQL request","131","   * <strong>This method should not be called unless {@link Dialect#supportsUpsert()} is true<\/strong>","132","   *\/","133","  public int upsert(DbSession dbSession, LiveMeasureDto dto) {","134","    dto.setUuidForUpsert(Uuids.create());","135","    return mapper(dbSession).upsert(dto, system2.now());","136","  }","137","","138","  public void deleteByComponentUuidExcludingMetricIds(DbSession dbSession, String componentUuid, List<Integer> excludedMetricIds) {","139","    mapper(dbSession).deleteByComponentUuidExcludingMetricIds(componentUuid, excludedMetricIds);"],"delete":["21","import com.google.common.collect.Iterables;","122","  \/**","123","   * Similar to {@link #insertOrUpdate(DbSession, LiveMeasureDto)}, except that:","124","   * <ul>","125","   * <li>it is batch session friendly (single same statement for both updates and inserts)<\/li>","126","   * <li>it triggers a single SQL request<\/li>","127","   * <\/ul>","128","   * <p>","129","   * <strong>This method should not be called unless {@link Dialect#supportsUpsert()} is true<\/strong>","130","   *\/","131","  public int upsert(DbSession dbSession, Iterable<LiveMeasureDto> dtos) {","132","    for (LiveMeasureDto dto : dtos) {","133","      dto.setUuidForUpsert(Uuids.create());","134","    }","135","    int updated = 0;","136","    for (List<LiveMeasureDto> chunk : Iterables.partition(dtos, 100)) {","137","      updated += mapper(dbSession).upsert(chunk, system2.now());","138","    }","139","    return updated;","142","  public int deleteByComponentUuidExcludingMetricIds(DbSession dbSession, String componentUuid, List<Integer> excludedMetricIds) {","143","    return mapper(dbSession).deleteByComponentUuidExcludingMetricIds(componentUuid, excludedMetricIds);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/measure\/LiveMeasureMapper.xml":[{"add":["109","  <delete id=\"deleteByComponent\" parameterType=\"map\">","110","    delete from live_measures","111","    where","112","      component_uuid = #{componentUuid, jdbcType=VARCHAR}","113","  <\/delete>","114","","127","    ) values (","138","    )"],"delete":["121","    ) values","122","    <foreach item=\"dto\" collection=\"dtos\" open=\"(\" separator=\"),(\" close=\")\">","133","    <\/foreach>"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistDuplicationDataStep.java":[{"add":["127","        nonPersistedBuffer.forEach(d -> dbClient.liveMeasureDao().upsert(dbSession, d));"],"delete":["127","        dbClient.liveMeasureDao().upsert(dbSession, nonPersistedBuffer);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/measure\/LiveMeasureDaoTest.java":[{"add":["381","    underTest.deleteByComponentUuidExcludingMetricIds(db.getSession(), \"C1\", Arrays.asList(1, 2));","387","  }","388","","389","  @Test","390","  public void deleteByComponentUuid() {","391","    LiveMeasureDto measure1 = newLiveMeasure().setComponentUuid(\"C1\").setMetricId(1);","392","    LiveMeasureDto measure2 = newLiveMeasure().setComponentUuid(\"C1\").setMetricId(2);","393","    LiveMeasureDto measure3 = newLiveMeasure().setComponentUuid(\"C1\").setMetricId(3);","394","    LiveMeasureDto measureOtherComponent = newLiveMeasure().setComponentUuid(\"C2\").setMetricId(3);","395","    underTest.insertOrUpdate(db.getSession(), measure1);","396","    underTest.insertOrUpdate(db.getSession(), measure2);","397","    underTest.insertOrUpdate(db.getSession(), measure3);","398","    underTest.insertOrUpdate(db.getSession(), measureOtherComponent);","399","","400","    underTest.deleteByComponent(db.getSession(), \"C1\");","401","","402","    verifyTableSize(1);","403","    verifyPersisted(measureOtherComponent);","415","    underTest.deleteByComponentUuidExcludingMetricIds(db.getSession(), \"C1\", Collections.emptyList());","429","    int count = underTest.upsert(db.getSession(), dto);","438","    count = underTest.upsert(db.getSession(), dto);","451","    underTest.upsert(db.getSession(), dto);","454","    int count = underTest.upsert(db.getSession(), dto);","467","    underTest.upsert(db.getSession(), dto);","471","    int count = underTest.upsert(db.getSession(), dto);","483","    underTest.upsert(db.getSession(), dto);","486","    int count = underTest.upsert(db.getSession(), dto);","499","    underTest.upsert(db.getSession(), dto);","503","    int count = underTest.upsert(db.getSession(), dto);","515","    underTest.upsert(db.getSession(), dto);","519","    int count = underTest.upsert(db.getSession(), dto);","531","    underTest.upsert(db.getSession(), dto);","535","    int count = underTest.upsert(db.getSession(), dto);","547","    underTest.upsert(db.getSession(), dto);","551","    int count = underTest.upsert(db.getSession(), dto);","563","    underTest.upsert(db.getSession(), dto);","567","    int count = underTest.upsert(db.getSession(), dto);","579","    underTest.upsert(db.getSession(), dto);","583","    int count = underTest.upsert(db.getSession(), dto);","595","    underTest.upsert(db.getSession(), dto);","599","    int count = underTest.upsert(db.getSession(), dto);","614","    for (LiveMeasureDto dto : inserted) {","615","      underTest.upsert(db.getSession(), dto);","616","    }","627","    for (LiveMeasureDto dto : upserted) {","628","      underTest.upsert(db.getSession(), dto);","629","    }","630","    db.getSession().commit();"],"delete":["381","    int count = underTest.deleteByComponentUuidExcludingMetricIds(db.getSession(), \"C1\", Arrays.asList(1, 2));","387","    assertThat(count).isEqualTo(1);","399","    int count = underTest.deleteByComponentUuidExcludingMetricIds(db.getSession(), \"C1\", Collections.emptyList());","401","    assertThat(count).isEqualTo(2);","414","    int count = underTest.upsert(db.getSession(), asList(dto));","423","    count = underTest.upsert(db.getSession(), asList(dto));","436","    underTest.upsert(db.getSession(), asList(dto));","439","    int count = underTest.upsert(db.getSession(), asList(dto));","452","    underTest.upsert(db.getSession(), asList(dto));","456","    int count = underTest.upsert(db.getSession(), asList(dto));","468","    underTest.upsert(db.getSession(), asList(dto));","471","    int count = underTest.upsert(db.getSession(), asList(dto));","484","    underTest.upsert(db.getSession(), asList(dto));","488","    int count = underTest.upsert(db.getSession(), asList(dto));","500","    underTest.upsert(db.getSession(), asList(dto));","504","    int count = underTest.upsert(db.getSession(), asList(dto));","516","    underTest.upsert(db.getSession(), asList(dto));","520","    int count = underTest.upsert(db.getSession(), asList(dto));","532","    underTest.upsert(db.getSession(), asList(dto));","536","    int count = underTest.upsert(db.getSession(), asList(dto));","548","    underTest.upsert(db.getSession(), asList(dto));","552","    int count = underTest.upsert(db.getSession(), asList(dto));","564","    underTest.upsert(db.getSession(), asList(dto));","568","    int count = underTest.upsert(db.getSession(), asList(dto));","580","    underTest.upsert(db.getSession(), asList(dto));","584","    int count = underTest.upsert(db.getSession(), asList(dto));","599","    int result = underTest.upsert(db.getSession(), inserted);","601","    assertThat(result).isEqualTo(30);","611","    result = underTest.upsert(db.getSession(), upserted);","613","    assertThat(result).isEqualTo(60);"]}]}},"f410dd2ba64a1b4047bb0d62a71520bfe4c8f1eb":{"changes":{"it\/it-tests\/src\/test\/java\/it\/qualityGate\/QualityGateNotificationTest.java":"MODIFY","tests\/perf\/src\/test\/java\/org\/sonarsource\/sonarqube\/perf\/server\/WebTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/notification\/email\/AlertsEmailTemplateTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notification\/email\/AlertsEmailTemplate.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/qualityGate\/QualityGateNotificationTest.java":[{"add":["139","    assertThat((String) message.getContent()).contains(\"\/dashboard?id=sample\");"],"delete":["139","    assertThat((String) message.getContent()).contains(\"\/dashboard\/index\/sample\");"]}],"tests\/perf\/src\/test\/java\/org\/sonarsource\/sonarqube\/perf\/server\/WebTest.java":[{"add":["27","import org.junit.Ignore;","29","import org.sonarsource.sonarqube.perf.PerfTestCase;","100","    PageStats counters = request(\"\/dashboard?id=org.apache.struts:struts-parent?name=Custom\");"],"delete":["25","import org.junit.Ignore;","26","import org.sonarsource.sonarqube.perf.PerfTestCase;","100","    PageStats counters = request(\"\/dashboard\/index\/org.apache.struts:struts-parent?name=Custom\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/notification\/email\/AlertsEmailTemplateTest.java":[{"add":["66","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard?id=org.sonar.foo:foo\"));","84","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard?id=org.sonar.foo:foo\"));","100","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard?id=org.sonar.foo:foo\"));","115","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard?id=org.sonar.foo:foo\"));"],"delete":["66","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard\/index\/org.sonar.foo:foo\"));","84","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard\/index\/org.sonar.foo:foo\"));","100","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard\/index\/org.sonar.foo:foo\"));","115","      \"See it in SonarQube: http:\/\/nemo.sonarsource.org\/dashboard\/index\/org.sonar.foo:foo\"));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notification\/email\/AlertsEmailTemplate.java":[{"add":["101","    messageBody.append(\"\\n\").append(\"See it in SonarQube: \").append(configuration.getServerBaseURL()).append(\"\/dashboard?id=\").append(projectKey);"],"delete":["101","    messageBody.append(\"\\n\").append(\"See it in SonarQube: \").append(configuration.getServerBaseURL()).append(\"\/dashboard\/index\/\").append(projectKey);"]}]}},"f6276b3b6fecce2b160ed8bdc62a3e87439249e4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/__tests__\/__snapshots__\/PreviewGraphTooltips-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverall-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityAnalysis.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/periods.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskDay.tsx":"ADD","server\/sonar-web\/src\/main\/js\/app\/components\/LocalizationContainer.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskDate.tsx":"ADD","server\/sonar-web\/src\/main\/js\/app\/utils\/exposeLibraries.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/PreviewGraphTooltips.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.js":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/licenses\/LicenseRow.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/LeakPeriodLegend-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/GraphsTooltips.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardOverall-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/ChangelogPopup-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/__tests__\/utils-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityDateInput-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/LeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavMeta-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/Analysis.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityAppContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/intl\/DateTimeFormatter.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/testUtils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/types.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/licenses\/__tests__\/LicenseRow-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/__tests__\/__snapshots__\/utils-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityAnalysesList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/DateFilter.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/enhance.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/intl\/TimeFormatter.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/query-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueChangelog.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileDate.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/handlebars\/d.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureContent.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/dates-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/query.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityAnalysesList-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/Changelog.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueCommentLine-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/ApplicationLeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/LeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/ProjectActivityAnalysesList-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/utils.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/intl\/DateFormatter.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/handlebars\/fromNow.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueChangelog-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/Event.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/CodeSmells.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/handlebars\/dt.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/l10n.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/CreationDateFacet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityDateInput.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/widgets\/barchart.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/Task.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionStagnant.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/__tests__\/__snapshots__\/Event-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/ProjectActivityDateInput-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionRules.tsx":"MODIFY","server\/sonar-web\/config\/webpack.config.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/intl\/DateTooltipFormatter.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/GraphsTooltips-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueChangelog-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/GraphsHistory.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardLeak-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeak-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/DateInput.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/LeakPeriodLegend-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/l10n-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.js":"MODIFY","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/dates.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/ApplicationLeakPeriodLegend-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/__tests__\/__snapshots__\/Analysis-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/__tests__\/Changelog-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/intl\/TimeTooltipFormatter.tsx":"ADD","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/__tests__\/ProjectCard-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityApp.js":[{"add":["90","            leakPeriodDate={new Date(props.project.leakPeriodDate)}"],"delete":["22","import moment from 'moment';","91","            leakPeriodDate={moment(props.project.leakPeriodDate).toDate()}"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.js.snap":[{"add":["44","    <FormattedRelative","45","      updateInterval={10000}","46","      value=\"2017-03-01T09:36:01+0100\"","47","    \/>","143","    <FormattedRelative","144","      updateInterval={10000}","145","      value=\"2017-03-01T09:36:01+0100\"","146","    \/>","184","    <FormattedRelative","185","      updateInterval={10000}","186","      value=\"2017-03-01T09:36:01+0100\"","187","    \/>"],"delete":["44","    (","45","    a month ago","46","    )","142","    (","143","    a month ago","144","    )","182","    (","183","    a month ago","184","    )"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/__tests__\/__snapshots__\/PreviewGraphTooltips-test.js.snap":[{"add":["19","      <DateFormatter","21","        long={true}"],"delete":["19","      <FormattedDate","21","        format=\"LL\""]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.js":[{"add":["20","import DateTimeFormatter from '..\/..\/..\/..\/components\/intl\/DateTimeFormatter';","23","import Tooltip from '..\/..\/..\/..\/components\/controls\/Tooltip';","37","      <Tooltip","38","        key=\"isInProgress\"","39","        overlay={<div dangerouslySetInnerHTML={{ __html: tooltip }} \/>}","40","        mouseLeaveDelay={2}>","41","        <li>","42","          <i className=\"spinner\" style={{ marginTop: '-1px' }} \/>{' '}","43","          <span className=\"text-info\">{translate('background_task.status.IN_PROGRESS')}<\/span>","44","        <\/li>","45","      <\/Tooltip>","52","      <Tooltip","53","        key=\"isPending\"","54","        overlay={<div dangerouslySetInnerHTML={{ __html: tooltip }} \/>}","55","        mouseLeaveDelay={2}>","56","        <li>","57","          <PendingIcon \/> <span>{translate('background_task.status.PENDING')}<\/span>","58","        <\/li>","59","      <\/Tooltip>","66","      <Tooltip","67","        key=\"isFailed\"","68","        overlay={<div dangerouslySetInnerHTML={{ __html: tooltip }} \/>}","69","        mouseLeaveDelay={2}>","70","        <li>","71","          <span className=\"badge badge-danger\">","72","            {translate('background_task.status.FAILED')}","73","          <\/span>","74","        <\/li>","75","      <\/Tooltip>","81","        <DateTimeFormatter date={props.analysisDate} \/>"],"delete":["19","import moment from 'moment';","36","      <li key=\"isInProgress\" data-toggle=\"tooltip\" title={tooltip}>","37","        <i className=\"spinner\" style={{ marginTop: '-1px' }} \/>{' '}","38","        <span className=\"text-info\">{translate('background_task.status.IN_PROGRESS')}<\/span>","39","      <\/li>","46","      <li key=\"isPending\" data-toggle=\"tooltip\" title={tooltip}>","47","        <PendingIcon \/> <span>{translate('background_task.status.PENDING')}<\/span>","48","      <\/li>","55","      <li key=\"isFailed\" data-toggle=\"tooltip\" title={tooltip}>","56","        <span className=\"badge badge-danger\">","57","          {translate('background_task.status.FAILED')}","58","        <\/span>","59","      <\/li>","62","","66","        {moment(props.analysisDate).format('LLL')}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverall-test.js.snap":[{"add":["37","      <DateTimeFormatter","38","        date=\"2017-01-01\"","39","      \/>"],"delete":["37","      <span","38","        className=\"big-spacer-left\"","39","      >","40","        projects.last_analysis_on_x.March 1, 2017 9:36 AM","41","      <\/span>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityAnalysis.js":[{"add":["25","import TimeTooltipFormatter from '..\/..\/..\/components\/intl\/TimeTooltipFormatter';","67","          <TimeTooltipFormatter className=\"text-middle\" date={date} placement=\"right\" \/>"],"delete":["25","import FormattedDate from '..\/..\/..\/components\/ui\/FormattedDate';","67","          <FormattedDate className=\"text-middle\" date={date} format=\"LT\" tooltipFormat=\"LTS\" \/>"]}],"server\/sonar-web\/src\/main\/js\/helpers\/periods.js":[{"add":["52","  return new Date(period.date);"],"delete":["19","import moment from 'moment';","53","  return moment(period.date).toDate();"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskDay.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/LocalizationContainer.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskDate.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/exposeLibraries.js":[{"add":[],"delete":["19","import moment from 'moment';","37","  window.moment = moment;"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/PreviewGraphTooltips.js":[{"add":["21","import DateFormatter from '..\/..\/..\/components\/intl\/DateFormatter';","58","            <DateFormatter date={this.props.selectedDate} long={true} \/>"],"delete":["21","import FormattedDate from '..\/..\/..\/components\/ui\/FormattedDate';","58","            <FormattedDate date={this.props.selectedDate} format=\"LL\" \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.js":[{"add":["25","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","88","                  <DateTimeFormatter date={issue.creationDate} \/>","98","                    <DateTimeFormatter date={item.creationDate} \/>"],"delete":["21","import moment from 'moment';","88","                  {moment(issue.creationDate).format('LLL')}","98","                    {moment(item.creationDate).format('LLL')}"]}],"server\/sonar-web\/package.json":[{"add":["22","    \"intl-relativeformat\": \"2.0.0\",","32","    \"react-intl\": \"2.3.0\",","55","    \"@types\/react-intl\": \"2.3.1\","],"delete":["25","    \"moment\": \"2.18.1\","]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/licenses\/LicenseRow.js":[{"add":["21","import DateFormatter from '..\/..\/..\/components\/intl\/DateFormatter';","52","              <DateFormatter date={license.expiration} long={true} \/>"],"delete":["21","import moment from 'moment';","52","              {moment(license.expiration).format('LL')}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/LeakPeriodLegend-test.js":[{"add":["39","    expect(","40","      shallow(<LeakPeriodLegend period={period} \/>).find('FormattedRelative')","41","    ).toMatchSnapshot();","50","    expect(","51","      shallow(<LeakPeriodLegend period={period} \/>).find('FormattedRelative')","52","    ).toMatchSnapshot();","60","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('FormattedRelative')).toHaveLength(1);","68","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('FormattedRelative')).toHaveLength(1);"],"delete":["39","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('.note')).toMatchSnapshot();","48","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('.note')).toMatchSnapshot();","56","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('.note')).toMatchSnapshot();","64","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('.note')).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/GraphsTooltips.js":[{"add":["22","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","100","            <DateTimeFormatter date={this.props.selectedDate} \/>"],"delete":["22","import FormattedDate from '..\/..\/..\/components\/ui\/FormattedDate';","100","            <FormattedDate date={this.props.selectedDate} format=\"LL\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardOverall-test.js":[{"add":[],"delete":["37","jest.mock('moment', () => () => ({","38","  format: () => 'March 1, 2017 9:36 AM',","39","  fromNow: () => 'a month ago'","40","}));","41",""]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/ChangelogPopup-test.js":[{"add":[],"delete":["23","jest.mock('moment', () => () => ({ format: () => 'March 1, 2017 9:36 AM' }));","24",""]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/__tests__\/utils-test.js":[{"add":["21","import * as dates from '..\/..\/..\/helpers\/dates';","26","    date: new Date('2017-06-09T13:06:10.000Z'),","29","  { key: 'AVyM9n3cHjR_PLDzRciT', date: new Date('2017-06-09T11:12:27.000Z'), events: [] },","32","    date: new Date('2017-06-09T11:12:27.000Z'),","37","    date: new Date('2017-05-18T14:13:07.000Z'),","46","  { key: 'AVwaa1qkpbBde8B6UhYI', date: new Date('2017-05-18T07:17:32.000Z'), events: [] },","49","    date: new Date('2017-05-16T07:09:59.000Z'),","59","  { key: 'AVvtGF3IY6vCuQNDdwxI', date: new Date('2017-05-09T12:03:59.000Z'), events: [] }","66","      { date: new Date('2017-04-27T08:21:32.000Z'), value: '100' },","67","      { date: new Date('2017-04-30T23:06:24.000Z'), value: '100' }","73","      { date: new Date('2017-04-27T08:21:32.000Z'), value: '12' },","74","      { date: new Date('2017-04-30T23:06:24.000Z'), value: '50' }","86","  from: new Date('2017-04-27T08:21:32.000Z'),","109","  dates.startOfDay = jest.fn(date => {","110","    const startDay = new Date(date);","111","    startDay.setUTCHours(0, 0, 0, 0);","112","    return startDay;","113","  });","114","","140","        to: new Date('2017-06-09T11:12:27.000Z'),","141","        from: new Date('2017-05-18T14:13:07.000Z')","149","          { key: 'AVyMjlK1HjR_PLDzRbB9', date: new Date('2017-06-09T13:06:10.000Z'), events: [] },","150","          { key: 'AVyM9n3cHjR_PLDzRciT', date: new Date('2017-06-09T11:12:27.000Z'), events: [] },","151","          { key: 'AVyMjlK1HjR_PLDzRbB9', date: new Date('2017-06-09T11:12:27.000Z'), events: [] },","152","          { key: 'AVxZtCpH7841nF4RNEMI', date: new Date('2017-05-18T14:13:07.000Z'), events: [] }","207","        from: '2017-04-27T08:21:32.000Z',","218","      from: '2017-04-27T08:21:32+0000',","222","      from: '2017-04-27T08:21:32+0000',","232","      from: '2017-04-27T08:21:32+0000',","239","      from: '2017-04-27T08:21:32+0000',","255","            { x: new Date('2017-04-27T08:21:32.000Z'), y: 2 },","256","            { x: new Date('2017-04-30T23:06:24.000Z'), y: 2 }","272","            { x: new Date('2017-04-27T08:21:32.000Z'), y: 2 },","273","            { x: new Date('2017-04-30T23:06:24.000Z'), y: 2 }","283","          data: [{ x: new Date('2017-04-27T08:21:32.000Z'), y: 2 }]"],"delete":["25","    date: new Date('2017-06-09T13:06:10+0200'),","28","  { key: 'AVyM9n3cHjR_PLDzRciT', date: new Date('2017-06-09T11:12:27+0200'), events: [] },","31","    date: new Date('2017-06-09T11:12:27+0200'),","36","    date: new Date('2017-05-18T14:13:07+0200'),","45","  { key: 'AVwaa1qkpbBde8B6UhYI', date: new Date('2017-05-18T07:17:32+0200'), events: [] },","48","    date: new Date('2017-05-16T07:09:59+0200'),","58","  { key: 'AVvtGF3IY6vCuQNDdwxI', date: new Date('2017-05-09T12:03:59+0200'), events: [] }","65","      { date: new Date('2017-04-27T08:21:32+0200'), value: '100' },","66","      { date: new Date('2017-04-30T23:06:24+0200'), value: '100' }","72","      { date: new Date('2017-04-27T08:21:32+0200'), value: '12' },","73","      { date: new Date('2017-04-30T23:06:24+0200'), value: '50' }","85","  from: new Date('2017-04-27T08:21:32+0200'),","93","jest.mock('moment', () => date => ({","94","  startOf: () => {","95","    return {","96","      valueOf: () => `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`","97","    };","98","  },","99","  toDate: () => new Date(date),","100","  format: format => `Formated.${format}:${date.valueOf()}`","101","}));","102","","143","        to: new Date('2017-06-09T11:12:27+0200'),","144","        from: new Date('2017-05-18T14:13:07+0200')","152","          { key: 'AVyMjlK1HjR_PLDzRbB9', date: new Date('2017-06-09T13:06:10+0200'), events: [] },","153","          { key: 'AVyM9n3cHjR_PLDzRciT', date: new Date('2017-06-09T11:12:27+0200'), events: [] },","154","          { key: 'AVyMjlK1HjR_PLDzRbB9', date: new Date('2017-06-09T11:12:27+0200'), events: [] },","155","          { key: 'AVxZtCpH7841nF4RNEMI', date: new Date('2017-05-18T14:13:07+0200'), events: [] }","210","        from: '2017-04-27T08:21:32+0200',","221","      from: 'Formated.YYYY-MM-DDTHH:mm:ssZZ:1493274092000',","225","      from: 'Formated.YYYY-MM-DDTHH:mm:ssZZ:1493274092000',","235","      from: 'Formated.YYYY-MM-DDTHH:mm:ssZZ:1493274092000',","242","      from: 'Formated.YYYY-MM-DDTHH:mm:ssZZ:1493274092000',","258","            { x: new Date('2017-04-27T08:21:32+0200'), y: 2 },","259","            { x: new Date('2017-04-30T23:06:24+0200'), y: 2 }","275","            { x: new Date('2017-04-27T08:21:32+0200'), y: 2 },","276","            { x: new Date('2017-04-30T23:06:24+0200'), y: 2 }","286","          data: [{ x: new Date('2017-04-27T08:21:32+0200'), y: 2 }]"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityDateInput-test.js.snap":[{"add":["10","    value=\"10\/27\/2016\"","19","    value=\"12\/27\/2016\""],"delete":["10","    value=\"2016-10-27\"","19","    value=\"2016-12-27\""]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/LeakPeriodLegend.js":[{"add":["22","import { FormattedRelative } from 'react-intl';","23","import DateFormatter from '..\/..\/..\/components\/intl\/DateFormatter';","56","  const tooltip = (","57","    <div>","58","      <FormattedRelative value={date} \/>","59","      {', '}","60","      <DateFormatter date={date} long={true} \/>","61","    <\/div>","62","  );"],"delete":["22","import moment from 'moment';","55","  const fromNow = moment(date).fromNow();","56","  const tooltip = fromNow + ', ' + moment(date).format('LL');"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavMeta-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/Analysis.js":[{"add":["23","import DateTooltipFormatter from '..\/..\/..\/components\/intl\/DateTooltipFormatter';","48","          <DateTooltipFormatter date={analysis.date} placement=\"right\" \/>"],"delete":["23","import FormattedDate from '..\/..\/..\/components\/ui\/FormattedDate';","48","          <FormattedDate date={analysis.date} format=\"LL\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityAppContainer.js":[{"add":["174","        analyses: analyses.map(analysis => ({ ...analysis, date: new Date(analysis.date) })),","188","            date: new Date(analysis.date),"],"delete":["21","import moment from 'moment';","175","        analyses: analyses.map(analysis => ({ ...analysis, date: moment(analysis.date).toDate() })),","189","            date: moment(analysis.date).toDate(),"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.ts":[{"add":["20","import { differenceInYears, isValidDate } from '..\/..\/helpers\/dates';","67","export function isStagnant(profile: Profile): boolean {","68","  if (profile.userUpdatedAt) {","69","    const updateDate = new Date(profile.userUpdatedAt);","70","    if (isValidDate(updateDate)) {","71","      return differenceInYears(new Date(), updateDate) >= 1;","72","    }","73","  }","74","  return false;"],"delete":["20","import * as moment from 'moment';","67","export function isStagnant(profile: Profile) {","68","  return moment().diff(moment(profile.userUpdatedAt), 'years') >= 1;"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":[{"add":["21","import { FormattedRelative } from 'react-intl';","24","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","26","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","33","export default function ProjectCard({ project }: Props) {","41","          ? <Tooltip","42","              overlay={<DateTimeFormatter date={project.lastAnalysisDate} \/>}","43","              placement=\"right\">","44","              <div className=\"account-project-analysis\">","45","                <FormattedRelative value={project.lastAnalysisDate}>","46","                  {(relativeDate: string) =>","47","                    <span>","48","                      {translateWithParameters('my_account.projects.analyzed_x', relativeDate)}","49","                    <\/span>}","50","                <\/FormattedRelative>","51","              <\/div>","52","            <\/Tooltip>"],"delete":["20","import * as moment from 'moment';","31","export default function ProjectCard(props: Props) {","32","  const { project } = props;","34","  const analysisMoment = isAnalyzed && moment(project.lastAnalysisDate);","41","          ? <div","42","              className=\"account-project-analysis\"","43","              title={analysisMoment ? analysisMoment.format('LLL') : undefined}>","44","              {translateWithParameters(","45","                'my_account.projects.analyzed_x',","46","                analysisMoment ? analysisMoment.fromNow() : undefined","47","              )}","48","            <\/div>"]}],"server\/sonar-web\/src\/main\/js\/components\/intl\/DateTimeFormatter.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/testUtils.ts":[{"add":["19","import { shallow, ShallowWrapper } from 'enzyme';","20","import { IntlProvider } from 'react-intl';","72","","73","const intlProvider = new IntlProvider({ locale: 'en' }, {});","74","const { intl } = intlProvider.getChildContext();","75","export function shallowWithIntl(node, options = {}) {","76","  return shallow(node, { ...options, context: { intl, ...options.context } });","77","}"],"delete":["19","import { ShallowWrapper } from 'enzyme';"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/types.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":[{"add":["11","<FormattedRelative","12","  updateInterval={10000}","13","  value={2013-09-21T22:00:00.000Z}","14","\/>","18","<FormattedRelative","19","  updateInterval={10000}","20","  value={2013-09-21T22:00:00.000Z}","21","\/>"],"delete":["11","<span","12","  className=\"note\"","13",">","14","  overview.last_analysis_x.4 years ago","15","<\/span>","16","`;","17","","18","exports[`check note previous_analysis 1`] = `","19","<span","20","  className=\"note\"","21",">","22","  overview.started_x.4 years ago","23","<\/span>","24","`;","25","","26","exports[`check note previous_version 1`] = `","27","<span","28","  className=\"note\"","29",">","30","  overview.started_x.4 years ago","31","<\/span>","35","<span","36","  className=\"note\"","37",">","38","  overview.started_x.4 years ago","39","<\/span>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/licenses\/__tests__\/LicenseRow-test.js":[{"add":["75","  expect(licenseExpiration.find('DateFormatter')).toHaveLength(1);"],"delete":["75","  expect(licenseExpiration.text()).toContain('2015');"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/__tests__\/__snapshots__\/utils-test.js.snap":[{"add":["6","      \"x\": 2017-04-27T08:21:32.000Z,","10","      \"x\": 2017-04-30T23:06:24.000Z,","25","        \"x\": 2017-04-27T08:21:32.000Z,","29","        \"x\": 2017-04-30T23:06:24.000Z,","40","        \"x\": 2017-04-27T08:21:32.000Z,","44","        \"x\": 2017-04-30T23:06:24.000Z,","59","      \"1495065600000\": Array [","61","          \"date\": 2017-05-18T14:13:07.000Z,","78","      \"1494892800000\": Array [","80","          \"date\": 2017-05-16T07:09:59.000Z,","107","      \"1496966400000\": Array [","109","          \"date\": 2017-06-09T11:12:27.000Z,","120","      \"1495065600000\": Array [","122","          \"date\": 2017-05-18T14:13:07.000Z,","133","      \"1496966400000\": Array [","135","          \"date\": 2017-06-09T11:12:27.000Z,","162","      \"1496966400000\": Array [","164","          \"date\": 2017-06-09T13:06:10.000Z,","175","          \"date\": 2017-06-09T11:12:27.000Z,","186","      \"1495065600000\": Array [","188","          \"date\": 2017-05-18T14:13:07.000Z,","199","          \"date\": 2017-05-18T07:17:32.000Z,","204","      \"1496966400000\": Array [","206","          \"date\": 2017-06-09T11:12:27.000Z,","223","      \"1494288000000\": Array [","225","          \"date\": 2017-05-09T12:03:59.000Z,","226","          \"events\": Array [],","227","          \"key\": \"AVvtGF3IY6vCuQNDdwxI\",","228","        },","229","      ],","230","      \"1494892800000\": Array [","231","        Object {","232","          \"date\": 2017-05-16T07:09:59.000Z,","259","      \"1495065600000\": Array [","261","          \"date\": 2017-05-18T14:13:07.000Z,","266","      \"1496966400000\": Array [","268","          \"date\": 2017-06-09T13:06:10.000Z,","273","          \"date\": 2017-06-09T11:12:27.000Z,","278","          \"date\": 2017-06-09T11:12:27.000Z,"],"delete":["6","      \"x\": 2017-04-27T06:21:32.000Z,","10","      \"x\": 2017-04-30T21:06:24.000Z,","25","        \"x\": 2017-04-27T06:21:32.000Z,","29","        \"x\": 2017-04-30T21:06:24.000Z,","40","        \"x\": 2017-04-27T06:21:32.000Z,","44","        \"x\": 2017-04-30T21:06:24.000Z,","59","      \"2017-4-18\": Array [","61","          \"date\": 2017-05-18T12:13:07.000Z,","78","      \"2017-4-16\": Array [","80","          \"date\": 2017-05-16T05:09:59.000Z,","107","      \"2017-5-9\": Array [","109","          \"date\": 2017-06-09T09:12:27.000Z,","120","      \"2017-4-18\": Array [","122","          \"date\": 2017-05-18T12:13:07.000Z,","133","      \"2017-5-9\": Array [","135","          \"date\": 2017-06-09T09:12:27.000Z,","162","      \"2017-5-9\": Array [","164","          \"date\": 2017-06-09T11:06:10.000Z,","175","          \"date\": 2017-06-09T09:12:27.000Z,","186","      \"2017-4-18\": Array [","188","          \"date\": 2017-05-18T12:13:07.000Z,","199","          \"date\": 2017-05-18T05:17:32.000Z,","204","      \"2017-5-9\": Array [","206","          \"date\": 2017-06-09T09:12:27.000Z,","223","      \"2017-4-16\": Array [","225","          \"date\": 2017-05-16T05:09:59.000Z,","241","      \"2017-4-9\": Array [","242","        Object {","243","          \"date\": 2017-05-09T10:03:59.000Z,","244","          \"events\": Array [],","245","          \"key\": \"AVvtGF3IY6vCuQNDdwxI\",","246","        },","247","      ],","259","      \"2017-4-18\": Array [","261","          \"date\": 2017-05-18T12:13:07.000Z,","266","      \"2017-5-9\": Array [","268","          \"date\": 2017-06-09T11:06:10.000Z,","273","          \"date\": 2017-06-09T09:12:27.000Z,","278","          \"date\": 2017-06-09T09:12:27.000Z,"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityAnalysesList.js":[{"add":["24","import DateFormatter from '..\/..\/..\/components\/intl\/DateFormatter';","192","                  <li key={day} className=\"project-activity-day\">","194","                      <DateFormatter date={Number(day)} long={true} \/>"],"delete":["22","import moment from 'moment';","25","import FormattedDate from '..\/..\/..\/components\/ui\/FormattedDate';","193","                  <li","194","                    key={day}","195","                    className=\"project-activity-day\"","196","                    data-day={moment(Number(day)).format('YYYY-MM-DD')}>","198","                      <FormattedDate date={Number(day)} format=\"LL\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/DateFilter.js":[{"add":["21","import { toShortNotSoISOString, isValidDate } from '..\/..\/..\/helpers\/dates';","47","    const minDate = new Date(this.refs.minDate.value);","48","    const maxDate = new Date(this.refs.maxDate.value);","50","    if (isValidDate(minDate)) {","51","      date.minSubmittedAt = toShortNotSoISOString(minDate);","54","    if (isValidDate(maxDate)) {","55","      date.maxExecutedAt = toShortNotSoISOString(maxDate);"],"delete":["19","\/\/ @flow","21","import moment from 'moment';","23","import { DATE_FORMAT } from '..\/constants';","49","    const minDateRaw = this.refs.minDate.value;","50","    const maxDateRaw = this.refs.maxDate.value;","51","    const minDate = moment(minDateRaw, DATE_FORMAT, true);","52","    const maxDate = moment(maxDateRaw, DATE_FORMAT, true);","54","    if (minDate.isValid()) {","55","      date.minSubmittedAt = minDate.format(DATE_FORMAT);","58","    if (maxDate.isValid()) {","59","      date.maxExecutedAt = maxDate.format(DATE_FORMAT);"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/enhance.js":[{"add":["23","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","159","","160","      const tooltip = (","161","        <DateTimeFormatter date={component.analysisDate}>","162","          {formattedAnalysisDate =>","163","            <span>","164","              {translateWithParameters('widget.as_calculated_on_x', formattedAnalysisDate)}","165","            <\/span>}","166","        <\/DateTimeFormatter>","167","      );","168",""],"delete":["21","import moment from 'moment';","159","      const formattedAnalysisDate = moment(component.analysisDate).format('LLL');","160","      const tooltip = translateWithParameters('widget.as_calculated_on_x', formattedAnalysisDate);"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.js":[{"add":["23","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","89","            <DateTimeFormatter date={project.analysisDate}>","90","              {formattedDate =>","91","                <span className=\"big-spacer-left\">","92","                  {translateWithParameters('projects.last_analysis_on_x', formattedDate)}","93","                <\/span>}","94","            <\/DateTimeFormatter>"],"delete":["22","import moment from 'moment';","89","            <span className=\"big-spacer-left\">","90","              {translateWithParameters(","91","                'projects.last_analysis_on_x',","92","                moment(project.analysisDate).format('LLL')","93","              )}","94","            <\/span>"]}],"server\/sonar-web\/src\/main\/js\/components\/intl\/TimeFormatter.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/query-test.js":[{"add":["80","  const date = new Date('2016-06-20T13:09:48.256Z');"],"delete":["19","import moment from 'moment';","81","  const date = moment.utc('2016-06-20T13:09:48.256Z');"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueChangelog.js":[{"add":["21","import { FormattedRelative } from 'react-intl';","24","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","25","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","57","        <Tooltip","58","          overlay={<DateTimeFormatter date={this.props.creationDate} \/>}","59","          placement=\"left\"","60","          mouseEnterDelay={0.5}>","61","          <button","62","            className=\"button-link issue-action issue-action-with-options js-issue-show-changelog\"","63","            onClick={this.handleClick}>","64","            <span className=\"issue-meta-label\">","65","              <FormattedRelative value={this.props.creationDate} \/>","66","            <\/span>","67","            <i className=\"icon-dropdown little-spacer-left\" \/>","68","          <\/button>","69","        <\/Tooltip>"],"delete":["21","import moment from 'moment';","49","    const momentCreationDate = moment(this.props.creationDate);","56","        <button","57","          className=\"button-link issue-action issue-action-with-options js-issue-show-changelog\"","58","          title={momentCreationDate.format('LLL')}","59","          onClick={this.handleClick}>","60","          <span className=\"issue-meta-label\">","61","            {momentCreationDate.fromNow()}","62","          <\/span>","63","          <i className=\"icon-dropdown little-spacer-left\" \/>","64","        <\/button>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileDate.tsx":[{"add":["20","import { FormattedRelative } from 'react-intl';","21","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","22","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","31","    ? <Tooltip overlay={<DateTimeFormatter date={date} \/>}>","32","        <span>","33","          <FormattedRelative value={date} \/>","34","        <\/span>","35","      <\/Tooltip>"],"delete":["20","import * as moment from 'moment';","29","    ? <span title={moment(date).format('LLL')} data-toggle=\"tooltip\">","30","        {moment(date).fromNow()}","31","      <\/span>"]}],"server\/sonar-web\/src\/main\/js\/helpers\/handlebars\/d.js":[{"add":["20","  return new Intl.DateTimeFormat(localStorage.getItem('l10n.locale') || 'en', {","21","    year: 'numeric',","22","    month: 'long',","23","    day: 'numeric'","24","  }).format(new Date(date));"],"delete":["19","const moment = require('moment');","20","","22","  return moment(date).format('LL');"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureContent.js":[{"add":["218","      isDiffMetric(this.props.metric.key) && leakPeriod != null ? new Date(leakPeriod.date) : null;","224","          const scmDate = new Date(line.scmDate);"],"delete":["22","import moment from 'moment';","219","      isDiffMetric(this.props.metric.key) && leakPeriod != null","220","        ? moment(leakPeriod.date).toDate()","221","        : null;","227","          const scmDate = moment(line.scmDate).toDate();"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/dates-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/query.js":[{"add":["21","import { isValidDate, toNotSoISOString } from '.\/dates';","67","  if (value) {","68","    const date = new Date(value);","69","    if (isValidDate(date)) {","70","      return date;","71","    }","89","    return toNotSoISOString(value);"],"delete":["21","import moment from 'moment';","67","  const date = moment(value);","68","  if (value && date) {","69","    return date.toDate();","87","    return moment(value).format('YYYY-MM-DDTHH:mm:ssZZ');"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityAnalysesList-test.js.snap":[{"add":["31","          <DateFormatter","32","            date=\"1477267200000\"","33","            long={true}","100","          <DateFormatter","101","            date=\"1477526400000\"","102","            long={true}","169","          <DateFormatter","170","            date=\"1477526400000\"","171","            long={true}","244","          <DateFormatter","245","            date=\"1477440000000\"","246","            long={true}","290","          <DateFormatter","291","            date=\"1477267200000\"","292","            long={true}"],"delete":["27","        data-day=\"Formated.YYYY-MM-DD:2016-9-24\"","32","          <FormattedDate","33","            date=\"2016-9-24\"","34","            format=\"LL\"","97","        data-day=\"Formated.YYYY-MM-DD:2016-9-27\"","102","          <FormattedDate","103","            date=\"2016-9-27\"","104","            format=\"LL\"","167","        data-day=\"Formated.YYYY-MM-DD:2016-9-27\"","172","          <FormattedDate","173","            date=\"2016-9-27\"","174","            format=\"LL\"","243","        data-day=\"Formated.YYYY-MM-DD:2016-9-26\"","248","          <FormattedDate","249","            date=\"2016-9-26\"","250","            format=\"LL\"","290","        data-day=\"Formated.YYYY-MM-DD:2016-9-24\"","295","          <FormattedDate","296","            date=\"2016-9-24\"","297","            format=\"LL\""]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/Changelog.tsx":[{"add":["22","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","25","import { differenceInSeconds } from '..\/..\/..\/helpers\/dates';","38","    const isSameDate =","39","      prev != null && differenceInSeconds(new Date(prev.date), new Date(event.date)) < 10;","55","          {!isBulkChange && <DateTimeFormatter date={event.date} \/>}"],"delete":["21","import * as moment from 'moment';","37","    const isSameDate = prev != null && moment(prev.date).diff(event.date, 'seconds') < 10;","53","          {!isBulkChange && moment(event.date).format('LLL')}"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueCommentLine-test.js":[{"add":[],"delete":["33","jest.mock('moment', () => () => ({ fromNow: () => 'a month ago' }));","34",""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/ApplicationLeakPeriodLegend.js":[{"add":["22","import DateTooltipFormatter from '..\/..\/..\/components\/intl\/DateTooltipFormatter';","81","              {leak.projectName}: <DateTooltipFormatter date={leak.date} \/>"],"delete":["22","import FormattedDate from '..\/..\/..\/components\/ui\/FormattedDate';","81","              {leak.projectName}: <FormattedDate date={leak.date} format=\"LL\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/LeakPeriodLegend.js":[{"add":["21","import { FormattedRelative } from 'react-intl';","22","import DateFormatter from '..\/..\/..\/components\/intl\/DateFormatter';","85","  const tooltip = (","86","    <DateFormatter date={leakPeriodDate} long={true}>","87","      {formattedLeakPeriodDate =>","88","        <span>","89","          {translateWithParameters(","90","            ['date'].includes(period.mode)","91","              ? 'overview.last_analysis_on_x'","92","              : 'overview.started_on_x',","93","            formattedLeakPeriodDate","94","          )}","95","        <\/span>}","96","    <\/DateFormatter>","97","  );","103","        <FormattedRelative value={leakPeriodDate}>","104","          {fromNow =>","105","            <span className=\"note\">","106","              {translateWithParameters(","107","                ['date'].includes(period.mode) ? 'overview.last_analysis_x' : 'overview.started_x',","108","                fromNow","109","              )}","110","            <\/span>}","111","        <\/FormattedRelative>"],"delete":["21","import moment from 'moment';","84","  const momentDate = moment(leakPeriodDate);","85","  const fromNow = momentDate.fromNow();","86","  const note = ['date'].includes(period.mode)","87","    ? translateWithParameters('overview.last_analysis_x', fromNow)","88","    : translateWithParameters('overview.started_x', fromNow);","89","  const tooltip = ['date'].includes(period.mode)","90","    ? translateWithParameters('overview.last_analysis_on_x', momentDate.format('LL'))","91","    : translateWithParameters('overview.started_on_x', momentDate.format('LL'));","92","","98","        <span className=\"note\">","99","          {note}","100","        <\/span>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/ProjectActivityAnalysesList-test.js":[{"add":["22","import * as dates from '..\/..\/..\/..\/helpers\/dates';","88","dates.startOfDay = jest.fn(date => {","89","  const startDay = new Date(date);","90","  startDay.setUTCHours(0, 0, 0, 0);","91","  return startDay;","92","});","93",""],"delete":["85","jest.mock('moment', () => date => ({","86","  startOf: () => {","87","    return {","88","      valueOf: () => `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`","89","    };","90","  },","91","  toDate: () => new Date(date),","92","  format: format => `Formated.${format}:${date}`","93","}));","94",""]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/utils.js":[{"add":["30","import { startOfDay } from '..\/..\/helpers\/dates';","159","    const day = startOfDay(new Date(analysis.date)).getTime().toString();"],"delete":["20","import moment from 'moment';","159","    const day = moment(analysis.date).startOf('day').valueOf().toString();"]}],"server\/sonar-web\/src\/main\/js\/components\/intl\/DateFormatter.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/handlebars\/fromNow.js":[{"add":["19","const IntlRelativeFormat = require('intl-relativeformat');","22","  return new IntlRelativeFormat(localStorage.getItem('l10n.locale') || 'en').format(date);"],"delete":["19","const moment = require('moment');","22","  return moment(date).fromNow();"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueChangelog-test.js":[{"add":[],"delete":["30","jest.mock('moment', () => () => ({","31","  format: () => 'March 1, 2017 9:36 AM',","32","  fromNow: () => 'a month ago'","33","}));","34",""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/Event.js":[{"add":["23","\/*:: import type { Event as EventType } from '..\/..\/projectActivity\/types'; *\/","37","    <span className=\"overview-analysis-event\">","39","      {event.description","40","        ? <Tooltip overlay={event.description} placement=\"left\" mouseEnterDelay={0.5}>","41","            <strong>","42","              {event.name}","43","            <\/strong>","44","          <\/Tooltip>","45","        : <strong>","46","            {event.name}","47","          <\/strong>}","48","    <\/span>"],"delete":["22","\/*:: import type { Event as EventType } from '..\/..\/projectActivity\/types'; *\/","37","    <div className=\"overview-analysis-event\">","39","      <Tooltip overlay={event.description} placement=\"left\">","40","        <strong>","41","          {event.name}","42","        <\/strong>","43","      <\/Tooltip>","44","    <\/div>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1537","quality_profiles.x_updated_on_y={0}, updated on {1}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/CodeSmells.js":[{"add":["21","import { FormattedRelative } from 'react-intl';","23","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","46","    const tooltip = (","47","      <DateTimeFormatter date={component.analysisDate}>","48","        {formattedAnalysisDate =>","49","          <span>","50","            {translateWithParameters('widget.as_calculated_on_x', formattedAnalysisDate)}","51","          <\/span>}","52","      <\/DateTimeFormatter>","53","    );","64","    if (!this.props.historyStartDate) {","65","      return null;","66","    }","68","      <FormattedRelative value={this.props.historyStartDate}>","69","        {fromNow =>","70","          <span className=\"overview-domain-timeline-date\">","71","            {translateWithParameters('overview.started_x', fromNow)}","72","          <\/span>}","73","      <\/FormattedRelative>"],"delete":["19","import moment from 'moment';","45","    const formattedAnalysisDate = moment(component.analysisDate).format('LLL');","46","    const tooltip = translateWithParameters('widget.as_calculated_on_x', formattedAnalysisDate);","47","","58","    const momentDate = moment(this.props.historyStartDate);","59","    const fromNow = momentDate.fromNow();","61","      <span className=\"overview-domain-timeline-date\">","62","        {translateWithParameters('overview.started_x', fromNow)}","63","      <\/span>"]}],"server\/sonar-web\/src\/main\/js\/helpers\/handlebars\/dt.js":[{"add":["20","  return new Intl.DateTimeFormat(localStorage.getItem('l10n.locale') || 'en', {","21","    year: 'numeric',","22","    month: 'long',","23","    day: 'numeric',","24","    hour: 'numeric',","25","    minute: 'numeric'","26","  }).format(new Date(date));"],"delete":["19","const moment = require('moment');","20","","22","  return moment(date).format('LLL');"]}],"server\/sonar-web\/src\/main\/js\/helpers\/l10n.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/CreationDateFacet.js":[{"add":["22","import { FormattedRelative, intlShape } from 'react-intl';","23","import { formatterOption, longFormatterOption } from '..\/..\/..\/components\/intl\/DateFormatter';","24","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter';","30","import { isSameDay, toShortNotSoISOString } from '..\/..\/..\/helpers\/dates';","58","  static contextTypes = {","59","    intl: intlShape","60","  };","61","","91","    { createdAfter, createdBefore } \/*: {","92","    createdAfter: Date,","93","    createdBefore?: Date","97","      createdAfter: toShortNotSoISOString(createdAfter),","98","      createdBefore: createdBefore && toShortNotSoISOString(createdBefore)","102","  handlePeriodChange = (property \/*: string *\/, value \/*: string *\/) => {","107","      [property]: toShortNotSoISOString(new Date(value))","111","  handlePeriodChangeBefore = (value \/*: string *\/) =>","112","    this.handlePeriodChange('createdBefore', value);","114","  handlePeriodChangeAfter = (value \/*: string *\/) => this.handlePeriodChange('createdAfter', value);","115","","116","  handlePeriodClick = (period \/*: string *\/) => this.resetTo({ createdInLast: period });","117","","118","  handleLeakPeriodClick = () => this.resetTo({ sinceLeakPeriod: true });","133","    const { formatDate } = this.context.intl;","134","    const beforeDate = createdBefore ? createdBefore : undefined;","135","    const data = periods.map((start, index) => {","136","      const startDate = new Date(start);","137","      let nextStartDate = index < periods.length - 1 ? periods[index + 1] : beforeDate;","138","      let endDate;","139","      if (nextStartDate) {","140","        nextStartDate = new Date(nextStartDate);","141","        endDate = new Date(nextStartDate);","142","        endDate.setDate(endDate.getDate() - 1);","143","      }","146","        formatMeasure(stats[start], 'SHORT_INT') +","147","        '<br\/>' +","148","        formatDate(startDate, longFormatterOption);","149","      if (endDate && !isSameDay(endDate, startDate)) {","150","        tooltip += ' \u2013 ' + formatDate(endDate, longFormatterOption);","154","        createdAfter: startDate,","155","        createdBefore: nextStartDate,","158","        y: stats[start]","185","        <DateTimeFormatter date={this.props.createdAt} \/>","188","          <FormattedRelative value={this.props.createdAt} \/>","196","    const { formatDate } = this.context.intl;","201","          onChange={this.handlePeriodChangeAfter}","203","          value={createdAfter ? formatDate(createdAfter, formatterOption) : undefined}","207","          onChange={this.handlePeriodChangeBefore}","209","          value={createdBefore ? formatDate(createdBefore, formatterOption) : undefined}","215","  renderPredefinedPeriods() {","264","          {this.renderPredefinedPeriods()}"],"delete":["21","import moment from 'moment';","48","const DATE_FORMAT = 'YYYY-MM-DDTHH:mm:ssZZ';","49","","86","    {","87","      createdAfter,","88","      createdBefore","89","    } \/*: {","90","    createdAfter: Object,","91","    createdBefore?: Object","95","      createdAfter: createdAfter.format(DATE_FORMAT),","96","      createdBefore: createdBefore && createdBefore.format(DATE_FORMAT)","100","  handlePeriodChange = (property \/*: string *\/) => (value \/*: string *\/) => {","105","      [property]: value","109","  handlePeriodClick = (period \/*: string *\/) => {","110","    this.resetTo({ createdInLast: period });","111","  };","113","  handleLeakPeriodClick = () => {","114","    this.resetTo({ sinceLeakPeriod: true });","115","  };","130","    const data = periods.map((startDate, index) => {","131","      const startMoment = moment(startDate);","132","      const nextStartMoment =","133","        index < periods.length - 1","134","          ? moment(periods[index + 1])","135","          : createdBefore ? moment(createdBefore) : undefined;","136","      const endMoment = nextStartMoment && nextStartMoment.clone().subtract(1, 'days');","139","        formatMeasure(stats[startDate], 'SHORT_INT') + '<br>' + startMoment.format('LL');","140","","141","      if (endMoment) {","142","        const isSameDay = endMoment.diff(startMoment, 'days') <= 1;","143","        if (!isSameDay) {","144","          tooltip += ' \u2013 ' + endMoment.format('LL');","145","        }","149","        createdAfter: startMoment,","150","        createdBefore: nextStartMoment,","151","        startMoment,","154","        y: stats[startDate]","179","    const m = moment(this.props.createdAt);","182","        {m.format('LLL')}","185","          ({m.fromNow()})","193","","198","          onChange={this.handlePeriodChange('createdAfter')}","200","          value={createdAfter ? moment(createdAfter).format('YYYY-MM-DD') : undefined}","204","          onChange={this.handlePeriodChange('createdBefore')}","206","          value={createdBefore ? moment(createdBefore).format('YYYY-MM-DD') : undefined}","212","  renderPrefefinedPeriods() {","261","          {this.renderPrefefinedPeriods()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityDateInput.js":[{"add":["21","import { intlShape } from 'react-intl';","23","import { formatterOption } from '..\/..\/..\/components\/intl\/DateFormatter';","39","  static contextTypes = {","40","    intl: intlShape","41","  };","42","","49","  formatDate = (date \/*: ?Date *\/) =>","50","    date ? this.context.intl.formatDate(date, formatterOption) : undefined;"],"delete":["21","import moment from 'moment';","44","  formatDate = (date \/*: ?Date *\/) => (date ? moment(date).format('YYYY-MM-DD') : null);"]}],"server\/sonar-web\/src\/main\/js\/components\/widgets\/barchart.js":[{"add":["23","import { isSameDay, toNotSoISOString } from '..\/..\/helpers\/dates';","53","      endDate: options.endDate ? new Date(options.endDate) : null","93","        .attr('data-period-start', d => toNotSoISOString(new Date(d.val)))","95","          const ending = i < data.length - 1 ? new Date(data[i + 1].val) : options.endDate;","97","            return toNotSoISOString(ending);","103","          const beginning = new Date(d.val);","104","          let ending = options.endDate;","105","          if (i < data.length - 1) {","106","            ending = new Date(data[i + 1].val);","107","            ending.setDate(ending.getDate() - 1);","108","          }","114","              (isSameDay(ending, beginning) ? '' : ' \u2013 ' + ending.format('LL'))"],"delete":["20","import moment from 'moment';","29","const DATE_FORMAT = 'YYYY-MM-DDTHH:mm:ssZZ';","30","","55","      endDate: options.endDate ? moment(options.endDate) : null","95","        .attr('data-period-start', d => moment(d.val).format(DATE_FORMAT))","97","          const ending = i < data.length - 1 ? moment(data[i + 1].val) : options.endDate;","99","            return ending.format(DATE_FORMAT);","105","          const beginning = moment(d.val);","106","          const ending =","107","            i < data.length - 1 ? moment(data[i + 1].val).subtract(1, 'days') : options.endDate;","109","            const isSameDay = ending.diff(beginning, 'days') <= 1;","114","              (isSameDay ? '' : ' \u2013 ' + ending.format('LL'))"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/Task.js":[{"add":["50","        <TaskDate date={task.submittedAt} baseDate={task.submittedAt} \/>","51","        <TaskDate date={task.startedAt} baseDate={task.submittedAt} \/>","52","        <TaskDate date={task.executedAt} baseDate={task.submittedAt} \/>"],"delete":["50","        <TaskDate date={task.submittedAt} baseDate={task.submittedAt} format=\"LTS\" \/>","51","        <TaskDate date={task.startedAt} baseDate={task.submittedAt} format=\"LTS\" \/>","52","        <TaskDate date={task.executedAt} baseDate={task.submittedAt} format=\"LTS\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionStagnant.tsx":[{"add":["20","import DateFormatter from '..\/..\/..\/components\/intl\/DateFormatter';","22","import { translate, translateWithParameters } from '..\/..\/..\/helpers\/l10n';","31","export default function EvolutionStagnant(props: Props) {","62","            <DateFormatter date={profile.rulesUpdatedAt} long={true}>","63","              {formattedDate =>","64","                <div className=\"note\">","65","                  {translateWithParameters(","66","                    'quality_profiles.x_updated_on_y',","67","                    profile.languageName,","68","                    formattedDate","69","                  )}","70","                <\/div>}","71","            <\/DateFormatter>"],"delete":["20","import * as moment from 'moment';","22","import { translate } from '..\/..\/..\/helpers\/l10n';","31","export default function EvolutionStagnan(props: Props) {","62","            <div className=\"note\">","63","              {profile.languageName}","64","              {', '}","65","              updated on {moment(profile.rulesUpdatedAt).format('LL')}","66","            <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.js":[{"add":["23","import { FormattedRelative } from 'react-intl';","24","import DateTimeFormatter from '..\/..\/..\/components\/intl\/DateTimeFormatter.tsx';","93","              <FormattedRelative value={project.leakPeriodDate}>","94","                {fromNow =>","95","                  <span className=\"project-card-leak-date pull-right\">","96","                    {translateWithParameters('projects.leak_period_x', fromNow)}","97","                  <\/span>}","98","              <\/FormattedRelative>}","100","              <DateTimeFormatter date={project.analysisDate}>","101","                {formattedDate =>","102","                  <span>","103","                    {translateWithParameters('projects.last_analysis_on_x', formattedDate)}","104","                  <\/span>}","105","              <\/DateTimeFormatter>}"],"delete":["22","import moment from 'moment';","92","              <span className=\"project-card-leak-date pull-right\">","93","                {translateWithParameters(","94","                  'projects.leak_period_x',","95","                  moment(project.leakPeriodDate).fromNow()","96","                )}","97","              <\/span>}","99","              <span>","100","                {translateWithParameters(","101","                  'projects.last_analysis_on_x',","102","                  moment(project.analysisDate).format('LLL')","103","                )}","104","              <\/span>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/__tests__\/__snapshots__\/Event-test.js.snap":[{"add":["11","<span","21","  <strong>","22","    test","23","  <\/strong>","24","<\/span>"],"delete":["11","<div","21","  <Tooltip","22","    placement=\"left\"","23","  >","24","    <strong>","25","      test","26","    <\/strong>","27","  <\/Tooltip>","28","<\/div>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.js.snap":[{"add":["17","            <DateTimeFormatter","18","              date=\"2017-03-01T09:36:01+0100\"","19","            \/>","31","            <DateTimeFormatter","32","              date=\"2017-03-01T09:36:01+0100\"","33","            \/>"],"delete":["17","            March 1, 2017 9:36 AM","29","            March 1, 2017 9:36 AM"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/ProjectActivityDateInput-test.js":[{"add":["20","import { shallowWithIntl } from '..\/..\/..\/..\/helpers\/testUtils';","25","    shallowWithIntl("],"delete":["20","import { shallow } from 'enzyme';","25","    shallow("]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionRules.tsx":[{"add":["25","import { toShortNotSoISOString } from '..\/..\/..\/helpers\/dates';","55","  periodStartDate: string;","57","","58","  constructor(props: Props) {","59","    super(props);","60","    this.state = {};","61","    const startDate = new Date();","62","    startDate.setFullYear(startDate.getFullYear() - 1);","63","    this.periodStartDate = toShortNotSoISOString(startDate);","64","  }","77","      available_since: this.periodStartDate,","100","      { available_since: this.periodStartDate },"],"delete":["21","import * as moment from 'moment';","30","const PERIOD_START_MOMENT = moment().subtract(1, 'year');","31","","58","  state: State = {};","71","      available_since: PERIOD_START_MOMENT.format('YYYY-MM-DD'),","94","      {","95","        available_since: PERIOD_START_MOMENT.format('YYYY-MM-DD')","96","      },"]}],"server\/sonar-web\/config\/webpack.config.js":[{"add":[],"delete":["34","      'moment',"]}],"server\/sonar-web\/src\/main\/js\/components\/intl\/DateTooltipFormatter.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/GraphsTooltips-test.js.snap":[{"add":["19","      <DateTimeFormatter","54","      <DateTimeFormatter","109","      <DateTimeFormatter"],"delete":["19","      <FormattedDate","21","        format=\"LL\"","55","      <FormattedDate","57","        format=\"LL\"","111","      <FormattedDate","113","        format=\"LL\""]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":[{"add":["4","  overlay={","5","    <div>","6","      <FormattedRelative","7","        updateInterval={10000}","8","        value={2017-05-16T11:50:02.000Z}","9","      \/>","10","      , ","11","      <DateFormatter","12","        date={2017-05-16T11:50:02.000Z}","13","        long={true}","14","      \/>","15","    <\/div>","16","  }"],"delete":["4","  overlay=\"a month ago, March 1, 2017 9:36 AM\""]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueChangelog-test.js.snap":[{"add":["29","  <Tooltip","30","    mouseEnterDelay={0.5}","31","    overlay={","32","      <DateTimeFormatter","33","        date=\"2017-03-01T09:36:01+0100\"","34","      \/>","35","    }","36","    placement=\"left\"","38","    <button","39","      className=\"button-link issue-action issue-action-with-options js-issue-show-changelog\"","40","      onClick={[Function]}","42","      <span","43","        className=\"issue-meta-label\"","44","      >","45","        <FormattedRelative","46","          updateInterval={10000}","47","          value=\"2017-03-01T09:36:01+0100\"","48","        \/>","49","      <\/span>","50","      <i","51","        className=\"icon-dropdown little-spacer-left\"","52","      \/>","53","    <\/button>","54","  <\/Tooltip>","76","  <Tooltip","77","    mouseEnterDelay={0.5}","78","    overlay={","79","      <DateTimeFormatter","80","        date=\"2017-03-01T09:36:01+0100\"","81","      \/>","82","    }","83","    placement=\"left\"","85","    <button","86","      className=\"button-link issue-action issue-action-with-options js-issue-show-changelog\"","87","      onClick={[Function]}","89","      <span","90","        className=\"issue-meta-label\"","91","      >","92","        <FormattedRelative","93","          updateInterval={10000}","94","          value=\"2017-03-01T09:36:01+0100\"","95","        \/>","96","      <\/span>","97","      <i","98","        className=\"icon-dropdown little-spacer-left\"","99","      \/>","100","    <\/button>","101","  <\/Tooltip>"],"delete":["29","  <button","30","    className=\"button-link issue-action issue-action-with-options js-issue-show-changelog\"","31","    onClick={[Function]}","32","    title=\"March 1, 2017 9:36 AM\"","34","    <span","35","      className=\"issue-meta-label\"","37","      a month ago","38","    <\/span>","39","    <i","40","      className=\"icon-dropdown little-spacer-left\"","41","    \/>","42","  <\/button>","64","  <button","65","    className=\"button-link issue-action issue-action-with-options js-issue-show-changelog\"","66","    onClick={[Function]}","67","    title=\"March 1, 2017 9:36 AM\"","69","    <span","70","      className=\"issue-meta-label\"","72","      a month ago","73","    <\/span>","74","    <i","75","      className=\"icon-dropdown little-spacer-left\"","76","    \/>","77","  <\/button>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/GraphsHistory.js":[{"add":["88","        date: new Date(analysis.date)"],"delete":["20","import moment from 'moment';","89","        date: moment(analysis.date).toDate()"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardLeak-test.js":[{"add":["40","  expect(card.find('.project-card-dates').find('FormattedRelative').getNodes()).toHaveLength(1);","41","  expect(card.find('.project-card-dates').find('DateTimeFormatter').getNodes()).toHaveLength(1);"],"delete":["37","jest.mock('moment', () => () => ({","38","  format: () => 'March 1, 2017 9:36 AM',","39","  fromNow: () => 'a month ago'","40","}));","41","","45","  expect(card.find('.project-card-dates').find('span').getNodes()).toHaveLength(2);"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeak-test.js.snap":[{"add":["37","      <FormattedRelative","38","        updateInterval={10000}","39","        value=\"2016-12-01\"","40","      \/>","41","      <DateTimeFormatter","42","        date=\"2017-01-01\"","43","      \/>"],"delete":["37","      <span","38","        className=\"project-card-leak-date pull-right\"","39","      >","40","        projects.leak_period_x.a month ago","41","      <\/span>","42","      <span>","43","        projects.last_analysis_on_x.March 1, 2017 9:36 AM","44","      <\/span>"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/DateInput.tsx":[{"add":["47","    if (nextProps.value != null && this.input) {","65","    if ($.fn && ($.fn as any).datepicker && this.input) {","66","      ($(this.input) as any).datepicker(opts);"],"delete":["47","    if (nextProps.value != null) {","65","    if ($.fn && ($.fn as any).datepicker) {","66","      ($(this.refs.input) as any).datepicker(opts);"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/LeakPeriodLegend-test.js":[{"add":[],"delete":["47","jest.mock('moment', () => () => ({","48","  format: () => 'March 1, 2017 9:36 AM',","49","  fromNow: () => 'a month ago',","50","  toDate: () => 'date'","51","}));","52",""]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/l10n-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.js":[{"add":["81","        <ComponentNavMeta","82","          {...this.props}","83","          {...this.state}","84","          version={this.props.component.version}","85","          analysisDate={this.props.component.analysisDate}","86","        \/>"],"delete":["26","import { TooltipsContainer } from '..\/..\/..\/..\/components\/mixins\/tooltips-mixin';","82","        <TooltipsContainer options={{ delay: { show: 0, hide: 2000 } }}>","83","          <ComponentNavMeta","84","            {...this.props}","85","            {...this.state}","86","            version={this.props.component.version}","87","            analysisDate={this.props.component.analysisDate}","88","          \/>","89","        <\/TooltipsContainer>"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":[{"add":["21","import { FormattedRelative } from 'react-intl';","100","          <FormattedRelative value={comment.createdAt} \/>"],"delete":["21","import moment from 'moment';","100","          ({moment(comment.createdAt).fromNow()})"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.js":[{"add":["125","            date: new Date(analysis.date),"],"delete":["22","import moment from 'moment';","126","            date: moment(analysis.date).toDate(),"]}],"server\/sonar-web\/src\/main\/js\/helpers\/dates.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/ApplicationLeakPeriodLegend-test.js.snap":[{"add":["30","        <DateTooltipFormatter","37","        <DateTooltipFormatter"],"delete":["30","        <FormattedDate","32","          format=\"LL\"","38","        <FormattedDate","40","          format=\"LL\""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/events\/__tests__\/__snapshots__\/Analysis-test.js.snap":[{"add":["10","      <DateTooltipFormatter","12","        placement=\"right\""],"delete":["10","      <FormattedDate","12","        format=\"LL\""]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/changelog\/__tests__\/Changelog-test.tsx":[{"add":["47","  expect(changelog.find('DateTimeFormatter')).toHaveLength(1);"],"delete":["47","  expect(changelog.text()).toContain('2016');"]}],"server\/sonar-web\/src\/main\/js\/components\/intl\/TimeTooltipFormatter.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/yarn.lock":[{"add":["67","\"@types\/react-intl@2.3.1\":","68","  version \"2.3.1\"","69","  resolved \"https:\/\/registry.yarnpkg.com\/@types\/react-intl\/-\/react-intl-2.3.1.tgz#d036dbe54f6ef29f2a150ed303a84f1693ddf905\"","70","","3439","intl-format-cache@^2.0.5:","3440","  version \"2.0.5\"","3441","  resolved \"https:\/\/registry.yarnpkg.com\/intl-format-cache\/-\/intl-format-cache-2.0.5.tgz#b484cefcb9353f374f25de389a3ceea1af18d7c9\"","3442","","3443","intl-messageformat-parser@1.2.0:","3444","  version \"1.2.0\"","3445","  resolved \"https:\/\/registry.yarnpkg.com\/intl-messageformat-parser\/-\/intl-messageformat-parser-1.2.0.tgz#5906b7f953ab7470e0dc8549097b648b991892ff\"","3446","","3447","intl-messageformat@1.3.0, intl-messageformat@^1.3.0:","3448","  version \"1.3.0\"","3449","  resolved \"https:\/\/registry.yarnpkg.com\/intl-messageformat\/-\/intl-messageformat-1.3.0.tgz#f7d926aded7a3ab19b2dc601efd54e99a4bd4eae\"","3450","  dependencies:","3451","    intl-messageformat-parser \"1.2.0\"","3452","","3453","intl-messageformat@^2.0.0:","3454","  version \"2.1.0\"","3455","  resolved \"https:\/\/registry.yarnpkg.com\/intl-messageformat\/-\/intl-messageformat-2.1.0.tgz#1c51da76f02a3f7b360654cdc51bbc4d3fa6c72c\"","3456","  dependencies:","3457","    intl-messageformat-parser \"1.2.0\"","3458","","3459","intl-relativeformat@2.0.0:","3460","  version \"2.0.0\"","3461","  resolved \"https:\/\/registry.yarnpkg.com\/intl-relativeformat\/-\/intl-relativeformat-2.0.0.tgz#d6ba9dc6c625819bc0abdb1d4e238138b7488f26\"","3462","  dependencies:","3463","    intl-messageformat \"^2.0.0\"","3464","","3465","intl-relativeformat@^1.3.0:","3466","  version \"1.3.0\"","3467","  resolved \"https:\/\/registry.yarnpkg.com\/intl-relativeformat\/-\/intl-relativeformat-1.3.0.tgz#893dc7076fccd380cf091a2300c380fa57ace45b\"","3468","  dependencies:","3469","    intl-messageformat \"1.3.0\"","3470","","3471","invariant@^2.0.0, invariant@^2.1.1, invariant@^2.2.0, invariant@^2.2.1, invariant@^2.2.2:","5707","react-intl@2.3.0:","5708","  version \"2.3.0\"","5709","  resolved \"https:\/\/registry.yarnpkg.com\/react-intl\/-\/react-intl-2.3.0.tgz#e1df6af5667fdf01cbe4aab20e137251e2ae5142\"","5710","  dependencies:","5711","    intl-format-cache \"^2.0.5\"","5712","    intl-messageformat \"^1.3.0\"","5713","    intl-relativeformat \"^1.3.0\"","5714","    invariant \"^2.1.1\"","5715",""],"delete":["3435","invariant@^2.0.0, invariant@^2.2.0, invariant@^2.2.1, invariant@^2.2.2:","4552","moment@2.18.1:","4553","  version \"2.18.1\"","4554","  resolved \"https:\/\/registry.yarnpkg.com\/moment\/-\/moment-2.18.1.tgz#c36193dd3ce1c2eed2adb7c802dbbc77a81b1c0f\"","4555",""]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/__tests__\/ProjectCard-test.js":[{"add":["51","  expect(output.find('.account-project-analysis FormattedRelative')).toHaveLength(1);"],"delete":["51","  expect(output.find('.account-project-analysis').text()).toContain(","52","    'my_account.projects.analyzed_x'","53","  );"]}]}},"901b8810a4d2c237395eced14e467be415218249":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/web\/SecurityServletFilter.java":"MODIFY","\/dev\/null":"DELETE","it\/it-tests\/src\/test\/java\/it\/serverSystem\/HttpHeadersTest.java":"ADD","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/config\/environment.rb":"MODIFY","it\/it-tests\/src\/test\/java\/it\/Category4Suite.java":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/web.xml":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/web\/SecurityServletFilter.java":[{"add":["58","    \/\/ WARNING, headers must be added before the doFilter, otherwise they won't be added when response is already committed (for instance when a WS is called)","71","","72","    chain.doFilter(httpRequest, httpResponse);"],"delete":["58","    chain.doFilter(httpRequest, httpResponse);"]}],"\/dev\/null":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/serverSystem\/HttpHeadersTest.java":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/config\/environment.rb":[{"add":[],"delete":["54","","55","#","56","# Put response headers on all HTTP calls. This is done by the Java SecurityServlerFilter,","57","# but for some reason Rack swallows the headers set on Java side.","58","# See middleware configuration below.","59","#","60","class SecurityHeaders","61","  def initialize(app)","62","    @app = app","63","  end","64","","65","  def call(env)","66","    status, headers, body = @app.call(env)","67","","68","    # Clickjacking protection","69","    # See https:\/\/www.owasp.org\/index.php\/Clickjacking_Protection_for_Java_EE","70","    headers['X-Frame-Options']='SAMEORIGIN'","71","","72","    # Cross-site scripting","73","    # See https:\/\/www.owasp.org\/index.php\/List_of_useful_HTTP_headers","74","    headers['X-XSS-Protection']='1; mode=block'","75","","76","    # MIME-sniffing","77","    # See https:\/\/www.owasp.org\/index.php\/List_of_useful_HTTP_headers","78","    headers['X-Content-Type-Options']='nosniff';","79","","80","    [status, headers, body]","81","  end","82","end","83","","84","","141","","142","  # Add security related headers","143","  config.middleware.use SecurityHeaders"]}],"it\/it-tests\/src\/test\/java\/it\/Category4Suite.java":[{"add":["31","import it.serverSystem.HttpHeadersTest;"],"delete":["31","import it.http.HttpHeadersTest;"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/web.xml":[{"add":["77","    <filter-name>SecurityFilter<\/filter-name>","78","    <url-pattern>\/*<\/url-pattern>","79","  <\/filter-mapping>","80","  <filter-mapping>"],"delete":["85","    <filter-name>SecurityFilter<\/filter-name>","86","    <url-pattern>\/*<\/url-pattern>","87","  <\/filter-mapping>","88","  <filter-mapping>"]}]}},"0020b89d4510cca8f283e684e301c5abf1e1b5c3":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/charts\/AdvancedTimeline.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/charts\/AdvancedTimeline.js":[{"add":["22","import { flatten, isEqual, sortBy, throttle, uniq } from 'lodash';","53","  \/\/ used to avoid same y ticks labels","54","  maxYTicksCount?: number,","88","    maxYTicksCount: 4,","306","    let ticks = hasTicks ? yScale.ticks(this.props.maxYTicksCount) : yScale.domain();","312","    \/\/ if there are duplicated ticks, that means 4 ticks are too much for this data","313","    \/\/ so let's just use the domain values (min and max)","314","    if (formatYTick) {","315","      const formattedTicks = ticks.map(tick => formatYTick(tick));","316","      if (ticks.length > uniq(formattedTicks).length) {","317","        ticks = yScale.domain();","318","      }","319","    }","320",""],"delete":["22","import { flatten, isEqual, sortBy, throttle } from 'lodash';","303","    const ticks = hasTicks ? yScale.ticks(4) : yScale.domain();"]}]}},"061b025defefdba99fcbd45518742b8685fceb4a":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginRepository.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/plugins\/ServerPluginRepositoryTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginRepository.java":[{"add":["318","","320","        if (!getPluginFile(info).exists()) {","321","          LOG.info(\"Plugin already uninstalled: {} [{}]\", info.getName(), info.getKey());","322","          continue;","323","        }","324","","327","        File masterFile = getPluginFile(info);","352","          if (requirement.getKey().equals(pluginKey)) {","361","  private File getPluginFile(PluginInfo info) {"],"delete":["321","        File masterFile = pluginFile(info);","346","          if (requirement.getKey().equals(pluginKey) && pluginFile(otherPlugin).exists()) {","355","  private File pluginFile(PluginInfo info) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/plugins\/ServerPluginRepositoryTest.java":[{"add":["272","  public void dont_uninstall_non_existing_files() throws IOException {","273","    File base = copyTestPluginTo(\"test-base-plugin\", fs.getInstalledPluginsDir());","274","    File extension = copyTestPluginTo(\"test-require-plugin\", fs.getInstalledPluginsDir());","275","    File uninstallDir = temp.newFolder(\"uninstallDir\");","276","","277","    underTest.start();","278","    assertThat(underTest.getPluginInfos()).hasSize(2);","279","    underTest.uninstall(\"testbase\", uninstallDir);","280","    assertThat(underTest.getPluginInfos()).hasSize(2);","281","","282","    underTest.uninstall(\"testbase\", uninstallDir);","283","    assertThat(base).doesNotExist();","284","    assertThat(extension).doesNotExist();","285","    assertThat(uninstallDir.list()).containsOnly(base.getName(), extension.getName());","286","  }","287","","288","  @Test"],"delete":[]}]}},"b2d86314802a630ce4007d82ffc3afcf8aa31dfc":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/OkHttpClientBuilder.java":"MODIFY","sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/HttpConnectorTest.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/OkHttpClientBuilder.java":[{"add":["61","  private static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";","163","        if (response.request().header(PROXY_AUTHORIZATION) != null) {","164","          \/\/ Give up, we've already attempted to authenticate.","165","          return null;","166","        }","169","          return response.request().newBuilder().header(PROXY_AUTHORIZATION, credential).build();"],"delete":["164","          return response.request().newBuilder().header(\"Proxy-Authorization\", credential).build();"]}],"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/HttpConnectorTest.java":[{"add":["33","import org.junit.After;","65","  @After","66","  public void stop() throws Exception {","67","    server.close();","68","  }","69","","148","    try (MockWebServer proxy = new MockWebServer()) {","149","      proxy.start();","151","      underTest = HttpConnector.newBuilder()","152","        .url(serverUrl)","153","        .proxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxy.getHostName(), proxy.getPort())))","154","        .proxyCredentials(\"theProxyLogin\", \"theProxyPassword\")","155","        .build();","157","      GetRequest request = new GetRequest(\"api\/issues\/search\");","158","      proxy.enqueue(new MockResponse().setResponseCode(407));","159","      proxy.enqueue(new MockResponse().setBody(\"OK!\"));","160","      underTest.call(request);","161","","162","      RecordedRequest recordedRequest = proxy.takeRequest();","163","      assertThat(recordedRequest.getHeader(\"Proxy-Authorization\")).isNull();","164","      recordedRequest = proxy.takeRequest();","165","      assertThat(recordedRequest.getHeader(\"Proxy-Authorization\")).isEqualTo(basic(\"theProxyLogin\", \"theProxyPassword\"));","166","    }","167","  }","168","","169","  @Test","170","  public void use_proxy_authentication_wrong_crendentials() throws Exception {","171","    try (MockWebServer proxy = new MockWebServer()) {","172","      proxy.start();","173","","174","      underTest = HttpConnector.newBuilder()","175","        .url(serverUrl)","176","        .proxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxy.getHostName(), proxy.getPort())))","177","        .proxyCredentials(\"theProxyLogin\", \"wrongPassword\")","178","        .build();","179","","180","      GetRequest request = new GetRequest(\"api\/issues\/search\");","181","      proxy.enqueue(new MockResponse().setResponseCode(407));","182","      proxy.enqueue(new MockResponse().setResponseCode(407));","183","      proxy.enqueue(new MockResponse().setResponseCode(407));","184","      underTest.call(request);","185","","186","      RecordedRequest recordedRequest = proxy.takeRequest();","187","      assertThat(recordedRequest.getHeader(\"Proxy-Authorization\")).isNull();","188","      recordedRequest = proxy.takeRequest();","189","      assertThat(recordedRequest.getHeader(\"Proxy-Authorization\")).isEqualTo(basic(\"theProxyLogin\", \"wrongPassword\"));","190","      assertThat(proxy.getRequestCount()).isEqualTo(2);","191","    }"],"delete":["142","    MockWebServer proxy = new MockWebServer();","143","    proxy.start();","144","    underTest = HttpConnector.newBuilder()","145","      .url(serverUrl)","146","      .proxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxy.getHostName(), proxy.getPort())))","147","      .proxyCredentials(\"theProxyLogin\", \"theProxyPassword\")","148","      .build();","150","    GetRequest request = new GetRequest(\"api\/issues\/search\");","151","    proxy.enqueue(new MockResponse().setResponseCode(407));","152","    proxy.enqueue(new MockResponse().setBody(\"OK!\"));","153","    underTest.call(request);","155","    RecordedRequest recordedRequest = proxy.takeRequest();","156","    assertThat(recordedRequest.getHeader(\"Proxy-Authorization\")).isNull();","157","    recordedRequest = proxy.takeRequest();","158","    assertThat(recordedRequest.getHeader(\"Proxy-Authorization\")).isEqualTo(basic(\"theProxyLogin\", \"theProxyPassword\"));"]}]}},"7253fe3904de24bbf5829c992c3592e018791951":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/DbVersion73.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/AddIndexOnOrganizationMembersTest.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/ChangelogAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/tester\/AbstractMockUserSession.java":"MODIFY","server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud\/with_authors_facet.json":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/source\/ws\/LinesActionTest.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/Sidebar.tsx":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/DoPrivileged.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/DbVersion73Test.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/LinesActionTest\/hide_scmAuthors.json":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud\/no_authors_facet.json":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchResponseFormat.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/explore\/ExploreIssues.tsx":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/LinesActionTest\/show_scmAuthors.json":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineSCM-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/TestUserSessionFactory.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/SafeModeUserSession.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud\/no_author_and_no_authors_facet.json":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionComponentsTest.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/SCMPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineSCM-test.tsx.snap":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/source\/ws\/LinesAction.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/AddIndexOnOrganizationMembersTest\/organization_members.sql":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/ChangelogActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ThreadLocalUserSession.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/AbstractUserSession.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchResponseData.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ServerUserSession.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTest\/author_is_hidden.json":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/tester\/AnonymousMockUserSession.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/AddIndexOnOrganizationMembers.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["32","import java.util.Optional;","39","import org.sonar.api.config.Configuration;","56","import org.sonar.db.organization.OrganizationDto;","63","import org.sonar.server.issue.index.IssueQuery;","64","import org.sonar.server.issue.index.IssueQueryFactory;","79","import static org.sonar.process.ProcessProperties.Property.SONARCLOUD_ENABLED;","85","import static org.sonar.server.issue.index.IssueQuery.SORT_BY_ASSIGNEE;","155","  private final boolean isOnSonarCloud;","157","  public SearchAction(UserSession userSession, IssueIndex issueIndex, IssueQueryFactory issueQueryFactory, SearchResponseLoader searchResponseLoader,","158","    SearchResponseFormat searchResponseFormat, Configuration config, System2 system2, DbClient dbClient) {","159","    this.isOnSonarCloud = config.getBoolean(SONARCLOUD_ENABLED.getKey()).orElse(false);","385","","439","          (!query.projectUuids().isEmpty()) || query.organizationUuid() != null, \"Facet(s) '%s' require to also filter by project or organization\",","446","    if (userSession.isLoggedIn()) {","447","      try (DbSession dbSession = dbClient.openSession(false)) {","448","        data.setUserOrganizationUuids(dbClient.organizationMemberDao().selectOrganizationUuidsByUser(dbSession, userSession.getUserId()));","449","      }","450","    }","547","  private SearchOptions createSearchOptionsFromRequest(SearchRequest request) {","550","","551","    List<String> facets = request.getFacets();","552","","553","    if (facets == null || facets.isEmpty()) {","554","      return options;","555","    }","556","","557","    List<String> requestedFacets = new ArrayList<>(facets.size());","558","    requestedFacets.addAll(facets);","559","","560","    if (isOnSonarCloud) {","561","      Optional<OrganizationDto> organizationDto = Optional.empty();","562","      String organizationKey = request.getOrganization();","563","      if (organizationKey != null) {","564","        try (DbSession dbSession = dbClient.openSession(false)) {","565","          organizationDto = dbClient.organizationDao().selectByKey(dbSession, organizationKey);","566","        }","567","      }","568","","569","      if (!organizationDto.isPresent() || !userSession.hasMembership(organizationDto.get())) {","570","        \/\/ In order to display the authors facet, the organization parameter must be set and the user","571","        \/\/ must be member of this organization","572","        requestedFacets.remove(PARAM_AUTHORS);","573","      }","574","    }","575","","576","    options.addFacets(requestedFacets);"],"delete":["58","import org.sonar.server.issue.index.IssueQuery;","59","import org.sonar.server.issue.index.IssueQueryFactory;","80","import static org.sonar.server.issue.index.IssueQuery.SORT_BY_ASSIGNEE;","152","  public SearchAction(UserSession userSession, IssueIndex issueIndex, IssueQueryFactory issueQueryFactory,","153","    SearchResponseLoader searchResponseLoader, SearchResponseFormat searchResponseFormat, System2 system2,","154","    DbClient dbClient) {","378","","380","","435","        (!query.projectUuids().isEmpty()) || query.organizationUuid() != null, \"Facet(s) '%s' require to also filter by project or organization\",","538","  private static SearchOptions createSearchOptionsFromRequest(SearchRequest request) {","541","    options.addFacets(request.getFacets());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["29","import org.sonar.api.config.internal.MapSettings;","101","    @Rule","102","    public UserSessionRule userSession = standalone();","103","    @Rule","104","    public DbTester db = DbTester.create();","105","    @Rule","106","    public EsTester es = EsTester.create();","107","    @Rule","108","    public ExpectedException expectedException = none();","110","    private DbClient dbClient = db.getDbClient();","111","    private DbSession session = db.getSession();","112","    private IssueIndex issueIndex = new IssueIndex(es.client(), System2.INSTANCE, userSession, new WebAuthorizationTypeSupport(userSession));","113","    private IssueIndexer issueIndexer = new IssueIndexer(es.client(), dbClient, new IssueIteratorFactory(dbClient));","114","    private IssueQueryFactory issueQueryFactory = new IssueQueryFactory(dbClient, Clock.systemUTC(), userSession);","115","    private IssueFieldsSetter issueFieldsSetter = new IssueFieldsSetter();","116","    private IssueWorkflow issueWorkflow = new IssueWorkflow(new FunctionExecutor(issueFieldsSetter), issueFieldsSetter);","117","    private SearchResponseLoader searchResponseLoader = new SearchResponseLoader(userSession, dbClient, new TransitionService(userSession, issueWorkflow));","118","    private Languages languages = new Languages();","119","    private SearchResponseFormat searchResponseFormat = new SearchResponseFormat(new Durations(), new WsResponseCommonFormat(languages), languages, new AvatarResolverImpl());","120","    private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat,","121","      new MapSettings().asConfig(), System2.INSTANCE, dbClient));","122","    private StartupIndexer permissionIndexer = new PermissionIndexer(dbClient, es.client(), issueIndexer);","251","    db.organizations().addMember(otherOrganization2, simon);","273","    userSession.logIn(simon);","278","  public void hide_author_if_not_member_of_organization() {","279","    ComponentDto project = insertComponent(ComponentTesting.newPublicProjectDto(otherOrganization2, \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","280","    indexPermissions();","281","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","282","    IssueDto issue = newDto(newExternalRule(), file, project)","283","      .setKee(\"82fd47d4-b650-4037-80bc-7b112bd4eac2\")","284","      .setEffort(10L)","285","      .setLine(42)","286","      .setChecksum(\"a227e508d6646b55a086ee11d63b21e9\")","287","      .setMessage(\"the message\")","288","      .setStatus(STATUS_RESOLVED)","289","      .setResolution(RESOLUTION_FIXED)","290","      .setSeverity(\"MAJOR\")","291","      .setAuthorLogin(\"John\")","292","      .setTags(asList(\"bug\", \"owasp\"))","293","      .setIssueCreationDate(DateUtils.parseDateTime(\"2014-09-04T00:00:00+0100\"))","294","      .setIssueUpdateDate(DateUtils.parseDateTime(\"2017-12-04T00:00:00+0100\"));","295","    db.issues().insertIssue(issue);","296","    indexIssues();","297","","298","    ws.newRequest().execute().assertJson(this.getClass(), \"author_is_hidden.json\");","299","  }","300","","301","  @Test","398","    userSession.logIn(john);","434","    userSession.logIn(john);","455","    userSession.logIn(\"john\");","479","    userSession.logIn(\"john\")","497","    userSession.logIn(\"john\")","581","    userSession.logIn(\"john\");","608","    userSession.logIn(john);","636","    userSession.logIn(john);","652","    userSession.logIn(user);","699","    userSession.logIn(john);","747","    userSession.logIn(john);","761","    userSession.logIn(poy);","832","    userSession.logIn(john);","954","    userSession.logIn(\"john\");","1008","    userSession.logIn().addProjectPermission(permission, project);"],"delete":["100","  @Rule","101","  public UserSessionRule userSessionRule = standalone();","102","  @Rule","103","  public DbTester db = DbTester.create();","104","  @Rule","105","  public EsTester es = EsTester.create();","106","  @Rule","107","  public ExpectedException expectedException = none();","109","  private DbClient dbClient = db.getDbClient();","110","  private DbSession session = db.getSession();","111","  private IssueIndex issueIndex = new IssueIndex(es.client(), System2.INSTANCE, userSessionRule, new WebAuthorizationTypeSupport(userSessionRule));","112","  private IssueIndexer issueIndexer = new IssueIndexer(es.client(), dbClient, new IssueIteratorFactory(dbClient));","113","  private IssueQueryFactory issueQueryFactory = new IssueQueryFactory(dbClient, Clock.systemUTC(), userSessionRule);","114","  private IssueFieldsSetter issueFieldsSetter = new IssueFieldsSetter();","115","  private IssueWorkflow issueWorkflow = new IssueWorkflow(new FunctionExecutor(issueFieldsSetter), issueFieldsSetter);","116","  private SearchResponseLoader searchResponseLoader = new SearchResponseLoader(userSessionRule, dbClient, new TransitionService(userSessionRule, issueWorkflow));","117","  private Languages languages = new Languages();","118","  private SearchResponseFormat searchResponseFormat = new SearchResponseFormat(new Durations(), new WsResponseCommonFormat(languages), languages, new AvatarResolverImpl());","119","  private WsActionTester ws = new WsActionTester(new SearchAction(userSessionRule, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat, System2.INSTANCE,","120","    dbClient));","121","  private StartupIndexer permissionIndexer = new PermissionIndexer(dbClient, es.client(), issueIndexer);","371","    userSessionRule.logIn(john);","407","    userSessionRule.logIn(john);","428","    userSessionRule.logIn(\"john\");","452","    userSessionRule.logIn(\"john\")","470","    userSessionRule.logIn(\"john\")","554","    userSessionRule.logIn(\"john\");","581","    userSessionRule.logIn(john);","609","    userSessionRule.logIn(john);","625","    userSessionRule.logIn(user);","672","    userSessionRule.logIn(john);","720","    userSessionRule.logIn(john);","734","    userSessionRule.logIn(poy);","805","    userSessionRule.logIn(john);","927","    userSessionRule.logIn(\"john\");","981","    userSessionRule.logIn().addProjectPermission(permission, project);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/DbVersion73.java":[{"add":["41","      .add(2212, \"Add index on ORGANIZATION_MEMBERS\", AddIndexOnOrganizationMembers.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/AddIndexOnOrganizationMembersTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/ChangelogAction.java":[{"add":["21","import com.google.common.base.Optional;","22","import com.google.common.collect.ImmutableList;","23","import com.google.common.collect.ImmutableMap;","43","import org.sonar.db.organization.OrganizationDto;","46","import org.sonar.server.user.UserSession;","50","import static com.google.common.base.Preconditions.checkState;","68","  private final UserSession userSession;","70","  public ChangelogAction(DbClient dbClient, IssueFinder issueFinder, AvatarResolver avatarFactory, UserSession userSession) {","74","    this.userSession = userSession;","163","      IssueDto issue = issueFinder.getByKey(dbSession, issueKey);","164","      if (isMember(dbSession, issue)) {","165","        this.changes = dbClient.issueChangeDao().selectChangelogByIssue(dbSession, issue.getKey());","166","        List<String> userUuids = changes.stream().filter(change -> change.userUuid() != null).map(FieldDiffs::userUuid).collect(MoreCollectors.toList());","167","        this.users = dbClient.userDao().selectByUuids(dbSession, userUuids).stream().collect(MoreCollectors.uniqueIndex(UserDto::getUuid));","168","        this.files = dbClient.componentDao().selectByUuids(dbSession, getFileUuids(changes)).stream().collect(MoreCollectors.uniqueIndex(ComponentDto::uuid, Function.identity()));","169","      } else {","170","        changes = ImmutableList.of();","171","        users = ImmutableMap.of();","172","        files = ImmutableMap.of();","173","      }","174","    }","175","","176","    private boolean isMember(DbSession dbSession, IssueDto issue) {","177","      Optional<ComponentDto> project = dbClient.componentDao().selectByUuid(dbSession, issue.getProjectUuid());","178","      checkState(project.isPresent(), \"Cannot find the project with uuid %s from issue.id %s\", issue.getProjectUuid(), issue.getId());","179","      java.util.Optional<OrganizationDto> organization = dbClient.organizationDao().selectByUuid(dbSession, project.get().getOrganizationUuid());","180","      checkState(organization.isPresent(), \"Cannot find the organization with uuid %s from issue.id %s\", project.get().getOrganizationUuid(), issue.getId());","181","      return userSession.hasMembership(organization.get());"],"delete":["63","  public ChangelogAction(DbClient dbClient, IssueFinder issueFinder, AvatarResolver avatarFactory) {","155","      IssueDto dbIssue = issueFinder.getByKey(dbSession, issueKey);","156","      this.changes = dbClient.issueChangeDao().selectChangelogByIssue(dbSession, dbIssue.getKey());","157","      List<String> userUuids = changes.stream().filter(change -> change.userUuid() != null).map(FieldDiffs::userUuid).collect(MoreCollectors.toList());","158","      this.users = dbClient.userDao().selectByUuids(dbSession, userUuids).stream().collect(MoreCollectors.uniqueIndex(UserDto::getUuid));","159","      this.files = dbClient.componentDao().selectByUuids(dbSession, getFileUuids(changes)).stream().collect(MoreCollectors.uniqueIndex(ComponentDto::uuid, Function.identity()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/tester\/AbstractMockUserSession.java":[{"add":["112","  protected boolean hasMembershipImpl(OrganizationDto organizationDto) {","113","    return organizationMembership.contains(organizationDto.getUuid());"],"delete":["112","  protected boolean hasMembershipImpl(OrganizationDto organization) {","113","    return organizationMembership.contains(organization.getUuid());"]}],"server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["27","CREATE INDEX \"IX_ORG_MEMBERS_ON_USER_ID\" ON \"ORGANIZATION_MEMBERS\" (\"USER_ID\");"],"delete":[]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud\/with_authors_facet.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/source\/ws\/LinesActionTest.java":[{"add":["32","import org.sonar.db.organization.OrganizationDto;","35","import org.sonar.db.user.UserDto;","44","import org.sonar.server.ws.WsTester.TestRequest;","62","  private ComponentDao componentDao = new ComponentDao();","63","  private ComponentDto privateProject;","64","  private OrganizationDto organization;","69","    HtmlSourceDecorator htmlSourceDecorator = mock(HtmlSourceDecorator.class);","70","    when(htmlSourceDecorator.getDecoratedSourceAsHtml(anyString(), anyString(), anyString())).then((Answer<String>)","71","      invocationOnMock -> \"<p>\" + invocationOnMock.getArguments()[0] + \"<\/p>\");","72","    SourceService sourceService = new SourceService(db.getDbClient(), htmlSourceDecorator);","75","    organization = db.organizations().insert();","76","    privateProject = ComponentTesting.newPrivateProjectDto(organization);","81","    ComponentDto file = insertFileWithData(FileSourceTesting.newFakeData(3).build(), privateProject);","82","    setUserWithValidPermission(file);","84","    TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"uuid\", file.uuid());","90","    ComponentDto file = insertFile(privateProject);","91","    setUserWithValidPermission(file);","94","    wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"uuid\", file.uuid()).execute();","99","    ComponentDto file = insertFileWithData(FileSourceTesting.newFakeData(3).build(), privateProject);","100","    setUserWithValidPermission(file);","102","    wsTester","104","      .setParam(\"uuid\", file.uuid())","106","      .setParam(\"to\", \"3\")","107","      .execute()","108","      .assertJson(getClass(), \"show_paginated_lines.json\");","123","    userSession.logIn(\"login\")","124","      .addMembership(db.getDefaultOrganization())","125","      .addProjectPermission(UserRole.CODEVIEWER, project, file);","126","","127","    wsTester.newGetRequest(\"api\/sources\", \"lines\")","129","      .setParam(\"branch\", file.getBranch())","130","      .execute()","131","      .assertJson(getClass(), \"show_source.json\");","146","    userSession.logIn(\"login\")","147","      .addMembership(db.getDefaultOrganization())","148","      .addProjectPermission(UserRole.CODEVIEWER, project, file);","149","","150","    wsTester.newGetRequest(\"api\/sources\", \"lines\")","152","      .setParam(\"pullRequest\", file.getPullRequest())","153","      .execute()","154","      .assertJson(getClass(), \"show_source.json\");","162","    TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\");","171","    TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"key\", \"Foo.java\");","180","    TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"uuid\", \"ABCD\");","186","    ComponentDto file = newFileDto(privateProject).setDbKey(\"file-key\").setEnabled(false);","187","    db.components().insertComponents(privateProject, file);","188","    setUserWithValidPermission(file);","193","    TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"key\", \"file-key\");","199","    ComponentDto file = insertFileWithData(FileSourceTesting.newFakeData(1).build(), privateProject);","204","      .setParam(\"uuid\", file.uuid())","210","    ComponentDto file = insertFileWithData(FileSourceTesting.newFakeData(1).build(), privateProject);","211","    setUserWithValidPermission(file);","213","    wsTester","215","      .setParam(\"uuid\", file.uuid())","216","      .execute()","217","      .assertJson(getClass(), \"display_deprecated_fields.json\");","223","    ComponentDto file = insertFileWithData(dataBuilder.addLines(newLineBuilder()","232","      .setDeprecatedItCoveredConditions(3)).build(), privateProject);","233","    setUserWithValidPermission(file);","235","    wsTester","237","      .setParam(\"uuid\", file.uuid())","238","      .execute()","239","      .assertJson(getClass(), \"convert_deprecated_data.json\");","245","    ComponentDto file = insertFileWithData(dataBuilder.addLines(newLineBuilder()","251","      .setDeprecatedItCoveredConditions(3)).build(), privateProject);","252","    setUserWithValidPermission(file);","254","    TestRequest request = wsTester","256","      .setParam(\"uuid\", file.uuid());","264","    ComponentDto file = insertFileWithData(dataBuilder.addLines(newLineBuilder()","267","      .setDeprecatedItCoveredConditions(3)).build(), privateProject);","268","    setUserWithValidPermission(file);","270","    TestRequest request = wsTester","272","      .setParam(\"uuid\", file.uuid());","337","  @Test","338","  public void hide_scmAuthors_if_not_member_of_organization() throws Exception {","339","    OrganizationDto org = db.organizations().insert();","340","    ComponentDto publicProject = db.components().insertPublicProject(org);","341","    userSession.registerComponents(publicProject);","342","","343","    DbFileSources.Data data = DbFileSources.Data.newBuilder()","344","      .addLines(newLineBuilder().setScmAuthor(\"isaac@asimov.com\"))","345","      .build();","346","","347","    ComponentDto file = insertFileWithData(data, publicProject);","348","","349","    wsTester.newGetRequest(\"api\/sources\", \"lines\")","350","      .setParam(\"uuid\", file.uuid())","351","      .execute()","352","      .assertJson(getClass(), \"hide_scmAuthors.json\");","353","  }","354","","355","  @Test","356","  public void show_scmAuthors_if_member_of_organization() throws Exception {","357","    OrganizationDto org = db.organizations().insert();","358","    ComponentDto publicProject = db.components().insertPublicProject(org);","359","    UserDto user = db.users().insertUser();","360","    userSession.logIn(user)","361","      .registerComponents(publicProject)","362","      .addMembership(org);","363","","364","    DbFileSources.Data data = DbFileSources.Data.newBuilder()","365","      .addLines(newLineBuilder().setScmAuthor(\"isaac@asimov.com\"))","366","      .build();","367","","368","    ComponentDto file = insertFileWithData(data, publicProject);","369","","370","    wsTester.newGetRequest(\"api\/sources\", \"lines\")","371","      .setParam(\"uuid\", file.uuid())","372","      .execute()","373","      .assertJson(getClass(), \"show_scmAuthors.json\");","374","  }","375","","376","  private ComponentDto insertFileWithData(DbFileSources.Data fileData, ComponentDto project) {","377","    ComponentDto file = insertFile(project);","379","      .setProjectUuid(project.projectUuid())","380","      .setFileUuid(file.uuid())","383","    return file;","386","  private void setUserWithValidPermission(ComponentDto file) {","387","    userSession.logIn(\"login\")","388","      .addProjectPermission(UserRole.CODEVIEWER, privateProject, file)","389","      .addMembership(organization);","392","  private ComponentDto insertFile(ComponentDto project) {","393","    ComponentDto file = newFileDto(project);","394","    componentDao.insert(db.getSession(), file);","396","    return file;"],"delete":["21","import java.io.IOException;","26","import org.mockito.invocation.InvocationOnMock;","54","  private static final String PROJECT_UUID = \"abcd\";","55","  private static final String FILE_UUID = \"efgh\";","56","  private static final String FILE_KEY = \"Foo.java\";","57","","60","","63","","67","  private SourceService sourceService;","68","  private HtmlSourceDecorator htmlSourceDecorator;","69","  private ComponentDao componentDao;","70","","71","  private ComponentDto project;","72","  private ComponentDto file;","73","","78","    htmlSourceDecorator = mock(HtmlSourceDecorator.class);","79","    when(htmlSourceDecorator.getDecoratedSourceAsHtml(anyString(), anyString(), anyString())).then(new Answer<String>() {","80","      @Override","81","      public String answer(InvocationOnMock invocationOnMock) {","82","        return \"<p>\" + invocationOnMock.getArguments()[0] + \"<\/p>\";","83","      }","84","    });","85","    sourceService = new SourceService(db.getDbClient(), htmlSourceDecorator);","86","    componentDao = new ComponentDao();","89","    project = ComponentTesting.newPrivateProjectDto(db.organizations().insert(), PROJECT_UUID);","90","    file = newFileDto(project, null, FILE_UUID).setDbKey(FILE_KEY);","95","    insertFileWithData(FileSourceTesting.newFakeData(3).build());","96","    setUserWithValidPermission();","98","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"uuid\", FILE_UUID);","104","    setUserWithValidPermission();","105","    insertFile();","108","    wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"uuid\", FILE_UUID).execute();","113","    setUserWithValidPermission();","114","    insertFileWithData(FileSourceTesting.newFakeData(3).build());","116","    WsTester.TestRequest request = wsTester","118","      .setParam(\"uuid\", FILE_UUID)","120","      .setParam(\"to\", \"3\");","121","    request.execute().assertJson(getClass(), \"show_paginated_lines.json\");","135","    userSession.logIn(\"login\").addProjectPermission(UserRole.CODEVIEWER, project, file);","137","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\")","139","      .setParam(\"branch\", file.getBranch());","140","","141","    request.execute().assertJson(getClass(), \"show_source.json\");","155","    userSession.logIn(\"login\").addProjectPermission(UserRole.CODEVIEWER, project, file);","157","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\")","159","      .setParam(\"pullRequest\", file.getPullRequest());","160","","161","    request.execute().assertJson(getClass(), \"show_source.json\");","169","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\");","178","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"key\", FILE_KEY);","187","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"uuid\", \"ABCD\");","193","    ComponentDto file = newFileDto(project).setDbKey(\"file-key\").setEnabled(false);","194","    db.components().insertComponents(project, file);","195","    setUserWithValidPermission();","200","    WsTester.TestRequest request = wsTester.newGetRequest(\"api\/sources\", \"lines\").setParam(\"key\", \"file-key\");","206","    insertFileWithData(FileSourceTesting.newFakeData(1).build());","211","      .setParam(\"uuid\", FILE_UUID)","217","    insertFileWithData(FileSourceTesting.newFakeData(1).build());","218","    setUserWithValidPermission();","220","    WsTester.TestRequest request = wsTester","222","      .setParam(\"uuid\", FILE_UUID);","223","","224","    request.execute().assertJson(getClass(), \"display_deprecated_fields.json\");","230","    insertFileWithData(dataBuilder.addLines(newLineBuilder()","239","      .setDeprecatedItCoveredConditions(3)).build());","240","    setUserWithValidPermission();","242","    WsTester.TestRequest request = wsTester","244","      .setParam(\"uuid\", FILE_UUID);","245","","246","    request.execute().assertJson(getClass(), \"convert_deprecated_data.json\");","252","    insertFileWithData(dataBuilder.addLines(newLineBuilder()","258","      .setDeprecatedItCoveredConditions(3)).build());","259","    setUserWithValidPermission();","261","    WsTester.TestRequest request = wsTester","263","      .setParam(\"uuid\", FILE_UUID);","271","    insertFileWithData(dataBuilder.addLines(newLineBuilder()","274","      .setDeprecatedItCoveredConditions(3)).build());","275","    setUserWithValidPermission();","277","    WsTester.TestRequest request = wsTester","279","      .setParam(\"uuid\", FILE_UUID);","344","  private void insertFileWithData(DbFileSources.Data fileData) throws IOException {","345","    insertFile();","347","      .setProjectUuid(PROJECT_UUID)","348","      .setFileUuid(FILE_UUID)","353","  private void setUserWithValidPermission() {","354","    userSession.logIn(\"login\").addProjectPermission(UserRole.CODEVIEWER, project, file);","357","  private void insertFile() {","358","    componentDao.insert(db.getSession(), project, file);"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/Sidebar.tsx":[{"add":["48","  hideAuthorFacet?: boolean;","65","    const { component, facets, hideAuthorFacet, openFacets, query } = this.props;","72","    const displayAuthorFacet = !hideAuthorFacet && (!component || component.qualifier !== 'DEV');"],"delete":["64","    const { component, facets, openFacets, query } = this.props;","71","    const displayAuthorFacet = !component || component.qualifier !== 'DEV';"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/DoPrivileged.java":[{"add":["126","      public boolean hasMembershipImpl(OrganizationDto organizationDto) {"],"delete":["126","      public boolean hasMembershipImpl(OrganizationDto organization) {"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/DbVersion73Test.java":[{"add":["37","    verifyMigrationCount(underTest, 13);"],"delete":["37","    verifyMigrationCount(underTest, 12);"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/LinesActionTest\/hide_scmAuthors.json":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":[{"add":["160","  if (!facets) {","161","    return {};","162","  }","163",""],"delete":[]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud\/no_authors_facet.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchResponseFormat.java":[{"add":["84","  public SearchWsResponse formatSearch(Set<SearchAdditionalField> fields, SearchResponseData data, Paging paging, @Nullable Facets facets) {","196","","197","    \/\/ Filter author only if user is member of the organization","198","    if (data.getUserOrganizationUuids().contains(component.getOrganizationUuid())) {","199","      issueBuilder.setAuthor(nullToEmpty(dto.getAuthorLogin()));","200","    }"],"delete":["84","  public SearchWsResponse formatSearch(Set<SearchAdditionalField> fields, SearchResponseData data,","85","    Paging paging, @Nullable Facets facets) {","197","    issueBuilder.setAuthor(nullToEmpty(dto.getAuthorLogin()));"]}],"server\/sonar-web\/src\/main\/js\/apps\/explore\/ExploreIssues.tsx":[{"add":["28","  return <AppContainer hideAuthorFacet={true} myIssues={false} {...props} \/>;"],"delete":["28","  return <AppContainer myIssues={false} {...props} \/>;"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/LinesActionTest\/show_scmAuthors.json":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.tsx":[{"add":["24","import { CurrentUser, Organization } from '..\/..\/..\/app\/types';","26","import {","27","  getCurrentUser,","28","  areThereCustomOrganizations,","29","  getMyOrganizations","30","} from '..\/..\/..\/store\/rootReducer';","38","  userOrganizations: Organization[];","42","  currentUser: getCurrentUser(state),","43","  userOrganizations: getMyOrganizations(state)","91","  hideAuthorFacet?: boolean;"],"delete":["24","import { CurrentUser } from '..\/..\/..\/app\/types';","26","import { getCurrentUser, areThereCustomOrganizations } from '..\/..\/..\/store\/rootReducer';","37","  currentUser: getCurrentUser(state)"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineSCM-test.tsx":[{"add":["34","  const line = { line: 3, scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","42","  const line = { line: 3, scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","43","  const previousLine = { line: 2, scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","44","  const wrapper = shallow(","45","    <LineSCM line={line} onPopupToggle={jest.fn()} popupOpen={false} previousLine={previousLine} \/>","46","  );","47","  expect(wrapper).toMatchSnapshot();","48","});","49","","50","it('renders ellipsis when no author info', () => {","51","  const line = { line: 3, scmRevision: 'foo', scmDate: '2017-01-01' };","52","  const previousLine = { line: 2, scmRevision: 'bar', scmDate: '2017-01-01' };"],"delete":["34","  const line = { line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' };","42","  const line = { line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' };","43","  const previousLine = { line: 2, scmAuthor: 'foo', scmDate: '2017-01-01' };"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":[{"add":["51","      <div className=\"source-line-scm-inner\" data-author={line.scmAuthor || '\u2026'} \/>","78","  if (p != null && s.scmRevision != null && p.scmRevision != null) {","79","    changed = s.scmRevision !== p.scmRevision || s.scmDate !== p.scmDate;"],"delete":["51","      <div className=\"source-line-scm-inner\" data-author={line.scmAuthor} \/>","78","  if (p != null && s.scmAuthor != null && p.scmAuthor != null) {","79","    changed = s.scmAuthor !== p.scmAuthor || s.scmDate !== p.scmDate;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/TestUserSessionFactory.java":[{"add":["120","    public boolean hasMembershipImpl(OrganizationDto organizationDto) {"],"delete":["120","    public boolean hasMembershipImpl(OrganizationDto organization) {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/SafeModeUserSession.java":[{"add":["49","  @Override","50","  protected boolean hasMembershipImpl(OrganizationDto organizationDto) {","51","    return false;","52","  }","53",""],"delete":["92","","93","  @Override","94","  public boolean hasMembershipImpl(OrganizationDto organization) {","95","    return false;","96","  }"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud\/no_author_and_no_authors_facet.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionComponentsTest.java":[{"add":["27","import org.sonar.api.config.internal.MapSettings;","40","import org.sonar.db.user.UserDto;","47","import org.sonar.server.issue.index.IssueQueryFactory;","109","  private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat,","110","    new MapSettings().asConfig(), System2.INSTANCE, dbClient));","648","  public void search_by_author() {","657","    UserDto user = db.users().insertUser();","658","    db.organizations().addMember(db.getDefaultOrganization(), user);","659","    userSession.logIn(user).addMembership(db.getDefaultOrganization());","660",""],"delete":["41","import org.sonar.server.issue.index.IssueQueryFactory;","107","  private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat, System2.INSTANCE,","108","    dbClient));","646","  public void search_by_author() throws Exception {"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["54","import {","55","  Component,","56","  CurrentUser,","57","  Issue,","58","  Paging,","59","  BranchLike,","60","  Organization","61","} from '..\/..\/..\/app\/types';","101","  hideAuthorFacet?: boolean;","106","  userOrganizations: Organization[];","418","    const { component } = this.props;","429","    const organizationKey =","430","      (component && component.organization) ||","431","      (this.props.organization && this.props.organization.key);","432","","439","      organization: organizationKey,","875","    const { component, currentUser, userOrganizations } = this.props;","878","    const organizationKey =","879","      (component && component.organization) ||","880","      (this.props.organization && this.props.organization.key);","881","","882","    const userOrganization =","883","      !isSonarCloud() ||","884","      userOrganizations.find(o => {","885","        return o.key === organizationKey;","886","      });","887","    const hideAuthorFacet =","888","      this.props.hideAuthorFacet || (isSonarCloud() && this.props.myIssues) || !userOrganization;","889","","903","          hideAuthorFacet={hideAuthorFacet}"],"delete":["54","import { Component, CurrentUser, Issue, Paging, BranchLike } from '..\/..\/..\/app\/types';","409","    const { component, organization } = this.props;","426","      organization: organization && organization.key,","862","    const { component, currentUser } = this.props;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/SCMPopup.tsx":[{"add":["20","import * as classNames from 'classnames';","31","  const hasAuthor = line.scmAuthor !== '';","35","        {hasAuthor && <div>{line.scmAuthor}<\/div>}","37","          <div className={classNames({ 'spacer-top': hasAuthor })}>"],"delete":["33","        <div>{line.scmAuthor}<\/div>","35","          <div className=\"spacer-top\">"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineSCM-test.tsx.snap":[{"add":["20","            \"scmRevision\": \"foo\",","78","            \"scmRevision\": \"foo\",","91","","92","exports[`renders ellipsis when no author info 1`] = `","93","<td","94","  className=\"source-meta source-line-scm\"","95","  data-line-number={3}","96","  onClick={[Function]}","97","  role=\"button\"","98","  tabIndex={0}","99",">","100","  <Toggler","101","    onRequestClose={[Function]}","102","    open={false}","103","    overlay={","104","      <SCMPopup","105","        line={","106","          Object {","107","            \"line\": 3,","108","            \"scmDate\": \"2017-01-01\",","109","            \"scmRevision\": \"foo\",","110","          }","111","        }","112","      \/>","113","    }","114","  >","115","    <div","116","      className=\"source-line-scm-inner\"","117","      data-author=\"\u2026\"","118","    \/>","119","  <\/Toggler>","120","<\/td>","121","`;"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/source\/ws\/LinesAction.java":[{"add":["35","import org.sonar.db.organization.OrganizationDto;","147","        writeSource(lines, json, isMemberOfOrganization(dbSession, file));","153","  private boolean isMemberOfOrganization(DbSession dbSession, ComponentDto file) {","154","    OrganizationDto organizationDto = dbClient.organizationDao().selectByUuid(dbSession, file.getOrganizationUuid())","155","      .orElseThrow(() -> new IllegalStateException(String.format(\"Organization with uuid '%s' not found\", file.getOrganizationUuid())));","156","    return !userSession.hasMembership(organizationDto);","157","  }","158","","174","  private void writeSource(Iterable<DbFileSources.Line> lines, JsonWriter json, boolean filterScmAuthors) {","181","      if (!filterScmAuthors) {","182","        json.prop(\"scmAuthor\", line.getScmAuthor());","183","      }"],"delete":["140","","147","        writeSource(lines, json);","168","  private void writeSource(Iterable<DbFileSources.Line> lines, JsonWriter json) {","174","        .prop(\"scmAuthor\", line.getScmAuthor())"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/AddIndexOnOrganizationMembersTest\/organization_members.sql":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/ChangelogActionTest.java":[{"add":["34","import org.sonar.db.organization.OrganizationDto;","70","  private WsActionTester tester = new WsActionTester(new ChangelogAction(db.getDbClient(), new IssueFinder(db.getDbClient(), userSession), new AvatarResolverImpl(), userSession));","82","    userSession.logIn(\"john\")","83","      .addMembership(db.getDefaultOrganization())","84","      .addProjectPermission(USER, project, file);","98","  public void return_empty_changelog_when_not_member() {","99","    UserDto user = insertUser();","100","    IssueDto issueDto = db.issues().insertIssue(newIssue());","101","    userSession.logIn(\"john\")","102","      .addProjectPermission(USER, project, file);","103","    db.issues().insertFieldDiffs(issueDto, new FieldDiffs().setUserUuid(user.getUuid()).setDiff(\"severity\", \"MAJOR\", \"BLOCKER\").setCreationDate(new Date()));","104","","105","    ChangelogWsResponse result = call(issueDto.getKey());","106","","107","    assertThat(result.getChangelogList()).hasSize(0);","108","  }","109","","110","  @Test","113","    OrganizationDto org = db.organizations().insert();","114","    ComponentDto project = db.components().insertPrivateProject(org);","118","    userSession.logIn(\"john\")","119","      .addMembership(org)","120","      .addProjectPermission(USER, project, file);","135","    userSession.logIn(\"john\")","136","      .addMembership(db.getDefaultOrganization())","137","      .addProjectPermission(USER, project, file);","151","    userSession.logIn(\"john\")","152","      .addMembership(db.getDefaultOrganization())","153","      .addProjectPermission(USER, project, file);","167","    userSession.logIn(\"john\")","168","      .addMembership(db.getDefaultOrganization())","169","      .addProjectPermission(USER, project, file);","184","    userSession.logIn(\"john\")","185","      .addMembership(db.getDefaultOrganization())","186","      .addProjectPermission(USER, project, file);","202","    userSession.logIn(\"john\")","203","      .addMembership(db.getDefaultOrganization())","204","      .addProjectPermission(USER, project, file);","220","    userSession.logIn(\"john\")","221","      .addMembership(db.getDefaultOrganization())","222","      .addProjectPermission(USER, project, file);","235","    userSession.logIn(\"john\")","236","      .addMembership(db.getDefaultOrganization())","237","      .addProjectPermission(USER, project, file);","250","    userSession.logIn(\"john\")","251","      .addMembership(db.getDefaultOrganization())","252","      .addProjectPermission(USER, project, file);","266","    userSession.logIn(\"john\")","267","      .addMembership(db.getDefaultOrganization())","268","      .addProjectPermission(USER, project, file);","300","    userSession.logIn(\"john\")","301","      .addMembership(db.getDefaultOrganization())","302","      .addProjectPermission(USER, project, file);"],"delete":["69","  private WsActionTester tester = new WsActionTester(new ChangelogAction(db.getDbClient(), new IssueFinder(db.getDbClient(), userSession), new AvatarResolverImpl()));","81","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","97","    ComponentDto project = db.components().insertPrivateProject(db.organizations().insert());","101","    userSession.logIn(\"john\").addProjectPermission(USER, project, file1, file2);","116","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","130","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","144","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","159","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","175","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","191","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","204","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","217","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","231","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);","263","    userSession.logIn(\"john\").addProjectPermission(USER, project, file);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ThreadLocalUserSession.java":[{"add":["168","  public boolean hasMembership(OrganizationDto organizationDto) {","169","    return get().hasMembership(organizationDto);"],"delete":["168","  public boolean hasMembership(OrganizationDto organization) {","169","    return get().hasMembership(organization);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/AbstractUserSession.java":[{"add":["77","  public final boolean hasMembership(OrganizationDto organizationDto) {","78","    return isRoot() || hasMembershipImpl(organizationDto);","81","  protected abstract boolean hasMembershipImpl(OrganizationDto organizationDto);"],"delete":["77","  public final boolean hasMembership(OrganizationDto organization) {","78","    return isRoot() || hasMembershipImpl(organization);","81","  protected abstract boolean hasMembershipImpl(OrganizationDto organization);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchResponseData.java":[{"add":["59","  private final Set<String> userOrganizationUuids = new HashSet<>();","176","  public void setUserOrganizationUuids(Set<String> organizationUuids) {","177","    this.userOrganizationUuids.addAll(organizationUuids);","178","  }","179","","180","  public Set<String> getUserOrganizationUuids() {","181","    return this.userOrganizationUuids;","182","  }","183",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ServerUserSession.java":[{"add":["230","  public boolean hasMembershipImpl(OrganizationDto organizationDto) {","231","    return isMember(organizationDto.getUuid());","234","  private boolean isMember(String organizationUuid) {","241",""],"delete":["230","  public boolean hasMembershipImpl(OrganizationDto organization) {","231","    return isMember(organization);","234","  private boolean isMember(OrganizationDto organization) {","241","    String organizationUuid = organization.getUuid();"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/issue\/ws\/SearchActionTest\/author_is_hidden.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/tester\/AnonymousMockUserSession.java":[{"add":["67","  public boolean hasMembershipImpl(OrganizationDto organizationDto) {"],"delete":["67","  public boolean hasMembershipImpl(OrganizationDto organization) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTestOnSonarCloud.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v73\/AddIndexOnOrganizationMembers.java":[{"add":[],"delete":[]}]}},"97a815175c48fbd63bebb607ff4a4a6d12e5164c":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleCreator.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/UpdateActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/UpdateAction.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreator.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/ShowAction.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/rule\/RuleDaoTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/rule\/DefaultRuleFinder.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/rule\/RuleDao.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleCreator.java":[{"add":["76","    RuleDto templateRule = dbClient.ruleDao().selectByKey(dbSession, defaultOrganization.getUuid(), templateKey)"],"delete":["76","    RuleDto templateRule = dbClient.ruleDao().selectByKey(dbSession, defaultOrganization, templateKey)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":[{"add":["666","    RuleDto reloaded = dbClient.ruleDao().selectByKey(db.getSession(), defaultOrganization.getUuid(), rule.getKey()).get();","679","    RuleDto reloaded = dbClient.ruleDao().selectByKey(db.getSession(), defaultOrganization.getUuid(), rule.getKey()).get();","692","    RuleDto reloaded = dbClient.ruleDao().selectByKey(db.getSession(), defaultOrganization.getUuid(), rule.getKey()).get();"],"delete":["666","    RuleDto reloaded = dbClient.ruleDao().selectByKey(db.getSession(), defaultOrganization, rule.getKey()).get();","679","    RuleDto reloaded = dbClient.ruleDao().selectByKey(db.getSession(), defaultOrganization, rule.getKey()).get();","692","    RuleDto reloaded = dbClient.ruleDao().selectByKey(db.getSession(), defaultOrganization, rule.getKey()).get();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/UpdateActionTest.java":[{"add":["199","    RuleMetadataDto metadataOfSpecificOrg = db.getDbClient().ruleDao().selectMetadataByKey(db.getSession(), rule.getKey(), organization.getUuid())","240","    RuleMetadataDto metadataOfSpecificOrg = db.getDbClient().ruleDao().selectMetadataByKey(db.getSession(), rule.getKey(), organization.getUuid())","269","    RuleMetadataDto metadataOfSpecificOrg = db.getDbClient().ruleDao().selectMetadataByKey(db.getSession(), rule.getKey(), organization.getUuid()).get();"],"delete":["199","    RuleMetadataDto metadataOfSpecificOrg = db.getDbClient().ruleDao().selectMetadataByKey(db.getSession(), rule.getKey(), organization)","240","    RuleMetadataDto metadataOfSpecificOrg = db.getDbClient().ruleDao().selectMetadataByKey(db.getSession(), rule.getKey(), organization)","269","    RuleMetadataDto metadataOfSpecificOrg = db.getDbClient().ruleDao().selectMetadataByKey(db.getSession(), rule.getKey(), organization).get();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/UpdateAction.java":[{"add":["209","    RuleDto rule = dbClient.ruleDao().selectByKey(dbSession, organization.getUuid(), key)","254","    RuleDto rule = dbClient.ruleDao().selectByKey(dbSession, organization.getUuid(), key)"],"delete":["209","    RuleDto rule = dbClient.ruleDao().selectByKey(dbSession, organization, key)","254","    RuleDto rule = dbClient.ruleDao().selectByKey(dbSession, organization, key)"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreator.java":[{"add":["60","    Optional<RuleDto> existingRuleDtoOpt = dao.selectByKey(dbSession, organizationDto.getUuid(), adHoc.getKey());"],"delete":["60","    Optional<RuleDto> existingRuleDtoOpt = dao.selectByKey(dbSession, organizationDto, adHoc.getKey());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/ShowAction.java":[{"add":["106","      RuleDto rule = dbClient.ruleDao().selectByKey(dbSession, organization.getUuid(), key)"],"delete":["106","      RuleDto rule = dbClient.ruleDao().selectByKey(dbSession, organization, key)"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/rule\/RuleDaoTest.java":[{"add":["86","    assertThat(underTest.selectByKey(db.getSession(), organization.getUuid(), RuleKey.of(\"foo\", \"bar\")))","88","    RuleDto rule = underTest.selectByKey(db.getSession(), organization.getUuid(), ruleDefinition.getKey()).get();","97","    assertThat(underTest.selectByKey(db.getSession(), OrganizationTesting.newOrganizationDto().getUuid(), ruleDefinition.getKey()))","106","    RuleDto rule = underTest.selectByKey(db.getSession(), organization.getUuid(), ruleDefinition.getKey()).get();","120","    RuleDto rule = underTest.selectByKey(db.getSession(), organization1.getUuid(), ruleDefinition.getKey()).get();","122","    rule = underTest.selectByKey(db.getSession(), organization2.getUuid(), ruleDefinition.getKey()).get();"],"delete":["86","    assertThat(underTest.selectByKey(db.getSession(), organization, RuleKey.of(\"foo\", \"bar\")))","88","    RuleDto rule = underTest.selectByKey(db.getSession(), organization, ruleDefinition.getKey()).get();","97","    assertThat(underTest.selectByKey(db.getSession(), OrganizationTesting.newOrganizationDto(), ruleDefinition.getKey()))","106","    RuleDto rule = underTest.selectByKey(db.getSession(), organization, ruleDefinition.getKey()).get();","120","    RuleDto rule = underTest.selectByKey(db.getSession(), organization1, ruleDefinition.getKey()).get();","122","    rule = underTest.selectByKey(db.getSession(), organization2, ruleDefinition.getKey()).get();"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/rule\/DefaultRuleFinder.java":[{"add":["81","      Optional<RuleDto> rule = ruleDao.selectByKey(dbSession, defaultOrganization.getUuid(), key);"],"delete":["81","      Optional<RuleDto> rule = ruleDao.selectByKey(dbSession, defaultOrganization, key);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/rule\/RuleDao.java":[{"add":["45","  public Optional<RuleDto> selectByKey(DbSession session, String organizationUuid, RuleKey key) {","46","    RuleDto res = mapper(session).selectByKey(organizationUuid, key);","47","    ensureOrganizationIsSet(organizationUuid, res);","60","  public Optional<RuleMetadataDto> selectMetadataByKey(DbSession session, RuleKey key, String organizationUuid) {","61","    return ofNullable(mapper(session).selectMetadataByKey(key, organizationUuid));"],"delete":["27","","46","  public Optional<RuleDto> selectByKey(DbSession session, OrganizationDto organization, RuleKey key) {","47","    RuleDto res = mapper(session).selectByKey(organization.getUuid(), key);","48","    ensureOrganizationIsSet(organization.getUuid(), res);","61","  public Optional<RuleMetadataDto> selectMetadataByKey(DbSession session, RuleKey key, OrganizationDto organization) {","62","    return ofNullable(mapper(session).selectMetadataByKey(key, organization.getUuid()));"]}]}},"8e1e2e1e2e5b346062e87b7b8401baece8f379a4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/PageHeader.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/PageHeader.js":[{"add":["61","          {!!window.SS.isUserAdmin && (","62","              <div className=\"page-actions\">","63","                <button className=\"js-apply-template\" onClick={this.handleApplyTemplate}>","64","                  Apply Template","65","                <\/button>","66","              <\/div>","67","          )}"],"delete":["61","          <div className=\"page-actions\">","62","            <button","63","                className=\"js-apply-template\"","64","                onClick={this.handleApplyTemplate}>","65","              Apply Template","66","            <\/button>","67","          <\/div>"]}]}},"ac7edbe5890ae7921593dda7520157dca652860d":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultIndexedFile.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/FileSystemMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/ProjectBuilderMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputComponentStore.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/FileIndexer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilderTest.java":"MODIFY","plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/extensions\/XooProjectBuilder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/scan\/issue\/filter\/FilterableIssue.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokensTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/DefaultFileLinesContextTest.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFileTest.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":[{"add":["127","  public String getModuleRelativePath() {","128","    return indexedFile.getModuleRelativePath();","129","  }","130","","131","  public String getProjectRelativePath() {","132","    return indexedFile.getProjectRelativePath();","133","  }","134",""],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultIndexedFile.java":[{"add":["72","  public String getModuleRelativePath() {","73","    return moduleRelativePath;","74","  }","75","","76","  public String getProjectRelativePath() {","77","    return projectRelativePath;","78","  }","79",""],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/FileSystemMediumTest.java":[{"add":["564","    thrown.expectMessage(\"File src\/sample.xoo can't be indexed twice. Please check that inclusion\/exclusion patterns produce disjoint sets for main and test files\");","570","  }","571","","572","  \/\/ SONAR-9574","573","  @Test","574","  public void failForDuplicateInputFileInDifferentModules() throws IOException {","575","    File srcDir = new File(baseDir, \"module1\/src\");","576","    srcDir.mkdir();","577","","578","    File xooFile = new File(srcDir, \"sample.xoo\");","579","    FileUtils.write(xooFile, \"Sample xoo\\ncontent\");","580","","581","    thrown.expect(MessageException.class);","582","    thrown.expectMessage(\"File module1\/src\/sample.xoo can't be indexed twice. Please check that inclusion\/exclusion patterns produce disjoint sets for main and test files\");","583","    tester.newTask()","584","      .properties(builder","585","        .put(\"sonar.sources\", \"module1\/src\")","586","        .put(\"sonar.modules\", \"module1\")","587","        .put(\"module1.sonar.sources\", \"src\")","588","        .build())","589","      .execute();"],"delete":["564","    thrown.expectMessage(\"can't be indexed twice. Please check that inclusion\/exclusion patterns produce disjoint sets for main and test files\");","715","  @Test","716","  public void detectDuplicatedFilesInDifferentModules() throws IOException {","717","    File srcDir = new File(baseDir, \"module1\/src\");","718","    srcDir.mkdir();","719","","720","    File xooFile = new File(srcDir, \"sample.xoo\");","721","    FileUtils.write(xooFile, \"Sample xoo\\ncontent\");","722","","723","    TaskResult result = tester.newTask()","724","      .properties(builder","725","        .put(\"sonar.sources\", \"module1\/src\")","726","        .put(\"sonar.modules\", \"module1\")","727","        .put(\"module1.sonar.sources\", \"src\")","728","        .build())","729","      .execute();","730","","731","    assertThat(result.inputFiles()).hasSize(1);","732","  }"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/ProjectBuilderMediumTest.java":[{"add":["192","    File baseDir = temp.newFolder();"],"delete":["192","    File baseDir = temp.getRoot();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputComponentStore.java":[{"add":["112","    inputFileCache.remove(file.moduleKey(), file.getModuleRelativePath());","125","    inputFileCache.put(file.moduleKey(), file.getModuleRelativePath(), inputFile);","126","    globalInputFileCache.put(file.getProjectRelativePath(), inputFile);","144","    \/\/ FIXME an InputDir can be already indexed by another module"],"delete":["112","    inputFileCache.remove(file.moduleKey(), inputFile.relativePath());","125","    inputFileCache.put(file.moduleKey(), inputFile.relativePath(), inputFile);","126","    globalInputFileCache.put(getProjectRelativePath(file), inputFile);","149","  private String getProjectRelativePath(DefaultInputFile file) {","150","    return PathResolver.relativePath(getProjectBaseDir(), file.path());","151","  }","152",""]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/FileIndexer.java":[{"add":["184","      indexFileAndParentDir(inputFile, parentRelativePath);","270","    private AtomicInteger indexedCount = new AtomicInteger(0);","273","    void markAsIndexed(DefaultInputFile inputFile) {","274","      if (componentStore.getFile(inputFile.getProjectRelativePath()) != null) {","278","      int count = indexedCount.incrementAndGet();","279","      progressReport.message(count + \" \" + pluralizeFiles(count) + \" indexed...  (last one was \" + inputFile.relativePath() + \")\");","291","      return indexedCount.get();"],"delete":["33","import java.util.HashSet;","35","import java.util.Set;","45","import org.sonar.api.batch.fs.IndexedFile;","186","      indexFileAndParentDir(inputFile, parentRelativePath);","273","    private final Set<Path> indexed = new HashSet<>();","276","    void markAsIndexed(IndexedFile inputFile) {","277","      if (indexed.contains(inputFile.path())) {","281","      indexed.add(inputFile.path());","282","      progressReport.message(indexed.size() + \" \" + pluralizeFiles(indexed.size()) + \" indexed...  (last one was \" + inputFile.relativePath() + \")\");","294","      return indexed.size();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilderTest.java":[{"add":["23","import java.nio.file.Files;","59","    Path moduleBaseDir = baseDir.resolve(\"module1\");","60","    Files.createDirectories(moduleBaseDir);","62","      .setBaseDir(moduleBaseDir.toFile())"],"delete":["59","      .setBaseDir(baseDir.resolve(\"module1\").toFile())"]}],"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/extensions\/XooProjectBuilder.java":[{"add":["21","import java.io.File;","40","    root.resetSources();"],"delete":["25","import java.io.File;","26",""]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/scan\/issue\/filter\/FilterableIssue.java":[{"add":["55","  \/**","56","   * @deprecated since 6.6 useless","57","   *\/","58","  @Deprecated"],"delete":["22","","25",""]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokensTest.java":[{"add":["147","      assertThat(e).hasMessage(\"Tokens of file src\/Foo.java should be provided in order.\\n\" +"],"delete":["25","import org.sonar.api.config.Settings;","148","      assertThat(e).hasMessage(\"Tokens of file [moduleKey=foo, relative=src\/Foo.java, basedir=foo] should be provided in order.\\n\" +"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/DefaultFileLinesContextTest.java":[{"add":["97","    thrown.expectMessage(\"Line number should be positive for file src\/foo.php.\");","103","    thrown.expectMessage(\"Line 4 is out of range for file src\/foo.php. File has 3 lines\");"],"delete":["97","    thrown.expectMessage(\"Line number should be positive for file [moduleKey=foo, relative=src\/foo.php, basedir=foo].\");","103","    thrown.expectMessage(\"Line 4 is out of range for file [moduleKey=foo, relative=src\/foo.php, basedir=foo]. File has 3 lines\");"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFileTest.java":[{"add":["86","    assertThat(inputFile.getModuleRelativePath()).isEqualTo(MODULE_RELATIVE_PATH);","87","    assertThat(inputFile.getProjectRelativePath()).isEqualTo(PROJECT_RELATIVE_PATH);","88","","89","    assertThat(inputFile.relativePath()).isEqualTo(MODULE_RELATIVE_PATH);","90","    assertThat(new File(inputFile.relativePath())).isRelative();","93","    assertThat(new File(inputFile.relativePath())).isRelative();"],"delete":["76","    assertThat(inputFile.relativePath()).isEqualTo(MODULE_RELATIVE_PATH);","77","    assertThat(new File(inputFile.relativePath())).isRelative();"]}]}},"f3de142860a4ebcc91f9f80771964a105f8ed982":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/LeakProjectsPageTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/timemachine\/Periods.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/SearchProjectsTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/MigratePreviousAnalysisToPreviousVersion.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/NewEffortAggregatorTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/measure\/TimeMachineTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/measure\/MeasuresWsTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/MigratePreviousAnalysisToPreviousVersionTest\/properties.sql":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityGate\/QualityGateUiTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityModel\/TechnicalDebtAndIssueNewMeasuresTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityGate\/QualityGateOnRatingMeasuresTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/MigratePreviousAnalysisToPreviousVersionTest.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/NewIssuesMeasureTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PeriodResolver.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/measure\/DifferentialPeriodsTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityGate\/QualityGateNotificationTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/DbVersion67Test.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/DbVersion67.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportPersistAnalysisStepTest.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/timemachine\/PeriodsTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityModel\/NewDebtRatioMeasureTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/LeakProjectsPageTest.java":[{"add":["58","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_version\");"],"delete":["58","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/timemachine\/Periods.java":[{"add":["148","      if (LEAK_PERIOD_MODE_PREVIOUS_VERSION.equals(periodProperty)) {"],"delete":["35","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS;","94","      case LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS:","95","        return labelForPreviousAnalysis(date, shortLabel);","119","  private String labelForPreviousAnalysis(@Nullable String date, boolean shortLabel) {","120","    if (date == null) {","121","      return label(\"since_previous_analysis\", shortLabel);","122","    }","123","    return label(\"since_previous_analysis_detailed\", shortLabel, date);","124","  }","125","","158","      if (LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS.equals(periodProperty) || LEAK_PERIOD_MODE_PREVIOUS_VERSION.equals(periodProperty)) {"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/SearchProjectsTest.java":[{"add":["222","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_version\");"],"delete":["222","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/MigratePreviousAnalysisToPreviousVersion.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/NewEffortAggregatorTest.java":[{"add":["47","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_VERSION;","51","  private static final Period PERIOD = new Period(LEAK_PERIOD_MODE_PREVIOUS_VERSION, null, 1_500_000_000L, \"U1\");"],"delete":["47","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS;","51","  private static final Period PERIOD = new Period(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, null, 1_500_000_000L, \"U1\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":[{"add":["26","import org.junit.rules.ExpectedException;","68","  @Rule","69","  public ExpectedException expectedException = ExpectedException.none();"],"delete":["48","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS;","234","  public void feed_period_by_previous_analysis() {","235","    setupRoot(PROJECT_ROOT);","236","    dbTester.prepareDbUnit(getClass(), \"shared.xml\");","237","    settings.setProperty(\"sonar.leak.period\", \"previous_analysis\");","238","","239","    underTest.execute();","240","","241","    \/\/ return analysis from 2008-11-29","242","    Period period = periodsHolder.getPeriod();","243","    assertThat(period).isNotNull();","244","    assertThat(period.getMode()).isEqualTo(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS);","245","    assertThat(period.getModeParameter()).isNotNull();","246","    assertThat(period.getSnapshotDate()).isEqualTo(1227934800000L);","247","    assertThat(period.getAnalysisUuid()).isEqualTo(\"u1004\");","248","","249","    assertThat(logTester.logs(LoggerLevel.DEBUG)).hasSize(1);","250","    assertThat(logTester.logs(LoggerLevel.DEBUG).get(0)).startsWith(\"Compare to previous analysis (\");","251","  }","252","","253","  @Test","254","  public void no_period_by_previous_analysis() {","255","    setupRoot(PROJECT_ROOT);","256","    dbTester.prepareDbUnit(getClass(), \"empty.xml\");","257","    settings.setProperty(\"sonar.leak.period\", \"previous_analysis\");","258","","259","    underTest.execute();","260","","261","    assertThat(periodsHolder.getPeriod()).isNull();","262","  }","263","","264","  @Test","265","  public void display_warning_log_when_using_previous_analysis() {","266","    setupRoot(PROJECT_ROOT);","267","    dbTester.prepareDbUnit(getClass(), \"shared.xml\");","268","    settings.setProperty(\"sonar.leak.period\", \"previous_analysis\");","269","","270","    underTest.execute();","271","","272","    assertThat(logTester.logs(LoggerLevel.WARN))","273","      .containsOnly(\"Leak period is set to deprecated value 'previous_analysis'. This value will be removed in next SonarQube LTS, please use another one instead.\");","274","  }","275","","276","  @Test"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/measure\/TimeMachineTest.java":[{"add":["77","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_version\");"],"delete":["77","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/measure\/MeasuresWsTest.java":[{"add":["54","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_version\");"],"delete":["54","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/MigratePreviousAnalysisToPreviousVersionTest\/properties.sql":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityGate\/QualityGateUiTest.java":[{"add":["58","    tester.settings().setGlobalSettings(\"sonar.leak.period\", \"previous_version\");"],"delete":["58","    tester.settings().setGlobalSettings(\"sonar.leak.period\", \"previous_analysis\");"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityModel\/TechnicalDebtAndIssueNewMeasuresTest.java":[{"add":[],"delete":["56","  public void since_previous_analysis_with_constant_effort() throws Exception {","57","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");","58","    defineQualityProfile(\"one-issue-per-line\");","59","    provisionSampleProject();","60","","61","    \/\/ Execute an analysis in the past to have a past snapshot without any issues","62","    setSampleProjectQualityProfile(\"empty\");","63","    runSampleProjectAnalysis(\"v1\", \"sonar.projectDate\", DATE_31_DAYS_AGO);","64","","65","    \/\/ Second analysis issues will be created -> new issues and new technical debt","66","    setSampleProjectQualityProfile(\"one-issue-per-line\");","67","    runSampleProjectAnalysis(\"v1\");","68","    assertLeakPeriodForComponent(\"sample\", 26, 26);","69","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 13, 13);","70","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 13, 13);","71","","72","    \/\/ Third analysis, with exactly the same profile -> no new issues so no new technical debt","73","    runSampleProjectAnalysis(\"v1\");","74","    assertLeakPeriodForComponent(\"sample\", 0, 0);","75","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 0, 0);","76","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 0, 0);","77","","78","    \/\/ Fourth analysis, with new files and modified files -> new issues and new technical debt","79","    runSampleProjectAnalysis(\"v2\");","80","    assertLeakPeriodForComponent(\"sample\", 17, 17);","81","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 0, 0);","82","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 4, 4);","83","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassAdded.xoo\", 13, 13);","84","","85","    \/\/ Fifth analysis, no change -> no new issues so no new technical debt","86","    runSampleProjectAnalysis(\"v2\");","87","    assertLeakPeriodForComponent(\"sample\", 0, 0);","88","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 0, 0);","89","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 0, 0);","90","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassAdded.xoo\", 0, 0);","91","  }","92","","93","  @Test","94","  public void since_previous_analysis_with_effort_change() throws Exception {","95","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");","96","    defineQualityProfile(\"one-issue-per-line\");","97","    provisionSampleProject();","98","","99","    \/\/ Execute an analysis in the past to have a past snapshot without any issues","100","    setSampleProjectQualityProfile(\"empty\");","101","    runSampleProjectAnalysis(\"v1\", \"sonar.projectDate\", DATE_31_DAYS_AGO);","102","","103","    \/\/ Second analysis issues will be created -> new issues and new technical debt","104","    setSampleProjectQualityProfile(\"one-issue-per-line\");","105","    runSampleProjectAnalysis(\"v1\");","106","    assertLeakPeriodForComponent(\"sample\", 26, 26);","107","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 13, 13);","108","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 13, 13);","109","","110","    \/\/ Third analysis, no change but increased effort is ignored but only new issues are considered -> no new issues so no new technical debt","111","    runSampleProjectAnalysis(\"v1\", \"sonar.oneIssuePerLine.effortToFix\", \"10\");","112","    assertLeakPeriodForComponent(\"sample\", 0, 0);","113","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 0, 0);","114","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 0, 0);","115","","116","    \/\/ Fourth analysis, with new files, modified files and increased effort -> new issues and new technical debt","117","    runSampleProjectAnalysis(\"v2\", \"sonar.oneIssuePerLine.effortToFix\", \"10\");","118","    assertLeakPeriodForComponent(\"sample\", 170, 17);","119","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 0, 0);","120","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 40, 4);","121","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassAdded.xoo\", 130, 13);","122","","123","    \/\/ Fifth analysis, no change -> no new issues so no new technical debt","124","    runSampleProjectAnalysis(\"v2\", \"sonar.oneIssuePerLine.effortToFix\", \"10\");","125","    assertLeakPeriodForComponent(\"sample\", 0, 0);","126","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/UnchangedClass.xoo\", 0, 0);","127","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassToModify.xoo\", 0, 0);","128","    assertLeakPeriodForComponent(\"sample:src\/main\/xoo\/sample\/ClassAdded.xoo\", 0, 0);","129","  }","130","","131","  @Test"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityGate\/QualityGateOnRatingMeasuresTest.java":[{"add":["69","    tester.settings().setGlobalSetting(\"sonar.leak.period\", \"previous_version\");"],"delete":["69","    tester.settings().setGlobalSetting(\"sonar.leak.period\", \"previous_analysis\");"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/MigratePreviousAnalysisToPreviousVersionTest.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/NewIssuesMeasureTest.java":[{"add":["55","    setServerProperty(ORCHESTRATOR, \"sonar.leak.period\", \"previous_version\");","98","    setServerProperty(ORCHESTRATOR, \"sonar.leak.period\", \"previous_version\");","126","    setServerProperty(ORCHESTRATOR, \"sonar.leak.period\", \"previous_version\");"],"delete":["55","    setServerProperty(ORCHESTRATOR, \"sonar.leak.period\", \"previous_analysis\");","98","    setServerProperty(ORCHESTRATOR, \"sonar.leak.period\", \"previous_analysis\");","126","    setServerProperty(ORCHESTRATOR, \"sonar.leak.period\", \"previous_analysis\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PeriodResolver.java":[{"add":[],"delete":["40","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS;","72","    if (propertyValue.equals(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS)) {","73","      LOG.warn(\"Leak period is set to deprecated value '{}'. This value will be removed in next SonarQube LTS, please use another one instead.\",","74","        LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS);","75","    }","93","    if (StringUtils.equals(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, property)) {","94","      return findByPreviousAnalysis();","95","    }","124","  private Period findByPreviousAnalysis() {","125","    SnapshotDto snapshot = findFirstSnapshot(session, createCommonQuery(projectUuid).setCreatedBefore(analysisDate).setIsLast(true).setSort(BY_DATE, DESC));","126","    if (snapshot == null) {","127","      return null;","128","    }","129","    LOG.debug(\"Compare to previous analysis ({})\", formatDate(snapshot.getCreatedAt()));","130","    return new Period(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, formatDate(snapshot.getCreatedAt()), snapshot.getCreatedAt(), snapshot.getUuid());","131","  }","132","","133","  @CheckForNull"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/measure\/DifferentialPeriodsTest.java":[{"add":["84","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_version\");","135","    setServerProperty(orchestrator, MULTI_MODULE_PROJECT_KEY, \"sonar.leak.period\", \"previous_version\");","158","    setServerProperty(orchestrator, projectKey, \"sonar.leak.period\", \"previous_version\");"],"delete":["84","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");","135","    setServerProperty(orchestrator, MULTI_MODULE_PROJECT_KEY, \"sonar.leak.period\", \"previous_analysis\");","158","    setServerProperty(orchestrator, projectKey, \"sonar.leak.period\", \"previous_analysis\");"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityGate\/QualityGateNotificationTest.java":[{"add":["69","    tester.settings().setGlobalSettings(\"sonar.leak.period\", \"previous_version\");","115","      .contains(\"Quality gate threshold: Lines of Code variation = 0 since previous version\")"],"delete":["69","    tester.settings().setGlobalSettings(\"sonar.leak.period\", \"previous_analysis\");","115","      .contains(\"Quality gate threshold: Lines of Code variation = 0 since previous analysis\")"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/DbVersion67Test.java":[{"add":["38","    verifyMigrationCount(underTest, 7);"],"delete":["38","    verifyMigrationCount(underTest, 6);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v67\/DbVersion67.java":[{"add":["34","      .add(1836, \"Migrate 'previous_analysis' leak periods to 'previous_version'\", MigratePreviousAnalysisToPreviousVersion.class)"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportPersistAnalysisStepTest.java":[{"add":["48","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_VERSION;","159","    periodsHolder.setPeriod(new Period(LEAK_PERIOD_MODE_PREVIOUS_VERSION, null, analysisDate, \"u1\"));","192","    assertThat(newProjectSnapshot.getPeriodMode()).isEqualTo(LEAK_PERIOD_MODE_PREVIOUS_VERSION);"],"delete":["48","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS;","159","    periodsHolder.setPeriod(new Period(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, null, analysisDate, \"u1\"));","192","    assertThat(newProjectSnapshot.getPeriodMode()).isEqualTo(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS);"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/timemachine\/PeriodsTest.java":[{"add":[],"delete":["39","import static org.sonar.core.config.CorePropertyDefinitions.LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS;","131","  public void return_since_previous_analysis_label_when_no_date() {","132","    periods.label(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, null, (String) null);","133","","134","    verify(i18n).message(any(Locale.class), eq(\"since_previous_analysis\"), isNull(String.class));","135","  }","136","","137","  @Test","138","  public void return_since_previous_analysis_abbreviation_when_no_date() {","139","    periods.abbreviation(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, null, null);","140","","141","    verify(i18n).message(any(Locale.class), eq(\"since_previous_analysis.short\"), isNull(String.class));","142","  }","143","","144","  @Test","145","  public void return_since_previous_analysis_detailed_label_when_date_is_set() {","146","    periods.label(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, null, STRING_DATE);","147","","148","    verify(i18n).message(any(Locale.class), eq(\"since_previous_analysis_detailed\"), isNull(String.class), eq(STRING_DATE));","149","  }","150","","151","  @Test","152","  public void return_since_previous_analysis_detailed_abbreviation_when_date_is_set() {","153","    periods.abbreviation(LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS, null, DATE);","154","","155","    verify(i18n).message(any(Locale.class), eq(\"since_previous_analysis_detailed.short\"), isNull(String.class), anyString());","156","  }","157","","158","  @Test","159","  public void return_since_previous_analysis_label_using_settings() {","160","    settings.setProperty(LEAK_PERIOD + PERIOD_INDEX, LEAK_PERIOD_MODE_PREVIOUS_ANALYSIS);","161","","162","    periods.label(PERIOD_INDEX);","163","","164","    verify(i18n).message(any(Locale.class), eq(\"since_previous_analysis\"), isNull(String.class));","165","  }","166","","167","  @Test"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityModel\/NewDebtRatioMeasureTest.java":[{"add":["66","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_version\");"],"delete":["66","    setServerProperty(orchestrator, \"sonar.leak.period\", \"previous_analysis\");"]}]}},"1f600ed00be3f7c8dec2095ee89753d72ce5dc16":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/AbstractProjectOrModule.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/AbstractProjectOrModule.java":[{"add":["97","        Files.createDirectories(workingDir);"],"delete":[]}]}},"8b8f07ed8becdef5cf45fc27567ea24cd43e124a":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/PageHeader.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/PageHeader.tsx":[{"add":["69","        ? translate('visibility', component.visibility, 'description', component.qualifier)"],"delete":["69","        ? translate('visibility', component.visibility, 'description')"]}]}},"8654f383093aa581029719f7cd424301c9410ea8":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistAnalysisWarningsStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SignificantCodeRepository.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistAnalysisPropertiesStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesHashRepositoryImpl.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistAnalysisWarningsStep.java":[{"add":["26","import org.sonar.core.util.CloseableIterator;","27","import org.sonar.scanner.protocol.output.ScannerReport;","47","    try (CloseableIterator<ScannerReport.AnalysisWarning> it = reportReader.readAnalysisWarnings()) {","48","      it.forEachRemaining(w -> warnings.add(new CeTaskMessages.Message(w.getText(), w.getTimestamp())));","49","    }"],"delete":["45","    reportReader.readAnalysisWarnings().forEachRemaining(w -> warnings.add(new CeTaskMessages.Message(w.getText(), w.getTimestamp())));"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SignificantCodeRepository.java":[{"add":["38","    Optional<CloseableIterator<LineSgnificantCode>> opt = reportReader.readComponentSignificantCode(component.getReportAttributes().getRef());","39","    if (!opt.isPresent()) {","40","      return Optional.empty();","41","    }","42","    try (CloseableIterator<LineSgnificantCode> significantCode = opt.get()) {","43","      return Optional.of(toArray(significantCode, numLines));","44","    }"],"delete":["38","    Optional<CloseableIterator<LineSgnificantCode>> significantCode = reportReader.readComponentSignificantCode(component.getReportAttributes().getRef());","39","    return significantCode.map(s -> toArray(s, numLines));"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistAnalysisPropertiesStep.java":[{"add":["26","import org.sonar.core.util.CloseableIterator;","31","import org.sonar.scanner.protocol.output.ScannerReport;","59","    List<AnalysisPropertyDto> analysisPropertyDtos = new ArrayList<>();","60","    try (CloseableIterator<ScannerReport.ContextProperty> it = reportReader.readContextProperties()) {","61","      it.forEachRemaining(","62","        contextProperty -> {","63","          String propertyKey = contextProperty.getKey();","64","          if (propertyKey.startsWith(SONAR_ANALYSIS) || propertyKey.startsWith(SONAR_PULL_REQUEST)) {","65","            analysisPropertyDtos.add(new AnalysisPropertyDto()","66","              .setUuid(uuidFactory.create())","67","              .setKey(propertyKey)","68","              .setValue(contextProperty.getValue())","69","              .setSnapshotUuid(analysisMetadataHolder.getUuid()));","70","          }","71","        });","72","    }"],"delete":["57","    final List<AnalysisPropertyDto> analysisPropertyDtos = new ArrayList<>();","58","    reportReader.readContextProperties().forEachRemaining(","59","      contextProperty -> {","60","        String propertyKey = contextProperty.getKey();","61","        if (propertyKey.startsWith(SONAR_ANALYSIS) || propertyKey.startsWith(SONAR_PULL_REQUEST)) {","62","          analysisPropertyDtos.add(new AnalysisPropertyDto()","63","            .setUuid(uuidFactory.create())","64","            .setKey(propertyKey)","65","            .setValue(contextProperty.getValue())","66","            .setSnapshotUuid(analysisMetadataHolder.getUuid()));","67","        }","68","      });"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/SourceLinesHashRepositoryImpl.java":[{"add":["87","    try (CloseableIterator<String> lines = sourceLinesRepository.readLines(component)) {","88","      while (lines.hasNext()) {","89","        processor.addLine(lines.next());","90","      }","91","      return processor.getResult();"],"delete":["87","    CloseableIterator<String> lines = sourceLinesRepository.readLines(component);","88","","89","    while (lines.hasNext()) {","90","      processor.addLine(lines.next());","92","","93","    return processor.getResult();"]}]}},"92e63318a312ad5ac0c24056b2b9e74c564f0029":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/StickyFacetBuilder.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/StickyFacetBuilder.java":[{"add":["40","import static java.lang.Math.max;","48","  \/** In some cases the user selects >15 items for one facet. In that case, we want to calculate the doc count for all of them (not just the first 15 items, which would be the","49","   * default for the TermsAggregation). *\/","50","  private static final int MAXIMUM_NUMBER_OF_SELECTED_ITEMS_WHOSE_DOC_COUNT_WILL_BE_CALCULATED = 50;","153","      .size(max(MAXIMUM_NUMBER_OF_SELECTED_ITEMS_WHOSE_DOC_COUNT_WILL_BE_CALCULATED, includes.length()))"],"delete":[]}]}},"c449191069573ef348bdd5a0c43f2593bd84f198":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileBackuperImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileBackuperImpl.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/RestoreAction.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/qualityprofile\/QualityProfileWsParameters.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileBackuperImplTest.java":[{"add":["47","import static org.junit.rules.ExpectedException.none;","60","  public ExpectedException expectedException = none();","197","  public void fail_to_restore_if_not_xml_backup() {","198","    OrganizationDto organization = db.organizations().insert();","199","    try {","200","      underTest.restore(db.getSession(), new StringReader(\"foo\"), organization, null);","201","      fail();","202","    } catch (IllegalArgumentException e) {","203","      assertThat(reset.calledProfile).isNull();","204","    }","205","  }","206","","207","  @Test","208","  public void fail_to_restore_if_xml_is_not_well_formed() {","209","    expectedException.expect(IllegalArgumentException.class);","210","    expectedException.expectMessage(\"Fail to restore Quality profile backup, XML document is not well formed\");","211","    OrganizationDto organization = db.organizations().insert();","212","    String notWellFormedXml = \"<?xml version='1.0' encoding='UTF-8'?><profile><name>\\\"profil\\\"<\/name><language>\\\"language\\\"<\/language><rules\/><\/profile\";","213","","214","    underTest.restore(db.getSession(), new StringReader(notWellFormedXml), organization, null);","215","  }","216","","217","  @Test","231","  public void fail_to_restore_external_rule() {"],"delete":["28","import javax.xml.stream.XMLStreamException;","60","  public ExpectedException expectedException = ExpectedException.none();","185","  public void fail_to_restore_if_not_xml_backup() {","186","    OrganizationDto organization = db.organizations().insert();","187","    try {","188","      underTest.restore(db.getSession(), new StringReader(\"foo\"), organization, null);","189","      fail();","190","    } catch (IllegalStateException e) {","191","      assertThat(e).hasMessage(\"Fail to restore Quality profile backup\");","192","      assertThat(e.getCause()).isInstanceOf(XMLStreamException.class);","193","      assertThat(reset.calledProfile).isNull();","194","    }","195","  }","196","","197","  @Test","223","  public void fail_to_restore_external_rule() throws Exception {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileBackuperImpl.java":[{"add":["174","      throw new IllegalArgumentException(\"Fail to restore Quality profile backup, XML document is not well formed\", e);"],"delete":["174","      throw new IllegalStateException(\"Fail to restore Quality profile backup\", e);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/RestoreAction.java":[{"add":["63","    WebService.NewAction action = controller.createAction(\"restore\")"],"delete":["43","import static org.sonarqube.ws.client.qualityprofile.QualityProfileWsParameters.ACTION_RESTORE;","64","    WebService.NewAction action = controller.createAction(ACTION_RESTORE)"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/qualityprofile\/QualityProfileWsParameters.java":[{"add":[],"delete":["43","  public static final String ACTION_RESTORE = \"restore\";"]}]}},"cba808dd9122029150b7d966f4bb8faac53f2ef7":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/ActivityPanel.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/ActivityPanel-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverview.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/BranchOverview-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/ActivityPanel.tsx":[{"add":["97","                analyses={[]}"],"delete":["71","  const parsedAnalyses = analyses.map(a => ({ ...a, date: parseDate(a.date) }));","98","                analyses={parsedAnalyses}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/ActivityPanel-test.tsx.snap":[{"add":["40","            analyses={Array []}"],"delete":["40","            analyses={","41","              Array [","42","                Object {","43","                  \"date\": 2017-03-01T08:36:01.000Z,","44","                  \"events\": Array [","45","                    Object {","46","                      \"category\": \"QUALITY_GATE\",","47","                      \"description\": \"Lorem ipsum dolor sit amet\",","48","                      \"key\": \"E11\",","49","                      \"name\": \"Lorem ipsum\",","50","                      \"qualityGate\": Object {","51","                        \"failing\": Array [","52","                          Object {","53","                            \"branch\": \"master\",","54","                            \"key\": \"foo\",","55","                            \"name\": \"Foo\",","56","                          },","57","                          Object {","58","                            \"branch\": \"feature\/bar\",","59","                            \"key\": \"bar\",","60","                            \"name\": \"Bar\",","61","                          },","62","                        ],","63","                        \"status\": \"ERROR\",","64","                        \"stillFailing\": true,","65","                      },","66","                    },","67","                  ],","68","                  \"key\": \"foo\",","69","                  \"projectVersion\": \"1.0\",","70","                },","71","                Object {","72","                  \"date\": 2017-03-01T08:36:01.000Z,","73","                  \"events\": Array [],","74","                  \"key\": \"foo\",","75","                  \"projectVersion\": \"1.0\",","76","                },","77","              ]","78","            }"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverview.tsx":[{"add":["27","import { getAllTimeMachineData } from '..\/..\/..\/api\/time-machine';","300","    return getAllTimeMachineData({"],"delete":["27","import { getTimeMachineData } from '..\/..\/..\/api\/time-machine';","300","    return getTimeMachineData({"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/BranchOverview-test.tsx":[{"add":["31","import { getAllTimeMachineData } from '..\/..\/..\/..\/api\/time-machine';","128","    getAllTimeMachineData: jest.fn().mockResolvedValue({","335","  expect(getAllTimeMachineData).toBeCalled();"],"delete":["31","import { getTimeMachineData } from '..\/..\/..\/..\/api\/time-machine';","128","    getTimeMachineData: jest.fn().mockResolvedValue({","335","  expect(getTimeMachineData).toBeCalled();"]}]}},"4f0bd4cb6dcd98f45f140c45cf376686898d4dc3":{"changes":{"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/Tracking.java":"MODIFY"},"diff":{"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/Tracking.java":[{"add":["93","      .add(\"rawToBase\", rawToBase.size())","94","      .add(\"baseToRaw\", baseToRaw.size())","95","      .add(\"raws\", raws.size())","96","      .add(\"bases\", bases.size())"],"delete":["93","      .add(\"rawToBase\", rawToBase)","94","      .add(\"baseToRaw\", baseToRaw)","95","      .add(\"raws\", raws)","96","      .add(\"bases\", bases)"]}]}},"9388dfa0d2826d4b7ddc905a46ef514a5136aa1c":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/monitoring\/EsMonitorTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/monitoring\/EsMonitor.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/monitoring\/EsMonitorTest.java":[{"add":["22","import org.elasticsearch.ElasticsearchException;","27","import org.sonar.server.es.EsClient;","32","import static org.mockito.Mockito.mock;","33","import static org.mockito.Mockito.when;","40","  private EsMonitor underTest = new EsMonitor(esTester.client());","79","","80","  @Test","81","  public void attributes_displays_exception_message_when_cause_null_when_client_fails() {","82","    EsClient esClientMock = mock(EsClient.class);","83","    EsMonitor underTest = new EsMonitor(esClientMock);","84","    when(esClientMock.prepareClusterStats()).thenThrow(new RuntimeException(\"RuntimeException with no cause\"));","85","","86","    Map<String, Object> attributes = underTest.attributes();","87","    assertThat(attributes).hasSize(1);","88","    assertThat(attributes.get(\"State\")).isEqualTo(\"RuntimeException with no cause\");","89","  }","90","","91","  @Test","92","  public void attributes_displays_exception_message_when_cause_is_not_ElasticSearchException_when_client_fails() {","93","    EsClient esClientMock = mock(EsClient.class);","94","    EsMonitor underTest = new EsMonitor(esClientMock);","95","    when(esClientMock.prepareClusterStats()).thenThrow(new RuntimeException(\"RuntimeException with cause not ES\", new IllegalArgumentException(\"some cause message\")));","96","","97","    Map<String, Object> attributes = underTest.attributes();","98","    assertThat(attributes).hasSize(1);","99","    assertThat(attributes.get(\"State\")).isEqualTo(\"RuntimeException with cause not ES\");","100","  }","101","","102","  @Test","103","  public void attributes_displays_cause_message_when_cause_is_ElasticSearchException_when_client_fails() {","104","    EsClient esClientMock = mock(EsClient.class);","105","    EsMonitor underTest = new EsMonitor(esClientMock);","106","    when(esClientMock.prepareClusterStats()).thenThrow(new RuntimeException(\"RuntimeException with ES cause\", new ElasticsearchException(\"some cause message\")));","107","","108","    Map<String, Object> attributes = underTest.attributes();","109","    assertThat(attributes).hasSize(1);","110","    assertThat(attributes.get(\"State\")).isEqualTo(\"some cause message\");","111","  }"],"delete":["36","  EsMonitor underTest = new EsMonitor(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/monitoring\/EsMonitor.java":[{"add":["23","import org.elasticsearch.ElasticsearchException;","32","import org.sonar.api.utils.log.Loggers;","70","    try {","71","      Map<String, Object> attributes = new LinkedHashMap<>();","72","      attributes.put(\"State\", getStateAsEnum());","73","      attributes.put(\"Indices\", indexAttributes());","74","      attributes.put(\"Number of Nodes\", getNumberOfNodes());","75","      attributes.put(\"Nodes\", nodeAttributes());","76","      return attributes;","77","    } catch (Exception es) {","78","      Loggers.get(EsMonitor.class).warn(\"Failed to retrieve ES attributes. There will be only a single \\\"state\\\" attribute.\", es);","79","      Map<String, Object> attributes = new LinkedHashMap<>();","80","      attributes.put(\"State\", (es.getCause() instanceof ElasticsearchException ? es.getCause().getMessage() : es.getMessage()));","81","      return attributes;","82","    }"],"delete":["68","    Map<String, Object> attributes = new LinkedHashMap<>();","69","    attributes.put(\"State\", getStateAsEnum());","70","    attributes.put(\"Indices\", indexAttributes());","71","    attributes.put(\"Number of Nodes\", getNumberOfNodes());","72","    attributes.put(\"Nodes\", nodeAttributes());","73","    return attributes;"]}]}},"159d8427bd256d7bcc27d8329bcb4baa15131e4b":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavWarnings-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMeta-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavWarnings.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/nav\/ContextNavBar.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavWarnings-test.tsx.snap":[{"add":["5","    className=\"badge badge-focus badge-medium display-inline-flex-center js-component-analysis-warnings flex-1\""],"delete":["5","    className=\"badge badge-focus badge-medium display-inline-flex-center js-component-analysis-warnings\""]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.tsx":[{"add":["52","    <div className=\"navbar-context-meta flex-0\">"],"delete":["52","    <div className=\"navbar-context-meta\">"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMeta-test.tsx.snap":[{"add":["4","  className=\"navbar-context-meta flex-0\"","44","  className=\"navbar-context-meta flex-0\"","88","  className=\"navbar-context-meta flex-0\""],"delete":["4","  className=\"navbar-context-meta\"","44","  className=\"navbar-context-meta\"","88","  className=\"navbar-context-meta\""]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavWarnings.tsx":[{"add":["53","        <div className=\"badge badge-focus badge-medium display-inline-flex-center js-component-analysis-warnings flex-1\">"],"delete":["53","        <div className=\"badge badge-focus badge-medium display-inline-flex-center js-component-analysis-warnings\">"]}],"server\/sonar-web\/src\/main\/js\/components\/nav\/ContextNavBar.css":[{"add":[],"delete":["76","  min-width: 0;"]}]}},"6f593749e3a6ecd3b01c761692e4e15167ec88ba":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/externalissue\/ExternalIssueImporter.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/externalissue\/ReportParserTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/externalissue\/ExternalIssueImporter.java":[{"add":["21","import com.google.common.base.MoreObjects;","111","    if (file == null) {","112","      return null;","114","    newLocation.on(file);","115","","116","    if (location.message != null) {","117","      newLocation.message(location.message);","118","    }","119","","120","    if (location.textRange != null) {","121","      if (location.textRange.startColumn != null) {","122","        TextPointer start = file.newPointer(location.textRange.startLine, location.textRange.startColumn);","123","        int endLine = MoreObjects.firstNonNull(location.textRange.endLine, location.textRange.startLine);","124","        int endColumn;","125","","126","        if (location.textRange.endColumn == null) {","127","          \/\/ assume it's until the last character of the end line","128","          endColumn = file.selectLine(endLine).end().lineOffset();","129","        } else {","130","          endColumn = location.textRange.endColumn;","131","        }","132","        TextPointer end = file.newPointer(endLine, endColumn);","133","        newLocation.at(file.newRange(start, end));","134","      } else {","135","        newLocation.at(file.selectLine(location.textRange.startLine));","136","      }","137","    }","138","    return newLocation;"],"delete":["110","    if (file != null) {","111","      newLocation","112","        .on(file);","113","","114","      if (location.message != null) {","115","        newLocation.message(location.message);","116","      }","117","","118","      if (location.textRange != null) {","119","        if (location.textRange.startColumn != null) {","120","          TextPointer start = file.newPointer(location.textRange.startLine, location.textRange.startColumn);","121","          int endLine;","122","          int endColumn;","123","","124","          if (location.textRange.endLine == null) {","125","            \/\/ assume it's on a single line","126","            endLine = location.textRange.startLine;","127","          } else {","128","            endLine = location.textRange.endLine;","129","          }","130","          if (location.textRange.endColumn == null) {","131","            \/\/ assume it's until the last character of the end line","132","            endColumn = file.selectLine(endLine).end().lineOffset();","133","          } else {","134","            endColumn = location.textRange.endColumn;","135","          }","136","          TextPointer end = file.newPointer(endLine, endColumn);","137","          newLocation.at(file.newRange(start, end));","138","        } else {","139","          newLocation.at(file.selectLine(location.textRange.startLine));","140","        }","141","      }","142","      return newLocation;","144","    return null;"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/externalissue\/ReportParserTest.java":[{"add":[],"delete":["38","    System.out.println(Paths.get(\"org\/sonar\/scanner\/externalissue\/report.json\").toAbsolutePath());"]}]}},"b8714087e3a988f0ea78554258d6d1a8a4670c74":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/usergroups\/ws\/users-example.json":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/UsersActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/usergroups\/ws\/users-example.json":[{"add":["13","  \"p\":1,","14","  \"ps\":25,","15","  \"total\":2"],"delete":["5","      \"email\": \"admin@admin.com\",","11","      \"email\": \"george.orwell@1984.net\",","15","  \"paging\": {","16","    \"pageSize\": 100,","17","    \"total\": 2,","18","    \"pageIndex\": 1","19","  }"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/UsersActionTest.java":[{"add":["358","  @Test","359","  public void test_example() {","360","    GroupDto group = db.users().insertGroup();","361","    UserDto admin = db.users().insertUser(newUserDto().setLogin(\"admin\").setName(\"Administrator\"));","362","    db.users().insertMember(group, admin);","363","    db.organizations().addMember(db.getDefaultOrganization(), admin);","364","    UserDto george = db.users().insertUser(newUserDto().setLogin(\"george.orwell\").setName(\"George Orwell\"));","365","    db.users().insertMember(group, george);","366","    db.organizations().addMember(db.getDefaultOrganization(), george);","367","    loginAsAdminOnDefaultOrganization();","368","","369","    String result = newUsersRequest()","370","      .setParam(\"id\", group.getId().toString())","371","      .setParam(Param.SELECTED, SelectionMode.ALL.value())","372","      .execute()","373","      .getInput();","374","","375","    assertJson(result).isSimilarTo(ws.getDef().responseExampleAsString());","376","  }","377",""],"delete":[]}]}},"ae779528b341900152976ceefbef862ce715dbe6":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainer-test.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.css":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineIssuesIndicator.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/Line-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineNumber-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/DuplicationPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineDuplicationBlock-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetGroupViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineNumber.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineDuplicationBlock.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/Line-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineIssuesIndicator-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/SnippetViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineDuplicationBlock-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/SnippetViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainerRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/SCMPopup-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineIssuesIndicator-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineSCM-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/SnippetViewer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCoverage.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/SCMPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainerRenderer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetGroupViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":"MODIFY","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineSCM-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineNumber-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineOptionsPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineCoverage-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/SCMPopup-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineOptionsPopup-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineOptionsPopup-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineCoverage-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerBase-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainer-test.tsx":[{"add":[],"delete":["157","it('should handle line popups', async () => {","158","  (getSources as jest.Mock).mockResolvedValueOnce(","159","    range(5, 18).map(line => mockSourceLine({ line }))","160","  );","161","","162","  const wrapper = shallowRender();","163","  await waitAndUpdate(wrapper);","164","","165","  const params = wrapper.state().sourceLines[0];","166","","167","  wrapper","168","    .find(HotspotSnippetContainerRenderer)","169","    .props()","170","    .onLinePopupToggle(params);","171","","172","  expect(wrapper.state().linePopup).toEqual(params);","173","","174","  \/\/ Close it","175","  wrapper","176","    .find(HotspotSnippetContainerRenderer)","177","    .props()","178","    .onLinePopupToggle(params);","179","","180","  expect(wrapper.state().linePopup).toBeUndefined();","181","});","182",""]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2490","source_viewer.line_X=Line: {0}","2491","source_viewer.click_for_scm_info=Click to see SCM information","2492","source_viewer.author_X=Author: {0}","2503","source_viewer.tooltip.scm.commited_on=Committed on","2504","source_viewer.tooltip.scm.revision=Revision","2505","","2506","source_viewer.issues_on_line.show=Click to show all issues on this line","2507","source_viewer.issues_on_line.hide=Click to hide all issues on this line"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.css":[{"add":["33",".source-line [role='button'] {","34","  cursor: pointer;","35","}","36","","192",".source-line-scm .dropdown {","193","  display: block;","194","}","195","","196",".source-line-scm [role='button'] {","197","  height: 18px;","198","}","199",""],"delete":["142",".source-meta[role='button'] {","143","  cursor: pointer;","144","}","145","","154",".source-line-number:before {","155","  content: attr(data-line-number);","156","}","157","","191",".source-duplications-expanded .source-line-duplications {","192","  display: none;","193","}","194","","195",".source-duplications-expanded .source-line-duplications-extra {","196","  display: table-cell;","197","}","198","","211",".source-line-scm-inner:before {","212","  content: attr(data-author);","213","}","214","","220",".source-line-bar[role='button'] {","221","  cursor: pointer;","222","}","223",""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineIssuesIndicator.tsx":[{"add":["22","import { translate } from 'sonar-ui-common\/helpers\/l10n';","25","export interface LineIssuesIndicatorProps {","27","  issuesOpen?: boolean;","32","export function LineIssuesIndicator(props: LineIssuesIndicatorProps) {","33","  const { issues, issuesOpen, line } = props;","34","  const hasIssues = issues.length > 0;","35","  const className = classNames('source-meta', 'source-line-issues', {","36","    'source-line-with-issues': hasIssues","37","  });","38","  const mostImportantIssue = hasIssues ? sortByType(issues)[0] : null;","39","","40","  const handleClick = (e: React.MouseEvent<HTMLElement>) => {","41","    e.preventDefault();","42","    e.currentTarget.blur();","43","    props.onClick();","46","  return (","47","    <td className={className} data-line-number={line.line}>","48","      {hasIssues && (","49","        <span","50","          aria-label={translate('source_viewer.issues_on_line', issuesOpen ? 'hide' : 'show')}","51","          onClick={handleClick}","52","          role=\"button\"","53","          tabIndex={0}>","54","          {mostImportantIssue != null && <IssueIcon type={mostImportantIssue.type} \/>}","55","          {issues.length > 1 && <span className=\"source-line-issues-counter\">{issues.length}<\/span>}","56","        <\/span>","57","      )}","58","    <\/td>","59","  );","61","","62","export default React.memo(LineIssuesIndicator);"],"delete":["24","interface Props {","30","export default class LineIssuesIndicator extends React.PureComponent<Props> {","31","  handleClick = (event: React.MouseEvent<HTMLElement>) => {","32","    event.preventDefault();","33","    this.props.onClick();","36","  render() {","37","    const { issues, line } = this.props;","38","    const hasIssues = issues.length > 0;","39","    const className = classNames('source-meta', 'source-line-issues', {","40","      'source-line-with-issues': hasIssues","41","    });","42","    const mostImportantIssue = hasIssues ? sortByType(issues)[0] : null;","43","","44","    return (","45","      <td","46","        className={className}","47","        data-line-number={line.line}","48","        onClick={hasIssues ? this.handleClick : undefined}","49","        role={hasIssues ? 'button' : undefined}","50","        tabIndex={hasIssues ? 0 : undefined}>","51","        {mostImportantIssue != null && <IssueIcon type={mostImportantIssue.type} \/>}","52","        {issues.length > 1 && <span className=\"source-line-issues-counter\">{issues.length}<\/span>}","53","      <\/td>","54","    );","55","  }"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/Line-test.tsx":[{"add":[],"delete":["108","      linePopup={undefined}","110","      onLinePopupToggle={jest.fn()}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineNumber-test.tsx":[{"add":["21","import { LineNumber, LineNumberProps } from '..\/LineNumber';","23","it('should render correctly', () => {","24","  expect(shallowRender()).toMatchSnapshot('default');","25","  expect(shallowRender({ line: { line: 0 } })).toMatchSnapshot('no line number');","28","function shallowRender(props: Partial<LineNumberProps> = {}) {","29","  return shallow(<LineNumber line={{ line: 3 }} {...props} \/>);","30","}"],"delete":["21","import { click } from 'sonar-ui-common\/helpers\/testUtils';","22","import LineNumber from '..\/LineNumber';","24","it('render line 3', () => {","25","  const line = { line: 3 };","26","  const wrapper = shallow(<LineNumber line={line} onPopupToggle={jest.fn()} popupOpen={false} \/>);","27","  expect(wrapper).toMatchSnapshot();","28","  click(wrapper);","31","it('render line 0', () => {","32","  const line = { line: 0 };","33","  const wrapper = shallow(<LineNumber line={line} onPopupToggle={jest.fn()} popupOpen={false} \/>);","34","  expect(wrapper).toMatchSnapshot();","35","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":[{"add":["90","  fetchDuplications = (component: string) => {","97","          this.setState({","100","            duplicationsByLine: getDuplicationsByLine(r.duplications)","101","          });","192","    const { components, duplications, duplicationsByLine } = this.state;","206","                duplications={duplications}","207","                duplicationsByLine={duplicationsByLine}"],"delete":["62","  linePopup?: T.LinePopup & { component: string };","91","  fetchDuplications = (component: string, line: T.SourceLine) => {","98","          this.setState(state => ({","101","            duplicationsByLine: getDuplicationsByLine(r.duplications),","102","            linePopup:","103","              r.duplications.length === 1","104","                ? { component, index: 0, line: line.line, name: 'duplications' }","105","                : state.linePopup","106","          }));","121","            linePopup: undefined,","153","  handleLinePopupToggle = ({","154","    component,","155","    index,","156","    line,","157","    name,","158","    open","159","  }: T.LinePopup & { component: string }) => {","160","    this.setState((state: State) => {","161","      const samePopup =","162","        state.linePopup !== undefined &&","163","        state.linePopup.line === line &&","164","        state.linePopup.name === name &&","165","        state.linePopup.component === component &&","166","        state.linePopup.index === index;","167","      if (open !== false && !samePopup) {","168","        return { linePopup: { component, index, line, name } };","169","      } else if (open !== true && samePopup) {","170","        return { linePopup: undefined };","171","      }","172","      return null;","173","    });","174","  };","175","","176","  handleCloseLinePopup = () => {","177","    this.setState({ linePopup: undefined });","178","  };","179","","197","            onClose={this.handleCloseLinePopup}","226","    const { components, duplications, duplicationsByLine, linePopup } = this.state;","233","          let componentProps = {};","234","          if (linePopup && snippetGroup.component.key === linePopup.component) {","235","            componentProps = {","236","              duplications,","237","              duplicationsByLine,","238","              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }","239","            };","240","          }","257","                onLinePopupToggle={this.handleLinePopupToggle}","262","                {...componentProps}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/DuplicationPopup.tsx":[{"add":["104","      <div className=\"source-viewer-bubble-popup abs-width-400\">","105","        {this.props.inRemovedComponent && (","106","          <Alert variant=\"warning\">","107","            {translate('duplications.dups_found_on_deleted_resource')}","108","          <\/Alert>","109","        )}","110","        {duplications.length > 0 && (","111","          <>","112","            <h6 className=\"spacer-bottom\">","113","              {translate('component_viewer.transition.duplication')}","114","            <\/h6>","115","            {duplications.map(duplication => (","116","              <div className=\"spacer-top text-ellipsis\" key={duplication.file.key}>","117","                <div className=\"component-name\">","118","                  {this.isDifferentComponent(duplication.file, this.props.sourceViewerFile) && (","119","                    <>","120","                      <div className=\"component-name-parent\">","121","                        <QualifierIcon className=\"little-spacer-right\" qualifier=\"TRK\" \/>","122","                        <Link to={getProjectUrl(duplication.file.project)}>","123","                          {duplication.file.projectName}","124","                        <\/Link>","125","                      <\/div>","126","                      {duplication.file.subProject && duplication.file.subProjectName && (","128","                          <QualifierIcon className=\"little-spacer-right\" qualifier=\"BRC\" \/>","129","                          {duplication.file.subProjectName}","131","                      )}","132","                    <\/>","133","                  )}","135","                  {duplication.file.key !== this.props.sourceViewerFile.key && (","136","                    <div className=\"component-name-path\">","137","                      {this.renderDuplication(","138","                        duplication.file,","139","                        <>","140","                          <span>{collapsedDirFromPath(duplication.file.name)}<\/span>","141","                          <span className=\"component-name-file\">","142","                            {fileFromPath(duplication.file.name)}","143","                          <\/span>","144","                        <\/>","145","                      )}","146","                    <\/div>","147","                  )}","148","","149","                  <div className=\"component-name-path\">","150","                    {'Lines: '}","151","                    {duplication.blocks.map((block, index) => (","152","                      <React.Fragment key={index}>","156","                            {block.from}","157","                            {' \u2013 '}","158","                            {block.from + block.size - 1}","159","                          <\/>,","160","                          block.from","162","                        {index < duplication.blocks.length - 1 && ', '}","163","                      <\/React.Fragment>","164","                    ))}","167","              <\/div>","168","            ))}","169","          <\/>","170","        )}","171","      <\/div>"],"delete":["22","import { DropdownOverlay } from 'sonar-ui-common\/components\/controls\/Dropdown';","25","import { PopupPlacement } from 'sonar-ui-common\/components\/ui\/popups';","38","  onClose: () => void;","67","    this.props.onClose();","108","      <DropdownOverlay placement={PopupPlacement.RightTop}>","109","        <div className=\"source-viewer-bubble-popup abs-width-400\">","110","          {this.props.inRemovedComponent && (","111","            <Alert variant=\"warning\">","112","              {translate('duplications.dups_found_on_deleted_resource')}","113","            <\/Alert>","114","          )}","115","          {duplications.length > 0 && (","116","            <>","117","              <h6 className=\"spacer-bottom\">","118","                {translate('component_viewer.transition.duplication')}","119","              <\/h6>","120","              {duplications.map(duplication => (","121","                <div className=\"spacer-top text-ellipsis\" key={duplication.file.key}>","122","                  <div className=\"component-name\">","123","                    {this.isDifferentComponent(duplication.file, this.props.sourceViewerFile) && (","124","                      <>","126","                          <QualifierIcon className=\"little-spacer-right\" qualifier=\"TRK\" \/>","127","                          <Link to={getProjectUrl(duplication.file.project)}>","128","                            {duplication.file.projectName}","129","                          <\/Link>","131","                        {duplication.file.subProject && duplication.file.subProjectName && (","132","                          <div className=\"component-name-parent\">","133","                            <QualifierIcon className=\"little-spacer-right\" qualifier=\"BRC\" \/>","134","                            {duplication.file.subProjectName}","135","                          <\/div>","136","                        )}","137","                      <\/>","138","                    )}","140","                    {duplication.file.key !== this.props.sourceViewerFile.key && (","141","                      <div className=\"component-name-path\">","145","                            <span>{collapsedDirFromPath(duplication.file.name)}<\/span>","146","                            <span className=\"component-name-file\">","147","                              {fileFromPath(duplication.file.name)}","148","                            <\/span>","149","                          <\/>","151","                      <\/div>","152","                    )}","153","","154","                    <div className=\"component-name-path\">","155","                      {'Lines: '}","156","                      {duplication.blocks.map((block, index) => (","157","                        <React.Fragment key={index}>","158","                          {this.renderDuplication(","159","                            duplication.file,","160","                            <>","161","                              {block.from}","162","                              {' \u2013 '}","163","                              {block.from + block.size - 1}","164","                            <\/>,","165","                            block.from","166","                          )}","167","                          {index < duplication.blocks.length - 1 && ', '}","168","                        <\/React.Fragment>","169","                      ))}","170","                    <\/div>","173","              ))}","174","            <\/>","175","          )}","176","        <\/div>","177","      <\/DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineDuplicationBlock-test.tsx":[{"add":["21","import Toggler from 'sonar-ui-common\/components\/controls\/Toggler';","23","import { LineDuplicationBlock, LineDuplicationBlockProps } from '..\/LineDuplicationBlock';","25","it('should render correctly', () => {","26","  expect(shallowRender()).toMatchSnapshot('default');","27","  expect(","28","    shallowRender({ line: { line: 3, duplicated: false }, duplicated: false })","29","  ).toMatchSnapshot('not duplicated');","30","});","31","","32","it('should correctly open\/close the dropdown', () => {","33","  const wrapper = shallowRender();","34","  click(wrapper.find('div[role=\"button\"]'));","35","  expect(wrapper.find(Toggler).prop('open')).toBe(true);","36","  wrapper.find(Toggler).prop('onRequestClose')();","37","  expect(wrapper.find(Toggler).prop('open')).toBe(false);","38","});","39","","40","it('should correctly call the onCick prop', () => {","41","  const line = { line: 1, duplicated: true };","42","  const onClick = jest.fn();","43","  const wrapper = shallowRender({ line, onClick });","44","","45","  \/\/ Propagate if blocks aren't loaded.","46","  click(wrapper.find('div[role=\"button\"]'));","47","  expect(onClick).toBeCalledWith(line);","48","","49","  \/\/ Don't propagate if blocks were loaded.","50","  onClick.mockClear();","51","  wrapper.setProps({ blocksLoaded: true });","52","  click(wrapper.find('div[role=\"button\"]'));","53","  expect(onClick).not.toBeCalled();","54","});","55","","56","function shallowRender(props: Partial<LineDuplicationBlockProps> = {}) {","57","  return shallow<LineDuplicationBlockProps>(","59","      blocksLoaded={false}","62","      line={{ line: 3, duplicated: true }}","64","      {...props}","67","}"],"delete":["22","import LineDuplicationBlock from '..\/LineDuplicationBlock';","24","it('render duplicated line', () => {","25","  const line = { line: 3, duplicated: true };","26","  const onPopupToggle = jest.fn();","27","  const wrapper = shallow(","31","      line={line}","32","      onPopupToggle={onPopupToggle}","33","      popupOpen={false}","37","  expect(wrapper).toMatchSnapshot();","38","  click(wrapper.find('[tabIndex]'));","39","  expect(onPopupToggle).toHaveBeenCalled();","40","});","41","","42","it('render not duplicated line', () => {","43","  const line = { line: 3, duplicated: false };","44","  const wrapper = shallow(","45","    <LineDuplicationBlock","46","      duplicated={false}","47","      index={1}","48","      line={line}","49","      onPopupToggle={jest.fn()}","50","      popupOpen={false}","51","      renderDuplicationPopup={jest.fn()}","52","    \/>","53","  );","54","  expect(wrapper).toMatchSnapshot();","55","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetGroupViewer-test.tsx":[{"add":[],"delete":["223","  const onLinePopupToggle = jest.fn();","228","    onLinePopupToggle,","243","    .prop<Function>('handleLinePopupToggle')({ line: 13, name: 'foo' });","244","  expect(onLinePopupToggle).toHaveBeenCalledWith({ component: 'a', line: 13, name: 'foo' });","245","","246","  wrapper","247","    .find('SnippetViewer')","248","    .first()","266","      duplications={undefined}","267","      duplicationsByLine={undefined}","272","      linePopup={undefined}","277","      onLinePopupToggle={jest.fn()}","324","      duplications={undefined}","325","      duplicationsByLine={undefined}","330","      linePopup={undefined}","335","      onLinePopupToggle={jest.fn()}","378","      duplications={undefined}","379","      duplicationsByLine={undefined}","384","      linePopup={undefined}","389","      onLinePopupToggle={jest.fn()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainer-test.tsx.snap":[{"add":[],"delete":["126","  onLinePopupToggle={[Function]}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineNumber.tsx":[{"add":["20","import Dropdown from 'sonar-ui-common\/components\/controls\/Dropdown';","21","import { PopupPlacement } from 'sonar-ui-common\/components\/ui\/popups';","22","import { translateWithParameters } from 'sonar-ui-common\/helpers\/l10n';","25","export interface LineNumberProps {","29","export function LineNumber({ line }: LineNumberProps) {","30","  const { line: lineNumber } = line;","31","  const hasLineNumber = !!lineNumber;","32","  return hasLineNumber ? (","33","    <td className=\"source-meta source-line-number\" data-line-number={lineNumber}>","34","      <Dropdown","35","        overlay={<LineOptionsPopup line={line} \/>}","36","        overlayPlacement={PopupPlacement.RightTop}>","37","        <span","38","          aria-label={translateWithParameters('source_viewer.line_X', lineNumber)}","39","          role=\"button\">","40","          {lineNumber}","41","        <\/span>","42","      <\/Dropdown>","43","    <\/td>","44","  ) : (","45","    <td className=\"source-meta source-line-number\" \/>","46","  );","48","","49","export default React.memo(LineNumber);"],"delete":["20","import Toggler from 'sonar-ui-common\/components\/controls\/Toggler';","23","interface Props {","25","  onPopupToggle: (linePopup: T.LinePopup) => void;","26","  popupOpen: boolean;","29","export default class LineNumber extends React.PureComponent<Props> {","30","  handleClick = (event: React.MouseEvent<HTMLElement>) => {","31","    event.preventDefault();","32","    event.stopPropagation();","33","    event.currentTarget.blur();","34","    this.props.onPopupToggle({ line: this.props.line.line, name: 'line-number' });","35","  };","36","","37","  handleTogglePopup = (open: boolean) => {","38","    this.props.onPopupToggle({ line: this.props.line.line, name: 'line-number', open });","39","  };","40","","41","  closePopup = () => {","42","    this.handleTogglePopup(false);","43","  };","44","","45","  render() {","46","    const { line, popupOpen } = this.props;","47","    const { line: lineNumber } = line;","48","    const hasLineNumber = !!lineNumber;","49","    return hasLineNumber ? (","50","      <td","51","        className=\"source-meta source-line-number\"","52","        data-line-number={lineNumber}","53","        onClick={this.handleClick}","54","        \/\/ eslint-disable-next-line jsx-a11y\/no-noninteractive-element-to-interactive-role","55","        role=\"button\"","56","        tabIndex={0}>","57","        <Toggler","58","          onRequestClose={this.closePopup}","59","          open={popupOpen}","60","          overlay={<LineOptionsPopup line={line} \/>}","61","        \/>","62","      <\/td>","63","    ) : (","64","      <td className=\"source-meta source-line-number\" \/>","65","    );","66","  }"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineDuplicationBlock.tsx":[{"add":["21","import { DropdownOverlay } from 'sonar-ui-common\/components\/controls\/Dropdown';","24","import { PopupPlacement } from 'sonar-ui-common\/components\/ui\/popups';","27","export interface LineDuplicationBlockProps {","28","  blocksLoaded: boolean;","32","  onClick?: (line: T.SourceLine) => void;","36","export function LineDuplicationBlock(props: LineDuplicationBlockProps) {","37","  const { blocksLoaded, duplicated, index, line } = props;","38","  const [dropdownOpen, setDropdownOpen] = React.useState(false);","40","  const className = classNames('source-meta', 'source-line-duplications', {","41","    'source-line-duplicated': duplicated","42","  });","44","  return duplicated ? (","45","    <td className={className} data-index={index} data-line-number={line.line}>","46","      <Tooltip","47","        overlay={dropdownOpen ? undefined : translate('source_viewer.tooltip.duplicated_block')}","48","        placement=\"right\">","49","        <div>","50","          <Toggler","51","            onRequestClose={() => setDropdownOpen(false)}","52","            open={dropdownOpen}","53","            overlay={","54","              <DropdownOverlay placement={PopupPlacement.RightTop}>","55","                {props.renderDuplicationPopup(index, line.line)}","56","              <\/DropdownOverlay>","57","            }>","59","              aria-label={translate('source_viewer.tooltip.duplicated_block')}","61","              onClick={() => {","62","                setDropdownOpen(true);","63","                if (!blocksLoaded && line.duplicated && props.onClick) {","64","                  props.onClick(line);","65","                }","66","              }}","70","          <\/Toggler>","71","        <\/div>","72","      <\/Tooltip>","73","    <\/td>","74","  ) : (","75","    <td className={className} data-index={index} data-line-number={line.line}>","76","      <div className=\"source-line-bar\" \/>","77","    <\/td>","78","  );","80","","81","export default React.memo(LineDuplicationBlock);"],"delete":["25","interface Props {","29","  onPopupToggle: (linePopup: T.LinePopup) => void;","30","  popupOpen: boolean;","34","export default class LineDuplicationBlock extends React.PureComponent<Props> {","35","  handleClick = (event: React.MouseEvent<HTMLElement>) => {","36","    event.preventDefault();","37","    event.stopPropagation();","38","    event.currentTarget.blur();","39","    this.props.onPopupToggle({","40","      index: this.props.index,","41","      line: this.props.line.line,","42","      name: 'duplications'","43","    });","44","  };","46","  handleTogglePopup = (open: boolean) => {","47","    this.props.onPopupToggle({","48","      index: this.props.index,","49","      line: this.props.line.line,","50","      name: 'duplications',","51","      open","52","    });","53","  };","55","  closePopup = () => {","56","    this.handleTogglePopup(false);","57","  };","58","","59","  render() {","60","    const { duplicated, index, line, popupOpen } = this.props;","61","    const className = classNames('source-meta', 'source-line-duplications-extra', {","62","      'source-line-duplicated': duplicated","63","    });","64","","65","    return duplicated ? (","66","      <td className={className} data-index={index} data-line-number={line.line}>","67","        <Toggler","68","          onRequestClose={this.closePopup}","69","          open={popupOpen}","70","          overlay={this.props.renderDuplicationPopup(index, line.line)}>","71","          <Tooltip","72","            overlay={popupOpen ? undefined : translate('source_viewer.tooltip.duplicated_block')}","73","            placement=\"right\">","76","              onClick={this.handleClick}","80","          <\/Tooltip>","81","        <\/Toggler>","82","      <\/td>","83","    ) : (","84","      <td className={className} data-index={index} data-line-number={line.line}>","85","        <div className=\"source-line-bar\" \/>","86","      <\/td>","87","    );","88","  }"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/Line-test.tsx.snap":[{"add":["7","  <Memo(LineNumber)","22","  <Memo(LineSCM)","149","  <Memo(LineNumber)","164","  <Memo(LineSCM)","291","  <Memo(LineNumber)","306","  <Memo(LineSCM)","324","  <Memo(LineCoverage)","448","  <Memo(LineNumber)","463","  <Memo(LineSCM)","481","  <Memo(LineDuplicationBlock)","482","    blocksLoaded={true}","499","    onClick={[MockFunction]}","502","  <Memo(LineDuplicationBlock)","503","    blocksLoaded={true}","522","  <Memo(LineDuplicationBlock)","523","    blocksLoaded={true}","651","  <Memo(LineNumber)","666","  <Memo(LineSCM)","681","  <Memo(LineIssuesIndicator)","748","    issuesOpen={false}","873","  <Memo(LineNumber)"],"delete":["7","  <LineNumber","21","    onPopupToggle={[MockFunction]}","22","    popupOpen={false}","24","  <LineSCM","38","    onPopupToggle={[MockFunction]}","39","    popupOpen={false}","153","  <LineNumber","167","    onPopupToggle={[MockFunction]}","168","    popupOpen={false}","170","  <LineSCM","184","    onPopupToggle={[MockFunction]}","185","    popupOpen={false}","299","  <LineNumber","313","    onPopupToggle={[MockFunction]}","314","    popupOpen={false}","316","  <LineSCM","330","    onPopupToggle={[MockFunction]}","331","    popupOpen={false}","336","  <LineCoverage","460","  <LineNumber","474","    onPopupToggle={[MockFunction]}","475","    popupOpen={false}","477","  <LineSCM","491","    onPopupToggle={[MockFunction]}","492","    popupOpen={false}","497","  <LineDuplications","498","    line={","499","      Object {","500","        \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","501","        \"coverageStatus\": \"covered\",","502","        \"coveredConditions\": 2,","503","        \"duplicated\": false,","504","        \"isNew\": true,","505","        \"line\": 16,","506","        \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","507","        \"scmDate\": \"2018-12-11T10:48:39+0100\",","508","        \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","509","      }","510","    }","511","    onClick={[MockFunction]}","512","  \/>","513","  <LineDuplicationBlock","530","    onPopupToggle={[MockFunction]}","531","    popupOpen={false}","534","  <LineDuplicationBlock","551","    onPopupToggle={[MockFunction]}","552","    popupOpen={false}","555","  <LineDuplicationBlock","572","    onPopupToggle={[MockFunction]}","573","    popupOpen={false}","685","  <LineNumber","699","    onPopupToggle={[MockFunction]}","700","    popupOpen={false}","702","  <LineSCM","716","    onPopupToggle={[MockFunction]}","717","    popupOpen={false}","719","  <LineIssuesIndicator","910","  <LineNumber","924","    onPopupToggle={[MockFunction]}","925","    popupOpen={false}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineIssuesIndicator-test.tsx.snap":[{"add":["2","exports[`should render correctly: default 1`] = `","8","    aria-label=\"source_viewer.issues_on_line.show\"","9","    onClick={[Function]}","10","    role=\"button\"","11","    tabIndex={0}","13","    <IssueIcon","14","      type=\"BUG\"","15","    \/>","16","    <span","17","      className=\"source-line-issues-counter\"","18","    >","19","      2","20","    <\/span>","25","exports[`should render correctly: diff issue types 1`] = `","31","    aria-label=\"source_viewer.issues_on_line.show\"","32","    onClick={[Function]}","33","    role=\"button\"","34","    tabIndex={0}","36","    <IssueIcon","37","      type=\"VULNERABILITY\"","38","    \/>","39","    <span","40","      className=\"source-line-issues-counter\"","41","    >","42","      2","43","    <\/span>","48","exports[`should render correctly: no issues 1`] = `"],"delete":["2","exports[`should render correctly 1`] = `","6","  onClick={[Function]}","7","  role=\"button\"","8","  tabIndex={0}","10","  <IssueIcon","11","    type=\"BUG\"","12","  \/>","14","    className=\"source-line-issues-counter\"","16","    2","21","exports[`should render correctly 2`] = `","25","  onClick={[Function]}","26","  role=\"button\"","27","  tabIndex={0}","29","  <IssueIcon","30","    type=\"VULNERABILITY\"","31","  \/>","33","    className=\"source-line-issues-counter\"","35","    2","40","exports[`should render correctly for no issues 1`] = `"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/SnippetViewer-test.tsx":[{"add":[],"delete":["129","      handleLinePopupToggle={jest.fn()}","138","      linePopup={undefined}","163","      handleLinePopupToggle={jest.fn()}","172","      linePopup={undefined}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineDuplicationBlock-test.tsx.snap":[{"add":["2","exports[`should render correctly: default 1`] = `","4","  className=\"source-meta source-line-duplications source-line-duplicated\"","8","  <Tooltip","9","    overlay=\"source_viewer.tooltip.duplicated_block\"","10","    placement=\"right\"","12","    <div>","13","      <Toggler","14","        onRequestClose={[Function]}","15","        open={false}","16","        overlay={","17","          <DropdownOverlay","18","            placement=\"right-top\"","19","          \/>","20","        }","21","      >","22","        <div","23","          aria-label=\"source_viewer.tooltip.duplicated_block\"","24","          className=\"source-line-bar\"","25","          onClick={[Function]}","26","          role=\"button\"","27","          tabIndex={0}","28","        \/>","29","      <\/Toggler>","30","    <\/div>","31","  <\/Tooltip>","35","exports[`should render correctly: not duplicated 1`] = `","37","  className=\"source-meta source-line-duplications\""],"delete":["2","exports[`render duplicated line 1`] = `","4","  className=\"source-meta source-line-duplications-extra source-line-duplicated\"","8","  <Toggler","9","    onRequestClose={[Function]}","10","    open={false}","12","    <Tooltip","13","      overlay=\"source_viewer.tooltip.duplicated_block\"","14","      placement=\"right\"","15","    >","16","      <div","17","        className=\"source-line-bar\"","18","        onClick={[Function]}","19","        role=\"button\"","20","        tabIndex={0}","21","      \/>","22","    <\/Tooltip>","23","  <\/Toggler>","27","exports[`render not duplicated line 1`] = `","29","  className=\"source-meta source-line-duplications-extra\""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/SnippetViewer.tsx":[{"add":["53","  loadDuplications?: (line: T.SourceLine) => void;","138","    const noop = () => {};","163","        loadDuplications={this.props.loadDuplications || noop}","166","        onIssueSelect={noop}","167","        onIssueUnselect={noop}","210","    const displayDuplications =","211","      Boolean(this.props.loadDuplications) && snippet.some(s => !!s.duplicated);"],"delete":["44","  handleLinePopupToggle: (line: T.SourceLine) => void;","54","  linePopup?: T.LinePopup;","55","  loadDuplications: (line: T.SourceLine) => void;","164","        linePopup={this.props.linePopup}","165","        loadDuplications={this.props.loadDuplications}","168","        onIssueSelect={() => {}}","169","        onIssueUnselect={() => {}}","172","        onLinePopupToggle={this.props.handleLinePopupToggle}","213","    const displayDuplications = snippet.some(s => !!s.duplicated);"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainerRenderer-test.tsx":[{"add":[],"delete":["41","      linePopup={undefined}","45","      onLinePopupToggle={jest.fn()}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/SCMPopup-test.tsx.snap":[{"add":["2","exports[`should render correctly: default 1`] = `","3","<div","4","  className=\"source-viewer-bubble-popup abs-width-400\"","5",">","6","  <div>","7","    <h4>","8","      author","9","    <\/h4>","10","    foo","11","  <\/div>","12","  <div","13","    className=\"spacer-top\"","14","  >","15","    <h4>","16","      source_viewer.tooltip.scm.commited_on","17","    <\/h4>","18","    <DateFormatter","19","      date=\"2017-01-01\"","20","    \/>","21","  <\/div>","22","  <div","23","    className=\"spacer-top\"","24","  >","25","    <h4>","26","      source_viewer.tooltip.scm.revision","27","    <\/h4>","28","    bar","29","  <\/div>","30","<\/div>","31","`;","32","","33","exports[`should render correctly: no author 1`] = `","34","<div","35","  className=\"source-viewer-bubble-popup abs-width-400\"","38","    className=\"\"","40","    <h4>","41","      source_viewer.tooltip.scm.commited_on","42","    <\/h4>","43","    <DateFormatter","44","      date=\"2017-01-01\"","45","    \/>","47","  <div","48","    className=\"spacer-top\"","49","  >","50","    <h4>","51","      source_viewer.tooltip.scm.revision","52","    <\/h4>","53","    bar","54","  <\/div>","55","<\/div>","56","`;","57","","58","exports[`should render correctly: no date 1`] = `","59","<div","60","  className=\"source-viewer-bubble-popup abs-width-400\"","61",">","62","  <div>","63","    <h4>","64","      author","65","    <\/h4>","66","    foo","67","  <\/div>","68","  <div","69","    className=\"spacer-top\"","70","  >","71","    <h4>","72","      source_viewer.tooltip.scm.revision","73","    <\/h4>","74","    bar","75","  <\/div>","76","<\/div>","77","`;","78","","79","exports[`should render correctly: no revision 1`] = `","80","<div","81","  className=\"source-viewer-bubble-popup abs-width-400\"","82",">","83","  <div>","84","    <h4>","85","      author","86","    <\/h4>","87","    foo","88","  <\/div>","89","  <div","90","    className=\"spacer-top\"","91","  >","92","    <h4>","93","      source_viewer.tooltip.scm.commited_on","94","    <\/h4>","95","    <DateFormatter","96","      date=\"2017-01-01\"","97","    \/>","98","  <\/div>","99","<\/div>"],"delete":["2","exports[`should render 1`] = `","3","<DropdownOverlay","4","  placement=\"right-top\"","7","    className=\"source-viewer-bubble-popup abs-width-400\"","9","    <div>","10","      foo","11","    <\/div>","12","    <div","13","      className=\"spacer-top\"","14","    >","15","      <DateFormatter","16","        date=\"2017-01-01\"","17","      \/>","18","    <\/div>","20","<\/DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineIssuesIndicator-test.tsx":[{"add":["23","import { LineIssuesIndicator, LineIssuesIndicatorProps } from '..\/LineIssuesIndicator';","26","  expect(shallowRender()).toMatchSnapshot('default');","27","  expect(","28","    shallowRender({","29","      issues: [","30","        mockIssue(false, { key: 'foo', type: 'VULNERABILITY' }),","31","        mockIssue(false, { key: 'bar', type: 'SECURITY_HOTSPOT' })","32","      ]","33","    })","34","  ).toMatchSnapshot('diff issue types');","35","  expect(shallowRender({ issues: [] })).toMatchSnapshot('no issues');","36","});","37","","38","it('should correctly handle click', () => {","42","  click(wrapper.find('span[role=\"button\"]'));","46","function shallowRender(props: Partial<LineIssuesIndicatorProps> = {}) {"],"delete":["23","import LineIssuesIndicator from '..\/LineIssuesIndicator';","28","  expect(wrapper).toMatchSnapshot();","30","  click(wrapper);","32","","33","  const nextIssues = [","34","    mockIssue(false, { key: 'foo', type: 'VULNERABILITY' }),","35","    mockIssue(false, { key: 'bar', type: 'SECURITY_HOTSPOT' })","36","  ];","37","  wrapper.setProps({ issues: nextIssues });","38","  expect(wrapper).toMatchSnapshot();","41","it('should render correctly for no issues', () => {","42","  expect(shallowRender({ issues: [] })).toMatchSnapshot();","43","});","44","","45","function shallowRender(props: Partial<LineIssuesIndicator['props']> = {}) {"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineSCM-test.tsx":[{"add":["19","\/* eslint-disable sonarjs\/no-duplicate-string *\/","22","import { LineSCM, LineSCMProps } from '..\/LineSCM';","24","it('should render correctly', () => {","25","  const scmInfo = { scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","26","","27","  expect(shallowRender()).toMatchSnapshot('default');","28","  expect(","29","    shallowRender({ line: { line: 3, ...scmInfo }, previousLine: { line: 2, ...scmInfo } })","30","  ).toMatchSnapshot('same commit');","31","  expect(shallowRender({ line: { line: 3, scmDate: '2017-01-01' } })).toMatchSnapshot('no author');","34","function shallowRender(props: Partial<LineSCMProps> = {}) {","35","  return shallow(","36","    <LineSCM","37","      line={{ line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' }}","38","      previousLine={{ line: 2, scmAuthor: 'bar', scmDate: '2017-01-02' }}","39","      {...props}","40","    \/>","42","}"],"delete":["21","import { click } from 'sonar-ui-common\/helpers\/testUtils';","22","import LineSCM from '..\/LineSCM';","24","it('render scm details', () => {","25","  const line = { line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' };","26","  const previousLine = { line: 2, scmAuthor: 'bar', scmDate: '2017-01-02' };","27","  const wrapper = shallow(","28","    <LineSCM line={line} onPopupToggle={jest.fn()} popupOpen={false} previousLine={previousLine} \/>","29","  );","30","  expect(wrapper).toMatchSnapshot();","33","it('render scm details for the first line', () => {","34","  const line = { line: 3, scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","35","  const wrapper = shallow(","36","    <LineSCM line={line} onPopupToggle={jest.fn()} popupOpen={false} previousLine={undefined} \/>","38","  expect(wrapper).toMatchSnapshot();","39","});","40","","41","it('does not render scm details', () => {","42","  const line = { line: 3, scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","43","  const previousLine = { line: 2, scmRevision: 'foo', scmAuthor: 'foo', scmDate: '2017-01-01' };","44","  const wrapper = shallow(","45","    <LineSCM line={line} onPopupToggle={jest.fn()} popupOpen={false} previousLine={previousLine} \/>","46","  );","47","  expect(wrapper).toMatchSnapshot();","48","});","49","","50","it('renders ellipsis when no author info', () => {","51","  const line = { line: 3, scmRevision: 'foo', scmDate: '2017-01-01' };","52","  const previousLine = { line: 2, scmRevision: 'bar', scmDate: '2017-01-01' };","53","  const wrapper = shallow(","54","    <LineSCM line={line} onPopupToggle={jest.fn()} popupOpen={false} previousLine={previousLine} \/>","55","  );","56","  expect(wrapper).toMatchSnapshot();","57","});","58","","59","it('should open popup', () => {","60","  const line = { line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' };","61","  const onPopupToggle = jest.fn();","62","  const wrapper = shallow(","63","    <LineSCM line={line} onPopupToggle={onPopupToggle} popupOpen={false} previousLine={undefined} \/>","64","  );","65","  click(wrapper.find('[role=\"button\"]'));","66","  expect(onPopupToggle).toBeCalledWith({ line: 3, name: 'scm' });","67","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/SnippetViewer-test.tsx.snap":[{"add":[],"delete":["63","          onLinePopupToggle={[MockFunction]}","112","          onLinePopupToggle={[MockFunction]}","174","          onLinePopupToggle={[MockFunction]}","273","          onLinePopupToggle={[MockFunction]}","322","          onLinePopupToggle={[MockFunction]}","384","          onLinePopupToggle={[MockFunction]}","446","          onLinePopupToggle={[MockFunction]}","534","          onLinePopupToggle={[MockFunction]}","583","          onLinePopupToggle={[MockFunction]}","645","          onLinePopupToggle={[MockFunction]}","707","          onLinePopupToggle={[MockFunction]}","769","          onLinePopupToggle={[MockFunction]}","831","          onLinePopupToggle={[MockFunction]}","893","          onLinePopupToggle={[MockFunction]}","993","          onLinePopupToggle={[MockFunction]}","1043","          onLinePopupToggle={[MockFunction]}","1106","          onLinePopupToggle={[MockFunction]}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":[{"add":["20","import Dropdown from 'sonar-ui-common\/components\/controls\/Dropdown';","21","import { PopupPlacement } from 'sonar-ui-common\/components\/ui\/popups';","22","import { translate, translateWithParameters } from 'sonar-ui-common\/helpers\/l10n';","25","export interface LineSCMProps {","30","export function LineSCM({ line, previousLine }: LineSCMProps) {","31","  const hasPopup = !!line.line;","32","  const cell = (","33","    <div className=\"source-line-scm-inner\">","34","      {isSCMChanged(line, previousLine) ? line.scmAuthor || '\u2026' : ' '}","35","    <\/div>","36","  );","38","  if (hasPopup) {","39","    let ariaLabel = translate('source_viewer.click_for_scm_info');","40","    if (line.scmAuthor) {","41","      ariaLabel = `${translateWithParameters(","42","        'source_viewer.author_X',","43","        line.scmAuthor","44","      )}, ${ariaLabel}`;","45","    }","47","    return (","48","      <td className=\"source-meta source-line-scm\" data-line-number={line.line}>","49","        <Dropdown overlay={<SCMPopup line={line} \/>} overlayPlacement={PopupPlacement.RightTop}>","50","          <div aria-label={ariaLabel} role=\"button\">","51","            {cell}","52","          <\/div>","53","        <\/Dropdown>","55","    );","56","  } else {","57","    return (","72","","73","export default React.memo(LineSCM);"],"delete":["20","import Toggler from 'sonar-ui-common\/components\/controls\/Toggler';","23","interface Props {","25","  onPopupToggle: (linePopup: T.LinePopup) => void;","26","  popupOpen: boolean;","30","export default class LineSCM extends React.PureComponent<Props> {","31","  handleClick = (event: React.MouseEvent<HTMLElement>) => {","32","    event.preventDefault();","33","    event.stopPropagation();","34","    event.currentTarget.blur();","35","    this.props.onPopupToggle({ line: this.props.line.line, name: 'scm' });","36","  };","38","  handleTogglePopup = (open: boolean) => {","39","    this.props.onPopupToggle({ line: this.props.line.line, name: 'scm', open });","40","  };","42","  closePopup = () => {","43","    this.handleTogglePopup(false);","44","  };","45","","46","  render() {","47","    const { line, popupOpen, previousLine } = this.props;","48","    const hasPopup = !!line.line;","49","    const cell = isSCMChanged(line, previousLine) && (","50","      <div className=\"source-line-scm-inner\" data-author={line.scmAuthor || '\u2026'} \/>","51","    );","52","    return hasPopup ? (","53","      <td","54","        className=\"source-meta source-line-scm\"","55","        data-line-number={line.line}","56","        onClick={this.handleClick}","57","        \/\/ eslint-disable-next-line jsx-a11y\/no-noninteractive-element-to-interactive-role","58","        role=\"button\"","59","        tabIndex={0}>","60","        <Toggler","61","          onRequestClose={this.closePopup}","62","          open={popupOpen}","63","          overlay={<SCMPopup line={line} \/>}>","64","          {cell}","65","        <\/Toggler>","67","    ) : ("]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.tsx":[{"add":["88","      branchLike,","89","      displayAllIssues,","91","      displayDuplications,","92","      displayIssueLocationsCount,","93","      displayIssueLocationsLink,","94","      displayLocationMarkers,","95","      highlightedLocationMessage,","96","      displayIssues,","100","      highlighted,","101","      highlightedSymbols,","102","      issueLocations,","104","      issues,","105","      last,","106","      line,","107","      openIssues,","108","      previousLine,","109","      secondaryIssueLocations,","110","      selectedIssue,","111","      verticalBuffer","113","","115","      'source-line-highlighted': highlighted,","120","      'source-line-last': last === true","123","    const bottomPadding = verticalBuffer ? verticalBuffer * LINE_HEIGHT : undefined;","127","        <LineNumber line={line} \/>","129","        {displaySCM && <LineSCM line={line} previousLine={previousLine} \/>}","130","        {displayIssues && !displayAllIssues ? (","132","            issues={issues}","133","            issuesOpen={openIssues}","141","        {displayDuplications && (","143","            blocksLoaded={duplicationsCount > 0}","144","            duplicated={Boolean(line.duplicated)}","145","            index={0}","146","            key={0}","148","            onClick={this.props.loadDuplications}","151","        )}","153","        {duplicationsCount > 1 &&","154","          times(duplicationsCount - 1, index => (","155","            <LineDuplicationBlock","156","              blocksLoaded={true}","157","              duplicated={duplications.includes(index + 1)}","158","              index={index + 1}","159","              key={index + 1}","160","              line={this.props.line}","161","              renderDuplicationPopup={this.props.renderDuplicationPopup}","162","            \/>","163","          ))}","164","","165","        {displayCoverage && <LineCoverage line={line} \/>}","168","          branchLike={branchLike}","169","          displayIssueLocationsCount={displayIssueLocationsCount}","170","          displayIssueLocationsLink={displayIssueLocationsLink}","171","          displayLocationMarkers={displayLocationMarkers}","172","          highlightedLocationMessage={highlightedLocationMessage}","173","          highlightedSymbols={highlightedSymbols}","174","          issueLocations={issueLocations}","176","          issues={issues}","185","          secondaryIssueLocations={secondaryIssueLocations}","186","          selectedIssue={selectedIssue}","187","          showIssues={openIssues || displayAllIssues}"],"delete":["27","import LineDuplications from '.\/LineDuplications';","52","  linePopup: T.LinePopup | undefined;","54","  onLinePopupToggle: (linePopup: T.LinePopup) => void;","75","  isPopupOpen = (name: string, index?: number) => {","76","    const { line, linePopup } = this.props;","77","    return (","78","      linePopup !== undefined &&","79","      linePopup.index === index &&","80","      linePopup.line === line.line &&","81","      linePopup.name === name","82","    );","83","  };","84","","106","      line","109","      'source-line-highlighted': this.props.highlighted,","114","      'source-line-last': this.props.last === true","117","    const bottomPadding = this.props.verticalBuffer","118","      ? this.props.verticalBuffer * LINE_HEIGHT","119","      : undefined;","123","        <LineNumber","124","          line={line}","125","          onPopupToggle={this.props.onLinePopupToggle}","126","          popupOpen={this.isPopupOpen('line-number')}","127","        \/>","129","        {displaySCM && (","130","          <LineSCM","131","            line={line}","132","            onPopupToggle={this.props.onLinePopupToggle}","133","            popupOpen={this.isPopupOpen('scm')}","134","            previousLine={this.props.previousLine}","135","          \/>","136","        )}","137","        {this.props.displayIssues && !this.props.displayAllIssues ? (","139","            issues={this.props.issues}","147","        {this.props.displayDuplications && (","148","          <LineDuplications line={line} onClick={this.props.loadDuplications} \/>","149","        )}","150","","151","        {times(duplicationsCount, index => (","153","            duplicated={duplications.includes(index)}","154","            index={index}","155","            key={index}","157","            onPopupToggle={this.props.onLinePopupToggle}","158","            popupOpen={this.isPopupOpen('duplications', index)}","161","        ))}","163","        {this.props.displayCoverage && <LineCoverage line={line} \/>}","166","          branchLike={this.props.branchLike}","167","          displayIssueLocationsCount={this.props.displayIssueLocationsCount}","168","          displayIssueLocationsLink={this.props.displayIssueLocationsLink}","169","          displayLocationMarkers={this.props.displayLocationMarkers}","170","          highlightedLocationMessage={this.props.highlightedLocationMessage}","171","          highlightedSymbols={this.props.highlightedSymbols}","172","          issueLocations={this.props.issueLocations}","174","          issues={this.props.issues}","183","          secondaryIssueLocations={this.props.secondaryIssueLocations}","184","          selectedIssue={this.props.selectedIssue}","185","          showIssues={this.props.openIssues || this.props.displayAllIssues}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCoverage.tsx":[{"add":["23","export interface LineCoverageProps {","27","export function LineCoverage({ line }: LineCoverageProps) {","31","  const status = getStatusTooltip(line);","32","","35","      <Tooltip overlay={status} placement=\"right\">","36","        <div aria-label={status} className=\"source-line-bar\" \/>","68","","69","export default React.memo(LineCoverage);"],"delete":["23","interface Props {","27","export default function LineCoverage({ line }: Props) {","33","      <Tooltip overlay={getStatusTooltip(line)} placement=\"right\">","34","        <div className=\"source-line-bar\" \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/SCMPopup.tsx":[{"add":["22","import { translate } from 'sonar-ui-common\/helpers\/l10n';","24","export interface SCMPopupProps {","28","export function SCMPopup({ line }: SCMPopupProps) {","29","  const hasAuthor = line.scmAuthor !== undefined && line.scmAuthor !== '';","30","  const hasDate = line.scmDate !== undefined;","32","    <div className=\"source-viewer-bubble-popup abs-width-400\">","33","      {hasAuthor && (","34","        <div>","35","          <h4>{translate('author')}<\/h4>","36","          {line.scmAuthor}","37","        <\/div>","38","      )}","39","      {hasDate && (","40","        <div className={classNames({ 'spacer-top': hasAuthor })}>","41","          <h4>{translate('source_viewer.tooltip.scm.commited_on')}<\/h4>","42","          <DateFormatter date={line.scmDate!} \/>","43","        <\/div>","44","      )}","45","      {line.scmRevision && (","46","        <div className={classNames({ 'spacer-top': hasAuthor || hasDate })}>","47","          <h4>{translate('source_viewer.tooltip.scm.revision')}<\/h4>","48","          {line.scmRevision}","49","        <\/div>","50","      )}","51","    <\/div>","54","","55","export default React.memo(SCMPopup);"],"delete":["21","import { DropdownOverlay } from 'sonar-ui-common\/components\/controls\/Dropdown';","23","import { PopupPlacement } from 'sonar-ui-common\/components\/ui\/popups';","25","interface Props {","29","export default function SCMPopup({ line }: Props) {","30","  const hasAuthor = line.scmAuthor !== '';","32","    <DropdownOverlay placement={PopupPlacement.RightTop}>","33","      <div className=\"source-viewer-bubble-popup abs-width-400\">","34","        {hasAuthor && <div>{line.scmAuthor}<\/div>}","35","        {line.scmDate && (","36","          <div className={classNames({ 'spacer-top': hasAuthor })}>","37","            <DateFormatter date={line.scmDate} \/>","38","          <\/div>","39","        )}","40","        {line.scmRevision && <div className=\"spacer-top\">{line.scmRevision}<\/div>}","41","      <\/div>","42","    <\/DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainerRenderer-test.tsx.snap":[{"add":[],"delete":["137","        handleLinePopupToggle={[MockFunction]}","243","        loadDuplications={[Function]}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetGroupViewer.tsx":[{"add":["318","        duplications={this.props.duplications}","319","        duplicationsByLine={this.props.duplicationsByLine}","346","    const { branchLike, issue, issuesByLine, lastSnippetGroup, snippetGroup } = this.props;","367","      <div className=\"component-source-container\" ref={this.rootNodeRef}>"],"delete":["19","import * as classNames from 'classnames';","45","  linePopup?: T.LinePopup;","50","  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;","275","  handleLinePopupToggle = (linePopup: T.LinePopup) => {","276","    this.props.onLinePopupToggle({","277","      ...linePopup,","278","      component: this.props.snippetGroup.component.key","279","    });","280","  };","281","","330","        handleLinePopupToggle={this.handleLinePopupToggle}","340","        linePopup={this.props.linePopup}","356","    const {","357","      branchLike,","358","      duplications,","359","      issue,","360","      issuesByLine,","361","      lastSnippetGroup,","362","      snippetGroup","363","    } = this.props;","384","      <div","385","        className={classNames('component-source-container', {","386","          'source-duplications-expanded': duplications && duplications.length > 0","387","        })}","388","        ref={this.rootNodeRef}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":[{"add":["150","    const { highlightedSymbols, lastLine, loading, sourceLines } = this.state;"],"delete":["39","  linePopup?: T.LinePopup & { component: string };","145","  handleLinePopupToggle = (params: T.LinePopup & { component: string }) => {","146","    const { component, index, line, name, open } = params;","147","    this.setState((state: State) => {","148","      const samePopup =","149","        state.linePopup !== undefined &&","150","        state.linePopup.line === line &&","151","        state.linePopup.name === name &&","152","        state.linePopup.component === component &&","153","        state.linePopup.index === index;","154","      if (open !== false && !samePopup) {","155","        return { linePopup: params };","156","      } else if (open !== true && samePopup) {","157","        return { linePopup: undefined };","158","      }","159","      return null;","160","    });","161","  };","162","","169","    const { highlightedSymbols, lastLine, linePopup, loading, sourceLines } = this.state;","182","        linePopup={linePopup}","186","        onLinePopupToggle={this.handleLinePopupToggle}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":[{"add":[],"delete":["35","  linePopup?: T.LinePopup & { component: string };","37","  onLinePopupToggle: (line: T.SourceLine) => void;","53","    linePopup,","81","              handleLinePopupToggle={props.onLinePopupToggle}","90","              linePopup={linePopup}","91","              loadDuplications={noop}"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineSCM-test.tsx.snap":[{"add":["2","exports[`should render correctly: default 1`] = `","7","  <Dropdown","9","      <Memo(SCMPopup)","10","        line={","11","          Object {","12","            \"line\": 3,","13","            \"scmAuthor\": \"foo\",","14","            \"scmDate\": \"2017-01-01\",","15","          }","16","        }","17","      \/>","18","    }","19","    overlayPlacement=\"right-top\"","20","  >","21","    <div","22","      aria-label=\"source_viewer.author_X.foo, source_viewer.click_for_scm_info\"","23","      role=\"button\"","24","    >","25","      <div","26","        className=\"source-line-scm-inner\"","27","      >","28","        foo","29","      <\/div>","30","    <\/div>","31","  <\/Dropdown>","32","<\/td>","33","`;","34","","35","exports[`should render correctly: no author 1`] = `","36","<td","37","  className=\"source-meta source-line-scm\"","38","  data-line-number={3}","39",">","40","  <Dropdown","41","    overlay={","42","      <Memo(SCMPopup)","43","        line={","44","          Object {","45","            \"line\": 3,","46","            \"scmDate\": \"2017-01-01\",","47","          }","48","        }","49","      \/>","50","    }","51","    overlayPlacement=\"right-top\"","52","  >","53","    <div","54","      aria-label=\"source_viewer.click_for_scm_info\"","55","      role=\"button\"","56","    >","57","      <div","58","        className=\"source-line-scm-inner\"","59","      >","60","        \u2026","61","      <\/div>","62","    <\/div>","63","  <\/Dropdown>","64","<\/td>","65","`;","66","","67","exports[`should render correctly: same commit 1`] = `","68","<td","69","  className=\"source-meta source-line-scm\"","70","  data-line-number={3}","71",">","72","  <Dropdown","73","    overlay={","74","      <Memo(SCMPopup)","85","    overlayPlacement=\"right-top\"","88","      aria-label=\"source_viewer.author_X.foo, source_viewer.click_for_scm_info\"","89","      role=\"button\"","90","    >","91","      <div","92","        className=\"source-line-scm-inner\"","93","      >","94","         ","95","      <\/div>","96","    <\/div>","97","  <\/Dropdown>"],"delete":["2","exports[`does not render scm details 1`] = `","6","  onClick={[Function]}","7","  role=\"button\"","8","  tabIndex={0}","10","  <Toggler","11","    onRequestClose={[Function]}","12","    open={false}","14","      <SCMPopup","25","  \/>","26","<\/td>","27","`;","28","","29","exports[`render scm details 1`] = `","30","<td","31","  className=\"source-meta source-line-scm\"","32","  data-line-number={3}","33","  onClick={[Function]}","34","  role=\"button\"","35","  tabIndex={0}","36",">","37","  <Toggler","38","    onRequestClose={[Function]}","39","    open={false}","40","    overlay={","41","      <SCMPopup","42","        line={","43","          Object {","44","            \"line\": 3,","45","            \"scmAuthor\": \"foo\",","46","            \"scmDate\": \"2017-01-01\",","47","          }","48","        }","49","      \/>","50","    }","53","      className=\"source-line-scm-inner\"","54","      data-author=\"foo\"","55","    \/>","56","  <\/Toggler>","57","<\/td>","58","`;","59","","60","exports[`render scm details for the first line 1`] = `","61","<td","62","  className=\"source-meta source-line-scm\"","63","  data-line-number={3}","64","  onClick={[Function]}","65","  role=\"button\"","66","  tabIndex={0}","67",">","68","  <Toggler","69","    onRequestClose={[Function]}","70","    open={false}","71","    overlay={","72","      <SCMPopup","73","        line={","74","          Object {","75","            \"line\": 3,","76","            \"scmAuthor\": \"foo\",","77","            \"scmDate\": \"2017-01-01\",","78","            \"scmRevision\": \"foo\",","79","          }","80","        }","81","      \/>","82","    }","83","  >","84","    <div","85","      className=\"source-line-scm-inner\"","86","      data-author=\"foo\"","87","    \/>","88","  <\/Toggler>","89","<\/td>","90","`;","91","","92","exports[`renders ellipsis when no author info 1`] = `","93","<td","94","  className=\"source-meta source-line-scm\"","95","  data-line-number={3}","96","  onClick={[Function]}","97","  role=\"button\"","98","  tabIndex={0}","99",">","100","  <Toggler","101","    onRequestClose={[Function]}","102","    open={false}","103","    overlay={","104","      <SCMPopup","105","        line={","106","          Object {","107","            \"line\": 3,","108","            \"scmDate\": \"2017-01-01\",","109","            \"scmRevision\": \"foo\",","110","          }","111","        }","112","      \/>","113","    }","114","  >","115","    <div","116","      className=\"source-line-scm-inner\"","117","      data-author=\"\u2026\"","118","    \/>","119","  <\/Toggler>"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":[{"add":["50","      duplicationsByLine={Object {}}"],"delete":["171","      onLinePopupToggle={[Function]}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["470","  loadDuplications = () => {","477","          this.setState({","480","            duplicatedFiles: r.files","481","          });","666","        <div className=\"source-viewer\" ref={node => (this.node = node)}>"],"delete":["19","import * as classNames from 'classnames';","98","  displayDuplications: boolean;","108","  linePopup?: T.LinePopup;","138","      displayDuplications: false,","247","                displayDuplications: false,","256","                linePopup: undefined,","476","  loadDuplications = (line: T.SourceLine) => {","483","          this.setState(state => ({","484","            displayDuplications: true,","487","            duplicatedFiles: r.files,","488","            linePopup:","489","              r.duplications.length === 1","490","                ? { index: 0, line: line.line, name: 'duplications' }","491","                : state.linePopup","492","          }));","501","  handleLinePopupToggle = ({ index, line, name, open }: T.LinePopup) => {","502","    this.setState((state: State) => {","503","      const samePopup =","504","        state.linePopup !== undefined &&","505","        state.linePopup.name === name &&","506","        state.linePopup.line === line &&","507","        state.linePopup.index === index;","508","      if (open !== false && !samePopup) {","509","        return { linePopup: { index, line, name } };","510","      } else if (open !== true && samePopup) {","511","        return { linePopup: undefined };","512","      }","513","      return null;","514","    });","515","  };","516","","517","  closeLinePopup = () => {","518","    this.setState({ linePopup: undefined });","519","  };","520","","597","            onClose={this.closeLinePopup}","628","        linePopup={this.state.linePopup}","640","        onLinePopupToggle={this.handleLinePopupToggle}","698","    const className = classNames('source-viewer', {","699","      'source-duplications-expanded': this.state.displayDuplications","700","    });","701","","704","        <div className={className} ref={node => (this.node = node)}>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineNumber-test.tsx.snap":[{"add":["2","exports[`should render correctly: default 1`] = `","7","  <Dropdown","9","      <Memo(LineOptionsPopup)","17","    overlayPlacement=\"right-top\"","18","  >","19","    <span","20","      aria-label=\"source_viewer.line_X.3\"","21","      role=\"button\"","22","    >","23","      3","24","    <\/span>","25","  <\/Dropdown>","28","","29","exports[`should render correctly: no line number 1`] = `","30","<td","31","  className=\"source-meta source-line-number\"","32","\/>","33","`;"],"delete":["2","exports[`render line 0 1`] = `","3","<td","4","  className=\"source-meta source-line-number\"","5","\/>","6","`;","7","","8","exports[`render line 3 1`] = `","12","  onClick={[Function]}","13","  role=\"button\"","14","  tabIndex={0}","16","  <Toggler","17","    onRequestClose={[Function]}","18","    open={false}","20","      <LineOptionsPopup","28","  \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineOptionsPopup.tsx":[{"add":["25","interface LineOptionsPopupProps {","29","export function LineOptionsPopup({ line }: LineOptionsPopupProps) {","33","        <div className=\"source-viewer-bubble-popup nowrap\">","34","          <Link","35","            className=\"js-get-permalink\"","36","            rel=\"noopener noreferrer\"","37","            target=\"_blank\"","38","            to={getCodeUrl(file.project, branchLike, file.key, line.line)}>","39","            {translate('component_viewer.get_permalink')}","40","          <\/Link>","41","        <\/div>","46","","47","export default React.memo(LineOptionsPopup);"],"delete":["21","import { DropdownOverlay } from 'sonar-ui-common\/components\/controls\/Dropdown';","22","import { PopupPlacement } from 'sonar-ui-common\/components\/ui\/popups';","27","interface Props {","31","export default function LineOptionsPopup({ line }: Props) {","35","        <DropdownOverlay placement={PopupPlacement.RightTop}>","36","          <div className=\"source-viewer-bubble-popup nowrap\">","37","            <Link","38","              className=\"js-get-permalink\"","39","              onClick={event => {","40","                event.stopPropagation();","41","              }}","42","              rel=\"noopener noreferrer\"","43","              target=\"_blank\"","44","              to={getCodeUrl(file.project, branchLike, file.key, line.line)}>","45","              {translate('component_viewer.get_permalink')}","46","            <\/Link>","47","          <\/div>","48","        <\/DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineCoverage-test.tsx":[{"add":["21","import { LineCoverage, LineCoverageProps } from '..\/LineCoverage';","23","it('should render correctly', () => {","24","  expect(shallowRender()).toMatchSnapshot('covered');","25","  expect(shallowRender({ line: { line: 3, coverageStatus: 'uncovered' } })).toMatchSnapshot(","26","    'uncovered'","27","  );","28","  expect(shallowRender({ line: { line: 3, coverageStatus: 'partially-covered' } })).toMatchSnapshot(","29","    'partially covered, 0 conditions'","30","  );","31","  expect(","32","    shallowRender({ line: { line: 3, coverageStatus: 'partially-covered', coveredConditions: 10 } })","33","  ).toMatchSnapshot('partially covered, 10 conditions');","34","  expect(shallowRender({ line: { line: 3, coverageStatus: undefined } })).toMatchSnapshot(","35","    'no data'","36","  );","39","function shallowRender(props: Partial<LineCoverageProps> = {}) {","40","  return shallow(<LineCoverage line={{ line: 3, coverageStatus: 'covered' }} {...props} \/>);","41","}"],"delete":["21","import LineCoverage from '..\/LineCoverage';","23","it('render covered line', () => {","24","  const line: T.SourceLine = { line: 3, coverageStatus: 'covered' };","25","  const wrapper = shallow(<LineCoverage line={line} \/>);","26","  expect(wrapper).toMatchSnapshot();","29","it('render uncovered line', () => {","30","  const line: T.SourceLine = { line: 3, coverageStatus: 'uncovered' };","31","  const wrapper = shallow(<LineCoverage line={line} \/>);","32","  expect(wrapper).toMatchSnapshot();","33","});","34","","35","it('render line with unknown coverage', () => {","36","  const line: T.SourceLine = { line: 3 };","37","  const wrapper = shallow(<LineCoverage line={line} \/>);","38","  expect(wrapper).toMatchSnapshot();","39","});"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/SCMPopup-test.tsx":[{"add":["19","\/* eslint-disable sonarjs\/no-duplicate-string *\/","22","import { SCMPopup, SCMPopupProps } from '..\/SCMPopup';","24","it('should render correctly', () => {","25","  expect(shallowRender()).toMatchSnapshot('default');","26","  expect(","27","    shallowRender({ line: { line: 3, scmDate: '2017-01-01', scmRevision: 'bar' } })","28","  ).toMatchSnapshot('no author');","29","  expect(","30","    shallowRender({ line: { line: 3, scmAuthor: 'foo', scmRevision: 'bar' } })","31","  ).toMatchSnapshot('no date');","32","  expect(","33","    shallowRender({ line: { line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' } })","34","  ).toMatchSnapshot('no revision');","36","","37","function shallowRender(props: Partial<SCMPopupProps> = {}) {","38","  return shallow(","39","    <SCMPopup","40","      line={{ line: 3, scmAuthor: 'foo', scmDate: '2017-01-01', scmRevision: 'bar' }}","41","      {...props}","42","    \/>","43","  );","44","}"],"delete":["21","import SCMPopup from '..\/SCMPopup';","23","it('should render', () => {","24","  const line = { line: 3, scmAuthor: 'foo', scmDate: '2017-01-01' };","25","  expect(shallow(<SCMPopup line={line} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineOptionsPopup-test.tsx.snap":[{"add":["2","exports[`should render correctly 1`] = `","3","<div","4","  className=\"source-viewer-bubble-popup nowrap\"","6","  <Link","7","    className=\"js-get-permalink\"","8","    onlyActiveOnIndex={false}","9","    rel=\"noopener noreferrer\"","10","    style={Object {}}","11","    target=\"_blank\"","12","    to={","13","      Object {","14","        \"pathname\": \"\/code\",","15","        \"query\": Object {","16","          \"branch\": \"feature\",","17","          \"id\": \"prj\",","18","          \"line\": 3,","19","          \"selected\": \"foo\",","20","        },","22","    }","23","  >","24","    component_viewer.get_permalink","25","  <\/Link>","26","<\/div>"],"delete":["2","exports[`should render 1`] = `","3","<DropdownOverlay","4","  placement=\"right-top\"","6","  <div","7","    className=\"source-viewer-bubble-popup nowrap\"","8","  >","9","    <Link","10","      className=\"js-get-permalink\"","11","      onClick={[Function]}","12","      onlyActiveOnIndex={false}","13","      rel=\"noopener noreferrer\"","14","      style={Object {}}","15","      target=\"_blank\"","16","      to={","17","        Object {","18","          \"pathname\": \"\/code\",","19","          \"query\": Object {","20","            \"branch\": \"feature\",","21","            \"id\": \"prj\",","22","            \"line\": 3,","23","            \"selected\": \"foo\",","24","          },","25","        }","27","    >","28","      component_viewer.get_permalink","29","    <\/Link>","30","  <\/div>","31","<\/DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.tsx":[{"add":[],"delete":["61","  linePopup: T.LinePopup | undefined;","73","  onLinePopupToggle: (linePopup: T.LinePopup) => void;","145","        linePopup={this.props.linePopup}","153","        onLinePopupToggle={this.props.onLinePopupToggle}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineOptionsPopup-test.tsx":[{"add":["22","import { LineOptionsPopup } from '..\/LineOptionsPopup';","34","it('should render correctly', () => {"],"delete":["22","import LineOptionsPopup from '..\/LineOptionsPopup';","34","it('should render', () => {"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineCoverage-test.tsx.snap":[{"add":["2","exports[`should render correctly: covered 1`] = `","12","      aria-label=\"source_viewer.tooltip.covered\"","19","exports[`should render correctly: no data 1`] = `","34","exports[`should render correctly: partially covered, 0 conditions 1`] = `","35","<td","36","  className=\"source-meta source-line-coverage source-line-partially-covered\"","37","  data-line-number={3}","38",">","39","  <Tooltip","40","    overlay=\"source_viewer.tooltip.partially-covered\"","41","    placement=\"right\"","42","  >","43","    <div","44","      aria-label=\"source_viewer.tooltip.partially-covered\"","45","      className=\"source-line-bar\"","46","    \/>","47","  <\/Tooltip>","48","<\/td>","49","`;","50","","51","exports[`should render correctly: partially covered, 10 conditions 1`] = `","52","<td","53","  className=\"source-meta source-line-coverage source-line-partially-covered\"","54","  data-line-number={3}","55",">","56","  <Tooltip","57","    overlay=\"source_viewer.tooltip.partially-covered\"","58","    placement=\"right\"","59","  >","60","    <div","61","      aria-label=\"source_viewer.tooltip.partially-covered\"","62","      className=\"source-line-bar\"","63","    \/>","64","  <\/Tooltip>","65","<\/td>","66","`;","67","","68","exports[`should render correctly: uncovered 1`] = `","78","      aria-label=\"source_viewer.tooltip.uncovered\""],"delete":["2","exports[`render covered line 1`] = `","18","exports[`render line with unknown coverage 1`] = `","33","exports[`render uncovered line 1`] = `"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":[{"add":[],"delete":["89","it('should handle line popup', async () => {","90","  const wrapper = shallowRender();","91","  await waitAndUpdate(wrapper);","92","","93","  const linePopup = { component: 'foo', index: 0, line: 16, name: 'b.tsx' };","94","  wrapper.find('ComponentSourceSnippetGroupViewer').prop<Function>('onLinePopupToggle')(linePopup);","95","  expect(wrapper.state('linePopup')).toEqual(linePopup);","96","","97","  wrapper.find('ComponentSourceSnippetGroupViewer').prop<Function>('onLinePopupToggle')(linePopup);","98","  expect(wrapper.state('linePopup')).toBeUndefined();","99","","100","  const openLinePopup = { ...linePopup, open: true };","101","  wrapper.find('ComponentSourceSnippetGroupViewer').prop<Function>('onLinePopupToggle')(","102","    openLinePopup","103","  );","104","  wrapper.find('ComponentSourceSnippetGroupViewer').prop<Function>('onLinePopupToggle')(","105","    openLinePopup","106","  );","107","  expect(wrapper.state('linePopup')).toEqual(linePopup);","108","});","109","","128","  expect(wrapper.state('linePopup')).toEqual({","129","    component: 'foo',","130","    index: 0,","131","    line: 16,","132","    name: 'duplications'","133","  });"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerBase-test.tsx.snap":[{"add":[],"delete":["155","      onLinePopupToggle={[Function]}"]}]}},"bf1a177bdd101ee445a502c969e125a1fe066e8d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/pullRequests\/__tests__\/ReviewApp-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/pullRequests\/ReviewApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/pullRequests\/__tests__\/__snapshots__\/ReviewApp-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/pullRequests\/__tests__\/ReviewApp-test.tsx":[{"add":["50","","53","  wrapper.setProps({ conditions: [] });","54","","65","  const wrapper = shallowRender({ conditions: [], ignoredConditions: true });"],"delete":["62","  const wrapper = shallowRender({ ignoredConditions: true });"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/pullRequests\/ReviewApp.tsx":[{"add":["120","    const { branchLike, component, conditions, ignoredConditions, status } = this.props;","122","","123","    if (loading || !conditions) {","124","      return (","125","        <div className=\"page page-limited\">","126","          <i className=\"spinner\" \/>","127","        <\/div>","128","      );","129","    }","130","","135","        <div","136","          className={classNames('pr-overview', {","137","            'has-conditions': erroredConditions.length > 0","138","          })}>","139","          {ignoredConditions && (","140","            <Alert className=\"big-spacer-bottom\" display=\"inline\" variant=\"info\">","141","              <span className=\"text-middle\">","142","                {translate('overview.quality_gate.ignored_conditions')}","143","              <\/span>","144","              <HelpTooltip","145","                className=\"spacer-left\"","146","                overlay={translate('overview.quality_gate.ignored_conditions.tooltip')}","147","              \/>","148","            <\/Alert>","149","          )}","150","          <div className=\"display-flex-row\">","151","            <div className=\"pr-overview-quality-gate big-spacer-right\">","152","              <h3 className=\"spacer-bottom small\">","153","                {translate('overview.quality_gate')}","154","                <DocTooltip","156","                  doc={import(\/* webpackMode: \"eager\" *\/ 'Docs\/tooltips\/quality-gates\/project-homepage-quality-gate.md')}","158","              <\/h3>","159","              <LargeQualityGateBadge component={component} level={status} \/>","160","            <\/div>","161","","162","            {erroredConditions.length > 0 && (","163","              <div className=\"pr-overview-failed-conditions big-spacer-right\">","164","                <h3 className=\"spacer-bottom small\">{translate('overview.failed_conditions')}<\/h3>","165","                <QualityGateConditions","166","                  branchLike={branchLike}","167","                  collapsible={true}","168","                  component={component}","169","                  conditions={erroredConditions}","170","                \/>","172","            )}","174","            <div className=\"pr-overview-measurements flex-1\">","175","              <h3 className=\"spacer-bottom small\">{translate('overview.metrics')}<\/h3>","177","              {['BUG', 'VULNERABILITY', 'CODE_SMELL'].map((type: IssueType) => (","178","                <div className=\"pr-overview-measurements-row display-flex-row\" key={type}>","179","                  <div className=\"pr-overview-measurements-value flex-1 small display-flex-center\">","180","                    <IssueLabel","181","                      branchLike={branchLike}","182","                      className=\"overview-domain-measure-value\"","183","                      component={component}","188","                  {type === 'VULNERABILITY' && (","189","                    <div className=\"pr-overview-measurements-value flex-1 small display-flex-center\">","190","                      <IssueLabel","191","                        branchLike={branchLike}","192","                        className=\"huge\"","193","                        component={component}","194","                        docTooltip={import(\/* webpackMode: \"eager\" *\/ 'Docs\/tooltips\/metrics\/security-hotspots.md')}","195","                        measures={measures}","196","                        type=\"SECURITY_HOTSPOT\"","197","                      \/>","198","                    <\/div>","199","                  )}","200","                  <div className=\"pr-overview-measurements-rating display-flex-center\">","201","                    <IssueRating","202","                      branchLike={branchLike}","203","                      component={component}","204","                      measures={measures}","205","                      type={type}","206","                    \/>","207","                  <\/div>","208","                <\/div>","209","              ))}","210","","211","              {['COVERAGE', 'DUPLICATION'].map((type: MeasurementType) => (","212","                <div className=\"pr-overview-measurements-row display-flex-row\" key={type}>","213","                  <div className=\"pr-overview-measurements-value flex-1 small display-flex-center\">","214","                    <MeasurementLabel","215","                      branchLike={branchLike}","216","                      className=\"overview-domain-measure-value\"","217","                      component={component}","218","                      measures={measures}","219","                      type={type}","220","                    \/>","221","                  <\/div>","222","","223","                  <AfterMergeEstimate","224","                    className=\"pr-overview-measurements-estimate\"","225","                    measures={measures}","226","                    type={type}","227","                  \/>","228","                <\/div>","229","              ))}","232","        <\/div>"],"delete":["28","import DeferredSpinner from '..\/..\/..\/components\/common\/DeferredSpinner';","121","    const { branchLike, component, conditions = [], ignoredConditions, status } = this.props;","127","        {loading ? (","128","          <DeferredSpinner \/>","129","        ) : (","130","          <div","131","            className={classNames('pr-overview', {","132","              'has-conditions': erroredConditions.length > 0","133","            })}>","134","            {ignoredConditions && (","135","              <Alert className=\"big-spacer-bottom\" display=\"inline\" variant=\"info\">","136","                <span className=\"text-middle\">","137","                  {translate('overview.quality_gate.ignored_conditions')}","138","                <\/span>","139","                <HelpTooltip","141","                  overlay={translate('overview.quality_gate.ignored_conditions.tooltip')}","143","              <\/Alert>","144","            )}","145","            <div className=\"display-flex-row\">","146","              <div className=\"pr-overview-quality-gate big-spacer-right\">","147","                <h3 className=\"spacer-bottom small\">","148","                  {translate('overview.quality_gate')}","149","                  <DocTooltip","150","                    className=\"spacer-left\"","151","                    doc={import(\/* webpackMode: \"eager\" *\/ 'Docs\/tooltips\/quality-gates\/project-homepage-quality-gate.md')}","152","                  \/>","153","                <\/h3>","154","                <LargeQualityGateBadge component={component} level={status} \/>","157","              {erroredConditions.length > 0 && (","158","                <div className=\"pr-overview-failed-conditions big-spacer-right\">","159","                  <h3 className=\"spacer-bottom small\">{translate('overview.failed_conditions')}<\/h3>","160","                  <QualityGateConditions","161","                    branchLike={branchLike}","162","                    collapsible={true}","163","                    component={component}","164","                    conditions={erroredConditions}","165","                  \/>","166","                <\/div>","167","              )}","169","              <div className=\"pr-overview-measurements flex-1\">","170","                <h3 className=\"spacer-bottom small\">{translate('overview.metrics')}<\/h3>","171","","172","                {['BUG', 'VULNERABILITY', 'CODE_SMELL'].map((type: IssueType) => (","173","                  <div className=\"pr-overview-measurements-row display-flex-row\" key={type}>","174","                    <div className=\"pr-overview-measurements-value flex-1 small display-flex-center\">","175","                      <IssueLabel","176","                        branchLike={branchLike}","177","                        className=\"overview-domain-measure-value\"","178","                        component={component}","179","                        measures={measures}","180","                        type={type}","181","                      \/>","182","                    <\/div>","183","                    {type === 'VULNERABILITY' && (","184","                      <div className=\"pr-overview-measurements-value flex-1 small display-flex-center\">","185","                        <IssueLabel","186","                          branchLike={branchLike}","187","                          className=\"huge\"","188","                          component={component}","189","                          docTooltip={import(\/* webpackMode: \"eager\" *\/ 'Docs\/tooltips\/metrics\/security-hotspots.md')}","190","                          measures={measures}","191","                          type=\"SECURITY_HOTSPOT\"","192","                        \/>","193","                      <\/div>","194","                    )}","195","                    <div className=\"pr-overview-measurements-rating display-flex-center\">","196","                      <IssueRating","197","                        branchLike={branchLike}","198","                        component={component}","199","                        measures={measures}","200","                        type={type}","201","                      \/>","202","                    <\/div>","203","                  <\/div>","204","                ))}","205","","206","                {['COVERAGE', 'DUPLICATION'].map((type: MeasurementType) => (","207","                  <div className=\"pr-overview-measurements-row display-flex-row\" key={type}>","208","                    <div className=\"pr-overview-measurements-value flex-1 small display-flex-center\">","209","                      <MeasurementLabel","210","                        branchLike={branchLike}","211","                        className=\"overview-domain-measure-value\"","212","                        component={component}","213","                        measures={measures}","214","                        type={type}","215","                      \/>","216","                    <\/div>","217","","218","                    <AfterMergeEstimate","219","                      className=\"pr-overview-measurements-estimate\"","224","                ))}","225","              <\/div>","228","        )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/pullRequests\/__tests__\/__snapshots__\/ReviewApp-test.tsx.snap":[{"add":["6","  <i","7","    className=\"spinner\"","8","  \/>"],"delete":["6","  <div","7","    className=\"pr-overview\"","8","  >","9","    <div","10","      className=\"display-flex-row\"","11","    >","12","      <div","13","        className=\"pr-overview-quality-gate big-spacer-right\"","14","      >","15","        <h3","16","          className=\"spacer-bottom small\"","17","        >","18","          overview.quality_gate","19","          <DocTooltip","20","            className=\"spacer-left\"","21","            doc={Promise {}}","22","          \/>","23","        <\/h3>","24","        <LargeQualityGateBadge","25","          component={","26","            Object {","27","              \"breadcrumbs\": Array [],","28","              \"key\": \"my-project\",","29","              \"name\": \"MyProject\",","30","              \"organization\": \"foo\",","31","              \"qualifier\": \"TRK\",","32","              \"qualityGate\": Object {","33","                \"isDefault\": true,","34","                \"key\": \"30\",","35","                \"name\": \"Sonar way\",","36","              },","37","              \"qualityProfiles\": Array [","38","                Object {","39","                  \"deleted\": false,","40","                  \"key\": \"my-qp\",","41","                  \"language\": \"ts\",","42","                  \"name\": \"Sonar way\",","43","                },","44","              ],","45","              \"tags\": Array [],","46","            }","47","          }","48","        \/>","49","      <\/div>","50","      <div","51","        className=\"pr-overview-measurements flex-1\"","52","      >","53","        <h3","54","          className=\"spacer-bottom small\"","55","        >","56","          overview.metrics","57","        <\/h3>","58","        <div","59","          className=\"pr-overview-measurements-row display-flex-row\"","60","          key=\"BUG\"","61","        >","62","          <div","63","            className=\"pr-overview-measurements-value flex-1 small display-flex-center\"","64","          >","65","            <IssueLabel","66","              branchLike={","67","                Object {","68","                  \"analysisDate\": \"2018-01-01\",","69","                  \"base\": \"master\",","70","                  \"branch\": \"feature\/foo\/bar\",","71","                  \"key\": \"1001\",","72","                  \"target\": \"master\",","73","                  \"title\": \"Foo Bar feature\",","74","                }","75","              }","76","              className=\"overview-domain-measure-value\"","77","              component={","78","                Object {","79","                  \"breadcrumbs\": Array [],","80","                  \"key\": \"my-project\",","81","                  \"name\": \"MyProject\",","82","                  \"organization\": \"foo\",","83","                  \"qualifier\": \"TRK\",","84","                  \"qualityGate\": Object {","85","                    \"isDefault\": true,","86","                    \"key\": \"30\",","87","                    \"name\": \"Sonar way\",","88","                  },","89","                  \"qualityProfiles\": Array [","90","                    Object {","91","                      \"deleted\": false,","92","                      \"key\": \"my-qp\",","93","                      \"language\": \"ts\",","94","                      \"name\": \"Sonar way\",","95","                    },","96","                  ],","97","                  \"tags\": Array [],","98","                }","99","              }","100","              measures={Array []}","101","              type=\"BUG\"","102","            \/>","103","          <\/div>","104","          <div","105","            className=\"pr-overview-measurements-rating display-flex-center\"","106","          >","107","            <IssueRating","108","              branchLike={","109","                Object {","110","                  \"analysisDate\": \"2018-01-01\",","111","                  \"base\": \"master\",","112","                  \"branch\": \"feature\/foo\/bar\",","113","                  \"key\": \"1001\",","114","                  \"target\": \"master\",","115","                  \"title\": \"Foo Bar feature\",","116","                }","117","              }","118","              component={","119","                Object {","120","                  \"breadcrumbs\": Array [],","121","                  \"key\": \"my-project\",","122","                  \"name\": \"MyProject\",","123","                  \"organization\": \"foo\",","124","                  \"qualifier\": \"TRK\",","125","                  \"qualityGate\": Object {","126","                    \"isDefault\": true,","127","                    \"key\": \"30\",","128","                    \"name\": \"Sonar way\",","129","                  },","130","                  \"qualityProfiles\": Array [","131","                    Object {","132","                      \"deleted\": false,","133","                      \"key\": \"my-qp\",","134","                      \"language\": \"ts\",","135","                      \"name\": \"Sonar way\",","136","                    },","137","                  ],","138","                  \"tags\": Array [],","139","                }","140","              }","141","              measures={Array []}","142","              type=\"BUG\"","143","            \/>","144","          <\/div>","145","        <\/div>","146","        <div","147","          className=\"pr-overview-measurements-row display-flex-row\"","148","          key=\"VULNERABILITY\"","149","        >","150","          <div","151","            className=\"pr-overview-measurements-value flex-1 small display-flex-center\"","152","          >","153","            <IssueLabel","154","              branchLike={","155","                Object {","156","                  \"analysisDate\": \"2018-01-01\",","157","                  \"base\": \"master\",","158","                  \"branch\": \"feature\/foo\/bar\",","159","                  \"key\": \"1001\",","160","                  \"target\": \"master\",","161","                  \"title\": \"Foo Bar feature\",","162","                }","163","              }","164","              className=\"overview-domain-measure-value\"","165","              component={","166","                Object {","167","                  \"breadcrumbs\": Array [],","168","                  \"key\": \"my-project\",","169","                  \"name\": \"MyProject\",","170","                  \"organization\": \"foo\",","171","                  \"qualifier\": \"TRK\",","172","                  \"qualityGate\": Object {","173","                    \"isDefault\": true,","174","                    \"key\": \"30\",","175","                    \"name\": \"Sonar way\",","176","                  },","177","                  \"qualityProfiles\": Array [","178","                    Object {","179","                      \"deleted\": false,","180","                      \"key\": \"my-qp\",","181","                      \"language\": \"ts\",","182","                      \"name\": \"Sonar way\",","183","                    },","184","                  ],","185","                  \"tags\": Array [],","186","                }","187","              }","188","              measures={Array []}","189","              type=\"VULNERABILITY\"","190","            \/>","191","          <\/div>","192","          <div","193","            className=\"pr-overview-measurements-value flex-1 small display-flex-center\"","194","          >","195","            <IssueLabel","196","              branchLike={","197","                Object {","198","                  \"analysisDate\": \"2018-01-01\",","199","                  \"base\": \"master\",","200","                  \"branch\": \"feature\/foo\/bar\",","201","                  \"key\": \"1001\",","202","                  \"target\": \"master\",","203","                  \"title\": \"Foo Bar feature\",","204","                }","205","              }","206","              className=\"huge\"","207","              component={","208","                Object {","209","                  \"breadcrumbs\": Array [],","210","                  \"key\": \"my-project\",","211","                  \"name\": \"MyProject\",","212","                  \"organization\": \"foo\",","213","                  \"qualifier\": \"TRK\",","214","                  \"qualityGate\": Object {","215","                    \"isDefault\": true,","216","                    \"key\": \"30\",","217","                    \"name\": \"Sonar way\",","218","                  },","219","                  \"qualityProfiles\": Array [","220","                    Object {","221","                      \"deleted\": false,","222","                      \"key\": \"my-qp\",","223","                      \"language\": \"ts\",","224","                      \"name\": \"Sonar way\",","225","                    },","226","                  ],","227","                  \"tags\": Array [],","228","                }","229","              }","230","              docTooltip={Promise {}}","231","              measures={Array []}","232","              type=\"SECURITY_HOTSPOT\"","233","            \/>","234","          <\/div>","235","          <div","236","            className=\"pr-overview-measurements-rating display-flex-center\"","237","          >","238","            <IssueRating","239","              branchLike={","240","                Object {","241","                  \"analysisDate\": \"2018-01-01\",","242","                  \"base\": \"master\",","243","                  \"branch\": \"feature\/foo\/bar\",","244","                  \"key\": \"1001\",","245","                  \"target\": \"master\",","246","                  \"title\": \"Foo Bar feature\",","247","                }","248","              }","249","              component={","250","                Object {","251","                  \"breadcrumbs\": Array [],","252","                  \"key\": \"my-project\",","253","                  \"name\": \"MyProject\",","254","                  \"organization\": \"foo\",","255","                  \"qualifier\": \"TRK\",","256","                  \"qualityGate\": Object {","257","                    \"isDefault\": true,","258","                    \"key\": \"30\",","259","                    \"name\": \"Sonar way\",","260","                  },","261","                  \"qualityProfiles\": Array [","262","                    Object {","263","                      \"deleted\": false,","264","                      \"key\": \"my-qp\",","265","                      \"language\": \"ts\",","266","                      \"name\": \"Sonar way\",","267","                    },","268","                  ],","269","                  \"tags\": Array [],","270","                }","271","              }","272","              measures={Array []}","273","              type=\"VULNERABILITY\"","274","            \/>","275","          <\/div>","276","        <\/div>","277","        <div","278","          className=\"pr-overview-measurements-row display-flex-row\"","279","          key=\"CODE_SMELL\"","280","        >","281","          <div","282","            className=\"pr-overview-measurements-value flex-1 small display-flex-center\"","283","          >","284","            <IssueLabel","285","              branchLike={","286","                Object {","287","                  \"analysisDate\": \"2018-01-01\",","288","                  \"base\": \"master\",","289","                  \"branch\": \"feature\/foo\/bar\",","290","                  \"key\": \"1001\",","291","                  \"target\": \"master\",","292","                  \"title\": \"Foo Bar feature\",","293","                }","294","              }","295","              className=\"overview-domain-measure-value\"","296","              component={","297","                Object {","298","                  \"breadcrumbs\": Array [],","299","                  \"key\": \"my-project\",","300","                  \"name\": \"MyProject\",","301","                  \"organization\": \"foo\",","302","                  \"qualifier\": \"TRK\",","303","                  \"qualityGate\": Object {","304","                    \"isDefault\": true,","305","                    \"key\": \"30\",","306","                    \"name\": \"Sonar way\",","307","                  },","308","                  \"qualityProfiles\": Array [","309","                    Object {","310","                      \"deleted\": false,","311","                      \"key\": \"my-qp\",","312","                      \"language\": \"ts\",","313","                      \"name\": \"Sonar way\",","314","                    },","315","                  ],","316","                  \"tags\": Array [],","317","                }","318","              }","319","              measures={Array []}","320","              type=\"CODE_SMELL\"","321","            \/>","322","          <\/div>","323","          <div","324","            className=\"pr-overview-measurements-rating display-flex-center\"","325","          >","326","            <IssueRating","327","              branchLike={","328","                Object {","329","                  \"analysisDate\": \"2018-01-01\",","330","                  \"base\": \"master\",","331","                  \"branch\": \"feature\/foo\/bar\",","332","                  \"key\": \"1001\",","333","                  \"target\": \"master\",","334","                  \"title\": \"Foo Bar feature\",","335","                }","336","              }","337","              component={","338","                Object {","339","                  \"breadcrumbs\": Array [],","340","                  \"key\": \"my-project\",","341","                  \"name\": \"MyProject\",","342","                  \"organization\": \"foo\",","343","                  \"qualifier\": \"TRK\",","344","                  \"qualityGate\": Object {","345","                    \"isDefault\": true,","346","                    \"key\": \"30\",","347","                    \"name\": \"Sonar way\",","348","                  },","349","                  \"qualityProfiles\": Array [","350","                    Object {","351","                      \"deleted\": false,","352","                      \"key\": \"my-qp\",","353","                      \"language\": \"ts\",","354","                      \"name\": \"Sonar way\",","355","                    },","356","                  ],","357","                  \"tags\": Array [],","358","                }","359","              }","360","              measures={Array []}","361","              type=\"CODE_SMELL\"","362","            \/>","363","          <\/div>","364","        <\/div>","365","        <div","366","          className=\"pr-overview-measurements-row display-flex-row\"","367","          key=\"COVERAGE\"","368","        >","369","          <div","370","            className=\"pr-overview-measurements-value flex-1 small display-flex-center\"","371","          >","372","            <MeasurementLabel","373","              branchLike={","374","                Object {","375","                  \"analysisDate\": \"2018-01-01\",","376","                  \"base\": \"master\",","377","                  \"branch\": \"feature\/foo\/bar\",","378","                  \"key\": \"1001\",","379","                  \"target\": \"master\",","380","                  \"title\": \"Foo Bar feature\",","381","                }","382","              }","383","              className=\"overview-domain-measure-value\"","384","              component={","385","                Object {","386","                  \"breadcrumbs\": Array [],","387","                  \"key\": \"my-project\",","388","                  \"name\": \"MyProject\",","389","                  \"organization\": \"foo\",","390","                  \"qualifier\": \"TRK\",","391","                  \"qualityGate\": Object {","392","                    \"isDefault\": true,","393","                    \"key\": \"30\",","394","                    \"name\": \"Sonar way\",","395","                  },","396","                  \"qualityProfiles\": Array [","397","                    Object {","398","                      \"deleted\": false,","399","                      \"key\": \"my-qp\",","400","                      \"language\": \"ts\",","401","                      \"name\": \"Sonar way\",","402","                    },","403","                  ],","404","                  \"tags\": Array [],","405","                }","406","              }","407","              measures={Array []}","408","              type=\"COVERAGE\"","409","            \/>","410","          <\/div>","411","          <AfterMergeEstimate","412","            className=\"pr-overview-measurements-estimate\"","413","            measures={Array []}","414","            type=\"COVERAGE\"","415","          \/>","416","        <\/div>","417","        <div","418","          className=\"pr-overview-measurements-row display-flex-row\"","419","          key=\"DUPLICATION\"","420","        >","421","          <div","422","            className=\"pr-overview-measurements-value flex-1 small display-flex-center\"","423","          >","424","            <MeasurementLabel","425","              branchLike={","426","                Object {","427","                  \"analysisDate\": \"2018-01-01\",","428","                  \"base\": \"master\",","429","                  \"branch\": \"feature\/foo\/bar\",","430","                  \"key\": \"1001\",","431","                  \"target\": \"master\",","432","                  \"title\": \"Foo Bar feature\",","433","                }","434","              }","435","              className=\"overview-domain-measure-value\"","436","              component={","437","                Object {","438","                  \"breadcrumbs\": Array [],","439","                  \"key\": \"my-project\",","440","                  \"name\": \"MyProject\",","441","                  \"organization\": \"foo\",","442","                  \"qualifier\": \"TRK\",","443","                  \"qualityGate\": Object {","444","                    \"isDefault\": true,","445","                    \"key\": \"30\",","446","                    \"name\": \"Sonar way\",","447","                  },","448","                  \"qualityProfiles\": Array [","449","                    Object {","450","                      \"deleted\": false,","451","                      \"key\": \"my-qp\",","452","                      \"language\": \"ts\",","453","                      \"name\": \"Sonar way\",","454","                    },","455","                  ],","456","                  \"tags\": Array [],","457","                }","458","              }","459","              measures={Array []}","460","              type=\"DUPLICATION\"","461","            \/>","462","          <\/div>","463","          <AfterMergeEstimate","464","            className=\"pr-overview-measurements-estimate\"","465","            measures={Array []}","466","            type=\"DUPLICATION\"","467","          \/>","468","        <\/div>","469","      <\/div>","470","    <\/div>","471","  <\/div>"]}]}},"2868b35e7d44b13c23a354e6c979e5060c25e792":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistProjectLinksStepTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistProjectLinksStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistProjectLinksStepTest.java":[{"add":["24","import org.mockito.Mockito;","26","import org.sonar.core.util.UuidFactory;","28","import org.sonar.db.DbClient;","34","import org.sonar.server.computation.task.projectanalysis.analysis.AnalysisMetadataHolderRule;","35","import org.sonar.server.computation.task.projectanalysis.analysis.Branch;","36","import org.sonar.server.computation.task.projectanalysis.batch.BatchReportReader;","40","import org.sonar.server.computation.task.projectanalysis.component.TreeRootHolder;","46","import static org.mockito.Mockito.mock;","47","import static org.mockito.Mockito.verifyZeroInteractions;","48","import static org.mockito.Mockito.when;","58","  @Rule","59","  public AnalysisMetadataHolderRule analysisMetadataHolder = new AnalysisMetadataHolderRule();","67","  PersistProjectLinksStep step = new PersistProjectLinksStep(analysisMetadataHolder, db.getDbClient(), treeRootHolder, reportReader, UuidFactoryFast.getInstance());","75","  public void no_effect_if_branch_is_not_main() {","76","    DbClient dbClient = mock(DbClient.class);","77","    TreeRootHolder treeRootHolder = mock(TreeRootHolder.class);","78","    BatchReportReader reportReader = mock(BatchReportReader.class);","79","    UuidFactory uuidFactory = mock(UuidFactory.class);","80","    mockBranch(false);","81","    PersistProjectLinksStep underTest = new PersistProjectLinksStep(analysisMetadataHolder, dbClient, treeRootHolder, reportReader, uuidFactory);","82","","83","    underTest.execute();","84","","85","    verifyZeroInteractions(uuidFactory, reportReader, treeRootHolder, dbClient);","86","  }","87","","88","  @Test","90","    mockBranch(true);","119","    mockBranch(true);","140","    mockBranch(true);","162","    mockBranch(true);","185","    mockBranch(true);","206","    mockBranch(true);","224","    mockBranch(true);","242","    mockBranch(true);","257","","258","  private void mockBranch(boolean isMain) {","259","    Branch branch = Mockito.mock(Branch.class);","260","    when(branch.isMain()).thenReturn(isMain);","261","    analysisMetadataHolder.setBranch(branch);","262","  }"],"delete":["48","","51","","54","","58","  PersistProjectLinksStep step = new PersistProjectLinksStep(db.getDbClient(), treeRootHolder, reportReader, UuidFactoryFast.getInstance());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistProjectLinksStep.java":[{"add":["33","import org.sonar.server.computation.task.projectanalysis.analysis.AnalysisMetadataHolder;","43","  private final AnalysisMetadataHolder analysisMetadataHolder;","55","  public PersistProjectLinksStep(AnalysisMetadataHolder analysisMetadataHolder, DbClient dbClient, TreeRootHolder treeRootHolder,","56","    BatchReportReader reportReader, UuidFactory uuidFactory) {","57","    this.analysisMetadataHolder = analysisMetadataHolder;","66","    if (!analysisMetadataHolder.getBranch().isMain()) {","67","      return;","68","    }","69",""],"delete":["53","  public PersistProjectLinksStep(DbClient dbClient, TreeRootHolder treeRootHolder, BatchReportReader reportReader, UuidFactory uuidFactory) {"]}]}}}