{"79ad08c967c32f5c68d6b5a4844b2213b5f3015d":{"changes":{"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":[{"add":["26","import java.util.Calendar;","179","    Date oneWeekAgo = addDays(new Date(), -7);","181","    \/\/ Execute an analysis wednesday last week","182","    Calendar lastWednesday = Calendar.getInstance();","183","    lastWednesday.setTime(oneWeekAgo);","184","    lastWednesday.set(Calendar.DAY_OF_WEEK, Calendar.WEDNESDAY);","185","    String lastWednesdayFormatted = formatDate(lastWednesday.getTime());","186","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", lastWednesdayFormatted);","187","","188","    \/\/ Execute an analysis thursday last week","189","    Calendar lastThursday = Calendar.getInstance();","190","    lastThursday.setTime(oneWeekAgo);","191","    lastThursday.set(Calendar.DAY_OF_WEEK, Calendar.THURSDAY);","192","    String lastThursdayFormatted = formatDate(lastThursday.getTime());","193","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", lastThursdayFormatted);","201","    \/\/ Check that only analysis from last thursday is kept (as it's the last one from previous week)","208","    assertThat(content).contains(lastThursdayFormatted);","209","    assertThat(content).doesNotContain(lastWednesdayFormatted);"],"delete":["178","    \/\/ Execute an analysis 11 days ago","179","    String elevenDaysAgo = formatDate(addDays(new Date(), -11));","180","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", elevenDaysAgo);","182","    \/\/ Execute an analysis 10 days ago","183","    String tenDaysAgo = formatDate(addDays(new Date(), -10));","184","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", tenDaysAgo);","192","    \/\/ Check that only analysis from 10 days ago is kept (as it's the last one from previous week)","199","    assertThat(content).contains(tenDaysAgo);","200","    assertThat(content).doesNotContain(elevenDaysAgo);"]}]}},"9d6442856e3b66df0c02831c8108780d4d738bfe":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/user\/GroupDaoTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest\/customers.json":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupMapper.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupDao.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMapper.xml":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":[{"add":["96","      dbClient.closeSession(dbSession);"],"delete":["38","import org.sonar.db.MyBatis;","97","      MyBatis.closeQuietly(dbSession);"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/user\/GroupDaoTest.java":[{"add":["22","import java.util.List;","28","import org.sonar.db.DbClient;","36","import static org.sonar.db.user.GroupTesting.newGroupDto;","42","  public DbTester db = DbTester.create(System2.INSTANCE);","44","  DbSession dbSession = db.getSession();","45","  DbClient dbClient = db.getDbClient();","46","  System2 system2 = mock(System2.class);","48","  GroupDao underTest = new GroupDao(system2);","52","    db.prepareDbUnit(getClass(), \"select_by_key.xml\");","54","    GroupDto group = underTest.selectOrFailByName(dbSession, \"sonar-users\");","55","","66","    db.prepareDbUnit(getClass(), \"select_by_key.xml\");","68","    GroupDto group = underTest.selectOrFailById(dbSession, 1L);","69","","80","    db.prepareDbUnit(getClass(), \"find_by_user_login.xml\");","82","    assertThat(underTest.selectByUserLogin(dbSession, \"john\")).hasSize(2);","83","    assertThat(underTest.selectByUserLogin(dbSession, \"max\")).isEmpty();","89","    db.prepareDbUnit(getClass(), \"empty.xml\");","95","    underTest.insert(dbSession, dto);","96","    dbSession.commit();","98","    db.assertDbUnit(getClass(), \"insert-result.xml\", \"groups\");","104","    db.prepareDbUnit(getClass(), \"update.xml\");","110","    underTest.update(dbSession, dto);","111","    dbSession.commit();","113","    db.assertDbUnit(getClass(), \"update-result.xml\", \"groups\");","118","    db.prepareDbUnit(getClass(), \"select_by_query.xml\");","125","    assertThat(underTest.selectByQuery(dbSession, null, 0, 10))","130","    assertThat(underTest.selectByQuery(dbSession, \"\", 0, 10))","135","    assertThat(underTest.selectByQuery(dbSession, \"sonar\", 0, 10))","140","    assertThat(underTest.selectByQuery(dbSession, null, 0, 3))","142","    assertThat(underTest.selectByQuery(dbSession, null, 3, 3))","144","    assertThat(underTest.selectByQuery(dbSession, null, 6, 3)).isEmpty();","145","    assertThat(underTest.selectByQuery(dbSession, null, 0, 5))","147","    assertThat(underTest.selectByQuery(dbSession, null, 5, 5)).isEmpty();","148","  }","149","","150","  @Test","151","  public void select_by_query_with_special_characters() {","152","    String groupNameWithSpecialCharacters = \"group%_%\/name\";","153","    underTest.insert(dbSession, newGroupDto().setName(groupNameWithSpecialCharacters));","154","    db.commit();","155","","156","    List<GroupDto> result = underTest.selectByQuery(dbSession, \"roup%_%\/nam\", 0, 10);","157","    int resultCount = underTest.countByQuery(dbSession, \"roup%_%\/nam\");","158","","159","    assertThat(result).hasSize(1);","160","    assertThat(result.get(0).getName()).isEqualTo(groupNameWithSpecialCharacters);","161","    assertThat(resultCount).isEqualTo(1);","166","    db.prepareDbUnit(getClass(), \"select_by_query.xml\");","169","    assertThat(underTest.countByQuery(dbSession, null)).isEqualTo(5);","172","    assertThat(underTest.countByQuery(dbSession, \"\")).isEqualTo(5);","175","    assertThat(underTest.countByQuery(dbSession, \"sonar\")).isEqualTo(2);","180","    db.prepareDbUnit(getClass(), \"select_by_key.xml\");","182","    GroupDao groupDao = underTest;","183","    groupDao.deleteById(dbSession, 1L);","184","    dbSession.commit();","186","    assertThat(groupDao.countByQuery(dbSession, null)).isZero();"],"delete":["22","import org.junit.After;","23","import org.junit.Before;","41","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","43","  GroupDao dao;","44","  DbSession session;","45","  System2 system2;","47","  @Before","48","  public void setUp() {","49","    dbTester.truncateTables();","50","    this.session = dbTester.myBatis().openSession(false);","51","    this.system2 = mock(System2.class);","52","    this.dao = new GroupDao(system2);","53","  }","54","","55","  @After","56","  public void tearDown() {","57","    session.close();","58","  }","62","    dbTester.prepareDbUnit(getClass(), \"select_by_key.xml\");","64","    GroupDto group = new GroupDao(system2).selectOrFailByName(session, \"sonar-users\");","75","    dbTester.prepareDbUnit(getClass(), \"select_by_key.xml\");","77","    GroupDto group = new GroupDao(system2).selectOrFailById(session, 1L);","88","    dbTester.prepareDbUnit(getClass(), \"find_by_user_login.xml\");","90","    assertThat(dao.selectByUserLogin(session, \"john\")).hasSize(2);","91","    assertThat(dao.selectByUserLogin(session, \"max\")).isEmpty();","97","","98","    dbTester.prepareDbUnit(getClass(), \"empty.xml\");","99","","105","    dao.insert(session, dto);","106","    session.commit();","108","    dbTester.assertDbUnit(getClass(), \"insert-result.xml\", \"groups\");","114","","115","    dbTester.prepareDbUnit(getClass(), \"update.xml\");","116","","122","    dao.update(session, dto);","123","    session.commit();","125","    dbTester.assertDbUnit(getClass(), \"update-result.xml\", \"groups\");","130","    dbTester.prepareDbUnit(getClass(), \"select_by_query.xml\");","137","    assertThat(new GroupDao(system2).selectByQuery(session, null, 0, 10))","142","    assertThat(new GroupDao(system2).selectByQuery(session, \"\", 0, 10))","147","    assertThat(new GroupDao(system2).selectByQuery(session, \"sonar\", 0, 10))","152","    assertThat(new GroupDao(system2).selectByQuery(session, null, 0, 3))","154","    assertThat(new GroupDao(system2).selectByQuery(session, null, 3, 3))","156","    assertThat(new GroupDao(system2).selectByQuery(session, null, 6, 3)).isEmpty();","157","    assertThat(new GroupDao(system2).selectByQuery(session, null, 0, 5))","159","    assertThat(new GroupDao(system2).selectByQuery(session, null, 5, 5)).isEmpty();","164","    dbTester.prepareDbUnit(getClass(), \"select_by_query.xml\");","167","    assertThat(new GroupDao(system2).countByQuery(session, null)).isEqualTo(5);","170","    assertThat(new GroupDao(system2).countByQuery(session, \"\")).isEqualTo(5);","173","    assertThat(new GroupDao(system2).countByQuery(session, \"sonar\")).isEqualTo(2);","178","    dbTester.prepareDbUnit(getClass(), \"select_by_key.xml\");","180","    GroupDao groupDao = new GroupDao(system2);","181","    groupDao.deleteById(session, 1L);","182","    session.commit();","184","    assertThat(groupDao.countByQuery(session, null)).isZero();"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest\/customers.json":[{"add":["5","    {\"name\": \"customer%_%\/1\", \"description\": \"Customer%_%\/1\", \"membersCount\": 0},","6","    {\"name\": \"customer%_%\/2\", \"description\": \"Customer%_%\/2\", \"membersCount\": 0},","7","    {\"name\": \"customer%_%\/3\", \"description\": \"Customer%_%\/3\", \"membersCount\": 0}"],"delete":["5","    {\"name\": \"customer1\", \"description\": \"Customer1\", \"membersCount\": 0},","6","    {\"name\": \"customer2\", \"description\": \"Customer2\", \"membersCount\": 0},","7","    {\"name\": \"customer3\", \"description\": \"Customer3\", \"membersCount\": 0}"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupMapper.java":[{"add":["24","import org.apache.ibatis.annotations.Param;","41","  List<GroupDto> selectByQuery(@Param(\"query\") String query, RowBounds rowBounds);","43","  int countByQuery(@Param(\"query\") String query);"],"delete":["40","  List<GroupDto> selectByQuery(String query, RowBounds rowBounds);","42","  int countByQuery(String query);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupDao.java":[{"add":["24","import java.util.Locale;","31","import org.sonar.db.DatabaseUtils;","34","import org.sonar.db.WildcardPosition;","97","  public List<GroupDto> selectByUserLogin(DbSession session, String login) {","101","  @CheckForNull","102","  private static String groupSearchToSql(@Nullable String query) {","103","    if (query == null) {","104","      return null;","106","","107","    String upperCasedNameQuery = StringUtils.upperCase(query, Locale.ENGLISH);","108","    return DatabaseUtils.buildLikeValue(upperCasedNameQuery, WildcardPosition.BEFORE_AND_AFTER);"],"delete":["94","  public List<GroupDto> selectByUserLogin(DbSession session, String login){","98","  private String groupSearchToSql(@Nullable String query) {","99","    String sql = SQL_WILDCARD;","100","    if (query != null) {","101","      sql = StringUtils.replace(StringUtils.upperCase(query), SQL_WILDCARD, \"\/%\");","102","      sql = StringUtils.replace(sql, \"_\", \"\/_\");","103","      sql = SQL_WILDCARD + sql + SQL_WILDCARD;","105","    return sql;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMapper.xml":[{"add":["67","    <where>","68","      <if test=\"query!=null\">","69","        UPPER(g.name) LIKE #{query} ESCAPE '\/'","70","      <\/if>","71","    <\/where>","78","    <where>","79","      <if test=\"query!=null\">","80","        UPPER(g.name) LIKE #{query} ESCAPE '\/'","81","      <\/if>","82","    <\/where>"],"delete":["67","    WHERE UPPER(g.name) LIKE #{query}","74","    WHERE UPPER(g.name) LIKE #{query}"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":[{"add":["40","import static org.sonar.db.user.GroupTesting.newGroupDto;","92","    insertGroups(\"users\", \"admins\", \"customer%_%\/1\", \"customer%_%\/2\", \"customer%_%\/3\");","95","    newRequest().setParam(Param.TEXT_QUERY, \"tomer%_%\/\").execute().assertJson(getClass(), \"customers.json\");","153","      groupDao.insert(dbSession, newGroupDto()"],"delete":["33","import org.sonar.db.user.GroupDto;","92","    insertGroups(\"users\", \"admins\", \"customer1\", \"customer2\", \"customer3\");","95","    newRequest().setParam(Param.TEXT_QUERY, \"custom\").execute().assertJson(getClass(), \"customers.json\");","153","      groupDao.insert(dbSession, new GroupDto()"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":[],"delete":["83","  \/**","84","   * ","85","   *\/"]}]}},"f0956c6ec3826e73e40313e7edb06a87c1570c6f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":[{"add":["97","        that.options.app.state.set({","98","          page: r.p,","99","          maxResultsReached: r.p * r.ps >= r.total","100","        });"],"delete":["97","        that.options.app.state.set({ page: r.p });"]}]}},"5620329e9393d7afc4d23835df8b585196df9757":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBranchesMenu-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBranchesMenu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBranchesMenu-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBranchesMenu-test.tsx":[{"add":["56","      branchLikes={[","57","        mainBranch(),","58","        shortBranch('foo'),","59","        shortBranch('foobar'),","60","        longBranch('bar'),","61","        longBranch('BARBAZ')","62","      ]}"],"delete":["56","      branchLikes={[mainBranch(), shortBranch('foo'), shortBranch('foobar'), longBranch('bar')]}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":[{"add":["31",".navbar-context-branches .popup {","32","  min-width: 430px;","33","}","34",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBranchesMenu.tsx":[{"add":["86","        (branchLike.title.toLowerCase().includes(query) ||","87","          branchLike.key.toLowerCase().includes(query));"],"delete":["86","        (branchLike.title.includes(query) || branchLike.key.includes(query));"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBranchesMenu-test.tsx.snap":[{"add":["280","      key=\"branch-BARBAZ\"","281","    >","282","      <li","283","        className=\"divider\"","284","      \/>","285","      <ComponentNavBranchesMenuItem","286","        branchLike={","287","          Object {","288","            \"isMain\": false,","289","            \"name\": \"BARBAZ\",","290","            \"type\": \"LONG\",","291","          }","292","        }","293","        component={","294","          Object {","295","            \"key\": \"component\",","296","          }","297","        }","298","        innerRef={[Function]}","299","        key=\"branch-BARBAZ\"","300","        onSelect={[Function]}","301","        selected={false}","302","      \/>","303","    <\/React.Fragment>","304","    <React.Fragment"],"delete":[]}]}},"52d805b3ab00fb499546f79fba0a852e893fea79":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueTagsTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/TagsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["597","  public List<String> listTags(@Nullable OrganizationDto organization, @Nullable String textQuery, int size) {","604","    BoolQueryBuilder esQuery = boolQuery()","605","      .filter(createAuthorizationFilter(true));","606","    if (organization != null) {","607","      esQuery.filter(termQuery(FIELD_ISSUE_ORGANIZATION_UUID, organization.getUuid()));","608","    }","609","","612","      .setQuery(esQuery)"],"delete":["597","  public List<String> listTags(OrganizationDto organization, @Nullable String textQuery, int size) {","606","      .setQuery(boolQuery()","607","        .filter(createAuthorizationFilter(true))","608","        .filter(termQuery(FIELD_ISSUE_ORGANIZATION_UUID, organization.getUuid())))"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["22","import com.google.common.collect.ImmutableList;","550","  public List<String> listTags(@Nullable OrganizationDto organization, @Nullable String query, int size) {","557","    ImmutableList.Builder<String> scopes = ImmutableList.<String>builder()","558","      .add(RuleExtensionScope.system().getScope());","559","    if (organization != null) {","560","      scopes.add(RuleExtensionScope.organization(organization).getScope());","561","    }","564","      scopes.build().toArray(new String[0]));"],"delete":["549","  public List<String> listTags(OrganizationDto organization, @Nullable String query, int size) {","558","      RuleExtensionScope.system().getScope(),","559","      RuleExtensionScope.organization(organization).getScope());"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueTagsTest.java":[{"add":["31","import org.sonarqube.tests.Category6Suite;","33","import org.sonarqube.ws.Projects.CreateWsResponse;","41","import static java.util.Collections.singletonList;","77","    analyzeProject(organization.getKey(), projectKey);","84","    String defaultOrganization = tester.organizations().getDefaultOrganization().getKey();","110","  @Test","111","  public void tags_across_organizations() {","112","    Organization organization = tester.organizations().generate();","113","    Organization anotherOrganization = tester.organizations().generate();","114","    restoreProfile(orchestrator, IssueTagsTest.class.getResource(\"\/issue\/one-issue-per-line-profile.xml\"), organization.getKey());","115","    restoreProfile(orchestrator, IssueTagsTest.class.getResource(\"\/issue\/one-issue-per-line-profile.xml\"), anotherOrganization.getKey());","116","    CreateWsResponse.Project project = tester.projects().provision(organization);","117","    CreateWsResponse.Project anotherProject = tester.projects().provision(anotherOrganization);","118","    analyzeProject(organization.getKey(), project.getKey());","119","    analyzeProject(anotherOrganization.getKey(), anotherProject.getKey());","120","    String issue = tester.wsClient().issues().search(new SearchRequest().setProjectKeys(singletonList(project.getKey()))).getIssues(0).getKey();","121","    String anotherIssue = tester.wsClient().issues().search(new SearchRequest().setProjectKeys(singletonList(anotherProject.getKey()))).getIssues(0).getKey();","122","    tester.wsClient().issues().setTags(issue, \"first-tag\");","123","    tester.wsClient().issues().setTags(anotherIssue, \"another-tag\");","124","","125","    assertThat(tester.wsClient().issues().getTags(null).content()).contains(\"first-tag\", \"another-tag\");","126","  }","127","","152","  private void analyzeProject(String organizationKey, String projectKey) {","155","      \"sonar.organization\", organizationKey,"],"delete":["23","import org.sonarqube.tests.Category6Suite;","75","    analyzeProject(projectKey);","82","    String defaultOrganization = null;","132","  private void analyzeProject(String projectKey) {","135","      \"sonar.organization\", organization.getKey(),"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":[{"add":["71","  private WsActionTester ws = new WsActionTester(new TagsAction(issueIndex, ruleIndex, dbTester.getDbClient()));","174","  public void without_organization_parameter_is_cross_organization() {","175","    userSession.logIn();","176","    OrganizationDto organization = dbTester.organizations().insert();","177","    OrganizationDto anotherOrganization = dbTester.organizations().insert();","178","    insertIssueWithBrowsePermission(organization, insertRuleWithoutTags(), \"tag1\");","179","    insertIssueWithBrowsePermission(anotherOrganization, insertRuleWithoutTags(), \"tag2\");","180","","181","    String result = ws.newRequest().execute().getInput();","182","","183","    assertJson(result).isSimilarTo(\"{\\\"tags\\\":[\\\"tag1\\\", \\\"tag2\\\"]}\");","184","  }","185","","186","  @Test","237","  private void insertIssueWithBrowsePermission(OrganizationDto organization, RuleDefinitionDto rule, String... tags) {","238","    IssueDto issue = insertIssueWithoutBrowsePermission(organization, rule, tags);","239","    grantAccess(issue);","240","  }","241","","248","    return insertIssueWithoutBrowsePermission(organization, rule, tags);","249","  }","250","","251","  private IssueDto insertIssueWithoutBrowsePermission(OrganizationDto organization, RuleDefinitionDto rule, String... tags) {"],"delete":["39","import org.sonar.server.organization.TestDefaultOrganizationProvider;","72","  private WsActionTester ws = new WsActionTester(new TagsAction(issueIndex, ruleIndex, dbTester.getDbClient(), TestDefaultOrganizationProvider.from(dbTester)));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":[{"add":["1202","    OrganizationDto anotherOrg = db.organizations().insert();","1206","      newDoc(\"I42\", file).setOrganizationUuid(anotherOrg.getUuid()).setRuleKey(r1.getKey().toString()).setTags(of(\"another\")),","1218","    assertThat(underTest.listTags(null, null, 100)).containsExactlyInAnyOrder(\"another\", \"convention\", \"java8\", \"bug\");"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/TagsAction.java":[{"add":["27","import javax.annotation.CheckForNull;","41","import static org.sonar.server.ws.WsUtils.checkFoundWithOptional;","54","  public TagsAction(IssueIndex issueIndex, RuleIndex ruleIndex, DbClient dbClient) {","94","  private List<String> listTags(@Nullable OrganizationDto organization, @Nullable String textQuery, int pageSize) {","105","  @CheckForNull","108","      return organizationKey == null ? null","109","        : checkFoundWithOptional(dbClient.organizationDao().selectByKey(dbSession, organizationKey), \"No organization with key '%s'\", organizationKey);"],"delete":["25","import java.util.Optional;","39","import org.sonar.server.organization.DefaultOrganizationProvider;","41","import org.sonar.server.ws.WsUtils;","54","  private final DefaultOrganizationProvider defaultOrganizationProvider;","56","  public TagsAction(IssueIndex issueIndex, RuleIndex ruleIndex, DbClient dbClient, DefaultOrganizationProvider defaultOrganizationProvider) {","60","    this.defaultOrganizationProvider = defaultOrganizationProvider;","97","  private List<String> listTags(OrganizationDto organization, @Nullable String textQuery, int pageSize) {","110","      String organizationOrDefaultKey = Optional.ofNullable(organizationKey)","111","        .orElseGet(defaultOrganizationProvider.get()::getKey);","112","      return WsUtils.checkFoundWithOptional(","113","        dbClient.organizationDao().selectByKey(dbSession, organizationOrDefaultKey),","114","        \"No organization with key '%s'\", organizationOrDefaultKey);"]}]}},"434c61ad74dc6ddeeb21477a8754064db95b4b5c":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/LocalizationContainer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/LocalizationContainer.tsx":[{"add":["49","    \/\/ No need to load english (default) bundle, it's coming with react-intl","50","    if (langToLoad !== DEFAULT_LANGUAGE) {","52","        intlBundle => this.updateLang(langToLoad, intlBundle),","53","        this.setDefaultLang","56","      this.setDefaultLang();","57","    }","58","  };","59","","60","  setDefaultLang = () => {","61","    if (this.mounted) {","62","      this.setState({ loading: false, lang: DEFAULT_LANGUAGE });"],"delete":["49","","50","    \/\/ No need to load english bundle, it's coming wiht react-intl, use english if it fails","51","    if (langToLoad !== 'en') {","53","        i => this.updateLang(langToLoad, i),","54","        () => {}","57","      this.setState({ loading: false, lang: langToLoad });"]}]}},"947685909fbdee4146a59c67cc706b5e7f530876":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotViewer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/FilterBar.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewerRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectBaseline\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewerRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsAppRenderer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/FilterBar-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewer.tsx":[{"add":["96","    if (this.commentTextRef.current) {"],"delete":["45","  parentScrollRef: React.RefObject<HTMLDivElement>;","50","    this.parentScrollRef = React.createRef<HTMLDivElement>();","98","    if (this.commentTextRef.current && this.parentScrollRef.current) {","100","        parent: this.parentScrollRef.current,","125","        parentScrollRef={this.parentScrollRef}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotViewer-test.tsx.snap":[{"add":[],"delete":["37","  parentScrollRef={","38","    Object {","39","      \"current\": null,","40","    }","41","  }","92","  parentScrollRef={","93","    Object {","94","      \"current\": null,","95","    }","96","  }"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.css":[{"add":[],"delete":["19",".hotspot-list {","20","  \/* sidebar width - 16px padding-right, required so as to ignore the scrollbar *\/","21","  width: 284px;","22","}","23",""]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewer-test.tsx":[{"add":[],"delete":["66","  const mockParentRef = ({ current: {} } as any) as React.RefObject<HTMLDivElement>;","67","  wrapper.instance().parentScrollRef = mockParentRef;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":[{"add":["22","import { addSideBarClass, removeSideBarClass } from 'sonar-ui-common\/helpers\/pages';","91","    addSideBarClass();","116","    removeSideBarClass();"],"delete":["22","import { addNoFooterPageClass, removeNoFooterPageClass } from 'sonar-ui-common\/helpers\/pages';","91","    addNoFooterPageClass();","116","    removeNoFooterPageClass();"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":[{"add":["19","#security_hotspots .filter-bar-outer {","20","  height: 62px;","24","  position: fixed;","25","  background-color: var(--barBackgroundColor);","26","  z-index: var(--pageSideZIndex);","27","  left: 0;","28","  right: 0;","29","}","30","","31","#security_hotspots .filter-bar-inner {","35","  box-sizing: border-box;","39","#security_hotspots .layout-page-side,","40","#security_hotspots .layout-page-side-outer {","41","  width: calc(50vw - 330px);","44","#security_hotspots .layout-page-side-inner {","45","  margin-left: calc(50vw - 645px);","48","#security_hotspots .layout-page-main {","49","  padding: 0;","50","}","51","","52","@media (max-width: 1320px) {","53","  #security_hotspots .layout-page-side-outer,","54","  #security_hotspots .layout-page-side {","55","    width: 316px;","56","  }","57","","58","  #security_hotspots .layout-page-side-inner {","59","    margin-left: 0;","60","  }","61","}","62","","63","#security_hotspots .hotspot-content {","64","  max-width: 962px; \/* 1280px - 300px - 18px *\/","65","  background: white;","69","#security_hotspots .invisible {","70","  height: 0;","71","  overflow: hidden;"],"delete":["19","#security_hotspots .wrapper {","20","  position: fixed;","21","  \/* top is defined programatically *\/","22","  bottom: 0;","23","  width: 100%;","24","}","25","","26","#security_hotspots .layout-page {","27","  margin: 0 auto;","28","  min-width: var(--minPageWidth);","29","  max-width: 1280px;","30","  height: 100%;","35","  box-sizing: border-box;","41","#security_hotspots .sidebar {","42","  flex: 0 0 300px;","43","  border-right: 1px solid var(--barBorderColor);","44","  height: 100%;","45","  overflow-y: auto;","46","  overflow-x: hidden;","49","#security_hotspots .main {","50","  flex: 1 1 auto;","51","  background-color: white;","52","  \/* Force flex to take parent width. *\/","53","  overflow-x: auto;","56","#security_hotspots .main .hotspot-content {","57","  overflow-y: auto;","58","  height: 100%;","62",".invisible {","63","  visibility: hidden;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":[{"add":["21","import { addSideBarClass } from 'sonar-ui-common\/helpers\/pages';","46","  addSideBarClass: jest.fn(),","47","  removeSideBarClass: jest.fn()","84","  expect(addSideBarClass).toBeCalled();"],"delete":["21","import { addNoFooterPageClass } from 'sonar-ui-common\/helpers\/pages';","46","  addNoFooterPageClass: jest.fn(),","47","  removeNoFooterPageClass: jest.fn()","84","  expect(addNoFooterPageClass).toBeCalled();"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/FilterBar.tsx":[{"add":["78","    <div className=\"filter-bar-outer\">","79","      <div className=\"filter-bar\">","80","        <div className=\"filter-bar-inner display-flex-center\">","81","          {isStaticListOfHotspots ? (","82","            <a","83","              id=\"show_all_hotspot\"","84","              onClick={() => props.onShowAllHotspots()}","85","              role=\"link\"","86","              tabIndex={0}>","87","              {translate('hotspot.filters.show_all')}","88","            <\/a>","89","          ) : (","90","            <div className=\"display-flex-space-between width-100\">","91","              <div className=\"display-flex-center\">","92","                <h3 className=\"huge-spacer-right\">{translate('hotspot.filters.title')}<\/h3>","94","                {isLoggedIn(currentUser) && (","95","                  <RadioToggle","96","                    className=\"huge-spacer-right\"","97","                    name=\"assignee-filter\"","98","                    onCheck={(value: AssigneeFilterOption) =>","99","                      props.onChangeFilters({ assignedToMe: value === AssigneeFilterOption.ME })","100","                    }","101","                    options={assigneeFilterOptions}","102","                    value={","103","                      filters.assignedToMe ? AssigneeFilterOption.ME : AssigneeFilterOption.ALL","104","                    }","105","                  \/>","106","                )}","108","                <span className=\"spacer-right\">{translate('status')}<\/span>","109","                <Select","110","                  className=\"input-medium big-spacer-right\"","111","                  clearable={false}","112","                  onChange={(option: { value: HotspotStatusFilter }) =>","113","                    props.onChangeFilters({ status: option.value })","115","                  options={statusOptions}","116","                  searchable={false}","117","                  value={filters.status}","119","","120","                {onBranch && (","121","                  <Select","122","                    className=\"input-medium big-spacer-right\"","123","                    clearable={false}","124","                    onChange={(option: { value: boolean }) =>","125","                      props.onChangeFilters({ sinceLeakPeriod: option.value })","126","                    }","127","                    options={periodOptions}","128","                    searchable={false}","129","                    value={filters.sinceLeakPeriod}","130","                  \/>","131","                )}","132","              <\/div>","133","","134","              {isProject && (","135","                <div className=\"display-flex-center\">","136","                  <span className=\"little-spacer-right\">","137","                    {translate('metric.security_hotspots_reviewed.name')}","138","                  <\/span>","139","                  <HelpTooltip","140","                    className=\"big-spacer-right\"","141","                    overlay={translate('hotspots.reviewed.tooltip')}","142","                  \/>","143","                  <DeferredSpinner loading={loadingMeasure}>","144","                    {hotspotsReviewedMeasure && <CoverageRating value={hotspotsReviewedMeasure} \/>}","145","                    <Measure","146","                      className=\"spacer-left huge\"","147","                      metricKey={","148","                        onBranch && !filters.sinceLeakPeriod","149","                          ? 'security_hotspots_reviewed'","150","                          : 'new_security_hotspots_reviewed'","151","                      }","152","                      metricType=\"PERCENT\"","153","                      value={hotspotsReviewedMeasure}","154","                    \/>","155","                  <\/DeferredSpinner>","156","                <\/div>","157","              )}","161","      <\/div>"],"delete":["78","    <div className=\"filter-bar display-flex-center\">","79","      {isStaticListOfHotspots ? (","80","        <a id=\"show_all_hotspot\" onClick={() => props.onShowAllHotspots()} role=\"link\" tabIndex={0}>","81","          {translate('hotspot.filters.show_all')}","82","        <\/a>","83","      ) : (","84","        <div className=\"display-flex-space-between width-100\">","85","          <div className=\"display-flex-center\">","86","            <h3 className=\"huge-spacer-right\">{translate('hotspot.filters.title')}<\/h3>","88","            {isLoggedIn(currentUser) && (","89","              <RadioToggle","90","                className=\"huge-spacer-right\"","91","                name=\"assignee-filter\"","92","                onCheck={(value: AssigneeFilterOption) =>","93","                  props.onChangeFilters({ assignedToMe: value === AssigneeFilterOption.ME })","94","                }","95","                options={assigneeFilterOptions}","96","                value={filters.assignedToMe ? AssigneeFilterOption.ME : AssigneeFilterOption.ALL}","97","              \/>","98","            )}","100","            <span className=\"spacer-right\">{translate('status')}<\/span>","101","            <Select","102","              className=\"input-medium big-spacer-right\"","103","              clearable={false}","104","              onChange={(option: { value: HotspotStatusFilter }) =>","105","                props.onChangeFilters({ status: option.value })","106","              }","107","              options={statusOptions}","108","              searchable={false}","109","              value={filters.status}","110","            \/>","111","","112","            {onBranch && (","113","              <Select","114","                className=\"input-medium big-spacer-right\"","115","                clearable={false}","116","                onChange={(option: { value: boolean }) =>","117","                  props.onChangeFilters({ sinceLeakPeriod: option.value })","118","                }","119","                options={periodOptions}","120","                searchable={false}","121","                value={filters.sinceLeakPeriod}","122","              \/>","123","            )}","124","          <\/div>","125","","126","          {isProject && (","127","            <div className=\"display-flex-center\">","128","              <span className=\"little-spacer-right\">","129","                {translate('metric.security_hotspots_reviewed.name')}","130","              <\/span>","131","              <HelpTooltip","132","                className=\"big-spacer-right\"","133","                overlay={translate('hotspots.reviewed.tooltip')}","134","              \/>","135","              <DeferredSpinner loading={loadingMeasure}>","136","                {hotspotsReviewedMeasure && <CoverageRating value={hotspotsReviewedMeasure} \/>}","137","                <Measure","138","                  className=\"spacer-left huge\"","139","                  metricKey={","140","                    onBranch && !filters.sinceLeakPeriod","141","                      ? 'security_hotspots_reviewed'","142","                      : 'new_security_hotspots_reviewed'","144","                  metricType=\"PERCENT\"","145","                  value={hotspotsReviewedMeasure}","147","              <\/DeferredSpinner>","151","      )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewerRenderer-test.tsx":[{"add":[],"delete":["61","      parentScrollRef={React.createRef()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":[{"add":["4","  className=\"huge-spacer-bottom\"","28","  className=\"huge-spacer-bottom\"","51","  className=\"huge-spacer-bottom\"","75","  className=\"huge-spacer-bottom\"","343","  className=\"huge-spacer-bottom\""],"delete":["4","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","28","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","51","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","75","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","343","  className=\"huge-spacer-bottom big-padded-right hotspot-list\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projectBaseline\/styles.css":[{"add":[],"delete":["146","","147",".invisible {","148","  visibility: hidden;","149","}"]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":[{"add":[],"delete":["163",".no-footer-page #footer {","164","  display: none;","165","}","166",""]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":[{"add":["41",".invisible {","42","  visibility: hidden;","43","}","44",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewerRenderer.tsx":[{"add":["63","    commentVisible","77","        <div className=\"big-padded hotspot-content\">"],"delete":["51","  parentScrollRef: React.RefObject<HTMLDivElement>;","64","    commentVisible,","65","    parentScrollRef","79","        <div className=\"big-padded hotspot-content\" ref={parentScrollRef}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsAppRenderer-test.tsx.snap":[{"add":["6","  <Suggestions","7","    suggestions=\"security_hotspots\"","8","  \/>","9","  <Helmet","10","    defer={true}","11","    encodeSpecialCharacters={true}","12","    title=\"hotspots.page\"","13","  \/>","14","  <A11ySkipTarget","15","    anchor=\"security_hotspots_main\"","16","  \/>","54","  <EmptyHotspotsPage","55","    filtered={false}","56","    isStaticListOfHotspots={true}","57","  \/>","62","<div","63","  id=\"security_hotspots\"","64",">","65","  <Suggestions","66","    suggestions=\"security_hotspots\"","67","  \/>","68","  <Helmet","69","    defer={true}","70","    encodeSpecialCharacters={true}","71","    title=\"hotspots.page\"","72","  \/>","73","  <A11ySkipTarget","74","    anchor=\"security_hotspots_main\"","75","  \/>","76","  <Connect(withCurrentUser(FilterBar))","77","    component={","79","        \"breadcrumbs\": Array [],","80","        \"key\": \"my-project\",","81","        \"name\": \"MyProject\",","82","        \"organization\": \"foo\",","83","        \"qualifier\": \"TRK\",","84","        \"qualityGate\": Object {","85","          \"isDefault\": true,","86","          \"key\": \"30\",","87","          \"name\": \"Sonar way\",","88","        },","89","        \"qualityProfiles\": Array [","90","          Object {","91","            \"deleted\": false,","92","            \"key\": \"my-qp\",","93","            \"language\": \"ts\",","94","            \"name\": \"Sonar way\",","95","          },","96","        ],","97","        \"tags\": Array [],","100","    filters={","101","      Object {","102","        \"assignedToMe\": false,","103","        \"sinceLeakPeriod\": false,","104","        \"status\": \"TO_REVIEW\",","105","      }","106","    }","107","    isStaticListOfHotspots={true}","108","    loadingMeasure={false}","109","    onBranch={false}","110","    onChangeFilters={[MockFunction]}","111","    onShowAllHotspots={[MockFunction]}","112","  \/>","113","  <EmptyHotspotsPage","114","    filtered={false}","115","    isStaticListOfHotspots={true}","116","  \/>","121","<div","122","  className=\"layout-page-side\"","123","  style={","124","    Object {","125","      \"top\": 0,","127","  }","128",">","129","  <div","130","    className=\"layout-page-side-inner\"","132","    <HotspotList","133","      hotspots={","134","        Array [","135","          Object {","136","            \"author\": \"Developer 1\",","137","            \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","138","            \"creationDate\": \"2013-05-13T17:55:39+0200\",","139","            \"key\": \"h1\",","140","            \"line\": 81,","141","            \"message\": \"'3' is a magic number.\",","142","            \"project\": \"com.github.kevinsawicki:http-request\",","143","            \"resolution\": undefined,","144","            \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","145","            \"securityCategory\": \"command-injection\",","146","            \"status\": \"TO_REVIEW\",","147","            \"updateDate\": \"2013-05-13T17:55:39+0200\",","148","            \"vulnerabilityProbability\": \"HIGH\",","149","          },","150","          Object {","151","            \"author\": \"Developer 1\",","152","            \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","153","            \"creationDate\": \"2013-05-13T17:55:39+0200\",","154","            \"key\": \"h2\",","155","            \"line\": 81,","156","            \"message\": \"'3' is a magic number.\",","157","            \"project\": \"com.github.kevinsawicki:http-request\",","158","            \"resolution\": undefined,","159","            \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","160","            \"securityCategory\": \"command-injection\",","161","            \"status\": \"TO_REVIEW\",","162","            \"updateDate\": \"2013-05-13T17:55:39+0200\",","163","            \"vulnerabilityProbability\": \"HIGH\",","164","          },","165","        ]","166","      }","167","      hotspotsTotal={3}","168","      isStaticListOfHotspots={true}","169","      loadingMore={false}","170","      onHotspotClick={[MockFunction]}","171","      onLoadMore={[MockFunction]}","172","      securityCategories={Object {}}","173","      selectedHotspot={","174","        Object {","175","          \"author\": \"Developer 1\",","176","          \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","177","          \"creationDate\": \"2013-05-13T17:55:39+0200\",","178","          \"key\": \"h2\",","179","          \"line\": 81,","180","          \"message\": \"'3' is a magic number.\",","181","          \"project\": \"com.github.kevinsawicki:http-request\",","182","          \"resolution\": undefined,","183","          \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","184","          \"securityCategory\": \"command-injection\",","185","          \"status\": \"TO_REVIEW\",","186","          \"updateDate\": \"2013-05-13T17:55:39+0200\",","187","          \"vulnerabilityProbability\": \"HIGH\",","188","        }","189","      }","190","      statusFilter=\"TO_REVIEW\"","197","<div","198","  id=\"security_hotspots\"","199",">","200","  <Suggestions","201","    suggestions=\"security_hotspots\"","202","  \/>","203","  <Helmet","204","    defer={true}","205","    encodeSpecialCharacters={true}","206","    title=\"hotspots.page\"","207","  \/>","208","  <A11ySkipTarget","209","    anchor=\"security_hotspots_main\"","210","  \/>","211","  <Connect(withCurrentUser(FilterBar))","212","    component={","214","        \"breadcrumbs\": Array [],","215","        \"key\": \"my-project\",","216","        \"name\": \"MyProject\",","217","        \"organization\": \"foo\",","218","        \"qualifier\": \"TRK\",","219","        \"qualityGate\": Object {","220","          \"isDefault\": true,","221","          \"key\": \"30\",","222","          \"name\": \"Sonar way\",","223","        },","224","        \"qualityProfiles\": Array [","225","          Object {","226","            \"deleted\": false,","227","            \"key\": \"my-qp\",","228","            \"language\": \"ts\",","229","            \"name\": \"Sonar way\",","230","          },","231","        ],","232","        \"tags\": Array [],","235","    filters={","237","        \"assignedToMe\": false,","238","        \"sinceLeakPeriod\": false,","239","        \"status\": \"TO_REVIEW\",","242","    isStaticListOfHotspots={true}","243","    loadingMeasure={false}","244","    onBranch={false}","245","    onChangeFilters={[MockFunction]}","246","    onShowAllHotspots={[MockFunction]}","247","  \/>","248","  <DeferredSpinner","249","    className=\"huge-spacer-left big-spacer-top\"","250","    timeout={100}","251","  \/>","256","<div","257","  id=\"security_hotspots\"","258",">","259","  <Suggestions","260","    suggestions=\"security_hotspots\"","261","  \/>","262","  <Helmet","263","    defer={true}","264","    encodeSpecialCharacters={true}","265","    title=\"hotspots.page\"","266","  \/>","267","  <A11ySkipTarget","268","    anchor=\"security_hotspots_main\"","269","  \/>","270","  <Connect(withCurrentUser(FilterBar))","271","    component={","273","        \"breadcrumbs\": Array [],","274","        \"key\": \"my-project\",","275","        \"name\": \"MyProject\",","276","        \"organization\": \"foo\",","277","        \"qualifier\": \"TRK\",","278","        \"qualityGate\": Object {","279","          \"isDefault\": true,","280","          \"key\": \"30\",","281","          \"name\": \"Sonar way\",","282","        },","283","        \"qualityProfiles\": Array [","284","          Object {","285","            \"deleted\": false,","286","            \"key\": \"my-qp\",","287","            \"language\": \"ts\",","288","            \"name\": \"Sonar way\",","289","          },","290","        ],","291","        \"tags\": Array [],","294","    filters={","295","      Object {","296","        \"assignedToMe\": true,","297","        \"sinceLeakPeriod\": false,","298","        \"status\": \"TO_REVIEW\",","299","      }","300","    }","301","    isStaticListOfHotspots={true}","302","    loadingMeasure={false}","303","    onBranch={false}","304","    onChangeFilters={[MockFunction]}","305","    onShowAllHotspots={[MockFunction]}","306","  \/>","307","  <EmptyHotspotsPage","308","    filtered={true}","309","    isStaticListOfHotspots={true}","310","  \/>"],"delete":["43","  <ScreenPositionHelper>","44","    <Component \/>","45","  <\/ScreenPositionHelper>","50","<div>","51","  <div","52","    className=\"wrapper\"","53","    style={","55","        \"top\": 0,","58","  >","59","    <Suggestions","60","      suggestions=\"security_hotspots\"","61","    \/>","62","    <Helmet","63","      defer={true}","64","      encodeSpecialCharacters={true}","65","      title=\"hotspots.page\"","66","    \/>","67","    <A11ySkipTarget","68","      anchor=\"security_hotspots_main\"","69","    \/>","70","    <EmptyHotspotsPage","71","      filtered={false}","72","      isStaticListOfHotspots={true}","73","    \/>","74","  <\/div>","79","<div>","80","  <div","81","    className=\"wrapper\"","82","    style={","83","      Object {","84","        \"top\": 0,","85","      }","88","    <Suggestions","89","      suggestions=\"security_hotspots\"","91","    <Helmet","92","      defer={true}","93","      encodeSpecialCharacters={true}","94","      title=\"hotspots.page\"","95","    \/>","96","    <A11ySkipTarget","97","      anchor=\"security_hotspots_main\"","98","    \/>","99","    <div","100","      className=\"layout-page\"","101","    >","102","      <div","103","        className=\"sidebar\"","104","      >","105","        <HotspotList","106","          hotspots={","107","            Array [","108","              Object {","109","                \"author\": \"Developer 1\",","110","                \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","111","                \"creationDate\": \"2013-05-13T17:55:39+0200\",","112","                \"key\": \"h1\",","113","                \"line\": 81,","114","                \"message\": \"'3' is a magic number.\",","115","                \"project\": \"com.github.kevinsawicki:http-request\",","116","                \"resolution\": undefined,","117","                \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","118","                \"securityCategory\": \"command-injection\",","119","                \"status\": \"TO_REVIEW\",","120","                \"updateDate\": \"2013-05-13T17:55:39+0200\",","121","                \"vulnerabilityProbability\": \"HIGH\",","122","              },","123","              Object {","124","                \"author\": \"Developer 1\",","125","                \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","126","                \"creationDate\": \"2013-05-13T17:55:39+0200\",","127","                \"key\": \"h2\",","128","                \"line\": 81,","129","                \"message\": \"'3' is a magic number.\",","130","                \"project\": \"com.github.kevinsawicki:http-request\",","131","                \"resolution\": undefined,","132","                \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","133","                \"securityCategory\": \"command-injection\",","134","                \"status\": \"TO_REVIEW\",","135","                \"updateDate\": \"2013-05-13T17:55:39+0200\",","136","                \"vulnerabilityProbability\": \"HIGH\",","137","              },","138","            ]","139","          }","140","          hotspotsTotal={3}","141","          isStaticListOfHotspots={true}","142","          loadingMore={false}","143","          onHotspotClick={[MockFunction]}","144","          onLoadMore={[MockFunction]}","145","          securityCategories={Object {}}","146","          selectedHotspot={","147","            Object {","148","              \"author\": \"Developer 1\",","149","              \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","150","              \"creationDate\": \"2013-05-13T17:55:39+0200\",","151","              \"key\": \"h2\",","152","              \"line\": 81,","153","              \"message\": \"'3' is a magic number.\",","154","              \"project\": \"com.github.kevinsawicki:http-request\",","155","              \"resolution\": undefined,","156","              \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","157","              \"securityCategory\": \"command-injection\",","158","              \"status\": \"TO_REVIEW\",","159","              \"updateDate\": \"2013-05-13T17:55:39+0200\",","160","              \"vulnerabilityProbability\": \"HIGH\",","161","            }","162","          }","163","          statusFilter=\"TO_REVIEW\"","164","        \/>","165","      <\/div>","166","      <div","167","        className=\"main\"","168","      >","169","        <HotspotViewer","170","          component={","171","            Object {","172","              \"breadcrumbs\": Array [],","173","              \"key\": \"my-project\",","174","              \"name\": \"MyProject\",","175","              \"organization\": \"foo\",","176","              \"qualifier\": \"TRK\",","177","              \"qualityGate\": Object {","178","                \"isDefault\": true,","179","                \"key\": \"30\",","180","                \"name\": \"Sonar way\",","181","              },","182","              \"qualityProfiles\": Array [","183","                Object {","184","                  \"deleted\": false,","185","                  \"key\": \"my-qp\",","186","                  \"language\": \"ts\",","187","                  \"name\": \"Sonar way\",","188","                },","189","              ],","190","              \"tags\": Array [],","191","            }","192","          }","193","          hotspotKey=\"h2\"","194","          onUpdateHotspot={[MockFunction]}","195","          securityCategories={Object {}}","196","        \/>","197","      <\/div>","198","    <\/div>","204","<div>","205","  <div","206","    className=\"wrapper\"","207","    style={","209","        \"top\": 0,","212","  >","213","    <Suggestions","214","      suggestions=\"security_hotspots\"","215","    \/>","216","    <Helmet","217","      defer={true}","218","      encodeSpecialCharacters={true}","219","      title=\"hotspots.page\"","220","    \/>","221","    <A11ySkipTarget","222","      anchor=\"security_hotspots_main\"","223","    \/>","224","    <DeferredSpinner","225","      className=\"huge-spacer-left big-spacer-top\"","226","      timeout={100}","227","    \/>","228","  <\/div>","229","<\/div>","230","`;","231","","232","exports[`should render correctly: no hotspots 1`] = `","233","<div>","234","  <div","235","    className=\"wrapper\"","236","    style={","238","        \"top\": 0,","241","  >","242","    <Suggestions","243","      suggestions=\"security_hotspots\"","244","    \/>","245","    <Helmet","246","      defer={true}","247","      encodeSpecialCharacters={true}","248","      title=\"hotspots.page\"","249","    \/>","250","    <A11ySkipTarget","251","      anchor=\"security_hotspots_main\"","252","    \/>","253","    <EmptyHotspotsPage","254","      filtered={false}","255","      isStaticListOfHotspots={true}","256","    \/>","257","  <\/div>","262","<div>","263","  <div","264","    className=\"wrapper\"","265","    style={","267","        \"top\": 0,","270","  >","271","    <Suggestions","272","      suggestions=\"security_hotspots\"","273","    \/>","274","    <Helmet","275","      defer={true}","276","      encodeSpecialCharacters={true}","277","      title=\"hotspots.page\"","278","    \/>","279","    <A11ySkipTarget","280","      anchor=\"security_hotspots_main\"","281","    \/>","282","    <EmptyHotspotsPage","283","      filtered={true}","284","      isStaticListOfHotspots={true}","285","    \/>","286","  <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/FilterBar-test.tsx.snap":[{"add":["4","  className=\"filter-bar-outer\"","6","  <div","7","    className=\"filter-bar\"","9","    <div","10","      className=\"filter-bar-inner display-flex-center\"","11","    >","12","      <a","13","        id=\"show_all_hotspot\"","14","        onClick={[Function]}","15","        role=\"link\"","16","        tabIndex={0}","17","      >","18","        hotspot.filters.show_all","19","      <\/a>","20","    <\/div>","21","  <\/div>","27","  className=\"filter-bar-outer\"","30","    className=\"filter-bar\"","33","      className=\"filter-bar-inner display-flex-center\"","35","      <div","36","        className=\"display-flex-space-between width-100\"","38","        <div","39","          className=\"display-flex-center\"","40","        >","41","          <h3","42","            className=\"huge-spacer-right\"","43","          >","44","            hotspot.filters.title","45","          <\/h3>","46","          <span","47","            className=\"spacer-right\"","48","          >","49","            status","50","          <\/span>","51","          <Select","52","            className=\"input-medium big-spacer-right\"","53","            clearable={false}","54","            onChange={[Function]}","55","            options={","56","              Array [","57","                Object {","58","                  \"label\": \"hotspot.filters.status.to_review\",","59","                  \"value\": \"TO_REVIEW\",","60","                },","61","                Object {","62","                  \"label\": \"hotspot.filters.status.fixed\",","63","                  \"value\": \"FIXED\",","64","                },","65","                Object {","66","                  \"label\": \"hotspot.filters.status.safe\",","67","                  \"value\": \"SAFE\",","68","                },","69","              ]","70","            }","71","            searchable={false}","72","            value=\"TO_REVIEW\"","73","          \/>","74","          <Select","75","            className=\"input-medium big-spacer-right\"","76","            clearable={false}","77","            onChange={[Function]}","78","            options={","79","              Array [","80","                Object {","81","                  \"label\": \"hotspot.filters.period.since_leak_period\",","82","                  \"value\": true,","83","                },","84","                Object {","85","                  \"label\": \"hotspot.filters.period.overall\",","86","                  \"value\": false,","87","                },","88","              ]","89","            }","90","            searchable={false}","91","            value={false}","92","          \/>","93","        <\/div>","94","        <div","95","          className=\"display-flex-center\"","96","        >","97","          <span","98","            className=\"little-spacer-right\"","99","          >","100","            metric.security_hotspots_reviewed.name","101","          <\/span>","102","          <HelpTooltip","103","            className=\"big-spacer-right\"","104","            overlay=\"hotspots.reviewed.tooltip\"","105","          \/>","106","          <DeferredSpinner","107","            loading={false}","108","            timeout={100}","109","          >","110","            <Measure","111","              className=\"spacer-left huge\"","112","              metricKey=\"security_hotspots_reviewed\"","113","              metricType=\"PERCENT\"","114","            \/>","115","          <\/DeferredSpinner>","116","        <\/div>","117","      <\/div>","125","  className=\"filter-bar-outer\"","128","    className=\"filter-bar\"","131","      className=\"filter-bar-inner display-flex-center\"","133","      <div","134","        className=\"display-flex-space-between width-100\"","136","        <div","137","          className=\"display-flex-center\"","138","        >","139","          <h3","140","            className=\"huge-spacer-right\"","141","          >","142","            hotspot.filters.title","143","          <\/h3>","144","          <RadioToggle","145","            className=\"huge-spacer-right\"","146","            disabled={false}","147","            name=\"assignee-filter\"","148","            onCheck={[Function]}","149","            options={","150","              Array [","151","                Object {","152","                  \"label\": \"hotspot.filters.assignee.assigned_to_me\",","153","                  \"value\": \"me\",","154","                },","155","                Object {","156","                  \"label\": \"hotspot.filters.assignee.all\",","157","                  \"value\": \"all\",","158","                },","159","              ]","160","            }","161","            value=\"all\"","162","          \/>","163","          <span","164","            className=\"spacer-right\"","165","          >","166","            status","167","          <\/span>","168","          <Select","169","            className=\"input-medium big-spacer-right\"","170","            clearable={false}","171","            onChange={[Function]}","172","            options={","173","              Array [","174","                Object {","175","                  \"label\": \"hotspot.filters.status.to_review\",","176","                  \"value\": \"TO_REVIEW\",","177","                },","178","                Object {","179","                  \"label\": \"hotspot.filters.status.fixed\",","180","                  \"value\": \"FIXED\",","181","                },","182","                Object {","183","                  \"label\": \"hotspot.filters.status.safe\",","184","                  \"value\": \"SAFE\",","185","                },","186","              ]","187","            }","188","            searchable={false}","189","            value=\"TO_REVIEW\"","190","          \/>","191","          <Select","192","            className=\"input-medium big-spacer-right\"","193","            clearable={false}","194","            onChange={[Function]}","195","            options={","196","              Array [","197","                Object {","198","                  \"label\": \"hotspot.filters.period.since_leak_period\",","199","                  \"value\": true,","200","                },","201","                Object {","202","                  \"label\": \"hotspot.filters.period.overall\",","203","                  \"value\": false,","204","                },","205","              ]","206","            }","207","            searchable={false}","208","            value={false}","209","          \/>","210","        <\/div>","211","        <div","212","          className=\"display-flex-center\"","213","        >","214","          <span","215","            className=\"little-spacer-right\"","216","          >","217","            metric.security_hotspots_reviewed.name","218","          <\/span>","219","          <HelpTooltip","220","            className=\"big-spacer-right\"","221","            overlay=\"hotspots.reviewed.tooltip\"","222","          \/>","223","          <DeferredSpinner","224","            loading={false}","225","            timeout={100}","226","          >","227","            <Measure","228","              className=\"spacer-left huge\"","229","              metricKey=\"security_hotspots_reviewed\"","230","              metricType=\"PERCENT\"","231","            \/>","232","          <\/DeferredSpinner>","233","        <\/div>","234","      <\/div>","242","  className=\"filter-bar-outer\"","245","    className=\"filter-bar\"","248","      className=\"filter-bar-inner display-flex-center\"","250","      <div","251","        className=\"display-flex-space-between width-100\"","253","        <div","254","          className=\"display-flex-center\"","255","        >","256","          <h3","257","            className=\"huge-spacer-right\"","258","          >","259","            hotspot.filters.title","260","          <\/h3>","261","          <RadioToggle","262","            className=\"huge-spacer-right\"","263","            disabled={false}","264","            name=\"assignee-filter\"","265","            onCheck={[Function]}","266","            options={","267","              Array [","268","                Object {","269","                  \"label\": \"hotspot.filters.assignee.assigned_to_me\",","270","                  \"value\": \"me\",","271","                },","272","                Object {","273","                  \"label\": \"hotspot.filters.assignee.all\",","274","                  \"value\": \"all\",","275","                },","276","              ]","277","            }","278","            value=\"all\"","279","          \/>","280","          <span","281","            className=\"spacer-right\"","282","          >","283","            status","284","          <\/span>","285","          <Select","286","            className=\"input-medium big-spacer-right\"","287","            clearable={false}","288","            onChange={[Function]}","289","            options={","290","              Array [","291","                Object {","292","                  \"label\": \"hotspot.filters.status.to_review\",","293","                  \"value\": \"TO_REVIEW\",","294","                },","295","                Object {","296","                  \"label\": \"hotspot.filters.status.fixed\",","297","                  \"value\": \"FIXED\",","298","                },","299","                Object {","300","                  \"label\": \"hotspot.filters.status.safe\",","301","                  \"value\": \"SAFE\",","302","                },","303","              ]","304","            }","305","            searchable={false}","306","            value=\"TO_REVIEW\"","307","          \/>","308","          <Select","309","            className=\"input-medium big-spacer-right\"","310","            clearable={false}","311","            onChange={[Function]}","312","            options={","313","              Array [","314","                Object {","315","                  \"label\": \"hotspot.filters.period.since_leak_period\",","316","                  \"value\": true,","317","                },","318","                Object {","319","                  \"label\": \"hotspot.filters.period.overall\",","320","                  \"value\": false,","321","                },","322","              ]","323","            }","324","            searchable={false}","325","            value={false}","326","          \/>","327","        <\/div>","328","      <\/div>","336","  className=\"filter-bar-outer\"","339","    className=\"filter-bar\"","342","      className=\"filter-bar-inner display-flex-center\"","344","      <div","345","        className=\"display-flex-space-between width-100\"","347","        <div","348","          className=\"display-flex-center\"","349","        >","350","          <h3","351","            className=\"huge-spacer-right\"","352","          >","353","            hotspot.filters.title","354","          <\/h3>","355","          <span","356","            className=\"spacer-right\"","357","          >","358","            status","359","          <\/span>","360","          <Select","361","            className=\"input-medium big-spacer-right\"","362","            clearable={false}","363","            onChange={[Function]}","364","            options={","365","              Array [","366","                Object {","367","                  \"label\": \"hotspot.filters.status.to_review\",","368","                  \"value\": \"TO_REVIEW\",","369","                },","370","                Object {","371","                  \"label\": \"hotspot.filters.status.fixed\",","372","                  \"value\": \"FIXED\",","373","                },","374","                Object {","375","                  \"label\": \"hotspot.filters.status.safe\",","376","                  \"value\": \"SAFE\",","377","                },","378","              ]","379","            }","380","            searchable={false}","381","            value=\"TO_REVIEW\"","382","          \/>","383","        <\/div>","384","        <div","385","          className=\"display-flex-center\"","386","        >","387","          <span","388","            className=\"little-spacer-right\"","389","          >","390","            metric.security_hotspots_reviewed.name","391","          <\/span>","392","          <HelpTooltip","393","            className=\"big-spacer-right\"","394","            overlay=\"hotspots.reviewed.tooltip\"","395","          \/>","396","          <DeferredSpinner","397","            loading={false}","398","            timeout={100}","399","          >","400","            <Measure","401","              className=\"spacer-left huge\"","402","              metricKey=\"new_security_hotspots_reviewed\"","403","              metricType=\"PERCENT\"","404","            \/>","405","          <\/DeferredSpinner>","406","        <\/div>","407","      <\/div>","415","  className=\"filter-bar-outer\"","418","    className=\"filter-bar\"","421","      className=\"filter-bar-inner display-flex-center\"","423","      <div","424","        className=\"display-flex-space-between width-100\"","426","        <div","427","          className=\"display-flex-center\"","428","        >","429","          <h3","430","            className=\"huge-spacer-right\"","431","          >","432","            hotspot.filters.title","433","          <\/h3>","434","          <span","435","            className=\"spacer-right\"","436","          >","437","            status","438","          <\/span>","439","          <Select","440","            className=\"input-medium big-spacer-right\"","441","            clearable={false}","442","            onChange={[Function]}","443","            options={","444","              Array [","445","                Object {","446","                  \"label\": \"hotspot.filters.status.to_review\",","447","                  \"value\": \"TO_REVIEW\",","448","                },","449","                Object {","450","                  \"label\": \"hotspot.filters.status.fixed\",","451","                  \"value\": \"FIXED\",","452","                },","453","                Object {","454","                  \"label\": \"hotspot.filters.status.safe\",","455","                  \"value\": \"SAFE\",","456","                },","457","              ]","458","            }","459","            searchable={false}","460","            value=\"TO_REVIEW\"","461","          \/>","462","          <Select","463","            className=\"input-medium big-spacer-right\"","464","            clearable={false}","465","            onChange={[Function]}","466","            options={","467","              Array [","468","                Object {","469","                  \"label\": \"hotspot.filters.period.since_leak_period\",","470","                  \"value\": true,","471","                },","472","                Object {","473","                  \"label\": \"hotspot.filters.period.overall\",","474","                  \"value\": false,","475","                },","476","              ]","477","            }","478","            searchable={false}","479","            value={false}","480","          \/>","481","        <\/div>","482","        <div","483","          className=\"display-flex-center\"","484","        >","485","          <span","486","            className=\"little-spacer-right\"","487","          >","488","            metric.security_hotspots_reviewed.name","489","          <\/span>","490","          <HelpTooltip","491","            className=\"big-spacer-right\"","492","            overlay=\"hotspots.reviewed.tooltip\"","493","          \/>","494","          <DeferredSpinner","495","            loading={false}","496","            timeout={100}","497","          >","498","            <CoverageRating","499","              value=\"23.30\"","500","            \/>","501","            <Measure","502","              className=\"spacer-left huge\"","503","              metricKey=\"security_hotspots_reviewed\"","504","              metricType=\"PERCENT\"","505","              value=\"23.30\"","506","            \/>","507","          <\/DeferredSpinner>","508","        <\/div>","509","      <\/div>"],"delete":["4","  className=\"filter-bar display-flex-center\"","6","  <a","7","    id=\"show_all_hotspot\"","8","    onClick={[Function]}","9","    role=\"link\"","10","    tabIndex={0}","12","    hotspot.filters.show_all","13","  <\/a>","19","  className=\"filter-bar display-flex-center\"","22","    className=\"display-flex-space-between width-100\"","25","      className=\"display-flex-center\"","27","      <h3","28","        className=\"huge-spacer-right\"","30","        hotspot.filters.title","31","      <\/h3>","32","      <span","33","        className=\"spacer-right\"","34","      >","35","        status","36","      <\/span>","37","      <Select","38","        className=\"input-medium big-spacer-right\"","39","        clearable={false}","40","        onChange={[Function]}","41","        options={","42","          Array [","43","            Object {","44","              \"label\": \"hotspot.filters.status.to_review\",","45","              \"value\": \"TO_REVIEW\",","46","            },","47","            Object {","48","              \"label\": \"hotspot.filters.status.fixed\",","49","              \"value\": \"FIXED\",","50","            },","51","            Object {","52","              \"label\": \"hotspot.filters.status.safe\",","53","              \"value\": \"SAFE\",","54","            },","55","          ]","56","        }","57","        searchable={false}","58","        value=\"TO_REVIEW\"","59","      \/>","60","      <Select","61","        className=\"input-medium big-spacer-right\"","62","        clearable={false}","63","        onChange={[Function]}","64","        options={","65","          Array [","66","            Object {","67","              \"label\": \"hotspot.filters.period.since_leak_period\",","68","              \"value\": true,","69","            },","70","            Object {","71","              \"label\": \"hotspot.filters.period.overall\",","72","              \"value\": false,","73","            },","74","          ]","75","        }","76","        searchable={false}","77","        value={false}","78","      \/>","79","    <\/div>","80","    <div","81","      className=\"display-flex-center\"","82","    >","83","      <span","84","        className=\"little-spacer-right\"","85","      >","86","        metric.security_hotspots_reviewed.name","87","      <\/span>","88","      <HelpTooltip","89","        className=\"big-spacer-right\"","90","        overlay=\"hotspots.reviewed.tooltip\"","91","      \/>","92","      <DeferredSpinner","93","        loading={false}","94","        timeout={100}","95","      >","96","        <Measure","97","          className=\"spacer-left huge\"","98","          metricKey=\"security_hotspots_reviewed\"","99","          metricType=\"PERCENT\"","100","        \/>","101","      <\/DeferredSpinner>","109","  className=\"filter-bar display-flex-center\"","112","    className=\"display-flex-space-between width-100\"","115","      className=\"display-flex-center\"","117","      <h3","118","        className=\"huge-spacer-right\"","120","        hotspot.filters.title","121","      <\/h3>","122","      <RadioToggle","123","        className=\"huge-spacer-right\"","124","        disabled={false}","125","        name=\"assignee-filter\"","126","        onCheck={[Function]}","127","        options={","128","          Array [","129","            Object {","130","              \"label\": \"hotspot.filters.assignee.assigned_to_me\",","131","              \"value\": \"me\",","132","            },","133","            Object {","134","              \"label\": \"hotspot.filters.assignee.all\",","135","              \"value\": \"all\",","136","            },","137","          ]","138","        }","139","        value=\"all\"","140","      \/>","141","      <span","142","        className=\"spacer-right\"","143","      >","144","        status","145","      <\/span>","146","      <Select","147","        className=\"input-medium big-spacer-right\"","148","        clearable={false}","149","        onChange={[Function]}","150","        options={","151","          Array [","152","            Object {","153","              \"label\": \"hotspot.filters.status.to_review\",","154","              \"value\": \"TO_REVIEW\",","155","            },","156","            Object {","157","              \"label\": \"hotspot.filters.status.fixed\",","158","              \"value\": \"FIXED\",","159","            },","160","            Object {","161","              \"label\": \"hotspot.filters.status.safe\",","162","              \"value\": \"SAFE\",","163","            },","164","          ]","165","        }","166","        searchable={false}","167","        value=\"TO_REVIEW\"","168","      \/>","169","      <Select","170","        className=\"input-medium big-spacer-right\"","171","        clearable={false}","172","        onChange={[Function]}","173","        options={","174","          Array [","175","            Object {","176","              \"label\": \"hotspot.filters.period.since_leak_period\",","177","              \"value\": true,","178","            },","179","            Object {","180","              \"label\": \"hotspot.filters.period.overall\",","181","              \"value\": false,","182","            },","183","          ]","184","        }","185","        searchable={false}","186","        value={false}","187","      \/>","188","    <\/div>","189","    <div","190","      className=\"display-flex-center\"","191","    >","192","      <span","193","        className=\"little-spacer-right\"","194","      >","195","        metric.security_hotspots_reviewed.name","196","      <\/span>","197","      <HelpTooltip","198","        className=\"big-spacer-right\"","199","        overlay=\"hotspots.reviewed.tooltip\"","200","      \/>","201","      <DeferredSpinner","202","        loading={false}","203","        timeout={100}","204","      >","205","        <Measure","206","          className=\"spacer-left huge\"","207","          metricKey=\"security_hotspots_reviewed\"","208","          metricType=\"PERCENT\"","209","        \/>","210","      <\/DeferredSpinner>","218","  className=\"filter-bar display-flex-center\"","221","    className=\"display-flex-space-between width-100\"","224","      className=\"display-flex-center\"","226","      <h3","227","        className=\"huge-spacer-right\"","229","        hotspot.filters.title","230","      <\/h3>","231","      <RadioToggle","232","        className=\"huge-spacer-right\"","233","        disabled={false}","234","        name=\"assignee-filter\"","235","        onCheck={[Function]}","236","        options={","237","          Array [","238","            Object {","239","              \"label\": \"hotspot.filters.assignee.assigned_to_me\",","240","              \"value\": \"me\",","241","            },","242","            Object {","243","              \"label\": \"hotspot.filters.assignee.all\",","244","              \"value\": \"all\",","245","            },","246","          ]","247","        }","248","        value=\"all\"","249","      \/>","250","      <span","251","        className=\"spacer-right\"","252","      >","253","        status","254","      <\/span>","255","      <Select","256","        className=\"input-medium big-spacer-right\"","257","        clearable={false}","258","        onChange={[Function]}","259","        options={","260","          Array [","261","            Object {","262","              \"label\": \"hotspot.filters.status.to_review\",","263","              \"value\": \"TO_REVIEW\",","264","            },","265","            Object {","266","              \"label\": \"hotspot.filters.status.fixed\",","267","              \"value\": \"FIXED\",","268","            },","269","            Object {","270","              \"label\": \"hotspot.filters.status.safe\",","271","              \"value\": \"SAFE\",","272","            },","273","          ]","274","        }","275","        searchable={false}","276","        value=\"TO_REVIEW\"","277","      \/>","278","      <Select","279","        className=\"input-medium big-spacer-right\"","280","        clearable={false}","281","        onChange={[Function]}","282","        options={","283","          Array [","284","            Object {","285","              \"label\": \"hotspot.filters.period.since_leak_period\",","286","              \"value\": true,","287","            },","288","            Object {","289","              \"label\": \"hotspot.filters.period.overall\",","290","              \"value\": false,","291","            },","292","          ]","293","        }","294","        searchable={false}","295","        value={false}","296","      \/>","304","  className=\"filter-bar display-flex-center\"","307","    className=\"display-flex-space-between width-100\"","310","      className=\"display-flex-center\"","312","      <h3","313","        className=\"huge-spacer-right\"","315","        hotspot.filters.title","316","      <\/h3>","317","      <span","318","        className=\"spacer-right\"","319","      >","320","        status","321","      <\/span>","322","      <Select","323","        className=\"input-medium big-spacer-right\"","324","        clearable={false}","325","        onChange={[Function]}","326","        options={","327","          Array [","328","            Object {","329","              \"label\": \"hotspot.filters.status.to_review\",","330","              \"value\": \"TO_REVIEW\",","331","            },","332","            Object {","333","              \"label\": \"hotspot.filters.status.fixed\",","334","              \"value\": \"FIXED\",","335","            },","336","            Object {","337","              \"label\": \"hotspot.filters.status.safe\",","338","              \"value\": \"SAFE\",","339","            },","340","          ]","341","        }","342","        searchable={false}","343","        value=\"TO_REVIEW\"","344","      \/>","345","    <\/div>","346","    <div","347","      className=\"display-flex-center\"","348","    >","349","      <span","350","        className=\"little-spacer-right\"","351","      >","352","        metric.security_hotspots_reviewed.name","353","      <\/span>","354","      <HelpTooltip","355","        className=\"big-spacer-right\"","356","        overlay=\"hotspots.reviewed.tooltip\"","357","      \/>","358","      <DeferredSpinner","359","        loading={false}","360","        timeout={100}","361","      >","362","        <Measure","363","          className=\"spacer-left huge\"","364","          metricKey=\"new_security_hotspots_reviewed\"","365","          metricType=\"PERCENT\"","366","        \/>","367","      <\/DeferredSpinner>","375","  className=\"filter-bar display-flex-center\"","378","    className=\"display-flex-space-between width-100\"","381","      className=\"display-flex-center\"","383","      <h3","384","        className=\"huge-spacer-right\"","386","        hotspot.filters.title","387","      <\/h3>","388","      <span","389","        className=\"spacer-right\"","390","      >","391","        status","392","      <\/span>","393","      <Select","394","        className=\"input-medium big-spacer-right\"","395","        clearable={false}","396","        onChange={[Function]}","397","        options={","398","          Array [","399","            Object {","400","              \"label\": \"hotspot.filters.status.to_review\",","401","              \"value\": \"TO_REVIEW\",","402","            },","403","            Object {","404","              \"label\": \"hotspot.filters.status.fixed\",","405","              \"value\": \"FIXED\",","406","            },","407","            Object {","408","              \"label\": \"hotspot.filters.status.safe\",","409","              \"value\": \"SAFE\",","410","            },","411","          ]","412","        }","413","        searchable={false}","414","        value=\"TO_REVIEW\"","415","      \/>","416","      <Select","417","        className=\"input-medium big-spacer-right\"","418","        clearable={false}","419","        onChange={[Function]}","420","        options={","421","          Array [","422","            Object {","423","              \"label\": \"hotspot.filters.period.since_leak_period\",","424","              \"value\": true,","425","            },","426","            Object {","427","              \"label\": \"hotspot.filters.period.overall\",","428","              \"value\": false,","429","            },","430","          ]","431","        }","432","        searchable={false}","433","        value={false}","434","      \/>","435","    <\/div>","436","    <div","437","      className=\"display-flex-center\"","438","    >","439","      <span","440","        className=\"little-spacer-right\"","441","      >","442","        metric.security_hotspots_reviewed.name","443","      <\/span>","444","      <HelpTooltip","445","        className=\"big-spacer-right\"","446","        overlay=\"hotspots.reviewed.tooltip\"","447","      \/>","448","      <DeferredSpinner","449","        loading={false}","450","        timeout={100}","451","      >","452","        <CoverageRating","453","          value=\"23.30\"","454","        \/>","455","        <Measure","456","          className=\"spacer-left huge\"","457","          metricKey=\"security_hotspots_reviewed\"","458","          metricType=\"PERCENT\"","459","          value=\"23.30\"","460","        \/>","461","      <\/DeferredSpinner>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":[{"add":["35","jest.mock('..\/..\/..\/components\/common\/ScreenPositionHelper');","36","","48","  expect(shallowRender({ loading: true })).toMatchSnapshot('loading');","53","  expect(shallowRender({ hotspots, hotspotsTotal: 2 })).toMatchSnapshot();"],"delete":["45","      .find(ScreenPositionHelper)","46","      .dive()","48","  expect(","49","    shallowRender()","50","      .find(ScreenPositionHelper)","51","      .dive()","52","  ).toMatchSnapshot('no hotspots');","53","  expect(","54","    shallowRender({ loading: true })","55","      .find(ScreenPositionHelper)","56","      .dive()","57","  ).toMatchSnapshot('loading');","62","  expect(","63","    shallowRender({ hotspots, hotspotsTotal: 2 })","64","      .find(ScreenPositionHelper)","65","      .dive()","66","  ).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":[{"add":["109","      <div className=\"huge-spacer-bottom\">"],"delete":["109","      <div className=\"huge-spacer-bottom big-padded-right hotspot-list\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":[{"add":["85","      <Suggestions suggestions=\"security_hotspots\" \/>","86","      <Helmet title={translate('hotspots.page')} \/>","87","      <A11ySkipTarget anchor=\"security_hotspots_main\" \/>","88","","100","      {loading && <DeferredSpinner className=\"huge-spacer-left big-spacer-top\" \/>}","102","      {!loading &&","103","        (hotspots.length === 0 || !selectedHotspot ? (","104","          <EmptyHotspotsPage","105","            filtered={","106","              filters.assignedToMe ||","107","              (isBranch(branchLike) && filters.sinceLeakPeriod) ||","108","              filters.status !== HotspotStatusFilter.TO_REVIEW","109","            }","110","            isStaticListOfHotspots={isStaticListOfHotspots}","111","          \/>","112","        ) : (","113","          <div className=\"layout-page\">","114","            <ScreenPositionHelper className=\"layout-page-side-outer\">","115","              {({ top }) => (","116","                <div className=\"layout-page-side\" ref={scrollableRef} style={{ top }}>","117","                  <div className=\"layout-page-side-inner\">","131","              )}","132","            <\/ScreenPositionHelper>","133","","134","            <div className=\"layout-page-main\">","135","              <HotspotViewer","136","                branchLike={branchLike}","137","                component={component}","138","                hotspotKey={selectedHotspot.key}","139","                onUpdateHotspot={props.onUpdateHotspot}","140","                securityCategories={securityCategories}","141","              \/>","142","            <\/div>","144","        ))}"],"delete":["95","      <ScreenPositionHelper>","96","        {({ top }) => (","97","          <div className=\"wrapper\" style={{ top }}>","98","            <Suggestions suggestions=\"security_hotspots\" \/>","99","            <Helmet title={translate('hotspots.page')} \/>","101","            <A11ySkipTarget anchor=\"security_hotspots_main\" \/>","103","            {loading && <DeferredSpinner className=\"huge-spacer-left big-spacer-top\" \/>}","104","","105","            {!loading &&","106","              (hotspots.length === 0 || !selectedHotspot ? (","107","                <EmptyHotspotsPage","108","                  filtered={","109","                    filters.assignedToMe ||","110","                    (isBranch(branchLike) && filters.sinceLeakPeriod) ||","111","                    filters.status !== HotspotStatusFilter.TO_REVIEW","112","                  }","113","                  isStaticListOfHotspots={isStaticListOfHotspots}","114","                \/>","115","              ) : (","116","                <div className=\"layout-page\">","117","                  <div className=\"sidebar\" ref={scrollableRef}>","130","                  <div className=\"main\">","131","                    <HotspotViewer","132","                      branchLike={branchLike}","133","                      component={component}","134","                      hotspotKey={selectedHotspot.key}","135","                      onUpdateHotspot={props.onUpdateHotspot}","136","                      securityCategories={securityCategories}","137","                    \/>","138","                  <\/div>","140","              ))}","142","        )}","143","      <\/ScreenPositionHelper>"]}]}},"56826fb52dbddbe6166f7a1e80065bddc7fd254a":{"changes":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/StickyFacetBuilder.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFacetsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFiltersTest.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/StickyFacetBuilder.java":[{"add":["45","  public static final int FACET_DEFAULT_SIZE = 10;","69","    return buildStickyFacet(fieldName, facetName, FACET_DEFAULT_SIZE, t -> t, selected);"],"delete":["45","  private static final int FACET_DEFAULT_SIZE = 10;","69","    return buildStickyFacet(fieldName, facetName, FACET_DEFAULT_SIZE,  t -> t, selected);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["79","import static org.sonar.api.rules.RuleType.SECURITY_HOTSPOT;","80","import static org.sonar.api.rules.RuleType.VULNERABILITY;","85","import static org.sonar.server.es.StickyFacetBuilder.FACET_DEFAULT_SIZE;","286","        boolQuery()","287","          .must(QueryBuilders.termsQuery(FIELD_RULE_CWE, query.getCwe()))","288","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","293","        boolQuery()","294","          .must(QueryBuilders.termsQuery(FIELD_RULE_OWASP_TOP_10, query.getOwaspTop10()))","295","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","300","        boolQuery()","301","          .must(QueryBuilders.termsQuery(FIELD_RULE_SANS_TOP_25, query.getSansTop25()))","302","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","307","        boolQuery()","308","          .must(QueryBuilders.termsQuery(FIELD_RULE_SONARSOURCE_SECURITY, query.getSonarsourceSecurity()))","309","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","497","  private static Function<TermsAggregationBuilder, AggregationBuilder> filterSecurityCategories() {","498","    return termsAggregation -> AggregationBuilders.filter(","499","      \"filter_by_rule_types_\" + termsAggregation.getName(),","500","      termsQuery(FIELD_RULE_TYPE,","501","        VULNERABILITY.name(),","502","        SECURITY_HOTSPOT.name()))","503","      .subAggregation(termsAggregation);","504","  }","505","","512","          FACET_DEFAULT_SIZE, filterSecurityCategories(),","519","          FACET_DEFAULT_SIZE, filterSecurityCategories(),","526","          FACET_DEFAULT_SIZE, filterSecurityCategories(),","533","          FACET_DEFAULT_SIZE, filterSecurityCategories(),"],"delete":["283","        QueryBuilders.termsQuery(FIELD_RULE_CWE, query.getCwe()));","288","        QueryBuilders.termsQuery(FIELD_RULE_OWASP_TOP_10, query.getOwaspTop10()));","293","        QueryBuilders.termsQuery(FIELD_RULE_SANS_TOP_25, query.getSansTop25()));","298","        QueryBuilders.termsQuery(FIELD_RULE_SONARSOURCE_SECURITY, query.getSonarsourceSecurity()));"]}],"server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFacetsTest.java":[{"add":["27","import org.sonar.api.rules.RuleType;","28","import org.sonar.api.utils.System2;","39","import org.sonar.server.security.SecurityStandards.SQCategory;","174","  public void facets_on_cwe() {","175","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","176","    ComponentDto file = newFileDto(project, null);","177","","178","    indexIssues(","179","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"20\", \"564\", \"89\", \"943\")),","180","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"943\")),","181","      newDoc(\"I3\", file));","182","","183","    assertThatFacetHasOnly(IssueQuery.builder(), \"cwe\",","184","      entry(\"943\", 2L),","185","      entry(\"20\", 1L),","186","      entry(\"564\", 1L),","187","      entry(\"89\", 1L));","188","  }","189","","190","  @Test","191","  public void facets_on_owaspTop10() {","192","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","193","    ComponentDto file = newFileDto(project, null);","194","","195","    indexIssues(","196","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setOwaspTop10(asList(\"a1\", \"a2\")),","197","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setOwaspTop10(singletonList(\"a3\")),","198","      newDoc(\"I3\", file));","199","","200","    assertThatFacetHasOnly(IssueQuery.builder(), \"owaspTop10\",","201","      entry(\"a1\", 1L),","202","      entry(\"a2\", 1L),","203","      entry(\"a3\", 1L));","204","  }","205","","206","  @Test","207","  public void facets_on_sansTop25() {","208","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","209","    ComponentDto file = newFileDto(project, null);","210","","211","    indexIssues(","212","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSansTop25(asList(\"porous-defenses\", \"risky-resource\", \"insecure-interaction\")),","213","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSansTop25(singletonList(\"porous-defenses\")),","214","      newDoc(\"I3\", file));","215","","216","    assertThatFacetHasOnly(IssueQuery.builder(), \"sansTop25\",","217","      entry(\"insecure-interaction\", 1L),","218","      entry(\"porous-defenses\", 2L),","219","      entry(\"risky-resource\", 1L));","220","  }","221","","222","  @Test","223","  public void facets_on_sonarSourceSecurity() {","224","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","225","    ComponentDto file = newFileDto(project, null);","226","","227","    indexIssues(","228","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.BUFFER_OVERFLOW),","229","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.DOS),","230","      newDoc(\"I3\", file));","231","","232","    assertThatFacetHasOnly(IssueQuery.builder(), \"sonarsourceSecurity\",","233","      entry(\"buffer-overflow\", 1L),","234","      entry(\"dos\", 1L));","235","  }","236","","237","  @Test"],"delete":["26","import org.sonar.api.utils.System2;"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["826","  public void only_vulnerabilities_are_returned_by_cwe() {","827","    ComponentDto project = db.components().insertPublicProject();","828","    ComponentDto file = db.components().insertComponent(newFileDto(project));","829","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","830","      .setSecurityStandards(Sets.newHashSet(\"cwe:20\", \"cwe:564\", \"cwe:89\", \"cwe:943\", \"owaspTop10:a1\"))","831","      .setSystemTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","832","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","833","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","834","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","835","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","836","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","837","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","838","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","839","    indexPermissions();","840","    indexIssues();","841","","842","    SearchWsResponse result = ws.newRequest()","843","      .setParam(\"cwe\", \"20\")","844","      .executeProtobuf(SearchWsResponse.class);","845","","846","    assertThat(result.getIssuesList())","847","      .extracting(Issue::getKey)","848","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","849","  }","850","","851","  @Test","852","  public void only_vulnerabilities_are_returned_by_owasp() {","853","    ComponentDto project = db.components().insertPublicProject();","854","    ComponentDto file = db.components().insertComponent(newFileDto(project));","855","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","856","      .setSecurityStandards(Sets.newHashSet(\"cwe:20\", \"cwe:564\", \"cwe:89\", \"cwe:943\", \"owaspTop10:a1\"))","857","      .setSystemTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","858","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","859","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","860","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","861","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","862","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","863","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","864","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","865","    indexPermissions();","866","    indexIssues();","867","","868","    SearchWsResponse result = ws.newRequest()","869","      .setParam(\"owaspTop10\", \"a1\")","870","      .executeProtobuf(SearchWsResponse.class);","871","","872","    assertThat(result.getIssuesList())","873","      .extracting(Issue::getKey)","874","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","875","  }","876","","877","  @Test","878","  public void only_vulnerabilities_are_returned_by_sansTop25() {","879","    ComponentDto project = db.components().insertPublicProject();","880","    ComponentDto file = db.components().insertComponent(newFileDto(project));","881","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","882","      .setSecurityStandards(Sets.newHashSet(\"cwe:266\", \"cwe:732\", \"owaspTop10:a5\"))","883","      .setSystemTags(Sets.newHashSet(\"cert\", \"cwe\", \"owasp-a5\", \"sans-top25-porous\"));","884","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"cert\", \"cwe\", \"owasp-a5\", \"sans-top25-porous\"));","885","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","886","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","887","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","888","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","889","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","890","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","891","    indexPermissions();","892","    indexIssues();","893","","894","    SearchWsResponse result = ws.newRequest()","895","      .setParam(\"sansTop25\", \"porous-defenses\")","896","      .executeProtobuf(SearchWsResponse.class);","897","","898","    assertThat(result.getIssuesList())","899","      .extracting(Issue::getKey)","900","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","901","  }","902","","903","  @Test","904","  public void only_vulnerabilities_are_returned_by_sonarsource_security() {","905","    ComponentDto project = db.components().insertPublicProject();","906","    ComponentDto file = db.components().insertComponent(newFileDto(project));","907","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","908","      .setSecurityStandards(Sets.newHashSet(\"cwe:20\", \"cwe:564\", \"cwe:89\", \"cwe:943\", \"owaspTop10:a1\"))","909","      .setSystemTags(Sets.newHashSet(\"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","910","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","911","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","912","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","913","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","914","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","915","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","916","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","917","    indexPermissions();","918","    indexIssues();","919","","920","    SearchWsResponse result = ws.newRequest()","921","      .setParam(\"sonarsourceSecurity\", \"sql-injection\")","922","      .executeProtobuf(SearchWsResponse.class);","923","","924","    assertThat(result.getIssuesList())","925","      .extracting(Issue::getKey)","926","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","927","  }","928","","929","  @Test","981","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","982","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));"],"delete":["877","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer);","878","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer);"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["33","import org.sonar.api.rules.RuleType;","62","import static org.sonar.api.rules.RuleType.SECURITY_HOTSPOT;","459","  public void search_by_security_cwe_return_vulnerabilities_and_hotspots_only() {","460","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"cwe:543\", \"cwe:123\", \"owaspTop10:a1\")), r -> r.setType(VULNERABILITY));","461","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"cwe:543\", \"owaspTop10:a1\")), r -> r.setType(SECURITY_HOTSPOT));","462","    createRule(setSecurityStandards(of(\"owaspTop10:a1\")), r -> r.setType(CODE_SMELL));","471","  public void search_by_security_owaspTop10_return_vulnerabilities_and_hotspots_only() {","472","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:543\")), r -> r.setType(VULNERABILITY));","473","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:543\")), r -> r.setType(SECURITY_HOTSPOT));","474","    createRule(setSecurityStandards(of(\"cwe:543\")), r -> r.setType(CODE_SMELL));","483","  public void search_by_security_sansTop25_return_vulnerabilities_and_hotspots_only() {","484","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")), r -> r.setType(VULNERABILITY));","485","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")), r -> r.setType(SECURITY_HOTSPOT));","486","    createRule(setSecurityStandards(of(\"cwe:306\")), r -> r.setType(CODE_SMELL));","495","  public void search_by_security_sonarsource_return_vulnerabilities_and_hotspots_only() {","496","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")), r -> r.setType(VULNERABILITY));","497","    createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")), r -> r.setType(CODE_SMELL));","498","    RuleDefinitionDto rule3 = createRule(setSecurityStandards(of(\"cwe:601\")), r -> r.setType(SECURITY_HOTSPOT));"],"delete":["457","  public void search_by_security_cwe() {","458","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"cwe:543\", \"cwe:123\", \"owaspTop10:a1\")));","459","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"cwe:543\", \"owaspTop10:a1\")));","460","    createRule(setSecurityStandards(of(\"owaspTop10:a1\")));","469","  public void search_by_security_owaspTop10() {","470","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:543\")));","471","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:543\")));","472","    createRule(setSecurityStandards(of(\"cwe:543\")));","481","  public void search_by_security_sansTop25() {","482","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")));","483","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")));","484","    createRule(setSecurityStandards(of(\"cwe:306\")));","493","  public void search_by_security_sonarsource() {","494","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")));","495","    createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")));","496","    RuleDefinitionDto rule3 = createRule(setSecurityStandards(of(\"cwe:601\")));"]}],"server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["435","","436","    \/\/ security category","437","    addSecurityCategoryFilter(FIELD_ISSUE_OWASP_TOP_10, OWASP_TOP_10, query.owaspTop10(), filters);","438","    addSecurityCategoryFilter(FIELD_ISSUE_SANS_TOP_25, SANS_TOP_25, query.sansTop25(), filters);","439","    addSecurityCategoryFilter(FIELD_ISSUE_CWE, CWE, query.cwe(), filters);","440","    addSecurityCategoryFilter(FIELD_ISSUE_SQ_SECURITY_CATEGORY, SONARSOURCE_SECURITY, query.sonarsourceSecurity(), filters);","441","","450","  private static void addSecurityCategoryFilter(String fieldName, Facet facet, Collection<String> values, AllFilters allFilters) {","451","    QueryBuilder securityCategoryFilter = createTermsFilter(fieldName, values);","452","    if (securityCategoryFilter != null) {","453","      allFilters.addFilter(","454","        fieldName,","455","        facet.getFilterScope(),","456","        boolQuery()","457","          .must(securityCategoryFilter)","458","          .must(termQuery(FIELD_ISSUE_TYPE, VULNERABILITY.name())));","459","    }","460","  }","461","","670","","671","    addSecurityCategoryFacetIfNeeded(PARAM_OWASP_TOP_10, OWASP_TOP_10, options, aggregationHelper, esRequest, query.owaspTop10().toArray());","672","    addSecurityCategoryFacetIfNeeded(PARAM_SANS_TOP_25, SANS_TOP_25, options, aggregationHelper, esRequest, query.sansTop25().toArray());","673","    addSecurityCategoryFacetIfNeeded(PARAM_CWE, CWE, options, aggregationHelper, esRequest, query.cwe().toArray());","674","    addSecurityCategoryFacetIfNeeded(PARAM_SONARSOURCE_SECURITY, SONARSOURCE_SECURITY, options, aggregationHelper, esRequest, query.sonarsourceSecurity().toArray());","675","","698","  private static void addSecurityCategoryFacetIfNeeded(String param, Facet facet, SearchOptions options, TopAggregationHelper aggregationHelper, SearchRequestBuilder esRequest,","699","    Object[] selectedValues) {","700","    if (!options.getFacets().contains(param)) {","701","      return;","702","    }","703","","704","    AggregationBuilder aggregation = aggregationHelper.buildTermTopAggregation(","705","      facet.getName(), facet.getTopAggregationDef(), facet.getNumberOfTerms(),","706","      filter -> filter.must(termQuery(FIELD_ISSUE_TYPE, VULNERABILITY.name())),","707","      t -> aggregationHelper.getSubAggregationHelper().buildSelectedItemsAggregation(facet.getName(), facet.getTopAggregationDef(), selectedValues)","708","        .ifPresent(t::subAggregation));","709","    esRequest.addAggregation(aggregation);","710","  }","711",""],"delete":["435","    filters.addFilter(","436","      FIELD_ISSUE_OWASP_TOP_10, OWASP_TOP_10.getFilterScope(),","437","      createTermsFilter(FIELD_ISSUE_OWASP_TOP_10, query.owaspTop10()));","438","    filters.addFilter(","439","      FIELD_ISSUE_SANS_TOP_25, SANS_TOP_25.getFilterScope(),","440","      createTermsFilter(FIELD_ISSUE_SANS_TOP_25, query.sansTop25()));","441","    filters.addFilter(FIELD_ISSUE_CWE, CWE.getFilterScope(), createTermsFilter(FIELD_ISSUE_CWE, query.cwe()));","443","    filters.addFilter(","444","      FIELD_ISSUE_SQ_SECURITY_CATEGORY, SONARSOURCE_SECURITY.getFilterScope(),","445","      createTermsFilter(FIELD_ISSUE_SQ_SECURITY_CATEGORY, query.sonarsourceSecurity()));","661","    addFacetIfNeeded(options, aggregationHelper, esRequest, OWASP_TOP_10, query.owaspTop10().toArray());","662","    addFacetIfNeeded(options, aggregationHelper, esRequest, SANS_TOP_25, query.sansTop25().toArray());","663","    addFacetIfNeeded(options, aggregationHelper, esRequest, CWE, query.cwe().toArray());","664","    addFacetIfNeeded(options, aggregationHelper, esRequest, SONARSOURCE_SECURITY, query.sonarsourceSecurity().toArray());"]}],"server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFiltersTest.java":[{"add":["34","import org.sonar.api.rules.RuleType;","45","import org.sonar.server.security.SecurityStandards.SQCategory;","744","  @Test","745","  public void filter_by_cwe() {","746","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","747","    ComponentDto file = newFileDto(project, null);","748","","749","    indexIssues(","750","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"20\", \"564\", \"89\", \"943\")),","751","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"943\")),","752","      newDoc(\"I3\", file));","753","","754","    assertThatSearchReturnsOnly(IssueQuery.builder().cwe(asList(\"20\")), \"I1\");","755","  }","756","","757","  @Test","758","  public void filter_by_owaspTop10() {","759","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","760","    ComponentDto file = newFileDto(project, null);","761","","762","    indexIssues(","763","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setOwaspTop10(asList(\"a1\", \"a2\")),","764","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setCwe(singletonList(\"a3\")),","765","      newDoc(\"I3\", file));","766","","767","    assertThatSearchReturnsOnly(IssueQuery.builder().owaspTop10(asList(\"a1\")), \"I1\");","768","  }","769","","770","  @Test","771","  public void filter_by_sansTop25() {","772","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","773","    ComponentDto file = newFileDto(project, null);","774","","775","    indexIssues(","776","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSansTop25(asList(\"porous-defenses\", \"risky-resource\", \"insecure-interaction\")),","777","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSansTop25(singletonList(\"porous-defenses\")),","778","      newDoc(\"I3\", file));","779","","780","    assertThatSearchReturnsOnly(IssueQuery.builder().sansTop25(asList(\"risky-resource\")), \"I1\");","781","  }","782","","783","  @Test","784","  public void filter_by_sonarSecurity() {","785","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","786","    ComponentDto file = newFileDto(project, null);","787","","788","    indexIssues(","789","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.BUFFER_OVERFLOW),","790","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.DOS),","791","      newDoc(\"I3\", file));","792","","793","    assertThatSearchReturnsOnly(IssueQuery.builder().sonarsourceSecurity(singletonList(\"buffer-overflow\")), \"I1\");","794","  }","795",""],"delete":[]}]}},"00d449d02ed7525705d29769d6a9d282337e117c":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/documentation\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/documentation\/styles.css":[{"add":["82",".documentation-content.markdown li > p,","83",".documentation-content.markdown li > p + pre {"],"delete":["82",".documentation-content.markdown li > p {"]}]}},"bba4533a8756e66a65656861507720b4c535194b":{"changes":{"\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/handleRequiredAuthentication-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/app\/utils\/throwGlobalError.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/throwGlobalError-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/api\/components.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/ComponentContainer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/handleRequiredAuthentication-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/throwGlobalError.ts":[{"add":["27","  parseError(error).then(","28","    message => {","30","    },","31","    () => {}","32","  );"],"delete":["27","  parseError(error)","28","    .then(message => {","30","    })","31","    .catch(() => {});","32",""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["721","  ]).then(([sourceViewerComponent, { component }]) => ({","722","    ...sourceViewerComponent,","723","    leakPeriodDate: component.leakPeriodDate"],"delete":["721","  ]).then(([component, data]) => ({","722","    ...component,","723","    leakPeriodDate: data.leakPeriodDate"]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/throwGlobalError-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/components.ts":[{"add":["124","): Promise<{ component: T.ComponentMeasure }> {","125","  return getJSON('\/api\/measures\/component', data);","153","export function getComponentData(data: { component: string } & T.BranchParameters): Promise<any> {","154","  return getJSON('\/api\/components\/show', data);","155","}","156","","160","  return getComponentData(data).then(({ component }) => component !== undefined, () => false);","164","  return getComponentData(data).catch(throwGlobalError);"],"delete":["124","): Promise<any> {","125","  return getJSON('\/api\/measures\/component', data).then(r => r.component, throwGlobalError);","156","  return getJSON('\/api\/components\/show', data).then(","157","    ({ component }) => component !== undefined,","158","    () => false","159","  );","163","  return getJSON('\/api\/components\/show', data).catch(throwGlobalError);","177","export function getComponentData(data: { component: string } & T.BranchParameters): Promise<any> {","178","  return getComponentShow(data).then(r => r.component);","179","}","180",""]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":[{"add":["125","  }).then(({ component }) => {"],"delete":["125","  }).then(component => {"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/ComponentContainer-test.tsx":[{"add":["60","  getComponentData: jest.fn().mockResolvedValue({ component: { analysisDate: '2018-07-30' } })","132","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({","133","    component: { organization: 'org' }","134","  });","143","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({","144","    component: { organization: 'org' }","145","  });"],"delete":["60","  getComponentData: jest.fn().mockResolvedValue({ analysisDate: '2018-07-30' })","132","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({ organization: 'org' });","141","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({ organization: 'org' });"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":[{"add":["116","      .then(([nav, { component }]) => {","117","        const componentWithQualifier = this.addQualifier({ ...nav, ...component });","120","          this.props.fetchOrganization(componentWithQualifier.organization);","122","        return componentWithQualifier;","123","      }, onError)","125","      .then(","126","        ({ branchLike, branchLikes, component }) => {","127","          if (this.mounted) {","128","            this.setState({","129","              branchLike,","130","              branchLikes,","131","              component,","132","              loading: false","133","            });","134","            this.fetchStatus(component);","135","            this.fetchWarnings(component, branchLike);","136","          }","137","        },","138","        () => {}","139","      );"],"delete":["116","      .then(([nav, data]) => {","117","        const component = this.addQualifier({ ...nav, ...data });","120","          this.props.fetchOrganization(component.organization);","122","        return component;","123","      })","125","      .then(({ branchLike, branchLikes, component }) => {","126","        if (this.mounted) {","127","          this.setState({","128","            branchLike,","129","            branchLikes,","130","            component,","131","            loading: false","132","          });","133","          this.fetchStatus(component);","134","          this.fetchWarnings(component, branchLike);","135","        }","136","      })","137","      .catch(onError);"]}]}},"2ce4dce9c220bdde53d7d22278f24b36490deffc":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","162","  public void add_does_not_count_component_if_null_neither_globally_nor_per_assignee() {","170","        assertThat(distribution.getTotal()).isEqualTo(0);","171","        assertThat(distribution.getForLabel(null).isPresent()).isFalse();","207","  public void add_does_not_count_ruleKey_if_null_neither_globally_nor_per_assignee() {","402","  @Test","403","  public void verify_toString() {","404","    String componentUuid = randomAlphanumeric(2);","405","    String tag = randomAlphanumeric(3);","406","    String assignee = randomAlphanumeric(4);","407","    int effort = 10 + new Random().nextInt(5);","408","    RuleKey ruleKey = RuleKey.of(randomAlphanumeric(5), randomAlphanumeric(6));","409","    underTest.add(new DefaultIssue()","410","      .setSeverity(Severity.BLOCKER)","411","      .setComponentUuid(componentUuid)","412","      .setTags(ImmutableSet.of(tag))","413","      .setAssignee(assignee)","414","      .setRuleKey(ruleKey)","415","      .setEffort(Duration.create(effort)));","416","","417","    assertThat(underTest.toString())","418","      .isEqualTo(\"NewIssuesStatistics{\" +","419","        \"assigneesStatistics={\" + assignee + \"=\" +","420","        \"Stats{distributions={\" +","421","        \"SEVERITY=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","422","        \"statsPerLabel={\" + Severity.BLOCKER + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","423","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","424","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","425","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","426","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","427","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","428","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","429","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","430","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","431","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}, \" +","432","        \"globalStatistics=Stats{distributions={\" +","433","        \"SEVERITY=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","434","        \"statsPerLabel={\" + Severity.BLOCKER + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","435","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","436","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","437","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","438","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","439","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","440","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","441","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","442","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","443","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}\");","444","  }","445","","455","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onLeak, int offLeak, int total) {","456","    Optional<MetricStatsInt> statsOption = distribution.getForLabel(label);","457","    assertThat(statsOption.isPresent()).describedAs(\"distribution for label %s not found\", label).isTrue();","458","    MetricStatsInt stats = statsOption.get();","459","    assertThat(stats.getOnLeak()).isEqualTo(onLeak);","460","    assertThat(stats.getOffLeak()).isEqualTo(offLeak);","461","    assertThat(stats.getTotal()).isEqualTo(total);"],"delete":["161","  public void add_counts_component_if_null_globally_and_per_assignee_as_it_should_not_be_null() {","169","        assertThat(distribution.getTotal()).isEqualTo(1);","170","        assertThat(distribution.getForLabel(null).isPresent()).isTrue();","206","  public void add_does_not_count_ruleKey_if_neither_neither_globally_nor_per_assignee() {","378","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onLeak, int offLeak, int total) {","379","    Optional<MetricStatsInt> statsOption = distribution.getForLabel(label);","380","    assertThat(statsOption.isPresent()).describedAs(\"distribution for label %s not found\", label).isTrue();","381","    MetricStatsInt stats = statsOption.get();","382","    assertThat(stats.getOnLeak()).isEqualTo(onLeak);","383","    assertThat(stats.getOffLeak()).isEqualTo(offLeak);","384","    assertThat(stats.getTotal()).isEqualTo(total);","385","  }","386","","419","  @CheckForNull","420","  private Integer countDistributionOnLeak(Metric metric, String label) {","421","    return underTest.globalStatistics()","422","      .getDistributedMetricStats(metric)","423","      .getForLabel(label)","424","      .map(MetricStatsInt::getOnLeak)","425","      .orElse(null);","428","  @CheckForNull","429","  private Integer countDistributionOffLeak(Metric metric, String label) {","430","    return underTest.globalStatistics()","431","      .getDistributedMetricStats(metric)","432","      .getForLabel(label)","433","      .map(MetricStatsInt::getOffLeak)","434","      .orElse(null);","435","  }","436","","437","  private DefaultIssue defaultIssue() {","438","    return new DefaultIssue()","439","      .setAssignee(\"maynard\")","440","      .setComponentUuid(\"file-uuid\")","441","      .setNew(true)","442","      .setSeverity(Severity.INFO)","443","      .setRuleKey(RuleKey.of(\"SonarQube\", \"rule-the-world\"))","444","      .setTags(Lists.newArrayList(\"bug\", \"owasp\"))","445","      .setEffort(Duration.create(5L));","446","  }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":[{"add":["21","import com.google.common.collect.ImmutableMap;","26","import java.util.Optional;","27","import java.util.Set;","39","import org.sonar.db.RowNotFoundException;","40","import org.sonar.db.component.ComponentDto;","107","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","108","    Set<RuleKey> ruleKeys = fiveBiggest","109","      .stream()","110","      .map(Map.Entry::getKey)","111","      .map(RuleKey::parse)","112","      .collect(MoreCollectors.toSet(fiveBiggest.size()));","113","    ImmutableMap<String, RuleDefinitionDto> ruleByRuleKey = dbClient.ruleDao().selectDefinitionByKeys(dbSession, ruleKeys)","114","      .stream()","115","      .collect(MoreCollectors.uniqueIndex(s -> s.getKey().toString()));","117","    for (Map.Entry<String, MetricStatsInt> ruleStats : fiveBiggest) {","119","      RuleDefinitionDto rule = Optional.ofNullable(ruleByRuleKey.get(ruleKey))","120","        .orElseThrow(() -> new RowNotFoundException(String.format(\"Rule with key '%s' does not exist\", ruleKey)));","131","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","132","    Set<String> componentUuids = fiveBiggest","133","      .stream()","134","      .map(Map.Entry::getKey)","135","      .collect(MoreCollectors.toSet(fiveBiggest.size()));","136","    Map<String, ComponentDto> componentDtosByUuid = dbClient.componentDao().selectByUuids(dbSession, componentUuids)","137","      .stream()","138","      .collect(MoreCollectors.uniqueIndex(ComponentDto::uuid));","139","    for (Map.Entry<String, MetricStatsInt> componentStats : fiveBiggest) {","141","      String componentName = Optional.ofNullable(componentDtosByUuid.get(uuid))","142","        .map(ComponentDto::name)","143","        .orElseThrow(() -> new RowNotFoundException(String.format(\"Component with uuid '%s' not found\", uuid)));"],"delete":["103","    for (Map.Entry<String, MetricStatsInt> ruleStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak)) {","105","      RuleDefinitionDto rule = dbClient.ruleDao().selectOrFailDefinitionByKey(dbSession, RuleKey.parse(ruleKey));","116","    for (Map.Entry<String, MetricStatsInt> componentStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak)) {","118","      String componentName = dbClient.componentDao().selectOrFailByUuid(dbSession, uuid).name();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":[{"add":["21","import com.google.common.collect.ImmutableList;","22","import com.google.common.collect.ImmutableSet;","24","import java.util.Arrays;","25","import java.util.Collections;","27","import java.util.Random;","28","import java.util.stream.Collectors;","29","import java.util.stream.IntStream;","30","import org.junit.Before;","38","import org.sonar.core.util.stream.MoreCollectors;","41","import org.sonar.db.component.ComponentDao;","42","import org.sonar.db.component.ComponentDto;","43","import org.sonar.db.rule.RuleDao;","47","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","50","import static org.mockito.Matchers.anyBoolean;","51","import static org.mockito.Matchers.anyCollection;","52","import static org.mockito.Matchers.same;","64","  private NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","65","  private UserIndex userIndex = mock(UserIndex.class);","66","  private DbClient dbClient = mock(DbClient.class);","67","  private DbSession dbSession = mock(DbSession.class);","68","  private ComponentDao componentDao = mock(ComponentDao.class);","69","  private RuleDao ruleDao = mock(RuleDao.class);","70","  private Durations durations = mock(Durations.class);","71","  private NewIssuesNotification underTest = new NewIssuesNotification(userIndex, dbClient, durations);","72","","73","  @Before","74","  public void setUp() throws Exception {","75","    when(dbClient.openSession(anyBoolean())).thenReturn(dbSession);","76","    when(dbClient.componentDao()).thenReturn(componentDao);","77","    when(dbClient.ruleDao()).thenReturn(ruleDao);","78","    when(componentDao.selectByUuids(same(dbSession), anyCollection())).thenReturn(Collections.emptyList());","79","  }","114","    when(componentDao.selectByUuids(dbSession, ImmutableSet.of(\"file-uuid\", \"directory-uuid\")))","115","      .thenReturn(Arrays.asList(","116","        new ComponentDto().setUuid(\"file-uuid\").setName(\"file-name\"),","117","        new ComponentDto().setUuid(\"directory-uuid\").setName(\"directory-name\")));","118","    RuleKey rule1 = RuleKey.of(\"SonarQube\", \"rule-the-world\");","119","    RuleKey rule2 = RuleKey.of(\"SonarQube\", \"rule-the-universe\");","120","    when(ruleDao.selectDefinitionByKeys(dbSession, ImmutableSet.of(rule1, rule2)))","121","      .thenReturn(","122","        ImmutableList.of(newRule(rule1, \"Rule the World\", \"Java\"), newRule(rule2, \"Rule the Universe\", \"Clojure\")));","148","  public void add_only_5_assignees_with_biggest_issue_counts() {","149","    Random random = new Random();","150","    String[] assignees = IntStream.range(0, 6 + random.nextInt(10)).mapToObj(s -> \"assignee\" + s).toArray(String[]::new);","151","    NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","152","    int i = assignees.length;","153","    for (String assignee : assignees) {","154","      IntStream.range(0, i).mapToObj(j -> new DefaultIssue().setAssignee(assignee)).forEach(stats::add);","155","      i--;","156","    }","157","","158","    underTest.setStatistics(randomAlphanumeric(20), stats);","159","","160","    for (int j = 0; j < 5; j++) {","161","      String fieldBase = ASSIGNEE + \".\" + (j + 1);","162","      assertThat(underTest.getFieldValue(fieldBase + \".label\")).as(\"label of %s\", fieldBase).isEqualTo(assignees[j]);","163","      assertThat(underTest.getFieldValue(fieldBase + \".count\")).as(\"count of %s\", fieldBase).isEqualTo(String.valueOf(assignees.length - j));","164","    }","165","    assertThat(underTest.getFieldValue(ASSIGNEE + \".6.label\")).isNull();","166","    assertThat(underTest.getFieldValue(ASSIGNEE + \".6.count\")).isNull();","167","  }","168","","169","  @Test","170","  public void add_only_5_components_with_biggest_issue_counts() {","171","    Random random = new Random();","172","    String[] componentUuids = IntStream.range(0, 6 + random.nextInt(10)).mapToObj(s -> \"component_uuid_\" + s).toArray(String[]::new);","173","    NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","174","    int i = componentUuids.length;","175","    for (String component : componentUuids) {","176","      IntStream.range(0, i).mapToObj(j -> new DefaultIssue().setComponentUuid(component)).forEach(stats::add);","177","      i--;","178","    }","179","    when(componentDao.selectByUuids(dbSession, Arrays.stream(componentUuids).limit(5).collect(Collectors.toSet())))","180","      .thenReturn(","181","        Arrays.stream(componentUuids).map(uuid -> new ComponentDto().setUuid(uuid).setName(\"name_\" + uuid)).collect(MoreCollectors.toList()));","182","","183","    underTest.setStatistics(randomAlphanumeric(20), stats);","184","","185","    for (int j = 0; j < 5; j++) {","186","      String fieldBase = COMPONENT + \".\" + (j + 1);","187","      assertThat(underTest.getFieldValue(fieldBase + \".label\")).as(\"label of %s\", fieldBase).isEqualTo(\"name_\" + componentUuids[j]);","188","      assertThat(underTest.getFieldValue(fieldBase + \".count\")).as(\"count of %s\", fieldBase).isEqualTo(String.valueOf(componentUuids.length - j));","189","    }","190","    assertThat(underTest.getFieldValue(COMPONENT + \".6.label\")).isNull();","191","    assertThat(underTest.getFieldValue(COMPONENT + \".6.count\")).isNull();","192","  }","193","","194","  @Test","195","  public void add_only_5_rules_with_biggest_issue_counts() {","196","    Random random = new Random();","197","    String repository = randomAlphanumeric(4);","198","    String[] ruleKeys = IntStream.range(0, 6 + random.nextInt(10)).mapToObj(s -> \"rule_\" + s).toArray(String[]::new);","199","    NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","200","    int i = ruleKeys.length;","201","    for (String ruleKey : ruleKeys) {","202","      IntStream.range(0, i).mapToObj(j -> new DefaultIssue().setRuleKey(RuleKey.of(repository, ruleKey))).forEach(stats::add);","203","      i--;","204","    }","205","    when(ruleDao.selectDefinitionByKeys(dbSession, Arrays.stream(ruleKeys).limit(5).map(s -> RuleKey.of(repository, s)).collect(MoreCollectors.toSet(5))))","206","      .thenReturn(","207","        Arrays.stream(ruleKeys).limit(5).map(ruleKey -> new RuleDefinitionDto()","208","          .setRuleKey(RuleKey.of(repository, ruleKey))","209","          .setName(\"name_\" + ruleKey)","210","          .setLanguage(\"language_\" + ruleKey))","211","          .collect(MoreCollectors.toList(5)));","212","","213","    underTest.setStatistics(randomAlphanumeric(20), stats);","214","","215","    for (int j = 0; j < 5; j++) {","216","      String fieldBase = RULE + \".\" + (j + 1);","217","      assertThat(underTest.getFieldValue(fieldBase + \".label\")).as(\"label of %s\", fieldBase).isEqualTo(\"name_\" + ruleKeys[j] + \" (language_\" + ruleKeys[j] + \")\");","218","      assertThat(underTest.getFieldValue(fieldBase + \".count\")).as(\"count of %s\", fieldBase).isEqualTo(String.valueOf(ruleKeys.length - j));","219","    }","220","    assertThat(underTest.getFieldValue(RULE + \".6.label\")).isNull();","221","    assertThat(underTest.getFieldValue(RULE + \".6.count\")).isNull();","222","  }","223","","224","  @Test","259","  private RuleDefinitionDto newRule(RuleKey ruleKey, String name, String language) {","261","      .setRuleKey(ruleKey)"],"delete":["24","import org.mockito.Mockito;","38","import static org.mockito.Matchers.eq;","50","  NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","51","  UserIndex userIndex = mock(UserIndex.class);","52","  DbClient dbClient = mock(DbClient.class, Mockito.RETURNS_DEEP_STUBS);","53","  Durations durations = mock(Durations.class);","54","  NewIssuesNotification underTest = new NewIssuesNotification(userIndex, dbClient, durations);","89","    when(dbClient.componentDao().selectOrFailByUuid(any(DbSession.class), eq(\"file-uuid\")).name()).thenReturn(\"file-name\");","90","    when(dbClient.componentDao().selectOrFailByUuid(any(DbSession.class), eq(\"directory-uuid\")).name()).thenReturn(\"directory-name\");","91","    when(dbClient.ruleDao().selectOrFailDefinitionByKey(any(DbSession.class), eq(RuleKey.of(\"SonarQube\", \"rule-the-world\")))).thenReturn(newRule(\"Rule the World\", \"Java\"));","92","    when(dbClient.ruleDao().selectOrFailDefinitionByKey(any(DbSession.class), eq(RuleKey.of(\"SonarQube\", \"rule-the-universe\")))).thenReturn(newRule(\"Rule the Universe\", \"Clojure\"));","152","  private RuleDefinitionDto newRule(String name, String language) {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":[{"add":["56","  @Override","57","  public String toString() {","58","    return \"DistributedMetricStatsInt{\" +","59","      \"globalStats=\" + globalStats +","60","      \", statsPerLabel=\" + statsPerLabel +","61","      '}';","62","  }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":[{"add":["46","  @Override","47","  public String toString() {","48","    return \"MetricStatsInt{\" +","49","      \"onLeak=\" + onLeak +","50","      \", offLeak=\" + offLeak +","51","      '}';","52","  }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":[{"add":["86","  @Override","87","  public String toString() {","88","    return \"NewIssuesStatistics{\" +","89","      \"assigneesStatistics=\" + assigneesStatistics +","90","      \", globalStatistics=\" + globalStatistics +","91","      '}';","92","  }","93","","111","      String componentUuid = issue.componentUuid();","112","      if (componentUuid != null) {","113","        distributions.get(COMPONENT).increment(componentUuid, isOnLeak);","114","      }","152","    @Override","153","    public String toString() {","154","      return \"Stats{\" +","155","        \"distributions=\" + distributions +","156","        \", effortStats=\" + effortStats +","157","        '}';","158","    }"],"delete":["103","      distributions.get(COMPONENT).increment(issue.componentUuid(), isOnLeak);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":[{"add":["46","  @Override","47","  public String toString() {","48","    return \"MetricStatsLong{\" +","49","      \"onLeak=\" + onLeak +","50","      \", offLeak=\" + offLeak +","51","      '}';","52","  }"],"delete":[]}]}},"06f81556d5e9bae085e521bb62c0c3e84d1c32ad":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/base.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/base.css":[{"add":["108","  overflow: visible;"],"delete":[]}]}},"34f18002b369c8b35f4331347fc5529c9cac4f28":{"changes":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest\/active_rule_parameters_without_index.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParameters.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest.java":"ADD","server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64Test.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest\/active_rule_parameters_without_index.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParameters.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["372","CREATE INDEX \"IX_ARP_ON_ACTIVE_RULE_ID\" ON \"ACTIVE_RULE_PARAMETERS\" (\"ACTIVE_RULE_ID\");"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64.java":[{"add":["73","      .add(1643, \"Drop user and codeviewer perms to AnyOne in permission templates\", SupportProjectVisibilityInTemplates.class)","74","      .add(1644, \"Add index on active_rule_parameters.active_rule_id\", AddIndexOnActiveRuleParameters.class);"],"delete":["73","      .add(1643, \"Drop user and codeviewer perms to AnyOne in permission templates\", SupportProjectVisibilityInTemplates.class);"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64Test.java":[{"add":["37","    verifyMigrationCount(underTest, 45);"],"delete":["37","    verifyMigrationCount(underTest, 44);"]}]}},"eabdc54edbad6ef9dea9b8521d544817c0f90c2a":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/index.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/index.ts":[{"add":["61","      intl.addLocaleData(intlBundle.default);"],"delete":["61","      intl.addLocaleData(intlBundle);"]}]}},"ff20b3c6df653a9e57b80735c7084b8f38373d7d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQuery.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["293","    SearchOptions options = createSearchOptionsFromRequest(request);","329","  private static SearchOptions createSearchOptionsFromRequest(SearchWsRequest request) {","330","    SearchOptions options = new SearchOptions();","331","    options.setPage(request.getPage(), request.getPageSize());","332","    options.addFacets(request.getFacets());","333","","334","    return options;","335","  }","336","","337","  private static Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {"],"delete":["293","    SearchOptions options = new SearchOptions();","294","    options.setPage(request.getPage(), request.getPageSize());","295","    options.addFacets(request.getFacets());","331","  private Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":[{"add":["21","import java.io.StringWriter;","22","import org.junit.Rule;","24","import org.junit.rules.ExpectedException;","34","  @Rule","35","  public ExpectedException expectedException = ExpectedException.none();","36","","37","  private SearchOptions underTest = new SearchOptions();","38","","161","","162","  @Test","163","  public void fail_if_result_after_first_10_000() {","164","    expectedException.expect(IllegalArgumentException.class);","165","    expectedException.expectMessage(\"Can return only the first 10000 results. 10500th result asked.\");","166","","167","    underTest.setPage(21, 500);","168","  }"],"delete":["26","import java.io.StringWriter;","27",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQuery.java":[{"add":["33","import static com.google.common.base.Preconditions.checkArgument;","477","        checkArgument(issueKeys.size() <= QueryContext.MAX_LIMIT, \"Number of issue keys must be less than \" + QueryContext.MAX_LIMIT + \" (got \" + issueKeys.size() + \")\");"],"delete":["21","import com.google.common.base.Preconditions;","477","        Preconditions.checkArgument(issueKeys.size() <= QueryContext.MAX_LIMIT, \"Number of issue keys must be less than \" + QueryContext.MAX_LIMIT + \" (got \" + issueKeys.size()","478","          + \")\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":[{"add":["27","import javax.annotation.Nullable;","28","import org.apache.commons.lang.StringUtils;","29","import org.sonar.api.server.ws.WebService;","30","import org.sonar.api.utils.text.JsonWriter;","31","","32","import static com.google.common.base.Preconditions.checkArgument;","42","  private static final int MAX_RETURNABLE_RESULTS = 10_000;","60","    checkArgument(offset >= 0, \"Offset must be positive\");","70","    checkArgument(page >= 1, \"Page must be greater or equal to 1 (got \" + page + \")\");","71","    int lastResultIndex = page * pageSize;","72","    checkArgument(lastResultIndex <= MAX_RETURNABLE_RESULTS, \"Can return only the first %s results. %sth result asked.\", MAX_RETURNABLE_RESULTS, lastResultIndex);"],"delete":["21","import com.google.common.base.Preconditions;","22","import org.apache.commons.lang.StringUtils;","23","import org.sonar.api.server.ws.WebService;","24","import org.sonar.api.utils.text.JsonWriter;","25","","26","import javax.annotation.Nullable;","27","","60","    Preconditions.checkArgument(offset >= 0, \"Offset must be positive\");","70","    Preconditions.checkArgument(page >= 1, \"Page must be greater or equal to 1 (got \" + page + \")\");"]}]}},"7ae93382eb4a2f4d364beb529b15140d53791ce7":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/Favorite.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Favorite-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Favorite-test.tsx.snap":"MODIFY","server\/sonar-web\/package.json":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/Favorite.tsx":[{"add":["20","import FavoriteButton from 'sonar-ui-common\/components\/controls\/FavoriteButton';","31","interface State {","32","  favorite: boolean;","33","}","35","export default class Favorite extends React.PureComponent<Props, State> {","36","  mounted = false;","38","  constructor(props: Props) {","39","    super(props);","40","","41","    this.state = {","42","      favorite: props.favorite","43","    };","44","  }","45","","46","  componentDidMount() {","47","    this.mounted = true;","48","  }","49","","50","  componentDidUpdate(_prevProps: Props, prevState: State) {","51","    if (prevState.favorite !== this.props.favorite) {","52","      this.setState({ favorite: this.props.favorite });","53","    }","54","  }","55","","56","  componentWillUnmount() {","57","    this.mounted = false;","58","  }","59","","60","  toggleFavorite = () => {","61","    const newFavorite = !this.state.favorite;","62","    const apiMethod = newFavorite ? addFavorite : removeFavorite;","63","","64","    return apiMethod(this.props.component).then(() => {","65","      if (this.mounted) {","66","        this.setState({ favorite: newFavorite }, () => {","67","          if (this.props.handleFavorite) {","68","            this.props.handleFavorite(this.props.component, newFavorite);","69","          }","70","        });","71","      }","72","    });","76","    const { className, qualifier } = this.props;","77","    const { favorite } = this.state;","78","","79","    return (","80","      <FavoriteButton","81","        className={className}","82","        favorite={favorite}","83","        qualifier={qualifier}","84","        toggleFavorite={this.toggleFavorite}","85","      \/>","86","    );","89","\/*  *\/"],"delete":["20","import FavoriteBase from 'sonar-ui-common\/components\/controls\/FavoriteBase';","31","export default class Favorite extends React.PureComponent<Props> {","32","  callback = (isFavorite: boolean) =>","33","    this.props.handleFavorite && this.props.handleFavorite(this.props.component, isFavorite);","35","  add = () => {","36","    return addFavorite(this.props.component).then(() => this.callback(true));","37","  };","39","  remove = () => {","40","    return removeFavorite(this.props.component).then(() => this.callback(false));","44","    const { component, handleFavorite, ...other } = this.props;","45","    return <FavoriteBase {...other} addFavorite={this.add} removeFavorite={this.remove} \/>;"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Favorite-test.tsx":[{"add":["21","import FavoriteButton from 'sonar-ui-common\/components\/controls\/FavoriteButton';","36","  const favoriteBase = wrapper.find(FavoriteButton);","37","  const toggleFavorite = favoriteBase.prop<Function>('toggleFavorite');","39","  toggleFavorite();","43","  toggleFavorite();"],"delete":["35","  const favoriteBase = wrapper.find('FavoriteBase');","36","  const addFavorite = favoriteBase.prop<Function>('addFavorite');","37","  const removeFavorite = favoriteBase.prop<Function>('removeFavorite');","39","  removeFavorite();","43","  addFavorite();"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Favorite-test.tsx.snap":[{"add":["3","<FavoriteButton","6","  toggleFavorite={[Function]}"],"delete":["3","<FavoriteBase","4","  addFavorite={[Function]}","7","  removeFavorite={[Function]}"]}],"server\/sonar-web\/package.json":[{"add":["37","    \"sonar-ui-common\": \"0.0.20\","],"delete":["37","    \"sonar-ui-common\": \"0.0.19\","]}]}},"a35c677063a62e426b5412572b712240d410a357":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanel-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanelSection-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/application.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverviewRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverview.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanelSection.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/BranchOverview-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/quality-gates.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/application.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverviewRenderer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanel.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/QualityGatePanel-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverview-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/component.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanel-test.tsx.snap":[{"add":[],"delete":["38","        branchLike={","39","          Object {","40","            \"analysisDate\": \"2018-01-01\",","41","            \"excludedFromPurge\": true,","42","            \"isMain\": true,","43","            \"name\": \"master\",","44","          }","45","        }","107","        branchLike={","108","          Object {","109","            \"analysisDate\": \"2018-01-01\",","110","            \"excludedFromPurge\": true,","111","            \"isMain\": true,","112","            \"name\": \"master\",","113","          }","114","        }","241","        branchLike={","242","          Object {","243","            \"analysisDate\": \"2018-01-01\",","244","            \"excludedFromPurge\": true,","245","            \"isMain\": true,","246","            \"name\": \"master\",","247","          }","248","        }","310","        branchLike={","311","          Object {","312","            \"analysisDate\": \"2018-01-01\",","313","            \"excludedFromPurge\": true,","314","            \"isMain\": true,","315","            \"name\": \"master\",","316","          }","317","        }","393","        branchLike={","394","          Object {","395","            \"analysisDate\": \"2018-01-01\",","396","            \"excludedFromPurge\": true,","397","            \"isMain\": true,","398","            \"name\": \"master\",","399","          }","400","        }","553","        branchLike={","554","          Object {","555","            \"analysisDate\": \"2018-01-01\",","556","            \"excludedFromPurge\": true,","557","            \"isMain\": true,","558","            \"name\": \"master\",","559","          }","560","        }"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanelSection-test.tsx.snap":[{"add":[],"delete":["12","    branchLike={","13","      Object {","14","        \"analysisDate\": \"2018-01-01\",","15","        \"excludedFromPurge\": true,","16","        \"isMain\": true,","17","        \"name\": \"master\",","18","      }","19","    }","116","    branchLike={","117","      Object {","118","        \"analysisDate\": \"2018-01-01\",","119","        \"excludedFromPurge\": true,","120","        \"isMain\": true,","121","        \"name\": \"master\",","122","      }","123","    }","232","    branchLike={","233","      Object {","234","        \"analysisDate\": \"2018-01-01\",","235","        \"excludedFromPurge\": true,","236","        \"isMain\": true,","237","        \"name\": \"master\",","238","      }","239","    }","336","    branchLike={","337","      Object {","338","        \"analysisDate\": \"2018-01-01\",","339","        \"excludedFromPurge\": true,","340","        \"isMain\": true,","341","        \"name\": \"master\",","342","      }","343","    }"]}],"server\/sonar-web\/src\/main\/js\/types\/application.ts":[{"add":["19","import { Branch } from '.\/branch-like';","20","import { Visibility } from '.\/component';","21","","27","","28","export interface Application {","29","  branches: Pick<Branch, 'isMain' | 'name'>[];","30","  description?: string;","31","  key: string;","32","  name: string;","33","  projects: ApplicationProject[];","34","  visibility: Visibility;","35","}","36","","37","export interface ApplicationProject {","38","  branch: string;","39","  enabled?: boolean;","40","  isMain: boolean;","41","  key: string;","42","  name: string;","43","  selected?: boolean;","44","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverviewRenderer.tsx":[{"add":[],"delete":["76","                  branchLike={branchLike}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverview.tsx":[{"add":["23","import { getApplicationDetails, getApplicationLeak } from '..\/..\/..\/api\/application';","36","  isMainBranch,","126","      component.key,","127","      branchLike","130","    const appBranchName =","131","      (branchLike && !isMainBranch(branchLike) && getBranchLikeDisplayName(branchLike)) ||","132","      undefined;","133","","134","    const appDetails = await getApplicationDetails(component.key, appBranchName);","135","","137","    getApplicationLeak(component.key, appBranchName).then(","161","        const projectDetails = appDetails.projects.find(p => p.key === project.key);","162","        const projectBranchLike = projectDetails","163","          ? { isMain: projectDetails.isMain, name: projectDetails.branch, excludedFromPurge: false }","164","          : undefined;","165","","168","          projectBranchLike,","174","          project,","175","          projectBranchLike","181","          const qgStatuses = results.map(({ measures = [], project, projectBranchLike }) => {","190","              status,","191","              branchLike: projectBranchLike","231","    this.loadMeasuresAndMeta(key, branchLike, metricKeys).then(","243","            status,","244","            branchLike","266","  loadMeasuresAndMeta = (","267","    componentKey: string,","268","    branchLike?: BranchLike,","269","    metricKeys: string[] = []","270","  ) => {"],"delete":["23","import { getApplicationLeak } from '..\/..\/..\/api\/application';","118","","126","      component.key","130","    getApplicationLeak(component.key, branchLike && getBranchLikeDisplayName(branchLike)).then(","161","          project","167","          const qgStatuses = results.map(({ measures = [], project }) => {","176","              status","216","    this.loadMeasuresAndMeta(key, metricKeys).then(","228","            status","250","  loadMeasuresAndMeta = (componentKey: string, metricKeys: string[] = []) => {","251","    const { branchLike } = this.props;","252",""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanelSection.tsx":[{"add":["34","  const { component, qgStatus } = props;","57","            branchLike={qgStatus.branchLike}","70","            branchLike={qgStatus.branchLike}"],"delete":["34","  const { branchLike, component, qgStatus } = props;","56","            branchLike={branchLike}","69","            branchLike={branchLike}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/BranchOverview-test.tsx":[{"add":["24","import { getApplicationDetails, getApplicationLeak } from '..\/..\/..\/..\/api\/application';","33","import { mockBranch, mockMainBranch } from '..\/..\/..\/..\/helpers\/mocks\/branch-like';","154","  getApplicationDetails: jest.fn().mockResolvedValue({","155","    branches: [],","156","    key: 'key-1',","157","    name: 'app',","158","    projects: [","159","      {","160","        branch: 'foo',","161","        key: 'KEY-P1',","162","        name: 'P1'","163","      }","164","    ],","165","    visibility: 'Private'","166","  }),","255","  it('should fetch correctly other branch', async () => {","256","    const wrapper = shallowRender({ branchLike: mockBranch(), component });","257","    await waitAndUpdate(wrapper);","258","    expect(getApplicationDetails).toHaveBeenCalled();","259","    expect(wrapper).toMatchSnapshot();","260","  });","261",""],"delete":["24","import { getApplicationLeak } from '..\/..\/..\/..\/api\/application';","33","import { mockMainBranch } from '..\/..\/..\/..\/helpers\/mocks\/branch-like';"]}],"server\/sonar-web\/src\/main\/js\/types\/quality-gates.ts":[{"add":["19","import { BranchLike } from '.\/branch-like';","20","","66","  branchLike?: BranchLike;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/application.ts":[{"add":["21","import { Application, ApplicationPeriod } from '..\/types\/application';","32","","33","export function getApplicationDetails(application: string, branch?: string): Promise<Application> {","34","  return getJSON('\/api\/applications\/show', { application, branch }).then(","35","    r => r.application,","36","    throwGlobalError","37","  );","38","}"],"delete":["21","import { ApplicationPeriod } from '..\/types\/application';"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverviewRenderer-test.tsx.snap":[{"add":[],"delete":["19","          branchLike={","20","            Object {","21","              \"analysisDate\": \"2018-01-01\",","22","              \"excludedFromPurge\": true,","23","              \"isMain\": true,","24","              \"name\": \"master\",","25","            }","26","          }","246","          branchLike={","247","            Object {","248","              \"analysisDate\": \"2018-01-01\",","249","              \"excludedFromPurge\": true,","250","              \"isMain\": true,","251","              \"name\": \"master\",","252","            }","253","          }"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanel.tsx":[{"add":["36","  const { component, loading, qgStatuses = [] } = props;"],"delete":["26","import { BranchLike } from '..\/..\/..\/types\/branch-like';","31","  branchLike?: BranchLike;","38","  const { branchLike, component, loading, qgStatuses = [] } = props;","109","                    branchLike={branchLike}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/QualityGatePanel-test.tsx":[{"add":[],"delete":["21","import { mockMainBranch } from '..\/..\/..\/..\/helpers\/mocks\/branch-like';","80","      branchLike={mockMainBranch()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverview-test.tsx.snap":[{"add":["2","exports[`application overview should fetch correctly other branch 1`] = `","3","<Memo(BranchOverviewRenderer)","4","  analyses={","5","    Array [","6","      Object {","7","        \"date\": \"2017-03-01T09:36:01+0100\",","8","        \"events\": Array [],","9","        \"key\": \"foo\",","10","        \"projectVersion\": \"1.0\",","11","      },","12","      Object {","13","        \"date\": \"2017-03-01T09:36:01+0100\",","14","        \"events\": Array [],","15","        \"key\": \"foo\",","16","        \"projectVersion\": \"1.0\",","17","      },","18","      Object {","19","        \"date\": \"2017-03-01T09:36:01+0100\",","20","        \"events\": Array [],","21","        \"key\": \"foo\",","22","        \"projectVersion\": \"1.0\",","23","      },","24","      Object {","25","        \"date\": \"2017-03-01T09:36:01+0100\",","26","        \"events\": Array [],","27","        \"key\": \"foo\",","28","        \"projectVersion\": \"1.0\",","29","      },","30","      Object {","31","        \"date\": \"2017-03-01T09:36:01+0100\",","32","        \"events\": Array [],","33","        \"key\": \"foo\",","34","        \"projectVersion\": \"1.0\",","35","      },","36","    ]","37","  }","38","  branchLike={","39","    Object {","40","      \"analysisDate\": \"2018-01-01\",","41","      \"excludedFromPurge\": true,","42","      \"isMain\": false,","43","      \"name\": \"branch-6.7\",","44","    }","45","  }","46","  component={","47","    Object {","48","      \"breadcrumbs\": Array [","49","        Object {","50","          \"breadcrumbs\": Array [],","51","          \"key\": \"foo\",","52","          \"name\": \"MyProject\",","53","          \"organization\": \"foo\",","54","          \"qualifier\": \"APP\",","55","          \"qualityGate\": Object {","56","            \"isDefault\": true,","57","            \"key\": \"30\",","58","            \"name\": \"Sonar way\",","59","          },","60","          \"qualityProfiles\": Array [","61","            Object {","62","              \"deleted\": false,","63","              \"key\": \"my-qp\",","64","              \"language\": \"ts\",","65","              \"name\": \"Sonar way\",","66","            },","67","          ],","68","          \"tags\": Array [],","69","        },","70","      ],","71","      \"key\": \"my-project\",","72","      \"name\": \"MyProject\",","73","      \"organization\": \"foo\",","74","      \"qualifier\": \"APP\",","75","      \"qualityGate\": Object {","76","        \"isDefault\": true,","77","        \"key\": \"30\",","78","        \"name\": \"Sonar way\",","79","      },","80","      \"qualityProfiles\": Array [","81","        Object {","82","          \"deleted\": false,","83","          \"key\": \"my-qp\",","84","          \"language\": \"ts\",","85","          \"name\": \"Sonar way\",","86","        },","87","      ],","88","      \"tags\": Array [],","89","    }","90","  }","91","  graph=\"coverage\"","92","  leakPeriod={","93","    Object {","94","      \"date\": \"2017-01-05\",","95","      \"project\": \"foo\",","96","      \"projectName\": \"Foo\",","97","    }","98","  }","99","  loadingHistory={false}","100","  loadingStatus={false}","101","  measures={","102","    Array [","103","      Object {","104","        \"bestValue\": true,","105","        \"metric\": Object {","106","          \"id\": \"alert_status\",","107","          \"key\": \"alert_status\",","108","          \"name\": \"alert_status\",","109","          \"type\": \"INT\",","110","        },","111","        \"periods\": undefined,","112","        \"value\": \"1.0\",","113","      },","114","      Object {","115","        \"bestValue\": true,","116","        \"metric\": Object {","117","          \"id\": \"quality_gate_details\",","118","          \"key\": \"quality_gate_details\",","119","          \"name\": \"quality_gate_details\",","120","          \"type\": \"INT\",","121","        },","122","        \"periods\": undefined,","123","        \"value\": \"1.0\",","124","      },","125","      Object {","126","        \"bestValue\": true,","127","        \"metric\": Object {","128","          \"id\": \"bugs\",","129","          \"key\": \"bugs\",","130","          \"name\": \"bugs\",","131","          \"type\": \"INT\",","132","        },","133","        \"periods\": undefined,","134","        \"value\": \"1.0\",","135","      },","136","      Object {","137","        \"bestValue\": true,","138","        \"leak\": \"1\",","139","        \"metric\": Object {","140","          \"id\": \"new_bugs\",","141","          \"key\": \"new_bugs\",","142","          \"name\": \"new_bugs\",","143","          \"type\": \"INT\",","144","        },","145","        \"periods\": Array [","146","          Object {","147","            \"bestValue\": true,","148","            \"index\": 1,","149","            \"value\": \"1.0\",","150","          },","151","        ],","152","        \"value\": \"1.0\",","153","      },","154","      Object {","155","        \"bestValue\": true,","156","        \"metric\": Object {","157","          \"id\": \"reliability_rating\",","158","          \"key\": \"reliability_rating\",","159","          \"name\": \"reliability_rating\",","160","          \"type\": \"RATING\",","161","        },","162","        \"periods\": undefined,","163","        \"value\": \"1.0\",","164","      },","165","      Object {","166","        \"bestValue\": true,","167","        \"leak\": \"1\",","168","        \"metric\": Object {","169","          \"id\": \"new_reliability_rating\",","170","          \"key\": \"new_reliability_rating\",","171","          \"name\": \"new_reliability_rating\",","172","          \"type\": \"RATING\",","173","        },","174","        \"periods\": Array [","175","          Object {","176","            \"bestValue\": true,","177","            \"index\": 1,","178","            \"value\": \"1.0\",","179","          },","180","        ],","181","        \"value\": \"1.0\",","182","      },","183","      Object {","184","        \"bestValue\": true,","185","        \"metric\": Object {","186","          \"id\": \"vulnerabilities\",","187","          \"key\": \"vulnerabilities\",","188","          \"name\": \"vulnerabilities\",","189","          \"type\": \"INT\",","190","        },","191","        \"periods\": undefined,","192","        \"value\": \"1.0\",","193","      },","194","      Object {","195","        \"bestValue\": true,","196","        \"leak\": \"1\",","197","        \"metric\": Object {","198","          \"id\": \"new_vulnerabilities\",","199","          \"key\": \"new_vulnerabilities\",","200","          \"name\": \"new_vulnerabilities\",","201","          \"type\": \"INT\",","202","        },","203","        \"periods\": Array [","204","          Object {","205","            \"bestValue\": true,","206","            \"index\": 1,","207","            \"value\": \"1.0\",","208","          },","209","        ],","210","        \"value\": \"1.0\",","211","      },","212","      Object {","213","        \"bestValue\": true,","214","        \"metric\": Object {","215","          \"id\": \"security_rating\",","216","          \"key\": \"security_rating\",","217","          \"name\": \"security_rating\",","218","          \"type\": \"RATING\",","219","        },","220","        \"periods\": undefined,","221","        \"value\": \"1.0\",","222","      },","223","      Object {","224","        \"bestValue\": true,","225","        \"leak\": \"1\",","226","        \"metric\": Object {","227","          \"id\": \"new_security_rating\",","228","          \"key\": \"new_security_rating\",","229","          \"name\": \"new_security_rating\",","230","          \"type\": \"RATING\",","231","        },","232","        \"periods\": Array [","233","          Object {","234","            \"bestValue\": true,","235","            \"index\": 1,","236","            \"value\": \"1.0\",","237","          },","238","        ],","239","        \"value\": \"1.0\",","240","      },","241","      Object {","242","        \"bestValue\": true,","243","        \"metric\": Object {","244","          \"id\": \"security_hotspots\",","245","          \"key\": \"security_hotspots\",","246","          \"name\": \"security_hotspots\",","247","          \"type\": \"INT\",","248","        },","249","        \"periods\": undefined,","250","        \"value\": \"1.0\",","251","      },","252","      Object {","253","        \"bestValue\": true,","254","        \"leak\": \"1\",","255","        \"metric\": Object {","256","          \"id\": \"new_security_hotspots\",","257","          \"key\": \"new_security_hotspots\",","258","          \"name\": \"new_security_hotspots\",","259","          \"type\": \"INT\",","260","        },","261","        \"periods\": Array [","262","          Object {","263","            \"bestValue\": true,","264","            \"index\": 1,","265","            \"value\": \"1.0\",","266","          },","267","        ],","268","        \"value\": \"1.0\",","269","      },","270","      Object {","271","        \"bestValue\": true,","272","        \"metric\": Object {","273","          \"id\": \"security_hotspots_reviewed\",","274","          \"key\": \"security_hotspots_reviewed\",","275","          \"name\": \"security_hotspots_reviewed\",","276","          \"type\": \"INT\",","277","        },","278","        \"periods\": undefined,","279","        \"value\": \"1.0\",","280","      },","281","      Object {","282","        \"bestValue\": true,","283","        \"leak\": \"1\",","284","        \"metric\": Object {","285","          \"id\": \"new_security_hotspots_reviewed\",","286","          \"key\": \"new_security_hotspots_reviewed\",","287","          \"name\": \"new_security_hotspots_reviewed\",","288","          \"type\": \"INT\",","289","        },","290","        \"periods\": Array [","291","          Object {","292","            \"bestValue\": true,","293","            \"index\": 1,","294","            \"value\": \"1.0\",","295","          },","296","        ],","297","        \"value\": \"1.0\",","298","      },","299","      Object {","300","        \"bestValue\": true,","301","        \"metric\": Object {","302","          \"id\": \"security_review_rating\",","303","          \"key\": \"security_review_rating\",","304","          \"name\": \"security_review_rating\",","305","          \"type\": \"RATING\",","306","        },","307","        \"periods\": undefined,","308","        \"value\": \"1.0\",","309","      },","310","      Object {","311","        \"bestValue\": true,","312","        \"leak\": \"1\",","313","        \"metric\": Object {","314","          \"id\": \"new_security_review_rating\",","315","          \"key\": \"new_security_review_rating\",","316","          \"name\": \"new_security_review_rating\",","317","          \"type\": \"RATING\",","318","        },","319","        \"periods\": Array [","320","          Object {","321","            \"bestValue\": true,","322","            \"index\": 1,","323","            \"value\": \"1.0\",","324","          },","325","        ],","326","        \"value\": \"1.0\",","327","      },","328","      Object {","329","        \"bestValue\": true,","330","        \"metric\": Object {","331","          \"id\": \"code_smells\",","332","          \"key\": \"code_smells\",","333","          \"name\": \"code_smells\",","334","          \"type\": \"INT\",","335","        },","336","        \"periods\": undefined,","337","        \"value\": \"1.0\",","338","      },","339","      Object {","340","        \"bestValue\": true,","341","        \"leak\": \"1\",","342","        \"metric\": Object {","343","          \"id\": \"new_code_smells\",","344","          \"key\": \"new_code_smells\",","345","          \"name\": \"new_code_smells\",","346","          \"type\": \"INT\",","347","        },","348","        \"periods\": Array [","349","          Object {","350","            \"bestValue\": true,","351","            \"index\": 1,","352","            \"value\": \"1.0\",","353","          },","354","        ],","355","        \"value\": \"1.0\",","356","      },","357","      Object {","358","        \"bestValue\": true,","359","        \"metric\": Object {","360","          \"id\": \"sqale_rating\",","361","          \"key\": \"sqale_rating\",","362","          \"name\": \"sqale_rating\",","363","          \"type\": \"RATING\",","364","        },","365","        \"periods\": undefined,","366","        \"value\": \"1.0\",","367","      },","368","      Object {","369","        \"bestValue\": true,","370","        \"leak\": \"1\",","371","        \"metric\": Object {","372","          \"id\": \"new_maintainability_rating\",","373","          \"key\": \"new_maintainability_rating\",","374","          \"name\": \"new_maintainability_rating\",","375","          \"type\": \"RATING\",","376","        },","377","        \"periods\": Array [","378","          Object {","379","            \"bestValue\": true,","380","            \"index\": 1,","381","            \"value\": \"1.0\",","382","          },","383","        ],","384","        \"value\": \"1.0\",","385","      },","386","      Object {","387","        \"bestValue\": true,","388","        \"metric\": Object {","389","          \"id\": \"sqale_index\",","390","          \"key\": \"sqale_index\",","391","          \"name\": \"sqale_index\",","392","          \"type\": \"INT\",","393","        },","394","        \"periods\": undefined,","395","        \"value\": \"1.0\",","396","      },","397","      Object {","398","        \"bestValue\": true,","399","        \"leak\": \"1\",","400","        \"metric\": Object {","401","          \"id\": \"new_technical_debt\",","402","          \"key\": \"new_technical_debt\",","403","          \"name\": \"new_technical_debt\",","404","          \"type\": \"INT\",","405","        },","406","        \"periods\": Array [","407","          Object {","408","            \"bestValue\": true,","409","            \"index\": 1,","410","            \"value\": \"1.0\",","411","          },","412","        ],","413","        \"value\": \"1.0\",","414","      },","415","      Object {","416","        \"bestValue\": true,","417","        \"metric\": Object {","418","          \"id\": \"coverage\",","419","          \"key\": \"coverage\",","420","          \"name\": \"coverage\",","421","          \"type\": \"PERCENT\",","422","        },","423","        \"periods\": undefined,","424","        \"value\": \"1.0\",","425","      },","426","      Object {","427","        \"bestValue\": true,","428","        \"leak\": \"1\",","429","        \"metric\": Object {","430","          \"id\": \"new_coverage\",","431","          \"key\": \"new_coverage\",","432","          \"name\": \"new_coverage\",","433","          \"type\": \"PERCENT\",","434","        },","435","        \"periods\": Array [","436","          Object {","437","            \"bestValue\": true,","438","            \"index\": 1,","439","            \"value\": \"1.0\",","440","          },","441","        ],","442","        \"value\": \"1.0\",","443","      },","444","      Object {","445","        \"bestValue\": true,","446","        \"metric\": Object {","447","          \"id\": \"lines_to_cover\",","448","          \"key\": \"lines_to_cover\",","449","          \"name\": \"lines_to_cover\",","450","          \"type\": \"INT\",","451","        },","452","        \"periods\": undefined,","453","        \"value\": \"1.0\",","454","      },","455","      Object {","456","        \"bestValue\": true,","457","        \"leak\": \"1\",","458","        \"metric\": Object {","459","          \"id\": \"new_lines_to_cover\",","460","          \"key\": \"new_lines_to_cover\",","461","          \"name\": \"new_lines_to_cover\",","462","          \"type\": \"INT\",","463","        },","464","        \"periods\": Array [","465","          Object {","466","            \"bestValue\": true,","467","            \"index\": 1,","468","            \"value\": \"1.0\",","469","          },","470","        ],","471","        \"value\": \"1.0\",","472","      },","473","      Object {","474","        \"bestValue\": true,","475","        \"metric\": Object {","476","          \"id\": \"tests\",","477","          \"key\": \"tests\",","478","          \"name\": \"tests\",","479","          \"type\": \"INT\",","480","        },","481","        \"periods\": undefined,","482","        \"value\": \"1.0\",","483","      },","484","      Object {","485","        \"bestValue\": true,","486","        \"metric\": Object {","487","          \"id\": \"duplicated_lines_density\",","488","          \"key\": \"duplicated_lines_density\",","489","          \"name\": \"duplicated_lines_density\",","490","          \"type\": \"INT\",","491","        },","492","        \"periods\": undefined,","493","        \"value\": \"1.0\",","494","      },","495","      Object {","496","        \"bestValue\": true,","497","        \"leak\": \"1\",","498","        \"metric\": Object {","499","          \"id\": \"new_duplicated_lines_density\",","500","          \"key\": \"new_duplicated_lines_density\",","501","          \"name\": \"new_duplicated_lines_density\",","502","          \"type\": \"INT\",","503","        },","504","        \"periods\": Array [","505","          Object {","506","            \"bestValue\": true,","507","            \"index\": 1,","508","            \"value\": \"1.0\",","509","          },","510","        ],","511","        \"value\": \"1.0\",","512","      },","513","      Object {","514","        \"bestValue\": true,","515","        \"metric\": Object {","516","          \"id\": \"duplicated_blocks\",","517","          \"key\": \"duplicated_blocks\",","518","          \"name\": \"duplicated_blocks\",","519","          \"type\": \"INT\",","520","        },","521","        \"periods\": undefined,","522","        \"value\": \"1.0\",","523","      },","524","      Object {","525","        \"bestValue\": true,","526","        \"metric\": Object {","527","          \"id\": \"ncloc\",","528","          \"key\": \"ncloc\",","529","          \"name\": \"ncloc\",","530","          \"type\": \"INT\",","531","        },","532","        \"periods\": undefined,","533","        \"value\": \"1.0\",","534","      },","535","      Object {","536","        \"bestValue\": true,","537","        \"metric\": Object {","538","          \"id\": \"ncloc_language_distribution\",","539","          \"key\": \"ncloc_language_distribution\",","540","          \"name\": \"ncloc_language_distribution\",","541","          \"type\": \"INT\",","542","        },","543","        \"periods\": undefined,","544","        \"value\": \"1.0\",","545","      },","546","      Object {","547","        \"bestValue\": true,","548","        \"metric\": Object {","549","          \"id\": \"projects\",","550","          \"key\": \"projects\",","551","          \"name\": \"projects\",","552","          \"type\": \"INT\",","553","        },","554","        \"periods\": undefined,","555","        \"value\": \"1.0\",","556","      },","557","      Object {","558","        \"bestValue\": true,","559","        \"metric\": Object {","560","          \"id\": \"lines\",","561","          \"key\": \"lines\",","562","          \"name\": \"lines\",","563","          \"type\": \"INT\",","564","        },","565","        \"periods\": undefined,","566","        \"value\": \"1.0\",","567","      },","568","      Object {","569","        \"bestValue\": true,","570","        \"leak\": \"1\",","571","        \"metric\": Object {","572","          \"id\": \"new_lines\",","573","          \"key\": \"new_lines\",","574","          \"name\": \"new_lines\",","575","          \"type\": \"INT\",","576","        },","577","        \"periods\": Array [","578","          Object {","579","            \"bestValue\": true,","580","            \"index\": 1,","581","            \"value\": \"1.0\",","582","          },","583","        ],","584","        \"value\": \"1.0\",","585","      },","586","    ]","587","  }","588","  measuresHistory={","589","    Array [","590","      Object {","591","        \"history\": Array [","592","          Object {","593","            \"date\": \"PARSED:2019-01-05\",","594","            \"value\": \"2.0\",","595","          },","596","        ],","597","        \"metric\": \"bugs\",","598","      },","599","      Object {","600","        \"history\": Array [","601","          Object {","602","            \"date\": \"PARSED:2019-01-05\",","603","            \"value\": \"0\",","604","          },","605","        ],","606","        \"metric\": \"vulnerabilities\",","607","      },","608","      Object {","609","        \"history\": Array [","610","          Object {","611","            \"date\": \"PARSED:2019-01-01\",","612","            \"value\": \"1.0\",","613","          },","614","        ],","615","        \"metric\": \"sqale_index\",","616","      },","617","      Object {","618","        \"history\": Array [","619","          Object {","620","            \"date\": \"PARSED:2019-01-02\",","621","            \"value\": \"1.0\",","622","          },","623","        ],","624","        \"metric\": \"duplicated_lines_density\",","625","      },","626","      Object {","627","        \"history\": Array [","628","          Object {","629","            \"date\": \"PARSED:2019-01-03\",","630","            \"value\": \"10000\",","631","          },","632","        ],","633","        \"metric\": \"ncloc\",","634","      },","635","      Object {","636","        \"history\": Array [","637","          Object {","638","            \"date\": \"PARSED:2019-01-04\",","639","            \"value\": \"95.5\",","640","          },","641","        ],","642","        \"metric\": \"coverage\",","643","      },","644","    ]","645","  }","646","  metrics={","647","    Array [","648","      Object {","649","        \"id\": \"alert_status\",","650","        \"key\": \"alert_status\",","651","        \"name\": \"alert_status\",","652","        \"type\": \"INT\",","653","      },","654","      Object {","655","        \"id\": \"quality_gate_details\",","656","        \"key\": \"quality_gate_details\",","657","        \"name\": \"quality_gate_details\",","658","        \"type\": \"INT\",","659","      },","660","      Object {","661","        \"id\": \"bugs\",","662","        \"key\": \"bugs\",","663","        \"name\": \"bugs\",","664","        \"type\": \"INT\",","665","      },","666","      Object {","667","        \"id\": \"new_bugs\",","668","        \"key\": \"new_bugs\",","669","        \"name\": \"new_bugs\",","670","        \"type\": \"INT\",","671","      },","672","      Object {","673","        \"id\": \"reliability_rating\",","674","        \"key\": \"reliability_rating\",","675","        \"name\": \"reliability_rating\",","676","        \"type\": \"RATING\",","677","      },","678","      Object {","679","        \"id\": \"new_reliability_rating\",","680","        \"key\": \"new_reliability_rating\",","681","        \"name\": \"new_reliability_rating\",","682","        \"type\": \"RATING\",","683","      },","684","      Object {","685","        \"id\": \"vulnerabilities\",","686","        \"key\": \"vulnerabilities\",","687","        \"name\": \"vulnerabilities\",","688","        \"type\": \"INT\",","689","      },","690","      Object {","691","        \"id\": \"new_vulnerabilities\",","692","        \"key\": \"new_vulnerabilities\",","693","        \"name\": \"new_vulnerabilities\",","694","        \"type\": \"INT\",","695","      },","696","      Object {","697","        \"id\": \"security_rating\",","698","        \"key\": \"security_rating\",","699","        \"name\": \"security_rating\",","700","        \"type\": \"RATING\",","701","      },","702","      Object {","703","        \"id\": \"new_security_rating\",","704","        \"key\": \"new_security_rating\",","705","        \"name\": \"new_security_rating\",","706","        \"type\": \"RATING\",","707","      },","708","      Object {","709","        \"id\": \"security_hotspots\",","710","        \"key\": \"security_hotspots\",","711","        \"name\": \"security_hotspots\",","712","        \"type\": \"INT\",","713","      },","714","      Object {","715","        \"id\": \"new_security_hotspots\",","716","        \"key\": \"new_security_hotspots\",","717","        \"name\": \"new_security_hotspots\",","718","        \"type\": \"INT\",","719","      },","720","      Object {","721","        \"id\": \"security_hotspots_reviewed\",","722","        \"key\": \"security_hotspots_reviewed\",","723","        \"name\": \"security_hotspots_reviewed\",","724","        \"type\": \"INT\",","725","      },","726","      Object {","727","        \"id\": \"new_security_hotspots_reviewed\",","728","        \"key\": \"new_security_hotspots_reviewed\",","729","        \"name\": \"new_security_hotspots_reviewed\",","730","        \"type\": \"INT\",","731","      },","732","      Object {","733","        \"id\": \"security_review_rating\",","734","        \"key\": \"security_review_rating\",","735","        \"name\": \"security_review_rating\",","736","        \"type\": \"RATING\",","737","      },","738","      Object {","739","        \"id\": \"new_security_review_rating\",","740","        \"key\": \"new_security_review_rating\",","741","        \"name\": \"new_security_review_rating\",","742","        \"type\": \"RATING\",","743","      },","744","      Object {","745","        \"id\": \"code_smells\",","746","        \"key\": \"code_smells\",","747","        \"name\": \"code_smells\",","748","        \"type\": \"INT\",","749","      },","750","      Object {","751","        \"id\": \"new_code_smells\",","752","        \"key\": \"new_code_smells\",","753","        \"name\": \"new_code_smells\",","754","        \"type\": \"INT\",","755","      },","756","      Object {","757","        \"id\": \"sqale_rating\",","758","        \"key\": \"sqale_rating\",","759","        \"name\": \"sqale_rating\",","760","        \"type\": \"RATING\",","761","      },","762","      Object {","763","        \"id\": \"new_maintainability_rating\",","764","        \"key\": \"new_maintainability_rating\",","765","        \"name\": \"new_maintainability_rating\",","766","        \"type\": \"RATING\",","767","      },","768","      Object {","769","        \"id\": \"sqale_index\",","770","        \"key\": \"sqale_index\",","771","        \"name\": \"sqale_index\",","772","        \"type\": \"INT\",","773","      },","774","      Object {","775","        \"id\": \"new_technical_debt\",","776","        \"key\": \"new_technical_debt\",","777","        \"name\": \"new_technical_debt\",","778","        \"type\": \"INT\",","779","      },","780","      Object {","781","        \"id\": \"coverage\",","782","        \"key\": \"coverage\",","783","        \"name\": \"coverage\",","784","        \"type\": \"PERCENT\",","785","      },","786","      Object {","787","        \"id\": \"new_coverage\",","788","        \"key\": \"new_coverage\",","789","        \"name\": \"new_coverage\",","790","        \"type\": \"PERCENT\",","791","      },","792","      Object {","793","        \"id\": \"lines_to_cover\",","794","        \"key\": \"lines_to_cover\",","795","        \"name\": \"lines_to_cover\",","796","        \"type\": \"INT\",","797","      },","798","      Object {","799","        \"id\": \"new_lines_to_cover\",","800","        \"key\": \"new_lines_to_cover\",","801","        \"name\": \"new_lines_to_cover\",","802","        \"type\": \"INT\",","803","      },","804","      Object {","805","        \"id\": \"tests\",","806","        \"key\": \"tests\",","807","        \"name\": \"tests\",","808","        \"type\": \"INT\",","809","      },","810","      Object {","811","        \"id\": \"duplicated_lines_density\",","812","        \"key\": \"duplicated_lines_density\",","813","        \"name\": \"duplicated_lines_density\",","814","        \"type\": \"INT\",","815","      },","816","      Object {","817","        \"id\": \"new_duplicated_lines_density\",","818","        \"key\": \"new_duplicated_lines_density\",","819","        \"name\": \"new_duplicated_lines_density\",","820","        \"type\": \"INT\",","821","      },","822","      Object {","823","        \"id\": \"duplicated_blocks\",","824","        \"key\": \"duplicated_blocks\",","825","        \"name\": \"duplicated_blocks\",","826","        \"type\": \"INT\",","827","      },","828","      Object {","829","        \"id\": \"ncloc\",","830","        \"key\": \"ncloc\",","831","        \"name\": \"ncloc\",","832","        \"type\": \"INT\",","833","      },","834","      Object {","835","        \"id\": \"ncloc_language_distribution\",","836","        \"key\": \"ncloc_language_distribution\",","837","        \"name\": \"ncloc_language_distribution\",","838","        \"type\": \"INT\",","839","      },","840","      Object {","841","        \"id\": \"projects\",","842","        \"key\": \"projects\",","843","        \"name\": \"projects\",","844","        \"type\": \"INT\",","845","      },","846","      Object {","847","        \"id\": \"lines\",","848","        \"key\": \"lines\",","849","        \"name\": \"lines\",","850","        \"type\": \"INT\",","851","      },","852","      Object {","853","        \"id\": \"new_lines\",","854","        \"key\": \"new_lines\",","855","        \"name\": \"new_lines\",","856","        \"type\": \"INT\",","857","      },","858","    ]","859","  }","860","  onGraphChange={[Function]}","861","  projectIsEmpty={false}","862","  qgStatuses={","863","    Array [","864","      Object {","865","        \"branchLike\": undefined,","866","        \"failedConditions\": Array [","867","          Object {","868","            \"actual\": \"10\",","869","            \"error\": \"1.0\",","870","            \"level\": \"ERROR\",","871","            \"measure\": Object {","872","              \"bestValue\": true,","873","              \"metric\": Object {","874","                \"id\": \"coverage\",","875","                \"key\": \"coverage\",","876","                \"name\": \"coverage\",","877","                \"type\": \"PERCENT\",","878","              },","879","              \"periods\": undefined,","880","              \"value\": \"1.0\",","881","            },","882","            \"metric\": \"coverage\",","883","            \"op\": \"GT\",","884","            \"period\": undefined,","885","          },","886","          Object {","887","            \"actual\": \"5\",","888","            \"error\": \"1.0\",","889","            \"level\": \"ERROR\",","890","            \"measure\": Object {","891","              \"bestValue\": true,","892","              \"leak\": \"1\",","893","              \"metric\": Object {","894","                \"id\": \"new_bugs\",","895","                \"key\": \"new_bugs\",","896","                \"name\": \"new_bugs\",","897","                \"type\": \"INT\",","898","              },","899","              \"periods\": Array [","900","                Object {","901","                  \"bestValue\": true,","902","                  \"index\": 1,","903","                  \"value\": \"1.0\",","904","                },","905","              ],","906","              \"value\": \"1.0\",","907","            },","908","            \"metric\": \"new_bugs\",","909","            \"op\": \"GT\",","910","            \"period\": 1,","911","          },","912","        ],","913","        \"key\": \"foo\",","914","        \"name\": \"Foo\",","915","        \"status\": \"ERROR\",","916","      },","917","      Object {","918","        \"branchLike\": undefined,","919","        \"failedConditions\": Array [","920","          Object {","921","            \"actual\": \"15\",","922","            \"error\": \"5.0\",","923","            \"level\": \"ERROR\",","924","            \"measure\": Object {","925","              \"bestValue\": true,","926","              \"leak\": \"1\",","927","              \"metric\": Object {","928","                \"id\": \"new_bugs\",","929","                \"key\": \"new_bugs\",","930","                \"name\": \"new_bugs\",","931","                \"type\": \"INT\",","932","              },","933","              \"periods\": Array [","934","                Object {","935","                  \"bestValue\": true,","936","                  \"index\": 1,","937","                  \"value\": \"1.0\",","938","                },","939","              ],","940","              \"value\": \"1.0\",","941","            },","942","            \"metric\": \"new_bugs\",","943","            \"op\": \"GT\",","944","            \"period\": 1,","945","          },","946","        ],","947","        \"key\": \"bar\",","948","        \"name\": \"Bar\",","949","        \"status\": \"ERROR\",","950","      },","951","    ]","952","  }","953","\/>","954","`;","955","","1819","        \"branchLike\": undefined,","1872","        \"branchLike\": undefined,","2766","        \"branchLike\": Object {","2767","          \"analysisDate\": \"2018-01-01\",","2768","          \"excludedFromPurge\": true,","2769","          \"isMain\": true,","2770","          \"name\": \"master\",","2771","        },"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/component.ts":[{"add":["30","","31","export enum Visibility {","32","  Public = 'public',","33","  Private = 'private'","34","}"],"delete":[]}]}},"a8a990b0170b730b642f44d683376dd710b47110":{"changes":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest\/organizations_with_unique_index.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63Test.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUnique.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest\/organizations_with_non_unique_index.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest.java":"ADD","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest\/organizations_with_unique_index.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63Test.java":[{"add":["43","    verifyMigrationCount(underTest, 19);"],"delete":["43","    verifyMigrationCount(underTest, 18);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63.java":[{"add":["52","      .add(1518, \"Make index on ORGANIZATIONS.KEE unique\", MakeIndexOnOrganizationsKeeUnique.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUnique.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest\/organizations_with_non_unique_index.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest.java":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["533","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1518');"],"delete":[]}]}},"4ce3f21921ceda09e54d4c43e7b09169ab375df9":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventActionTest.java":[{"add":["158","    assertThat(definition.param(PARAM_NAME).isRequired()).isTrue();","188","    expectedException.expect(IllegalArgumentException.class);","189","    expectedException.expectMessage(\"The 'name' parameter is missing\");"],"delete":["187","    expectedException.expect(NullPointerException.class);","188",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventAction.java":[{"add":["88","      .setExampleValue(\"5.6\")","89","      .setRequired(true);"],"delete":["88","      .setExampleValue(\"5.6\");"]}]}},"a6889467a2d97739df4329d41e7969327da2b8f8":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeMapperTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDtoTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTable.java":"ADD","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/IssueStorage.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChanges.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDefTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueTesting.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTable.java":"ADD","server\/sonar-db-dao\/src\/schema\/schema-sq.ddl":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDef.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/issue\/IssueChangeMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueChangeDto.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest.java":"ADD","server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/issue\/IssueDbTester.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest.java":"ADD","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueMapperTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeMapperTest.java":[{"add":["50","    dto.setProjectUuid(\"project_uuid\");","72","    dto.setProjectUuid(\"project_uuid\");"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDtoTest.java":[{"add":["35","    IssueChangeDto dto = IssueChangeDto.of(comment, \"project_uuid\");","44","    assertThat(dto.getProjectUuid()).isEqualTo(\"project_uuid\");","52","    IssueChangeDto dto = IssueChangeDto.of(comment, \"project_uuid\");","64","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs, \"project_uuid\");","73","    assertThat(dto.getProjectUuid()).isEqualTo(\"project_uuid\");","83","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs, \"project_uuid\");","153","    IssueChangeDto dto = IssueChangeDto.of(comment, \"project_uuid\");"],"delete":["35","    IssueChangeDto dto = IssueChangeDto.of(comment);","51","    IssueChangeDto dto = IssueChangeDto.of(comment);","63","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs);","81","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs);","151","    IssueChangeDto dto = IssueChangeDto.of(comment);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/IssueStorage.java":[{"add":["32","        IssueChangeDto changeDto = IssueChangeDto.of(comment, issue.projectUuid());","34","        changeDto.setProjectUuid(issue.projectUuid());","41","        IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), d, issue.projectUuid());","43","        changeDto.setProjectUuid(issue.projectUuid());","47","      IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), diffs, issue.projectUuid());","49","      changeDto.setProjectUuid(issue.projectUuid());"],"delete":["32","        IssueChangeDto changeDto = IssueChangeDto.of(comment);","40","        IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), d);","45","      IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), diffs);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["296","        .setProjectUuid(project.projectUuid())","306","        .setProjectUuid(project.projectUuid())","335","        .setProjectUuid(project.projectUuid())","345","        .setProjectUuid(project.projectUuid())"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChanges.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDefTest.java":[{"add":["65","    assertThat(underTest.generateSqlType(new H2())).isEqualTo(\"CLOB\");"],"delete":["65","    assertThat(underTest.generateSqlType(new H2())).isEqualTo(\"CLOB(2147483647)\");"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueTesting.java":[{"add":["92","      .setProjectUuid(issue.getProjectUuid())"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/schema\/schema-sq.ddl":[{"add":["84","    \"CLOB_VALUE\" CLOB,","109","    \"ERROR_STACKTRACE\" CLOB,","299","    \"LINE_HASHES\" CLOB,","359","    \"CLOB_VALUE\" CLOB,","373","    \"ISSUE_CHANGE_CREATION_DATE\" BIGINT,","374","    \"PROJECT_UUID\" VARCHAR(50) NOT NULL","379","CREATE INDEX \"ISSUE_CHANGES_PROJECT_UUID\" ON \"ISSUE_CHANGES\"(\"PROJECT_UUID\");","717","    \"CLOB_VALUE\" CLOB,","731","    \"CHANGE_DATA\" CLOB,","792","    \"DESCRIPTION\" CLOB,","817","    \"NOTE_DATA\" CLOB,","826","    \"AD_HOC_DESCRIPTION\" CLOB,","970","    \"PAYLOAD\" CLOB NOT NULL,","971","    \"ERROR_STACKTRACE\" CLOB,"],"delete":["84","    \"CLOB_VALUE\" CLOB(2147483647),","109","    \"ERROR_STACKTRACE\" CLOB(2147483647),","299","    \"LINE_HASHES\" CLOB(2147483647),","359","    \"CLOB_VALUE\" CLOB(2147483647),","373","    \"ISSUE_CHANGE_CREATION_DATE\" BIGINT","715","    \"CLOB_VALUE\" CLOB(2147483647),","729","    \"CHANGE_DATA\" CLOB(2147483647),","790","    \"DESCRIPTION\" CLOB(2147483647),","815","    \"NOTE_DATA\" CLOB(2147483647),","824","    \"AD_HOC_DESCRIPTION\" CLOB(2147483647),","968","    \"PAYLOAD\" CLOB(2147483647) NOT NULL,","969","    \"ERROR_STACKTRACE\" CLOB(2147483647),"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDef.java":[{"add":["51","        return \"CLOB\";"],"delete":["50","        return \"CLOB\";","52","        return \"CLOB(2147483647)\";"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":[{"add":["23","import org.sonar.server.platform.db.migration.version.v84.issuechanges.DropIssueChangesTable;","26","","36","      .add(4006, \"create 'tmp_issue_changes' table\", CreateTmpIssueChangesTable.class)","37","      .add(4007, \"drop 'issue_changes' table\", DropIssueChangesTable.class)","38","      .add(4008, \"rename 'tmp_issue_changes' table to 'issue_changes'\", RenameTmpIssueChangesToIssueChanges.class)","39","      .add(4009, \"Make 'issueKey' not nullable for 'issue_changes' table\", MakeIssueKeyNotNullOnIssueChangesTable.class)","40","      .add(4010, \"Make 'uuid' not nullable for 'issue_changes' table\", MakeUuidNotNullOnIssueChangesTable.class)","41","      .add(4011, \"Make 'project_uuid' not nullable for 'issue_changes' table\", MakeProjectUuidNotNullOnIssueChangesTable.class)","42","      .add(4012, \"add PK table to 'issue_changes'\", AddPrimaryKeyOnUuidForIssueChangesTable.class)","43","      .add(4013, \"add index on 'issue_key' for table 'issue_changes'\", AddIndexOnIssueKeyForIssueChangesTable.class)","44","      .add(4014, \"add index on 'kee' for table 'issue_changes'\", AddIndexOnKeeForIssueChangesTable.class)","45","      .add(4015, \"add index on 'project_uuid' for table 'issue_changes'\", AddIndexOnProjectUuidOnIssueChangesTable.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/issue\/IssueChangeMapper.xml":[{"add":["15","    c.project_uuid as projectUuid,","21","    issue_change_creation_date, project_uuid)","24","    #{updatedAt,jdbcType=BIGINT}, #{issueChangeCreationDate,jdbcType=BIGINT}, #{projectUuid,jdbcType=VARCHAR})"],"delete":["20","    issue_change_creation_date)","23","    #{updatedAt,jdbcType=BIGINT}, #{issueChangeCreationDate,jdbcType=BIGINT})"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueChangeDto.java":[{"add":["45","  private String projectUuid;","46","","47","","63","  public IssueChangeDto() {","64","    \/\/ nothing to do","65","  }","66","","67","  public static IssueChangeDto of(DefaultIssueComment comment, String projectUuid) {","75","    dto.setProjectUuid(projectUuid);","79","  public static IssueChangeDto of(String issueKey, FieldDiffs diffs, String projectUuid) {","86","    dto.setProjectUuid(projectUuid);","206","","207","  public String getProjectUuid() {","208","    return projectUuid;","209","  }","210","","211","  public IssueChangeDto setProjectUuid(String projectUuid) {","212","    this.projectUuid = projectUuid;","213","    return this;","214","  }"],"delete":["60","  public static IssueChangeDto of(DefaultIssueComment comment) {","71","  public static IssueChangeDto of(String issueKey, FieldDiffs diffs) {"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["31","import org.sonar.api.utils.TimeUtils;","184","    long start = System2.INSTANCE.now();","191","","192","    logProfiling(profiler, start);","193","  }","194","","195","  private static void logProfiling(PurgeProfiler profiler, long start) {","196","    long duration = System.currentTimeMillis() - start;","197","    LOG.info(\"\");","198","    LOG.info(\" -------- Profiling for project deletion: \" + TimeUtils.formatDuration(duration) + \" --------\");","199","    LOG.info(\"\");","200","    profiler.dump(duration, LOG);","201","    LOG.info(\"\");","202","    LOG.info(\" -------- End of profiling for project deletion--------\");","203","    LOG.info(\"\");"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["278","    delete from issue_changes where project_uuid = #{projectUuid,jdbcType=VARCHAR}"],"delete":["278","    delete from issue_changes ic","279","    where","280","      exists (select 1 from issues i where i.kee=ic.issue_key and i.project_uuid = #{projectUuid,jdbcType=VARCHAR})","281","  <\/delete>","282","","283","  <!-- Mssql -->","284","  <delete id=\"deleteIssueChangesByProjectUuid\" databaseId=\"mssql\" parameterType=\"map\">","285","    delete issue_changes from issue_changes","286","    inner join issues on","287","      issue_changes.issue_key=issues.kee","288","    where","289","      issues.project_uuid = #{projectUuid,jdbcType=VARCHAR}"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/issue\/IssueDbTester.java":[{"add":["226","    IssueChangeDto issueChangeDto = IssueChangeDto.of(DefaultIssueComment.create(issueDto.getKey(), user == null ? null : user.getUuid(), text), issueDto.getProjectUuid());","232","    Arrays.stream(diffs).forEach(diff -> db.getDbClient().issueChangeDao().insert(db.getSession(), IssueChangeDto.of(issueDto.getKey(), diff, issueDto.getProjectUuid())"],"delete":["226","    IssueChangeDto issueChangeDto = IssueChangeDto.of(DefaultIssueComment.create(issueDto.getKey(), user == null ? null : user.getUuid(), text));","232","    Arrays.stream(diffs).forEach(diff -> db.getDbClient().issueChangeDao().insert(db.getSession(), IssueChangeDto.of(issueDto.getKey(), diff)"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDaoTest.java":[{"add":["135","      .setIssueChangeCreationDate(1_502_000_000_000L)","136","      .setProjectUuid(\"project_uuid\");","143","        IssueChangeDto::getIssueChangeCreationDate, IssueChangeDto::getCreatedAt, IssueChangeDto::getUpdatedAt, IssueChangeDto::getProjectUuid)","145","        tuple(\"EFGH\", \"uuid\", issue.getKey(), \"Some text\", TYPE_COMMENT, 1_502_000_000_000L, 1_500_000_000_000L, 1_501_000_000_000L, \"project_uuid\"));"],"delete":["135","      .setIssueChangeCreationDate(1_502_000_000_000L);","142","        IssueChangeDto::getIssueChangeCreationDate, IssueChangeDto::getCreatedAt, IssueChangeDto::getUpdatedAt)","144","        tuple(\"EFGH\", \"uuid\", issue.getKey(), \"Some text\", TYPE_COMMENT, 1_502_000_000_000L, 1_500_000_000_000L, 1_501_000_000_000L));"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueMapperTest.java":[{"add":["480","    IssueChangeDto changeDto = IssueChangeDto.of(issue.getKey(), diffs, issue.getProjectUuid());"],"delete":["480","    IssueChangeDto changeDto = IssueChangeDto.of(issue.getKey(), diffs);"]}]}},"492942631b3c2612fd8ed9b03bd7db3261a38e58":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceTest.java":"MODIFY","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/ProjectTester.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentKeyUpdaterMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectKeyUpdateTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":[{"add":["78","    assertThat(db.getDbClient().componentDao().selectByKey(dbSession, \"sample2:root:src\/InactiveFile.xoo\")).isNotNull();","80","    assertThat(dbClient.componentDao().selectByKey(dbSession, inactiveFile.getDbKey())).isAbsent();","188","    assertComponentKeyUpdated(inactiveModule.getDbKey(), \"your_project:root:inactive_module\");","189","    assertComponentKeyUpdated(inactiveFile.getDbKey(), \"your_project:root:module:src\/InactiveFile.xoo\");"],"delete":["79","    assertThat(dbClient.componentDao().selectByKey(dbSession, inactiveFile.getDbKey())).isPresent();","187","    assertComponentKeyNotUpdated(inactiveModule.getDbKey());","188","    assertComponentKeyNotUpdated(inactiveFile.getDbKey());","196","  private void assertComponentKeyNotUpdated(String key) {","197","    assertThat(dbClient.componentDao().selectByKey(dbSession, key)).isPresent();","198","  }","199",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceTest.java":[{"add":["67","    assertComponentKeyUpdated(inactiveModule.getDbKey(), \"your_project:root:inactive_module\");","68","    assertComponentKeyUpdated(inactiveFile.getDbKey(), \"your_project:root:module:src\/InactiveFile.xoo\");"],"delete":["67","    assertComponentKeyNotUpdated(inactiveModule.getDbKey());","68","    assertComponentKeyNotUpdated(inactiveFile.getDbKey());"]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/ProjectTester.java":[{"add":["24","import org.sonarqube.ws.Components;","27","import org.sonarqube.ws.client.HttpException;","28","import org.sonarqube.ws.client.components.ShowRequest;","69","","70","  public boolean exists(String projectKey) {","71","    try {","72","      Components.ShowWsResponse response = session.wsClient().components().show(new ShowRequest().setComponent(projectKey));","73","      return response.getComponent() != null;","74","    } catch (HttpException e) {","75","      if (e.code() == 404) {","76","        return false;","77","      }","78","      throw new IllegalStateException(e);","79","    }","80","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentKeyUpdaterMapper.xml":[{"add":[],"delete":["31","    and enabled = ${_true}","40","    and enabled = ${_true}"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":[{"add":["85","    return collectAllModules(projectUuid, stringToReplace, mapper(dbSession), false)","111","    Set<ResourceDto> modules = collectAllModules(projectUuid, stringToReplace, mapper, true);","120","        Set<ResourceDto> branchModules = collectAllModules(branch.getUuid(), stringToReplace, mapper, true);","167","  private static Set<ResourceDto> collectAllModules(String projectUuid, String stringToReplace, ComponentKeyUpdaterMapper mapper, boolean includeDisabled) {","170","    if (project.getKey().contains(stringToReplace) && (project.isEnabled() || includeDisabled)) {","174","      modules.addAll(collectAllModules(submodule.getUuid(), stringToReplace, mapper, includeDisabled));"],"delete":["85","    return collectAllModules(projectUuid, stringToReplace, mapper(dbSession))","111","    Set<ResourceDto> modules = collectAllModules(projectUuid, stringToReplace, mapper);","120","        Set<ResourceDto> branchModules = collectAllModules(branch.getUuid(), stringToReplace, mapper);","167","  private static Set<ResourceDto> collectAllModules(String projectUuid, String stringToReplace, ComponentKeyUpdaterMapper mapper) {","170","    if (project.getKey().contains(stringToReplace)) {","174","      modules.addAll(collectAllModules(submodule.getUuid(), stringToReplace, mapper));"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectKeyUpdateTest.java":[{"add":["23","import java.io.File;","24","import java.io.IOException;","25","import java.io.OutputStream;","26","import java.util.ArrayList;","30","import java.util.Properties;","33","import org.apache.commons.io.FileUtils;","34","import org.apache.commons.lang.StringUtils;","40","import org.junit.rules.TemporaryFolder;","47","import org.sonarqube.ws.Projects.BulkUpdateKeyWsResponse.Key;","52","import org.sonarqube.ws.client.components.TreeRequest;","53","import org.sonarqube.ws.client.projects.BulkUpdateKeyRequest;","57","import static java.util.Arrays.asList;","59","import static org.assertj.core.groups.Tuple.tuple;","71","  @Rule","72","  public TemporaryFolder temp = new TemporaryFolder();","82","  public void update_key() throws IOException {","83","    Organizations.Organization organization = tester.organizations().generate();","84","    File projectDir = new XooProjectBuilder(PROJECT_KEY)","85","      .build(temp.newFolder());","86","    analyze(organization, projectDir);","87","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","89","    String newProjectKey = \"renamed\";","90","    updateProjectKey(PROJECT_KEY, newProjectKey, false);","92","    assertThat(tester.projects().exists(PROJECT_KEY)).isFalse();","93","    assertThat(tester.projects().exists(newProjectKey)).isTrue();","101","    updateProjectKey(project.getKey(), \"two\", false);","118","    updateProjectKey(project.getKey(), \"two\", false);","158","    updateModuleKey(initialKey, newKey);","184","    updateModuleKey(initialKey, newKey);","209","  }","211","  \/**","212","   * SONAR-10511","213","   *\/","214","  @Test","215","  public void update_key_of_disabled_files() throws Exception {","216","    Organizations.Organization organization = tester.organizations().generate();","217","","218","    \/\/ first analysis","219","    File projectWith2Files = new XooProjectBuilder(PROJECT_KEY)","220","      .setFilesPerModule(2)","221","      .build(temp.newFolder());","222","    analyze(organization, projectWith2Files);","223","    assertThat(countFilesInProject()).isEqualTo(2);","224","","225","    \/\/ second analysis emulates a deletion of file","226","    File projectWith1File = new XooProjectBuilder(PROJECT_KEY)","227","      .setFilesPerModule(1)","228","      .build(temp.newFolder());","229","    analyze(organization, projectWith1File);","230","    assertThat(countFilesInProject()).isEqualTo(1);","231","","232","    \/\/ update the project key","233","    updateProjectKey(PROJECT_KEY, \"renamed\", false);","234","    ItUtils.expectNotFoundError(() -> tester.wsClient().components().show(new ShowRequest().setComponent(PROJECT_KEY)));","235","","236","    \/\/ first analysis of the new project, which re-enables the deleted file","237","    analyze(organization, projectWith2Files);","238","    assertThat(countFilesInProject()).isEqualTo(2);","239","  }","240","","241","  \/**","242","   * SONAR-10511","243","   *\/","244","  @Test","245","  public void update_of_project_key_includes_disabled_modules() throws Exception {","246","    Organizations.Organization organization = tester.organizations().generate();","247","","248","    \/\/ first analysis","249","    File projectWithModulesAB = new XooProjectBuilder(PROJECT_KEY)","250","      .addModules(\"module_a\", \"module_b\")","251","      .build(temp.newFolder());","252","    analyze(organization, projectWithModulesAB);","253","    assertThat(countFilesInProject()).isEqualTo(3);","254","","255","    \/\/ second analysis emulates deletion of module_b","256","    File projectWithModuleA = new XooProjectBuilder(PROJECT_KEY)","257","      .addModules(\"module_a\")","258","      .build(temp.newFolder());","259","    analyze(organization, projectWithModuleA);","260","    assertThat(countFilesInProject()).isEqualTo(2);","261","","262","    \/\/ update the project key","263","    updateProjectKey(PROJECT_KEY, \"renamed\", false);","264","    assertThat(tester.projects().exists(PROJECT_KEY)).isFalse();","265","","266","    \/\/ analysis of new project, re-enabling the deleted module","267","    File projectWithModulesBC = new XooProjectBuilder(PROJECT_KEY)","268","      .addModules(\"module_b\", \"module_c\")","269","      .build(temp.newFolder());","270","    analyze(organization, projectWithModulesBC);","271","    assertThat(countFilesInProject()).isEqualTo(3);","272","  }","273","","274","  @Test","275","  public void simulate_update_key_of_modules() throws Exception {","276","    Organizations.Organization organization = tester.organizations().generate();","277","","278","    File project = new XooProjectBuilder(PROJECT_KEY)","279","      .addModules(\"module_a\", \"module_b\")","280","      .build(temp.newFolder());","281","    analyze(organization, project);","282","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","283","","284","    \/\/ simulate update of project key","285","    Projects.BulkUpdateKeyWsResponse response = updateProjectKey(PROJECT_KEY, \"renamed\", true);","286","","287","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","288","    assertThat(tester.projects().exists(\"renamed\")).isFalse();","289","    assertThat(response.getKeysList())","290","      .extracting(Key::getKey, Key::getNewKey)","291","      .containsExactlyInAnyOrder(","292","        tuple(PROJECT_KEY, \"renamed\"),","293","        tuple(PROJECT_KEY + \":module_a\", \"renamed:module_a\"),","294","        tuple(PROJECT_KEY + \":module_b\", \"renamed:module_b\"));","295","  }","296","","297","  @Test","298","  public void simulate_update_key_of_disabled_modules() throws Exception {","299","    Organizations.Organization organization = tester.organizations().generate();","300","","301","    \/\/ first analysis","302","    File projectWithModulesAB = new XooProjectBuilder(PROJECT_KEY)","303","      .addModules(\"module_a\", \"module_b\")","304","      .build(temp.newFolder());","305","    analyze(organization, projectWithModulesAB);","306","    assertThat(countFilesInProject()).isEqualTo(3);","307","","308","    \/\/ second analysis emulates deletion of module_b","309","    File projectWithModuleA = new XooProjectBuilder(PROJECT_KEY)","310","      .addModules(\"module_a\")","311","      .build(temp.newFolder());","312","    analyze(organization, projectWithModuleA);","313","    assertThat(countFilesInProject()).isEqualTo(2);","314","","315","    \/\/ update the project key","316","    Projects.BulkUpdateKeyWsResponse response = updateProjectKey(PROJECT_KEY, \"renamed\", true);","317","","318","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","319","    assertThat(tester.projects().exists(\"renamed\")).isFalse();","320","    assertThat(response.getKeysList())","321","      .extracting(Key::getKey, Key::getNewKey)","322","      .containsExactlyInAnyOrder(","323","        tuple(PROJECT_KEY, \"renamed\"),","324","        tuple(PROJECT_KEY + \":module_a\", \"renamed:module_a\"));","325","  }","326","","327","  private int countFilesInProject() {","328","    TreeRequest request = new TreeRequest().setComponent(PROJECT_KEY).setQualifiers(asList(\"FIL\"));","329","    return tester.wsClient().components().tree(request).getComponentsCount();","330","  }","331","","332","  private void analyze(Organizations.Organization organization, File projectDir) {","333","    orchestrator.executeBuild(SonarScanner.create(projectDir,","334","      \"sonar.organization\", organization.getKey(),","335","      \"sonar.login\", \"admin\", \"sonar.password\", \"admin\"));","348","  private void updateModuleKey(String initialKey, String newKey) {","352","  private Projects.BulkUpdateKeyWsResponse updateProjectKey(String initialKey, String newKey, boolean dryRun) {","353","    return tester.wsClient().projects().bulkUpdateKey(new BulkUpdateKeyRequest()","354","      .setProject(initialKey)","355","      .setFrom(initialKey)","356","      .setTo(newKey)","357","      .setDryRun(String.valueOf(dryRun)));","358","  }","359","","361","    return tester.projects().provision(organization, r -> r.setProject(key).setName(name));","400","  private static class XooProjectBuilder {","401","    private final String key;","402","    private final List<String> moduleKeys = new ArrayList<>();","403","    private int filesPerModule = 1;","404","","405","    XooProjectBuilder(String projectKey) {","406","      this.key = projectKey;","407","    }","408","","409","    XooProjectBuilder addModules(String key, String... otherKeys) {","410","      this.moduleKeys.add(key);","411","      this.moduleKeys.addAll(asList(otherKeys));","412","      return this;","413","    }","414","","415","    XooProjectBuilder setFilesPerModule(int i) {","416","      this.filesPerModule = i;","417","      return this;","418","    }","419","","420","    File build(File dir) {","421","      for (String moduleKey : moduleKeys) {","422","        generateModule(moduleKey, new File(dir, moduleKey), new Properties());","423","      }","424","      Properties additionalProps = new Properties();","425","      additionalProps.setProperty(\"sonar.modules\", StringUtils.join(moduleKeys, \",\"));","426","      generateModule(key, dir, additionalProps);","427","      return dir;","428","    }","429","","430","    private void generateModule(String key, File dir, Properties additionalProps) {","431","      try {","432","        File sourceDir = new File(dir, \"src\");","433","        FileUtils.forceMkdir(sourceDir);","434","        for (int i = 0; i < filesPerModule; i++) {","435","          File sourceFile = new File(sourceDir, \"File\" + i + \".xoo\");","436","          FileUtils.write(sourceFile, \"content of \" + sourceFile.getName());","437","        }","438","        Properties props = new Properties();","439","        props.setProperty(\"sonar.projectKey\", key);","440","        props.setProperty(\"sonar.projectName\", key);","441","        props.setProperty(\"sonar.projectVersion\", \"1.0\");","442","        props.setProperty(\"sonar.sources\", sourceDir.getName());","443","        props.putAll(additionalProps);","444","        File propsFile = new File(dir, \"sonar-project.properties\");","445","        try (OutputStream output = FileUtils.openOutputStream(propsFile)) {","446","          props.store(output, \"generated\");","447","        }","448","      } catch (IOException e) {","449","        throw new IllegalStateException(e);","450","      }","451","    }","453",""],"delete":["44","import org.sonarqube.ws.client.projects.CreateRequest;","59","","69","  public void update_key() {","70","    analyzeXooSample();","71","    String newProjectKey = \"another_project_key\";","72","    Components.Component project = tester.wsClient().components().show(new ShowRequest().setComponent(PROJECT_KEY)).getComponent();","73","    assertThat(project.getKey()).isEqualTo(PROJECT_KEY);","75","    tester.wsClient().projects().updateKey(new UpdateKeyRequest()","76","      .setFrom(PROJECT_KEY)","77","      .setTo(newProjectKey));","79","    assertThat(tester.wsClient().components().show(new ShowRequest().setComponentId(project.getId())).getComponent().getKey()).isEqualTo(newProjectKey);","87","    updateKey(project, \"two\");","104","    updateKey(project, \"two\");","144","    updateKey(initialKey, newKey);","170","    updateKey(initialKey, newKey);","208","  private void updateKey(Projects.CreateWsResponse.Project project, String newKey) {","209","    tester.wsClient().projects().updateKey(new UpdateKeyRequest().setFrom(project.getKey()).setTo(newKey));","210","  }","211","","212","  private void updateKey(String initialKey, String newKey) {","217","    CreateRequest createRequest = new CreateRequest().setProject(key).setName(name).setOrganization(organization.getKey());","218","    return tester.wsClient().projects().create(createRequest).getProject();","257","  private void analyzeXooSample() {","258","    SonarScanner build = SonarScanner.create(projectDir(\"shared\/xoo-sample\"));","259","    orchestrator.executeBuild(build);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":[{"add":["65","  public void updateKey_updates_disabled_components() {","77","    assertThat(result)","78","      .hasSize(5)","79","      .extracting(ComponentDto::getDbKey)","80","      .containsOnlyOnce(\"your_project\", \"your_project:directory\", \"your_project:directory\/file\", \"your_project:inactive_directory\", \"your_project:inactive_directory\/file\");","220","  public void bulk_update_key_updates_disabled_components() {","228","    assertThat(result)","229","      .hasSize(3)","230","      .extracting(ComponentDto::getDbKey)","231","      .containsOnlyOnce(\"your_project\", \"your_project:module\", \"your_project:inactive_module\");","334","  public void simulate_bulk_update_key_does_not_return_disable_components() {","338","    db.components().insertComponent(newPrivateProjectDto(db.getDefaultOrganization(), \"D\").setDbKey(\"other-project\"));","342","    assertThat(result).containsOnly(","343","      entry(\"project\", \"new-project\"),","344","      entry(\"project:enabled-module\", \"new-project:enabled-module\"));"],"delete":["65","  public void updateKey_does_not_update_inactive_components() {","77","    assertThat(result).hasSize(5).extracting(ComponentDto::getDbKey)","78","      .containsOnlyOnce(\"your_project\", \"your_project:directory\", \"your_project:directory\/file\", \"my_project:inactive_directory\", \"my_project:inactive_directory\/file\");","218","  public void bulk_update_key_does_not_update_inactive_components() {","226","    assertThat(result).hasSize(3).extracting(ComponentDto::getDbKey)","227","      .containsOnlyOnce(\"your_project\", \"your_project:module\", \"my_project:inactive_module\");","330","  public void simulate_bulk_update_key_do_not_return_disable_components() {","337","    assertThat(result)","338","      .hasSize(2)","339","      .containsOnly(entry(\"project\", \"new-project\"), entry(\"project:enabled-module\", \"new-project:enabled-module\"));"]}]}},"4e2c7f4e37f3f1263a44a5e7fd612f553ec916ed":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/GroupWsSupport.java":"MODIFY","sonar-ws\/src\/main\/protobuf\/ws-user_groups.proto":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":[{"add":["143","      .setId(group.getUuid())"],"delete":["143","      .setUuid(group.getUuid())"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/GroupWsSupport.java":[{"add":["149","      .setId(group.getUuid())"],"delete":["149","      .setUuid(group.getUuid())"]}],"sonar-ws\/src\/main\/protobuf\/ws-user_groups.proto":[{"add":["45","  optional string id = 1;"],"delete":["45","  optional string uuid = 1;"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":[{"add":["167","    assertThat(call(ws.newRequest()).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","169","    assertThat(call(ws.newRequest().setParam(FIELDS, \"\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","171","    assertThat(call(ws.newRequest().setParam(FIELDS, \"name\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","173","    assertThat(call(ws.newRequest().setParam(FIELDS, \"description\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","175","    assertThat(call(ws.newRequest().setParam(FIELDS, \"membersCount\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","190","    assertThat(response.getGroupsList()).extracting(Group::getId, Group::getName).containsOnly(tuple(group.getUuid(), \"users\"));"],"delete":["167","    assertThat(call(ws.newRequest()).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","169","    assertThat(call(ws.newRequest().setParam(FIELDS, \"\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","171","    assertThat(call(ws.newRequest().setParam(FIELDS, \"name\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","173","    assertThat(call(ws.newRequest().setParam(FIELDS, \"description\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","175","    assertThat(call(ws.newRequest().setParam(FIELDS, \"membersCount\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","190","    assertThat(response.getGroupsList()).extracting(Group::getUuid, Group::getName).containsOnly(tuple(group.getUuid(), \"users\"));"]}]}},"72f64c95fdef18ec950d341c1a9093f30087e1c1":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/DefaultRuleFinder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/rules\/Rule.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/CachingRuleFinder.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/DefaultRuleFinderTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/rule\/RuleDbTester.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/CachingRuleFinderTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/DefaultRuleFinder.java":[{"add":["147","      .setSystemTags(rule.getSystemTags().toArray(new String[rule.getSystemTags().size()]))"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/rules\/Rule.java":[{"add":["402","  public Rule setSystemTags(String[] tags) {","403","    this.systemTags = tags == null ? null : StringUtils.join(tags, ',');","404","    return this;","405","  }","406",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/CachingRuleFinder.java":[{"add":["165","    String[] systemTags = ruleDefinition.getSystemTags().toArray(new String[ruleDefinition.getSystemTags().size()]);","177","      .setSystemTags(systemTags)","178","      \/\/ FIXME tags should contain user defined tags and we can't provide them without organization => tags should return []","179","      .setTags(systemTags)"],"delete":["176","      .setTags(ruleDefinition.getSystemTags().toArray(new String[ruleDefinition.getSystemTags().size()]))"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/DefaultRuleFinderTest.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","31","import org.sonar.db.organization.OrganizationDto;","32","import org.sonar.db.rule.RuleDefinitionDto;","37","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","139","  @Test","140","  public void findById_populates_system_tags_but_not_tags() {","141","    RuleDefinitionDto ruleDefinition = dbTester.rules()","142","      .insert(t -> t.setSystemTags(ImmutableSet.of(randomAlphanumeric(5), randomAlphanumeric(6))));","143","    OrganizationDto organization = dbTester.organizations().insert();","144","    dbTester.rules().insertRule(organization);","145","","146","    Rule rule = underTest.findById(ruleDefinition.getId());","147","    assertThat(rule.getSystemTags())","148","      .containsOnlyElementsOf(ruleDefinition.getSystemTags());","149","    assertThat(rule.getTags()).isEmpty();","150","  }","151","","152","  @Test","153","  public void findByKey_populates_system_tags_but_not_tags() {","154","    RuleDefinitionDto ruleDefinition = dbTester.rules()","155","      .insert(t -> t.setSystemTags(ImmutableSet.of(randomAlphanumeric(5), randomAlphanumeric(6))));","156","    OrganizationDto organization = dbTester.organizations().insert();","157","    dbTester.rules().insertRule(organization);","158","","159","    Rule rule = underTest.findByKey(ruleDefinition.getKey());","160","    assertThat(rule.getSystemTags())","161","      .containsOnlyElementsOf(ruleDefinition.getSystemTags());","162","    assertThat(rule.getTags()).isEmpty();","163","","164","    rule = underTest.findByKey(ruleDefinition.getRepositoryKey(), ruleDefinition.getRuleKey());","165","    assertThat(rule.getSystemTags())","166","      .containsOnlyElementsOf(ruleDefinition.getSystemTags());","167","    assertThat(rule.getTags()).isEmpty();","168","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/rule\/RuleDbTester.java":[{"add":["148","","149","  public RuleDto insertRule(RuleDefinitionDto ruleDefinition, RuleMetadataDto ruleMetadata) {","150","    db.getDbClient().ruleDao().insertOrUpdate(db.getSession(), ruleMetadata.setRuleId(ruleDefinition.getId()));","151","    db.commit();","152","    return new RuleDto(ruleDefinition, ruleMetadata);","153","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/CachingRuleFinderTest.java":[{"add":["410","    String[] systemTags = ruleDefinition.getSystemTags().stream().toArray(String[]::new);","411","    assertThat(rule.getSystemTags()).isEqualTo(systemTags);","412","    assertThat(rule.getTags()).isEqualTo(systemTags);"],"delete":["410","    assertThat(rule.getTags()).isEqualTo(ruleDefinition.getSystemTags().stream().toArray(String[]::new));"]}]}},"df6860806d152b2873e89e659896ae6de146daea":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileActions-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileActions.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileActions-test.tsx":[{"add":["22","import { click, waitAndUpdate } from '..\/..\/..\/..\/helpers\/testUtils';","87","","88","it('should copy profile', async () => {","89","  const updateProfiles = jest.fn(() => Promise.resolve());","90","  const push = jest.fn();","91","  const wrapper = shallow(","92","    <ProfileActions","93","      onRequestFail={jest.fn()}","94","      organization=\"org\"","95","      profile={{ ...PROFILE, actions: { copy: true } }}","96","      updateProfiles={updateProfiles}","97","    \/>,","98","    { context: { router: { push } } }","99","  );","100","","101","  click(wrapper.find('[id=\"quality-profile-copy\"]'));","102","  expect(wrapper.find('CopyProfileForm').exists()).toBe(true);","103","","104","  wrapper.find('CopyProfileForm').prop<Function>('onCopy')('new-name');","105","  expect(updateProfiles).toBeCalled();","106","  await waitAndUpdate(wrapper);","107","","108","  expect(push).toBeCalledWith({","109","    pathname: '\/organizations\/org\/quality_profiles\/show',","110","    query: { language: 'java', name: 'new-name' }","111","  });","112","  expect(wrapper.find('CopyProfileForm').exists()).toBe(false);","113","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileActions.tsx":[{"add":["90","    this.closeCopyForm();"],"delete":[]}]}},"0e5d51d8b22f08bc83953e039e762c3d69ae34cc":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/common\/LocationIndex.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/common\/LocationIndex.css":[{"add":["43",".location-index.is-leading:first-child {","44","  margin-left: 0;","45","}","46","","47",".location-index.is-leading:not(:first-child) {","49","  margin-left: -4px;","53",".location-index.is-leading + .is-leading {","54","  position: relative;","55","  transform: none;","56","}","57",""],"delete":["43",".location-index.is-leading {","45","  margin: 1px 0 0 -4px !important;"]}]}},"b8a687d4de61a78ba5529ad5554b7a10b10dc674":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissionsTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissions.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissionsTest.java":[{"add":["56","  public void execute_makes_project_private_if_Anyone_has_only_user_permission_and_project_has_at_least_one_other_group_permission() throws SQLException {","58","    insertGroupPermission(ROLE_USER, pId1, null);","59","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","67","  public void execute_makes_project_private_if_Anyone_has_only_user_permission_and_project_has_one_user_permission() throws SQLException {","69","    insertGroupPermission(ROLE_USER, pId1, null);","70","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","78","  public void execute_keeps_project_public_if_Anyone_has_only_user_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","88","  public void execute_makes_project_private_if_Anyone_has_only_codeviewer_permission_and_project_has_one_other_group_permission() throws SQLException {","89","    long pId1 = insertRootComponent(\"p1\", false);","90","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","91","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","92","","93","    underTest.execute();","94","","95","    assertThat(isPrivate(\"p1\")).isTrue();","96","  }","97","","98","  @Test","99","  public void execute_makes_project_private_if_Anyone_has_only_codeviewer_permission_and_project_has_one_user_permission() throws SQLException {","100","    long pId1 = insertRootComponent(\"p1\", false);","101","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","102","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","103","","104","    underTest.execute();","105","","106","    assertThat(isPrivate(\"p1\")).isTrue();","107","  }","108","","109","  @Test","110","  public void execute_keeps_project_public_if_Anyone_has_only_codeviewer_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","120","  public void execute_makes_project_private_if_Anyone_has_neither_user_nor_codeviewer_permission_and_project_has_one_other_group_permission() throws SQLException {","123","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","124","","125","    underTest.execute();","126","","127","    assertThat(isPrivate(\"p1\")).isTrue();","128","  }","129","","130","  @Test","131","  public void execute_makes_project_private_if_Anyone_has_neither_user_nor_codeviewer_permission_and_project_has_one_user_permission() throws SQLException {","132","    long pId1 = insertRootComponent(\"p1\", false);","133","    insertGroupPermission(randomRole, pId1, null);","134","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","135","","136","    underTest.execute();","137","","138","    assertThat(isPrivate(\"p1\")).isTrue();","139","  }","140","","141","  @Test","142","  public void execute_keeps_project_public_if_Anyone_has_neither_user_nor_codeviewer_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","143","    long pId1 = insertRootComponent(\"p1\", false);","144","    insertGroupPermission(\"foo\", pId1, null);","152","  public void execute_keeps_project_public_if_Anyone_has_both_user_and_codeviewer_permission_and_project_has_one_other_group_permission() throws SQLException {","153","    long pId1 = insertRootComponent(\"p1\", false);","154","    insertGroupPermission(ROLE_USER, pId1, null);","155","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","156","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","157","","158","    underTest.execute();","159","","160","    assertThat(isPrivate(\"p1\")).isFalse();","161","  }","162","","163","  @Test","164","  public void execute_keeps_project_public_if_Anyone_has_both_user_and_codeviewer_permission_and_project_has_user_permission() throws SQLException {","165","    long pId1 = insertRootComponent(\"p1\", false);","166","    insertGroupPermission(ROLE_USER, pId1, null);","167","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","168","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","169","","170","    underTest.execute();","171","","172","    assertThat(isPrivate(\"p1\")).isFalse();","173","  }","174","","175","  @Test","176","  public void execute_keeps_project_public_if_Anyone_has_both_user_and_codeviewer_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","177","    long pId1 = insertRootComponent(\"p1\", false);","178","    insertGroupPermission(ROLE_USER, pId1, null);","179","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","180","","181","    underTest.execute();","182","","183","    assertThat(isPrivate(\"p1\")).isFalse();","184","  }","185","","186","  @Test","187","  public void execute_keeps_project_public_if_it_has_no_user_nor_group_permission_at_all() throws SQLException {","196","  public void execute_does_not_change_private_projects_to_public_when_they_actually_should_be() throws SQLException {","197","    long p1Id = insertRootComponent(\"p1\", true); \/\/ both user and codeviewer","198","    long p2Id = insertRootComponent(\"p2\", true); \/\/ only user but no other permission","199","    long p3Id = insertRootComponent(\"p3\", true); \/\/ only codeviewer but no other permission","200","    long p4Id = insertRootComponent(\"p4\", true); \/\/ neither codeviewer nor user but no other permission","205","    insertGroupPermission(randomRole, p4Id, null);","212","    assertThat(isPrivate(\"p4\")).isTrue();"],"delete":["48","  private final int randomUserId = random.nextInt(500);","49","  private final int randomGroupId = random.nextInt(500);","58","  public void execute_makes_project_private_if_group_AnyOne_has_global_permission_USER() throws SQLException {","59","    long pId = insertRootComponent(\"p1\", false);","60","    insertGroupPermission(ROLE_USER, null, null);","61","    insertGroupPermission(randomRole, pId, randomGroupId);","62","","63","    underTest.execute();","64","","65","    assertThat(isPrivate(\"p1\")).isTrue();","66","  }","67","","68","  @Test","69","  public void execute_makes_project_private_if_group_AnyOne_has_global_permission_BROWSE() throws SQLException {","70","    long pId = insertRootComponent(\"p1\", false);","71","    insertGroupPermission(ROLE_CODEVIEWER, null, null);","72","    insertUserPermission(randomRole, pId, randomUserId);","73","","74","    underTest.execute();","75","","76","    assertThat(isPrivate(\"p1\")).isTrue();","77","  }","78","","79","  @Test","80","  public void execute_makes_project_private_if_group_other_than_AnyOne_has_permission_BROWSE_on_other_project() throws SQLException {","82","    insertGroupPermission(ROLE_CODEVIEWER, pId1, random.nextInt(30));","90","  public void execute_makes_project_private_if_group_other_than_AnyOne_has_permission_USER_on_other_project() throws SQLException {","92","    insertGroupPermission(ROLE_USER, pId1, random.nextInt(30));","100","  public void execute_keeps_project_public_if_group_AnyOne_has_permission_USER_on_it() throws SQLException {","110","  public void execute_keeps_project_public_if_group_AnyOne_has_permission_BROWSE_on_it() throws SQLException {","120","  public void execute_keeps_project_public_if_only_group_AnyOne_has_permission_on_it() throws SQLException {","130","  public void execute_keeps_project_public_if_project_has_no_permission() throws SQLException {","139","  public void execute_does_not_change_private_projects_to_public_when_they_actually_should_be_because_they_have_USER_or_BROWSE_on_group_Anyone() throws SQLException {","140","    long p1Id = insertRootComponent(\"p1\", true);","141","    long p2Id = insertRootComponent(\"p2\", true);","142","    long p3Id = insertRootComponent(\"p3\", true);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissions.java":[{"add":["70","      \" and (\" +","71","      \"   not exists (\" +","72","      \"     select\" +","73","      \"       1\" +","74","      \"     from group_roles gr\" +","75","      \"     where \" +","76","      \"       gr.resource_id = p.id\" +","77","      \"       and gr.group_id is null\" +","78","      \"       and gr.role = ?\" +","79","      \"   ) \" +","80","      \"   or not exists (\" +","81","      \"     select\" +","82","      \"       1\" +","83","      \"     from group_roles gr\" +","84","      \"     where \" +","85","      \"       gr.resource_id = p.id\" +","86","      \"       and gr.group_id is null\" +","87","      \"       and gr.role = ?\" +","88","      \"   )\" +"],"delete":["70","      \" and not exists (\" +","71","      \"   select\" +","72","      \"     1\" +","73","      \"   from group_roles gr\" +","74","      \"   where \" +","75","      \"     gr.resource_id = p.id\" +","76","      \"     and gr.group_id is null\" +","77","      \"     and gr.role in (?, ?)\" +"]}]}},"f892d78c31867ce944e85086e118148e5350024a":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/organization\/CreateWsRequest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesService.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/Category6Suite.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/issue\/IssueTagsTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesWsParameters.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/organization\/CreateWsRequest.java":[{"add":["59","  public static Builder builder() {","60","    return new Builder();","61","  }","62",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["586","        .filter(createAuthorizationFilter(true))"],"delete":[]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesService.java":[{"add":["21","import java.util.Arrays;","22","import java.util.stream.Collectors;","23","import javax.annotation.Nullable;","31","import org.sonarqube.ws.client.WsResponse;","46","import static org.sonarqube.ws.client.issue.IssuesWsParameters.ACTION_SET_TAGS;","48","import static org.sonarqube.ws.client.issue.IssuesWsParameters.ACTION_TAGS;","78","import static org.sonarqube.ws.client.issue.IssuesWsParameters.PARAM_ORGANIZATION;","216","","217","  public Issues.Operation setTags(String issue, String... tags) {","218","    return call(new PostRequest(path(ACTION_SET_TAGS))","219","        .setParam(PARAM_ISSUE, issue)","220","        .setParam(PARAM_TAGS, Arrays.stream(tags).collect(Collectors.joining(\",\"))),","221","      Issues.Operation.parser());","222","  }","223","","224","  public WsResponse getTags(@Nullable String organization) {","225","    return call(new PostRequest(path(ACTION_TAGS))","226","      .setParam(PARAM_ORGANIZATION, organization)","227","    );","228","  }"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/Category6Suite.java":[{"add":["22","import it.issue.IssueTagsTest;","50","  BillingTest.class,","51","  IssueTagsTest.class"],"delete":["49","  BillingTest.class"]}],"it\/it-tests\/src\/test\/java\/it\/issue\/IssueTagsTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":[{"add":["21","import java.util.Collections;","41","import org.sonar.server.permission.index.PermissionIndexerDao;","42","import org.sonar.server.permission.index.PermissionIndexerTester;","67","  private PermissionIndexerTester permissionIndexerTester = new PermissionIndexerTester(es, issueIndexer);","81","    userSession.logIn();","93","    userSession.logIn();","112","    userSession.logIn();","129","    userSession.logIn();","142","    userSession.logIn();","154","  public void do_not_return_issues_without_permission() throws Exception {","155","    userSession.logIn();","156","    insertIssueWithBrowsePermission(insertRuleWithoutTags(), \"tag1\", \"tag2\");","157","    insertIssueWithoutBrowsePermission(insertRuleWithoutTags(), \"tag3\", \"tag4\");","158","","159","    String result = tester.newRequest()","160","      .setParam(\"organization\", organization.getKey())","161","      .execute().getInput();","162","    assertJson(result).isSimilarTo(\"{\\\"tags\\\":[\\\"tag1\\\", \\\"tag2\\\"]}\");","163","    assertThat(result).doesNotContain(\"tag3\").doesNotContain(\"tag4\");","164","  }","165","","166","  @Test","168","    userSession.logIn();","175","    userSession.logIn();","191","    userSession.logIn();","225","  private void insertIssueWithBrowsePermission(RuleDefinitionDto rule, String... tags) {","226","    IssueDto issue = insertIssueWithoutBrowsePermission(rule, tags);","227","    grantAccess(issue);","230","  private IssueDto insertIssueWithoutBrowsePermission(RuleDefinitionDto rule, String... tags) {","231","    IssueDto issue = db.issues().insertIssue(organization, i -> i.setRule(rule).setTags(asList(tags)));","232","    ComponentDto project = db.getDbClient().componentDao().selectByUuid(db.getSession(), issue.getProjectUuid()).get();","233","    userSession.addProjectPermission(USER, project);","234","    issueIndexer.index(Collections.singletonList(issue.getKey()));","237","","238","  private void grantAccess(IssueDto issue) {","239","    PermissionIndexerDao.Dto access = new PermissionIndexerDao.Dto(issue.getProjectUuid(), System2.INSTANCE.now(), \"TRK\");","240","    access.addUserId(userSession.getUserId());","241","    permissionIndexerTester.allow(access);","242","  }"],"delete":["31","import org.sonar.db.issue.IssueTesting;","50","import static org.sonar.db.component.ComponentTesting.newFileDto;","81","    issueIndexer.indexOnStartup(null);","111","    issueIndexer.indexOnStartup(null);","128","    issueIndexer.indexOnStartup(null);","141","    issueIndexer.indexOnStartup(null);","159","    issueIndexer.indexOnStartup(null);","207","  private IssueDto insertIssue(RuleDefinitionDto rule, String... tags) {","208","    ComponentDto project = db.components().insertPrivateProject(organization);","209","    ComponentDto file = db.components().insertComponent(newFileDto(project));","210","    IssueDto issueDto = IssueTesting.newIssue(rule, file, project).setTags(asList(tags));","211","    return db.issues().insertIssue(issueDto);","214","  private void setUserWithBrowsePermission(IssueDto issue) {","215","    userSession.logIn(\"john\").addProjectPermission(USER, db.getDbClient().componentDao().selectByUuid(db.getSession(), issue.getProjectUuid()).get());","216","  }","217","","218","  private IssueDto insertIssueWithBrowsePermission(RuleDefinitionDto rule, String... tags) {","219","    IssueDto issue = insertIssue(rule, tags);","220","    setUserWithBrowsePermission(issue);"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesWsParameters.java":[{"add":["44","  public static final String ACTION_TAGS = \"tags\";"],"delete":[]}]}},"0d76849de3972733bf0105eda59870cb16560dc5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SelectList\/SelectList.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SelectList\/SelectList.tsx":[{"add":["77","    this.setState({ loading: true, query }, () => {","78","      this.props.onSearch(query, this.getFilter()).then(this.stopLoading, this.stopLoading);","79","    });"],"delete":["77","    this.setState({ loading: true, query });","78","    this.props.onSearch(query, this.getFilter()).then(this.stopLoading, this.stopLoading);"]}]}},"d8f8e347f9bb4ff6124556e7cef766d695cbaa2a":{"changes":{"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationSerializerTest.java":"ADD","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilderTest.java":"ADD","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilder.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationSerializerTest.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilderTest.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilder.java":[{"add":["271","      return key.equals(that.key) && ruleType == that.ruleType && name.equals(that.name);"],"delete":["271","      return key.equals(that.key) && ruleType.equals(that.ruleType) && name.equals(that.name);"]}]}},"d2dd76f34d2cce8162a1c408322e18299c14e6e1":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentMapper.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":[{"add":["275","    return Optional.ofNullable(mapper(session).selectBranchByKeyAndBranchKey(key, generateBranchKey(key, branch), branch));","279","    return Optional.ofNullable(mapper(session).selectPrByKeyAndBranchKey(key, generatePullRequestKey(key, pullRequestId), pullRequestId));"],"delete":["275","    return Optional.ofNullable(mapper(session).selectByKeyAndBranchKey(key, generateBranchKey(key, branch), branch));","279","    return Optional.ofNullable(mapper(session).selectByKeyAndBranchKey(key, generatePullRequestKey(key, pullRequestId), pullRequestId));"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentMapper.java":[{"add":["37","  ComponentDto selectBranchByKeyAndBranchKey(@Param(\"key\") String key, @Param(\"dbKey\") String dbKey, @Param(\"branch\") String branch);","38","","39","  @CheckForNull","40","  ComponentDto selectPrByKeyAndBranchKey(@Param(\"key\") String key, @Param(\"dbKey\") String dbKey, @Param(\"branch\") String branch);"],"delete":["37","  ComponentDto selectByKeyAndBranchKey(@Param(\"key\") String key, @Param(\"dbKey\") String dbKey, @Param(\"branch\") String branch);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["38","  <select id=\"selectBranchByKeyAndBranchKey\" parameterType=\"String\" resultType=\"Component\">","39","    select","40","      <include refid=\"componentColumns\"\/>","41","    from projects p","42","    inner join project_branches pb on pb.uuid = p.project_uuid","43","    where","45","      and pb.kee=#{branch,jdbcType=VARCHAR}","46","      and (pb.branch_type='LONG' or pb.branch_type='SHORT')","47","  <\/select>","48","","49","  <select id=\"selectPrByKeyAndBranchKey\" parameterType=\"String\" resultType=\"Component\">","50","    select","51","      <include refid=\"componentColumns\"\/>","52","    from projects p","53","    inner join project_branches pb on pb.uuid = p.project_uuid","54","    where","55","      (p.kee=#{dbKey,jdbcType=VARCHAR} OR p.kee=#{key,jdbcType=VARCHAR})","56","      and pb.kee=#{branch,jdbcType=VARCHAR}","57","      and pb.branch_type='PULL_REQUEST'"],"delete":["38","  <select id=\"selectByKeyAndBranchKey\" parameterType=\"String\" resultType=\"Component\">","39","    SELECT","40","    <include refid=\"componentColumns\"\/>","41","    FROM projects p","42","    INNER JOIN project_branches pb on pb.uuid = p.project_uuid","43","    <where>","45","      AND pb.kee=#{branch,jdbcType=VARCHAR}","46","    <\/where>"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["73","import static org.sonar.db.component.BranchType.PULL_REQUEST;","217","  @UseDataProvider(\"branchBranchTypes\")","218","  public void selectByKeyAndBranch(BranchType branchType) {","220","    ComponentDto branch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\").setBranchType(branchType));","229","  ","230","  @DataProvider","231","  public static Object[][] branchBranchTypes() {","232","    return new Object[][] {","233","      {BranchType.SHORT},","234","      {BranchType.LONG}","235","    };","236","  }","237","","238","  @Test","239","  public void selectByKeyAndPullRequest() {","240","    ComponentDto project = db.components().insertMainBranch();","241","    ComponentDto branch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\"));","242","    ComponentDto pullRequest = db.components().insertProjectBranch(project, b -> b.setKey(\"my_PR\").setBranchType(PULL_REQUEST));","243","    ComponentDto pullRequestNamedAsMainBranch = db.components().insertProjectBranch(project, b -> b.setKey(\"master\").setBranchType(PULL_REQUEST));","244","    ComponentDto pullRequestNamedAsBranch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\").setBranchType(PULL_REQUEST));","245","    ComponentDto file = db.components().insertComponent(newFileDto(pullRequest));","246","","247","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, project.getKey(), \"my_PR\").get().uuid()).isEqualTo(pullRequest.uuid());","248","    assertThat(underTest.selectByKeyAndBranch(dbSession, project.getKey(), \"master\").get().uuid()).isEqualTo(project.uuid());","249","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, project.getKey(), \"master\").get().uuid()).isEqualTo(pullRequestNamedAsMainBranch.uuid());","250","    assertThat(underTest.selectByKeyAndBranch(dbSession, branch.getKey(), \"my_branch\").get().uuid()).isEqualTo(branch.uuid());","251","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, branch.getKey(), \"my_branch\").get().uuid()).isEqualTo(pullRequestNamedAsBranch.uuid());","252","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, file.getKey(), \"my_PR\").get().uuid()).isEqualTo(file.uuid());","253","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, \"unknown\", \"my_branch\")).isNotPresent();","254","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, file.getKey(), \"unknown\")).isNotPresent();","255","  }"],"delete":["216","  public void selectByKeyAndBranch() {","218","    ComponentDto branch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\"));"]}]}},"dda0900b46b558e6cfe0479552852fc5c9456a22":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/App-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/App.tsx":[{"add":["28","import { SubComponent } from '..\/types';","29","import { PORTFOLIO_METRICS, SUB_COMPONENTS_METRICS, convertMeasures } from '..\/utils';","33","import '..\/styles.css';","77","      getChildren(this.props.component.key, SUB_COMPONENTS_METRICS, { ps: 20, s: 'qualifier' })","100","  isEmpty = () => !this.state.measures || !this.state.measures['ncloc'];","102","  isNotComputed = () => this.state.measures && !this.state.measures['reliability_rating'];","152","        {subComponents !== undefined &&","153","        totalSubComponents !== undefined && ("],"delete":["30","import { PORTFOLIO_METRICS, SUB_COMPONENTS_METRICS, convertMeasures } from '..\/utils';","31","import { SubComponent } from '..\/types';","32","import '..\/styles.css';","77","      getChildren(this.props.component.key, SUB_COMPONENTS_METRICS, { ps: 20 })","100","  isEmpty = () => this.state.measures == undefined || this.state.measures['ncloc'] == undefined;","102","  isNotComputed = () =>","103","    this.state.measures && this.state.measures['reliability_rating'] == undefined;","153","        {subComponents != undefined &&","154","        totalSubComponents != undefined && ("]}],"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/App-test.tsx":[{"add":["103","    { ps: 20, s: 'qualifier' }"],"delete":["103","    { ps: 20 }"]}]}},"47901d1f6ef2aebc0f72972fccf3d680ea9d2a7d":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":[{"add":["46","  flex: 0 1 300px; \/* Workaround for SONAR-10971 *\/","47","  min-width: 0;"],"delete":["46","  flex: 1;","47","  max-width: 300px;"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.css":[{"add":["103","  flex: 0 1 310px; \/* Workaround for SONAR-10971 *\/","104","  min-width: 0;"],"delete":["103","  flex: 1;","104","  max-width: 310px;"]}]}},"a7945437d456d5c1d0bfe58f38a53f4239f109e1":{"changes":{"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":[{"add":["48","  public void start_does_not_reset_in_progress_tasks_to_pending() throws IOException {","54","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.PENDING)).isEqualTo(1);","55","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.IN_PROGRESS)).isEqualTo(1);"],"delete":["48","  public void start_resets_in_progress_tasks_to_pending() throws IOException {","54","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.PENDING)).isEqualTo(2);","55","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.IN_PROGRESS)).isEqualTo(0);"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":[{"add":[],"delete":["68","    \/\/ server is not being upgraded","69","    dbClient.ceQueueDao().resetAllToPendingStatus(dbSession);","70","    dbSession.commit();","71",""]}]}},"10eae4b03f57e7b622fef0606553481f8a5ac812":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":[{"add":["47","          <label title=\"{{key}}\">{{key}}<\/label>"],"delete":["47","          <label>{{key}}<\/label>"]}]}},"ac411892a8fd09a4a422218efafb6f9f233a7f90":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateModule.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGates.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionActionTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGatesTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGateModuleTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsSupport.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateModule.java":[{"add":["33","import org.sonar.server.qualitygate.ws.QualityGatesWsSupport;","52","      QualityGatesWsSupport.class,"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGates.java":[{"add":[],"delete":["172","  public void deleteCondition(Long condId) {","173","    checkIsSystemAdministrator();","174","    try (DbSession dbSession = dbClient.openSession(false)) {","175","      conditionDao.delete(getNonNullCondition(dbSession, condId), dbSession);","176","      dbSession.commit();","177","    }","178","  }","179","","222","  private QualityGateConditionDto getNonNullCondition(DbSession dbSession, long id) {","223","    QualityGateConditionDto condition = conditionDao.selectById(id, dbSession);","224","    if (condition == null) {","225","      throw new NotFoundException(\"There is no condition with id=\" + id);","226","    }","227","    return condition;","228","  }","229",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionAction.java":[{"add":["24","import org.sonar.db.DbClient;","25","import org.sonar.db.DbSession;","26","import org.sonar.db.organization.OrganizationDto;","27","import org.sonar.server.user.UserSession;","28","","29","import static org.sonar.db.permission.OrganizationPermission.ADMINISTER_QUALITY_GATES;","30","import static org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters.PARAM_ID;","34","  private final DbClient dbClient;","35","  private final UserSession userSession;","36","  private final QualityGatesWsSupport wsSupport;","38","  public DeleteConditionAction(UserSession userSession, DbClient dbClient, QualityGatesWsSupport wsSupport) {","39","    this.userSession = userSession;","40","    this.dbClient = dbClient;","41","    this.wsSupport = wsSupport;","47","      .setDescription(\"Delete a condition from a quality gate.<br>\" +","48","        \"Requires the 'Administer Quality Gates' permission\")","54","      .createParam(PARAM_ID)","62","    long conditionId = request.mandatoryParamAsLong(PARAM_ID);","63","    try (DbSession dbSession = dbClient.openSession(false)) {","64","      OrganizationDto organization = wsSupport.getOrganization(dbSession);","65","      userSession.checkPermission(ADMINISTER_QUALITY_GATES, organization);","66","      dbClient.gateConditionDao().delete(wsSupport.getCondition(dbSession, conditionId), dbSession);","67","      dbSession.commit();","68","      response.noContent();","69","    }"],"delete":["24","import org.sonar.server.qualitygate.QualityGates;","25","import org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters;","29","  private final QualityGates qualityGates;","31","  public DeleteConditionAction(QualityGates qualityGates) {","32","    this.qualityGates = qualityGates;","38","      .setDescription(\"Delete a condition from a quality gate. Require Administer Quality Gates permission\")","44","      .createParam(QualityGatesWsParameters.PARAM_ID)","52","    qualityGates.deleteCondition(QualityGatesWs.parseId(request, QualityGatesWsParameters.PARAM_ID));","53","    response.noContent();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionActionTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGatesTest.java":[{"add":[],"delete":["287","  public void should_delete_condition() {","288","    long idToDelete = QUALITY_GATE_ID;","289","    QualityGateConditionDto toDelete = new QualityGateConditionDto().setId(idToDelete);","290","    when(conditionDao.selectById(idToDelete, dbSession)).thenReturn(toDelete);","291","    underTest.deleteCondition(idToDelete);","292","    verify(conditionDao).selectById(idToDelete, dbSession);","293","    verify(conditionDao).delete(toDelete, dbSession);","294","  }","295","","296","  @Test(expected = NotFoundException.class)","297","  public void should_fail_delete_condition() {","298","    underTest.deleteCondition(QUALITY_GATE_ID);","299","  }","300","","301","  @Test"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGateModuleTest.java":[{"add":["31","    assertThat(container.size()).isEqualTo(24 + 2);"],"delete":["31","    assertThat(container.size()).isEqualTo(23 + 2);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsTest.java":[{"add":["80","      new DeleteConditionAction(null, null, null),"],"delete":["80","      new DeleteConditionAction(qGates),","184","    Action deleteCondition = controller.action(\"delete_condition\");","185","    assertThat(deleteCondition).isNotNull();","186","    assertThat(deleteCondition.handler()).isNotNull();","187","    assertThat(deleteCondition.since()).isEqualTo(\"4.3\");","188","    assertThat(deleteCondition.isPost()).isTrue();","189","    assertThat(deleteCondition.param(\"id\")).isNotNull();","190","    assertThat(deleteCondition.isInternal()).isFalse();","191","","316","  public void delete_condition_nominal() throws Exception {","317","    long condId = 12345L;","318","    tester.newPostRequest(\"api\/qualitygates\", \"delete_condition\")","319","      .setParam(\"id\", Long.toString(condId))","320","      .execute()","321","      .assertNoContent();","322","  }","323","","324","  @Test"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsSupport.java":[{"add":[],"delete":[]}]}},"cefae4aca32d702db0effe3779dfd0a1e976f8cb":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/EmptyInstance.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/EmptyInstance-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/EmptyInstance.tsx":[{"add":["23","import { Organization, CurrentUser, isLoggedIn, hasGlobalPermission } from '..\/..\/..\/app\/types';","46","      : isLoggedIn(currentUser) && hasGlobalPermission(currentUser, 'provisioning');"],"delete":["23","import { Organization, CurrentUser, isLoggedIn } from '..\/..\/..\/app\/types';","46","      : isLoggedIn(currentUser);"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/EmptyInstance-test.tsx":[{"add":["34","    shallow(","35","      <EmptyInstance","36","        currentUser={{ isLoggedIn: true, permissions: { global: ['provisioning'] } }}","37","        organization={undefined}","38","      \/>","39","    )"],"delete":["34","    shallow(<EmptyInstance currentUser={{ isLoggedIn: true }} organization={undefined} \/>)"]}]}},"b7976ff3de0187d28cbe371a858d51af32913853":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticator.java":"ADD","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/LoginPage.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticationModule.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticatorTest.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/RealmAuthenticationTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImplTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/HttpHeadersAuthenticationTest.java":"ADD","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/GroupTester.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserMapper.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImpl.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImpl.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category5Suite.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/BaseIdentityProviderTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImplTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/OAuth2IdentityProviderTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/user\/UserDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserDao.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticator.java":[{"add":[],"delete":[]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/LoginPage.java":[{"add":["47","  public Navigation useBaseAuth() {","48","    Selenide.$(\".oauth-providers a\").click();","49","    return Selenide.page(Navigation.class);","50","  }","51",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticationModule.java":[{"add":["53","      HttpHeadersAuthenticator.class,"],"delete":["53","      SsoAuthenticator.class,"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticatorTest.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/RealmAuthenticationTest.java":[{"add":["24","import java.util.Collections;","35","import org.sonarqube.ws.UserGroups.Group;","36","import org.sonarqube.ws.Users;","38","import org.sonarqube.ws.client.users.ChangePasswordRequest;","41","import static java.util.Arrays.asList;","44","import static util.ItUtils.expectHttpError;","72","  public void synchronize_details_and_groups() {","74","    String username = tester.users().generateLogin();","76","    Group group = tester.groups().generate();","79","    updateUsersInExtAuth(ImmutableMap.of(","80","      username + \".password\", password,","81","      username + \".name\", \"Tester Testerovich\",","82","      username + \".email\", \"tester@example.org\",","83","      username + \".groups\", group.getName()));","84","","87","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(username)).getUsersList())","88","      .extracting(User::getLogin, User::getName, User::getEmail,","89","        User::getExternalIdentity, User::getExternalProvider, User::getLocal, u -> u.getGroups().getGroupsList())","90","      .containsExactlyInAnyOrder(tuple(username, \"Tester Testerovich\", \"tester@example.org\", username, \"sonarqube\", false, asList(group.getName(), \"sonar-users\")));","93","    Users.CreateWsResponse.User adminUser = tester.users().generateAdministrator();","94","    SystemInfoPage page = tester.openBrowser().logIn().submitCredentials(adminUser.getLogin()).openSystemInfo();","102","  public void update_details_by_default() {","104","    String username = tester.users().generateLogin();","108","    updateUsersInExtAuth(ImmutableMap.of(","109","      username + \".password\", password,","110","      username + \".name\", \"Tester Testerovich\",","111","      username + \".email\", \"tester@example.org\"));","112","","115","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(username)).getUsersList())","116","      .extracting(User::getLogin, User::getName, User::getEmail)","117","      .containsExactlyInAnyOrder(tuple(username, \"Tester Testerovich\", \"tester@example.org\"));","120","    updateUsersInExtAuth(ImmutableMap.of(","121","      username + \".password\", password,","122","      username + \".name\", \"Tester2 Testerovich\",","123","      username + \".email\", \"tester2@example.org\"));","124","","129","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(username)).getUsersList())","130","      .extracting(User::getLogin, User::getName, User::getEmail)","131","      .containsExactlyInAnyOrder(tuple(username, \"Tester2 Testerovich\", \"tester2@example.org\"));","138","  public void does_not_fallback() {","140","    String login = tester.users().generateLogin();","144","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", password));","149","    updateUsersInExtAuth(Collections.emptyMap());","158","  public void admin_is_local_account_by_default() {","165","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", remotePassword));","176","  public void create_new_users() {","178","    String username = tester.users().generateLogin();","186","    updateUsersInExtAuth(ImmutableMap.of(username + \".password\", password));","189","    verifyUser(username);","195","  public void reactivate_deleted_user() {","197","    Users.CreateWsResponse.User adminUser = tester.users().generateAdministrator();","200","    String login = tester.users().generateLogin();","202","    UsersManagementPage page = nav.logIn().submitCredentials(adminUser.getLogin()).openUsersManagement();","204","      .createUser(login)","206","      .getUser(login)","210","      .logIn().submitWrongCredentials(login, login)","215","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", password));","218","    verifyUser(login);","227","    String login = tester.users().generateLogin();","228","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", login));","229","    verifyAuthenticationIsOk(login, login);","232","    Users.CreateWsResponse.User techUser = tester.users().generate(u -> u.setPassword(\"old_password\"));","233","    verifyAuthenticationIsOk(techUser.getLogin(), \"old_password\");","236","    tester.users().service().changePassword(new ChangePasswordRequest().setLogin(techUser.getLogin()).setPassword(\"new_password\"));","237","    verifyAuthenticationIsOk(techUser.getLogin(), \"new_password\");","240","    expectHttpError(400, () -> tester.users().service().changePassword(new ChangePasswordRequest().setLogin(login).setPassword(\"new_password\")));","249","    String login = tester.users().generateLogin();","253","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", password));","256","    verifyUser(login);","282","    Users.CreateWsResponse.User user = tester.users().generate(u -> u.setName(\"Tester Testerovich\")","284","      .setPassword(null)","287","    verifyAuthenticationIsNotOk(user.getLogin(), \"123\");","290","      user.getLogin() + \".password\", \"123\",","291","      user.getLogin() + \".name\", \"Tester Testerovich\",","292","      user.getLogin() + \".email\", \"tester@example.org\"));","294","    verifyAuthenticationIsOk(user.getLogin(), \"123\");","295","    verifyUser(user.getLogin());","300","    Users.CreateWsResponse.User user = tester.users().generate();","301","    String username = tester.users().generateLogin();","303","","304","    updateUsersInExtAuth(ImmutableMap.of(","305","      username + \".password\", password,","306","      username + \".email\", user.getEmail()));","311","  @Test","312","  public void fail_to_authenticate_user_when_email_already_exists_on_several_users() {","313","    Users.CreateWsResponse.User user1 = tester.users().generate(u -> u.setEmail(\"user@email.com\"));","314","    Users.CreateWsResponse.User user2 = tester.users().generate(u -> u.setEmail(\"user@email.com\"));","315","    String username = tester.users().generateLogin();","316","    String password = \"123\";","318","    updateUsersInExtAuth(ImmutableMap.of(","319","      username + \".password\", password,","320","      username + \".email\", \"user@email.com\"));","321","","322","    verifyAuthenticationIsNotOk(username, password);","329","    tester.settings().setGlobalSettings(\"sonar.fakeauthenticator.users\", format(users));","345","    tester.as(login, password).wsClient().system().ping();","349","    expectHttpError(401, () -> tester.as(login, password).wsClient().system().ping());","352","  private void verifyUser(String login) {","353","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(login)).getUsersList())","354","      .extracting(User::getLogin, User::getExternalIdentity, User::getExternalProvider, User::getLocal)","355","      .containsExactlyInAnyOrder(tuple(login, login, \"sonarqube\", false));"],"delete":["23","import com.google.common.collect.Maps;","27","import org.junit.After;","28","import org.junit.Before;","33","import org.sonar.wsclient.Host;","34","import org.sonar.wsclient.Sonar;","35","import org.sonar.wsclient.base.HttpException;","36","import org.sonar.wsclient.connectors.HttpClient4Connector;","37","import org.sonar.wsclient.services.AuthenticationQuery;","38","import org.sonar.wsclient.user.UserParameters;","44","import org.sonarqube.ws.client.GetRequest;","45","import org.sonarqube.ws.client.WsResponse;","46","import org.sonarqube.ws.client.users.CreateRequest;","48","import util.user.UserRule;","50","import static java.net.HttpURLConnection.HTTP_OK;","51","import static java.net.HttpURLConnection.HTTP_UNAUTHORIZED;","54","import static org.junit.Assert.fail;","56","import static util.ItUtils.newUserWsClient;","58","import static util.ItUtils.resetSettings;","59","import static util.selenium.Selenese.runSelenese;","68","  private static final String TECH_USER = \"techUser\";","69","  private static final String USER_LOGIN = \"tester\";","70","  private static final String ADMIN_USER_LOGIN = \"admin-user\";","71","","75","  \/**","76","   * Property from security-plugin for user management.","77","   *\/","78","  private static final String USERS_PROPERTY = \"sonar.fakeauthenticator.users\";","79","","87","  public UserRule userRule = UserRule.from(orchestrator);","88","","89","  @Rule","92","  @Before","93","  @After","94","  public void resetData() {","95","    resetSettings(orchestrator, null, USERS_PROPERTY, \"sonar.security.updateUserAttributes\");","96","  }","97","","98","  @Before","99","  public void initAdminUser() {","100","    userRule.createAdminUser(ADMIN_USER_LOGIN, ADMIN_USER_LOGIN);","101","  }","102","","103","  @After","104","  public void deleteAdminUser() {","105","    userRule.resetUsers();","106","  }","107","","113","  public void shouldSynchronizeDetailsAndGroups() {","115","    String username = USER_LOGIN;","117","    Map<String, String> users = Maps.newHashMap();","120","    users.put(username + \".password\", password);","121","    users.put(username + \".name\", \"Tester Testerovich\");","122","    users.put(username + \".email\", \"tester@example.org\");","123","    users.put(username + \".groups\", \"sonar-user\");","124","    updateUsersInExtAuth(users);","127","    verifyUser();","128","","129","    \/\/ with external details and groups","130","    runSelenese(orchestrator, \"\/user\/ExternalAuthenticationTest\/external-user-details.html\");","133","    SystemInfoPage page = tester.openBrowser().logIn().submitCredentials(ADMIN_USER_LOGIN).openSystemInfo();","141","  public void shouldUpdateDetailsByDefault() {","143","    String username = USER_LOGIN;","145","    Map<String, String> users = Maps.newHashMap();","148","    users.put(username + \".password\", password);","149","    users.put(username + \".name\", \"Tester Testerovich\");","150","    users.put(username + \".email\", \"tester@example.org\");","151","    users.put(username + \".groups\", \"sonar-user\");","152","    updateUsersInExtAuth(users);","155","    verifyUser();","156","","157","    \/\/ with external details and groups","158","    \/\/ TODO replace by WS ? Or with new Selenese utils","159","    runSelenese(orchestrator, \"\/user\/ExternalAuthenticationTest\/external-user-details.html\");","162","    users.put(username + \".name\", \"Tester2 Testerovich\");","163","    users.put(username + \".email\", \"tester2@example.org\");","164","    updateUsersInExtAuth(users);","169","    runSelenese(orchestrator, \"\/user\/ExternalAuthenticationTest\/external-user-details2.html\");","176","  public void shouldNotFallback() {","178","    String login = USER_LOGIN;","180","    Map<String, String> users = Maps.newHashMap();","183","    users.put(login + \".password\", password);","184","    updateUsersInExtAuth(users);","189","    users.remove(login + \".password\");","190","    updateUsersInExtAuth(users);","199","  public void adminIsLocalAccountByDefault() {","204","    Map<String, String> users = Maps.newHashMap();","207","    users.put(login + \".password\", remotePassword);","208","    updateUsersInExtAuth(users);","219","  public void shouldCreateNewUsers() {","221","    String username = USER_LOGIN;","223","    Map<String, String> users = Maps.newHashMap();","230","    users.put(username + \".password\", password);","231","    updateUsersInExtAuth(users);","234","    verifyUser();","240","  public void shouldAutomaticallyReactivateDeletedUser() {","245","    UsersManagementPage page = nav.logIn().submitCredentials(ADMIN_USER_LOGIN).openUsersManagement();","247","      .createUser(USER_LOGIN)","249","      .getUser(USER_LOGIN)","253","      .logIn().submitWrongCredentials(USER_LOGIN, USER_LOGIN)","257","    String login = USER_LOGIN;","259","    Map<String, String> users = Maps.newHashMap();","260","    users.put(login + \".password\", password);","261","    updateUsersInExtAuth(users);","264","    verifyUser();","273","    updateUsersInExtAuth(ImmutableMap.of(USER_LOGIN + \".password\", USER_LOGIN));","274","    verifyAuthenticationIsOk(USER_LOGIN, USER_LOGIN);","277","    createUserInDb(TECH_USER, \"old_password\");","278","    assertThat(checkAuthenticationThroughWebService(TECH_USER, \"old_password\")).isTrue();","281","    updateUserPasswordInDb(TECH_USER, \"new_password\");","282","    assertThat(checkAuthenticationThroughWebService(TECH_USER, \"new_password\")).isTrue();","285","    try {","286","      updateUserPasswordInDb(USER_LOGIN, \"new_password\");","287","      fail();","288","    } catch (HttpException e) {","289","      verifyHttpException(e, 400);","290","    }","299","    String login = USER_LOGIN;","301","    Map<String, String> users = Maps.newHashMap();","304","    users.put(login + \".password\", password);","305","    updateUsersInExtAuth(users);","308","    verifyUser();","334","    tester.wsClient().users().create(new CreateRequest()","335","      .setLogin(USER_LOGIN)","336","      .setName(\"Tester Testerovich\")","340","    verifyAuthenticationIsNotOk(USER_LOGIN, \"123\");","343","      USER_LOGIN + \".password\", \"123\",","344","      USER_LOGIN + \".name\", \"Tester Testerovich\",","345","      USER_LOGIN + \".email\", \"tester@example.org\"));","347","    verifyAuthenticationIsOk(USER_LOGIN, \"123\");","348","    verifyUser();","353","    userRule.createUser(\"another\", \"Another\", \"tester@example.org\", \"another\");","354","","355","    String username = USER_LOGIN;","357","    Map<String, String> users = Maps.newHashMap();","358","    users.put(username + \".password\", password);","359","    users.put(username + \".name\", \"Tester Testerovich\");","360","    users.put(username + \".email\", \"tester@example.org\");","361","    users.put(username + \".groups\", \"sonar-user\");","362","    updateUsersInExtAuth(users);","367","  private void verifyHttpException(Exception e, int expectedCode) {","368","    assertThat(e).isInstanceOf(HttpException.class);","369","    HttpException exception = (HttpException) e;","370","    assertThat(exception.status()).isEqualTo(expectedCode);","371","  }","373","  private boolean checkAuthenticationThroughWebService(String login, String password) {","374","    return createWsClient(login, password).find(new AuthenticationQuery()).isValid();","381","    tester.settings().setGlobalSettings(USERS_PROPERTY, format(users));","382","  }","383","","384","  private void createUserInDb(String login, String password) {","385","    orchestrator.getServer().adminWsClient().userClient().create(UserParameters.create().login(login).name(login)","386","      .password(password).passwordConfirmation(password));","387","  }","388","","389","  private void updateUserPasswordInDb(String login, String newPassword) {","390","    orchestrator.getServer().adminWsClient().post(\"\/api\/users\/change_password\", \"login\", login, \"password\", newPassword);","391","  }","392","","393","  \/**","394","   * Utility method to create {@link Sonar} with specified {@code username} and {@code password}.","395","   * Orchestrator does not provide such method.","396","   *\/","397","  private Sonar createWsClient(String username, String password) {","398","    return new Sonar(new HttpClient4Connector(new Host(orchestrator.getServer().getUrl(), username, password)));","414","    assertThat(checkAuthenticationWithWebService(login, password).code()).isEqualTo(HTTP_OK);","418","    assertThat(checkAuthenticationWithWebService(login, password).code()).isEqualTo(HTTP_UNAUTHORIZED);","421","  private void verifyUser(){","422","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(USER_LOGIN)).getUsersList())","423","    .extracting(User::getLogin, User::getExternalIdentity, User::getExternalProvider, User::getLocal)","424","    .containsExactlyInAnyOrder(tuple(USER_LOGIN, USER_LOGIN, \"sonarqube\", false));","425","  }","426","","427","  private WsResponse checkAuthenticationWithWebService(String login, String password) {","428","    \/\/ Call any WS","429","    return newUserWsClient(orchestrator, login, password).wsConnector().call(new GetRequest(\"api\/rules\/search\"));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImplTest.java":[{"add":["279","    db.users().insertUser(u -> u.setEmail(\"john@email.com\"));","280","    Source source = Source.realm(AuthenticationEvent.Method.FORM, IDENTITY_PROVIDER.getName());","281","","282","    expectedException.expect(authenticationException().from(source)","283","      .withLogin(USER_IDENTITY.getLogin())","284","      .andPublicMessage(\"You can't sign up because email 'john@email.com' is already used by an existing user. \" +","285","        \"This means that you probably already registered with another account.\"));","286","    expectedException.expectMessage(\"Email 'john@email.com' is already used\");","287","","288","    underTest.authenticate(UserIdentityAuthenticatorParameters.builder()","289","      .setUserIdentity(USER_IDENTITY)","290","      .setProvider(IDENTITY_PROVIDER)","291","      .setSource(source)","292","      .setExistingEmailStrategy(FORBID)","293","      .setExistingEmailStrategy(ExistingEmailStrategy.FORBID)","294","      .setUpdateLoginStrategy(UpdateLoginStrategy.ALLOW)","295","      .build());","296","  }","297","","298","  @Test","299","  public void throw_AuthenticationException_when_authenticating_new_user_and_email_already_exists_multiple_times() {","300","    db.users().insertUser(u -> u.setEmail(\"john@email.com\"));","301","    db.users().insertUser(u -> u.setEmail(\"john@email.com\"));"],"delete":["279","    db.users().insertUser(newUserDto()","280","      .setLogin(\"Existing user with same email\")","281","      .setActive(true)","282","      .setEmail(\"john@email.com\"));"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/HttpHeadersAuthenticationTest.java":[{"add":[],"delete":[]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/GroupTester.java":[{"add":["72","  public GroupTester addMemberToGroups(@Nullable Organizations.Organization organization, String userLogin, String... groups) {","76","        .setOrganization(organization != null ? organization.getKey() : null)"],"delete":["72","  public GroupTester addMemberToGroups(Organizations.Organization organization, String userLogin, String... groups) {","76","        .setOrganization(organization.getKey())"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserMapper.java":[{"add":["59","  List<UserDto> selectByEmail(String email);"],"delete":["59","  @CheckForNull","60","  UserDto selectByEmail(String email);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImpl.java":[{"add":["30","  private final HttpHeadersAuthenticator httpHeadersAuthenticator;","32","  public AuthenticatorsImpl(JwtHttpHandler jwtHttpHandler, BasicAuthenticator basicAuthenticator, HttpHeadersAuthenticator httpHeadersAuthenticator) {","35","    this.httpHeadersAuthenticator = httpHeadersAuthenticator;","42","    Optional<UserDto> user = httpHeadersAuthenticator.authenticate(request, response);"],"delete":["30","  private final SsoAuthenticator ssoAuthenticator;","32","  public AuthenticatorsImpl(JwtHttpHandler jwtHttpHandler, BasicAuthenticator basicAuthenticator, SsoAuthenticator ssoAuthenticator) {","35","    this.ssoAuthenticator = ssoAuthenticator;","42","    Optional<UserDto> user = ssoAuthenticator.authenticate(request, response);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImpl.java":[{"add":["25","import java.util.List;","138","    List<UserDto> existingUsers = dbClient.userDao().selectByEmail(dbSession, email);","139","    if (existingUsers.isEmpty()) {","140","      return Optional.empty();","141","    }","142","    if (existingUsers.size() > 1) {","143","      throw generateExistingEmailError(authenticatorParameters, email);","144","    }","145","","146","    UserDto existingUser = existingUsers.get(0);","162","        throw generateExistingEmailError(authenticatorParameters, email);","268","  private static AuthenticationException generateExistingEmailError(UserIdentityAuthenticatorParameters authenticatorParameters, String email) {","269","    return AuthenticationException.newBuilder()","270","      .setSource(authenticatorParameters.getSource())","271","      .setLogin(authenticatorParameters.getUserIdentity().getLogin())","272","      .setMessage(format(\"Email '%s' is already used\", email))","273","      .setPublicMessage(format(","274","        \"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\",","275","        email))","276","      .build();","277","  }","278",""],"delete":["137","    UserDto existingUser = dbClient.userDao().selectByEmail(dbSession, email);","153","        throw AuthenticationException.newBuilder()","154","          .setSource(authenticatorParameters.getSource())","155","          .setLogin(authenticatorParameters.getUserIdentity().getLogin())","156","          .setMessage(format(\"Email '%s' is already used\", email))","157","          .setPublicMessage(format(","158","            \"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\",","159","            email))","160","          .build();"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category5Suite.java":[{"add":["39","import org.sonarqube.tests.user.HttpHeadersAuthenticationTest;","63","  HttpHeadersAuthenticationTest.class,"],"delete":["41","import org.sonarqube.tests.user.SsoAuthenticationTest;","63","  SsoAuthenticationTest.class,"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/BaseIdentityProviderTest.java":[{"add":["21","import com.codeborne.selenide.Condition;","42","import static com.codeborne.selenide.Selenide.$;","43","import static java.lang.String.format;","44","import static java.nio.charset.StandardCharsets.UTF_8;","45","import static org.apache.commons.io.FileUtils.readFileToString;","109","    tester.openBrowser()","110","      .logIn()","111","      .useBaseAuth();","113","    $(\"#bd\").shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"));","123","    tester.openBrowser()","124","      .logIn()","125","      .useBaseAuth();","127","    $(\"#bd\").shouldHave(Condition.text(","128","      format(\"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\", USER_EMAIL)));","129","    assertThat(readFileToString(ORCHESTRATOR.getServer().getWebLogs(), UTF_8))","134","  public void fail_to_authenticate_user_when_email_already_exists_on_several_users() {","135","    enablePlugin();","136","    setUserCreatedByAuthPlugin(USER_LOGIN, USER_PROVIDER_ID, USER_PROVIDER_LOGIN, USER_NAME, USER_EMAIL);","137","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","138","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","139","","140","    tester.openBrowser()","141","      .logIn()","142","      .useBaseAuth();","143","","144","    $(\"#bd\").shouldHave(Condition.text(","145","      format(\"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\", USER_EMAIL)));","146","    assertThat(tester.users().getByLogin(USER_LOGIN)).isNotPresent();","147","  }","148","","149","  @Test","155","    tester.openBrowser()","156","      .logIn()","157","      .useBaseAuth();","159","    $(\"#bd\")","160","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator.\"))","161","      .shouldHave(Condition.text(format(\"Reason: '%s' users are not allowed to sign up\", FAKE_PROVIDER_KEY)));","221","    tester.openBrowser()","222","      .logIn()","223","      .useBaseAuth();","225","    $(\"#bd\")","226","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"))","227","      .shouldHave(Condition.text(\"Reason: A functional error has happened\"));","228","    assertThat(readFileToString(ORCHESTRATOR.getServer().getWebLogs(), UTF_8))","229","      .doesNotContain(\"A functional error has happened\")","230","      .doesNotContain(\"UnauthorizedException\");"],"delete":["23","import java.io.File;","28","import org.apache.commons.io.FileUtils;","46","import static util.selenium.Selenese.runSelenese;","107","    runSelenese(ORCHESTRATOR, \"\/user\/BaseIdentityProviderTest\/display_unauthorized_page_when_authentication_failed.html\");","118","    runSelenese(ORCHESTRATOR, \"\/user\/BaseIdentityProviderTest\/fail_when_email_already_exists.html\");","120","    File logFile = ORCHESTRATOR.getServer().getWebLogs();","121","    assertThat(FileUtils.readFileToString(logFile))","131","    runSelenese(ORCHESTRATOR, \"\/user\/BaseIdentityProviderTest\/fail_to_authenticate_when_not_allowed_to_sign_up.html\");","192","    runSelenese(ORCHESTRATOR,","193","      \"\/user\/BaseIdentityProviderTest\/display_message_in_ui_but_not_in_log_when_unauthorized_exception.html\");","195","    File logFile = ORCHESTRATOR.getServer().getWebLogs();","196","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"A functional error has happened\");","197","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"UnauthorizedException\");","198",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImplTest.java":[{"add":["42","  private HttpHeadersAuthenticator httpHeadersAuthenticator = mock(HttpHeadersAuthenticator.class);","43","  private Authenticators underTest = new AuthenticatorsImpl(jwtHttpHandler, basicAuthenticator, httpHeadersAuthenticator);","47","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","57","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","69","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.of(user));","74","    verify(httpHeadersAuthenticator).authenticate(request, response);","82","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());"],"delete":["42","  private SsoAuthenticator ssoAuthenticator = mock(SsoAuthenticator.class);","43","  private Authenticators underTest = new AuthenticatorsImpl(jwtHttpHandler, basicAuthenticator, ssoAuthenticator);","47","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","57","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","69","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.of(user));","74","    verify(ssoAuthenticator).authenticate(request, response);","82","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/OAuth2IdentityProviderTest.java":[{"add":["40","import static java.lang.String.format;","41","import static java.nio.charset.StandardCharsets.UTF_8;","42","import static org.apache.commons.io.FileUtils.readFileToString;","139","    tester.openBrowser()","140","      .logIn()","141","      .useOAuth2();","143","    $(\"#bd\").shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"));","153","    tester.openBrowser()","154","      .logIn()","155","      .useOAuth2();","157","    $(\"#bd\")","158","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator.\"))","159","      .shouldHave(Condition.text(format(\"Reason: '%s' users are not allowed to sign up\", FAKE_PROVIDER_KEY)));","169","    tester.openBrowser()","170","      .logIn()","171","      .useOAuth2();","173","    $(\"#bd\")","174","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"))","175","      .shouldHave(Condition.text(\"Reason: A functional error has happened\"));","176","    assertThat(readFileToString(orchestrator.getServer().getWebLogs(), UTF_8))","177","      .doesNotContain(\"A functional error has happened\")","178","      .doesNotContain(\"UnauthorizedException\");","220","  public void fail_to_authenticate_user_when_email_already_exists_on_several_users() {","221","    simulateRedirectionToCallback();","222","    enablePlugin();","223","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","224","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","225","","226","    tester.openBrowser()","227","      .logIn()","228","      .useOAuth2();","229","","230","    $(\"#bd\").shouldHave(Condition.text(","231","      format(\"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\", USER_EMAIL)));","232","    assertThatUserDoesNotExist(USER_LOGIN);","233","  }","234","","235","  @Test"],"delete":["23","import java.io.File;","27","import org.apache.commons.io.FileUtils;","39","import util.selenium.Selenese;","139","    Selenese.runSelenese(orchestrator, \"\/user\/OAuth2IdentityProviderTest\/display_unauthorized_page_when_authentication_failed.html\");","150","    Selenese.runSelenese(orchestrator, \"\/user\/OAuth2IdentityProviderTest\/fail_to_authenticate_when_not_allowed_to_sign_up.html\");","161","    Selenese.runSelenese(orchestrator, \"\/user\/OAuth2IdentityProviderTest\/display_message_in_ui_but_not_in_log_when_unauthorized_exception.html\");","163","    File logFile = orchestrator.getServer().getWebLogs();","164","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"A functional error has happened\");","165","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"UnauthorizedException\");","166",""]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/user\/UserDaoTest.java":[{"add":["587","    UserDto activeUser1 = db.users().insertUser(u -> u.setEmail(\"user1@email.com\"));","588","    UserDto activeUser2 = db.users().insertUser(u -> u.setEmail(\"user1@email.com\"));","591","    assertThat(underTest.selectByEmail(session, \"user1@email.com\")).hasSize(2);","592","    assertThat(underTest.selectByEmail(session, disableUser.getEmail())).isEmpty();","593","    assertThat(underTest.selectByEmail(session, \"unknown\")).isEmpty();"],"delete":["587","    UserDto activeUser = db.users().insertUser();","590","    assertThat(underTest.selectByEmail(session, activeUser.getEmail())).isNotNull();","591","    assertThat(underTest.selectByEmail(session, disableUser.getEmail())).isNull();","592","    assertThat(underTest.selectByEmail(session, \"unknown\")).isNull();"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserDao.java":[{"add":["39","import static java.util.Locale.ENGLISH;","42","import static org.sonar.db.user.UserDto.SCM_ACCOUNTS_SEPARATOR;","156","      .append(SCM_ACCOUNTS_SEPARATOR).append(scmAccountOrLoginOrEmail)","157","      .append(SCM_ACCOUNTS_SEPARATOR).append(\"%\").toString();","162","   * Search for an active user with the given emailCaseInsensitive exits in database","164","   * Select is case insensitive. Result for searching 'mail@emailCaseInsensitive.com' or 'Mail@Email.com' is the same","166","  public List<UserDto> selectByEmail(DbSession dbSession, String emailCaseInsensitive) {","167","    return mapper(dbSession).selectByEmail(emailCaseInsensitive.toLowerCase(ENGLISH));"],"delete":["24","import java.util.Locale;","48","","156","      .append(UserDto.SCM_ACCOUNTS_SEPARATOR).append(scmAccountOrLoginOrEmail)","157","      .append(UserDto.SCM_ACCOUNTS_SEPARATOR).append(\"%\").toString();","162","   * Search for an active user with the given email exits in database","164","   * Please note that email is case insensitive, result for searching 'mail@email.com' or 'Mail@Email.com' will be the same","166","  @CheckForNull","167","  public UserDto selectByEmail(DbSession dbSession, String email) {","168","    return mapper(dbSession).selectByEmail(email.toLowerCase(Locale.ENGLISH));"]}]}},"11321c380539992f43101e2690e53baa2340efa9":{"changes":{"\/dev\/null":"DELETE","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStepTest.java":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStep.java":[{"add":["99","    NewCoverageFormula() {","109","    NewBranchCoverageFormula() {","117","    NewLineCoverageFormula() {","133","    public static Iterable<Formula<NewCoverageCounter>> from(NewLinesRepository newLinesRepository, BatchReportReader reportReader) {","151","    private static int computeValueForMetric(NewCoverageCounter counter, Metric metric) {","186","    NewCoverageCounter(NewLinesRepository newLinesRepository, BatchReportReader reportReader) {"],"delete":["27","import javax.annotation.Nullable;","38","import org.sonar.ce.task.projectanalysis.formula.VariationSumFormula;","74","  @Nullable","76","  @Nullable","79","  \/**","80","   * Constructor used when processing a Report (ie. a {@link NewLinesRepository} instance is available in the container)","81","   *\/","91","  \/**","92","   * Constructor used when processing Views (ie. no {@link NewLinesRepository} instance is available in the container)","93","   *\/","94","  public NewCoverageMeasuresStep(TreeRootHolder treeRootHolder, MeasureRepository measureRepository, MetricRepository metricRepository) {","95","    this.treeRootHolder = treeRootHolder;","96","    this.metricRepository = metricRepository;","97","    this.measureRepository = measureRepository;","98","    this.newLinesRepository = null;","99","    this.reportReader = null;","100","  }","101","","117","    public NewCoverageFormula() {","127","    public NewBranchCoverageFormula() {","135","    public NewLineCoverageFormula() {","145","    private static final Iterable<Formula<?>> VIEWS_FORMULAS = variationSumFormulas();","152","    public static Iterable<Formula<?>> from(@Nullable NewLinesRepository newLinesRepository, @Nullable BatchReportReader reportReader) {","153","      if (newLinesRepository == null || reportReader == null) {","154","        return VIEWS_FORMULAS;","155","      }","159","    private static Iterable<Formula<?>> variationSumFormulas() {","160","      return ImmutableList.of(","161","        new VariationSumFormula(NEW_LINES_TO_COVER_KEY),","162","        new VariationSumFormula(NEW_UNCOVERED_LINES_KEY),","163","        new VariationSumFormula(NEW_CONDITIONS_TO_COVER_KEY),","164","        new VariationSumFormula(NEW_UNCOVERED_CONDITIONS_KEY));","165","    }","166","","181","    private int computeValueForMetric(NewCoverageCounter counter, Metric metric) {","216","    public NewCoverageCounter(NewLinesRepository newLinesRepository, BatchReportReader reportReader) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStepTest.java":[{"add":[],"delete":[]}]}},"78ac82da528beca83055beba26e9d96aec79d80e":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityOnApplication.json":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/securityreport\/ws\/ShowAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest.java":[{"add":["22","import java.util.List;","36","import org.sonar.db.component.ComponentDbTester;","56","import org.sonar.server.view.index.ViewDoc;","57","import org.sonar.server.view.index.ViewIndexer;","83","  private ComponentDbTester componentDbTester = db.components();","87","  private ViewIndexer viewIndexer = new ViewIndexer(db.getDbClient(), es.client());","105","    project = componentDbTester.insertComponent(ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization(), \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","140","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","169","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","204","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","240","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","322","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","358","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","390","  @Test","391","  public void dont_return_rules_on_application() {","392","    ComponentDto application = db.components().insertPrivateApplication(db.getDefaultOrganization());","393","    indexView(application.uuid(), singletonList(project.uuid()));","394","    userSessionRule.addProjectPermission(UserRole.USER, application);","395","    indexPermissions();","396","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","397","    IssueDto issue1 = newIssue(rule1, project, file)","398","      .setStatus(\"OPEN\")","399","      .setSeverity(\"MAJOR\")","400","      .setType(RuleType.VULNERABILITY);","401","    IssueDto issue2 = newIssue(rule1, project, file)","402","      .setStatus(\"OPEN\")","403","      .setSeverity(\"MAJOR\")","404","      .setType(RuleType.SECURITY_HOTSPOT);","405","    IssueDto issue3 = newIssue(rule1, project, file)","406","      .setStatus(Issue.STATUS_RESOLVED)","407","      .setResolution(Issue.RESOLUTION_FIXED)","408","      .setSeverity(\"MAJOR\")","409","      .setType(RuleType.SECURITY_HOTSPOT);","410","    IssueDto issue4 = newIssue(rule1, project, file)","411","      .setStatus(Issue.STATUS_RESOLVED)","412","      .setResolution(Issue.RESOLUTION_WONT_FIX)","413","      .setSeverity(\"MAJOR\")","414","      .setType(RuleType.SECURITY_HOTSPOT);","415","    dbClient.issueDao().insert(session, issue1, issue2, issue3, issue4);","416","    session.commit();","417","    indexIssues();","418","","419","    assertJson(ws.newRequest()","420","      .setParam(\"standard\", \"sonarsourceSecurity\")","421","      .setParam(\"project\", application.getKey())","422","      .setParam(\"includeDistribution\", \"true\")","423","      .execute().getInput())","424","      .withStrictArrayOrder()","425","      .isSimilarTo(this.getClass().getResource(\"ShowActionTest\/sonarsourceSecurityOnApplication.json\"));","426","  }","427","","445","  private void indexView(String viewUuid, List<String> projects) {","446","    viewIndexer.index(new ViewDoc().setUuid(viewUuid).setProjects(projects));","447","  }","448",""],"delete":["99","    project = insertComponent(ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization(), \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","134","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","163","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","198","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","234","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","316","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","352","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","406","  private ComponentDto insertComponent(ComponentDto component) {","407","    dbClient.componentDao().insert(session, component);","408","    session.commit();","409","    return component;","410","  }"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityOnApplication.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/securityreport\/ws\/ShowAction.java":[{"add":["42","import org.sonar.server.security.SecurityStandardHelper;","134","    List<SecurityStandardCategoryStatistics> statistics;","137","        statistics = issueIndex.getOwaspTop10Report(projectDto.uuid(), isViewOrApp, includeCwe)","143","        statistics = issueIndex.getSansTop25Report(projectDto.uuid(), isViewOrApp, includeCwe);","146","        statistics = issueIndex.getSonarSourceReport(projectDto.uuid(), isViewOrApp, includeCwe);","151","    if (!isViewOrApp) {","152","      \/\/ App and Portfolios don't have a quality profile","153","      completeRulesStatistics(statistics, projectDto, standard, includeCwe);","154","    }","155","    writeResponse(request, response, statistics, isViewOrApp);","158","  private void completeRulesStatistics(List<SecurityStandardCategoryStatistics> input, ComponentDto project, String standard, boolean includeCwe) {","241","  private static void writeResponse(Request request, Response response, List<SecurityStandardCategoryStatistics> categories, boolean isViewOrApp) {","252","        .setWontFixSecurityHotspots(cat.getWontFixSecurityHotspots());","253","      if (!isViewOrApp) {","254","        catBuilder.setTotalRules(cat.getTotalRules())","255","          .setActiveRules(cat.getActiveRules());","256","      }","269","              .setWontFixSecurityHotspots(cwe.getWontFixSecurityHotspots());","270","            if (!isViewOrApp) {","271","              cweBuilder.setActiveRules(cwe.getActiveRules())","272","                .setTotalRules(cwe.getTotalRules());","273","            }"],"delete":["40","import org.sonar.server.security.SecurityStandardHelper;","136","        List<SecurityStandardCategoryStatistics> owaspCategories = issueIndex.getOwaspTop10Report(projectDto.uuid(), isViewOrApp, includeCwe)","140","        completeStatistics(owaspCategories, projectDto, standard, includeCwe);","141","        writeResponse(request, response, owaspCategories);","144","        List<SecurityStandardCategoryStatistics> sansTop25Report = issueIndex.getSansTop25Report(projectDto.uuid(), isViewOrApp, includeCwe);","145","        completeStatistics(sansTop25Report, projectDto, standard, includeCwe);","146","        writeResponse(request, response, sansTop25Report);","149","        List<SecurityStandardCategoryStatistics> sonarSourceReport = issueIndex.getSonarSourceReport(projectDto.uuid(), isViewOrApp, includeCwe);","150","        completeStatistics(sonarSourceReport, projectDto, standard, includeCwe);","151","        writeResponse(request, response, sonarSourceReport);","158","  private void completeStatistics(List<SecurityStandardCategoryStatistics> input, ComponentDto project, String standard, boolean includeCwe) {","241","  private static void writeResponse(Request request, Response response, List<SecurityStandardCategoryStatistics> categories) {","252","        .setWontFixSecurityHotspots(cat.getWontFixSecurityHotspots())","253","        .setTotalRules(cat.getTotalRules())","254","        .setActiveRules(cat.getActiveRules());","267","              .setWontFixSecurityHotspots(cwe.getWontFixSecurityHotspots())","268","              .setActiveRules(cwe.getActiveRules())","269","              .setTotalRules(cwe.getTotalRules());"]}]}},"97a5d22de4b91ead6a8d09931d176f5fe26c840d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["930","    const { issues, openIssue, paging, loading } = this.state;","939","    if (paging.total === 0 && !loading) {"],"delete":["930","    const { issues, openIssue, paging } = this.state;","939","    if (paging.total === 0) {"]}]}},"899f67cdb2937a8d209be318ef7caa2a2fdc0cf6":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImpl.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v70\/DeletePersonAndFileMeasures.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/Upsert.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChangeTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImplTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/UpdateOrgQProfilesToPointToBuiltInProfiles.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v56\/PopulateInitialSchema.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/SetRulesProfilesIsBuiltInToTrueForDefaultOrganization.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":[{"add":["74","  public Upsert update(String sql) throws SQLException {","75","    UpsertImpl upsert = UpsertImpl.create(writeConnection, sql);","76","    this.updates.add(upsert);","77","    return upsert;"],"delete":["74","  public MassUpdate update(String sql) throws SQLException {","75","    this.updates.add(UpsertImpl.create(writeConnection, sql));","76","    return this;"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImpl.java":[{"add":["25","import static com.google.common.base.Preconditions.checkArgument;","26","","31","  private int maxBatchSize = MAX_BATCH_SIZE;","39","  public Upsert setBatchSize(int i) {","40","    checkArgument(i >= 0, \"size must be positive. Got %s\", i);","41","    this.maxBatchSize = i;","42","    return this;","43","  }","44","","45","  public int getMaxBatchSize() {","46","    return maxBatchSize;","47","  }","48","","49","  @Override","50","  public boolean addBatch() throws SQLException {","54","    if (batchCount % maxBatchSize == 0L) {","57","      return true;","59","    return false;"],"delete":["36","  public Upsert addBatch() throws SQLException {","40","    if (batchCount % MAX_BATCH_SIZE == 0L) {","44","    return this;"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v70\/DeletePersonAndFileMeasures.java":[{"add":["51","    massUpdate.update(getDeleteSql()).setBatchSize(1);"],"delete":["51","    massUpdate.update(getDeleteSql());"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/Upsert.java":[{"add":["27","  \/**","28","   * Prepare for next statement.","29","   * @return {@code true} if the buffer of batched requests has been sent and transaction","30","   * has been committed, else {@code false}.","31","   *\/","32","  boolean addBatch() throws SQLException;","37","","38","  \/**","39","   * Number of requests required before sending group of batched","40","   * requests and before committing. Default value is {@link UpsertImpl#MAX_BATCH_SIZE}","41","   *\/","42","  Upsert setBatchSize(int i);"],"delete":["27","  Upsert addBatch() throws SQLException;"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChangeTest.java":[{"add":["206","  public void batch_inserts() throws Exception {","213","        boolean committed = upsert","220","        assertThat(committed).isFalse();","221","","222","        committed = upsert","229","        assertThat(committed).isFalse();","230","","239","  public void override_size_of_batch_inserts() throws Exception {","240","    new DataChange(db.database()) {","241","      @Override","242","      public void execute(Context context) throws SQLException {","243","        Upsert upsert = context.prepareUpsert(\"insert into persons(id,login,age,enabled,coeff) values (?,?,?,?,?)\")","244","          .setBatchSize(3);","245","        long id = 100L;","246","        assertThat(addBatchInsert(upsert, id++)).isFalse();","247","        assertThat(addBatchInsert(upsert, id++)).isFalse();","248","        assertThat(addBatchInsert(upsert, id++)).isTrue();","249","        assertThat(addBatchInsert(upsert, id++)).isFalse();","250","        assertThat(addBatchInsert(upsert, id++)).isFalse();","251","        assertThat(addBatchInsert(upsert, id++)).isTrue();","252","        assertThat(addBatchInsert(upsert, id)).isFalse();","253","        upsert.execute().commit().close();","254","      }","255","    }.execute();","256","    assertThat(db.countRowsOfTable(\"persons\")).isEqualTo(7);","257","  }","258","","259","  private boolean addBatchInsert(Upsert upsert, long id) throws SQLException {","260","    return upsert","261","      .setLong(1, id)","262","      .setString(2, \"kurt\")","263","      .setInt(3, 27)","264","      .setBoolean(4, true)","265","      .setDouble(5, 2.2)","266","      .addBatch();","267","  }","268","","269","  @Test"],"delete":["36","","207","  public void batch_insert() throws Exception {","214","        upsert","221","        upsert"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/UpdateOrgQProfilesToPointToBuiltInProfiles.java":[{"add":["61","      \"where uuid=?\");","62","","63","    massUpdate.execute((row, update) -> {"],"delete":["61","      \"where uuid=?\")","62","      .execute((row, update) -> {"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v56\/PopulateInitialSchema.java":[{"add":["26","import org.sonar.server.platform.db.migration.step.Upsert;","54","    Upsert upsert = context.prepareUpsert(\"insert into groups (name, description, created_at, updated_at) values (?, ?, ?, ?)\");","55","    upsert.setString(1, ADMINS_GROUP)","59","      .addBatch();","60","    upsert.setString(1, USERS_GROUP)","64","      .addBatch();","65","    upsert","74","    Upsert upsert = context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values ((select id from groups where name='\" + ADMINS_GROUP + \"'), null, ?)\");","75","    upsert.setString(1, \"admin\").addBatch();","76","    upsert.setString(1, \"profileadmin\").addBatch();","77","    upsert.setString(1, \"gateadmin\").addBatch();","78","    upsert.setString(1, \"shareDashboard\").addBatch();","79","    upsert.setString(1, \"provisioning\").addBatch();","80","    upsert","85","    upsert = context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values (null, null, ?)\");","86","    upsert.setString(1, \"scan\").addBatch();","87","    upsert.setString(1, \"provisioning\").addBatch();","88","    upsert","112","    Upsert upsert = context.prepareUpsert(\"insert into groups_users (user_id, group_id) values \" +","113","      \"((select id from users where login='\" + ADMIN_USER + \"'), (select id from groups where name=?))\");","114","    upsert.setString(1, ADMINS_GROUP).addBatch();","115","    upsert.setString(1, USERS_GROUP).addBatch();","116","    upsert"],"delete":["53","    context.prepareUpsert(\"insert into groups (name, description, created_at, updated_at) values (?, ?, ?, ?)\")","54","      .setString(1, ADMINS_GROUP)","58","      .addBatch()","59","      .setString(1, USERS_GROUP)","63","      .addBatch()","72","    context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values ((select id from groups where name='\" + ADMINS_GROUP + \"'), null, ?)\")","73","      .setString(1, \"admin\").addBatch()","74","      .setString(1, \"profileadmin\").addBatch()","75","      .setString(1, \"gateadmin\").addBatch()","76","      .setString(1, \"shareDashboard\").addBatch()","77","      .setString(1, \"provisioning\").addBatch()","82","    context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values (null, null, ?)\")","83","      .setString(1, \"scan\").addBatch()","84","      .setString(1, \"provisioning\").addBatch()","108","    context.prepareUpsert(\"insert into groups_users (user_id, group_id) values \" +","109","      \"((select id from users where login='\" + ADMIN_USER + \"'), (select id from groups where name=?))\")","110","      .setString(1, ADMINS_GROUP).addBatch()","111","      .setString(1, USERS_GROUP).addBatch()"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/SetRulesProfilesIsBuiltInToTrueForDefaultOrganization.java":[{"add":["54","      \"where kee=?\");","55","    massUpdate.execute((row, update) -> {"],"delete":["52","","55","      \"where kee=?\").execute((row, update) -> {"]}]}},"c345192e089434be630c4b52579388a6e517c9b9":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/TreeAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponentTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ShowAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponent.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/tree-example.json":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/TreeAction.java":[{"add":["31","import java.util.Optional;","60","import static java.util.Optional.ofNullable;","245","      Optional<ProjectDto> parentProject = dbClient.projectDao().selectByUuid(dbSession,","246","        ofNullable(component.getMainBranchProjectUuid()).orElse(component.projectUuid()));","247","      wsComponent = componentDtoToWsComponent(component, parentProject.orElse(null), organizationDto, null);"],"delete":["243","      wsComponent = componentDtoToWsComponent(component, organizationDto, null);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponentTest.java":[{"add":["24","import org.sonar.db.component.BranchType;","29","import org.sonar.db.project.ProjectDto;","32","import static org.sonar.server.component.ws.ComponentDtoToWsComponent.projectOrAppToWsComponent;","42","","43","    ProjectDto parentProjectDto = ComponentTesting.createPrivateProjectDto(organizationDto1);","44","    ComponentDto componentDto = ComponentTesting.newBranchComponent(parentProjectDto,","45","      ComponentTesting.newBranchDto(parentProjectDto.getUuid(), BranchType.BRANCH));","51","    componentDtoToWsComponent(componentDto, parentProjectDto, organizationDto2, null);","52","  }","53","","54","  @Test","55","  public void projectOrAppToWsComponent_throws_IAE_if_organization_uuid_of_component_does_not_match_organizationDto_uuid() {","56","    OrganizationDto organizationDto1 = OrganizationTesting.newOrganizationDto();","57","    OrganizationDto organizationDto2 = OrganizationTesting.newOrganizationDto();","58","    ProjectDto projectDto = ComponentTesting.createPrivateProjectDto(organizationDto1);","59","","60","    expectedException.expect(IllegalArgumentException.class);","61","    expectedException.expectMessage(\"OrganizationUuid (\" + organizationDto1.getUuid() + \") of ComponentDto to convert \" +","62","      \"to Ws Component is not the same as the one (\" + organizationDto2.getUuid() + \") of the specified OrganizationDto\");","63","","64","    projectOrAppToWsComponent(projectDto, organizationDto2, null);"],"delete":["21","import java.util.Optional;","40","    ComponentDto componentDto = ComponentTesting.newPrivateProjectDto(organizationDto1);","46","    componentDtoToWsComponent(componentDto, organizationDto2, null);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ShowAction.java":[{"add":["44","import static java.util.Optional.ofNullable;","150","      Optional<ProjectDto> parentProject = dbClient.projectDao().selectByUuid(dbSession,","151","        ofNullable(component.getMainBranchProjectUuid()).orElse(component.projectUuid()));","152","      return componentDtoToWsComponent(component, parentProject.orElse(null), organizationDto, lastAnalysis);"],"delete":["149","      return componentDtoToWsComponent(component, organizationDto, lastAnalysis);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponent.java":[{"add":["79","  static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, @Nullable ProjectDto parentProjectDto, OrganizationDto organizationDto,","80","    @Nullable SnapshotDto lastAnalysis) {","85","    return componentDtoToWsComponent(dto, parentProjectDto, organizationDto.getKey(), lastAnalysis);","88","  private static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, @Nullable ProjectDto parentProjectDto, String organizationDtoKey,","89","    @Nullable SnapshotDto lastAnalysis) {","108","      if (Qualifiers.PROJECT.equals(dto.qualifier()) && dto.getBranch() != null && parentProjectDto != null) {","109","        wsComponent.getTagsBuilder().addAllTags(parentProjectDto.getTags());","110","      }"],"delete":["79","  static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, OrganizationDto organizationDto, @Nullable SnapshotDto lastAnalysis) {","84","    return componentDtoToWsComponent(dto, organizationDto.getKey(), lastAnalysis);","87","  private static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, String organizationDtoKey, @Nullable SnapshotDto lastAnalysis) {"]}],"server\/sonar-webserver-webapi\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/tree-example.json":[{"add":["9","    \"description\": \"MY_PROJECT_DESCRIPTION\",","11","    \"tags\": [","12","      \"abc\",","13","      \"def\"","14","    ],"],"delete":["9","    \"description\": \"DESCRIPTION_MY_PROJECT_ID\",","11","    \"tags\": [],"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":[{"add":["58","import static org.mockito.Mockito.mock;","90","  private WsActionTester ws = new WsActionTester(new TreeAction(dbClient, new ComponentFinder(dbClient, resourceTypes), resourceTypes, userSession,","91","    mock(I18n.class)));","165","    db.components().insertProjectAndSnapshot(project);","532","    ComponentDto project = db.components().insertPrivateProject(organizationDto,","533","      c -> c.setUuid(\"MY_PROJECT_ID\")","534","        .setDescription(\"MY_PROJECT_DESCRIPTION\")","535","        .setDbKey(\"MY_PROJECT_KEY\")","536","        .setName(\"Project Name\")","537","        .setProjectUuid(\"MY_PROJECT_ID\"),","538","      p -> p.setTagsString(\"abc,def\"));","539","    db.components().insertSnapshot(project);","540",""],"delete":["33","import org.mockito.Mockito;","45","import org.sonar.db.component.SnapshotDto;","91","  private WsActionTester ws = new WsActionTester(new TreeAction(dbClient, new ComponentFinder(dbClient, resourceTypes), resourceTypes, userSession, Mockito.mock(I18n.class)));","165","    SnapshotDto projectSnapshot = db.components().insertProjectAndSnapshot(project);","532","    ComponentDto project = newPrivateProjectDto(organizationDto, \"MY_PROJECT_ID\")","533","      .setDbKey(\"MY_PROJECT_KEY\")","534","      .setName(\"Project Name\");","535","    db.components().insertProjectAndSnapshot(project);"]}]}},"03924a62688e3e4510ff0f81e7fa463609fb6fdb":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/request.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/request.js":[{"add":["40","  \/\/ Fetch API in Edge doesn't work with empty header,","41","  \/\/ so we ensure non-empty value","42","  const value = getCSRFTokenValue();","43","  return value ? { [getCSRFTokenName()]: value } : {};"],"delete":["40","  return { [getCSRFTokenName()]: getCSRFTokenValue() };"]}]}},"0caa8ba6650b2ecc7538c3bbc6443e69069bc3e1":{"changes":{"sonar-scanner-engine\/src\/test\/resources\/mediumtest\/blameAuthor.txt":"ADD","\/dev\/null":"DELETE","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/DefaultBlameOutput.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/scm\/ScmMediumTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/resources\/mediumtest\/blameAuthor.txt":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/DefaultBlameOutput.java":[{"add":["114","    return inputString.toLowerCase();"],"delete":["22","import java.text.Normalizer;","29","import java.util.regex.Pattern;","47","  private static final Pattern NON_ASCII_CHARS = Pattern.compile(\"[^\\\\x00-\\\\x7F]\");","48","  private static final Pattern ACCENT_CODES = Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");","49","","119","    String lowerCasedString = inputString.toLowerCase();","120","    String stringWithoutAccents = removeAccents(lowerCasedString);","121","    return removeNonAsciiCharacters(stringWithoutAccents);","122","  }","123","","124","  private static String removeAccents(String inputString) {","125","    String unicodeDecomposedString = Normalizer.normalize(inputString, Normalizer.Form.NFD);","126","    return ACCENT_CODES.matcher(unicodeDecomposedString).replaceAll(\"\");","127","  }","128","","129","  private static String removeNonAsciiCharacters(String inputString) {","130","    return NON_ASCII_CHARS.matcher(inputString).replaceAll(\"_\");"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/scm\/ScmMediumTest.java":[{"add":["24","import java.net.URISyntaxException;","25","import java.nio.charset.StandardCharsets;","26","","29","import org.assertj.core.util.Files;","91","  public void testScmMeasure() throws IOException, URISyntaxException {","115","    assertThat(changesetLine2.getAuthor()).isEqualTo(getNonAsciiAuthor().toLowerCase());","143","  public void noScmOnEmptyFile() throws IOException, URISyntaxException {","169","  public void log_files_with_missing_blame() throws IOException, URISyntaxException {","200","  public void optimize_blame() throws IOException, URISyntaxException {","258","  public void forceReload() throws IOException, URISyntaxException {","293","  public void configureUsingScmURL() throws IOException, URISyntaxException {","315","  public void testAutoDetection() throws IOException, URISyntaxException {","336","  private String getNonAsciiAuthor() throws URISyntaxException {","337","    return Files.contentOf(new File(this.getClass().getResource(\"\/mediumtest\/blameAuthor.txt\").toURI()), StandardCharsets.UTF_8);","338","","339","  }","340","","341","  private File prepareProject() throws IOException, URISyntaxException {","352","        \"2,\" + getNonAsciiAuthor() + \",2013-01-04\\n\" +","355","        \"4,simon,2013-03-04\\n\",","356","      StandardCharsets.UTF_8);","362","  public void testDisableScmSensor() throws IOException, URISyntaxException {"],"delete":["87","  public void testScmMeasure() throws IOException {","111","    assertThat(changesetLine2.getAuthor()).isEqualTo(\"julien\");","139","  public void noScmOnEmptyFile() throws IOException {","165","  public void log_files_with_missing_blame() throws IOException {","196","  public void optimize_blame() throws IOException {","254","  public void forceReload() throws IOException {","289","  public void configureUsingScmURL() throws IOException {","311","  public void testAutoDetection() throws IOException {","332","  private File prepareProject() throws IOException {","343","        \"2,julien,2013-01-04\\n\" +","346","        \"4,simon,2013-03-04\\n\");","352","  public void testDisableScmSensor() throws IOException {"]}]}},"190f2755be5186d7a410a5847242a67d6b4bd22c":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/utils\/getHistory.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/utils\/getHistory.ts":[{"add":["27","    basename: (window as any).baseUrl"],"delete":["27","    basename: (window as any).baseUrl + '\/'"]}]}},"436296b4cdf93e71a6195ab116853504202cab08":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/Statistics-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/measures-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/Statistics.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/measures.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/__snapshots__\/Statistics-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/Statistics-test.tsx":[{"add":["20","import { shallow, ShallowWrapper } from 'enzyme';","23","const STATISTICS = { icon: 'stat-icon', text: 'my stat', value: 26666 };","30","  expect(shallowRender()).toMatchSnapshot();","32","","33","it('should render big numbers correctly', () => {","34","  function checkCountUp(wrapper: ShallowWrapper, end: number, suffix: string) {","35","    expect(wrapper.find('CountUp').prop('end')).toBe(end);","36","    expect(wrapper.find('CountUp').prop('suffix')).toBe(suffix);","37","  }","38","","39","  checkCountUp(","40","    shallowRender({ statistic: { ...STATISTICS, value: 999003632 } }),","41","    999,","42","    'short_number_suffix.m'","43","  );","44","  checkCountUp(","45","    shallowRender({ statistic: { ...STATISTICS, value: 999861538 } }),","46","    999,","47","    'short_number_suffix.m'","48","  );","49","  checkCountUp(shallowRender({ statistic: { ...STATISTICS, value: 1100021731 } }), 1.1, ' billion');","50","});","51","","52","function shallowRender(props: Partial<StatisticCard['props']> = {}) {","53","  const wrapper = shallow(<StatisticCard statistic={STATISTICS} {...props} \/>);","54","  wrapper.setState({ viewable: true });","55","  return wrapper;","56","}"],"delete":["20","import { shallow } from 'enzyme';","23","const STATISTICS = {","24","  icon: 'stat-icon',","25","  text: 'my stat',","26","  value: 26666","27","};","34","  expect(shallow(<StatisticCard statistic={STATISTICS} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/measures-test.ts":[{"add":["62","    expect(formatMeasure(9467890, 'SHORT_INT')).toBe('9.5M');","63","    expect(formatMeasure(994567890, 'SHORT_INT')).toBe('995M');","64","    expect(formatMeasure(999000001, 'SHORT_INT')).toBe('999M');","65","    expect(formatMeasure(999567890, 'SHORT_INT')).toBe('1G');","66","    expect(formatMeasure(1234567890, 'SHORT_INT')).toBe('1.2G');","67","    expect(formatMeasure(11234567890, 'SHORT_INT')).toBe('11G');","137","    expect(formatMeasure(1234567 * ONE_DAY, 'SHORT_WORK_DUR')).toBe('1.2Md');","138","    expect(formatMeasure(12345670 * ONE_DAY + 4 * ONE_HOUR, 'SHORT_WORK_DUR')).toBe('12Md');"],"delete":["62","    expect(formatMeasure(1234567890, 'SHORT_INT')).toBe('1G');","132","    expect(formatMeasure(1234567 * ONE_DAY, 'SHORT_WORK_DUR')).toBe('1Md');","133","    expect(formatMeasure(1234567 * ONE_DAY + 2 * ONE_HOUR, 'SHORT_WORK_DUR')).toBe('1Md');"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/Statistics.tsx":[{"add":["23","import { translate } from '..\/..\/..\/..\/helpers\/l10n';","86","    const formattedString = formatMeasure(statistic.value, 'SHORT_INT', {","87","      roundingFunc: Math.floor","88","    });","89","    const value = parseFloat(formattedString);","90","    let suffix = formattedString.replace(value.toString(), '');","91","    if (suffix === translate('short_number_suffix.g')) {","92","      suffix = ' ' + translate('billion');","93","    }"],"delete":["85","    const formattedString = formatMeasure(statistic.value, 'SHORT_INT');","86","    const value = parseFloat(formattedString.slice(0, -1));","87","    const suffix = formattedString.substr(-1);"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["20","billion=Billion"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/measures.ts":[{"add":["132","const shortIntFormats = [","133","  { unit: 1e10, formatUnit: 1e9, fraction: 0, suffix: 'short_number_suffix.g' },","134","  { unit: 1e9, formatUnit: 1e9, fraction: 1, suffix: 'short_number_suffix.g' },","135","  { unit: 1e7, formatUnit: 1e6, fraction: 0, suffix: 'short_number_suffix.m' },","136","  { unit: 1e6, formatUnit: 1e6, fraction: 1, suffix: 'short_number_suffix.m' },","137","  { unit: 1e4, formatUnit: 1e3, fraction: 0, suffix: 'short_number_suffix.k' },","138","  { unit: 1e3, formatUnit: 1e3, fraction: 1, suffix: 'short_number_suffix.k' }","139","];","140","","141","function shortIntFormatter(","142","  value: number,","143","  option?: { roundingFunc?: (x: number) => number }","144","): string {","145","  const roundingFunc = (option && option.roundingFunc) || undefined;","146","  for (let i = 0; i < shortIntFormats.length; i++) {","147","    const { unit, formatUnit, fraction, suffix } = shortIntFormats[i];","148","    const nextFraction = unit \/ (shortIntFormats[i + 1] ? shortIntFormats[i + 1].unit \/ 10 : 1);","149","    const roundedValue = numberRound(value \/ unit, nextFraction, roundingFunc);","150","    if (roundedValue >= 1) {","151","      return (","152","        numberFormatter(","153","          numberRound(value \/ formatUnit, Math.pow(10, fraction), roundingFunc),","154","          0,","155","          fraction","156","        ) + translate(suffix)","157","      );","158","    }","160","","161","  return numberFormatter(value);","162","}","163","","164","function numberRound(","165","  value: number,","166","  fraction: number = 1000,","167","  roundingFunc: (x: number) => number = Math.round","168",") {","169","  return roundingFunc(value * fraction) \/ fraction;"],"delete":["132","function shortIntFormatter(value: number): string {","133","  if (value >= 1e9) {","134","    return numberFormatter(value \/ 1e9) + translate('short_number_suffix.g');","135","  } else if (value >= 1e6) {","136","    return numberFormatter(value \/ 1e6) + translate('short_number_suffix.m');","137","  } else if (value >= 1e4) {","138","    return numberFormatter(value \/ 1e3) + translate('short_number_suffix.k');","139","  } else if (value >= 1e3) {","140","    return numberFormatter(value \/ 1e3, 0, 1) + translate('short_number_suffix.k');","141","  } else {","142","    return numberFormatter(value);"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/__snapshots__\/Statistics-test.tsx.snap":[{"add":["35","    <CountUp","36","      delay={0}","37","      duration={4}","38","      end={26}","39","      suffix=\"short_number_suffix.k\"","40","    >","41","      <Component \/>","42","    <\/CountUp>"],"delete":[]}]}},"724cf4fa763199ea4a0c04d9596cdbc73070b554":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["419","  <select id=\"selectForIndexing\" parameterType=\"map\" resultType=\"Component\" fetchSize=\"${_scrollFetchSize}\" resultSetType=\"FORWARD_ONLY\">"],"delete":["419","  <select id=\"selectForIndexing\" parameterType=\"map\" resultType=\"Component\">"]}]}},"1055024bf5bbfd50b26e4be8dc5a1fc52990dfed":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/constants.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketSearchResults-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketSearchResults-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketProjectAccordion-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectCreate.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketProjectAccordion-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketSearchResults.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectAccordion.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/constants.ts":[{"add":["21","","22","export const DEFAULT_BBS_PAGE_SIZE = 25;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketSearchResults-test.tsx.snap":[{"add":["55","","56","exports[`should render correctly: unknown project in search results 1`] = `","57","<div","58","  className=\"big-spacer-top\"","59",">","60","  <DeferredSpinner","61","    loading={false}","62","  >","63","    <BitbucketProjectAccordion","64","      disableRepositories={false}","65","      onSelectRepository={[MockFunction]}","66","      open={true}","67","      repositories={","68","        Array [","69","          Object {","70","            \"id\": 1,","71","            \"name\": \"Repo\",","72","            \"projectKey\": \"unknown\",","73","            \"slug\": \"project__repo\",","74","          },","75","        ]","76","      }","77","      showingAllRepositories={true}","78","    \/>","79","  <\/DeferredSpinner>","80","<\/div>","81","`;"],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["170","search_results=Search results"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketSearchResults-test.tsx":[{"add":["34","  expect(","35","    shallowRender({ searchResults: [mockBitbucketRepository({ projectKey: 'unknown' })] })","36","  ).toMatchSnapshot('unknown project in search results');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketProjectAccordion-test.tsx.snap":[{"add":["231","exports[`should render correctly: no project info 1`] = `","232","<BoxedGroupAccordion","233","  className=\"big-spacer-bottom open\"","234","  onClick={[MockFunction]}","235","  open={true}","236","  title={","237","    <h3>","238","      search_results","239","    <\/h3>","240","  }","241",">","242","  <div","243","    className=\"display-flex-wrap\"","244","  >","245","    <Radio","246","      checked={false}","247","      className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden\"","248","      key=\"1\"","249","      onCheck={[Function]}","250","      value=\"1\"","251","    >","252","      <strong","253","        className=\"text-ellipsis\"","254","        title=\"Repo\"","255","      >","256","        Repo","257","      <\/strong>","258","    <\/Radio>","259","    <div","260","      className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"","261","      key=\"2\"","262","    >","263","      <CheckIcon","264","        className=\"spacer-right\"","265","        fill=\"#00aa00\"","266","        size={14}","267","      \/>","268","      <div","269","        className=\"overflow-hidden\"","270","      >","271","        <div","272","          className=\"little-spacer-bottom text-ellipsis\"","273","        >","274","          <strong","275","            title=\"Bar\"","276","          >","277","            <Link","278","              onlyActiveOnIndex={false}","279","              style={Object {}}","280","              to={","281","                Object {","282","                  \"pathname\": \"\/dashboard\",","283","                  \"query\": Object {","284","                    \"branch\": undefined,","285","                    \"id\": \"bar\",","286","                  },","287","                }","288","              }","289","            >","290","              Bar","291","            <\/Link>","292","          <\/strong>","293","        <\/div>","294","        <em>","295","          onboarding.create_project.repository_imported","296","        <\/em>","297","      <\/div>","298","    <\/div>","299","  <\/div>","300","<\/BoxedGroupAccordion>","301","`;","302","","417","  <Alert","418","    variant=\"warning\"","419","  >","420","    onboarding.create_project.only_showing_X_first_repos.2","421","  <\/Alert>"],"delete":["5","  key=\"project\"","19","  key=\"project\"","92","  key=\"project\"","165","  key=\"project\"","238","  key=\"project\"","284","  key=\"project\"","350","    <Alert","351","      variant=\"warning\"","352","    >","353","      onboarding.create_project.only_showing_X_first_repos.2","354","    <\/Alert>","362","  key=\"project\""]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectCreate.tsx":[{"add":["36","import { DEFAULT_BBS_PAGE_SIZE } from '.\/constants';","149","          ({ isLastPage, repositories }) => {","150","            \/\/ Because the WS uses the project name rather than its key to find","151","            \/\/ repositories, we can match more repositories than we expect. For","152","            \/\/ example, p.name = \"A1\" would find repositories for projects \"A1\",","153","            \/\/ \"A10\", \"A11\", etc. This is a limitation of BBS. To make sure we","154","            \/\/ don't display incorrect information, filter on the project key.","155","            const filteredRepositories = repositories.filter(r => r.projectKey === p.key);","156","","157","            \/\/ And because of the above, the \"isLastPage\" cannot be relied upon","158","            \/\/ either. This one is impossible to get 100% for now. We can only","159","            \/\/ make some assumptions: by default, the page size for BBS is 25","160","            \/\/ (this is not part of the payload, so we don't know the actual","161","            \/\/ number; but changing this implies changing some advanced config,","162","            \/\/ so it's not likely). If the filtered repos is larger than this","163","            \/\/ number AND isLastPage is false, we'll keep it at false.","164","            \/\/ Otherwise, we assume it's true.","165","            const realIsLastPage =","166","              isLastPage || filteredRepositories.length < DEFAULT_BBS_PAGE_SIZE;","167","","168","            return {","169","              repositories: filteredRepositories,","170","              isLastPage: realIsLastPage,","171","              projectKey: p.key","172","            };","173","          }"],"delete":["148","          ({ isLastPage, repositories }) => ({","149","            isLastPage,","150","            repositories,","151","            projectKey: p.key","152","          })"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketProjectAccordion-test.tsx":[{"add":["41","  expect(shallowRender({ project: undefined })).toMatchSnapshot('no project info');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketSearchResults.tsx":[{"add":["46","  if (searchResults.length === 0 && !searching) {","47","    return (","48","      <Alert className=\"big-spacer-top\" variant=\"warning\">","49","        {translate('onboarding.create_project.no_bbs_repos.filter')}","50","      <\/Alert>","51","    );","52","  }","53","","58","  return (","61","        {filteredProjects.length === 0 && searchResults.length > 0 && (","62","          <BitbucketProjectAccordion","63","            disableRepositories={disableRepositories}","64","            onSelectRepository={props.onSelectRepository}","65","            open={true}","66","            repositories={searchResults}","67","            selectedRepository={selectedRepository}","68","            showingAllRepositories={true}","69","          \/>","70","        )}","71",""],"delete":["50","  return filteredProjects.length === 0 && !searching ? (","51","    <Alert className=\"big-spacer-top\" variant=\"warning\">","52","      {translate('onboarding.create_project.no_bbs_repos.filter')}","53","    <\/Alert>","54","  ) : ("]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectAccordion.tsx":[{"add":["38","  project?: BitbucketProject;","56","  const title = project?.name ?? translate('search_results');","57","","73","      title={<h3>{title}<\/h3>}>","75","        <>","76","          <div className=\"display-flex-wrap\">","77","            {repositoryCount === 0 && (","78","              <Alert variant=\"warning\">","79","                <FormattedMessage","80","                  defaultMessage={translate('onboarding.create_project.no_bbs_repos')}","81","                  id=\"onboarding.create_project.no_bbs_repos\"","82","                  values={{","83","                    link: (","84","                      <Link","85","                        to={{","86","                          pathname: '\/projects\/create',","87","                          query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }","88","                        }}>","89","                        {translate('onboarding.create_project.update_your_token')}","90","                      <\/Link>","91","                    )","92","                  }}","93","                \/>","94","              <\/Alert>","95","            )}","97","            {repositories.map(repo =>","98","              repo.sqProjectKey ? (","99","                <div","100","                  className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"","101","                  key={repo.id}>","102","                  <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} \/>","103","                  <div className=\"overflow-hidden\">","104","                    <div className=\"little-spacer-bottom text-ellipsis\">","105","                      <strong title={repo.name}>","106","                        <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}<\/Link>","107","                      <\/strong>","108","                    <\/div>","109","                    <em>{translate('onboarding.create_project.repository_imported')}<\/em>","112","              ) : (","113","                <Radio","114","                  checked={selectedRepository?.id === repo.id}","115","                  className={classNames(","116","                    'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',","117","                    {","118","                      disabled: disableRepositories,","119","                      'text-muted': disableRepositories,","120","                      'link-no-underline': disableRepositories","121","                    }","122","                  )}","123","                  key={repo.id}","124","                  onCheck={() => props.onSelectRepository(repo)}","125","                  value={String(repo.id)}>","126","                  <strong className=\"text-ellipsis\" title={repo.name}>","127","                    {repo.name}","128","                  <\/strong>","129","                <\/Radio>","130","              )","131","            )}","132","          <\/div>","142","        <\/>"],"delete":["38","  project: BitbucketProject;","63","      key={project.key}","72","      title={<h3>{project.name}<\/h3>}>","74","        <div className=\"display-flex-wrap\">","75","          {repositoryCount === 0 && (","76","            <Alert variant=\"warning\">","77","              <FormattedMessage","78","                defaultMessage={translate('onboarding.create_project.no_bbs_repos')}","79","                id=\"onboarding.create_project.no_bbs_repos\"","80","                values={{","81","                  link: (","82","                    <Link","83","                      to={{","84","                        pathname: '\/projects\/create',","85","                        query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }","86","                      }}>","87","                      {translate('onboarding.create_project.update_your_token')}","88","                    <\/Link>","89","                  )","90","                }}","91","              \/>","92","            <\/Alert>","93","          )}","95","          {repositories.map(repo =>","96","            repo.sqProjectKey ? (","97","              <div","98","                className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"","99","                key={repo.id}>","100","                <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} \/>","101","                <div className=\"overflow-hidden\">","102","                  <div className=\"little-spacer-bottom text-ellipsis\">","103","                    <strong title={repo.name}>","104","                      <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}<\/Link>","105","                    <\/strong>","107","                  <em>{translate('onboarding.create_project.repository_imported')}<\/em>","109","              <\/div>","110","            ) : (","111","              <Radio","112","                checked={selectedRepository?.id === repo.id}","113","                className={classNames(","114","                  'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',","115","                  {","116","                    disabled: disableRepositories,","117","                    'text-muted': disableRepositories,","118","                    'link-no-underline': disableRepositories","119","                  }","120","                )}","121","                key={repo.id}","122","                onCheck={() => props.onSelectRepository(repo)}","123","                value={String(repo.id)}>","124","                <strong className=\"text-ellipsis\" title={repo.name}>","125","                  {repo.name}","126","                <\/strong>","127","              <\/Radio>","128","            )","129","          )}","139","        <\/div>"]}]}},"93598d6f84ba12c14150f160604605c68b568272":{"changes":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1007_add_index_on_ce_queue_component_uuid.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["707","CREATE INDEX \"CE_QUEUE_COMPONENT_UUID\" ON \"CE_QUEUE\" (\"COMPONENT_UUID\");","708",""],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1007_add_index_on_ce_queue_component_uuid.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 1007;"],"delete":["31","  public static final int LAST_VERSION = 1006;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["369","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1007');"],"delete":[]}]}},"15dc8ea86dba565fa8f02814ca7c8fb9130ae3a7":{"changes":{"it\/it-tests\/src\/test\/java\/it\/issue\/AutoAssignTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/issue\/AutoAssignTest.java":[{"add":["2","import java.util.List;","7","import org.sonar.wsclient.issue.Issue;","72","  \/**","73","   * SONAR-7098","74","   *","75","   * Given two versions of same project:","76","   * v1: issue, but no SCM data","77","   * v2: old issue and SCM data","78","   * Expected: all issues should be associated with authors","79","   *\/","80","  @Test","81","  public void update_author_and_assignee_when_scm_is_activated() {","82","    createUser(SIMON_USER, SIMON_USER);","83","","84","    \/\/ Run a first analysis without SCM","85","    projectAnalysis.withProperties(\"sonar.scm.disabled\", \"true\").run();","86","    List<Issue> issues = searchIssues();","87","    assertThat(issues).isNotEmpty();","88","","89","    \/\/ No author and assignee are set","90","    for (Issue issue : issues) {","91","      assertThat(issue.author()).isEmpty();","92","    }","93","    assertThat(search(IssueQuery.create().assigned(true)).list()).isEmpty();","94","","95","    \/\/ Run a second analysis with SCM","96","    projectAnalysis.run();","97","    issues = searchIssues();","98","    assertThat(issues).isNotEmpty();","99","","100","    \/\/ Authors and assignees are set","101","    for (Issue issue : issues) {","102","      assertThat(issue.author()).isNotEmpty();","103","    }","104","    assertThat(search(IssueQuery.create().assignees(SIMON_USER)).list()).hasSize(3);","105","  }","106",""],"delete":[]}]}},"0f5624e59711578884518b4438c9c7e5c47ade68":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembersModal-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":[{"add":["20","import { mount } from 'enzyme';","22","import { click, waitAndUpdate } from '..\/..\/..\/..\/helpers\/testUtils';","24","it('should edit members', async () => {","28","  const wrapper = mount(<EditMembers group={group} onEdit={onEdit} organization=\"org\" \/>);","32","  await waitAndUpdate(wrapper);","35","  await waitAndUpdate(wrapper);"],"delete":["20","import { shallow } from 'enzyme';","22","import { click } from '..\/..\/..\/..\/helpers\/testUtils';","24","it('should edit members', () => {","28","  const wrapper = shallow(<EditMembers group={group} onEdit={onEdit} organization=\"org\" \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembersModal-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":[{"add":["3","<EditMembers","4","  group={","5","    Object {","6","      \"id\": 3,","7","      \"membersCount\": 5,","8","      \"name\": \"Foo\",","9","    }","10","  }","11","  onEdit={[MockFunction]}","12","  organization=\"org\"","13",">","18","    <Button","19","      className=\"button-small button-icon\"","20","      onClick={[Function]}","21","      stopPropagation={true}","22","      style={","23","        Object {","24","          \"color\": \"#236a97\",","25","        }","26","      }","27","    >","28","      <button","29","        className=\"button button-small button-icon\"","30","        onClick={[Function]}","31","        style={","32","          Object {","33","            \"color\": \"#236a97\",","34","          }","35","        }","36","        type=\"button\"","37","      >","38","        <BulletListIcon>","39","          <Icon>","40","            <svg","41","              height={16}","42","              style={","43","                Object {","44","                  \"clipRule\": \"evenodd\",","45","                  \"fillRule\": \"evenodd\",","46","                  \"strokeLinejoin\": \"round\",","47","                  \"strokeMiterlimit\": \"1.41421\",","48","                }","49","              }","50","              version=\"1.1\"","51","              viewBox=\"0 0 16 16\"","52","              width={16}","53","              xmlSpace=\"preserve\"","54","              xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","55","            >","56","              <path","57","                d=\"M2.968 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM2.968 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177z\"","58","                style={","59","                  Object {","60","                    \"fill\": \"currentColor\",","61","                  }","62","                }","63","              \/>","64","            <\/svg>","65","          <\/Icon>","66","        <\/BulletListIcon>","67","      <\/button>","68","    <\/Button>","70","<\/EditMembers>","74","<EditMembers","75","  group={","76","    Object {","77","      \"id\": 3,","78","      \"membersCount\": 5,","79","      \"name\": \"Foo\",","80","    }","81","  }","82","  onEdit={[MockFunction]}","83","  organization=\"org\"","84",">","89","    <Button","90","      className=\"button-small button-icon\"","91","      onClick={[Function]}","92","      stopPropagation={true}","93","      style={","94","        Object {","95","          \"color\": \"#236a97\",","96","        }","97","      }","99","      <button","100","        className=\"button button-small button-icon\"","102","        style={","103","          Object {","104","            \"color\": \"#236a97\",","105","          }","106","        }","107","        type=\"button\"","109","        <BulletListIcon>","110","          <Icon>","111","            <svg","112","              height={16}","113","              style={","114","                Object {","115","                  \"clipRule\": \"evenodd\",","116","                  \"fillRule\": \"evenodd\",","117","                  \"strokeLinejoin\": \"round\",","118","                  \"strokeMiterlimit\": \"1.41421\",","119","                }","120","              }","121","              version=\"1.1\"","122","              viewBox=\"0 0 16 16\"","123","              width={16}","124","              xmlSpace=\"preserve\"","125","              xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","126","            >","127","              <path","128","                d=\"M2.968 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM2.968 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177z\"","129","                style={","130","                  Object {","131","                    \"fill\": \"currentColor\",","132","                  }","133","                }","134","              \/>","135","            <\/svg>","136","          <\/Icon>","137","        <\/BulletListIcon>","138","      <\/button>","139","    <\/Button>","140","  <\/ButtonIcon>","141","  <EditMembers","142","    group={","143","      Object {","144","        \"id\": 3,","145","        \"membersCount\": 5,","146","        \"name\": \"Foo\",","147","      }","148","    }","149","    onClose={[Function]}","150","    organization=\"org\"","151","  >","152","    <Modal","153","      contentLabel=\"users.update\"","154","      onRequestClose={[Function]}","155","    >","156","      <Modal","157","        ariaHideApp={true}","158","        bodyOpenClassName=\"ReactModal__Body--open\"","159","        className=\"modal\"","160","        closeTimeoutMS={0}","161","        contentLabel=\"users.update\"","162","        isOpen={true}","163","        onRequestClose={[Function]}","164","        overlayClassName=\"modal-overlay\"","165","        parentSelector={[Function]}","166","        portalClassName=\"ReactModalPortal\"","167","        shouldCloseOnEsc={true}","168","        shouldCloseOnOverlayClick={true}","169","        shouldFocusAfterRender={true}","170","        shouldReturnFocusAfterClose={true}","171","      >","172","        <ModalPortal","173","          ariaHideApp={true}","174","          bodyOpenClassName=\"ReactModal__Body--open\"","175","          className=\"modal\"","176","          closeTimeoutMS={0}","177","          contentLabel=\"users.update\"","178","          defaultStyles={","179","            Object {","180","              \"content\": Object {","181","                \"WebkitOverflowScrolling\": \"touch\",","182","                \"background\": \"#fff\",","183","                \"border\": \"1px solid #ccc\",","184","                \"borderRadius\": \"4px\",","185","                \"bottom\": \"40px\",","186","                \"left\": \"40px\",","187","                \"outline\": \"none\",","188","                \"overflow\": \"auto\",","189","                \"padding\": \"20px\",","190","                \"position\": \"absolute\",","191","                \"right\": \"40px\",","192","                \"top\": \"40px\",","193","              },","194","              \"overlay\": Object {","195","                \"backgroundColor\": \"rgba(255, 255, 255, 0.75)\",","196","                \"bottom\": 0,","197","                \"left\": 0,","198","                \"position\": \"fixed\",","199","                \"right\": 0,","200","                \"top\": 0,","201","              },","202","            }","203","          }","204","          isOpen={true}","205","          onRequestClose={[Function]}","206","          overlayClassName=\"modal-overlay\"","207","          parentSelector={[Function]}","208","          portalClassName=\"ReactModalPortal\"","209","          shouldCloseOnEsc={true}","210","          shouldCloseOnOverlayClick={true}","211","          shouldFocusAfterRender={true}","212","          shouldReturnFocusAfterClose={true}","213","          style={","214","            Object {","215","              \"content\": Object {},","216","              \"overlay\": Object {},","217","            }","218","          }","219","        >","220","          <div","221","            aria-modal=\"true\"","222","            className=\"ReactModal__Overlay ReactModal__Overlay--after-open modal-overlay\"","223","            onClick={[Function]}","224","            onMouseDown={[Function]}","225","            style={Object {}}","226","          >","227","            <div","228","              aria-label=\"users.update\"","229","              className=\"ReactModal__Content ReactModal__Content--after-open modal\"","230","              onClick={[Function]}","231","              onKeyDown={[Function]}","232","              onMouseDown={[Function]}","233","              onMouseUp={[Function]}","234","              style={Object {}}","235","              tabIndex=\"-1\"","236","            >","237","              <header","238","                className=\"modal-head\"","239","              >","240","                <h2>","241","                  users.update","242","                <\/h2>","243","              <\/header>","244","              <div","245","                className=\"modal-body\"","246","              >","247","                <DeferredSpinner","248","                  loading={false}","249","                  timeout={100}","250","                >","251","                  <SelectList","252","                    elements={Array []}","253","                    onSearch={[Function]}","254","                    onSelect={[Function]}","255","                    onUnselect={[Function]}","256","                    renderElement={[Function]}","257","                    selectedElements={Array []}","258","                  >","259","                    <div","260","                      className=\"select-list\"","261","                    >","262","                      <div","263","                        className=\"display-flex-center\"","264","                      >","265","                        <RadioToggle","266","                          className=\"spacer-right\"","267","                          disabled={false}","268","                          name=\"filter\"","269","                          onCheck={[Function]}","270","                          options={","271","                            Array [","272","                              Object {","273","                                \"disabled\": false,","274","                                \"label\": \"selected\",","275","                                \"value\": \"selected\",","276","                              },","277","                              Object {","278","                                \"disabled\": false,","279","                                \"label\": \"unselected\",","280","                                \"value\": \"deselected\",","281","                              },","282","                              Object {","283","                                \"disabled\": false,","284","                                \"label\": \"all\",","285","                                \"value\": \"all\",","286","                              },","287","                            ]","288","                          }","289","                          value=\"selected\"","290","                        >","291","                          <ul","292","                            className=\"radio-toggle spacer-right\"","293","                          >","294","                            <li","295","                              key=\"selected\"","296","                            >","297","                              <input","298","                                checked={true}","299","                                disabled={false}","300","                                id=\"filter__selected\"","301","                                name=\"filter\"","302","                                onChange={[Function]}","303","                                type=\"radio\"","304","                                value=\"selected\"","305","                              \/>","306","                              <Tooltip>","307","                                <label","308","                                  htmlFor=\"filter__selected\"","309","                                >","310","                                  selected","311","                                <\/label>","312","                              <\/Tooltip>","313","                            <\/li>","314","                            <li","315","                              key=\"deselected\"","316","                            >","317","                              <input","318","                                checked={false}","319","                                disabled={false}","320","                                id=\"filter__deselected\"","321","                                name=\"filter\"","322","                                onChange={[Function]}","323","                                type=\"radio\"","324","                                value=\"deselected\"","325","                              \/>","326","                              <Tooltip>","327","                                <label","328","                                  htmlFor=\"filter__deselected\"","329","                                >","330","                                  unselected","331","                                <\/label>","332","                              <\/Tooltip>","333","                            <\/li>","334","                            <li","335","                              key=\"all\"","336","                            >","337","                              <input","338","                                checked={false}","339","                                disabled={false}","340","                                id=\"filter__all\"","341","                                name=\"filter\"","342","                                onChange={[Function]}","343","                                type=\"radio\"","344","                                value=\"all\"","345","                              \/>","346","                              <Tooltip>","347","                                <label","348","                                  htmlFor=\"filter__all\"","349","                                >","350","                                  all","351","                                <\/label>","352","                              <\/Tooltip>","353","                            <\/li>","354","                          <\/ul>","355","                        <\/RadioToggle>","356","                        <SearchBox","357","                          autoFocus={true}","358","                          loading={false}","359","                          onChange={[Function]}","360","                          placeholder=\"search_verb\"","361","                          value=\"\"","362","                        >","363","                          <div","364","                            className=\"search-box\"","365","                          >","366","                            <input","367","                              autoComplete=\"off\"","368","                              autoFocus={true}","369","                              className=\"search-box-input\"","370","                              maxLength={100}","371","                              onChange={[Function]}","372","                              onKeyDown={[Function]}","373","                              placeholder=\"search_verb\"","374","                              type=\"search\"","375","                              value=\"\"","376","                            \/>","377","                            <DeferredSpinner","378","                              loading={false}","379","                              timeout={100}","380","                            >","381","                              <SearchIcon","382","                                className=\"search-box-magnifier\"","383","                              >","384","                                <Icon","385","                                  className=\"search-box-magnifier\"","386","                                >","387","                                  <svg","388","                                    className=\"search-box-magnifier\"","389","                                    height={16}","390","                                    style={","391","                                      Object {","392","                                        \"clipRule\": \"evenodd\",","393","                                        \"fillRule\": \"evenodd\",","394","                                        \"strokeLinejoin\": \"round\",","395","                                        \"strokeMiterlimit\": \"1.41421\",","396","                                      }","397","                                    }","398","                                    version=\"1.1\"","399","                                    viewBox=\"0 0 16 16\"","400","                                    width={16}","401","                                    xmlSpace=\"preserve\"","402","                                    xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","403","                                  >","404","                                    <path","405","                                      d=\"M10.308 7.077c0-.89-.316-1.65-.949-2.283a3.111 3.111 0 0 0-2.282-.948c-.89 0-1.65.316-2.283.948a3.111 3.111 0 0 0-.948 2.283c0 .89.316 1.65.948 2.282a3.111 3.111 0 0 0 2.283.949c.89 0 1.65-.316 2.282-.949a3.111 3.111 0 0 0 .949-2.282zm3.692 6c0 .25-.091.466-.274.649a.887.887 0 0 1-.65.274.857.857 0 0 1-.648-.274L9.954 11.26c-.86.596-1.82.894-2.877.894a4.989 4.989 0 0 1-1.972-.4 5.076 5.076 0 0 1-1.623-1.082A5.076 5.076 0 0 1 2.4 9.049 4.989 4.989 0 0 1 2 7.077c0-.688.133-1.345.4-1.972a5.076 5.076 0 0 1 1.082-1.623A5.076 5.076 0 0 1 5.105 2.4 4.989 4.989 0 0 1 7.077 2c.687 0 1.345.133 1.972.4a5.076 5.076 0 0 1 1.623 1.082c.454.454.815.995 1.082 1.623.266.627.4 1.284.4 1.972a4.938 4.938 0 0 1-.894 2.877l2.473 2.474a.883.883 0 0 1 .267.649z\"","406","                                      style={","407","                                        Object {","408","                                          \"fill\": \"currentColor\",","409","                                        }","410","                                      }","411","                                    \/>","412","                                  <\/svg>","413","                                <\/Icon>","414","                              <\/SearchIcon>","415","                            <\/DeferredSpinner>","416","                          <\/div>","417","                        <\/SearchBox>","418","                      <\/div>","419","                      <SelectListListContainer","420","                        disabledElements={Array []}","421","                        elements={Array []}","422","                        filter=\"selected\"","423","                        onSelect={[Function]}","424","                        onUnselect={[Function]}","425","                        renderElement={[Function]}","426","                        selectedElements={Array []}","427","                      >","428","                        <div","429","                          className=\"select-list-list-container spacer-top\"","430","                        >","431","                          <ul","432","                            className=\"menu\"","433","                          \/>","434","                        <\/div>","435","                      <\/SelectListListContainer>","436","                    <\/div>","437","                  <\/SelectList>","438","                <\/DeferredSpinner>","439","              <\/div>","440","              <footer","441","                className=\"modal-foot\"","442","              >","443","                <ResetButtonLink","444","                  onClick={[Function]}","445","                >","446","                  <Button","447","                    className=\"button-link\"","448","                    onClick={[Function]}","449","                    type=\"reset\"","450","                  >","451","                    <button","452","                      className=\"button button-link\"","453","                      onClick={[Function]}","454","                      type=\"reset\"","455","                    >","456","                      Done","457","                    <\/button>","458","                  <\/Button>","459","                <\/ResetButtonLink>","460","              <\/footer>","461","            <\/div>","462","          <\/div>","463","        <\/ModalPortal>","464","      <\/Modal>","465","    <\/Modal>","466","  <\/EditMembers>","467","<\/EditMembers>","471","<EditMembers","472","  group={","473","    Object {","474","      \"id\": 3,","475","      \"membersCount\": 5,","476","      \"name\": \"Foo\",","477","    }","478","  }","479","  onEdit={","480","    [MockFunction] {","481","      \"calls\": Array [","482","        Array [],","483","      ],","484","      \"results\": Array [","485","        Object {","486","          \"isThrow\": false,","487","          \"value\": undefined,","488","        },","489","      ],","490","    }","491","  }","492","  organization=\"org\"","493",">","498","    <Button","499","      className=\"button-small button-icon\"","500","      onClick={[Function]}","501","      stopPropagation={true}","502","      style={","503","        Object {","504","          \"color\": \"#236a97\",","505","        }","506","      }","507","    >","508","      <button","509","        className=\"button button-small button-icon\"","510","        onClick={[Function]}","511","        style={","512","          Object {","513","            \"color\": \"#236a97\",","514","          }","515","        }","516","        type=\"button\"","517","      >","518","        <BulletListIcon>","519","          <Icon>","520","            <svg","521","              height={16}","522","              style={","523","                Object {","524","                  \"clipRule\": \"evenodd\",","525","                  \"fillRule\": \"evenodd\",","526","                  \"strokeLinejoin\": \"round\",","527","                  \"strokeMiterlimit\": \"1.41421\",","528","                }","529","              }","530","              version=\"1.1\"","531","              viewBox=\"0 0 16 16\"","532","              width={16}","533","              xmlSpace=\"preserve\"","534","              xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","535","            >","536","              <path","537","                d=\"M2.968 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM2.968 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177z\"","538","                style={","539","                  Object {","540","                    \"fill\": \"currentColor\",","541","                  }","542","                }","543","              \/>","544","            <\/svg>","545","          <\/Icon>","546","        <\/BulletListIcon>","547","      <\/button>","548","    <\/Button>","550","<\/EditMembers>"],"delete":["3","<React.Fragment>","8","    <BulletListIcon \/>","10","<\/React.Fragment>","14","<React.Fragment>","19","    <BulletListIcon \/>","20","  <\/ButtonIcon>","21","  <Modal","22","    contentLabel=\"users.update\"","23","    onRequestClose={[Function]}","24","  >","25","    <header","26","      className=\"modal-head\"","28","      <h2>","29","        users.update","30","      <\/h2>","31","    <\/header>","32","    <div","33","      className=\"modal-body\"","34","    >","35","      <SelectList","36","        elements={Array []}","37","        onSearch={[Function]}","38","        onSelect={[Function]}","39","        onUnselect={[Function]}","40","        renderElement={[Function]}","41","        selectedElements={Array []}","42","      \/>","43","    <\/div>","44","    <footer","45","      className=\"modal-foot\"","46","    >","47","      <ResetButtonLink","50","        Done","51","      <\/ResetButtonLink>","52","    <\/footer>","53","  <\/Modal>","54","<\/React.Fragment>","58","<React.Fragment>","63","    <BulletListIcon \/>","65","<\/React.Fragment>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":[{"add":["20","import EditMembersModal from '.\/EditMembersModal';","23","import { ButtonIcon } from '..\/..\/..\/components\/ui\/buttons';","38","  state: State = { modal: false };","66","          <EditMembersModal","67","            group={this.props.group}","68","            onClose={this.handleModalClose}","69","            organization={this.props.organization}","70","          \/>"],"delete":["20","import { find, without } from 'lodash';","22","import Modal from '..\/..\/..\/components\/controls\/Modal';","24","import SelectList, { Filter } from '..\/..\/..\/components\/SelectList\/SelectList';","25","import { ButtonIcon, ResetButtonLink } from '..\/..\/..\/components\/ui\/buttons';","26","import { translate } from '..\/..\/..\/helpers\/l10n';","27","import {","28","  getUsersInGroup,","29","  addUserToGroup,","30","  removeUserFromGroup,","31","  GroupUser","32","} from '..\/..\/..\/api\/user_groups';","42","  users: GroupUser[];","43","  selectedUsers: string[];","49","  state: State = { modal: false, users: [], selectedUsers: [] };","52","    this.handleSearch('', Filter.Selected);","60","  handleSearch = (query: string, selected: Filter) => {","61","    return getUsersInGroup({","62","      name: this.props.group.name,","63","      organization: this.props.organization,","64","      ps: 100,","65","      q: query !== '' ? query : undefined,","66","      selected","67","    }).then(","68","      data => {","69","        this.setState({","70","          users: data.users,","71","          selectedUsers: data.users.filter(user => user.selected).map(user => user.login)","72","        });","73","      },","74","      () => {}","75","    );","76","  };","77","","78","  handleSelect = (login: string) => {","79","    return addUserToGroup({","80","      name: this.props.group.name,","81","      login,","82","      organization: this.props.organization","83","    }).then(() => {","84","      this.setState((state: State) => ({","85","        selectedUsers: [...state.selectedUsers, login]","86","      }));","87","    });","88","  };","89","","90","  handleUnselect = (login: string) => {","91","    return removeUserFromGroup({","92","      name: this.props.group.name,","93","      login,","94","      organization: this.props.organization","95","    }).then(() => {","96","      this.setState((state: State) => ({","97","        selectedUsers: without(state.selectedUsers, login)","98","      }));","99","    });","100","  };","101","","113","  renderElement = (login: string): React.ReactNode => {","114","    const user = find(this.state.users, { login });","115","    return (","116","      <div className=\"select-list-list-item\">","117","        {user === undefined ? (","118","          login","119","        ) : (","120","          <>","121","            {user.name}","122","            <br \/>","123","            <span className=\"note\">{user.login}<\/span>","124","          <\/>","125","        )}","126","      <\/div>","127","    );","128","  };","129","","131","    const modalHeader = translate('users.update');","132","","139","          <Modal contentLabel={modalHeader} onRequestClose={this.handleModalClose}>","140","            <header className=\"modal-head\">","141","              <h2>{modalHeader}<\/h2>","142","            <\/header>","143","","144","            <div className=\"modal-body\">","145","              <SelectList","146","                elements={this.state.users.map(user => user.login)}","147","                onSearch={this.handleSearch}","148","                onSelect={this.handleSelect}","149","                onUnselect={this.handleUnselect}","150","                renderElement={this.renderElement}","151","                selectedElements={this.state.selectedUsers}","152","              \/>","153","            <\/div>","154","","155","            <footer className=\"modal-foot\">","156","              <ResetButtonLink onClick={this.handleModalClose}>{translate('Done')}<\/ResetButtonLink>","157","            <\/footer>","158","          <\/Modal>"]}]}},"6885b465d9fffa09f8c03b03ebd792f8669f9685":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/List.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/ListItem-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/List-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/ListItem.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/ManageMemberGroupsForm.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/Header-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/List-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/ListItem-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/Header-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/Header.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/App-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/user_groups.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1750","groups.users.edit=Change group members"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/List.tsx":[{"add":["26","  onDelete: (group: T.Group) => void;","27","  onEdit: (group: T.Group) => void;","39","            <th className=\"nowrap width-10\" colSpan={2}>","40","              {translate('members')}","41","            <\/th>","52","              <td className=\"width-10\" colSpan={2} \/>","64","              key={group.name}"],"delete":["26","  onDelete: (name: string) => Promise<void>;","27","  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;","29","  organization: string | undefined;","40","            <th className=\"nowrap\">{translate('members')}<\/th>","51","              <td className=\"width-10\" \/>","63","              key={group.id}","67","              organization={props.organization}"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/ListItem-test.tsx":[{"add":["21","import { mockGroup } from '..\/..\/..\/..\/helpers\/testMocks';","22","import ListItem, { ListItemProps } from '..\/ListItem';","24","it('should render correctly', () => {","25","  expect(shallowRender()).toMatchSnapshot();","26","  expect(shallowRender({ group: mockGroup({ default: true }) })).toMatchSnapshot('default group');","29","function shallowRender(overrides: Partial<ListItemProps> = {}) {","30","  return shallow(","32","      group={mockGroup()}","36","      {...overrides}","39","}"],"delete":["21","import { click } from 'sonar-ui-common\/helpers\/testUtils';","22","import ListItem from '..\/ListItem';","24","it('should edit group', () => {","25","  const group = { id: 3, name: 'Foo', membersCount: 5 };","26","  const onEdit = jest.fn();","27","  const wrapper = shallow(","28","    <ListItem","29","      group={group}","30","      onDelete={jest.fn()}","31","      onEdit={onEdit}","32","      onEditMembers={jest.fn()}","33","      organization=\"org\"","34","    \/>","35","  );","36","","37","  click(wrapper.find('.js-group-update'));","38","  wrapper.update();","39","","40","  wrapper.find('Form').prop<Function>('onSubmit')({ name: 'Bar', description: 'bla bla' });","41","  expect(onEdit).lastCalledWith({ description: 'bla bla', id: 3, name: 'Bar' });","44","it('should delete group', () => {","45","  const group = { id: 3, name: 'Foo', membersCount: 5 };","46","  const onDelete = jest.fn();","47","  const wrapper = shallow(","49","      group={group}","50","      onDelete={onDelete}","51","      onEdit={jest.fn()}","52","      onEditMembers={jest.fn()}","53","      organization=\"org\"","54","    \/>","55","  );","56","  expect(wrapper).toMatchSnapshot();","57","","58","  click(wrapper.find('.js-group-delete'));","59","  wrapper.update();","60","","61","  wrapper.find('DeleteForm').prop<Function>('onSubmit')();","62","  expect(onDelete).toBeCalledWith('Foo');","63","});","64","","65","it('should render default group', () => {","66","  const group = { default: true, id: 3, name: 'Foo', membersCount: 5 };","67","  const wrapper = shallow(","68","    <ListItem","69","      group={group}","73","      organization=\"org\"","76","  expect(wrapper).toMatchSnapshot();","77","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["78","      showAnyone={true}","84","        count={3}","86","        loading={false}","88","        total={5}"],"delete":["17","      loading={true}","47","      loading={false}","80","      organization=\"foo\"","81","      showAnyone={false}","87","        count={2}","90","        total={4}"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":[{"add":["5","    aria-label=\"groups.users.edit\"","8","    title=\"groups.users.edit\"","18","    aria-label=\"groups.users.edit\"","21","    title=\"groups.users.edit\"","41","    aria-label=\"groups.users.edit\"","44","    title=\"groups.users.edit\""],"delete":["30","    organization=\"org\""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/List-test.tsx":[{"add":[],"delete":["47","      organization=\"org\""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/ListItem.tsx":[{"add":["27","export interface ListItemProps {","29","  onDelete: (group: T.Group) => void;","30","  onEdit: (group: T.Group) => void;","34","export default function ListItem(props: ListItemProps) {","35","  const { group } = props;","37","  return (","38","    <tr data-id={group.name}>","39","      <td className=\"width-20\">","40","        <strong className=\"js-group-name\">{group.name}<\/strong>","41","        {group.default && <span className=\"little-spacer-left\">({translate('default')})<\/span>}","42","      <\/td>","44","      <td className=\"thin text-middle text-right little-padded-right\">{group.membersCount}<\/td>","45","      <td className=\"little-padded-left\">","46","        {!group.default && <EditMembers group={group} onEdit={props.onEditMembers} \/>}","47","      <\/td>","49","      <td className=\"width-40\">","50","        <span className=\"js-group-description\">{group.description}<\/span>","51","      <\/td>","53","      <td className=\"thin nowrap text-right\">","54","        {!group.default && (","55","          <ActionsDropdown>","56","            <ActionsDropdownItem className=\"js-group-update\" onClick={() => props.onEdit(group)}>","57","              {translate('update_details')}","58","            <\/ActionsDropdownItem>","59","            <ActionsDropdownDivider \/>","60","            <ActionsDropdownItem","61","              className=\"js-group-delete\"","62","              destructive={true}","63","              onClick={() => props.onDelete(group)}>","64","              {translate('delete')}","65","            <\/ActionsDropdownItem>","66","          <\/ActionsDropdown>","68","      <\/td>","69","    <\/tr>","70","  );"],"delete":["25","import { omitNil } from 'sonar-ui-common\/helpers\/request';","26","import DeleteForm from '.\/DeleteForm';","28","import Form from '.\/Form';","30","interface Props {","32","  onDelete: (name: string) => Promise<void>;","33","  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;","35","  organization: string | undefined;","38","interface State {","39","  deleteForm: boolean;","40","  editForm: boolean;","41","}","43","export default class ListItem extends React.PureComponent<Props, State> {","44","  mounted = false;","45","  state: State = { deleteForm: false, editForm: false };","47","  componentDidMount() {","48","    this.mounted = true;","49","  }","51","  componentWillUnmount() {","52","    this.mounted = false;","53","  }","55","  handleDeleteClick = () => {","56","    this.setState({ deleteForm: true });","57","  };","58","","59","  handleEditClick = () => {","60","    this.setState({ editForm: true });","61","  };","62","","63","  closeDeleteForm = () => {","64","    if (this.mounted) {","65","      this.setState({ deleteForm: false });","66","    }","67","  };","68","","69","  closeEditForm = () => {","70","    if (this.mounted) {","71","      this.setState({ editForm: false });","72","    }","73","  };","74","","75","  handleDeleteFormSubmit = () => {","76","    return this.props.onDelete(this.props.group.name);","77","  };","78","","79","  handleEditFormSubmit = ({ name, description }: { name: string; description: string }) => {","80","    const { group } = this.props;","81","    return this.props.onEdit({","82","      description,","83","      id: group.id,","84","      \/\/ pass `name` only if it has changed, otherwise the WS fails","85","      ...omitNil({ name: name !== group.name ? name : undefined })","86","    });","87","  };","88","","89","  render() {","90","    const { group } = this.props;","91","","92","    return (","93","      <tr data-id={group.id}>","94","        <td className=\" width-20\">","95","          <strong className=\"js-group-name\">{group.name}<\/strong>","96","          {group.default && <span className=\"little-spacer-left\">({translate('default')})<\/span>}","97","        <\/td>","98","","99","        <td className=\"width-10\">","100","          <div className=\"display-flex-center\">","101","            <span className=\"spacer-right\">{group.membersCount}<\/span>","102","            {!group.default && (","103","              <EditMembers","104","                group={group}","105","                onEdit={this.props.onEditMembers}","106","                organization={this.props.organization}","107","              \/>","108","            )}","109","          <\/div>","110","        <\/td>","111","","112","        <td className=\"width-40\">","113","          <span className=\"js-group-description\">{group.description}<\/span>","114","        <\/td>","115","","116","        <td className=\"thin nowrap text-right\">","117","          {!group.default && (","118","            <ActionsDropdown>","119","              <ActionsDropdownItem className=\"js-group-update\" onClick={this.handleEditClick}>","120","                {translate('update_details')}","121","              <\/ActionsDropdownItem>","122","              <ActionsDropdownDivider \/>","123","              <ActionsDropdownItem","124","                className=\"js-group-delete\"","125","                destructive={true}","126","                onClick={this.handleDeleteClick}>","127","                {translate('delete')}","128","              <\/ActionsDropdownItem>","129","            <\/ActionsDropdown>","130","          )}","131","        <\/td>","132","","133","        {this.state.deleteForm && (","134","          <DeleteForm","135","            group={group}","136","            onClose={this.closeDeleteForm}","137","            onSubmit={this.handleDeleteFormSubmit}","138","          \/>","140","","141","        {this.state.editForm && (","142","          <Form","143","            confirmButtonText={translate('update_verb')}","144","            group={group}","145","            header={translate('groups.update_group')}","146","            onClose={this.closeEditForm}","147","            onSubmit={this.handleEditFormSubmit}","148","          \/>","149","        )}","150","      <\/tr>","151","    );","152","  }"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/ManageMemberGroupsForm.tsx":[{"add":["141","                      key={group.name}"],"delete":["141","                      key={group.id}"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":[{"add":["110","    <EditMembersModal group={group} onClose={jest.fn()} {...props} \/>"],"delete":["26","const organization = 'orga';","70","      organization,","90","      organization,","105","      organization,","114","    <EditMembersModal group={group} onClose={jest.fn()} organization={organization} {...props} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/Header-test.tsx.snap":[{"add":[],"delete":["13","    <DeferredSpinner","14","      loading={false}","15","      timeout={100}","16","    \/>","47","    <DeferredSpinner","48","      loading={false}","49","      timeout={100}","50","    \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":[{"add":["97","      login","110","      login"],"delete":["33","  organization: string | undefined;","68","      organization: this.props.organization,","99","      login,","100","      organization: this.props.organization","113","      login,","114","      organization: this.props.organization"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":[{"add":["28","  const wrapper = shallow(<EditMembers group={group} onEdit={onEdit} \/>);"],"delete":["28","  const wrapper = shallow(<EditMembers group={group} onEdit={onEdit} organization=\"org\" \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/List-test.tsx.snap":[{"add":["14","          className=\"nowrap width-10\"","15","          colSpan={2}","43","          colSpan={2}","66","        key=\"bar\"","81","        key=\"foo\"","96","        key=\"sonar-users\""],"delete":["14","          className=\"nowrap\"","64","        key=\"3\"","68","        organization=\"org\"","80","        key=\"2\"","84","        organization=\"org\"","96","        key=\"1\"","100","        organization=\"org\""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/ListItem-test.tsx.snap":[{"add":["2","exports[`should render correctly 1`] = `","4","  data-id=\"Foo\"","7","    className=\"width-20\"","16","    className=\"thin text-middle text-right little-padded-right\"","18","    1","19","  <\/td>","20","  <td","21","    className=\"little-padded-left\"","22","  >","23","    <EditMembers","24","      group={","25","        Object {","26","          \"id\": 1,","27","          \"membersCount\": 1,","28","          \"name\": \"Foo\",","30","      }","31","      onEdit={[MockFunction]}","32","    \/>","64","exports[`should render correctly: default group 1`] = `","66","  data-id=\"Foo\"","69","    className=\"width-20\"","85","    className=\"thin text-middle text-right little-padded-right\"","87","    1","90","    className=\"little-padded-left\"","91","  \/>","92","  <td"],"delete":["2","exports[`should delete group 1`] = `","4","  data-id={3}","7","    className=\" width-20\"","16","    className=\"width-10\"","18","    <div","19","      className=\"display-flex-center\"","20","    >","21","      <span","22","        className=\"spacer-right\"","23","      >","24","        5","25","      <\/span>","26","      <EditMembers","27","        group={","28","          Object {","29","            \"id\": 3,","30","            \"membersCount\": 5,","31","            \"name\": \"Foo\",","32","          }","34","        onEdit={[MockFunction]}","35","        organization=\"org\"","36","      \/>","37","    <\/div>","69","exports[`should render default group 1`] = `","71","  data-id={3}","74","    className=\" width-20\"","90","    className=\"width-10\"","92","    <div","93","      className=\"display-flex-center\"","94","    >","95","      <span","96","        className=\"spacer-right\"","97","      >","98","        5","99","      <\/span>","100","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/Header-test.tsx":[{"add":["26","  const wrapper = shallow(<Header onCreate={onCreate} \/>);"],"delete":["26","  const wrapper = shallow(<Header loading={false} onCreate={onCreate} \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":[{"add":["22","import { translate } from 'sonar-ui-common\/helpers\/l10n';","61","        <ButtonIcon","62","          aria-label={translate('groups.users.edit')}","63","          className=\"button-small\"","64","          onClick={this.handleMembersClick}","65","          title={translate('groups.users.edit')}>","69","          <EditMembersModal group={this.props.group} onClose={this.handleModalClose} \/>"],"delete":["27","  organization: string | undefined;","61","        <ButtonIcon className=\"button-small\" onClick={this.handleMembersClick}>","65","          <EditMembersModal","66","            group={this.props.group}","67","            onClose={this.handleModalClose}","68","            organization={this.props.organization}","69","          \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/Header.tsx":[{"add":[],"delete":["21","import DeferredSpinner from 'sonar-ui-common\/components\/ui\/DeferredSpinner';","26","  loading: boolean;","66","          <DeferredSpinner loading={this.props.loading} \/>","67",""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/App-test.tsx":[{"add":["28","import { mockGroup } from '..\/..\/..\/..\/helpers\/testMocks';","70","  expect(searchUsersGroups).toHaveBeenCalledWith({ q: '' });","87","  wrapper.setState({ groupToBeDeleted: mockGroup({ name: 'Members' }) });","88","  wrapper.instance().handleDelete();","91","  expect(wrapper.state().groupToBeDeleted).toBeUndefined();","92","});","93","","94","it('should ignore deletion', async () => {","95","  const wrapper = shallowRender();","96","  await waitAndUpdate(wrapper);","97","  wrapper.setState({ groupToBeDeleted: undefined });","98","  wrapper.instance().handleDelete();","99","  expect(deleteGroup).not.toHaveBeenCalled();","105","  wrapper.setState({ editedGroup: mockGroup({ id: 1, name: 'Owners' }) });","106","  wrapper.instance().handleEdit({ description: 'foo', name: 'bar' });","118","it('should ignore edition', async () => {","119","  const wrapper = shallowRender();","120","  await waitAndUpdate(wrapper);","121","  wrapper.setState({ editedGroup: undefined });","122","  wrapper.instance().handleEdit({ description: 'nope', name: 'nuhuh' });","123","  expect(updateGroup).not.toHaveBeenCalled();","124","});","125","","131","  expect(searchUsersGroups).toHaveBeenCalledWith({ p: 2, q: '' });","139","  expect(searchUsersGroups).toBeCalledWith({ q: 'foo' });","143","it('should handle edit modal', async () => {","144","  const editedGroup = mockGroup();","145","","146","  const wrapper = shallowRender();","147","  await waitAndUpdate(wrapper);","148","  expect(wrapper.state().editedGroup).toBeUndefined();","149","","150","  wrapper.instance().openEditForm(editedGroup);","151","  expect(wrapper.state().editedGroup).toEqual(editedGroup);","152","","153","  wrapper.instance().closeEditForm();","154","  expect(wrapper.state().editedGroup).toBeUndefined();","155","});","156","","157","it('should handle delete modal', async () => {","158","  const groupToBeDeleted = mockGroup();","159","","160","  const wrapper = shallowRender();","161","  await waitAndUpdate(wrapper);","162","  expect(wrapper.state().groupToBeDeleted).toBeUndefined();","163","","164","  wrapper.instance().openDeleteForm(groupToBeDeleted);","165","  expect(wrapper.state().groupToBeDeleted).toEqual(groupToBeDeleted);","166","","167","  wrapper.instance().closeDeleteForm();","168","  expect(wrapper.state().groupToBeDeleted).toBeUndefined();","169","});","170","","171","it('should refresh correctly', async () => {","172","  const wrapper = shallowRender();","173","","174","  await waitAndUpdate(wrapper);","175","","176","  const query = 'preserve me';","177","  wrapper.setState({ paging: { pageIndex: 2, pageSize: 2, total: 5 }, query });","178","","179","  (searchUsersGroups as jest.Mock).mockClear();","180","","181","  wrapper.instance().refresh();","182","  await waitAndUpdate(wrapper);","183","","184","  expect(searchUsersGroups).toHaveBeenNthCalledWith(1, { organization: undefined, q: query });","185","  expect(searchUsersGroups).toHaveBeenNthCalledWith(2, { organization: undefined, q: query, p: 2 });","186","});","187","","189","  return shallow<App>(<App {...props} \/>);"],"delete":["28","import { mockOrganization } from '..\/..\/..\/..\/helpers\/testMocks';","70","  expect(searchUsersGroups).toHaveBeenCalledWith({ organization: 'foo', q: '' });","81","  expect(wrapper.state('groups')).toHaveLength(3);","88","  wrapper.instance().handleDelete('Members');","91","  expect(wrapper.state('groups')).toHaveLength(1);","97","  wrapper.instance().handleEdit({ id: 1, description: 'foo', name: 'bar' });","114","  expect(searchUsersGroups).toHaveBeenCalledWith({ organization: 'foo', p: 2, q: '' });","122","  expect(searchUsersGroups).toBeCalledWith({ organization: 'foo', q: 'foo' });","127","  return shallow<App>(<App organization={mockOrganization()} {...props} \/>);"]}],"server\/sonar-web\/src\/main\/js\/api\/user_groups.ts":[{"add":["64","  organization?: string;","74","export function deleteGroup(data: { name: string; organization?: string }) {"],"delete":["64","  organization: string | undefined;","74","export function deleteGroup(data: { name: string; organization: string | undefined }) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":[{"add":["24","import { omitNil } from 'sonar-ui-common\/helpers\/request';","27","import DeleteForm from '.\/DeleteForm';","28","import Form from '.\/Form';","34","  editedGroup?: T.Group;","35","  groupToBeDeleted?: T.Group;","41","export default class App extends React.PureComponent<{}, State> {","68","  fetchGroups = async (data?: { p?: number; q?: string }) => {","69","    try {","70","      const { groups, paging } = await this.makeFetchGroupsRequest(data);","74","    } catch {","75","      this.stopLoading();","76","    }","79","  fetchMoreGroups = async () => {","80","    const { paging: currentPaging } = this.state;","81","    if (currentPaging && currentPaging.total > currentPaging.pageIndex * currentPaging.pageSize) {","82","      try {","83","        const { groups, paging } = await this.makeFetchGroupsRequest({","84","          p: currentPaging.pageIndex + 1","85","        });","93","      } catch {","94","        this.stopLoading();","95","      }","104","  refresh = async () => {","105","    const { paging, query } = this.state;","106","","107","    await this.fetchGroups({ q: query });","108","","109","    \/\/ reload all pages in order","110","    if (paging && paging.pageIndex > 1) {","111","      for (let p = 1; p < paging.pageIndex; p++) {","112","        await this.fetchMoreGroups();","113","      }","114","    }","117","  closeDeleteForm = () => {","118","    this.setState({ groupToBeDeleted: undefined });","121","  closeEditForm = () => {","122","    this.setState({ editedGroup: undefined });","125","  openDeleteForm = (group: T.Group) => {","126","    this.setState({ groupToBeDeleted: group });","127","  };","128","","129","  openEditForm = (group: T.Group) => {","130","    this.setState({ editedGroup: group });","131","  };","132","","133","  handleCreate = async (data: { description: string; name: string }) => {","134","    await createGroup({ ...data });","135","","136","    await this.refresh();","137","  };","138","","139","  handleDelete = async () => {","140","    const { groupToBeDeleted } = this.state;","141","","142","    if (!groupToBeDeleted) {","143","      return;","144","    }","145","","146","    await deleteGroup({ name: groupToBeDeleted.name });","147","","148","    await this.refresh();","149","","150","    if (this.mounted) {","151","      this.setState({ groupToBeDeleted: undefined });","152","    }","153","  };","154","","155","  handleEdit = async ({ name, description }: { name?: string; description: string }) => {","156","    const { editedGroup } = this.state;","157","","158","    if (!editedGroup) {","159","      return;","160","    }","161","","162","    const data = {","163","      description,","164","      id: editedGroup.id,","165","      \/\/ pass `name` only if it has changed, otherwise the WS fails","166","      ...omitNil({ name: name !== editedGroup.name ? name : undefined })","167","    };","168","","169","    await updateGroup(data);","170","","171","    if (this.mounted) {","172","      this.setState(({ groups = [] }: State) => ({","173","        editedGroup: undefined,","174","        groups: groups.map(group =>","175","          group.name === editedGroup.name ? { ...group, ...data } : group","176","        )","177","      }));","178","    }","182","    const { editedGroup, groupToBeDeleted, groups, loading, paging, query } = this.state;","184","    const showAnyone = 'anyone'.includes(query.toLowerCase());","191","          <Header onCreate={this.handleCreate} \/>","205","              onDelete={this.openDeleteForm}","206","              onEdit={this.openEditForm}","216","                loading={loading}","223","","224","          {groupToBeDeleted && (","225","            <DeleteForm","226","              group={groupToBeDeleted}","227","              onClose={this.closeDeleteForm}","228","              onSubmit={this.handleDelete}","229","            \/>","230","          )}","231","","232","          {editedGroup && (","233","            <Form","234","              confirmButtonText={translate('update_verb')}","235","              group={editedGroup}","236","              header={translate('groups.update_group')}","237","              onClose={this.closeEditForm}","238","              onSubmit={this.handleEdit}","239","            \/>","240","          )}"],"delete":["29","interface Props {","30","  organization?: Pick<T.Organization, 'key'>;","31","}","32","","40","export default class App extends React.PureComponent<Props, State> {","53","  get organization() {","54","    return this.props.organization && this.props.organization.key;","55","  }","56","","60","      organization: this.organization,","72","  fetchGroups = (data?: { p?: number; q?: string }) => {","73","    this.makeFetchGroupsRequest(data).then(({ groups, paging }) => {","77","    }, this.stopLoading);","80","  fetchMoreGroups = () => {","81","    const { paging } = this.state;","82","    if (paging && paging.total > paging.pageIndex * paging.pageSize) {","83","      this.makeFetchGroupsRequest({ p: paging.pageIndex + 1 }).then(({ groups, paging }) => {","91","      }, this.stopLoading);","100","  refresh = () => {","101","    this.fetchGroups({ q: this.state.query });","104","  handleCreate = (data: { description: string; name: string }) => {","105","    return createGroup({ ...data, organization: this.organization }).then(group => {","106","      if (this.mounted) {","107","        this.setState(({ groups = [] }: State) => ({","108","          groups: [...groups, group]","109","        }));","110","      }","111","    });","114","  handleDelete = (name: string) => {","115","    return deleteGroup({ name, organization: this.organization }).then(() => {","116","      if (this.mounted) {","117","        this.setState(({ groups = [] }: State) => ({","118","          groups: groups.filter(group => group.name !== name)","119","        }));","120","      }","121","    });","124","  handleEdit = (data: { description?: string; id: number; name?: string }) => {","125","    return updateGroup(data).then(() => {","126","      if (this.mounted) {","127","        this.setState(({ groups = [] }: State) => ({","128","          groups: groups.map(group => (group.id === data.id ? { ...group, ...data } : group))","129","        }));","130","      }","131","    });","135","    const { groups, loading, paging, query } = this.state;","137","    const showAnyone =","138","      this.props.organization === undefined && 'anyone'.includes(query.toLowerCase());","145","          <Header loading={loading} onCreate={this.handleCreate} \/>","159","              onDelete={this.handleDelete}","160","              onEdit={this.handleEdit}","162","              organization={this.organization}"]}]}},"1b9c1f105c34d97090bbd4966105ea132b17c3dc":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/ProjectsManagementPage.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/views\/BulkApplyTemplateView.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/search.js":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":[{"add":["23","import org.sonarqube.pageobjects.ProjectsManagementPage;","43","import org.sonarqube.tests.Tester;","44","import org.sonarqube.ws.client.permission.AddUserToTemplateWsRequest;","45","import org.sonarqube.ws.client.permission.CreateTemplateWsRequest;","46","import org.sonarqube.ws.client.permission.UsersWsRequest;","67","  public Tester tester = new Tester(orchestrator);","78","    adminUser = tester.users().generateAdministrator().getLogin();","203","  @Test","204","  public void bulk_apply_permission_template() {","205","    String project = tester.projects().generate(null).getKey();","206","    String user = tester.users().generate().getLogin();","207","    tester.wsClient().permissions().createTemplate(new CreateTemplateWsRequest().setName(\"foo-template\"));","208","    tester.wsClient().permissions().addUserToTemplate(","209","      new AddUserToTemplateWsRequest()","210","        .setPermission(\"admin\")","211","        .setTemplateName(\"foo-template\")","212","        .setLogin(user));","213","    ProjectsManagementPage page = nav.logIn().submitCredentials(adminUser).openProjectsManagement();","214","    page.shouldHaveProject(project);","215","    page.bulkApplyPermissionTemplate(\"foo-template\");","216","    assertThat(tester.wsClient().permissions().users(new UsersWsRequest()","217","      .setProjectKey(project)","218","      .setPermission(\"admin\")","219","    ).getUsers(0).getLogin()).isEqualTo(user);","220","  }","221",""],"delete":["42","import util.user.UserRule;","63","  public UserRule userRule = UserRule.from(orchestrator);","74","    adminUser = userRule.createAdminUser();","218",""]}],"tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/ProjectsManagementPage.java":[{"add":["21","import com.codeborne.selenide.CollectionCondition;","22","","52","","53","  public ProjectsManagementPage bulkApplyPermissionTemplate(String template) {","54","    $(\".js-bulk-apply-permission-template\").should(exist).click();","55","    $(\".modal .select2-choice\").should(exist).click();","56","    $$(\".select2-results li\")","57","      .shouldHave(CollectionCondition.sizeGreaterThan(0))","58","      .findBy(text(\"foo-template\")).should(exist).click();","59","    $(\".modal .js-apply\").should(exist).click();","60","    return this;","61","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/views\/BulkApplyTemplateView.js":[{"add":["75","    selection.forEach(projectKey => {","76","      const data = { templateId: permissionTemplate, projectKey };"],"delete":["75","    selection.forEach(projectId => {","76","      const data = { templateId: permissionTemplate, projectId };"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/search.js":[{"add":["158","                <button","159","                  className=\"spacer-right js-bulk-apply-permission-template\"","160","                  onClick={this.bulkApplyTemplate}>"],"delete":["158","                <button className=\"spacer-right\" onClick={this.bulkApplyTemplate}>"]}]}},"bf04befb58c2208d7b535ab87a1e7a62df2f4030":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":[{"add":["123","      email: this.state.email,"],"delete":["123","      email: this.state.email || undefined,"]}]}},"a4bb18bf2e7dee17af8ae2974f47a9f8909a638b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["183","    } else if (","184","      !this.state.openIssue &&","185","      (prevState.selected !== this.state.selected || prevState.openIssue != null)","186","    ) {","187","      \/\/ if user simply selected another issue","188","      \/\/ or if he went from the source code back to the list of issues","189","      this.scrollToSelectedIssue();"],"delete":["183","    } else if (prevState.selected !== this.state.selected) {","184","      if (!this.state.openIssue) {","185","        this.scrollToSelectedIssue();","186","      }"]}]}},"fd961a51b94ebcc2811e833a683ca2a538cace02":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2317","overview.project.no_lines_of_code=This project as no lines of code.","2318","overview.project.empty=This project is empty.","2319",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.tsx":[{"add":["176","    const { component } = this.props;","177","    const isProject = component.qualifier === 'TRK';","183","            ? translate(isProject ? 'overview.project.empty' : 'portfolio.app.empty')","184","            : translate(","185","                isProject ? 'overview.project.no_lines_of_code' : 'portfolio.app.no_lines_of_code'","186","              )}"],"delete":["181","            ? translate('portfolio.app.empty')","182","            : translate('portfolio.app.no_lines_of_code')}"]}]}},"cb17989ed82948611a3bf912a9fbe4f9713073f5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":[{"add":["79","  handleTransition = (issue \/*: Issue *\/) => {","80","    this.props.onChange(issue);","81","    if (['FALSE-POSITIVE', 'WONTFIX'].includes(issue.resolution)) {","82","      this.toggleComment(true, translate('issue.comment.tell_why'));","83","    }","84","  };","85","","123","                    onChange={this.handleTransition}"],"delete":["54","  componentDidUpdate(prevProps \/*: Props *\/) {","55","    const { resolution } = this.props.issue;","56","    if (!prevProps.issue.resolution && ['FALSE-POSITIVE', 'WONTFIX'].includes(resolution)) {","57","      this.toggleComment(true, translate('issue.comment.tell_why'));","58","    }","59","  }","60","","123","                    onChange={this.props.onChange}"]}]}},"b3cf89af7b9fede43d0b23739b28dc762eb3e2ad":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingListener.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingResult.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingListener.java":[{"add":["38","        throw new IllegalStateException(String.format(\"Unrecoverable indexation failures: %d errors among %d requests\", result.getFailures(), result.getTotal()));"],"delete":["38","        throw new IllegalStateException(\"Unrecoverable indexation failures\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingResult.java":[{"add":["26","  final AtomicLong total = new AtomicLong(0L);","27","  private final AtomicLong successes = new AtomicLong(0L);","31","    successes.set(0L);","40","    successes.incrementAndGet();","46","    successes.addAndGet(other.successes.get());","50","    return total.get() - successes.get();","58","    return successes.get();","62","    return total.get() == 0 ? 1.0 : ((1.0 * successes.get()) \/ total.get());","66","    return total.get() == successes.get();"],"delete":["26","  AtomicLong total = new AtomicLong(0L);","27","  private long successes = 0L;","31","    successes = 0L;","40","    successes += 1;","46","    successes += other.successes;","50","    return total.get() - successes;","58","    return successes;","62","    return total.get() == 0 ? 1.0 : ((1.0 * successes) \/ total.get());","66","    return total.get() == successes;"]}]}},"4c9807a6d016bd7da4419f21c8a736f5f014493d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/__snapshots__\/utils-test.js.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/utils-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/__snapshots__\/utils-test.js.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.js":[{"add":["34","  function putProfile(profile = null, depth = 1) {","44","  sorted","45","    .filter(","46","      profile => profile.parentKey == null || sorted.find(p => p.key === profile.parentKey) == null","47","    )","48","    .forEach(profile => putProfile(profile));"],"delete":["34","  function putProfile(profile = null, depth = 0) {","44","  putProfile();"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/utils-test.js":[{"add":["30","    expect(sortProfiles([profile1, profile2, profile3])).toMatchSnapshot();","37","    expect(sortProfiles([profile3, profile1, profile2])).toMatchSnapshot();","44","    expect(sortProfiles([child1, child2, parent])).toMatchSnapshot();","51","    expect(sortProfiles([profile3, profile2, profile1])).toMatchSnapshot();","52","  });","53","","54","  it('sorts partial set of inherited profiles', () => {","55","    const foo = createProfile('foo', 'bar');","56","    expect(sortProfiles([foo]), ['foo']);","57","","58","    const profile1 = createProfile('profile1', 'x');","59","    const profile2 = createProfile('profile2');","60","    const profile3 = createProfile('profile3', 'profile2');","61","    expect(sortProfiles([profile1, profile2, profile3])).toMatchSnapshot();"],"delete":["25","function checkOrder(list, order) {","26","  const listKeys = list.map(item => item.key);","27","  expect(listKeys).toEqual(order);","28","}","29","","35","    checkOrder(sortProfiles([profile1, profile2, profile3]), ['profile1', 'profile2', 'profile3']);","42","    checkOrder(sortProfiles([profile3, profile1, profile2]), ['profile1', 'profile2', 'profile3']);","49","    checkOrder(sortProfiles([child1, child2, parent]), ['parent', 'child1', 'child2']);","56","    checkOrder(sortProfiles([profile3, profile2, profile1]), ['profile1', 'profile3', 'profile2']);"]}]}},"81f6a5ff6a1b372fa401d31e98de2e50600a7cbe":{"changes":{"server\/sonar-vsts\/package.json":"MODIFY","server\/sonar-vsts\/yarn.lock":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-docs\/package.json":"MODIFY","server\/sonar-docs\/yarn.lock":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY"},"diff":{"server\/sonar-vsts\/package.json":[{"add":["10","    \"lodash\": \"4.17.15\",","31","    \"@types\/lodash\": \"4.14.138\","],"delete":["10","    \"lodash\": \"4.17.11\",","31","    \"@types\/lodash\": \"4.14.123\","]}],"server\/sonar-vsts\/yarn.lock":[{"add":["1052","\"@types\/lodash@4.14.138\":","1053","  version \"4.14.138\"","1054","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.138.tgz#34f52640d7358230308344e579c15b378d91989e\"","1055","  integrity sha1-NPUmQNc1gjAwg0TlecFbN42RmJ4=","5958","lodash@4.17.15, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.13, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.3.0:"],"delete":["1052","\"@types\/lodash@4.14.123\":","1053","  version \"4.14.123\"","1054","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.123.tgz#39be5d211478c8dd3bdae98ee75bb7efe4abfe4d\"","1055","  integrity sha1-Ob5dIRR4yN072umO51u37+Sr\/k0=","5958","lodash@4.17.11, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.3.0:","5959","  version \"4.17.11\"","5960","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.11.tgz#b39ea6229ef607ecd89e2c8df12536891cac9b8d\"","5961","  integrity sha1-s56mIp72B+zYniyN8SU2iRysm40=","5962","","5963","lodash@^4.17.13:"]}],"server\/sonar-web\/package.json":[{"add":["17","    \"lodash\": \"4.17.15\",","62","    \"@types\/lodash\": \"4.14.138\","],"delete":["17","    \"lodash\": \"4.17.11\",","62","    \"@types\/lodash\": \"4.14.123\","]}],"server\/sonar-docs\/package.json":[{"add":["17","    \"lodash\": \"4.17.15\",","29","    \"@types\/lodash\": \"4.14.138\","],"delete":["17","    \"lodash\": \"4.17.11\",","29","    \"@types\/lodash\": \"4.14.123\","]}],"server\/sonar-docs\/yarn.lock":[{"add":["1177","\"@types\/lodash@4.14.138\":","1178","  version \"4.14.138\"","1179","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.138.tgz#34f52640d7358230308344e579c15b378d91989e\"","1180","  integrity sha1-NPUmQNc1gjAwg0TlecFbN42RmJ4=","7582","lodash@4.17.15, lodash@^4.11.1, lodash@^4.13.1, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:","7583","  version \"4.17.15\"","7584","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.15.tgz#b447f6670a0455bbfeedd11392eff330ea097548\"","7585","  integrity sha1-tEf2ZwoEVbv+7dETku\/zMOoJdUg="],"delete":["1177","\"@types\/lodash@4.14.123\":","1178","  version \"4.14.123\"","1179","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.123.tgz#39be5d211478c8dd3bdae98ee75bb7efe4abfe4d\"","1180","  integrity sha1-Ob5dIRR4yN072umO51u37+Sr\/k0=","7582","lodash@4.17.11, lodash@^4.11.1, lodash@^4.13.1, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:","7583","  version \"4.17.11\"","7584","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.11.tgz#b39ea6229ef607ecd89e2c8df12536891cac9b8d\"","7585","  integrity sha1-s56mIp72B+zYniyN8SU2iRysm40="]}],"server\/sonar-web\/yarn.lock":[{"add":["1149","\"@types\/lodash@4.14.138\":","1150","  version \"4.14.138\"","1151","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.138.tgz#34f52640d7358230308344e579c15b378d91989e\"","1152","  integrity sha1-NPUmQNc1gjAwg0TlecFbN42RmJ4=","6470","lodash@4.17.15, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.13, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:"],"delete":["1149","\"@types\/lodash@4.14.123\":","1150","  version \"4.14.123\"","1151","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.123.tgz#39be5d211478c8dd3bdae98ee75bb7efe4abfe4d\"","1152","  integrity sha1-Ob5dIRR4yN072umO51u37+Sr\/k0=","6470","lodash@4.17.11, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:","6471","  version \"4.17.11\"","6472","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.11.tgz#b39ea6229ef607ecd89e2c8df12536891cac9b8d\"","6473","  integrity sha1-s56mIp72B+zYniyN8SU2iRysm40=","6474","","6475","lodash@^4.17.13:"]}]}},"a9a04c4793e1909eb96a489d4ab56c43aca44427":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigator.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["63","  displayLocationMarkers?: boolean;","148","    displayLocationMarkers: true,","608","        displayLocationMarkers={this.props.displayLocationMarkers}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":[{"add":["43","    displayLocationMarkers?: boolean;","159","        displayLocationMarkers={this.props.displayLocationMarkers}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":[{"add":["43","  displayLocationMarkers?: boolean;","151","          displayLocationMarkers={this.props.displayLocationMarkers}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigator.js":[{"add":["51","    if (locations == null || locations.length === 0 || locations.every(location => !location.msg)) {"],"delete":["51","    if (locations == null || locations.length === 0) {"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":[{"add":["36","  displayLocationMarkers?: boolean,","206","      if (this.props.displayLocationMarkers && token.markers.length > 0) {"],"delete":["205","      if (token.markers.length > 0) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.js":[{"add":["103","    const allMessagesEmpty = locations != null && locations.every(location => !location.msg);","104","","114","          displayLocationMarkers={!allMessagesEmpty}"],"delete":[]}]}},"d13e2d9a08ea6fc3cb29bcf4add0c4f2f12cc3b8":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportUnitTestMeasuresStepTest.java":"MODIFY","tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/SaveMeasureOnModulePlugin.java":"ADD","tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/sonar-project.properties":"ADD","tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/formula\/ReportFormulaExecutorComponentVisitorTest.java":"MODIFY","settings.gradle":"MODIFY","tests\/build.gradle":"MODIFY","tests\/projects\/analysis\/xoo-module-b-without-source\/module_b\/sonar-project.properties":"ADD","tests\/projects\/analysis\/xoo-module-b-without-source\/sonar-project.properties":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/ProjectMeasureTest.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category3Suite.java":"MODIFY","tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/ModuleMeasureSensor.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/UnitTestMeasuresStep.java":"MODIFY","tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo.measures":"ADD","tests\/plugins\/save-measure-on-project-plugin\/build.gradle":"ADD"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportUnitTestMeasuresStepTest.java":[{"add":["115","  public void aggregate_skipped_tests() {","260","  @Test","261","  public void aggregate_measures_when_tests_measures_are_defined_on_directory() {","262","    treeRootHolder.setRoot(builder(PROJECT, ROOT_REF)","263","      .addChildren(","264","        builder(MODULE, MODULE_REF)","265","          .addChildren(","266","            builder(DIRECTORY, DIRECTORY_REF).build())","267","          .build())","268","      .build());","269","    measureRepository.addRawMeasure(DIRECTORY_REF, TESTS_KEY, newMeasureBuilder().create(10));","270","    measureRepository.addRawMeasure(DIRECTORY_REF, TEST_ERRORS_KEY, newMeasureBuilder().create(2));","271","    measureRepository.addRawMeasure(DIRECTORY_REF, TEST_FAILURES_KEY, newMeasureBuilder().create(1));","272","    measureRepository.addRawMeasure(DIRECTORY_REF, SKIPPED_TESTS_KEY, newMeasureBuilder().create(5));","273","    measureRepository.addRawMeasure(DIRECTORY_REF, TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L));","274","","275","    underTest.execute();","276","","277","    assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).containsOnly(","278","      entryOf(TESTS_KEY, newMeasureBuilder().create(10)),","279","      entryOf(TEST_ERRORS_KEY, newMeasureBuilder().create(2)),","280","      entryOf(TEST_FAILURES_KEY, newMeasureBuilder().create(1)),","281","      entryOf(SKIPPED_TESTS_KEY, newMeasureBuilder().create(5)),","282","      entryOf(TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L)),","283","      entryOf(TEST_SUCCESS_DENSITY_KEY, newMeasureBuilder().create(70d, 1)));","284","    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(","285","      entryOf(TESTS_KEY, newMeasureBuilder().create(10)),","286","      entryOf(TEST_ERRORS_KEY, newMeasureBuilder().create(2)),","287","      entryOf(TEST_FAILURES_KEY, newMeasureBuilder().create(1)),","288","      entryOf(SKIPPED_TESTS_KEY, newMeasureBuilder().create(5)),","289","      entryOf(TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L)),","290","      entryOf(TEST_SUCCESS_DENSITY_KEY, newMeasureBuilder().create(70d, 1)));","291","  }","292","","293","  @Test","294","  public void compute_test_success_density_measure_when_tests_measures_are_defined_at_project_level_and_no_children() {","295","    treeRootHolder.setRoot(builder(PROJECT, ROOT_REF).build());","296","    measureRepository.addRawMeasure(ROOT_REF, TESTS_KEY, newMeasureBuilder().create(10));","297","    measureRepository.addRawMeasure(ROOT_REF, TEST_ERRORS_KEY, newMeasureBuilder().create(2));","298","    measureRepository.addRawMeasure(ROOT_REF, TEST_FAILURES_KEY, newMeasureBuilder().create(1));","299","    measureRepository.addRawMeasure(ROOT_REF, SKIPPED_TESTS_KEY, newMeasureBuilder().create(5));","300","    measureRepository.addRawMeasure(ROOT_REF, TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L));","301","","302","    underTest.execute();","303","","304","    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(","305","      entryOf(TEST_SUCCESS_DENSITY_KEY, newMeasureBuilder().create(70d, 1)));","306","  }","307",""],"delete":["115","  public void aggregate_skipped_tests_time() {"]}],"tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/SaveMeasureOnModulePlugin.java":[{"add":[],"delete":[]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/sonar-project.properties":[{"add":[],"delete":[]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/formula\/ReportFormulaExecutorComponentVisitorTest.java":[{"add":["25","import org.junit.rules.ExpectedException;","51","import static org.sonar.test.ExceptionCauseMatcher.hasType;","83","  public ExpectedException expectedException = ExpectedException.none();","84","  @Rule","217","  @Test","218","  public void compute_measure_on_project_without_children() {","219","    ReportComponent root = builder(PROJECT, ROOT_REF).build();","220","    treeRootHolder.setRoot(root);","221","    measureRepository.addRawMeasure(ROOT_REF, LINES_KEY, newMeasureBuilder().create(10));","222","","223","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","224","      .visit(root);","225","","226","    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(entryOf(NCLOC_KEY, newMeasureBuilder().create(10)));","227","  }","228","","229","  @Test","230","  public void ignore_measure_defined_on_project_when_measure_is_defined_on_leaf() {","231","    ReportComponent root = builder(PROJECT, ROOT_REF)","232","      .addChildren(","233","        builder(Component.Type.FILE, FILE_1_REF).build())","234","      .build();","235","    treeRootHolder.setRoot(root);","236","    measureRepository.addRawMeasure(ROOT_REF, LINES_KEY, newMeasureBuilder().create(10));","237","    measureRepository.addRawMeasure(FILE_1_REF, LINES_KEY, newMeasureBuilder().create(2));","238","","239","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","240","      .visit(root);","241","","242","    assertAddedRawMeasure(ROOT_REF, 2);","243","    assertAddedRawMeasure(FILE_1_REF, 2);","244","  }","245","","246","  @Test","247","  public void fail_when_trying_to_compute_file_measure_already_existing_in_report() {","248","    ReportComponent root = builder(PROJECT, ROOT_REF)","249","      .addChildren(","250","        builder(Component.Type.FILE, FILE_1_REF).build())","251","      .build();","252","    treeRootHolder.setRoot(root);","253","    measureRepository.addRawMeasure(FILE_1_REF, NCLOC_KEY, newMeasureBuilder().create(2));","254","","255","    expectedException.expectCause(hasType(UnsupportedOperationException.class)","256","      .andMessage(String.format(\"A measure can only be set once for Component (ref=%s), Metric (key=%s)\", FILE_1_REF, NCLOC_KEY)));","257","","258","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","259","      .visit(root);","260","  }","261","","262","  @Test","263","  public void fail_on_project_without_children_already_having_computed_measure() {","264","    ReportComponent root = builder(PROJECT, ROOT_REF).build();","265","    treeRootHolder.setRoot(root);","266","    measureRepository.addRawMeasure(ROOT_REF, NCLOC_KEY, newMeasureBuilder().create(10));","267","","268","    expectedException.expectCause(hasType(UnsupportedOperationException.class)","269","      .andMessage(String.format(\"A measure can only be set once for Component (ref=%s), Metric (key=%s)\", ROOT_REF, NCLOC_KEY)));","270","","271","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","272","      .visit(root);","273","  }","274","","275","  @Test","276","  public void fail_on_project_containing_module_without_children_already_having_computed_measure() {","277","    ReportComponent root = builder(PROJECT, ROOT_REF)","278","      .addChildren(","279","        ReportComponent.builder(MODULE, MODULE_1_REF).build(),","280","        builder(Component.Type.FILE, FILE_1_REF).build())","281","      .build();","282","    treeRootHolder.setRoot(root);","283","    measureRepository.addRawMeasure(FILE_1_REF, LINES_KEY, newMeasureBuilder().create(10));","284","    \/\/ Ncloc is already computed on module","285","    measureRepository.addRawMeasure(MODULE_1_REF, NCLOC_KEY, newMeasureBuilder().create(3));","286","","287","    expectedException.expectCause(hasType(UnsupportedOperationException.class)","288","      .andMessage(String.format(\"A measure can only be set once for Component (ref=%s), Metric (key=%s)\", MODULE_1_REF, NCLOC_KEY)));","289","","290","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","291","      .visit(root);","292","  }","293",""],"delete":[]}],"settings.gradle":[{"add":["52","include 'tests:plugins:save-measure-on-project-plugin'"],"delete":[]}],"tests\/build.gradle":[{"add":["13","    ':tests:plugins:backdating-plugin-v1',","14","    ':tests:plugins:backdating-plugin-v2',","15","    ':tests:plugins:backdating-customplugin',","28","    ':tests:plugins:posttask-plugin',","32","    ':tests:plugins:save-measure-on-project-plugin',","41","    ':tests:plugins:ws-plugin'"],"delete":["35","    ':tests:plugins:posttask-plugin',","37","    ':tests:plugins:ws-plugin',","38","    ':tests:plugins:backdating-plugin-v1',","39","    ':tests:plugins:backdating-plugin-v2',","40","    ':tests:plugins:backdating-customplugin'"]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_b\/sonar-project.properties":[{"add":[],"delete":[]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/sonar-project.properties":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/ProjectMeasureTest.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category3Suite.java":[{"add":["34","import org.sonarqube.tests.analysis.ProjectMeasureTest;","69","  RedirectTest.class,","70","  ProjectMeasureTest.class","94","    \/\/ used by ProjectWithoutSourceTest","95","    .addPlugin(pluginArtifact(\"save-measure-on-project-plugin\"))","96","","97","    .setServerProperty(\"sonar.ce.javaAdditionalOpts\", \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\")","98",""],"delete":["68","  RedirectTest.class"]}],"tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/ModuleMeasureSensor.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/UnitTestMeasuresStep.java":[{"add":["32","import org.sonar.server.computation.task.projectanalysis.formula.counter.LongSumCounter;","50","  private static final String[] METRICS = new String[] {TESTS_KEY, TEST_ERRORS_KEY, TEST_FAILURES_KEY, SKIPPED_TESTS_KEY, TEST_SUCCESS_DENSITY_KEY, TEST_EXECUTION_TIME_KEY};","52","  private static final ImmutableList<Formula> FORMULAS = ImmutableList.of(new UnitTestsFormula());","81","      Component leaf = counter.getLeaf();","84","          return createIntMeasure(context.getComponent(), leaf, counter.testsCounter.getValue());","86","          return createIntMeasure(context.getComponent(), leaf, counter.testsErrorsCounter.getValue());","88","          return createIntMeasure(context.getComponent(), leaf, counter.testsFailuresCounter.getValue());","89","        case SKIPPED_TESTS_KEY:","90","          return createIntMeasure(context.getComponent(), leaf, counter.skippedTestsCounter.getValue());","91","        case TEST_EXECUTION_TIME_KEY:","92","          return createLongMeasure(context.getComponent(), leaf, counter.testExecutionTimeCounter.getValue());","100","    private static Optional<Measure> createIntMeasure(Component currentComponent, Component leafComponent, Optional<Integer> metricValue) {","101","      if (metricValue.isPresent() && leafComponent.getType().isDeeperThan(currentComponent.getType())) {","102","        return Optional.of(Measure.newMeasureBuilder().create(metricValue.get()));","103","      }","104","      return Optional.absent();","105","    }","106","","107","    private static Optional<Measure> createLongMeasure(Component currentComponent, Component leafComponent, Optional<Long> metricValue) {","108","      if (metricValue.isPresent() && leafComponent.getType().isDeeperThan(currentComponent.getType())) {","142","    private final IntSumCounter skippedTestsCounter = new IntSumCounter(SKIPPED_TESTS_KEY);","143","    private final LongSumCounter testExecutionTimeCounter = new LongSumCounter(TEST_EXECUTION_TIME_KEY);","144","","145","    private Component leaf;","152","      skippedTestsCounter.aggregate(counter.skippedTestsCounter);","153","      testExecutionTimeCounter.aggregate(counter.testExecutionTimeCounter);","158","      this.leaf = context.getLeaf();","162","      skippedTestsCounter.initialize(context);","163","      testExecutionTimeCounter.initialize(context);","164","    }","165","","166","    Component getLeaf() {","167","      return leaf;"],"delete":["24","import org.sonar.server.computation.task.projectanalysis.component.CrawlerDepthLimit;","44","import static org.sonar.server.computation.task.projectanalysis.formula.SumFormula.createIntSumFormula;","45","import static org.sonar.server.computation.task.projectanalysis.formula.SumFormula.createLongSumFormula;","52","  private static final String[] METRICS = new String[] {TESTS_KEY, TEST_ERRORS_KEY, TEST_FAILURES_KEY, TEST_SUCCESS_DENSITY_KEY};","54","  private static final ImmutableList<Formula> FORMULAS = ImmutableList.of(","55","    createLongSumFormula(TEST_EXECUTION_TIME_KEY),","56","    createIntSumFormula(SKIPPED_TESTS_KEY),","57","    new UnitTestsFormula());","88","          return createMeasure(context.getComponent().getType(), counter.testsCounter.getValue());","90","          return createMeasure(context.getComponent().getType(), counter.testsErrorsCounter.getValue());","92","          return createMeasure(context.getComponent().getType(), counter.testsFailuresCounter.getValue());","100","    private static Optional<Measure> createMeasure(Component.Type componentType, Optional<Integer> metricValue) {","101","      if (metricValue.isPresent() && CrawlerDepthLimit.LEAVES.isDeeperThan(componentType)) {"]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo.measures":[{"add":[],"delete":[]}],"tests\/plugins\/save-measure-on-project-plugin\/build.gradle":[{"add":[],"delete":[]}]}}}