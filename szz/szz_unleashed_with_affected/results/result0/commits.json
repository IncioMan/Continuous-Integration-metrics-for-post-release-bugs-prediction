{"100653f76e52f1555ce9424924031acdeb941888":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":[{"add":["116","","117","    long executionTimeInMs = 0L;","123","      executionTimeInMs = updateExecutionFields(activityDto);","127","    } finally {","128","      updateQueueStatus(status, executionTimeInMs);","129","    }","130","  }","131","","132","  private void updateQueueStatus(CeActivityDto.Status status, long executionTimeInMs) {","133","    if (status == CeActivityDto.Status.SUCCESS) {","134","      queueStatus.addSuccess(executionTimeInMs);","135","    } else {","136","      queueStatus.addError(executionTimeInMs);","179","  private long updateExecutionFields(CeActivityDto activityDto) {","182","      return 0L;","184","    long now = system2.now();","185","    long executionTimeInMs = now - startedAt;","186","    activityDto.setExecutedAt(now);","188","    return executionTimeInMs;","198","        updateExecutionFields(activityDto);"],"delete":["121","      updateQueueStatus(status, activityDto);","167","  private void updateQueueStatus(CeActivityDto.Status status, CeActivityDto activityDto) {","170","      return;","172","    activityDto.setExecutedAt(system2.now());","173","    long executionTimeInMs = activityDto.getExecutedAt() - startedAt;","175","    if (status == CeActivityDto.Status.SUCCESS) {","176","      queueStatus.addSuccess(executionTimeInMs);","177","    } else {","178","      queueStatus.addError(executionTimeInMs);","179","    }","189","        updateQueueStatus(CeActivityDto.Status.CANCELED, activityDto);"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":[{"add":["56","import static org.assertj.core.api.Assertions.fail;","57","import static org.mockito.ArgumentMatchers.anyLong;","59","import static org.mockito.Mockito.verify;","60","import static org.mockito.Mockito.verifyZeroInteractions;","251","  @Test","252","  public void remove_updates_queueStatus_success_even_if_task_does_not_exist_in_DB() {","253","    CEQueueStatus queueStatus = mock(CEQueueStatus.class);","254","","255","    CeTask task = submit(CeTaskTypes.REPORT, \"PROJECT_1\");","256","    db.getDbClient().ceQueueDao().deleteByUuid(db.getSession(), task.getUuid());","257","    db.commit();","258","","259","    InternalCeQueueImpl underTest = new InternalCeQueueImpl(system2, db.getDbClient(), null, queueStatus, null, null);","260","","261","    try {","262","      underTest.remove(task, CeActivityDto.Status.SUCCESS, null, null);","263","      fail(\"remove should have thrown a IllegalStateException\");","264","    } catch (IllegalStateException e) {","265","      verify(queueStatus).addSuccess(anyLong());","266","    }","267","  }","268","","269","  @Test","270","  public void remove_updates_queueStatus_failure_even_if_task_does_not_exist_in_DB() {","271","    CEQueueStatus queueStatusMock = mock(CEQueueStatus.class);","272","","273","    CeTask task = submit(CeTaskTypes.REPORT, \"PROJECT_1\");","274","    db.getDbClient().ceQueueDao().deleteByUuid(db.getSession(), task.getUuid());","275","    db.commit();","276","    InternalCeQueueImpl underTest = new InternalCeQueueImpl(system2, db.getDbClient(), null, queueStatusMock, null, null);","277","","278","    try {","279","      underTest.remove(task, CeActivityDto.Status.FAILED, null, null);","280","      fail(\"remove should have thrown a IllegalStateException\");","281","    } catch (IllegalStateException e) {","282","      verify(queueStatusMock).addError(anyLong());","283","    }","284","  }","285","","286","  @Test","287","  public void cancelWornOuts_does_not_update_queueStatus() {","288","    CEQueueStatus queueStatusMock = mock(CEQueueStatus.class);","289","","290","    CeTask task = submit(CeTaskTypes.REPORT, \"PROJECT_1\");","291","    db.executeUpdateSql(\"update ce_queue set status = 'PENDING', started_at = 123 where uuid = '\" + task.getUuid() + \"'\");","292","    db.commit();","293","    InternalCeQueueImpl underTest = new InternalCeQueueImpl(system2, db.getDbClient(), null, queueStatusMock, null, null);","294","","295","    underTest.cancelWornOuts();","296","","297","    assertThat(db.getDbClient().ceActivityDao().selectByUuid(db.getSession(), task.getUuid())).isPresent();","298","    verifyZeroInteractions(queueStatusMock);","299","  }","300",""],"delete":[]}]}},"34fece43c543cd2d3cd8e76a9af188f12cf69c39":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1977","projects_role.issueadmin.desc=Change the type and severity of issues, resolve issues as being \"won't fix\" or \"false-positive\" (users also need \"Browse\" permission).","1979","projects_role.user.desc=Access a project, browse its measures and issues, confirm or resolve issues as \"fixed\", change the assignee, comment on issues and change tags."],"delete":["1977","projects_role.issueadmin.desc=Perform advanced editing on issues: marking an issue False Positive \/ Won't Fix, and changing an Issue's severity. (Users will also need \"Browse\" permission)","1979","projects_role.user.desc=Access a project, browse its measures, and create\/edit issues for it."]}]}},"34a0bc1a4e14e13a7d40a410b268d6ea7b0f3a40":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavPlus.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNavPlus-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/GlobalNavPlus-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavPlus.tsx":[{"add":["35","  appState: Pick<T.AppState, 'branchesEnabled' | 'qualifiers'>;","58","    this.fetchAlmBindings();","81","    const {","82","      appState: { branchesEnabled },","83","      currentUser","84","    } = this.props;","85","    const canCreateProject = hasGlobalPermission(currentUser, 'provisioning');","86","","87","    \/\/ getAlmSettings requires branchesEnabled","88","    if (!canCreateProject || !branchesEnabled) {","89","      return;","90","    }","91","","145","          onOpen={this.fetchAlmBindings}"],"delete":["35","  appState: Pick<T.AppState, 'qualifiers'>;","58","    if (hasGlobalPermission(this.props.currentUser, 'provisioning')) {","59","      this.fetchAlmBindings();","60","    }","136","          onOpen={canCreateProject ? this.fetchAlmBindings : undefined}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNavPlus-test.tsx.snap":[{"add":["2","exports[`should render correctly if branches not enabled 1`] = `","3","<Fragment>","4","  <Dropdown","5","    onOpen={[Function]}","6","    overlay={","7","      <GlobalNavPlusMenu","8","        canCreateApplication={false}","9","        canCreatePortfolio={false}","10","        canCreateProject={true}","11","        compatibleAlms={Array []}","12","        onComponentCreationClick={[Function]}","13","      \/>","14","    }","15","    tagName=\"li\"","16","  >","17","    <a","18","      className=\"navbar-icon navbar-plus\"","19","      href=\"#\"","20","      title=\"my_account.create_new_project_portfolio_or_application\"","21","    >","22","      <PlusIcon \/>","23","    <\/a>","24","  <\/Dropdown>","25","<\/Fragment>","26","`;","27",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/GlobalNavPlus-test.tsx":[{"add":["53","  const wrapper = shallowRender([], {});","59","it('should render correctly if branches not enabled', async () => {","60","  const wrapper = shallowRender([PROJECT_CREATION_RIGHT], { branchesEnabled: false });","61","  await waitAndUpdate(wrapper);","62","  expect(wrapper).toMatchSnapshot();","63","  expect(getAlmSettings).not.toBeCalled();","64","});","65","","68","    shallowRender([APP_CREATION_RIGHT, PORTFOLIO_CREATION_RIGHT, PROJECT_CREATION_RIGHT], {})","73","    { enableGovernance: true }","86","  const wrapper = shallowRender([PROJECT_CREATION_RIGHT], {});","95","  const wrapper = shallowRender([PORTFOLIO_CREATION_RIGHT], { enableGovernance: true });","112","  const wrapper = shallowRender([], { enableGovernance: true });","129","function shallowRender(","130","  permissions: string[] = [],","131","  { enableGovernance = false, branchesEnabled = true }","132",") {","135","      appState={{","136","        branchesEnabled,","137","        qualifiers: enableGovernance ? [ComponentQualifier.Portfolio] : []","138","      }}"],"delete":["53","  const wrapper = shallowRender();","61","    shallowRender([APP_CREATION_RIGHT, PORTFOLIO_CREATION_RIGHT, PROJECT_CREATION_RIGHT])","66","    true","79","  const wrapper = shallowRender([PROJECT_CREATION_RIGHT]);","88","  const wrapper = shallowRender([PORTFOLIO_CREATION_RIGHT], true);","105","  const wrapper = shallowRender([], true);","122","function shallowRender(permissions: string[] = [], enableGovernance = false) {","125","      appState={{ qualifiers: enableGovernance ? [ComponentQualifier.Portfolio] : [] }}"]}]}},"fecabb60a6737406700e07e274f14cd75af7fba7":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/charset\/MssqlMetadataReader.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/charset\/MssqlMetadataReader.java":[{"add":["27","class MssqlMetadataReader {","30","  MssqlMetadataReader(SqlExecutor sqlExecutor) {","34","  String getDefaultCollation(Connection connection) throws SQLException {","38","  List<ColumnDef> getColumnDefs(Connection connection) throws SQLException {","47","  List<MssqlCharsetHandler.ColumnIndex> getColumnIndices(Connection connection, ColumnDef column) throws SQLException {"],"delete":["27","public class MssqlMetadataReader {","30","  public MssqlMetadataReader(SqlExecutor sqlExecutor) {","34","  public String getDefaultCollation(Connection connection) throws SQLException {","38","  public List<ColumnDef> getColumnDefs(Connection connection) throws SQLException {","47","  public List<MssqlCharsetHandler.ColumnIndex> getColumnIndices(Connection connection, ColumnDef column) throws SQLException {"]}]}},"62d76a285dc86c756fddeb63a0b073f11ee46f25":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotList-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":[{"add":["21","    total={0}","44","    total={0}","68","    total={0}","336","    total={5}","351","    hotspots.list_title.TO_REVIEW.7"],"delete":["347","    hotspots.list_title.TO_REVIEW.5"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotList-test.tsx":[{"add":["55","  expect(shallowRender({ hotspots, hotspotsTotal: hotspots.length })).toMatchSnapshot(","56","    'no pagination'","57","  );","85","      hotspotsTotal={0}"],"delete":["55","  expect(shallowRender({ hotspots })).toMatchSnapshot('no pagination');"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":[{"add":["57","  hotspotsTotal: number;","78","      hotspotsTotal: 0,"],"delete":["57","  hotspotsTotal?: number;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":[{"add":["43","  hotspotsTotal={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":[{"add":["129","      hotspotsTotal={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":[{"add":["32","  hotspotsTotal: number;","114","            hotspotsTotal"],"delete":["32","  hotspotsTotal?: number;","114","            hotspots.length"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":[{"add":["42","  hotspotsTotal: number;"],"delete":["42","  hotspotsTotal?: number;"]}]}},"5076cc2f6b9c421359a1c711a20f9d1965226cec":{"changes":{"server\/sonar-process-monitor\/src\/main\/java\/org\/sonar\/process\/monitor\/Monitor.java":"MODIFY"},"diff":{"server\/sonar-process-monitor\/src\/main\/java\/org\/sonar\/process\/monitor\/Monitor.java":[{"add":["33","import org.sonar.process.ProcessId;","37","import static org.sonar.process.DefaultProcessCommands.reset;","38","","128","    \/\/ reset sharedmemory of App","129","    reset(fileSystem.getTempDir(), ProcessId.APP.getIpcIndex());"],"delete":[]}]}},"c3256f0716a2352d7a24165a490cb82afdb25ec0":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/cookies.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/SearchSelect-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/cookies.ts":[{"add":["19","import { memoize } from 'lodash';","21","const parseCookies = memoize((documentCookie: string): { [key: string]: string } => {","22","  const rawCookies = documentCookie.split('; ');","23","  const cookies: { [key: string]: string } = {};","28","  return cookies;","29","});","31","export function getCookie(name: string): string | undefined {","32","  return parseCookies(document.cookie)[name];"],"delete":["19","let cookies: { [key: string]: string };","21","export function getCookie(name: string): string | undefined {","22","  if (cookies) {","23","    return cookies[name];","24","  }","25","","26","  const rawCookies = document.cookie.split('; ');","27","  cookies = {};","28","","34","  return cookies[name];"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/SearchSelect-test.js":[{"add":["23","jest.mock('lodash', () => {","24","  const lodash = require.requireActual('lodash');","25","  lodash.debounce = jest.fn(fn => fn);","26","  return lodash;","27","});"],"delete":["19","\/\/ @flow","24","jest.mock('lodash', () => ({","25","  debounce: fn => fn","26","}));"]}]}},"9eebecd84d86c76ea513afc0e50573516c6731b8":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueChangelog.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueChangelog.java":[{"add":["53","      if (diffs.containsKey(IssueUpdater.TECHNICAL_DEBT)) {","54","        FieldDiffs.Diff value = diffs.get(IssueUpdater.TECHNICAL_DEBT);","55","        diffs.remove(IssueUpdater.TECHNICAL_DEBT);","56","        diffs.put(\"effort\", value);"],"delete":["53","      for (Map.Entry<String, FieldDiffs.Diff> entry : diffs.entrySet()) {","54","        \/\/ As \"technicalDebt\" couldn't been updated to \"effort\" in db, we need to convert it here to correctly display \"effort\" in WS\/UI","55","        if (entry.getKey().equals(IssueUpdater.TECHNICAL_DEBT)) {","56","          diffs.put(\"effort\", entry.getValue());","57","          diffs.remove(entry.getKey());","58","        }"]}]}},"44b3ae596e9f6298b02610589f5ea00f87f73139":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/ApplicationQualityGateProject.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/ApplicationQualityGateProject.css":[{"add":["6","  border-width: 1px;","7","  border-style: solid;","8","  border-color: inherit;"],"delete":[]}]}},"818b95efd106fe8149821d3507c8a59c00d74688":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":[{"add":["91","    window.clearTimeout(this.watchStatusTimer);"],"delete":[]}]}},"d383aa2db56e889c1dfbc0608483cad96f508f52":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Conditions.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Conditions.js":[{"add":["75","    const savedConditions = conditions.filter(condition => condition.id != null);","76","    savedConditions.forEach(condition => {","77","      const sameCount = savedConditions"],"delete":["75","    conditions.forEach(condition => {","76","      const sameCount = conditions"]}]}},"6fd40a8af54818efb8c29c8a01102121a529099e":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainer-test.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/security-hotspots.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainerRenderer-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":[{"add":["79","  async fetchSources() {","85","    if (!textRange) {","86","      \/\/ Hotspot not associated to any loc","87","      this.setState({ loading: false, lastLine: undefined, sourceLines: [] });","88","      return;","89","    }","90","","97","    let sourceLines = await getSources({","98","      key: component.key,","99","      from,","100","      to,","101","      ...getBranchLikeQuery(branchLike)","102","    }).catch(() => [] as T.SourceLine[]);","103","","104","    if (this.mounted) {","105","      const lastLine = this.checkLastLine(sourceLines, to);","106","","107","      \/\/ remove extra sourceline if we didn't reach the end:","108","      sourceLines = lastLine ? sourceLines : sourceLines.slice(0, -1);","109","      this.setState({ lastLine, loading: false, sourceLines });","110","    }"],"delete":["79","  fetchSources() {","90","    return getSources({ key: component.key, from, to, ...getBranchLikeQuery(branchLike) })","91","      .then(sourceLines => {","92","        if (this.mounted) {","93","          const lastLine = this.checkLastLine(sourceLines, to);","95","          \/\/ remove extra sourceline if we didn't reach the end:","96","          sourceLines = lastLine ? sourceLines : sourceLines.slice(0, -1);","97","          this.setState({ lastLine, loading: false, sourceLines });","98","        }","99","      })","100","      .catch(() => this.mounted && this.setState({ loading: false }));"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":[{"add":["21","import { translate } from 'sonar-ui-common\/helpers\/l10n';","58","    <>","59","      {!loading && sourceLines.length === 0 && (","60","        <p className=\"spacer-bottom\">{translate('hotspots.no_associated_lines')}<\/p>","61","      )}","62","      <div className=\"bordered big-spacer-bottom\">","63","        <SourceViewerHeaderSlim","64","          branchLike={branchLike}","65","          expandable={false}","66","          displayProjectName={displayProjectName}","67","          linkToProject={false}","68","          loading={loading}","69","          onExpand={noop}","70","          sourceViewerFile={sourceViewerFile}","71","        \/>","72","        <DeferredSpinner loading={loading}>","73","          {sourceLines.length > 0 && (","74","            <SourceViewerContext.Provider \/* Used by LineOptionsPopup *\/","75","              value={{ branchLike, file: sourceViewerFile }}>","76","              <SnippetViewer","77","                branchLike={branchLike}","78","                component={sourceViewerFile}","79","                displaySCM={false}","80","                expandBlock={(_i, direction) => props.onExpandBlock(direction)}","81","                handleCloseIssues={noop}","82","                handleOpenIssues={noop}","83","                handleSymbolClick={props.onSymbolClick}","84","                highlightedLocationMessage={undefined}","85","                highlightedSymbols={highlightedSymbols}","86","                index={0}","87","                issue={hotspot}","88","                issuesByLine={{}}","89","                lastSnippetOfLastGroup={false}","90","                locations={[]}","91","                locationsByLine={locations}","92","                onIssueChange={noop}","93","                onIssuePopupToggle={noop}","94","                onLocationSelect={noop}","95","                openIssuesByLine={{}}","96","                renderDuplicationPopup={noop}","97","                snippet={sourceLines}","98","              \/>","99","            <\/SourceViewerContext.Provider>","100","          )}","101","        <\/DeferredSpinner>","102","      <\/div>","103","    <\/>"],"delete":["57","    <div className=\"bordered big-spacer-bottom\">","58","      <SourceViewerHeaderSlim","59","        branchLike={branchLike}","60","        expandable={false}","61","        displayProjectName={displayProjectName}","62","        linkToProject={false}","63","        loading={loading}","64","        onExpand={noop}","65","        sourceViewerFile={sourceViewerFile}","66","      \/>","67","      <DeferredSpinner loading={loading}>","68","        {sourceLines.length > 0 && (","69","          <SourceViewerContext.Provider \/* Used by LineOptionsPopup *\/","70","            value={{ branchLike, file: sourceViewerFile }}>","71","            <SnippetViewer","72","              branchLike={branchLike}","73","              component={sourceViewerFile}","74","              displaySCM={false}","75","              expandBlock={(_i, direction) => props.onExpandBlock(direction)}","76","              handleCloseIssues={noop}","77","              handleOpenIssues={noop}","78","              handleSymbolClick={props.onSymbolClick}","79","              highlightedLocationMessage={undefined}","80","              highlightedSymbols={highlightedSymbols}","81","              index={0}","82","              issue={hotspot}","83","              issuesByLine={{}}","84","              lastSnippetOfLastGroup={false}","85","              locations={[]}","86","              locationsByLine={locations}","87","              onIssueChange={noop}","88","              onIssuePopupToggle={noop}","89","              onLocationSelect={noop}","90","              openIssuesByLine={{}}","91","              renderDuplicationPopup={noop}","92","              snippet={sourceLines}","93","            \/>","94","          <\/SourceViewerContext.Provider>","95","        )}","96","      <\/DeferredSpinner>","97","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainer-test.tsx":[{"add":["34","beforeEach(() => jest.clearAllMocks());","35","","64","it('should handle load sources failure', async () => {","65","  (getSources as jest.Mock).mockRejectedValueOnce(null);","66","","67","  const wrapper = shallowRender();","68","","69","  await waitAndUpdate(wrapper);","70","","71","  expect(getSources).toHaveBeenCalled();","72","  expect(wrapper.state().loading).toBe(false);","73","  expect(wrapper.state().lastLine).toBeUndefined();","74","  expect(wrapper.state().sourceLines).toHaveLength(0);","75","});","76","","77","it('should not load sources on mount when the hotspot is not associated to any loc', async () => {","78","  const hotspot = mockHotspot({","79","    line: undefined,","80","    textRange: undefined","81","  });","82","","83","  const wrapper = shallowRender({ hotspot });","84","","85","  await waitAndUpdate(wrapper);","86","","87","  expect(getSources).not.toBeCalled();","88","  expect(wrapper.state().lastLine).toBeUndefined();","89","  expect(wrapper.state().sourceLines).toHaveLength(0);","90","});","91",""],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["698","hotspots.no_associated_lines=Security Hotspot raised on the following file:"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/security-hotspots.ts":[{"add":["88","  textRange?: T.TextRange;"],"delete":["88","  textRange: T.TextRange;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainerRenderer-test.tsx.snap":[{"add":["3","<Fragment>","4","  <p","5","    className=\"spacer-bottom\"","6","  >","7","    hotspots.no_associated_lines","8","  <\/p>","9","  <div","10","    className=\"bordered big-spacer-bottom\"","11","  >","12","    <SourceViewerHeaderSlim","13","      branchLike={","14","        Object {","15","          \"analysisDate\": \"2018-01-01\",","16","          \"excludedFromPurge\": true,","17","          \"isMain\": true,","18","          \"name\": \"master\",","19","        }","21","      displayProjectName={true}","22","      expandable={false}","23","      linkToProject={false}","24","      loading={false}","25","      onExpand={[Function]}","26","      sourceViewerFile={","27","        Object {","28","          \"key\": \"foo\",","29","          \"measures\": Object {","30","            \"coverage\": \"85.2\",","31","            \"duplicationDensity\": \"1.0\",","32","            \"issues\": \"12\",","33","            \"lines\": \"56\",","34","          },","35","          \"path\": \"foo\/bar.ts\",","36","          \"project\": \"my-project\",","37","          \"projectName\": \"MyProject\",","38","          \"q\": \"FIL\",","39","          \"uuid\": \"foo-bar\",","40","        }","42","    \/>","43","    <DeferredSpinner","44","      loading={false}","45","      timeout={100}","46","    \/>","47","  <\/div>","48","<\/Fragment>","52","<Fragment>","53","  <div","54","    className=\"bordered big-spacer-bottom\"","56","    <SourceViewerHeaderSlim","57","      branchLike={","59","          \"analysisDate\": \"2018-01-01\",","60","          \"excludedFromPurge\": true,","61","          \"isMain\": true,","62","          \"name\": \"master\",","65","      displayProjectName={true}","66","      expandable={false}","67","      linkToProject={false}","68","      loading={false}","69","      onExpand={[Function]}","70","      sourceViewerFile={","71","        Object {","72","          \"key\": \"foo\",","73","          \"measures\": Object {","74","            \"coverage\": \"85.2\",","75","            \"duplicationDensity\": \"1.0\",","76","            \"issues\": \"12\",","77","            \"lines\": \"56\",","78","          },","79","          \"path\": \"foo\/bar.ts\",","80","          \"project\": \"my-project\",","81","          \"projectName\": \"MyProject\",","82","          \"q\": \"FIL\",","83","          \"uuid\": \"foo-bar\",","84","        }","85","      }","86","    \/>","87","    <DeferredSpinner","88","      loading={false}","89","      timeout={100}","91","      <ContextProvider","92","        value={","94","            \"branchLike\": Object {","95","              \"analysisDate\": \"2018-01-01\",","96","              \"excludedFromPurge\": true,","97","              \"isMain\": true,","98","              \"name\": \"master\",","99","            },","100","            \"file\": Object {","101","              \"key\": \"foo\",","102","              \"measures\": Object {","103","                \"coverage\": \"85.2\",","104","                \"duplicationDensity\": \"1.0\",","105","                \"issues\": \"12\",","106","                \"lines\": \"56\",","107","              },","108","              \"path\": \"foo\/bar.ts\",","109","              \"project\": \"my-project\",","110","              \"projectName\": \"MyProject\",","111","              \"q\": \"FIL\",","112","              \"uuid\": \"foo-bar\",","113","            },","116","      >","117","        <SnippetViewer","118","          branchLike={","119","            Object {","120","              \"analysisDate\": \"2018-01-01\",","121","              \"excludedFromPurge\": true,","122","              \"isMain\": true,","123","              \"name\": \"master\",","124","            }","126","          component={","127","            Object {","128","              \"key\": \"foo\",","129","              \"measures\": Object {","130","                \"coverage\": \"85.2\",","131","                \"duplicationDensity\": \"1.0\",","132","                \"issues\": \"12\",","133","                \"lines\": \"56\",","135","              \"path\": \"foo\/bar.ts\",","136","              \"project\": \"my-project\",","137","              \"projectName\": \"MyProject\",","138","              \"q\": \"FIL\",","139","              \"uuid\": \"foo-bar\",","140","            }","141","          }","142","          displaySCM={false}","143","          expandBlock={[Function]}","144","          handleCloseIssues={[Function]}","145","          handleOpenIssues={[Function]}","146","          handleSymbolClick={[MockFunction]}","147","          highlightedSymbols={Array []}","148","          index={0}","149","          issue={","150","            Object {","151","              \"assignee\": \"assignee\",","152","              \"assigneeUser\": Object {","158","              \"author\": \"author\",","159","              \"authorUser\": Object {","165","              \"canChangeStatus\": true,","166","              \"changelog\": Array [],","167","              \"comment\": Array [],","168","              \"component\": Object {","169","                \"breadcrumbs\": Array [],","170","                \"key\": \"my-project\",","171","                \"name\": \"MyProject\",","172","                \"organization\": \"foo\",","173","                \"qualifier\": \"FIL\",","174","                \"qualityGate\": Object {","175","                  \"isDefault\": true,","176","                  \"key\": \"30\",","177","                  \"name\": \"Sonar way\",","178","                },","179","                \"qualityProfiles\": Array [","180","                  Object {","181","                    \"deleted\": false,","182","                    \"key\": \"my-qp\",","183","                    \"language\": \"ts\",","184","                    \"name\": \"Sonar way\",","185","                  },","186","                ],","187","                \"tags\": Array [],","188","              },","189","              \"creationDate\": \"2013-05-13T17:55:41+0200\",","190","              \"key\": \"01fc972e-2a3c-433e-bcae-0bd7f88f5123\",","191","              \"line\": 142,","192","              \"message\": \"'3' is a magic number.\",","193","              \"project\": Object {","194","                \"breadcrumbs\": Array [],","195","                \"key\": \"my-project\",","196","                \"name\": \"MyProject\",","197","                \"organization\": \"foo\",","198","                \"qualifier\": \"TRK\",","199","                \"qualityGate\": Object {","200","                  \"isDefault\": true,","201","                  \"key\": \"30\",","202","                  \"name\": \"Sonar way\",","203","                },","204","                \"qualityProfiles\": Array [","205","                  Object {","206","                    \"deleted\": false,","207","                    \"key\": \"my-qp\",","208","                    \"language\": \"ts\",","209","                    \"name\": \"Sonar way\",","210","                  },","211","                ],","212","                \"tags\": Array [],","213","              },","214","              \"resolution\": \"FIXED\",","215","              \"rule\": Object {","216","                \"fixRecommendations\": \"<p>This a <strong>strong<\/strong> message about fixing !<\/p>\",","217","                \"key\": \"squid:S2077\",","218","                \"name\": \"That rule\",","219","                \"riskDescription\": \"<p>This a <strong>strong<\/strong> message about risk !<\/p>\",","220","                \"securityCategory\": \"sql-injection\",","221","                \"vulnerabilityDescription\": \"<p>This a <strong>strong<\/strong> message about vulnerability !<\/p>\",","222","                \"vulnerabilityProbability\": \"HIGH\",","223","              },","224","              \"status\": \"REVIEWED\",","225","              \"textRange\": Object {","226","                \"endLine\": 142,","227","                \"endOffset\": 83,","228","                \"startLine\": 142,","229","                \"startOffset\": 26,","230","              },","231","              \"updateDate\": \"2013-05-13T17:55:42+0200\",","232","              \"users\": Array [","233","                Object {","234","                  \"active\": true,","235","                  \"local\": true,","236","                  \"login\": \"assignee\",","237","                  \"name\": \"John Doe\",","238","                },","239","                Object {","240","                  \"active\": true,","241","                  \"local\": true,","242","                  \"login\": \"author\",","243","                  \"name\": \"John Doe\",","244","                },","245","              ],","246","            }","248","          issuesByLine={Object {}}","249","          lastSnippetOfLastGroup={false}","250","          locations={Array []}","251","          locationsByLine={Object {}}","252","          onIssueChange={[Function]}","253","          onIssuePopupToggle={[Function]}","254","          onLocationSelect={[Function]}","255","          openIssuesByLine={Object {}}","256","          renderDuplicationPopup={[Function]}","257","          snippet={","258","            Array [","259","              Object {","260","                \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","261","                \"coverageStatus\": \"covered\",","262","                \"coveredConditions\": 2,","263","                \"duplicated\": false,","264","                \"isNew\": true,","265","                \"line\": 16,","266","                \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","267","                \"scmDate\": \"2018-12-11T10:48:39+0100\",","268","                \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","269","              },","270","            ]","271","          }","272","        \/>","273","      <\/ContextProvider>","274","    <\/DeferredSpinner>","275","  <\/div>","276","<\/Fragment>"],"delete":["3","<div","4","  className=\"bordered big-spacer-bottom\"","5",">","6","  <SourceViewerHeaderSlim","7","    branchLike={","8","      Object {","9","        \"analysisDate\": \"2018-01-01\",","10","        \"excludedFromPurge\": true,","11","        \"isMain\": true,","12","        \"name\": \"master\",","14","    }","15","    displayProjectName={true}","16","    expandable={false}","17","    linkToProject={false}","18","    loading={false}","19","    onExpand={[Function]}","20","    sourceViewerFile={","21","      Object {","22","        \"key\": \"foo\",","23","        \"measures\": Object {","24","          \"coverage\": \"85.2\",","25","          \"duplicationDensity\": \"1.0\",","26","          \"issues\": \"12\",","27","          \"lines\": \"56\",","28","        },","29","        \"path\": \"foo\/bar.ts\",","30","        \"project\": \"my-project\",","31","        \"projectName\": \"MyProject\",","32","        \"q\": \"FIL\",","33","        \"uuid\": \"foo-bar\",","35","    }","36","  \/>","37","  <DeferredSpinner","38","    loading={false}","39","    timeout={100}","40","  \/>","41","<\/div>","45","<div","46","  className=\"bordered big-spacer-bottom\"","47",">","48","  <SourceViewerHeaderSlim","49","    branchLike={","50","      Object {","51","        \"analysisDate\": \"2018-01-01\",","52","        \"excludedFromPurge\": true,","53","        \"isMain\": true,","54","        \"name\": \"master\",","55","      }","56","    }","57","    displayProjectName={true}","58","    expandable={false}","59","    linkToProject={false}","60","    loading={false}","61","    onExpand={[Function]}","62","    sourceViewerFile={","63","      Object {","64","        \"key\": \"foo\",","65","        \"measures\": Object {","66","          \"coverage\": \"85.2\",","67","          \"duplicationDensity\": \"1.0\",","68","          \"issues\": \"12\",","69","          \"lines\": \"56\",","70","        },","71","        \"path\": \"foo\/bar.ts\",","72","        \"project\": \"my-project\",","73","        \"projectName\": \"MyProject\",","74","        \"q\": \"FIL\",","75","        \"uuid\": \"foo-bar\",","76","      }","77","    }","78","  \/>","79","  <DeferredSpinner","80","    loading={false}","81","    timeout={100}","83","    <ContextProvider","84","      value={","86","          \"branchLike\": Object {","87","            \"analysisDate\": \"2018-01-01\",","88","            \"excludedFromPurge\": true,","89","            \"isMain\": true,","90","            \"name\": \"master\",","91","          },","92","          \"file\": Object {","93","            \"key\": \"foo\",","94","            \"measures\": Object {","95","              \"coverage\": \"85.2\",","96","              \"duplicationDensity\": \"1.0\",","97","              \"issues\": \"12\",","98","              \"lines\": \"56\",","99","            },","100","            \"path\": \"foo\/bar.ts\",","101","            \"project\": \"my-project\",","102","            \"projectName\": \"MyProject\",","103","            \"q\": \"FIL\",","104","            \"uuid\": \"foo-bar\",","105","          },","109","      <SnippetViewer","110","        branchLike={","112","            \"analysisDate\": \"2018-01-01\",","113","            \"excludedFromPurge\": true,","114","            \"isMain\": true,","115","            \"name\": \"master\",","118","        component={","119","          Object {","120","            \"key\": \"foo\",","121","            \"measures\": Object {","122","              \"coverage\": \"85.2\",","123","              \"duplicationDensity\": \"1.0\",","124","              \"issues\": \"12\",","125","              \"lines\": \"56\",","126","            },","127","            \"path\": \"foo\/bar.ts\",","128","            \"project\": \"my-project\",","129","            \"projectName\": \"MyProject\",","130","            \"q\": \"FIL\",","131","            \"uuid\": \"foo-bar\",","133","        }","134","        displaySCM={false}","135","        expandBlock={[Function]}","136","        handleCloseIssues={[Function]}","137","        handleOpenIssues={[Function]}","138","        handleSymbolClick={[MockFunction]}","139","        highlightedSymbols={Array []}","140","        index={0}","141","        issue={","142","          Object {","143","            \"assignee\": \"assignee\",","144","            \"assigneeUser\": Object {","145","              \"active\": true,","146","              \"local\": true,","147","              \"login\": \"assignee\",","148","              \"name\": \"John Doe\",","149","            },","150","            \"author\": \"author\",","151","            \"authorUser\": Object {","152","              \"active\": true,","153","              \"local\": true,","154","              \"login\": \"author\",","155","              \"name\": \"John Doe\",","156","            },","157","            \"canChangeStatus\": true,","158","            \"changelog\": Array [],","159","            \"comment\": Array [],","160","            \"component\": Object {","161","              \"breadcrumbs\": Array [],","162","              \"key\": \"my-project\",","163","              \"name\": \"MyProject\",","164","              \"organization\": \"foo\",","165","              \"qualifier\": \"FIL\",","166","              \"qualityGate\": Object {","167","                \"isDefault\": true,","168","                \"key\": \"30\",","169","                \"name\": \"Sonar way\",","171","              \"qualityProfiles\": Array [","172","                Object {","173","                  \"deleted\": false,","174","                  \"key\": \"my-qp\",","175","                  \"language\": \"ts\",","176","                  \"name\": \"Sonar way\",","177","                },","178","              ],","179","              \"tags\": Array [],","180","            },","181","            \"creationDate\": \"2013-05-13T17:55:41+0200\",","182","            \"key\": \"01fc972e-2a3c-433e-bcae-0bd7f88f5123\",","183","            \"line\": 142,","184","            \"message\": \"'3' is a magic number.\",","185","            \"project\": Object {","186","              \"breadcrumbs\": Array [],","187","              \"key\": \"my-project\",","188","              \"name\": \"MyProject\",","189","              \"organization\": \"foo\",","190","              \"qualifier\": \"TRK\",","191","              \"qualityGate\": Object {","192","                \"isDefault\": true,","193","                \"key\": \"30\",","194","                \"name\": \"Sonar way\",","195","              },","196","              \"qualityProfiles\": Array [","197","                Object {","198","                  \"deleted\": false,","199","                  \"key\": \"my-qp\",","200","                  \"language\": \"ts\",","201","                  \"name\": \"Sonar way\",","202","                },","203","              ],","204","              \"tags\": Array [],","205","            },","206","            \"resolution\": \"FIXED\",","207","            \"rule\": Object {","208","              \"fixRecommendations\": \"<p>This a <strong>strong<\/strong> message about fixing !<\/p>\",","209","              \"key\": \"squid:S2077\",","210","              \"name\": \"That rule\",","211","              \"riskDescription\": \"<p>This a <strong>strong<\/strong> message about risk !<\/p>\",","212","              \"securityCategory\": \"sql-injection\",","213","              \"vulnerabilityDescription\": \"<p>This a <strong>strong<\/strong> message about vulnerability !<\/p>\",","214","              \"vulnerabilityProbability\": \"HIGH\",","215","            },","216","            \"status\": \"REVIEWED\",","217","            \"textRange\": Object {","218","              \"endLine\": 142,","219","              \"endOffset\": 83,","220","              \"startLine\": 142,","221","              \"startOffset\": 26,","222","            },","223","            \"updateDate\": \"2013-05-13T17:55:42+0200\",","224","            \"users\": Array [","225","              Object {","231","              Object {","237","            ],","239","        }","240","        issuesByLine={Object {}}","241","        lastSnippetOfLastGroup={false}","242","        locations={Array []}","243","        locationsByLine={Object {}}","244","        onIssueChange={[Function]}","245","        onIssuePopupToggle={[Function]}","246","        onLocationSelect={[Function]}","247","        openIssuesByLine={Object {}}","248","        renderDuplicationPopup={[Function]}","249","        snippet={","250","          Array [","251","            Object {","252","              \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","253","              \"coverageStatus\": \"covered\",","254","              \"coveredConditions\": 2,","255","              \"duplicated\": false,","256","              \"isNew\": true,","257","              \"line\": 16,","258","              \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","259","              \"scmDate\": \"2018-12-11T10:48:39+0100\",","260","              \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","261","            },","262","          ]","263","        }","264","      \/>","265","    <\/ContextProvider>","266","  <\/DeferredSpinner>","267","<\/div>"]}]}},"45db190c5e259163bb31eac16b8f7fe80d35a4d4":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/AuthorizationMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":[{"add":["1023","    ComponentDto project = db.components().insertPrivateProject();","1024","","1027","    db.users().insertProjectPermissionOnUser(user4, \"admin\", project);"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/AuthorizationMapper.xml":[{"add":["387","    and ur.resource_id is null","397","    gr.resource_id is null and"],"delete":[]}]}},"7c6f52df2e18da76180d74b3533e709f5b47309a":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSimpleList.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/security-standard-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/mocks\/security-hotspots.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSimpleList-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/security.ts":"ADD","server\/sonar-web\/src\/main\/js\/types\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSimpleList-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/security-standard.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/StandardFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/IssueLabel-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/security-hotspots.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotCategory.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSimpleList.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["0","import { pick } from 'lodash';","25","import { SecurityStandard } from '..\/types\/security';","97","  const { branch, pullRequest, sinceLeakPeriod, hotspots, assignedToMe } = query;","107","      ...pick(query, [","108","        SecurityStandard.SONARSOURCE,","109","        SecurityStandard.OWASP_TOP10,","110","        SecurityStandard.SANS_TOP25","111","      ])"],"delete":["95","  const { branch, pullRequest, sinceLeakPeriod, hotspots, assignedToMe, category } = query;","105","      category"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/security-standard-test.ts":[{"add":["0","import { Standards } from '..\/..\/types\/security';","28","  const standards: Standards = {","41","  it('should render cwe categories correctly', () => {","51","  const standards: Standards = {","61","  it('should render owasp categories correctly', () => {","70","  const standards: Standards = {","80","  it('should render sans categories correctly', () => {","93","  const standards: Standards = {","106","  it('should render sonarsource categories correctly', () => {"],"delete":["27","  const standards: T.Standards = {","40","  it('should render categories correctly', () => {","50","  const standards: T.Standards = {","60","  it('should render categories correctly', () => {","69","  const standards: T.Standards = {","79","  it('should render categories correctly', () => {","92","  const standards: T.Standards = {","105","  it('should render categories correctly', () => {"]}],"server\/sonar-web\/src\/main\/js\/helpers\/mocks\/security-hotspots.ts":[{"add":["20","import { Standards } from '..\/..\/types\/security';","107","","108","export function mockStandards(): Standards {","109","  return {","110","    cwe: {","111","      unknown: {","112","        title: 'No CWE associated'","113","      },","114","      '1004': {","115","        title: \"Sensitive Cookie Without 'HttpOnly' Flag\"","116","      }","117","    },","118","    owaspTop10: {","119","      a1: {","120","        title: 'Injection'","121","      },","122","      a2: {","123","        title: 'Broken Authentication'","124","      },","125","      a3: {","126","        title: 'Sensitive Data Exposure'","127","      }","128","    },","129","    sansTop25: {","130","      'insecure-interaction': {","131","        title: 'Insecure Interaction Between Components'","132","      },","133","      'risky-resource': {","134","        title: 'Risky Resource Management'","135","      },","136","      'porous-defenses': {","137","        title: 'Porous Defenses'","138","      }","139","    },","140","    sonarsourceSecurity: {","141","      'buffer-overflow': {","142","        title: 'Buffer Overflow'","143","      },","144","      'sql-injection': {","145","        title: 'SQL Injection'","146","      },","147","      rce: {","148","        title: 'Code Injection (RCE)'","149","      }","150","    }","151","  };","152","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":[{"add":["33","import { SecurityStandard, Standards } from '..\/..\/types\/security';","43","import { SECURITY_STANDARDS } from '.\/utils';","57","  filterByCategory?: { standard: SecurityStandard; category: string };","58","  filters: HotspotFilters;","68","  standards: Standards;","86","      standards: {","87","        [SecurityStandard.OWASP_TOP10]: {},","88","        [SecurityStandard.SANS_TOP25]: {},","89","        [SecurityStandard.SONARSOURCE]: {},","90","        [SecurityStandard.CWE]: {}","91","      },","109","      this.props.location.query.hotspots !== previous.location.query.hotspots ||","110","      SECURITY_STANDARDS.some(s => this.props.location.query[s] !== previous.location.query[s])","186","      .then(([standards, { hotspots, paging }]) => {","191","        const selectedHotspot = hotspots.length > 0 ? hotspots[0] : undefined;","197","          selectedHotspot,","198","          standards","244","    const standard = SECURITY_STANDARDS.find(stnd => location.query[stnd] !== undefined);","245","    const filterByCategory = standard","246","      ? { standard, category: location.query[standard] }","247","      : undefined;","248","","249","    this.setState({ filterByCategory, hotspotKeys });","258","    if (filterByCategory) {","259","      return getSecurityHotspots({","260","        [filterByCategory.standard]: filterByCategory.category,","261","        projectKey: component.key,","262","        p: page,","263","        ps: PAGE_SIZE,","264","        status: HotspotStatus.TO_REVIEW, \/\/ we're only interested in unresolved hotspots","265","        ...getBranchLikeQuery(branchLike)","266","      });","267","    }","268","","352","      query: {","353","        ...this.props.location.query,","354","        hotspots: undefined,","355","        [SecurityStandard.OWASP_TOP10]: undefined,","356","        [SecurityStandard.SANS_TOP25]: undefined,","357","        [SecurityStandard.SONARSOURCE]: undefined","358","      }","385","      filterByCategory,","386","      filters,","395","      standards","403","        filterByCategory={filterByCategory}","407","        isStaticListOfHotspots={Boolean(","408","          (hotspotKeys && hotspotKeys.length > 0) || filterByCategory","409","        )}","418","        securityCategories={standards[SecurityStandard.SONARSOURCE]}","420","        standards={standards}"],"delete":["63","  securityCategories: T.StandardSecurityCategories;","65","  filters: HotspotFilters;","82","      securityCategories: {},","101","      this.props.location.query.hotspots !== previous.location.query.hotspots","177","      .then(([{ sonarsourceSecurity }, { hotspots, paging }]) => {","182","        const requestedCategory = this.props.location.query.category;","183","","184","        let selectedHotspot;","185","        if (hotspots.length > 0) {","186","          const hotspotForCategory = requestedCategory","187","            ? hotspots.find(h => h.securityCategory === requestedCategory)","188","            : undefined;","189","          selectedHotspot = hotspotForCategory ?? hotspots[0];","190","        }","196","          securityCategories: sonarsourceSecurity,","197","          selectedHotspot","243","    this.setState({ hotspotKeys });","335","      query: { ...this.props.location.query, hotspots: undefined }","369","      securityCategories,","371","      filters","382","        isStaticListOfHotspots={Boolean(hotspotKeys && hotspotKeys.length > 0)}","391","        securityCategories={securityCategories}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":[{"add":["54","  standards={","55","    Object {","56","      \"cwe\": Object {},","57","      \"owaspTop10\": Object {},","58","      \"sansTop25\": Object {},","59","      \"sonarsourceSecurity\": Object {},","60","    }","61","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSimpleList-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/utils.ts":[{"add":["21","  renderCWECategory,","22","  renderOwaspTop10Category,","23","  renderSansTop25Category,","24","  renderSonarSourceSecurityCategory","25","} from '..\/..\/helpers\/security-standard';","26","import { SecurityStandard } from '..\/..\/types\/security';","27","import {","39","export const SECURITY_STANDARDS = [","40","  SecurityStandard.SONARSOURCE,","41","  SecurityStandard.OWASP_TOP10,","42","  SecurityStandard.SANS_TOP25","43","];","44","","45","export const SECURITY_STANDARD_RENDERER = {","46","  [SecurityStandard.OWASP_TOP10]: renderOwaspTop10Category,","47","  [SecurityStandard.SANS_TOP25]: renderSansTop25Category,","48","  [SecurityStandard.SONARSOURCE]: renderSonarSourceSecurityCategory,","49","  [SecurityStandard.CWE]: renderCWECategory","50","};"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/security.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/types.d.ts":[{"add":[],"delete":["826","  export type Standards = {","827","    [key in StandardType]: T.Dict<{ title: string; description?: string }>;","828","  };","829","","830","  export type StandardType = 'owaspTop10' | 'sansTop25' | 'cwe' | 'sonarsourceSecurity';","831",""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/utils-test.ts":[{"add":["20","import { SecurityStandard } from '..\/..\/..\/types\/security';","84","      shouldOpenStandardsChildFacet({ owaspTop10: true }, {}, SecurityStandard.OWASP_TOP10)","87","      shouldOpenStandardsChildFacet({ sansTop25: true }, {}, SecurityStandard.SANS_TOP25)","90","      shouldOpenStandardsChildFacet(","91","        { sansTop25: true },","92","        { owaspTop10: ['A1'] },","93","        SecurityStandard.OWASP_TOP10","94","      )","95","    ).toBe(true);","96","    expect(","97","      shouldOpenStandardsChildFacet(","98","        { owaspTop10: false },","99","        { owaspTop10: ['A1'] },","100","        SecurityStandard.OWASP_TOP10","101","      )","102","    ).toBe(true);","103","    expect(","104","      shouldOpenStandardsChildFacet(","105","        {},","106","        { sansTop25: ['insecure-interactions'] },","107","        SecurityStandard.SANS_TOP25","108","      )","114","        SecurityStandard.SONARSOURCE","120","    expect(","121","      shouldOpenStandardsChildFacet({ standards: true }, {}, SecurityStandard.OWASP_TOP10)","122","    ).toBe(false);","123","    expect(","124","      shouldOpenStandardsChildFacet({ sansTop25: true }, {}, SecurityStandard.OWASP_TOP10)","125","    ).toBe(false);","126","    expect(","127","      shouldOpenStandardsChildFacet({}, { types: ['VULNERABILITY'] }, SecurityStandard.SANS_TOP25)","128","    ).toBe(false);","133","        SecurityStandard.OWASP_TOP10"],"delete":["82","    expect(shouldOpenStandardsChildFacet({ owaspTop10: true }, {}, 'owaspTop10')).toBe(true);","83","    expect(shouldOpenStandardsChildFacet({ sansTop25: true }, {}, 'sansTop25')).toBe(true);","85","      shouldOpenStandardsChildFacet({ sansTop25: true }, { owaspTop10: ['A1'] }, 'owaspTop10')","88","      shouldOpenStandardsChildFacet({ owaspTop10: false }, { owaspTop10: ['A1'] }, 'owaspTop10')","91","      shouldOpenStandardsChildFacet({}, { sansTop25: ['insecure-interactions'] }, 'sansTop25')","97","        'sonarsourceSecurity'","103","    expect(shouldOpenStandardsChildFacet({ standards: true }, {}, 'owaspTop10')).toBe(false);","104","    expect(shouldOpenStandardsChildFacet({ sansTop25: true }, {}, 'owaspTop10')).toBe(false);","105","    expect(shouldOpenStandardsChildFacet({}, { types: ['VULNERABILITY'] }, 'sansTop25')).toBe(","106","      false","107","    );","112","        'owaspTop10'"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":[{"add":["73","","74","#security_hotspots .hotspots-list-single-category .hotspot-category .hotspot-category-header {","75","  color: var(--blue);","76","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["52","import { SecurityStandard } from '..\/..\/..\/types\/security';","159","        owaspTop10: shouldOpenStandardsChildFacet({}, query, SecurityStandard.OWASP_TOP10),","160","        sansTop25: shouldOpenStandardsChildFacet({}, query, SecurityStandard.SANS_TOP25),"],"delete":["158","        owaspTop10: shouldOpenStandardsChildFacet({}, query, 'owaspTop10'),","159","        sansTop25: shouldOpenStandardsChildFacet({}, query, 'sansTop25'),"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":[{"add":["26","import { mockRawHotspot, mockStandards } from '..\/..\/..\/helpers\/mocks\/security-hotspots';","35","import { SecurityStandard } from '..\/..\/..\/types\/security';","103","  expect(wrapper.state().standards).toEqual({","104","    sonarsourceSecurity: {","105","      cat1: { title: 'cat 1' }","106","    }","112","it('should handle category request', () => {","113","  (getStandards as jest.Mock).mockResolvedValue(mockStandards());","116","  shallowRender({","117","    location: mockLocation({ query: { [SecurityStandard.OWASP_TOP10]: 'a1' } })","120","  expect(getSecurityHotspots).toBeCalledWith(","121","    expect.objectContaining({ [SecurityStandard.OWASP_TOP10]: 'a1' })","122","  );"],"delete":["26","import { mockRawHotspot } from '..\/..\/..\/helpers\/mocks\/security-hotspots';","102","  expect(wrapper.state().securityCategories).toEqual({","103","    cat1: { title: 'cat 1' }","109","it('should handle category request', async () => {","110","  const hotspots = [mockRawHotspot(), mockRawHotspot({ securityCategory: 'log-injection' })];","111","  (getSecurityHotspots as jest.Mock).mockResolvedValue({","112","    hotspots,","113","    paging: {","114","      total: 1","115","    }","116","  });","119","  const wrapper = shallowRender({","120","    location: mockLocation({ query: { category: hotspots[1].securityCategory } })","123","  await waitAndUpdate(wrapper);","124","","125","  expect(wrapper.state().selectedHotspot).toBe(hotspots[1]);"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSimpleList-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/security-standard.ts":[{"add":["19","import { Standards } from '..\/types\/security';","20","","21","export function getStandards(): Promise<Standards> {","25","export function renderCWECategory(standards: Standards, category: string): string {","37","  standards: Standards,","50","  standards: Standards,","59","  standards: Standards,"],"delete":["19","export function getStandards(): Promise<T.Standards> {","23","export function renderCWECategory(standards: T.Standards, category: string): string {","35","  standards: T.Standards,","48","  standards: T.Standards,","57","  standards: T.Standards,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/StandardFacet.tsx":[{"add":["36","import { SecurityStandard, Standards, StandardType } from '..\/..\/..\/types\/security';","64","  standards: Standards;","68","type ValuesProp = StandardType;","104","      ({ owaspTop10, sansTop25, cwe, sonarsourceSecurity }: Standards) => {","169","    this.handleItemClick(SecurityStandard.OWASP_TOP10, itemValue, multiple);","173","    this.handleItemClick(SecurityStandard.SANS_TOP25, itemValue, multiple);","177","    this.handleItemClick(SecurityStandard.SONARSOURCE, itemValue, multiple);","200","    renderName: (standards: Standards, category: string) => string,","217","    renderName: (standards: Standards, category: string) => React.ReactNode,","218","    renderTooltip: (standards: Standards, category: string) => string,","259","      SecurityStandard.OWASP_TOP10,","266","    return this.renderHint('owaspTop10Stats', SecurityStandard.OWASP_TOP10);","272","      SecurityStandard.SANS_TOP25,","279","    return this.renderHint('sansTop25Stats', SecurityStandard.SANS_TOP25);","285","      SecurityStandard.SONARSOURCE,","292","    return this.renderHint('sonarsourceSecurityStats', SecurityStandard.SONARSOURCE);","298","        <FacetBox className=\"is-inner\" property={SecurityStandard.SONARSOURCE}>","315","        <FacetBox className=\"is-inner\" property={SecurityStandard.OWASP_TOP10}>","332","        <FacetBox className=\"is-inner\" property={SecurityStandard.SANS_TOP25}>","361","          property={SecurityStandard.CWE}"],"delete":["63","  standards: T.Standards;","67","type ValuesProp = T.StandardType;","103","      ({ owaspTop10, sansTop25, cwe, sonarsourceSecurity }: T.Standards) => {","168","    this.handleItemClick('owaspTop10', itemValue, multiple);","172","    this.handleItemClick('sansTop25', itemValue, multiple);","176","    this.handleItemClick('sonarsourceSecurity', itemValue, multiple);","199","    renderName: (standards: T.Standards, category: string) => string,","216","    renderName: (standards: T.Standards, category: string) => React.ReactNode,","217","    renderTooltip: (standards: T.Standards, category: string) => string,","258","      'owaspTop10',","265","    return this.renderHint('owaspTop10Stats', 'owaspTop10');","271","      'sansTop25',","278","    return this.renderHint('sansTop25Stats', 'sansTop25');","284","      'sonarsourceSecurity',","291","    return this.renderHint('sonarsourceSecurityStats', 'sonarsourceSecurity');","297","        <FacetBox className=\"is-inner\" property=\"sonarsourceSecurity\">","314","        <FacetBox className=\"is-inner\" property=\"owaspTop10\">","331","        <FacetBox className=\"is-inner\" property=\"sansTop25\">","360","          property=\"cwe\""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/IssueLabel-test.tsx.snap":[{"add":[],"delete":["126","          \"category\": undefined,","160","          \"category\": undefined,"]}],"server\/sonar-web\/src\/main\/js\/api\/security-hotspots.ts":[{"add":["32","const HOTSPOTS_SEARCH_URL = '\/api\/hotspots\/search';","33","","80","  return getJSON(HOTSPOTS_SEARCH_URL, data).catch(throwGlobalError);","89","  return getJSON(HOTSPOTS_SEARCH_URL, { ...data, hotspots: hotspotKeys.join() }).catch("],"delete":["78","  return getJSON('\/api\/hotspots\/search', data).catch(throwGlobalError);","87","  return getJSON('\/api\/hotspots\/search', { ...data, hotspots: hotspotKeys.join() }).catch("]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":[{"add":["35","import { SecurityStandard, StandardType } from '..\/..\/types\/security';","68","export const STANDARD_TYPES: StandardType[] = [","69","  SecurityStandard.OWASP_TOP10,","70","  SecurityStandard.SANS_TOP25,","71","  SecurityStandard.CWE,","72","  SecurityStandard.SONARSOURCE","291","  standardType: SecurityStandard","297","      (standardType !== SecurityStandard.CWE && filter !== undefined && filter.length > 0))","307","    shouldOpenStandardsChildFacet(openFacets, query, SecurityStandard.SONARSOURCE) ||"],"delete":["67","export const STANDARD_TYPES: T.StandardType[] = [","68","  'owaspTop10',","69","  'sansTop25',","70","  'cwe',","71","  'sonarsourceSecurity'","290","  standardType: T.StandardType","296","      (standardType !== 'cwe' && filter !== undefined && filter.length > 0))","306","    shouldOpenStandardsChildFacet(openFacets, query, 'sonarsourceSecurity') ||"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":[{"add":["23","import { mockRawHotspot, mockStandards } from '..\/..\/..\/helpers\/mocks\/security-hotspots';","128","      standards={mockStandards()}"],"delete":["23","import { mockRawHotspot } from '..\/..\/..\/helpers\/mocks\/security-hotspots';"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotCategory.tsx":[{"add":["31","  onToggleExpand?: (categoryKey: string, value: boolean) => void;","48","      {props.onToggleExpand ? (","49","        <a","50","          className={classNames(","51","            'hotspot-category-header display-flex-space-between display-flex-center',","52","            { 'contains-selected-hotspot': selectedHotspot.securityCategory === categoryKey }","54","          href=\"#\"","55","          onClick={() => props.onToggleExpand && props.onToggleExpand(categoryKey, !expanded)}>","56","          <strong className=\"flex-1 spacer-right break-word\">{title}<\/strong>","57","          <span>","58","            <span className=\"counter-badge\">","59","              {hotspots.length}","60","              {isLastAndIncomplete && '+'}","61","            <\/span>","62","            {expanded ? (","63","              <ChevronUpIcon className=\"big-spacer-left\" \/>","64","            ) : (","65","              <ChevronDownIcon className=\"big-spacer-left\" \/>","66","            )}","67","          <\/span>","68","        <\/a>","69","      ) : (","70","        <div className=\"hotspot-category-header\">","71","          <strong className=\"flex-1 spacer-right break-word\">{title}<\/strong>","72","        <\/div>","73","      )}"],"delete":["31","  onToggleExpand: (categoryKey: string, value: boolean) => void;","48","      <a","49","        className={classNames(","50","          'hotspot-category-header display-flex-space-between display-flex-center',","51","          { 'contains-selected-hotspot': selectedHotspot.securityCategory === categoryKey }","52","        )}","53","        href=\"#\"","54","        onClick={() => props.onToggleExpand(categoryKey, !expanded)}>","55","        <strong className=\"flex-1 spacer-right break-word\">{title}<\/strong>","56","        <span>","57","          <span className=\"counter-badge\">","58","            {hotspots.length}","59","            {isLastAndIncomplete && '+'}","60","          <\/span>","61","          {expanded ? (","62","            <ChevronUpIcon className=\"big-spacer-left\" \/>","63","          ) : (","64","            <ChevronDownIcon className=\"big-spacer-left\" \/>","66","        <\/span>","67","      <\/a>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["52","import { SecurityStandard } from '..\/..\/..\/types\/security';","124","        owaspTop10: shouldOpenStandardsChildFacet({}, query, SecurityStandard.OWASP_TOP10),","125","        sansTop25: shouldOpenStandardsChildFacet({}, query, SecurityStandard.SANS_TOP25),"],"delete":["123","        owaspTop10: shouldOpenStandardsChildFacet({}, query, 'owaspTop10'),","124","        sansTop25: shouldOpenStandardsChildFacet({}, query, 'sansTop25'),"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":[{"add":["29","import { SecurityStandard, Standards } from '..\/..\/types\/security';","34","import HotspotSimpleList from '.\/components\/HotspotSimpleList';","41","  filterByCategory?: {","42","    standard: SecurityStandard;","43","    category: string;","44","  };","60","  standards: Standards;","67","    filterByCategory,","68","    filters,","78","    standards","127","                    {filterByCategory ? (","128","                      <HotspotSimpleList","129","                        filterByCategory={filterByCategory}","130","                        hotspots={hotspots}","131","                        hotspotsTotal={hotspotsTotal}","132","                        loadingMore={loadingMore}","133","                        onHotspotClick={props.onHotspotClick}","134","                        onLoadMore={props.onLoadMore}","135","                        selectedHotspot={selectedHotspot}","136","                        standards={standards}","137","                      \/>","138","                    ) : (","139","                      <HotspotList","140","                        hotspots={hotspots}","141","                        hotspotsTotal={hotspotsTotal}","142","                        isStaticListOfHotspots={isStaticListOfHotspots}","143","                        loadingMore={loadingMore}","144","                        onHotspotClick={props.onHotspotClick}","145","                        onLoadMore={props.onLoadMore}","146","                        securityCategories={securityCategories}","147","                        selectedHotspot={selectedHotspot}","148","                        statusFilter={filters.status}","149","                      \/>","150","                    )}"],"delete":["69","    filters","118","                    <HotspotList","119","                      hotspots={hotspots}","120","                      hotspotsTotal={hotspotsTotal}","121","                      isStaticListOfHotspots={isStaticListOfHotspots}","122","                      loadingMore={loadingMore}","123","                      onHotspotClick={props.onHotspotClick}","124","                      onLoadMore={props.onLoadMore}","125","                      securityCategories={securityCategories}","126","                      selectedHotspot={selectedHotspot}","127","                      statusFilter={filters.status}","128","                    \/>"]}]}},"4377c049eab9efbf8ecb56caf1fd3c0c779a0731":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/measures\/MeasuresMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/measures\/MeasuresMediumTest.java":[{"add":["29","import org.junit.Rule;","33","import org.sonar.api.utils.log.LogTester;","34","import org.sonar.api.utils.log.LoggerLevel;","42","import static org.junit.Assert.fail;","46","  @Rule","47","  public LogTester logTester = new LogTester();","48","","49","  @Rule","71","  public void setUp() throws Exception {","72","    baseDir = temp.newFolder();","135","  public void applyExclusionsOnCoverageMeasures() throws IOException {","136","    File xooFile = new File(srcDir, \"sample.xoo\");","137","    FileUtils.write(xooFile, \"Sample xoo\\n\\ncontent\");","138","","139","    File measures = new File(srcDir, \"sample.xoo.measures\");","140","    FileUtils.write(measures, \"lines_to_cover:2\");","141","","142","    TaskResult result = tester.newTask()","143","      .properties(ImmutableMap.<String, String>builder()","144","        .put(\"sonar.task\", \"scan\")","145","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","146","        .put(\"sonar.projectKey\", \"com.foo.project\")","147","        .put(\"sonar.projectName\", \"Foo Project\")","148","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","149","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","150","        .put(\"sonar.sources\", \"src\")","151","        .build())","152","      .start();","153","","154","    Map<String, List<Measure>> allMeasures = result.allMeasures();","155","","156","    assertThat(allMeasures.get(\"com.foo.project:src\/sample.xoo\")).extracting(\"metricKey\", \"intValue.value\")","157","      .containsOnly(tuple(\"lines\", 3),","158","        tuple(\"lines_to_cover\", 2));","159","","160","    result = tester.newTask()","161","      .properties(ImmutableMap.<String, String>builder()","162","        .put(\"sonar.task\", \"scan\")","163","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","164","        .put(\"sonar.projectKey\", \"com.foo.project\")","165","        .put(\"sonar.projectName\", \"Foo Project\")","166","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","167","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","168","        .put(\"sonar.sources\", \"src\")","169","        .put(\"sonar.coverage.exclusions\", \"src\/sample.xoo\")","170","        .build())","171","      .start();","172","","173","    allMeasures = result.allMeasures();","174","    assertThat(allMeasures.get(\"com.foo.project:src\/sample.xoo\")).extracting(\"metricKey\", \"intValue.value\")","175","      .containsOnly(tuple(\"lines\", 3));","176","  }","177","","178","  @Test","179","  public void deprecatedCoverageMeasuresAreConverted() throws IOException {","180","    File xooFile = new File(srcDir, \"sample.xoo\");","181","    FileUtils.write(xooFile, \"Sample xoo\\n\\ncontent\");","182","","183","    File measures = new File(srcDir, \"sample.xoo.measures\");","184","    FileUtils.write(measures, \"it_lines_to_cover:2\");","185","","186","    TaskResult result = tester.newTask()","187","      .properties(ImmutableMap.<String, String>builder()","188","        .put(\"sonar.task\", \"scan\")","189","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","190","        .put(\"sonar.projectKey\", \"com.foo.project\")","191","        .put(\"sonar.projectName\", \"Foo Project\")","192","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","193","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","194","        .put(\"sonar.sources\", \"src\")","195","        .build())","196","      .start();","197","","198","    Map<String, List<Measure>> allMeasures = result.allMeasures();","199","","200","    assertThat(allMeasures.get(\"com.foo.project:src\/sample.xoo\")).extracting(\"metricKey\", \"intValue.value\")","201","      .containsOnly(tuple(\"lines\", 3),","202","        tuple(\"lines_to_cover\", 2));","203","","204","    assertThat(logTester.logs(LoggerLevel.WARN))","205","      .contains(\"Coverage measure for metric 'lines_to_cover' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\");","206","  }","207","","208","  @Test","209","  public void failIfTryingToSaveServerSideMeasure() throws IOException {","210","    File xooFile = new File(srcDir, \"sample.xoo\");","211","    FileUtils.write(xooFile, \"Sample xoo\\n\\ncontent\");","212","","213","    File measures = new File(srcDir, \"sample.xoo.measures\");","214","    FileUtils.write(measures, \"new_lines:2\");","215","","216","    try {","217","      tester.newTask()","218","        .properties(ImmutableMap.<String, String>builder()","219","          .put(\"sonar.task\", \"scan\")","220","          .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","221","          .put(\"sonar.projectKey\", \"com.foo.project\")","222","          .put(\"sonar.projectName\", \"Foo Project\")","223","          .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","224","          .put(\"sonar.projectDescription\", \"Description of Foo Project\")","225","          .put(\"sonar.sources\", \"src\")","226","          .build())","227","        .start();","228","      fail(\"Expected exception\");","229","    } catch (Exception e) {","230","      assertThat(e)","231","        .hasCauseInstanceOf(UnsupportedOperationException.class)","232","        .hasStackTraceContaining(\"Metric 'new_lines' should not be computed by a Sensor\");","233","    }","234","  }","235","","236","  @Test"],"delete":["42","  @org.junit.Rule","64","  public void setUp() {","65","    baseDir = temp.getRoot();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":[{"add":["26","import java.util.HashMap;","54","import org.sonar.api.utils.log.Logger;","55","import org.sonar.api.utils.log.Loggers;","120","  private static final Logger LOG = Loggers.get(DefaultSensorStorage.class);","155","  private final Map<Metric<?>, Metric<?>> deprecatedCoverageMetricMapping = new HashMap<>();","235","    DefaultMeasure measureToSave;","238","      measureToSave = new DefaultMeasure<>()","239","        .forMetric((Metric) metric)","240","        .on(measure.inputComponent())","241","        .withValue(measure.value());","242","    } else {","243","      measureToSave = measure;","258","      saveCoverageMetricInternal((InputFile) component, metric, measureToSave);","263","      measureCache.put(component.key(), metric.key(), measureToSave);"],"delete":["27","import java.util.IdentityHashMap;","35","import org.slf4j.Logger;","36","import org.slf4j.LoggerFactory;","120","  private static final Logger LOG = LoggerFactory.getLogger(DefaultSensorStorage.class);","155","  private final Map<Metric<?>, Metric<?>> deprecatedCoverageMetricMapping = new IdentityHashMap<>();","251","      saveCoverageMetricInternal((InputFile) component, metric, measure);","256","      measureCache.put(component.key(), metric.key(), measure);"]}]}},"0bf9da7268b7512812490cc4c2562afd84d443d7":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/CreateFormShim.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/CreateFormShim-test.tsx":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/CreateFormShim.tsx":[{"add":["20","import * as theme from '..\/..\/..\/app\/theme';","30","    const { createFormBuilder } = (window as any).SonarGovernance;","31","    return createFormBuilder(this.props, theme);"],"delete":["29","    const { CreateForm } = (window as any).SonarGovernance;","30","    return <CreateForm {...this.props} \/>;"]}],"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/CreateFormShim-test.tsx":[{"add":[],"delete":[]}]}},"e42d1ebefc43e016fa417938e17e5d1c633f5608":{"changes":{"tests\/src\/test\/resources\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/ServerSystemTest.java":"MODIFY","server\/sonar-server\/pom.xml":"MODIFY","pom.xml":"MODIFY"},"diff":{"tests\/src\/test\/resources\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html":[{"add":["31","    <td>\/dashboard?id=myproject.jsp<\/td>"],"delete":["31","    <td>\/dashboard\/index\/myproject.jsp<\/td>"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/ServerSystemTest.java":[{"add":["34","import org.sonarqube.pageobjects.Navigation;","35","import org.sonarqube.pageobjects.ServerIdPage;","36","import org.sonarqube.tests.Category4Suite;","37","import org.sonarqube.tests.Tester;","57","  public Tester tester = new Tester(orchestrator).disableOrganizations();","61","    tester.users().generateAdministrator(u -> u.setLogin(ADMIN_USER_LOGIN).setPassword(ADMIN_USER_LOGIN));","82","    Navigation nav = tester.openBrowser().openHome().logIn().submitCredentials(ADMIN_USER_LOGIN);","107","    WsResponse statusResponse = tester.wsClient().wsConnector().call(new GetRequest(\"api\/system\/status\"));","113","    tester.runHtmlTests(\"\/serverSystem\/ServerSystemTest\/system_info.html\");","120","    WsResponse response = tester.wsClient().wsConnector().call(","154","    String dialect = orchestrator.getConfiguration().getString(\"sonar.jdbc.dialect\");","155","    if (dialect == null || dialect.equals(\"h2\") || dialect.equals(\"embedded\")) {","156","      tester.runHtmlTests(\"\/serverSystem\/ServerSystemTest\/derby-warning.html\");","165","    tester.runHtmlTests( \"\/serverSystem\/ServerSystemTest\/hide-jdbc-settings.html\");","188","    tester.runHtmlTests(\"\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html\");","205","    ShowWsResponse response = ShowWsResponse.parseFrom(tester.wsClient().wsConnector().call("],"delete":["23","import org.sonarqube.tests.Category4Suite;","31","import org.junit.After;","39","import org.sonarqube.ws.client.WsClient;","41","import org.sonarqube.pageobjects.Navigation;","42","import org.sonarqube.pageobjects.ServerIdPage;","44","import util.user.UserRule;","50","import static util.ItUtils.newAdminWsClient;","51","import static util.ItUtils.newWsClient;","52","import static util.selenium.Selenese.runSelenese;","62","  public UserRule userRule = UserRule.from(orchestrator);","66","    userRule.createAdminUser(ADMIN_USER_LOGIN, ADMIN_USER_LOGIN);","67","  }","68","","69","  @After","70","  public void deleteAdminUser() {","71","    userRule.resetUsers();","92","    Navigation nav = Navigation.create(orchestrator).openHome().logIn().submitCredentials(ADMIN_USER_LOGIN);","117","    WsResponse statusResponse = newWsClient(orchestrator).wsConnector().call(new GetRequest(\"api\/system\/status\"));","123","    runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/system_info.html\");","130","    WsResponse response = newAdminWsClient(orchestrator).wsConnector().call(","164","    if (orchestrator.getConfiguration().getString(\"sonar.jdbc.dialect\").equals(\"h2\")) {","165","      runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/derby-warning.html\");","174","    runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/hide-jdbc-settings.html\");","192","  \/\/ TODO should be moved elsewhere","198","    runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html\");","215","    WsClient adminWsClient = newAdminWsClient(orchestrator);","216","    ShowWsResponse response = ShowWsResponse.parseFrom(adminWsClient.wsConnector().call("]}],"server\/sonar-server\/pom.xml":[{"add":[],"delete":["46","      <groupId>org.apache.tomcat.embed<\/groupId>","47","      <artifactId>tomcat-embed-jasper<\/artifactId>","48","    <\/dependency>","49","    <dependency>"]}],"pom.xml":[{"add":["69","    <tomcat.version>8.5.16<\/tomcat.version>","1054","            <groupId>org.apache.tomcat.embed<\/groupId>","1055","            <artifactId>tomcat-embed-jasper<\/artifactId>","1056","          <\/exclusion>","1057","          <exclusion>","1058","            <groupId>org.eclipse.jdt<\/groupId>"],"delete":["69","    <tomcat.version>8.5.11<\/tomcat.version>","1052","      <\/dependency>","1053","      <dependency>","1054","        <groupId>org.apache.tomcat.embed<\/groupId>","1055","        <artifactId>tomcat-embed-jasper<\/artifactId>","1056","        <version>${tomcat.version}<\/version>","1059","            <groupId>org.eclipse.jdt.core.compiler<\/groupId>"]}]}},"3ee7baceba601526f60ea2a78decfc0b6c8feb8e":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccountInput.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccounts.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/users.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccountInput.tsx":[{"add":["37","      <div className=\"js-scm-account\">"],"delete":["37","      <div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccounts.tsx":[{"add":["44","      <ul className=\"js-scm-accounts\">"],"delete":["44","      <ul>"]}],"server\/sonar-web\/src\/main\/js\/api\/users.ts":[{"add":["90","  scmAccount: string[];","92","  return postJSON('\/api\/users\/update', {","93","    ...data,","94","    scmAccount: data.scmAccount.length > 0 ? data.scmAccount : ''","95","  });"],"delete":["90","  scmAccount?: string;","92","  return postJSON('\/api\/users\/update', data);"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":[{"add":["126","      scmAccount: uniq(this.state.scmAccounts)","251","                <Button className=\"js-scm-account-add\" onClick={this.handleAddScmAccount}>"],"delete":["126","      scmAccount: uniq(this.state.scmAccounts).join(',')","251","                <Button onClick={this.handleAddScmAccount} type=\"reset\">"]}]}},"a272c3f10047489b2297e08a0f58dab27af350dc":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileExporters.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileExporters.tsx":[{"add":["38","      qualityProfile: profile.name"],"delete":["38","      name: profile.name"]}]}},"f8770a266372578f3fa59056c73c14f22305c5b5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":[{"add":["42","    const footer = document.getElementById('footer');","43","    if (footer) {","44","      footer.classList.add('page-footer-with-sidebar');","45","    }","46","  }","47","","48","  componentWillUnmount() {","49","    const footer = document.getElementById('footer');","50","    if (footer) {","51","      footer.classList.remove('page-footer-with-sidebar');","52","    }"],"delete":[]}]}},"867894b876c520c1342a60e36a2e421a2a291b71":{"changes":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_profile_admin.json":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.js":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_gate_admin.json":"ADD"},"diff":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_profile_admin.json":[{"add":["4","    \"showQualityGates\": false,"],"delete":["4","    \"showQualityGates\": true,"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.js":[{"add":["280","    if (!this.props.conf.showSettings) {","281","      return null;","282","    }","283",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["66","import static org.sonar.core.permission.GlobalPermissions.QUALITY_GATE_ADMIN;","319","  public void return_configuration_for_quality_gate_admin() throws Exception {","320","    init();","321","    componentDbTester.insertComponent(project);","322","    userSessionRule.logIn()","323","      .addProjectUuidPermissions(UserRole.USER, project.uuid())","324","      .addOrganizationPermission(project.getOrganizationUuid(), QUALITY_GATE_ADMIN);","325","","326","    executeAndVerify(project.key(), \"return_configuration_for_quality_gate_admin.json\");","327","  }","328","","329","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["61","import static org.sonar.core.permission.GlobalPermissions.QUALITY_GATE_ADMIN;","142","      if (userSession.hasComponentPermission(ADMIN, component) ||","143","        userSession.hasOrganizationPermission(org.getUuid(), QUALITY_PROFILE_ADMIN) ||","144","        userSession.hasOrganizationPermission(org.getUuid(), QUALITY_GATE_ADMIN)) {","230","    boolean isQualityProfileAdmin = userSession.hasOrganizationPermission(component.getOrganizationUuid(), QUALITY_PROFILE_ADMIN);","231","    boolean isQualityGateAdmin = userSession.hasOrganizationPermission(component.getOrganizationUuid(), QUALITY_GATE_ADMIN);","234","    json.prop(\"showQualityProfiles\", isProject && (isAdmin || isQualityProfileAdmin));","235","    json.prop(\"showQualityGates\", isProject && (isAdmin || isQualityGateAdmin));"],"delete":["141","      if (userSession.hasComponentPermission(ADMIN, component) || userSession.hasOrganizationPermission(org.getUuid(), QUALITY_PROFILE_ADMIN)) {","229","    json.prop(\"showQualityProfiles\", isProject);","230","    json.prop(\"showQualityGates\", isProject);"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_gate_admin.json":[{"add":[],"delete":[]}]}},"5b5488398259fcd6c1db21e5bd26bf005c7731a5":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderRule.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/PersistFileSourcesStepTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolderRule.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolder.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolder.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderRule.java":[{"add":["32","  public TreeRootHolderRule setRoot(Component root) {","33","    return setRoots(root, root);","34","  }","35","","36","  public TreeRootHolderRule setRoots(Component root, Component reportRoot) {","38","    delegate.setRoots(root, reportRoot);","43","  public boolean isEmpty() {","44","    return delegate.isEmpty();","45","  }","46","","47","  @Override"],"delete":["32","  public TreeRootHolderRule setRoot(Component newRoot) {","34","    delegate.setRoot(newRoot);","35","    delegate.setReportTreeRoot(newRoot);","64",""]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":[{"add":["41","  public boolean isEmpty() {","42","    return this.root == null;","43","  }","44","","45","  @Override","46","  public MutableTreeRootHolder setRoots(Component root, Component reportRoot) {","49","    this.extendedTreeRoot = requireNonNull(reportRoot, \"extended tree root can not be null\");"],"delete":["41","  public MutableTreeRootHolder setRoot(Component root) {","54","  public MutableTreeRootHolder setReportTreeRoot(Component root) {","55","    checkState(this.extendedTreeRoot == null, \"extended tree root can not be set twice in holder\");","56","    this.extendedTreeRoot = requireNonNull(root, \"extended tree root can not be null\");","57","    return this;","58","  }","59","","60","  @Override"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/PersistFileSourcesStepTest.java":[{"add":["450","    ReportComponent root = ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(PROJECT_UUID).setKey(PROJECT_KEY).addChildren(","455","      .build();","456","    treeRootHolder.setRoots(root, root);"],"delete":["450","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(PROJECT_UUID).setKey(PROJECT_KEY).addChildren(","455","      .build());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStep.java":[{"add":["91","        treeRootHolder.setRoots(changedComponentTreeRoot, reportTreeRoot);","93","        treeRootHolder.setRoots(reportTreeRoot, reportTreeRoot);"],"delete":["88","      treeRootHolder.setReportTreeRoot(reportTreeRoot);","92","        treeRootHolder.setRoot(changedComponentTreeRoot);","94","        treeRootHolder.setRoot(reportTreeRoot);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":[{"add":["58","  public void setRoots_throws_NPE_if_root_is_null() {","62","    underTest.setRoots(null, DUMB_PROJECT);","63","  }","64","","65","  @Test","66","  public void setRoots_throws_NPE_if_reportRoot_is_null() {","67","    expectedException.expect(NullPointerException.class);","68","    expectedException.expectMessage(\"root can not be null\");","69","","70","    underTest.setRoots(DUMB_PROJECT, null);","75","    underTest.setRoots(DUMB_PROJECT, DUMB_PROJECT);","80","    underTest.setRoots(null, DUMB_PROJECT);","99","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","108","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","117","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","127","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","134","    underTest.setRoots(SOME_VIEWS_COMPONENT_TREE, DUMB_PROJECT);","143","  public void verify_setRoots_getRoot() {","144","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","145","    assertThat(underTest.getRoot()).isSameAs(SOME_REPORT_COMPONENT_TREE);","146","  }","147","","148","  @Test","149","  public void verify_setRoots_getReportRoot() {","150","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","151","    assertThat(underTest.getReportTreeRoot()).isSameAs(DUMB_PROJECT);","163","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);"],"delete":["58","  public void setRoot_throws_NPE_if_arg_is_null() {","62","    underTest.setRoot(null);","67","    underTest.setRoot(DUMB_PROJECT);","72","    underTest.setRoot(DUMB_PROJECT);","91","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","100","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","109","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","119","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","126","    underTest.setRoot(SOME_VIEWS_COMPONENT_TREE);","135","  public void verify_setRoot_getRoot() {","136","    underTest.setRoot(DUMB_PROJECT);","137","    assertThat(underTest.getRoot()).isSameAs(DUMB_PROJECT);","149","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolderRule.java":[{"add":["23","  public MutableTreeRootHolderRule setRoots(Component root, Component reportRoot) {","24","    delegate.setRoots(root, reportRoot);"],"delete":["23","  public MutableTreeRootHolderRule setRoot(Component newRoot) {","24","    delegate.setRoot(newRoot);","25","    return this;","26","  }","27","","28","  @Override","29","  public MutableTreeRootHolder setReportTreeRoot(Component newRoot) {","30","    delegate.setReportTreeRoot(newRoot);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolder.java":[{"add":["28","   * @return true if the holder is empty","29","   *\/","30","  boolean isEmpty();","31","","32","  \/**"],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolder.java":[{"add":["29","  MutableTreeRootHolder setRoots(Component root, Component reportRoot);"],"delete":["29","  MutableTreeRootHolder setRoot(Component newRoot);","31","  \/**","32","   * Sets the root of the components that were in the scanner report in the TreeRootHolder.","33","   *","34","   * @throws NullPointerException if {@code newRoot} is {@code null}","35","   * @throws IllegalStateException if extended tree root {@link Component} has already been set","36","   *\/","37","  MutableTreeRootHolder setReportTreeRoot(Component newRoot);"]}]}},"4e19fe7ccd4c5ff5ca29fb0bdb831ed03942f441":{"changes":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueMeasureTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IssueCounterTest.java":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/CoreMetrics.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/IssueCounter.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueMeasureTest.java":[{"add":["66","   * SONAR-7555","78","    \/\/ 1 is a false-positive, 1 is a won't fix, 1 is confirmed, 1 is reopened, and the remaining ones stays open","80","    adminIssueClient().doTransition(issues.get(1).key(), \"wontfix\");","81","    adminIssueClient().doTransition(issues.get(2).key(), \"confirm\");","82","    adminIssueClient().doTransition(issues.get(3).key(), \"resolve\");","83","    adminIssueClient().doTransition(issues.get(3).key(), \"reopen\");","89","      ResourceQuery.createForMetrics(SAMPLE_PROJECT_KEY, \"false_positive_issues\", \"wont_fix_issues\", \"open_issues\", \"reopened_issues\", \"confirmed_issues\"));","91","    assertThat(project.getMeasureIntValue(\"wont_fix_issues\")).isEqualTo(1);","92","    assertThat(project.getMeasureIntValue(\"open_issues\")).isEqualTo(13);"],"delete":["77","    \/\/ 1 is a false-positive, 1 is confirmed, 1 is reopened, and the remaining ones stays open","79","    adminIssueClient().doTransition(issues.get(1).key(), \"confirm\");","80","    adminIssueClient().doTransition(issues.get(2).key(), \"resolve\");","81","    adminIssueClient().doTransition(issues.get(2).key(), \"reopen\");","87","      ResourceQuery.createForMetrics(SAMPLE_PROJECT_KEY, \"false_positive_issues\", \"open_issues\", \"reopened_issues\", \"confirmed_issues\"));","89","    assertThat(project.getMeasureIntValue(\"open_issues\")).isEqualTo(14);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IssueCounterTest.java":[{"add":["45","import static org.sonar.api.issue.Issue.RESOLUTION_WONT_FIX;","66","import static org.sonar.api.measures.CoreMetrics.WONT_FIX_ISSUES_KEY;","96","  static final Metric WONT_FIX_ISSUES_METRIC = new MetricImpl(23, WONT_FIX_ISSUES_KEY, WONT_FIX_ISSUES_KEY, INT);","131","    .add(WONT_FIX_ISSUES_METRIC)","187","  public void count_issues_by_resolution() {","188","    periodsHolder.setPeriods();","189","","190","    \/\/ bottom-up traversal -> from files to project","191","    underTest.beforeComponent(FILE1);","192","    underTest.onIssue(FILE1, createIssue(null, STATUS_OPEN, BLOCKER));","193","    underTest.onIssue(FILE1, createIssue(RESOLUTION_FIXED, STATUS_CLOSED, MAJOR));","194","    underTest.onIssue(FILE1, createIssue(RESOLUTION_FALSE_POSITIVE, STATUS_RESOLVED, MAJOR));","195","    underTest.onIssue(FILE1, createIssue(RESOLUTION_WONT_FIX, STATUS_CLOSED, MAJOR));","196","    underTest.afterComponent(FILE1);","197","","198","    underTest.beforeComponent(FILE2);","199","    underTest.onIssue(FILE2, createIssue(null, STATUS_CONFIRMED, BLOCKER));","200","    underTest.onIssue(FILE2, createIssue(null, STATUS_CONFIRMED, MAJOR));","201","    underTest.onIssue(FILE2, createIssue(RESOLUTION_WONT_FIX, STATUS_CLOSED, MAJOR));","202","    underTest.afterComponent(FILE2);","203","","204","    underTest.beforeComponent(FILE3);","205","    underTest.afterComponent(FILE3);","206","","207","    underTest.beforeComponent(PROJECT);","208","    underTest.afterComponent(PROJECT);","209","","210","    assertThat(measureRepository.getRawMeasure(FILE1, ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","211","    assertThat(measureRepository.getRawMeasure(FILE1, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","212","    assertThat(measureRepository.getRawMeasure(FILE1, WONT_FIX_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","213","","214","    assertThat(measureRepository.getRawMeasure(FILE2, ISSUES_METRIC).get().getIntValue()).isEqualTo(2);","215","    assertThat(measureRepository.getRawMeasure(FILE2, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(0);","216","    assertThat(measureRepository.getRawMeasure(FILE2, WONT_FIX_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","217","","218","    assertThat(measureRepository.getRawMeasure(FILE3, ISSUES_METRIC).get().getIntValue()).isEqualTo(0);","219","","220","    assertThat(measureRepository.getRawMeasure(PROJECT, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","221","    assertThat(measureRepository.getRawMeasure(PROJECT, WONT_FIX_ISSUES_METRIC).get().getIntValue()).isEqualTo(2);","222","  }","223","","224","  @Test"],"delete":["167","    \/\/ count by status","170","    assertThat(measureRepository.getRawMeasure(FILE1, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","175","    assertThat(measureRepository.getRawMeasure(FILE2, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(0);","182","    assertThat(measureRepository.getRawMeasure(PROJECT, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2733","metric.wont_fix_issues.name=Won't Fix  Issues","2734","metric.wont_fix_issues.description=Won't fix issues","2735",""],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/CoreMetrics.java":[{"add":["1541","   * @since 5.6","1542","   *\/","1543","  public static final String WONT_FIX_ISSUES_KEY = \"wont_fix_issues\";","1544","","1545","  \/**","1546","   * @since 5.6","1547","   *\/","1548","  public static final Metric<Integer> WONT_FIX_ISSUES = new Metric.Builder(WONT_FIX_ISSUES_KEY, \"Won't Fix Issues\", Metric.ValueType.INT)","1549","    .setDescription(\"Won't fix issues\")","1550","    .setDirection(Metric.DIRECTION_WORST)","1551","    .setDomain(DOMAIN_ISSUES)","1552","    .setBestValue(0.0)","1553","    .setOptimizedBestValue(true)","1554","    .create();","1555","","1556","  \/**"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":[{"add":["78","    int measuresOnTrk = 45;","79","    int measuresOnBrc = 222;","80","    int measuresOnDir = 141;","107","    int newMeasuresOnTrk = 55;","108","    int newMeasuresOnBrc = 286;"],"delete":["78","    int measuresOnTrk = 44;","79","    int measuresOnBrc = 216;","80","    int measuresOnDir = 137;","107","    int newMeasuresOnTrk = 54;","108","    int newMeasuresOnBrc = 280;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/IssueCounter.java":[{"add":["40","import static org.sonar.api.issue.Issue.RESOLUTION_FALSE_POSITIVE;","41","import static org.sonar.api.issue.Issue.RESOLUTION_WONT_FIX;","61","import static org.sonar.api.measures.CoreMetrics.WONT_FIX_ISSUES_KEY;","72"," * <li>issues per resolution (unresolved, false-positives, won't fix)<\/li>","169","    addMeasure(component, WONT_FIX_ISSUES_KEY, currentCounters.counter().wontFix);","234","    private int wontFix = 0;","244","      wontFix += counter.wontFix;","254","      } else if (RESOLUTION_FALSE_POSITIVE.equals(issue.resolution())) {","256","      } else if (RESOLUTION_WONT_FIX.equals(issue.resolution())) {","257","        wontFix++;"],"delete":["28","import org.sonar.api.issue.Issue;","69"," * <li>unresolved issues<\/li>","70"," * <li>false-positives<\/li>","71"," * <li>open issues<\/li>","251","      } else if (Issue.RESOLUTION_FALSE_POSITIVE.equals(issue.resolution())) {"]}]}},"626d28bab60fb53ed64dc1054640d224456901e4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetailsContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MetricNotFound.js":"ADD","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetails.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetailsContainer.js":[{"add":["42","const mapDispatchToProps = { fetchMeasure };"],"delete":["42","const mapDispatchToProps = dispatch => {","43","  return {","44","    fetchMeasure: (metricKey, periodIndex) => dispatch(fetchMeasure(metricKey, periodIndex))","45","  };","46","};"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/actions.js":[{"add":["66","    return getMeasuresAndMeta("],"delete":["66","    getMeasuresAndMeta("]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MetricNotFound.js":[{"add":[],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2701","component_measures.not_found=The requested measure was not found."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetails.js":[{"add":["24","import MetricNotFound from '.\/MetricNotFound';","29","  mounted: boolean;","31","  state = {","32","    loading: true","33","  };","35","  componentDidMount () {","36","    this.mounted = true;","37","    this.loadData();","38","  }","39","","40","  componentDidUpdate (prevProps) {","41","    if (prevProps.params.metricKey !== this.props.params.metricKey) {","42","      this.loadData();","46","  componentWillUnmount () {","47","    this.mounted = false;","50","  metricExists (): boolean {","51","    const { metrics } = this.props;","52","    const { metricKey } = this.props.params;","53","    const metric = metrics.find(metric => metric.key === metricKey);","54","    return !!metric;","55","  }","56","","57","  loadData () {","58","    if (this.metricExists()) {","59","      this.setState({ loading: true });","60","      const periodIndex = this.props.location.query.period || 1;","61","      const onLoaded = () => this.mounted && this.setState({ loading: false });","62","      this.props.fetchMeasure(this.props.params.metricKey, Number(periodIndex)).then(onLoaded, onLoaded);","67","    if (!this.metricExists()) {","68","      return <MetricNotFound\/>;","69","    }","70","","71","    if (this.state.loading) {","72","      return <Spinner\/>;","73","    }","74","","77","    if (!measure) {","78","      return <MetricNotFound\/>;"],"delete":["28","  componentWillMount () {","29","    const { metrics } = this.props;","30","    const { metricKey } = this.props.params;","31","    const metric = metrics.find(metric => metric.key === metricKey);","33","    if (!metric) {","34","      const { component } = this.props;","35","      const { router } = this.context;","37","      router.replace({","38","        pathname: '\/',","39","        query: { id: component.key }","40","      });","44","  componentDidMount () {","45","    const periodIndex = this.props.location.query.period || 1;","46","    this.props.fetchMeasure(this.props.params.metricKey, Number(periodIndex));","49","  componentDidUpdate (nextProps) {","50","    if (nextProps.params.metricKey !== this.props.params.metricKey) {","51","      const periodIndex = nextProps.location.query.period || 1;","52","      this.props.fetchMeasure(nextProps.params.metricKey, Number(periodIndex));","59","    if (measure == null) {","60","      return <Spinner\/>;","109","","110","MeasureDetails.contextTypes = {","111","  router: React.PropTypes.object","112","};"]}]}},"09c5d20c6c86d544c5a5a2448fe553b95f3cba2d":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/TempFolderProviderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/TempFolderProvider.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/TempFolderProviderTest.java":[{"add":["21","import org.apache.commons.io.FileUtils;","43","  TempFolderProvider sut = new TempFolderProvider();","44","","46","  public void existing_temp_dir() throws Exception {","48","    File tmpDir = temp.newFolder();","49","    when(fs.getTempDir()).thenReturn(tmpDir);","50","","51","    TempFolder folder = sut.provide(fs);","52","    assertThat(folder).isNotNull();","53","    File newDir = folder.newDir();","54","    assertThat(newDir).exists().isDirectory();","55","    assertThat(newDir.getParentFile().getCanonicalPath()).startsWith(tmpDir.getCanonicalPath());","56","  }","57","","58","  @Test","59","  public void create_temp_dir_if_missing() throws Exception {","60","    ServerFileSystem fs = mock(ServerFileSystem.class);","61","    File tmpDir = temp.newFolder();","62","    when(fs.getTempDir()).thenReturn(tmpDir);","63","    FileUtils.forceDelete(tmpDir);","64","","65","    TempFolder folder = sut.provide(fs);","66","    assertThat(folder).isNotNull();","67","    File newDir = folder.newDir();","68","    assertThat(newDir).exists().isDirectory();","69","    assertThat(newDir.getParentFile().getCanonicalPath()).startsWith(tmpDir.getCanonicalPath());"],"delete":["43","  public void createTempFolder() throws Exception {","45","    File serverTempFolder = temp.newFolder();","46","    when(fs.getTempDir()).thenReturn(serverTempFolder);","47","    TempFolderProvider tempFolderProvider = new TempFolderProvider(); ","48","    TempFolder tempUtils = tempFolderProvider.provide(fs);","49","    tempUtils.newDir();","50","    tempUtils.newFile();","51","    assertThat(new File(serverTempFolder, \"tmp\")).exists();","52","    assertThat(new File(serverTempFolder, \"tmp\").list()).hasSize(2);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/TempFolderProvider.java":[{"add":["40","        throw new IllegalStateException(\"Unable to create temp directory \" + tempDir, e);"],"delete":["40","        throw new IllegalStateException(\"Unable to create root temp directory \" + tempDir, e);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":[{"add":["101","    \/\/ Tomcat is started by app process with correct java.io.tmpdir","102","    return FileUtils.getTempDirectory();"],"delete":["101","    return new File(homeDir, \"temp\");"]}]}},"84951661e40e8a439f0a1ed4af9a0d00fa38fc83":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.js.snap":[{"add":["27","  <div","28","    className=\"little-spacer-top\">","31","      onClick={[Function]}"],"delete":["27","  <div>"]}]}},"96d7b49621a21e4e9b3eb3c03255f64e1d99fd4d":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/OrganizationDetailsStep.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/CreateWebhookForm.tsx":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":[{"add":["25","  getQualityGateUrl"],"delete":["25","  getQualityGateUrl,","26","  isUrl","120","","121","describe('#isUrl', () => {","122","  it('should be valid', () => {","123","    expect(isUrl('https:\/\/localhost')).toBeTruthy();","124","    expect(isUrl('https:\/\/localhost\/')).toBeTruthy();","125","    expect(isUrl('https:\/\/localhost:9000')).toBeTruthy();","126","    expect(isUrl('https:\/\/localhost:9000\/')).toBeTruthy();","127","    expect(isUrl('https:\/\/foo:bar@localhost:9000')).toBeTruthy();","128","    expect(isUrl('https:\/\/foo@localhost')).toBeTruthy();","129","    expect(isUrl('http:\/\/foo.com\/blah_blah')).toBeTruthy();","130","    expect(isUrl('http:\/\/foo.com\/blah_blah\/')).toBeTruthy();","131","    expect(isUrl('http:\/\/www.example.com\/wpstyle\/?p=364')).toBeTruthy();","132","    expect(isUrl('https:\/\/www.example.com\/foo\/?bar=baz&inga=42&quux')).toBeTruthy();","133","    expect(isUrl('http:\/\/userid@example.com')).toBeTruthy();","134","    expect(isUrl('http:\/\/userid@example.com\/')).toBeTruthy();","135","    expect(isUrl('http:\/\/userid:password@example.com:8080')).toBeTruthy();","136","    expect(isUrl('http:\/\/userid:password@example.com:8080\/')).toBeTruthy();","137","    expect(isUrl('http:\/\/userid@example.com:8080')).toBeTruthy();","138","    expect(isUrl('http:\/\/userid@example.com:8080\/')).toBeTruthy();","139","    expect(isUrl('http:\/\/userid:password@example.com')).toBeTruthy();","140","    expect(isUrl('http:\/\/userid:password@example.com\/')).toBeTruthy();","141","    expect(isUrl('http:\/\/142.42.1.1\/')).toBeTruthy();","142","    expect(isUrl('http:\/\/142.42.1.1:8080\/')).toBeTruthy();","143","    expect(isUrl('http:\/\/foo.com\/blah_(wikipedia)#cite-1')).toBeTruthy();","144","    expect(isUrl('http:\/\/foo.com\/blah_(wikipedia)_blah#cite-1')).toBeTruthy();","145","    expect(isUrl('http:\/\/foo.com\/(something)?after=parens')).toBeTruthy();","146","    expect(isUrl('http:\/\/code.google.com\/events\/#&product=browser')).toBeTruthy();","147","    expect(isUrl('http:\/\/j.mp')).toBeTruthy();","148","    expect(isUrl('http:\/\/foo.bar\/?q=Test%20URL-encoded%20stuff')).toBeTruthy();","149","    expect(isUrl('http:\/\/1337.net')).toBeTruthy();","150","    expect(isUrl('http:\/\/a.b-c.de')).toBeTruthy();","151","    expect(isUrl('http:\/\/223.255.255.254')).toBeTruthy();","152","    expect(isUrl('https:\/\/foo_bar.example.com\/')).toBeTruthy();","153","  });","154","","155","  it('should not be valid', () => {","156","    expect(isUrl('http:\/\/')).toBeFalsy();","157","    expect(isUrl('http:\/\/?')).toBeFalsy();","158","    expect(isUrl('http:\/\/??')).toBeFalsy();","159","    expect(isUrl('http:\/\/??\/')).toBeFalsy();","160","    expect(isUrl('http:\/\/#')).toBeFalsy();","161","    expect(isUrl('http:\/\/##')).toBeFalsy();","162","    expect(isUrl('http:\/\/##\/')).toBeFalsy();","163","    expect(isUrl('\/\/')).toBeFalsy();","164","    expect(isUrl('\/\/\/')).toBeFalsy();","165","    expect(isUrl('http:\/\/ shouldfail.com')).toBeFalsy();","166","  });","167","});"]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":[],"delete":["254","","255","export function isUrl(url: string) {","256","  try {","257","    const elem = document.createElement('a');","258","    elem.href = url;","259","    return !!(elem.host && elem.hostname && elem.protocol);","260","  } catch (error) {","261","    \/\/ both IE11 & Edge throw an exception when a url contains credentials","262","    \/\/ is this case let's just pretend the url is fine and pass it to the server for the validation","263","    return true;","264","  }","265","}"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/OrganizationDetailsStep.tsx":[{"add":["20","import { isWebUri } from 'valid-url';","82","    if (avatar.length > 0 && !isWebUri(avatar)) {","94","    if (url.length > 0 && !isWebUri(url)) {"],"delete":["27","import { isUrl } from '..\/..\/..\/helpers\/urls';","82","    if (avatar.length > 0 && !isUrl(avatar)) {","94","    if (url.length > 0 && !isUrl(url)) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/CreateWebhookForm.tsx":[{"add":["21","import { isWebUri } from 'valid-url';","55","    } else if (!isWebUri(url)) {"],"delete":["24","import { isUrl } from '..\/..\/..\/helpers\/urls';","55","    } else if (!isUrl(url)) {"]}],"server\/sonar-web\/package.json":[{"add":["45","    \"valid-url\": \"1.0.9\",","80","    \"@types\/valid-url\": \"1.0.2\","],"delete":[]}],"server\/sonar-web\/yarn.lock":[{"add":["896","\"@types\/valid-url@1.0.2\":","897","  version \"1.0.2\"","898","  resolved \"http:\/\/registry.npmjs.org\/@types\/valid-url\/-\/valid-url-1.0.2.tgz#60fa435ce24bfd5ba107b8d2a80796aeaf3a8f45\"","899","  integrity sha1-YPpDXOJL\/VuhB7jSqAeWrq86j0U=","900","","10192","valid-url@1.0.9:","10193","  version \"1.0.9\"","10194","  resolved \"https:\/\/registry.yarnpkg.com\/valid-url\/-\/valid-url-1.0.9.tgz#1c14479b40f1397a75782f115e4086447433a200\"","10195","  integrity sha1-HBRHm0DxOXp1eC8RXkCGRHQzogA=","10196",""],"delete":[]}]}},"aa838eba54111b32b619f75e6adb9e1a6c44e9ad":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.tsx":[{"add":["58","      .then(this.finishLoading, () => {});"],"delete":["58","      .then(this.finishLoading, this.finishLoading);"]}]}},"d9a11f3443c8d9a464f6f605630c12c9562dad3b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureContent.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/MeasureHeader-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/TreeMapView.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureHeader.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/MeasureHeader-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureContent.js":[{"add":["326","        {metric != null && (","327","          <div className=\"layout-page-main-inner measure-details-content\">","328","            <MeasureHeader","329","              branchLike={branchLike}","330","              component={component}","331","              components={this.state.components}","332","              leakPeriod={this.props.leakPeriod}","333","              \/\/ fall back to `undefined` to be compatible with typescript files where we compare with `=== undefined`","334","              measure={measure || undefined}","335","              metric={metric}","336","              secondaryMeasure={this.props.secondaryMeasure}","337","            \/>","338","            {isFileType(component) ? this.renderCode() : this.renderMeasure()}","339","          <\/div>","340","        )}"],"delete":["326","        {metric != null &&","327","          measure != null && (","328","            <div className=\"layout-page-main-inner measure-details-content\">","329","              <MeasureHeader","330","                branchLike={branchLike}","331","                component={component}","332","                components={this.state.components}","333","                leakPeriod={this.props.leakPeriod}","334","                measure={measure}","335","                secondaryMeasure={this.props.secondaryMeasure}","336","              \/>","337","              {isFileType(component) ? this.renderCode() : this.renderMeasure()}","338","            <\/div>","339","          )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/MeasureHeader-test.js":[{"add":["23","const METRIC = {","24","  key: 'reliability_rating',","25","  type: 'RATING',","26","  name: 'Reliability Rating'","27","};","28","","32","  metric: METRIC,","36","const LEAK_METRIC = {","37","  key: 'new_reliability_rating',","38","  type: 'RATING',","39","  name: 'Reliability Rating on New Code'","40","};","41","","44","  metric: LEAK_METRIC,","69","  metric: METRIC,","80","  expect(","81","    shallow(<MeasureHeader {...PROPS} measure={LEAK_MEASURE} metric={LEAK_METRIC} \/>)","82","  ).toMatchSnapshot();","110","","111","it('should work with measure without value', () => {","112","  expect(shallow(<MeasureHeader {...PROPS} measure={undefined} \/>)).toMatchSnapshot();","113","});"],"delete":["26","  metric: {","27","    key: 'reliability_rating',","28","    type: 'RATING',","29","    name: 'Reliability Rating'","30","  },","36","  metric: {","37","    key: 'new_reliability_rating',","38","    type: 'RATING',","39","    name: 'Reliability Rating on New Code'","40","  },","75","  expect(shallow(<MeasureHeader {...PROPS} measure={LEAK_MEASURE} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/TreeMapView.js":[{"add":["72","        if (sizeMeasure == null) {","75","        const colorValue =","76","          colorMeasure && (isDiffMetric(metric.key) ? colorMeasure.leak : colorMeasure.value);","90","            metric,"],"delete":["72","        if (colorMeasure == null || sizeMeasure == null) {","75","        const colorValue = isDiffMetric(colorMeasure.metric.key)","76","          ? colorMeasure.leak","77","          : colorMeasure.value;","91","            colorMeasure.metric,"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureHeader.js":[{"add":["33","\/*:: import type { Metric } from '..\/..\/..\/store\/metrics\/actions'; *\/","40","  measure?: MeasureEnhanced,","41","  metric: Metric,","46","  const { branchLike, component, leakPeriod, measure, metric, secondaryMeasure } = props;","52","          <IssueTypeIcon className=\"little-spacer-right text-text-bottom\" query={metric.key} \/>","61","                  value={measure && measure.leak}","64","                <Measure","65","                  metricKey={metric.key}","66","                  metricType={metric.type}","67","                  value={measure && measure.value}","68","                \/>","74","              overlay={translate('component_measures.show_metric_history')}","75","              placement=\"right\">"],"delete":["39","  measure: MeasureEnhanced,","44","  const { branchLike, component, leakPeriod, measure, secondaryMeasure } = props;","45","  const { metric } = measure;","51","          <IssueTypeIcon query={metric.key} className=\"little-spacer-right text-text-bottom\" \/>","58","                  value={measure.leak}","63","                <Measure value={measure.value} metricKey={metric.key} metricType={metric.type} \/>","69","              placement=\"right\"","70","              overlay={translate('component_measures.show_metric_history')}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/MeasureHeader-test.js.snap":[{"add":["197","","198","exports[`should work with measure without value 1`] = `","199","<div","200","  className=\"measure-details-header big-spacer-bottom\"","201",">","202","  <div","203","    className=\"measure-details-primary\"","204","  >","205","    <div","206","      className=\"measure-details-metric\"","207","    >","208","      <IssueTypeIcon","209","        className=\"little-spacer-right text-text-bottom\"","210","        query=\"reliability_rating\"","211","      \/>","212","      Reliability Rating","213","      <span","214","        className=\"measure-details-value spacer-left\"","215","      >","216","        <strong>","217","          <Measure","218","            metricKey=\"reliability_rating\"","219","            metricType=\"RATING\"","220","          \/>","221","        <\/strong>","222","      <\/span>","223","      <Tooltip","224","        overlay=\"component_measures.show_metric_history\"","225","        placement=\"right\"","226","      >","227","        <Link","228","          className=\"js-show-history spacer-left button button-small\"","229","          onlyActiveOnIndex={false}","230","          style={Object {}}","231","          to={","232","            Object {","233","              \"pathname\": \"\/project\/activity\",","234","              \"query\": Object {","235","                \"custom_metrics\": \"reliability_rating\",","236","                \"graph\": \"custom\",","237","                \"id\": \"foo\",","238","              },","239","            }","240","          }","241","        >","242","          <IconHistory \/>","243","        <\/Link>","244","      <\/Tooltip>","245","    <\/div>","246","    <div","247","      className=\"measure-details-primary-actions\"","248","    >","249","      <LeakPeriodLegend","250","        className=\"spacer-left\"","251","        component={","252","          Object {","253","            \"key\": \"foo\",","254","            \"qualifier\": \"TRK\",","255","          }","256","        }","257","        period={","258","          Object {","259","            \"date\": \"2017-05-16T13:50:02+0200\",","260","            \"index\": 1,","261","            \"mode\": \"previous_version\",","262","            \"parameter\": \"6,4\",","263","          }","264","        }","265","      \/>","266","    <\/div>","267","  <\/div>","268","<\/div>","269","`;"],"delete":[]}]}},"17c1d1814e5f1274cd8c1609dc46443b1805dd50":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":[{"add":["91","      UpsertImpl update = updates.iterator().next();","92","      select.scroll(row -> callSingleHandler(handler, update, row));"],"delete":["91","      select.scroll(row -> callSingleHandler(handler, updates.iterator().next(), row));"]}]}},"2542ddd092f5910aed39895a1b3061148aa8e03f":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":"MODIFY","server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilderTest.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":[{"add":["33","  private static final String ALL_LOGS_TO_CONSOLE_PROPERTY = \"sonar.log.console\";","42","    if (isAllLogsToConsoleEnabled(props)) {","43","      log4JPropertiesBuilder.configureGlobalStdoutLog(config, logPattern);","44","    }","53","","54","  \/**","55","   * Finds out whether we are in testing environment (usually ITs) and logs of all processes must be forward to","56","   * App's System.out. This is specified by the value of property {@link #ALL_LOGS_TO_CONSOLE_PROPERTY}.","57","   *\/","58","  private static boolean isAllLogsToConsoleEnabled(Props props) {","59","    return props.valueAsBoolean(ALL_LOGS_TO_CONSOLE_PROPERTY, false);","60","  }"],"delete":[]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":[{"add":["89","    FileAppender appender = new FileAppender(appenderName, rollingPolicy, logPattern);","90","    appender.writeAppenderProperties();","91","    return appender.getAppenderRef();","92","  }","93","","94","  public void configureGlobalStdoutLog(RootLoggerConfig config, String logPattern) {","95","    String appenderRef = writeStdoutAppender(config, logPattern);","96","","97","    putProperty(ROOT_LOGGER_NAME + \".appenderRef.\" + appenderRef + \".ref\", appenderRef);","98","  }","99","","100","  private String writeStdoutAppender(RootLoggerConfig config, String logPattern) {","101","    String appenderName = \"stdout\";","102","    ConsoleAppender appender = new ConsoleAppender(appenderName, logPattern);","168","  private class FileAppender {","174","    private FileAppender(String appenderName, RollingPolicy rollingPolicy, String logPattern) {","198","  private class ConsoleAppender {","199","    private final String prefix;","200","    private final String appenderName;","201","    private final String logPattern;","202","","203","    private ConsoleAppender(String appenderName, String logPattern) {","204","      this.prefix = \"appender.\" + appenderName + \".\";","205","      this.appenderName = appenderName;","206","      this.logPattern = logPattern;","207","    }","208","","209","    void writeAppenderProperties() {","210","      put(\"type\", \"Console\");","211","      put(\"name\", appenderName);","212","      put(\"layout.type\", \"PatternLayout\");","213","      put(\"layout.pattern\", logPattern);","214","    }","215","","216","    void put(String key, String value) {","217","      Log4JPropertiesBuilder.this.putProperty(this.prefix + key, value);","218","    }","219","","220","    String getAppenderRef() {","221","      return appenderName;","222","    }","223","  }","224",""],"delete":["89","    Appender appender = new Appender(appenderName, rollingPolicy, logPattern);","155","  private class Appender {","161","    private Appender(String appenderName, RollingPolicy rollingPolicy, String logPattern) {"]}],"server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilderTest.java":[{"add":["264","    verifyProperties(underTest.get(),","274","  public void name() {","275","    String logPattern = randomAlphanumeric(15);","276","    Log4JPropertiesBuilder underTest = newLog4JPropertiesBuilder();","277","    underTest.configureGlobalStdoutLog(esRootLoggerConfig, logPattern);","278","","279","    verifyProperties(underTest.get(),","280","      \"appender.stdout.type\", \"Console\",","281","      \"appender.stdout.name\", \"stdout\",","282","      \"appender.stdout.layout.type\", \"PatternLayout\",","283","      \"appender.stdout.layout.pattern\", logPattern,","284","      \"rootLogger.appenderRef.stdout.ref\", \"stdout\");","285","  }","286","","287","  @Test","492","    verifyProperties(builder.get(),","516","    verifyProperties(builder.get(),","531","  private void verifyProperties(Properties properties, String... expectedPropertyKeysAndValuesOrdered) {"],"delete":["264","    verifyPropertiesForConfigureGlobalFileLog(underTest.get(),","478","    verifyPropertiesForConfigureGlobalFileLog(builder.get(),","502","    verifyPropertiesForConfigureGlobalFileLog(builder.get(),","517","  private void verifyPropertiesForConfigureGlobalFileLog(Properties properties, String... expectedPropertyKeysAndValuesOrdered) {"]}]}},"99a29c395b07c79b45b3360d15df74718ed95b59":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":[{"add":["22","import PropTypes from 'prop-types';","25","import { setIssueAssignee } from '..\/..\/api\/issues';","26","import { updateIssue } from '.\/actions';","118","    key('space', 'issues', () => {","119","      if (this.props.onCheck) {","120","        this.props.onCheck(this.props.issue.key);","121","        return false;","122","      }","123","    });","132","    key.unbind('space', 'issues');"],"delete":["21","import PropTypes from 'prop-types';","24","import { updateIssue } from '.\/actions';","25","import { setIssueAssignee } from '..\/..\/api\/issues';"]}]}},"08d2dc1e42e32e67c0f8d3932c118b2cb3ed4e17":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/store\/appState.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":[{"add":["99","    edition: EditionKey | undefined;"],"delete":["99","    edition: EditionKey;"]}],"server\/sonar-web\/src\/main\/js\/store\/appState.ts":[{"add":["48","  edition: undefined,"],"delete":["19","import { EditionKey } from '..\/apps\/marketplace\/utils';","49","  edition: EditionKey.community,"]}]}},"fb9f4f8314cc44d45aef2f41a82520d969080444":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivitiesTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivities.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivitiesTest.java":[{"add":["74","  public void delete_the_rows_of_ACTIVITIES_that_do_not_have_profileKey() throws SQLException {","78","","79","    assertThat(db.countRowsOfTable(ACTIVITIES_TABLE)).isEqualTo(0);","80","  }","81","","82","  @Test","83","  public void delete_the_rows_of_ACTIVITIES_that_have_empty_profileKey() throws SQLException {","84","    insertActivity(\"\");","85","","86","    underTest.execute();","87","","88","    assertThat(db.countRowsOfTable(ACTIVITIES_TABLE)).isEqualTo(0);","89","  }","90","","91","  @Test","92","  public void delete_the_rows_of_ACTIVITIES_that_have_blank_profileKey() throws SQLException {","93","    insertActivity(\"    \");","94","","95","    underTest.execute();","96","","97","    assertThat(db.countRowsOfTable(ACTIVITIES_TABLE)).isEqualTo(0);"],"delete":["74","  public void fail_if_activity_data_is_not_well_formatted() throws SQLException {","75","    expectedException.expect(IllegalStateException.class);","76","    expectedException.expectMessage(\"Error during processing of row: \");","77",""]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivities.java":[{"add":["31","import static org.apache.commons.lang.StringUtils.isBlank;","46","","47","    \/\/ SONAR-8534 delete orphans","48","    context.prepareUpsert(\"delete from activities where profile_key is null\")","49","      .execute()","50","      .commit();","58","    if (isBlank(profileKey)) {","59","      return false;","60","    }"],"delete":["31","import static com.google.common.base.Preconditions.checkState;","32","import static org.apache.commons.lang.StringUtils.isNotBlank;","54","    checkState(isNotBlank(profileKey), \"No profile key found in db row of activities.data_field\", id);","55","","59",""]}]}},"9ea5ee4ea61f0311c4f1fa5d2cfa96896be9676c":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDto.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDtoTest.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDto.java":[{"add":["39","import java.util.*;","108","    if (reducedLine.isEmpty()) {"],"delete":["39","import java.util.Collections;","40","import java.util.HashMap;","41","import java.util.Iterator;","42","import java.util.List;","43","import java.util.Map;","112","    if (line.isEmpty()) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDtoTest.java":[{"add":[],"delete":[]}]}},"1ead4d114275621e5c4902c2b905bb1332321d5e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["208","            token"],"delete":["208","            StringUtils.left(token, DefaultIndexSettings.MAXIMUM_NGRAM_LENGTH)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["220","    RuleDefinitionDto rule5 = createRule(rule -> rule.setRuleKey(\"405\")","221","      .setDescription(\"internationalization missunderstandings alsdkjfnadklsjfnadkdfnsksdjfn\"));","251","","252","    \/\/ long words","253","    assertThat(underTest.search(new RuleQuery().setQueryText(\"missunderstand\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","254","    assertThat(underTest.search(new RuleQuery().setQueryText(\"missunderstandings\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","255","    assertThat(underTest.search(new RuleQuery().setQueryText(\"alsdkjfnadklsjfnadkdfnsksdjfn\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","256","    assertThat(underTest.search(new RuleQuery().setQueryText(\"internationalization\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","257","    assertThat(underTest.search(new RuleQuery().setQueryText(\"internationalizationBlaBla\"), new SearchOptions()).getIds()).isEmpty();"],"delete":["244","    \/\/ stopwords","245","    assertThat(underTest.search(new RuleQuery().setQueryText(\"and\"), new SearchOptions()).getIds()).isEmpty();","246","    assertThat(underTest.search(new RuleQuery().setQueryText(\"great and shiny\"), new SearchOptions()).getIds()).isEmpty();","247",""]}]}},"2962e43c138995b6c8d61a333cb2448932333d1c":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/ComponentCell.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-issues-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":[{"add":["22","  getPathUrlAsString,","23","  getProjectUrl,","43","describe('#getPathUrlAsString', () => {","45","    expect(getPathUrlAsString(getProjectUrl(SIMPLE_COMPONENT_KEY, 'branch:7.0'))).toBe(","46","      '\/dashboard?id=' + SIMPLE_COMPONENT_KEY + '&branch=branch%3A7.0'","47","    );","51","    expect(getPathUrlAsString(getProjectUrl(COMPLEX_COMPONENT_KEY))).toBe(","58","    expect(getPathUrlAsString(getProjectUrl(COMPLEX_COMPONENT_KEY))).toBe("],"delete":["20","  getComponentUrl,","42","describe('#getComponentUrl', () => {","44","    expect(getComponentUrl(SIMPLE_COMPONENT_KEY)).toBe('\/dashboard?id=' + SIMPLE_COMPONENT_KEY);","48","    expect(getComponentUrl(COMPLEX_COMPONENT_KEY)).toBe(","55","    expect(getComponentUrl(COMPLEX_COMPONENT_KEY)).toBe("]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["19","import { omitBy, isNil } from 'lodash';","38","export function getPathUrlAsString(path: Location): string {","39","  return `${getBaseUrl()}${path.pathname}?${stringify(omitBy(path.query, isNil))}`;"],"delete":["37","\/**","38"," * Generate URL for a component's home page","39"," * Deprecated : use getProjectUrl","40"," *\/","41","export function getComponentUrl(componentKey: string, branch?: string): string {","42","  const branchQuery = branch ? `&branch=${encodeURIComponent(branch)}` : '';","43","  return getBaseUrl() + '\/dashboard?id=' + encodeURIComponent(componentKey) + branchQuery;","81","export function getComponentIssuesUrlAsString(componentKey: string, query?: Query): string {","82","  const path = getComponentIssuesUrl(componentKey, query);","83","  return `${getBaseUrl()}${path.pathname}?${stringify(path.query)}`;","84","}","85",""]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/ComponentCell.js":[{"add":["23","import { getPathUrlAsString, getProjectUrl } from '..\/..\/..\/helpers\/urls';","74","              href={getPathUrlAsString(getProjectUrl(component.key, branch))}","82","              href={getPathUrlAsString(getProjectUrl(component.refKey, branch))}>"],"delete":["23","import { getComponentUrl } from '..\/..\/..\/helpers\/urls';","74","              href={getComponentUrl(component.key, branch)}","82","              href={getComponentUrl(component.refKey, branch)}>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.js":[{"add":["23","import { getPathUrlAsString, getProjectUrl, getComponentIssuesUrl } from '..\/..\/helpers\/urls';","91","              <a","92","                href={getPathUrlAsString(getProjectUrl(project, this.props.branch))}","93","                className=\"link-with-icon\">","95","              <\/a>","100","                <a","101","                  href={getPathUrlAsString(getProjectUrl(subProject, this.props.branch))}","102","                  className=\"link-with-icon\">","104","                <\/a>","131","              <a","134","                href={getPathUrlAsString({","137","                })}>","139","              <\/a>","181","              <a","182","                href={getPathUrlAsString(","183","                  getComponentIssuesUrl(project, {","184","                    resolved: 'false',","185","                    fileUuids: uuid,","186","                    branch: this.props.branch","187","                  })","188","                )}","193","              <\/a>"],"delete":["21","import { Link } from 'react-router';","24","import { getProjectUrl, getComponentIssuesUrl } from '..\/..\/helpers\/urls';","79","    \/\/ TODO check if source viewer is displayed inside workspace","93","              <Link to={getProjectUrl(project, this.props.branch)} className=\"link-with-icon\">","95","              <\/Link>","100","                <Link to={getProjectUrl(subProject, this.props.branch)} className=\"link-with-icon\">","102","                <\/Link>","129","              <Link","132","                to={{","135","                }}>","137","              <\/Link>","179","              <Link","180","                to={getComponentIssuesUrl(project, {","181","                  resolved: 'false',","182","                  fileUuids: uuid,","183","                  branch: this.props.branch","184","                })}","189","              <\/Link>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-issues-view.js":[{"add":["22","import { getPathUrlAsString, getComponentIssuesUrl, getBaseUrl } from '..\/..\/..\/helpers\/urls';","70","            getPathUrlAsString(","71","              getComponentIssuesUrl(projectBase.key, {","72","                resolved: 'false',","73","                rules: this.model.id","74","              })","75","            )"],"delete":["22","import { getComponentIssuesUrlAsString, getBaseUrl } from '..\/..\/..\/helpers\/urls';","70","            getComponentIssuesUrlAsString(projectBase.key, {","71","              resolved: 'false',","72","              rules: this.model.id","73","            })"]}]}},"ec0c9c265fed27964480ce51edc8a191b5234be7":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/DefaultHttpDownloaderTest.java":"MODIFY","sonar-application\/src\/main\/assembly\/conf\/sonar.properties":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/DefaultHttpDownloaderTest.java":[{"add":["59","import static org.mockito.Matchers.anyString;","61","import static org.mockito.Matchers.eq;","277","  public void https_defaults_are_http_properties() {","278","    DefaultHttpDownloader.SystemFacade system = mock(DefaultHttpDownloader.SystemFacade.class);","279","    Settings settings = new Settings();","280","    settings.setProperty(\"http.proxyHost\", \"1.2.3.4\");","281","    settings.setProperty(\"http.proxyPort\", \"80\");","282","","283","    new DefaultHttpDownloader.BaseHttpDownloader(system, settings, null);","284","","285","    verify(system).setProperty(\"http.proxyHost\", \"1.2.3.4\");","286","    verify(system).setProperty(\"http.proxyPort\", \"80\");","287","    verify(system).setProperty(\"https.proxyHost\", \"1.2.3.4\");","288","    verify(system).setProperty(\"https.proxyPort\", \"80\");","289","  }","290","","291","  @Test","316","  @Test","317","  public void no_http_proxy_settings_by_default() {","318","    DefaultHttpDownloader.SystemFacade system = mock(DefaultHttpDownloader.SystemFacade.class);","319","    Settings settings = new Settings();","320","    new DefaultHttpDownloader.BaseHttpDownloader(system, settings, null);","321","","322","    verify(system, never()).setProperty(eq(\"http.proxyHost\"), anyString());","323","    verify(system, never()).setProperty(eq(\"https.proxyHost\"), anyString());","324","    verify(system, never()).setProperty(eq(\"http.proxyPort\"), anyString());","325","    verify(system, never()).setProperty(eq(\"https.proxyPort\"), anyString());","326","    verify(system, never()).setDefaultAuthenticator(any(Authenticator.class));","327","  }","328",""],"delete":[]}],"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":[{"add":["190","# HTTPS proxy (defaults are values of http.proxyHost and http.proxyPort)"],"delete":["190","","191","# HTTPS proxy (default none)"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":[{"add":["179","    private static final String HTTP_PROXY_HOST = \"http.proxyHost\";","180","    private static final String HTTPS_PROXY_HOST = \"https.proxyHost\";","181","    private static final String HTTP_PROXY_PORT = \"http.proxyPort\";","182","    private static final String HTTPS_PROXY_PORT = \"https.proxyPort\";","185","      HTTP_PROXY_HOST, HTTP_PROXY_PORT, \"http.nonProxyHosts\",","186","      HTTPS_PROXY_HOST, HTTPS_PROXY_PORT,","203","      \/\/ defaults of HTTPS properties are the values of HTTP properties","204","      setSystemPropertyToDefaultIfNotSet(system, settings, HTTPS_PROXY_HOST, HTTP_PROXY_HOST);","205","      setSystemPropertyToDefaultIfNotSet(system, settings, HTTPS_PROXY_PORT, HTTP_PROXY_PORT);","206","","214","    private static void setSystemPropertyToDefaultIfNotSet(SystemFacade system, Settings settings, String httpsProperty, String httpProperty) {","215","      if (!settings.hasKey(httpsProperty) && settings.hasKey(httpProperty)) {","216","        system.setProperty(httpsProperty, settings.getString(httpProperty));","217","      }","218","    }","219",""],"delete":["181","      \"http.proxyHost\", \"http.proxyPort\", \"http.nonProxyHosts\",","182","      \"https.proxyHost\", \"https.proxyPort\","]}]}},"f740cb5fde92c4c77aab732390cc2b7a2b39e813":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/Navigation.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/ProjectsPageTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/Navigation.java":[{"add":["86","  public ProjectsPage openProjectsWithQuery(String query) {","87","    return open(\"\/projects?\" + query, ProjectsPage.class);","88","  }","89",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":[{"add":["73","    if (footer) {","74","      footer.classList.add('page-footer-with-sidebar');","75","    }","87","    if (footer) {","88","      footer.classList.remove('page-footer-with-sidebar');","89","    }","98","  isFiltered = (query = this.state.query) =>","99","    Object.values(query).some(value => value !== undefined);","204","    if (initialMount && !this.isFiltered(query) && savedOptionsSet) {"],"delete":["73","    footer && footer.classList.add('page-footer-with-sidebar');","85","    footer && footer.classList.remove('page-footer-with-sidebar');","94","  isFiltered = () => Object.values(this.state.query).some(value => value !== undefined);","199","    if (initialMount && !this.isFiltered() && savedOptionsSet) {"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/ProjectsPageTest.java":[{"add":["202","","203","  @Test","204","  public void should_open_permalink() {","205","    String user = tester.users().generate().getLogin();","206","    Navigation nav = tester.openBrowser().logIn().submitCredentials(user);","207","","208","    \/\/ make a search, so its parameters saved to local storage","209","    nav.openProjects().changePerspective(\"Leak\");","210","","211","    \/\/ change a page","212","    nav.openHome();","213","","214","    \/\/ open a permalink to a particular visualization, it must be kept","215","    nav.openProjectsWithQuery(\"view=visualizations&visualization=coverage\");","216","    assertThat(url()).contains(\"view=visualizations&visualization=coverage\");","217","  }"],"delete":[]}]}},"2fdab0c755a5f4cf22a3cd15843703d5947c9b15":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/LogTester.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/util\/ProgressReportTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/ListInterceptor.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/LogTester.java":[{"add":[],"delete":["22","import java.util.Optional;","23","import java.util.function.Predicate;","94","  public Optional<String> findFirstLog(Predicate<String> msgPredicate) {","95","    return ((ListInterceptor) LogInterceptors.get()).findFirst(msgPredicate);","96","  }","97",""]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/util\/ProgressReportTest.java":[{"add":["62","      logged = logTester.logs().contains(\"Some message\");"],"delete":["62","      logged = logTester.findFirstLog(\"Some message\"::equals).isPresent();"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/ListInterceptor.java":[{"add":["21","import com.google.common.collect.ImmutableList;","22","import java.util.Collections;","24","import java.util.Map;","25","import java.util.concurrent.ConcurrentHashMap;","26","import java.util.concurrent.CopyOnWriteArrayList;","32","  private final List<LogAndArguments> logs = new CopyOnWriteArrayList<>();","33","  private final Map<LoggerLevel, List<LogAndArguments>> logsByLevel = new ConcurrentHashMap<>();","70","    logsByLevel.compute(level, (key, existingList) -> {","71","      if (existingList == null) {","72","        return new CopyOnWriteArrayList<>(new LogAndArguments[] {l});","73","      }","74","      existingList.add(l);","75","      return existingList;","76","    });","84","    List<LogAndArguments> res = logsByLevel.get(level);","85","    if (res == null) {","86","      return Collections.emptyList();","87","    }","88","    return ImmutableList.copyOf(res).stream().map(LogAndArguments::getFormattedMsg).collect(Collectors.toList());"],"delete":["21","import com.google.common.collect.ArrayListMultimap;","22","import com.google.common.collect.ListMultimap;","23","import java.util.ArrayList;","25","import java.util.Optional;","26","import java.util.function.Predicate;","32","  private final List<LogAndArguments> logs = new ArrayList<>();","33","  private final ListMultimap<LoggerLevel, LogAndArguments> logsByLevel = ArrayListMultimap.create();","70","    logsByLevel.put(level, l);","77","  public Optional<String> findFirst(Predicate<String> logPredicate) {","78","    return logs.stream().map(LogAndArguments::getFormattedMsg).filter(logPredicate).findFirst();","79","  }","80","","82","    return logsByLevel.get(level).stream().map(LogAndArguments::getFormattedMsg).collect(Collectors.toList());"]}]}},"bf7ec4b2326636021f0634d817fded3619773902":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":[{"add":["150","    return [...PORTFOLIO_METRICS];","153","    return [...APPLICATION_METRICS];","156","    return [...LEAK_METRICS];","158","  return [...METRICS];","194","  if (['VW', 'SVW'].includes(qualifier)) {","195","    metrics.push('alert_status');","196","  }"],"delete":["150","    return PORTFOLIO_METRICS;","153","    return APPLICATION_METRICS;","156","    return LEAK_METRICS;","158","  return METRICS;"]}]}},"fc415711a8d3a3ac3cfd69ba439d2f6c84a350c5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeaderSlim-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.tsx":[{"add":["20","import { Link } from 'react-router';","21","import * as classNames from 'classnames';","27","import { translate } from '..\/..\/helpers\/l10n';","28","import { getPathUrlAsString, getBranchLikeUrl, getComponentIssuesUrl } from '..\/..\/helpers\/urls';","30","import { isMainBranch, getBranchLikeQuery } from '..\/..\/helpers\/branches';","48","  const {","49","    key,","50","    measures,","51","    path,","52","    project,","53","    projectName,","54","    q,","55","    subProject,","56","    subProjectName","57","  } = sourceViewerFile;","92","      {measures.issues !== undefined && (","93","        <div","94","          className={classNames('flex-0 big-spacer-left', {","95","            'little-spacer-right': !expandable || loading","96","          })}>","97","          <Link","98","            to={getComponentIssuesUrl(project, {","99","              ...getBranchLikeQuery(branchLike),","100","              fileUuids: sourceViewerFile.uuid,","101","              resolved: 'false'","102","            })}>","103","            {translate('source_viewer.view_all_issues')}","104","          <\/Link>","105","        <\/div>","106","      )}","107","","110","          <div className=\"flex-0 big-spacer-left\">"],"delete":["25","import { getPathUrlAsString, getBranchLikeUrl } from '..\/..\/helpers\/urls';","27","import { isMainBranch } from '..\/..\/helpers\/branches';","45","  const { key, path, project, projectName, q, subProject, subProjectName } = sourceViewerFile;","82","          <div className=\"source-viewer-header-slim-actions flex-0\">"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeaderSlim-test.tsx.snap":[{"add":["40","  <div","41","    className=\"flex-0 big-spacer-left\"","42","  >","43","    <Link","44","      onlyActiveOnIndex={false}","45","      style={Object {}}","46","      to={","47","        Object {","48","          \"pathname\": \"\/project\/issues\",","49","          \"query\": Object {","50","            \"fileUuids\": \"foo-bar\",","51","            \"id\": \"my-project\",","52","            \"resolved\": \"false\",","53","          },","54","        }","55","      }","56","    >","57","      source_viewer.view_all_issues","58","    <\/Link>","59","  <\/div>","65","      className=\"flex-0 big-spacer-left\"","123","  <div","124","    className=\"flex-0 big-spacer-left\"","125","  >","126","    <Link","127","      onlyActiveOnIndex={false}","128","      style={Object {}}","129","      to={","130","        Object {","131","          \"pathname\": \"\/project\/issues\",","132","          \"query\": Object {","133","            \"fileUuids\": \"foo-bar\",","134","            \"id\": \"my-project\",","135","            \"resolved\": \"false\",","136","          },","137","        }","138","      }","139","    >","140","      source_viewer.view_all_issues","141","    <\/Link>","142","  <\/div>","148","      className=\"flex-0 big-spacer-left\""],"delete":["45","      className=\"source-viewer-header-slim-actions flex-0\"","108","      className=\"source-viewer-header-slim-actions flex-0\""]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2223","source_viewer.view_all_issues=See all issues in this file"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.css":[{"add":[],"delete":["26","","27",".source-viewer-header-slim-actions {","28","  margin-left: calc(3 * var(--gridSize));","29","}"]}]}},"3e73b2b43c26a74d0722ba2acc9adfc62b0b33c2":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStep.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStepTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStep.java":[{"add":["28","import static java.util.Collections.singleton;","29","","51","          \/\/ in case the task was restarted, the context might have been already persisted","52","          \/\/ for total reliability, we rather delete the existing row as we don't want to assume the content","53","          \/\/ consistent with the report","54","          dbClient.ceScannerContextDao().deleteByUuids(dbSession, singleton(ceTask.getUuid()));"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStepTest.java":[{"add":["21","import java.util.Arrays;","27","import org.sonar.core.util.CloseableIterator;","82","  \/**","83","   * @see SONAR-8306","84","   *\/","85","  @Test","86","  public void execute_does_not_fail_if_scanner_context_has_already_been_persisted() {","87","    dbClient.ceScannerContextDao().insert(dbTester.getSession(), ANALYSIS_UUID, CloseableIterator.from(Arrays.asList(\"a\", \"b\", \"c\").iterator()));","88","    dbTester.commit();","89","    reportReader.setScannerLogs(asList(\"1\", \"2\", \"3\"));","90","    when(ceTask.getUuid()).thenReturn(ANALYSIS_UUID);","91","","92","    underTest.execute();","93","","94","    assertThat(dbClient.ceScannerContextDao().selectScannerContext(dbTester.getSession(), ANALYSIS_UUID))","95","      .contains(\"1\" + '\\n' + \"2\" + '\\n' + \"3\");","96","  }"],"delete":[]}]}},"c8b01d4f1520a14be831547f6b35c072a8b9517e":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/log\/LogListenerTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppenderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppender.java":"MODIFY","plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/lang\/MeasureSensor.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/log\/LogListenerTest.java":[{"add":["40","import org.sonar.batch.bootstrapper.LogOutput.Level;","43","","45","import static org.assertj.core.api.Assertions.fail;","199","  \/\/ SONAR-7540","200","  @Test","201","  public void testStackTrace() throws IOException {","202","    File srcDir = new File(baseDir, \"src\");","203","    srcDir.mkdir();","204","","205","    File xooFile = new File(srcDir, \"sample.xoo\");","206","    FileUtils.write(xooFile, \"Sample xoo\\ncontent\");","207","    File xooFileMeasure = new File(srcDir, \"sample.xoo.measures\");","208","    FileUtils.write(xooFileMeasure, \"foo:bar\");","209","","210","    try {","211","      tester.newTask()","212","        .properties(builder","213","          .put(\"sonar.sources\", \"src\")","214","          .build())","215","        .start();","216","      fail(\"Expected exception\");","217","    } catch (Exception e) {","218","      assertThat(e.getMessage()).contains(\"Error processing line 1\");","219","    }","220","    tester.stop();","221","","222","    assertNoStdOutput();","223","","224","    synchronized (logOutput) {","225","      for (LogEvent e : logOutput) {","226","        if (e.level == Level.ERROR) {","227","          assertThat(e.msg).contains(\"Error processing line 1 of file\", \"src\/sample.xoo.measures\", \"java.lang.IllegalStateException: Unknow metric with key: foo\",","228","            \"at org.sonar.xoo.lang.MeasureSensor.saveMeasure\");","229","","230","        }","231","      }","232","    }","233","  }","234",""],"delete":["22","","32",""]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppenderTest.java":[{"add":["65","    verify(event).getThrowableProxy();"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppender.java":[{"add":["22","import ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter;","39","    if (event.getThrowableProxy() == null) {","40","      target.log(event.getFormattedMessage(), translate(event.getLevel()));","41","    } else {","42","      ExtendedThrowableProxyConverter throwableConverter = new ExtendedThrowableProxyConverter();","43","      throwableConverter.start();","44","      target.log(event.getFormattedMessage() + \"\\n\" + throwableConverter.convert(event), translate(event.getLevel()));","45","      throwableConverter.stop();","46","    }"],"delete":["38","    target.log(event.getFormattedMessage(), translate(event.getLevel()));"]}],"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/lang\/MeasureSensor.java":[{"add":["79","      LOG.error(\"Error processing line \" + lineNumber + \" of file \" + measureFile.getAbsolutePath(), e);"],"delete":[]}]}},"63ef497ede0dad6346d039bf8745d0cf8b0636f6":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profiles-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profiles-view.js":[{"add":["62","      if (this.options.app.state.get('query').qprofile === profile) {","69","        this.model.set({ activation });","71","      this.refreshActives();","77","    this.options.app.controller.getRuleDetails(this.model).then(","78","      data => {","79","        this.collection.reset(","80","          this.model.getInactiveProfiles(data.actives, this.options.app.qualityProfiles)","81","        );","82","        this.options.app.controller.updateActivation(this.model, data.actives);","83","      },","84","      () => {}","85","    );"],"delete":["56","    const that = this;","63","      if (that.options.app.state.get('query').qprofile === profile) {","70","        that.model.set({ activation });","72","      that.refreshActives();","78","    const that = this;","79","    this.options.app.controller.getRuleDetails(this.model).done(data => {","80","      that.collection.reset(","81","        that.model.getInactiveProfiles(data.actives, that.options.app.qualityProfiles)","82","      );","83","      this.options.app.controller.updateActivation(this.model, data.actives);","84","    });"]}]}},"94ea3b30c8fded80d7c02e1f4da12c9e5e6092d3":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":[{"add":["74","  private final TestSystem2 system2 = new TestSystem2().setNow(INITIAL_TIME);","79","  private final DbSession dbSession = db.getSession();","80","  private final CeActivityDao underTest = new CeActivityDao(system2);","770","      .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","774","      .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","783","      .insertProjectBranch(projectDto3, branchDto -> branchDto.setNeedIssueSync(true));","787","    \/\/ failed task and project branch still exists and need sync","790","    \/\/ assume branch has been re-analysed","795","    \/\/ assume branch has been deleted","798","    \/\/ associated branch does not exist, so there is no failures - either it has been deleted or purged or reanalysed"],"delete":["74","  private TestSystem2 system2 = new TestSystem2().setNow(INITIAL_TIME);","79","  private DbSession dbSession = db.getSession();","80","  private CeActivityDao underTest = new CeActivityDao(system2);","770","        .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","774","        .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","783","        .insertProjectBranch(projectDto3, branchDto -> branchDto.setNeedIssueSync(true));","787","    \/\/failed task and project branch still exists and need sync","790","    \/\/assume branch has been re-analysed","795","    \/\/assume branch has been deleted","798","    \/\/associated branch does not exist, so there is no failures - either it has been deleted or purged or reanalysed"]}]}},"f533245c9a73a0be2dd6e87124e23c8d4374295c":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMenu-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.tsx":[{"add":["276","    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {","277","      return null;","278","    }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMenu-test.tsx.snap":[{"add":[],"delete":["328","                \"pathname\": \"\/project\/baseline\",","329","                \"query\": Object {","330","                  \"id\": \"foo\",","331","                },","332","              }","333","            }","334","          >","335","            project_baseline.page","336","          <\/Link>","337","        <\/li>","338","        <li>","339","          <Link","340","            activeClassName=\"active\"","341","            onlyActiveOnIndex={false}","342","            style={Object {}}","343","            to={","344","              Object {","453","  <Dropdown","454","    data-test=\"administration\"","455","    overlay={","456","      <ul","457","        className=\"menu\"","458","      >","459","        <li>","460","          <Link","461","            activeClassName=\"active\"","462","            onlyActiveOnIndex={false}","463","            style={Object {}}","464","            to={","465","              Object {","466","                \"pathname\": \"\/project\/baseline\",","467","                \"query\": Object {","468","                  \"id\": \"foo\",","469","                },","470","              }","471","            }","472","          >","473","            project_baseline.page","474","          <\/Link>","475","        <\/li>","476","      <\/ul>","477","    }","478","    tagName=\"li\"","479","  >","480","    <Component \/>","481","  <\/Dropdown>","587","                \"pathname\": \"\/project\/baseline\",","588","                \"query\": Object {","589","                  \"id\": \"foo\",","590","                },","591","              }","592","            }","593","          >","594","            project_baseline.page","595","          <\/Link>","596","        <\/li>","597","        <li>","598","          <Link","599","            activeClassName=\"active\"","600","            onlyActiveOnIndex={false}","601","            style={Object {}}","602","            to={","603","              Object {"]}]}},"694a04647ca6b64e1d39f01400168a7a5d0595e1":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/api\/resources_controller.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/api\/resources_controller.rb":[{"add":["125","      measures_limit = nil","193","                                     # SONAR-6584 avoid OOM errors","194","                                     :limit => measures_limit ? measures_limit : 10000)"],"delete":["125","      # SONAR-6584 avoid OOM errors","126","      measures_limit = 10000","194","                                     :limit => measures_limit)"]}]}},"3e43924e631f72a35353525e74530f8e66f22ef3":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/App.js":[{"add":["68","    if (this.state.loading) {"],"delete":["68","    const areLanguagesLoading = Object.keys(this.props.languages).length === 0;","69","    if (this.state.loading || areLanguagesLoading) {"]}]}},"726406c0d2b168abb40287f58e271934a42d072b":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/AnalysisEsResilienceTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectBadgesTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/SonarCloudProjectBadgesTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/ActiveRuleEsResilienceTest.java":"MODIFY","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/Tester.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category6Suite.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/OrganizationQualityProfilesUiTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/AnalysisEsResilienceTest.java":[{"add":["71","      .setServerProperty(\"sonar.sonarcloud.enabled\", \"true\")"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":[{"add":["21","import org.sonar.api.config.Configuration;","24","import static org.sonar.process.ProcessProperties.Property.SONARCLOUD_ENABLED;","25","","28","  private final Configuration config;","29","","30","  public OrganizationsWsModule(Configuration config) {","31","    this.config = config;","32","  }","33","","41","      SearchMembersAction.class);","42","    if (config.getBoolean(SONARCLOUD_ENABLED.getKey()).orElse(false)) {","43","      add(","44","        EnableSupportAction.class,","45","        AddMemberAction.class,","46","        CreateAction.class,","47","        DeleteAction.class,","48","        RemoveMemberAction.class,","49","        UpdateAction.class,","50","        UpdateProjectVisibilityAction.class);","51","    }"],"delete":["31","      AddMemberAction.class,","32","      CreateAction.class,","33","      DeleteAction.class,","34","      EnableSupportAction.class,","35","      RemoveMemberAction.class,","37","      SearchMembersAction.class,","38","      UpdateAction.class,","39","      UpdateProjectVisibilityAction.class);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectBadgesTest.java":[{"add":["55","    tester.openBrowser().openProjectDashboard(PROJECT_KEY);","82","    tester.openBrowser().logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"],"delete":["55","    tester.openBrowser(\"\/projects\").openProjectDashboard(PROJECT_KEY);","82","    tester.openBrowser(\"\/projects\").logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/SonarCloudProjectBadgesTest.java":[{"add":["56","    tester.openBrowser().openProjectDashboard(PROJECT_KEY);","88","    tester.openBrowser().logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"],"delete":["56","    tester.openBrowser(\"\/projects\").openProjectDashboard(PROJECT_KEY);","88","    tester.openBrowser(\"\/projects\").logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/ActiveRuleEsResilienceTest.java":[{"add":["32","import org.sonarqube.tests.Byteman;","55","      .setServerProperty(\"sonar.sonarcloud.enabled\", \"true\")"],"delete":["31","import org.sonarqube.tests.Byteman;"]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/Tester.java":[{"add":["141","    \/\/ \/projects is used as on SonarCloud instance, the \"\/\" is redirected to SonarCloud website","142","    return Navigation.create(orchestrator, \"\/projects\");"],"delete":["141","    return Navigation.create(orchestrator);","142","  }","143","","144","  public Navigation openBrowser(String path) {","145","    verifyStarted();","146","    return Navigation.create(orchestrator, path);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":[{"add":["22","import org.sonar.api.config.internal.MapSettings;","29","","30","  private ComponentContainer container = new ComponentContainer();","31","  private MapSettings mapSettings = new MapSettings();","32","  private OrganizationsWsModule underTest = new OrganizationsWsModule(mapSettings.asConfig());","35","  public void verify_component_count_when_not_on_sonar_cloud() {","36","    mapSettings.setProperty(\"sonar.sonarcloud.enabled\", false);","37","","39","","40","    assertThat(container.getPicoContainer().getComponentAdapters())","41","      .hasSize(COMPONENTS_IN_EMPTY_COMPONENT_CONTAINER + 4);","42","  }","43","","44","  @Test","45","  public void verify_component_count_when_on_sonar_cloud() {","46","    mapSettings.setProperty(\"sonar.sonarcloud.enabled\", true);","47","","48","    underTest.configure(container);","49",""],"delete":["28","  private OrganizationsWsModule underTest = new OrganizationsWsModule();","31","  public void verify_component_count() {","32","    ComponentContainer container = new ComponentContainer();"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category6Suite.java":[{"add":["85","    .setServerProperty(\"sonar.sonarcloud.enabled\", \"true\")","86",""],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/OrganizationQualityProfilesUiTest.java":[{"add":["88","    tester.openBrowser().logIn().submitCredentials(user.getLogin())"],"delete":["88","    tester.openBrowser().openHome().logIn().submitCredentials(user.getLogin())"]}]}},"6dec8a61556090d4cdeac8fb130b2ba01809bca9":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/facets\/language-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/facets\/language-facet.js":[{"add":["60","      values: this.sortValues(this.getValues())"],"delete":["60","      values: this.getValues()"]}]}},"12d32893c71ea44b1620f7cddd8baab23459b561":{"changes":{"server\/sonar-ce-common\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueImplTest.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImplTest.java":"MODIFY","server\/sonar-ce-task\/src\/main\/java\/org\/sonar\/ce\/task\/CeTask.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":"MODIFY","server\/sonar-ce-common\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":"MODIFY","server\/sonar-ce-task\/src\/test\/java\/org\/sonar\/ce\/task\/CeTaskTest.java":"MODIFY"},"diff":{"server\/sonar-ce-common\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueImplTest.java":[{"add":["44","import org.sonar.db.user.UserDto;","45","import org.sonar.db.user.UserTesting;","81","    UserDto userDto = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit.getSubmitterUuid());","85","    verifyCeTask(taskSubmit, task, null, userDto);","96","    verifyCeTask(taskSubmit, task, componentDto, null);","105","    verifyCeTask(taskSubmit, task, null, null);","106","  }","107","","108","  @Test","109","  public void submit_populates_submitter_login_of_CeTask_if_submitter_exists() {","110","    UserDto userDto = insertUser(UserTesting.newUserDto());","111","    CeTaskSubmit taskSubmit = createTaskSubmit(CeTaskTypes.REPORT, null, userDto.getUuid());","112","","113","    CeTask task = underTest.submit(taskSubmit);","114","","115","    verifyCeTask(taskSubmit, task, null, userDto);","213","    UserDto userDto1 = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit1.getSubmitterUuid());","214","","219","    verifyCeTask(taskSubmit1, tasks.get(0), null, userDto1);","220","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","234","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1, null);","235","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","249","    verifyCeTask(taskSubmit1, tasks.get(0), branch1, project, null);","250","    verifyCeTask(taskSubmit2, tasks.get(1), branch2, project, null);","478","","479","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, UserDto userDto) {","480","    verifyCeTask(taskSubmit, task, componentDto, componentDto, userDto);","483","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, @Nullable ComponentDto mainComponentDto, @Nullable UserDto userDto) {","511","    if (taskSubmit.getSubmitterUuid() != null) {","512","      if (userDto == null) {","513","        assertThat(task.getSubmitter().getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","514","        assertThat(task.getSubmitter().getLogin()).isNull();","515","      } else {","516","        assertThat(task.getSubmitter().getUuid()).isEqualTo(userDto.getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","517","        assertThat(task.getSubmitter().getLogin()).isEqualTo(userDto.getLogin());","518","      }","519","    }","561","  private UserDto insertUser(UserDto userDto) {","562","    db.getDbClient().userDao().insert(session, userDto);","563","    session.commit();","564","    return userDto;","565","  }","566",""],"delete":["82","    verifyCeTask(taskSubmit, task, null);","93","    verifyCeTask(taskSubmit, task, componentDto);","102","    verifyCeTask(taskSubmit, task, null);","204","    verifyCeTask(taskSubmit1, tasks.get(0), null);","205","    verifyCeTask(taskSubmit2, tasks.get(1), null);","219","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1);","220","    verifyCeTask(taskSubmit2, tasks.get(1), null);","234","    verifyCeTask(taskSubmit1, tasks.get(0), branch1, project);","235","    verifyCeTask(taskSubmit2, tasks.get(1), branch2, project);","463","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto) {","464","    verifyCeTask(taskSubmit, task, componentDto, componentDto);","467","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, @Nullable ComponentDto mainComponentDto) {","495","    assertThat(task.getSubmitterUuid()).isEqualTo(taskSubmit.getSubmitterUuid());"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImplTest.java":[{"add":["27","import javax.annotation.CheckForNull;","38","import org.sonar.api.utils.System2;","39","import org.sonar.api.utils.internal.TestSystem2;","45","import org.sonar.ce.task.CeTaskResult;","47","import org.sonar.db.DbSession;","48","import org.sonar.db.DbTester;","51","import org.sonar.db.user.UserDto;","52","import org.sonar.db.user.UserTesting;","70","  private System2 system2 = new TestSystem2().setNow(1_450_000_000_000L);","71","","78","  @Rule","79","  public DbTester db = DbTester.create(system2);","80","","81","  private DbSession session = db.getSession();","95","  private final CeTask.User submitter = new CeTask.User(\"UUID_USER_1\", \"LOGIN_1\");","300","    UserDto userDto = insertRandomUser();","301","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(toTaskSubmitter(userDto))));","309","    assertThat(logs.get(0)).contains(String.format(\"submitter=%s\", userDto.getLogin()));","310","    assertThat(logs.get(1)).contains(String.format(\"submitter=%s | status=SUCCESS | time=\", userDto.getLogin()));","311","    assertThat(logTester.logs(LoggerLevel.ERROR)).isEmpty();","312","    assertThat(logTester.logs(LoggerLevel.DEBUG)).isEmpty();","313","  }","314","","315","  @Test","316","  public void log_submitterUuid_if_user_matching_submitterUuid_can_not_be_found() throws Exception {","317","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(new CeTask.User(\"UUID_USER\", null))));","318","    taskProcessorRepository.setProcessorForTask(CeTaskTypes.REPORT, taskProcessor);","319","","320","    underTest.call();","321","","322","    verifyWorkerUuid();","323","    List<String> logs = logTester.logs(LoggerLevel.INFO);","324","    assertThat(logs).hasSize(2);","325","    assertThat(logs.get(0)).contains(\"submitter=UUID_USER\");","326","    assertThat(logs.get(1)).contains(\"submitter=UUID_USER | status=SUCCESS | time=\");","333","    UserDto userDto = insertRandomUser();","334","    CeTask ceTask = createCeTask(toTaskSubmitter(userDto));","344","    assertThat(logs.get(0)).contains(String.format(\"submitter=%s\", userDto.getLogin()));","345","    assertThat(logs.get(1)).contains(String.format(\"submitter=%s | status=FAILED | time=\", userDto.getLogin()));","355","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(submitter)));","363","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","364","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=SUCCESS | time=\", submitter.getLogin()));","373","    CeTask ceTask = createCeTask(submitter);","383","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","384","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","411","      return Optional.of(createCeTask(submitter));","423","    CeTask ceTask = createCeTask(submitter);","451","    CeTask ceTask = createCeTask(submitter);","460","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","461","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","469","    CeTask ceTask = createCeTask(submitter);","478","    assertThat(logs.get(1)).contains(\" | submitter=\" + submitter.getLogin());","479","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","485","    CeTask ceTask = createCeTask(submitter);","494","    assertThat(logs.get(1)).contains(\" | submitter=\" + submitter.getLogin());","495","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","501","    CeTask ceTask = createCeTask(submitter);","513","    CeTask ceTask = createCeTask(submitter);","524","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","525","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","542","    CeTask ceTask = createCeTask(submitter);","553","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","554","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","584","  private static CeTask createCeTask(@Nullable CeTask.User submitter, String... characteristics) {","595","      .setSubmitter(submitter)","599","  ","600","  private UserDto insertRandomUser() {","601","    UserDto userDto = UserTesting.newUserDto();","602","    db.getDbClient().userDao().insert(session, userDto);","603","    session.commit();","604","    return userDto;","605","  }","606","","607","  private CeTask.User toTaskSubmitter(UserDto userDto) {","608","    return new CeTask.User(userDto.getUuid(), userDto.getLogin());","609","  }"],"delete":["285","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(\"FooBar\")));","293","    assertThat(logs.get(0)).contains(\"submitter=FooBar\");","294","    assertThat(logs.get(1)).contains(\"submitter=FooBar | status=SUCCESS | time=\");","301","    CeTask ceTask = createCeTask(\"FooBar\");","311","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","312","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","322","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(\"FooBar\")));","330","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","331","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=SUCCESS | time=\");","340","    CeTask ceTask = createCeTask(\"FooBar\");","350","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","351","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","378","      return Optional.of(createCeTask(\"FooBar\"));","390","    CeTask ceTask = createCeTask(\"FooBar\");","418","    CeTask ceTask = createCeTask(\"FooBar\");","427","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","428","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","436","    CeTask ceTask = createCeTask(\"FooBar\");","445","    assertThat(logs.get(1)).contains(\" | submitter=FooBar\");","446","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","452","    CeTask ceTask = createCeTask(\"FooBar\");","461","    assertThat(logs.get(1)).contains(\" | submitter=FooBar\");","462","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","468","    CeTask ceTask = createCeTask(\"FooBar\");","480","    CeTask ceTask = createCeTask(\"FooBar\");","491","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","492","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","509","    CeTask ceTask = createCeTask(\"FooBar\");","520","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","521","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","551","  private static CeTask createCeTask(@Nullable String submitterLogin, String... characteristics) {","562","      .setSubmitterUuid(submitterLogin)"]}],"server\/sonar-ce-task\/src\/main\/java\/org\/sonar\/ce\/task\/CeTask.java":[{"add":["44","  private final User submitter;","55","    this.submitter = builder.submitter;","63","  @Immutable","64","  public static final class User {","65","    private final String uuid;","66","    private final String login;","67","","68","    public User(String uuid, @Nullable String login) {","69","      this.uuid = requireNonNull(uuid);","70","      this.login = emptyToNull(login);","71","    }","72","","73","    public String getUuid() {","74","      return uuid;","75","    }","76","","77","    @CheckForNull","78","    public String getLogin() {","79","      return login;","80","    }","81","","82","    @Override","83","    public boolean equals(Object o) {","84","      if (this == o) {","85","        return true;","86","      }","87","      if (o == null || getClass() != o.getClass()) {","88","        return false;","89","      }","90","      User other = (User) o;","91","      return uuid.equals(other.uuid);","92","    }","93","","94","    @Override","95","    public String toString() {","96","      return \"User{\" +","97","              \"uuid='\" + uuid + '\\'' +","98","              \", login='\" + login + '\\'' +","99","              '}';","100","    }","101","","102","    @Override","103","    public int hashCode() {","104","      return uuid.hashCode();","105","    }","106","  }","107","","129","  public User getSubmitter() {","130","    return submitter;","145","      .add(\"submitter\", submitter)","172","    private User submitter;","205","    public Builder setSubmitter(@Nullable User s) {","206","      this.submitter = s;"],"delete":["44","  private final String submitterUuid;","55","    this.submitterUuid = emptyToNull(builder.submitterUuid);","84","  public String getSubmitterUuid() {","85","    return submitterUuid;","100","      .add(\"submitterUuid\", submitterUuid)","127","    private String submitterUuid;","160","    public Builder setSubmitterUuid(@Nullable String s) {","161","      this.submitterUuid = s;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":[{"add":["97","        CeTask task = convertToTask(dbSession, taskDto, characteristics,"],"delete":["97","        CeTask task = convertToTask(taskDto, characteristics,"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":[{"add":["50","import org.sonar.db.user.UserDto;","104","    UserDto userDto = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit.getSubmitterUuid());","105","    verifyCeTask(taskSubmit, task, null, userDto);","116","    verifyCeTask(taskSubmit, task, componentDto, null);","125","    verifyCeTask(taskSubmit, task, null, null);","135","    UserDto userDto1 = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit1.getSubmitterUuid());","137","    verifyCeTask(taskSubmit1, tasks.get(0), null, userDto1);","138","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","152","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1, null);","153","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","624","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, @Nullable UserDto userDto) {","642","    if (taskSubmit.getSubmitterUuid() != null) {","643","      if (userDto == null) {","644","        assertThat(task.getSubmitter().getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","645","        assertThat(task.getSubmitter().getLogin()).isNull();","646","      } else {","647","        assertThat(task.getSubmitter().getUuid()).isEqualTo(userDto.getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","648","        assertThat(task.getSubmitter().getUuid()).isEqualTo(userDto.getLogin());","649","      }","650","    }"],"delete":["103","","104","    verifyCeTask(taskSubmit, task, null);","115","    verifyCeTask(taskSubmit, task, componentDto);","124","    verifyCeTask(taskSubmit, task, null);","135","    verifyCeTask(taskSubmit1, tasks.get(0), null);","136","    verifyCeTask(taskSubmit2, tasks.get(1), null);","150","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1);","151","    verifyCeTask(taskSubmit2, tasks.get(1), null);","622","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto) {","640","    assertThat(task.getSubmitterUuid()).isEqualTo(taskSubmit.getSubmitterUuid());"]}],"server\/sonar-ce-common\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueImpl.java":[{"add":["35","import javax.annotation.CheckForNull;","49","import org.sonar.db.user.UserDto;","104","        return of(convertToTask(dbSession, taskDto, submission.getCharacteristics(), null, null));","107","      return of(convertToTask(dbSession, taskDto, submission.getCharacteristics(),","231","      result.add(convertToTask(dbSession, dto, characteristics, component, mainComponent));","315","  CeTask convertToTask(DbSession dbSession, CeQueueDto taskDto, Map<String, String> characteristics, @Nullable ComponentDto component, @Nullable ComponentDto mainComponent) {","319","      .setCharacteristics(characteristics)","320","      .setSubmitter(resolveSubmitter(dbSession, taskDto.getSubmitterUuid()));","321","","346","  @CheckForNull","347","  private CeTask.User resolveSubmitter(DbSession dbSession, @Nullable String submitterUuid) {","348","    if (submitterUuid == null) {","349","      return null;","350","    }","351","    UserDto submitterDto = dbClient.userDao().selectByUuid(dbSession, submitterUuid);","352","    if (submitterDto != null) {","353","      return new CeTask.User(submitterUuid, submitterDto.getLogin());","354","    } else {","355","      return new CeTask.User(submitterUuid, null);","356","    }","357","  }","358",""],"delete":["102","        return of(convertToTask(taskDto, submission.getCharacteristics(), null, null));","105","      return of(convertToTask(taskDto, submission.getCharacteristics(),","229","      result.add(convertToTask(dto, characteristics, component, mainComponent));","313","  CeTask convertToTask(CeQueueDto taskDto, Map<String, String> characteristics, @Nullable ComponentDto component, @Nullable ComponentDto mainComponent) {","317","      .setSubmitterUuid(taskDto.getSubmitterUuid())","318","      .setCharacteristics(characteristics);"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImpl.java":[{"add":["27","import javax.annotation.CheckForNull;","190","      .addContext(\"submitter\", submitterOf(task))","194","  @CheckForNull","195","  private static String submitterOf(CeTask task) {","196","    CeTask.User submitter = task.getSubmitter();","197","    if (submitter == null) {","198","      return null;","199","    }","200","    String submitterLogin = submitter.getLogin();","201","    if (submitterLogin != null) {","202","      return submitterLogin;","203","    } else {","204","      return submitter.getUuid();","205","    }","206","  }","207",""],"delete":["189","      .addContext(\"submitter\", task.getSubmitterUuid())"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":[{"add":["61","    .setSubmitter(new CeTask.User(\"UUID_1\", \"LOGIN_1\"))"],"delete":["61","    .setSubmitterUuid(\"robert\")"]}],"server\/sonar-ce-task\/src\/test\/java\/org\/sonar\/ce\/task\/CeTaskTest.java":[{"add":["109","","126","    CeTask.User submitter = new CeTask.User(\"UUID_USER_1\", \"LOGIN_1\");","130","    underTest.setSubmitter(submitter);","140","    assertThat(task.getSubmitter()).isEqualTo(submitter);","147","  public void verify_toString() {","148","    CeTask.Component component = new CeTask.Component(\"COMPONENT_UUID_1\", \"COMPONENT_KEY_1\", \"The component\");","149","    CeTask.Component mainComponent = new CeTask.Component(\"MAIN_COMPONENT_UUID_1\", \"MAIN_COMPONENT_KEY_1\", \"The main component\");","150","    underTest.setOrganizationUuid(\"org1\");","151","    underTest.setType(\"TYPE_1\");","152","    underTest.setUuid(\"UUID_1\");","153","    underTest.setComponent(component);","154","    underTest.setMainComponent(mainComponent);","155","    underTest.setSubmitter(new CeTask.User(\"UUID_USER_1\", \"LOGIN_1\"));","156","    underTest.setCharacteristics(ImmutableMap.of(\"k1\", \"v1\", \"k2\", \"v2\"));","157","","158","    CeTask task = underTest.build();","159","    System.out.println(task.toString());","160","","161","    assertThat(task.toString()).isEqualTo(\"CeTask{\" +","162","            \"organizationUuid=org1, \" +","163","            \"type=TYPE_1, \" +","164","            \"uuid=UUID_1, \" +","165","            \"component=Component{uuid='COMPONENT_UUID_1', key='COMPONENT_KEY_1', name='The component'}, \" +","166","            \"mainComponent=Component{uuid='MAIN_COMPONENT_UUID_1', key='MAIN_COMPONENT_KEY_1', name='The main component'}, \" +","167","            \"submitter=User{uuid='UUID_USER_1', login='LOGIN_1'}\" +","168","            \"}\"","169","    );","170","  }","171","","172","  @Test","175","      .setSubmitter(new CeTask.User(\"USER_ID\", \"\"))","178","    assertThat(ceTask.getSubmitter().getLogin()).isNull();","202","","203","  @Test","204","  public void verify_submitter_getters() {","205","    CeTask.User user = new CeTask.User(\"UUID\", \"LOGIN\");","206","","207","    assertThat(user.getUuid()).isEqualTo(\"UUID\");","208","    assertThat(user.getLogin()).isEqualTo(\"LOGIN\");","209","  }","210","","211","  @Test","212","  public void submitter_equals_and_hashCode_on_uuid() {","213","    CeTask.User user1 = new CeTask.User(\"UUID_1\", null);","214","    CeTask.User user1bis = new CeTask.User(\"UUID_1\", null);","215","    CeTask.User user2 = new CeTask.User(\"UUID_2\", null);","216","    CeTask.User user1_diff_login = new CeTask.User(\"UUID_1\", \"LOGIN\");","217","","218","    assertThat(user1).isEqualTo(user1);","219","    assertThat(user1).isEqualTo(user1bis);","220","    assertThat(user1).isNotEqualTo(user2);","221","    assertThat(user1.equals(null)).isFalse();","222","    assertThat(user1.hashCode()).isEqualTo(user1.hashCode());","223","    assertThat(user1.hashCode()).isEqualTo(user1bis.hashCode());","224","    assertThat(user1.hashCode()).isEqualTo(user1_diff_login.hashCode());","225","  }"],"delete":["109","    ","129","    underTest.setSubmitterUuid(\"LOGIN_1\");","139","    assertThat(task.getSubmitterUuid()).isEqualTo(\"LOGIN_1\");","148","      .setSubmitterUuid(\"\")","151","    assertThat(ceTask.getSubmitterUuid()).isNull();"]}]}},"357dd13c31860c1e73f6246b538db3448c8e2a91":{"changes":{"server\/sonar-web\/src\/main\/coffee\/analysis-reports\/views\/report-view.coffee":"MODIFY","server\/sonar-web\/src\/main\/less\/pages\/analysis-reports.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/coffee\/analysis-reports\/views\/report-view.coffee":[{"add":["34","      @$el.addClass 'analysis-reports-report-cancelled' if status is 'CANCELLED'"],"delete":[]}],"server\/sonar-web\/src\/main\/less\/pages\/analysis-reports.less":[{"add":["28","@cancelledColor: #fcecec;","61",".analysis-reports-report-cancelled {","62","  background-color: @cancelledColor !important;","63","}","64",""],"delete":[]}]}},"7d034a6d0d9991c251757eb9ab72bd37ac97b6ab":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/rootReducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/measures.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/DefaultHelmetContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/OnboardingContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/Avatar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/reducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavBranding.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/store\/rootReducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/update-center\/components\/UpdateCenterAppContainer.js":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/CategoryDefinitionsList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooterContainer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/rootReducer.js":[{"add":["27","\/*:: import type { State as GlobalMessagesState } from '..\/..\/..\/store\/globalMessages\/duck'; *\/","28","\/*:: import type { State as ValuesState } from '.\/values\/reducer'; *\/","37","  values: ValuesState","61","export const getValue = (state \/*: State *\/, key \/*: string *\/, componentKey \/*: ?string *\/) =>","62","  fromValues.getValue(state.values, key, componentKey);","64","export const getSettingsForCategory = (","65","  state \/*: State *\/,","66","  category \/*: string *\/,","67","  componentKey \/*: ?string *\/","68",") =>","70","    ...getValue(state, definition.key, componentKey),"],"delete":["26","\/*:: import type { State as GlobalMessagesState } from '..\/..\/..\/store\/globalMessages\/duck'; *\/","36","  values: {}","60","export const getValue = (state \/*: State *\/, key \/*: string *\/) =>","61","  fromValues.getValue(state.values, key);","63","export const getSettingsForCategory = (state \/*: State *\/, category \/*: string *\/) =>","65","    ...getValue(state, definition.key),"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/actions.js":[{"add":["29","export const receiveValues = (settings \/*: SettingValue[] *\/, componentKey \/*: ?string *\/) => ({","31","  settings,","32","  componentKey"],"delete":["29","export const receiveValues = (settings \/*: SettingValue[] *\/) => ({","31","  settings"]}],"server\/sonar-web\/src\/main\/js\/helpers\/measures.js":[{"add":["353","  const { getGlobalSettingValue } = require('..\/store\/rootReducer');","356","  const settingValue = getGlobalSettingValue(store.getState(), 'sonar.technicalDebt.ratingGrid');"],"delete":["353","  const { getSettingValue } = require('..\/store\/rootReducer');","356","  const settingValue = getSettingValue(store.getState(), 'sonar.technicalDebt.ratingGrid');"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/DefaultHelmetContainer.js":[{"add":["22","import { getGlobalSettingValue } from '..\/..\/store\/rootReducer';","38","  sonarqubeDotCom: getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"],"delete":["22","import { getSettingValue } from '..\/..\/store\/rootReducer';","38","  sonarqubeDotCom: getSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.js":[{"add":["21","import { fetchSettings } from '..\/store\/actions';","22","import { getComponent, getSettingsAppDefaultCategory } from '..\/..\/..\/store\/rootReducer';","27","    : undefined,","28","  defaultCategory: getSettingsAppDefaultCategory(state)","31","const mapdispatchToProps = { fetchSettings };","32","","33","export default connect(mapStateToProps, mapdispatchToProps)(App);"],"delete":["21","import { getComponent } from '..\/..\/..\/store\/rootReducer';","26","    : undefined","29","export default connect(mapStateToProps)(App);"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/OnboardingContainer.js":[{"add":["25","  getGlobalSettingValue","29","  const sonarCloudSetting = getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"],"delete":["25","  getSettingValue","29","  const sonarCloudSetting = getSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":[{"add":["31","import { getCurrentUser, getAppState, getGlobalSettingValue } from '..\/..\/..\/..\/store\/rootReducer';","142","  const sonarCloudSetting = getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"],"delete":["31","import { getCurrentUser, getAppState, getSettingValue } from '..\/..\/..\/..\/store\/rootReducer';","142","  const sonarCloudSetting = getSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/Avatar.js":[{"add":["24","import { getGlobalSettingValue } from '..\/..\/store\/rootReducer';","116","  enableGravatar: (getGlobalSettingValue(state, 'sonar.lf.enableGravatar') || {}).value === 'true',","117","  gravatarServerUrl: (getGlobalSettingValue(state, 'sonar.lf.gravatarServerUrl') || {}).value"],"delete":["24","import { getSettingValue } from '..\/..\/store\/rootReducer';","116","  enableGravatar: (getSettingValue(state, 'sonar.lf.enableGravatar') || {}).value === 'true',","117","  gravatarServerUrl: (getSettingValue(state, 'sonar.lf.gravatarServerUrl') || {}).value"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/reducer.js":[{"add":["20","import { combineReducers } from 'redux';","25","type SettingsState = { [key: string]: {} };","26","type ComponentsState = { [key: string]: SettingsState };","27","export type State = { components: ComponentsState, global: SettingsState };","30","const componentsSettings = (state \/*: ComponentsState *\/ = {}, action \/*: Object *\/) => {","31","  if (!action.componentKey) {","32","    return state;","33","  }","34","","35","  const key = action.componentKey;","36","  if (action.type === RECEIVE_VALUES) {","37","    const settingsByKey = keyBy(action.settings, 'key');","38","    return { ...state, [key]: { ...(state[key] || {}), ...settingsByKey } };","39","  }","40","","41","  return state;","42","};","43","","44","const globalSettings = (state \/*: SettingsState *\/ = {}, action \/*: Object *\/) => {","45","  if (action.componentKey) {","46","    return state;","47","  }","48","","65","export default combineReducers({ components: componentsSettings, global: globalSettings });","67","export const getValue = (state \/*: State *\/, key \/*: string *\/, componentKey \/*: ?string *\/) => {","68","  let settings = state.global;","69","  if (componentKey) {","70","    settings = state.components[componentKey];","71","  }","72","  return settings && settings[key];","73","};"],"delete":["24","type State = { [key: string]: {} };","27","const reducer = (state \/*: State *\/ = {}, action \/*: Object *\/) => {","44","export default reducer;","46","export const getValue = (state \/*: State *\/, key \/*: string *\/) => state[key];"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavBranding.js":[{"add":["23","import { getGlobalSettingValue, getCurrentUser } from '..\/..\/..\/..\/store\/rootReducer';","54","  customLogoUrl: (getGlobalSettingValue(state, 'sonar.lf.logoUrl') || {}).value,","55","  customLogoWidth: (getGlobalSettingValue(state, 'sonar.lf.logoWidthPx') || {}).value"],"delete":["23","import { getSettingValue, getCurrentUser } from '..\/..\/..\/..\/store\/rootReducer';","54","  customLogoUrl: (getSettingValue(state, 'sonar.lf.logoUrl') || {}).value,","55","  customLogoWidth: (getSettingValue(state, 'sonar.lf.logoWidthPx') || {}).value"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":[{"add":["35","import { getAppState, getCurrentUser, getGlobalSettingValue } from '..\/..\/..\/store\/rootReducer';","204","  customText: getGlobalSettingValue(state, 'sonar.lf.aboutText'),","205","  sonarqubeDotCom: getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"],"delete":["35","import { getAppState, getCurrentUser, getSettingValue } from '..\/..\/..\/store\/rootReducer';","204","  customText: getSettingValue(state, 'sonar.lf.aboutText'),","205","  sonarqubeDotCom: getSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/actions.js":[{"add":["45","      dispatch(receiveValues(settings, componentKey));","67","      dispatch(receiveValues(values, componentKey));","86","        dispatch(receiveValues(values, componentKey));","88","        dispatch(receiveValues([{ key }], componentKey));"],"delete":["45","      dispatch(receiveValues(settings));","67","      dispatch(receiveValues(values));","86","        dispatch(receiveValues(values));","88","        dispatch(receiveValues([{ key }]));"]}],"server\/sonar-web\/src\/main\/js\/store\/rootReducer.js":[{"add":["155","export const getGlobalSettingValue = (state, key) =>","156","  fromSettingsApp.getValue(state.settingsApp, key);","167","export const getSettingsAppSettingsForCategory = (state, category, componentKey) =>","168","  fromSettingsApp.getSettingsForCategory(state.settingsApp, category, componentKey);"],"delete":["155","export const getSettingValue = (state, key) => fromSettingsApp.getValue(state.settingsApp, key);","166","export const getSettingsAppSettingsForCategory = (state, category) =>","167","  fromSettingsApp.getSettingsForCategory(state.settingsApp, category);"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.js":[{"add":["27","import { getAppState, getMyOrganizations, getGlobalSettingValue } from '..\/..\/..\/store\/rootReducer';","103","  anyoneCanCreate: getGlobalSettingValue(state, 'sonar.organizations.anyoneCanCreate'),"],"delete":["27","import { getAppState, getMyOrganizations, getSettingValue } from '..\/..\/..\/store\/rootReducer';","103","  anyoneCanCreate: getSettingValue(state, 'sonar.organizations.anyoneCanCreate'),"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":[{"add":["103","    const componentKey = this.props.component ? this.props.component.key : null;","104","    this.props.cancelChange(this.props.setting.definition.key, componentKey);"],"delete":["103","    this.props.cancelChange(this.props.setting.definition.key);"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/App.js":[{"add":["31","  component?: { key: string },","44","export default class App extends React.PureComponent {","54","    this.props.fetchSettings(componentKey).then(() => this.setState({ loaded: true }));","57","  componentDidUpdate(prevProps \/*: Props*\/) {"],"delete":["22","import { connect } from 'react-redux';","27","import { fetchSettings } from '..\/store\/actions';","28","import { getSettingsAppDefaultCategory } from '..\/..\/..\/store\/rootReducer';","34","  component: { key: string },","47","class App extends React.PureComponent {","57","    this.props.fetchSettings(componentKey).then(() => {","58","      this.setState({ loaded: true });","59","    });","62","  componentDidUpdate(prevProps) {","107","","108","const mapStateToProps = state => ({","109","  defaultCategory: getSettingsAppDefaultCategory(state)","110","});","111","","112","export default connect(mapStateToProps, { fetchSettings })(App);"]}],"server\/sonar-web\/src\/main\/js\/apps\/update-center\/components\/UpdateCenterAppContainer.js":[{"add":["23","import { getGlobalSettingValue } from '..\/..\/..\/store\/rootReducer';","50","  updateCenterActive: (getGlobalSettingValue(state, 'sonar.updatecenter.activate') || {}).value"],"delete":["23","import { getSettingValue } from '..\/..\/..\/store\/rootReducer';","50","  updateCenterActive: (getSettingValue(state, 'sonar.updatecenter.activate') || {}).value"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":[{"add":["23","import org.openqa.selenium.By;","50","import static com.codeborne.selenide.Selenide.$;","197","  public void display_correct_global_setting () throws UnsupportedEncodingException {","198","    scanSample(null, null);","199","    SettingsPage page = nav.logIn().submitCredentials(adminUser).openSettings(\"sample\")","200","      .openCategory(\"Analysis Scope\")","201","      .assertSettingDisplayed(\"sonar.coverage.exclusions\")","202","      .setStringValue(\"sonar.coverage.exclusions\", \"foo\")","203","      .assertStringSettingValue(\"sonar.coverage.exclusions\", \"foo\");","204","","205","    $(\".global-navbar-menu \").$(By.linkText(\"Administration\")).click();","206","    page","207","      .openCategory(\"Analysis Scope\")","208","      .assertSettingDisplayed(\"sonar.coverage.exclusions\")","209","      .assertStringSettingValue(\"sonar.coverage.exclusions\", \"\");","210","  }","211","","212","  @Test"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/CategoryDefinitionsList.js":[{"add":["30","  settings: getSettingsAppSettingsForCategory(","31","    state,","32","    ownProps.category,","33","    ownProps.component ? ownProps.component.key : null","34","  )"],"delete":["30","  settings: getSettingsAppSettingsForCategory(state, ownProps.category)"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooterContainer.js":[{"add":["21","import { getAppState, getGlobalSettingValue } from '..\/..\/store\/rootReducer';","27","  sonarqubeDotCom: getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"],"delete":["21","import { getAppState, getSettingValue } from '..\/..\/store\/rootReducer';","27","  sonarqubeDotCom: getSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"]}]}},"9ad0e56f42abd45343f16be66edae1f1a4f688b5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/ListFooter-test.tsx":"MODIFY","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/App-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/components\/controls\/BackButton.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/PageActions.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssuesListHeader.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/ListFooter.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/ListFooter-test.tsx":[{"add":["47","","48","it('should display spinner while loading', () => {","49","  expect(","50","    shallow(<ListFooter count={3} loadMore={jest.fn()} loading={true} total={10} \/>)","51","      .find('DeferredSpinner')","52","      .exists()","53","  ).toBe(true);","54","});"],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/App-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/BackButton.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/PageActions.tsx":[{"add":["23","import ReloadButton from '..\/..\/..\/components\/controls\/ReloadButton';"],"delete":["21","import ReloadButton from '.\/ReloadButton';"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssuesListHeader.tsx":[{"add":["20","import BackButton from '..\/..\/..\/components\/controls\/BackButton';","21","import ReloadButton from '..\/..\/..\/components\/controls\/ReloadButton';","40","        {displayBackButton && (","41","          <BackButton className=\"pull-left\" disabled={props.loading} onClick={props.onBackClick} \/>","42","        )}"],"delete":["20","import BackButton from '.\/BackButton';","21","import ReloadButton from '..\/components\/ReloadButton';","40","        {displayBackButton && <BackButton className=\"pull-left\" onClick={props.onBackClick} \/>}"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/ListFooter.tsx":[{"add":["21","import DeferredSpinner from '..\/common\/DeferredSpinner';","28","  loading?: boolean;","63","      {props.loading && (","64","        <DeferredSpinner className=\"vertical-bottom spacer-left position-absolute\" \/>","65","      )}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":[{"add":["310",".position-absolute {","311","  position: absolute !important;","312","}","313",""],"delete":[]}]}},"582cf7f4b2ed2da296e77ade8342a7b614f93376":{"changes":{"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":"MODIFY","pom.xml":"MODIFY"},"diff":{"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":[{"add":["36","#----- PostgreSQL 8.x or greater"],"delete":["36","#----- PostgreSQL 8.x\/9.x"]}],"pom.xml":[{"add":["934","        <version>42.1.4<\/version>"],"delete":["934","        <version>42.1.1<\/version>"]}]}},"ea05fdeff86b320bba6178d6f074f8d146692fcb":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/source.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["295","      const sourcesRequest =","296","        component.q === 'FIL' || component.q === 'UTS' ? this.loadSources() : Promise.resolve([]);","297","      sourcesRequest.then(","335","      .loadIssues(","336","        this.props.component,","337","        firstSourceLine && firstSourceLine.line,","338","        lastSourceLine && lastSourceLine.line","339","      )"],"delete":["295","      this.loadSources().then(","333","      .loadIssues(this.props.component, firstSourceLine.line, lastSourceLine.line)"]}],"server\/sonar-web\/src\/main\/less\/components\/source.less":[{"add":["89",".source-line-last .source-line-code {"],"delete":["89",".source-line-last .source-line-code-inner {"]}]}},"2c7c8d8b0c1575f7e2235f5a7868d70bf914f3ba":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/LicenseEditionSet-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/__snapshots__\/LicenseEditionSet-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/LicenseEditionSet.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2173","marketplace.wrong_license_type=Your license is not compatible with any existing editions. Please provide a valid license."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/LicenseEditionSet-test.tsx":[{"add":["66","  let wrapper = await testLicenseStatus('NO_INSTALL');","68","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL');","70","  wrapper = await testLicenseStatus('MANUAL_INSTALL');","71","  expect(wrapper.find('p.alert')).toMatchSnapshot();","72","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL', jest.fn(), 'bar');","73","  expect(wrapper.find('p.alert')).toMatchSnapshot();","74","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL', jest.fn(), 'bar', { edition: undefined });","109","async function testLicenseStatus(","110","  status: string,","111","  updateLicense = jest.fn(),","112","  nextEditionKey = 'foo',","113","  props = {}","114",") {","116","    Promise.resolve({ nextEditionKey, previewStatus: status })","118","  const wrapper = getWrapper({ updateLicense, ...props });"],"delete":["66","  let wrapper = await testLicenseStatus('NO_INSTALL', jest.fn());","68","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL', jest.fn());","70","  wrapper = await testLicenseStatus('MANUAL_INSTALL', jest.fn());","105","async function testLicenseStatus(status: string, updateLicense: jest.Mock<any>) {","107","    Promise.resolve({ nextEditionKey: 'foo', previewStatus: status })","109","  const wrapper = getWrapper({ updateLicense });"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/__snapshots__\/LicenseEditionSet-test.tsx.snap":[{"add":["26","exports[`should correctly display status message after checking license 4`] = `","27","<p","28","  className=\"alert alert-danger\"","29",">","30","  marketplace.wrong_license_type_x.Foo","31","<\/p>","32","`;","33","","34","exports[`should correctly display status message after checking license 5`] = `","35","<p","36","  className=\"alert alert-danger\"","37",">","38","  marketplace.wrong_license_type","39","<\/p>","40","`;","41",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/LicenseEditionSet.tsx":[{"add":["43","  license: string;","44","  licenseEdition?: Edition;","45","  loading: boolean;","46","  previewStatus?: string;","47","  wrongEdition: boolean;","55","    this.state = { acceptTerms: false, license: '', loading: false, wrongEdition: false };","74","          const licenseEdition = this.props.editions.find(","75","            edition => edition.key === nextEditionKey","77","          const wrongEdition = Boolean(","78","            !licenseEdition || (edition && edition.key !== nextEditionKey)","79","          );","80","          this.setLicense({ license, loading: false, licenseEdition, previewStatus, wrongEdition });","85","          this.resetLicense({ license, loading: false });","119","      this.resetLicense({});","123","  handleTermsCheck = (checked: boolean) => {","124","    this.setLicense({ acceptTerms: checked });","125","  };","127","  resetLicense<K extends keyof State>(state: Pick<State, K>) {","128","    this.setLicense(","129","      Object.assign(","130","        {","131","          license: '',","132","          licenseEdition: undefined,","133","          previewStatus: undefined,","134","          wrongEdition: false","135","        },","136","        state","137","      )","138","    );","139","  }","140","","141","  setLicense<K extends keyof State>(state: Pick<State, K>) {","142","    this.setState(state, this.updateParentLicense);","143","  }","144","","145","  updateParentLicense = () => {","146","    const { acceptTerms, license, previewStatus, wrongEdition } = this.state;","148","      previewStatus !== 'NO_INSTALL' && !acceptTerms ? undefined : license,","149","      wrongEdition ? undefined : previewStatus","154","    const { licenseEdition, previewStatus, wrongEdition } = this.state;","155","    if (!previewStatus || wrongEdition) {","160","          {wrongEdition && (","161","            <p className=\"alert alert-danger\">","162","              {edition","163","                ? translateWithParameters('marketplace.wrong_license_type_x', edition.name)","164","                : translate('marketplace.wrong_license_type')}","165","            <\/p>","166","          )}","167","          {edition && (","168","            <a href={this.getLicenseFormUrl(edition)} target=\"_blank\">","169","              {translate('marketplace.i_need_a_license')}","170","            <\/a>","171","          )}","199","                        rel=\"noopener noreferrer\"","222","              rel=\"noopener noreferrer\"","247","          id=\"set-license\"","261","          }","262","          loading={loading}>"],"delete":["39","  license: string;","40","  licenseEdition?: Edition;","41","  loading: boolean;","42","  previewStatus?: string;","54","    this.state = { acceptTerms: false, license: '', loading: false };","73","          this.updateLicense(","74","            license,","75","            this.props.editions.find(edition => edition.key === nextEditionKey),","76","            edition && edition.key !== nextEditionKey ? undefined : previewStatus","82","          this.updateLicense(license, undefined, undefined);","116","      this.updateLicense(license, undefined, undefined);","120","  handleTermsCheck = (checked: boolean) =>","121","    this.setState({ acceptTerms: checked }, () =>","122","      this.updateLicense(this.state.license, this.state.licenseEdition, this.state.previewStatus)","123","    );","125","  updateLicense = (license: string, licenseEdition?: Edition, previewStatus?: string) => {","126","    this.setState({ license, licenseEdition, loading: false, previewStatus });","128","      previewStatus !== 'NO_INSTALL' && !this.state.acceptTerms ? undefined : license,","129","      previewStatus","134","    const { licenseEdition, previewStatus } = this.state;","135","    if (!previewStatus) {","137","      if (!edition) {","138","        return undefined;","139","      }","143","          {licenseEdition !== undefined &&","144","            edition.key !== licenseEdition.key && (","145","              <p className=\"alert alert-danger\">","146","                {translateWithParameters('marketplace.wrong_license_type_x', edition.name)}","147","              <\/p>","148","            )}","149","          <a href={this.getLicenseFormUrl(edition)} target=\"_blank\">","150","            {translate('marketplace.i_need_a_license')}","151","          <\/a>","224","          id=\"set-license\"","234","          loading={loading}","240","          }>"]}]}},"6103fc329f77399dab5fffc8c9688d6285cf67d3":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Action-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Params-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ResponseExample-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Menu-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Menu-test.tsx.snap":"ADD","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Params-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ActionChangelog-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Search-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ActionChangelog.tsx":"ADD","server\/sonar-web\/src\/main\/js\/components\/icons-components\/LinkIcon.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.tsx":"ADD","server\/sonar-web\/src\/main\/js\/api\/web-api.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/DeprecatedBadge.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Search-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/styles\/web-api.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/InternalBadge.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ResponseExample-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":"ADD","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Action-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Domain-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ActionChangelog-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Domain-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ResponseExample.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.tsx":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Action-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Params-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ResponseExample-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Menu-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Menu-test.tsx.snap":[{"add":[],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2877","api_documentation.possible_values=Possible values","2878","api_documentation.default_values=Default value","2879","api_documentation.example_values=Example value","2880","api_documentation.max_values=Maximum allowed values","2881","api_documentation.internal=internal","2882","api_documentation.deprecated=deprecated","2883","api_documentation.depracated_since_x=deprecated since {0}","2884","api_documentation.parameters=Parameters","2885","api_documentation.response_example=Response Example","2886","api_documentation.changelog=Changelog","2887",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Params-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ActionChangelog-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Search-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ActionChangelog.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/icons-components\/LinkIcon.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/web-api.ts":[{"add":["21","export interface Changelog {","22","  description: string;","23","  version: string;","24","}","25","","35","  maxValuesAllowed?: number;","38","  since?: string;","43","  changelog: Changelog[];","47","  internal: boolean;","49","  post: boolean;","50","  since?: string;","59","  since?: string;","60","}","61","","62","export interface Example {","63","  example: string;","64","  format: string;","77","export function fetchResponseExample(domain: string, action: string): Promise<Example> {"],"delete":["38","  since?: string;","39","  internal: boolean;","40","  post: boolean;","42","  changelog: Array<{ version: string; description: string }>;","64","export function fetchResponseExample(domain: string, action: string): Promise<{ example: string }> {"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/DeprecatedBadge.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Search-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/styles\/web-api.css":[{"add":["50",".web-api-action hr {","51","  margin: 10px 0 0;","52","  background-color: #ddd;","53","}","54",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/InternalBadge.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ResponseExample-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Action-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Domain-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ActionChangelog-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Domain-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ResponseExample.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.tsx":[{"add":[],"delete":[]}]}},"a47d4a1f0a15b34581364f2a45faee2544f92132":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/search_projects-example.json":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":[{"add":["153","      tuple(\"6.5\", \"Value 'leakPeriodDate' is added to parameter 'f'\"));","206","    ComponentDto project2 = insertProject(organization1Dto, c -> c","210","    ComponentDto project3 = insertProject(organization2Dto, c -> c","217","    String jsonResult = ws.newRequest().setParam(Param.FACETS, COVERAGE).execute().getInput();","218","    SearchProjectsWsResponse protobufResult = ws.newRequest().setParam(Param.FACETS, COVERAGE).executeProtobuf(SearchProjectsWsResponse.class);","220","    assertJson(jsonResult).withStrictArrayOrder().ignoreFields(\"id\").isSimilarTo(ws.getDef().responseExampleAsString());","221","    assertJson(ws.getDef().responseExampleAsString()).ignoreFields(\"id\").withStrictArrayOrder().isSimilarTo(jsonResult);","222","    assertThat(protobufResult.getComponentsList()).extracting(Component::getId).containsExactly(project1.uuid(), project2.uuid(), project3.uuid());"],"delete":["153","      tuple(\"6.5\", \"Value 'leakPeriodDate' is added to parameter 'f'\"),","154","      tuple(\"6.6\", \"The 'id' field is removed from the response\"));","207","    insertProject(organization1Dto, c -> c","211","    insertProject(organization2Dto, c -> c","218","    String result = ws.newRequest()","219","      .setParam(Param.FACETS, COVERAGE)","220","      .execute().getInput();","222","    assertJson(result).withStrictArrayOrder().isSimilarTo(ws.getDef().responseExampleAsString());","223","    assertJson(ws.getDef().responseExampleAsString()).withStrictArrayOrder().isSimilarTo(result);"]}],"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/search_projects-example.json":[{"add":["9","      \"id\": \"AU-Tpxb--iU5OvuD2FLy\",","21","      \"id\": \"AU-TpxcA-iU5OvuD2FLz\",","30","      \"id\": \"AU-TpxcA-iU5OvuD2FL0\","],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":[{"add":["117","        new Change(\"6.5\", format(\"Value '%s' is added to parameter '%s'\", LEAK_PERIOD_DATE, FIELDS)))","425","        .setId(dbComponent.uuid())"],"delete":["117","        new Change(\"6.5\", format(\"Value '%s' is added to parameter '%s'\", LEAK_PERIOD_DATE, FIELDS)),","118","        new Change(\"6.6\", \"The 'id' field is removed from the response\"))"]}]}},"20ed9553b9a1012f341c1f5d4a594221ae437600":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.js":[{"add":["22","import Select, { Creatable } from 'react-select';","370","  renderTagsField = (field \/*: string *\/, label \/*: string *\/, allowCreate \/*: boolean *\/) => {","377","    const Component = allowCreate ? Creatable : Select;","378","","379","    const options = [...this.state.tags, ...(this.state[field] || [])].map(tag => ({","380","      label: tag,","381","      value: tag","382","    }));","385","      <Component","391","        promptTextCreator={promptCreateTag}","493","          {this.renderTagsField('addTags', 'issue.add_tags', true)}","494","          {this.renderTagsField('removeTags', 'issue.remove_tags', false)}","524","","525","function promptCreateTag(label \/*: string *\/) {","526","  return `+ ${label}`;","527","}"],"delete":["22","import Select from 'react-select';","370","  renderTagsField = (field \/*: string *\/, label \/*: string *\/) => {","377","    const options = this.state.tags.map(tag => ({ label: tag, value: tag }));","380","      <Select","487","          {this.renderTagsField('addTags', 'issue.add_tags')}","488","          {this.renderTagsField('removeTags', 'issue.remove_tags')}"]}]}},"43ad639ca4a6057b0f9137eaa317d47cae649f60":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/events.html.erb":"MODIFY","server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/timeline.html.erb":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/dashboard_helper.rb":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/events.html.erb":[{"add":["0","<%","13","","79","","93","      <%= link_to_if profile_data['key'] && profile_data['from'] && profile_data['to'], h(event.name),"],"delete":["0","<% ","13","    ","79","  ","93","      <%= link_to_if profile_data['key'] && profile_data['from'] && profile_data['to'], event.name,"]}],"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/timeline.html.erb":[{"add":["163","           js_events += escape_javascript(e.name)"],"delete":["163","           js_events += json_escape(e.name)"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/dashboard_helper.rb":[{"add":["19","include ERB::Util","66","      \"<option value='#{index}' #{selected} class='#{html_class}'>&Delta; #{h(label)}<\/option>\""],"delete":["65","      \"<option value='#{index}' #{selected} class='#{html_class}'>&Delta; #{label}<\/option>\""]}]}},"7a090f7a951b839d94f4d1af2b53ee9a1453e399":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/ce.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBgTaskNotif.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBgTaskNotif-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBgTaskNotif-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/ProjectWatcher.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/ce.ts":[{"add":["92","): Promise<{ queue: PendingTask[]; current: Task }> {","93","  return getJSON('\/api\/ce\/component', { componentKey }).catch(throwGlobalError);"],"delete":["92","): Promise<{","93","  queue: PendingTask[];","94","  current: Task;","95","}> {","96","  return getJSON('\/api\/ce\/component', { componentKey });"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBgTaskNotif.tsx":[{"add":["43","  renderMessage(messageKey: string, status?: string) {","46","      component.configuration && component.configuration.showBackgroundTasks;","47","    const bgTaskUrl = getComponentBackgroundTaskUrl(component.key, status);","78","          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}"],"delete":["43","  renderMessage(messageKey: string) {","46","      component.configuration !== undefined && component.configuration.showBackgroundTasks;","47","    const bgTaskUrl = getComponentBackgroundTaskUrl(component.key);","78","          {this.renderMessage('component_navigation.status.pending')}"]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["66","export function getComponentBackgroundTaskUrl(componentKey: string, status?: string): Location {","67","  return { pathname: '\/project\/background_tasks', query: { id: componentKey, status } };"],"delete":["66","export function getComponentBackgroundTaskUrl(componentKey: string): Location {","67","  return { pathname: '\/project\/background_tasks', query: { id: componentKey } };"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.tsx":[{"add":["77","      },","78","      () => {}"],"delete":["77","      }"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBgTaskNotif-test.tsx":[{"add":["49","it('renders background task pending info correctly for admin', () => {","50","  expect(","51","    getWrapper({","52","      component: { ...component, configuration: { showBackgroundTasks: true } },","53","      isPending: true","54","    })","55","  ).toMatchSnapshot();","56","});","57",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBgTaskNotif-test.tsx.snap":[{"add":["56","","57","exports[`renders background task pending info correctly for admin 1`] = `","58","<NavBarNotif","59","  className=\"alert alert-info\"","60",">","61","  <PendingIcon","62","    className=\"spacer-right\"","63","  \/>","64","  <FormattedMessage","65","    defaultMessage=\"component_navigation.status.pending.admin\"","66","    id=\"component_navigation.status.pending.admin\"","67","    values={","68","      Object {","69","        \"url\": <Link","70","          onlyActiveOnIndex={false}","71","          style={Object {}}","72","          to={","73","            Object {","74","              \"pathname\": \"\/project\/background_tasks\",","75","              \"query\": Object {","76","                \"id\": \"foo\",","77","                \"status\": \"__ALL__\",","78","              },","79","            }","80","          }","81","        >","82","          background_tasks.page","83","        <\/Link>,","84","      }","85","    }","86","  \/>","87","<\/NavBarNotif>","88","`;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/ProjectWatcher.js":[{"add":["69","    getTasksForComponent(projectKey).then(","70","      response => {","71","        if (response.queue.length > 0) {","72","          this.setState({ inQueue: true });","73","        }","75","        if (response.current != null) {","76","          const { status } = response.current;","77","          this.setState({ status });","78","          if (status === STATUSES.SUCCESS) {","79","            this.props.onFinish();","80","          } else if (status === STATUSES.PENDING || status === STATUSES.IN_PROGRESS) {","81","            this.watch();","82","          }","83","        } else {","86","      },","87","      () => {}","88","    );"],"delete":["69","    getTasksForComponent(projectKey).then(response => {","70","      if (response.queue.length > 0) {","71","        this.setState({ inQueue: true });","72","      }","74","      if (response.current != null) {","75","        const { status } = response.current;","76","        this.setState({ status });","77","        if (status === STATUSES.SUCCESS) {","78","          this.props.onFinish();","79","        } else if (status === STATUSES.PENDING || status === STATUSES.IN_PROGRESS) {","82","      } else {","83","        this.watch();","84","      }","85","    });"]}]}},"ba96c18f6176dfe8ac96cd4565f5d6f9db6c4f46":{"changes":{"pom.xml":"MODIFY"},"diff":{"pom.xml":[{"add":["940","        <version>42.2.1<\/version>"],"delete":["940","        <version>42.1.4<\/version>"]}]}}}