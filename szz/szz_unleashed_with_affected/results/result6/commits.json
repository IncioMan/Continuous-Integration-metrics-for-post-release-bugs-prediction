{"99af758e84e5cc84f304e84e714ee0613fc32e59":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/projectActivity.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/projectActivity.css":[{"add":["119","  width: 58px;"],"delete":["119","  width: 54px;"]}]}},"708f380fc38b072c86bd451b8dff118d85688266":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/project_controller.rb":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/models\/snapshot.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/project_controller.rb":[{"add":["324","    next_snapshot = Snapshot.find(:first, :conditions => ['created_at>? and component_uuid=?', parent_snapshot.created_at_long, parent_snapshot.component_uuid], :order => 'created_at asc')"],"delete":["324","    next_snapshot = Snapshot.find(:first, :conditions => ['created_at>? and component_uuid=?', parent_snapshot.created_at.to_i*1000, parent_snapshot.component_uuid], :order => 'created_at asc')"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/models\/snapshot.rb":[{"add":["39","","40","  def created_at_long","41","    read_attribute(:created_at)","42","  end","43",""],"delete":["39","  "]}]}},"ae791695c0432f6e7d916f081af25ce67d90679d":{"changes":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest\/issue_snippets_multiple_locations.json":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest\/issue_snippets_multiple_locations.json":[{"add":["10","      \"projectName\": \"LONG_NAME_projectUuid\",","11","      \"measures\": {}","18","        \"scmAuthor\": \"AUTHOR_1\",","19","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","33","        \"scmAuthor\": \"AUTHOR_2\",","34","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","48","        \"scmAuthor\": \"AUTHOR_3\",","49","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","63","        \"scmAuthor\": \"AUTHOR_4\",","64","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","78","        \"scmAuthor\": \"AUTHOR_5\",","79","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","93","        \"scmAuthor\": \"AUTHOR_6\",","94","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","108","        \"scmAuthor\": \"AUTHOR_7\",","109","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","130","      \"projectName\": \"LONG_NAME_projectUuid\",","131","      \"measures\": {}","138","        \"scmAuthor\": \"AUTHOR_3\",","139","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","153","        \"scmAuthor\": \"AUTHOR_4\",","154","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","168","        \"scmAuthor\": \"AUTHOR_5\",","169","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","183","        \"scmAuthor\": \"AUTHOR_6\",","184","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","198","        \"scmAuthor\": \"AUTHOR_7\",","199","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","213","        \"scmAuthor\": \"AUTHOR_8\",","214","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","228","        \"scmAuthor\": \"AUTHOR_9\",","229","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","243","        \"scmAuthor\": \"AUTHOR_10\",","244","        \"scmDate\": \"1974-10-03T03:40:00+0100\","],"delete":["10","      \"projectName\": \"LONG_NAME_projectUuid\"","17","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","31","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","45","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","59","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","73","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","87","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","101","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","122","      \"projectName\": \"LONG_NAME_projectUuid\"","129","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","143","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","157","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","171","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","185","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","199","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","213","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","227","        \"scmDate\": \"1974-10-02T21:40:00-0500\","]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest.java":[{"add":["21","import java.net.URL;","49","import org.sonar.test.JsonAssert;","51","import static org.assertj.core.api.Assertions.assertThat;","65","  private static final String SCM_AUTHOR_JSON_FIELD = \"scmAuthor\";","66","","76","  private OrganizationDto organization;","82","    organization = db.organizations().insert();","86","    when(htmlSourceDecorator.getDecoratedSourceAsHtml(anyString(), anyString(), anyString()))","87","      .then((Answer<String>) invocationOnMock -> \"<p>\" + invocationOnMock.getArguments()[0] + \"<\/p>\");","91","    actionTester = new WsActionTester(new IssueSnippetsAction(dbClient, userSession, sourceService, linesJsonWriter, componentViewerJsonWriter));","202","    JsonAssert.assertJson(response.getInput())","203","      .ignoreFields(SCM_AUTHOR_JSON_FIELD)","204","      .isSimilarTo(toUrl(\"issue_snippets_multiple_locations.json\"));","205","    assertThat(response.getInput()).doesNotContain(SCM_AUTHOR_JSON_FIELD);","222","    JsonAssert.assertJson(response.getInput())","223","      .ignoreFields(SCM_AUTHOR_JSON_FIELD)","224","      .isSimilarTo(toUrl(\"issue_snippets_close_to_each_other.json\"));","225","    assertThat(response.getInput()).doesNotContain(SCM_AUTHOR_JSON_FIELD);","226","  }","227","","228","  @Test","229","  public void returns_scmAuthors_if_user_belongs_to_organization_of_project_of_issue() {","230","    ComponentDto file1 = insertFile(project, \"file1\");","231","    ComponentDto file2 = insertFile(project, \"file2\");","232","","233","    DbFileSources.Data fileSources = FileSourceTesting.newFakeData(10).build();","234","    fileSourceTester.insertFileSource(file1, 10, dto -> dto.setSourceData(fileSources));","235","    fileSourceTester.insertFileSource(file2, 10, dto -> dto.setSourceData(fileSources));","236","","237","    userSession.logIn()","238","      .addProjectPermission(USER, project, file1, file2)","239","      .addMembership(organization);","240","","241","    String issueKey1 = insertIssue(file1, newLocation(file1.uuid(), 5, 5),","242","      newLocation(file1.uuid(), 9, 9), newLocation(file2.uuid(), 1, 5));","243","","244","    TestResponse response = actionTester.newRequest().setParam(\"issueKey\", issueKey1).execute();","245","    JsonAssert.assertJson(response.getInput())","246","      .isSimilarTo(toUrl(\"issue_snippets_multiple_locations.json\"));","276","  private URL toUrl(String fileName) {","277","    Class clazz = getClass();","278","    String path = clazz.getSimpleName() + \"\/\" + fileName;","279","    URL url = clazz.getResource(path);","280","    if (url == null) {","281","      throw new IllegalStateException(\"Cannot find \" + path);","282","    }","283","    return url;","284","  }","285",""],"delete":["42","import org.sonar.server.issue.IssueFinder;","77","    OrganizationDto organization = db.organizations().insert();","81","    when(htmlSourceDecorator.getDecoratedSourceAsHtml(anyString(), anyString(), anyString())).then((Answer<String>)","82","      invocationOnMock -> \"<p>\" + invocationOnMock.getArguments()[0] + \"<\/p>\");","84","    IssueFinder issueFinder = new IssueFinder(dbClient, userSession);","87","    actionTester = new WsActionTester(new IssueSnippetsAction(sourceService, dbClient, issueFinder, linesJsonWriter, componentViewerJsonWriter));","198","    response.assertJson(getClass(), \"issue_snippets_multiple_locations.json\");","215","    response.assertJson(getClass(), \"issue_snippets_close_to_each_other.json\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsAction.java":[{"add":["34","import org.sonar.api.web.UserRole;","40","import org.sonar.db.organization.OrganizationDto;","45","import org.sonar.server.exceptions.NotFoundException;","47","import org.sonar.server.user.UserSession;","48","","49","import static java.lang.String.format;","53","  private final UserSession userSession;","54","  private final SourceService sourceService;","55","  private final ComponentViewerJsonWriter componentViewerJsonWriter;","56","  private final LinesJsonWriter linesJsonWriter;","58","  public IssueSnippetsAction(DbClient dbClient, UserSession userSession, SourceService sourceService, LinesJsonWriter linesJsonWriter,","59","                             ComponentViewerJsonWriter componentViewerJsonWriter) {","62","    this.userSession = userSession;","87","      IssueDto issueDto = dbClient.issueDao().selectByKey(dbSession, issueKey)","88","        .orElseThrow(() -> new NotFoundException(format(\"Issue with key '%s' does not exist\", issueKey)));","89","      ComponentDto project = dbClient.componentDao().selectByUuid(dbSession, issueDto.getProjectUuid())","90","        .orElseThrow(() -> new NotFoundException(format(\"Project with uuid '%s' does not exist\", issueDto.getProjectUuid())));","91","      userSession.checkComponentPermission(UserRole.USER, project);","94","      String componentUuid = issueDto.getComponentUuid();","95","      if (locations == null || componentUuid == null) {","96","        response.noContent();","98","        Map<String, TreeSet<Integer>> linesPerComponent = getLinesPerComponent(componentUuid, locations);","99","        Map<String, ComponentDto> componentsByUuid = dbClient.componentDao().selectByUuids(dbSession, linesPerComponent.keySet())","100","          .stream().collect(Collectors.toMap(ComponentDto::uuid, c -> c));","101","        try (JsonWriter jsonWriter = response.newJsonWriter()) {","102","          jsonWriter.beginObject();","104","          boolean showScmAuthors = userSession.hasMembership(new OrganizationDto().setUuid(project.getOrganizationUuid()));","105","          for (Map.Entry<String, TreeSet<Integer>> e : linesPerComponent.entrySet()) {","106","            ComponentDto componentDto = componentsByUuid.get(e.getKey());","107","            if (componentDto != null) {","108","              writeSnippet(dbSession, jsonWriter, componentDto, e.getValue(), showScmAuthors);","109","            }","112","          jsonWriter.endObject();","113","        }","118","  private void writeSnippet(DbSession dbSession, JsonWriter writer, ComponentDto fileDto, Set<Integer> lines, boolean showScmAuthors) {","119","    Optional<Iterable<DbFileSources.Line>> lineSourcesOpt = sourceService.getLines(dbSession, fileDto.uuid(), lines);","125","      .selectLastAnalysisByComponentUuid(dbSession, fileDto.projectUuid())","130","    writer.name(fileDto.getKey()).beginObject();","133","    componentViewerJsonWriter.writeComponentWithoutFav(writer, fileDto, dbSession, false);","134","    componentViewerJsonWriter.writeMeasures(writer, fileDto, dbSession);","136","    linesJsonWriter.writeSource(lineSources, writer, showScmAuthors, periodDateSupplier);","141","  private static Map<String, TreeSet<Integer>> getLinesPerComponent(String componentUuid, DbIssues.Locations locations) {","162","                                   DbCommons.TextRange textRange, int numLinesAfterIssue) {"],"delete":["22","import java.util.Collections;","44","import org.sonar.server.issue.IssueFinder;","48","  private final IssueFinder issueFinder;","49","  private final LinesJsonWriter linesJsonWriter;","50","  private final ComponentViewerJsonWriter componentViewerJsonWriter;","51","  private final SourceService sourceService;","54","  public IssueSnippetsAction(SourceService sourceService, DbClient dbClient, IssueFinder issueFinder, LinesJsonWriter linesJsonWriter,","55","    ComponentViewerJsonWriter componentViewerJsonWriter) {","58","    this.issueFinder = issueFinder;","83","      IssueDto issueDto = issueFinder.getByKey(dbSession, issueKey);","84","","85","      Map<String, TreeSet<Integer>> linesPerComponent;","86","      Map<String, ComponentDto> componentsByUuid;","89","      if (locations != null && issueDto.getComponentUuid() != null) {","90","        linesPerComponent = getLinesPerComponent(issueDto.getComponentUuid(), locations);","91","        componentsByUuid = dbClient.componentDao().selectByUuids(dbSession, linesPerComponent.keySet())","92","          .stream().collect(Collectors.toMap(ComponentDto::uuid, c -> c));","94","        componentsByUuid = Collections.emptyMap();","95","        linesPerComponent = Collections.emptyMap();","96","      }","98","      try (JsonWriter jsonWriter = response.newJsonWriter()) {","99","        jsonWriter.beginObject();","100","","101","        for (Map.Entry<String, TreeSet<Integer>> e : linesPerComponent.entrySet()) {","102","          ComponentDto componentDto = componentsByUuid.get(e.getKey());","103","          if (componentDto != null) {","104","            processComponent(dbSession, jsonWriter, componentDto, e.getKey(), e.getValue());","106","        }","108","        jsonWriter.endObject();","113","  private void processComponent(DbSession dbSession, JsonWriter writer, ComponentDto componentDto, String fileUuid, Set<Integer> lines) {","114","    Optional<Iterable<DbFileSources.Line>> lineSourcesOpt = sourceService.getLines(dbSession, fileUuid, lines);","120","      .selectLastAnalysisByComponentUuid(dbSession, componentDto.projectUuid())","125","    writer.name(componentDto.getKey()).beginObject();","128","    componentViewerJsonWriter.writeComponentWithoutFav(writer, componentDto, dbSession, false);","129","    componentViewerJsonWriter.writeMeasures(writer, componentDto, dbSession);","131","    linesJsonWriter.writeSource(lineSources, writer, false, periodDateSupplier);","136","  private Map<String, TreeSet<Integer>> getLinesPerComponent(String componentUuid, DbIssues.Locations locations) {","157","    DbCommons.TextRange textRange, int numLinesAfterIssue) {"]}]}},"282c729e2aed2e3362c89e60ada017dbdf51f6dc":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/SimpleSessionsContainer.js":"ADD","server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooter.js":"MODIFY","it\/it-tests\/src\/test\/java\/it\/ui\/UiTest.java":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/SimpleContainer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.js":[{"add":["28","import SimpleSessionsContainer from '..\/..\/apps\/sessions\/components\/SimpleSessionsContainer';","136","            <Route component={SimpleSessionsContainer}>"],"delete":["135","            <Route component={SimpleContainer}>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2871","","2872","#------------------------------------------------------------------------------","2873","#","2874","# GLOBAL FOOTER","2875","#","2876","#------------------------------------------------------------------------------","2877","footer.about=About","2878","footer.community=Community","2879","footer.documentation=Documentation","2880","footer.licence=LGPL v3","2881","footer.plugins=Plugins","2882","footer.production_database_explanation=The embedded database will not scale, it will not support upgrading to newer versions of SonarQube, and there is no support for migrating your data out of it into a different database engine.","2883","footer.production_database_warning=Embedded database should be used for evaluation purpose only","2884","footer.support=Get Support","2885","footer.version_x=Version {0}","2886","footer.web_api=Web API"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/SimpleSessionsContainer.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooter.js":[{"add":["25","import { translate, translateWithParameters } from '..\/..\/helpers\/l10n';","27","type Props = {","28","  hideLoggedInInfo?: boolean,","29","  productionDatabase: boolean,","30","  sonarqubeVersion?: string","31","};","33","function GlobalFooter({ hideLoggedInInfo, sonarqubeVersion, productionDatabase }: Props) {","39","            {translate('footer.production_database_warning')}","42","            {translate('footer.production_database_explanation')}","49","        {!hideLoggedInInfo &&","50","          sonarqubeVersion &&","51","          translateWithParameters('footer.version_x', sonarqubeVersion)}","52","        {!hideLoggedInInfo && sonarqubeVersion && ' - '}","53","        <a href=\"http:\/\/www.gnu.org\/licenses\/lgpl-3.0.txt\">{translate('footer.licence')}<\/a>","55","        <a href=\"http:\/\/www.sonarqube.org\">{translate('footer.community')}<\/a>","57","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/home.html\">","58","          {translate('footer.documentation')}","59","        <\/a>","61","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/community.html\">","62","          {translate('footer.support')}","63","        <\/a>","65","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">","66","          {translate('footer.plugins')}","67","        <\/a>","68","        {!hideLoggedInInfo && ' - '}","69","        {!hideLoggedInInfo && <Link to=\"\/web_api\">{translate('footer.web_api')}<\/Link>}","70","        {!hideLoggedInInfo && ' - '}","71","        {!hideLoggedInInfo && <Link to=\"\/about\">{translate('footer.about')}<\/Link>}"],"delete":["26","function GlobalFooter(props: Object) {","27","  const { sonarqubeVersion, productionDatabase } = props;","34","            Embedded database should be used for evaluation purpose only","37","            The embedded database will not scale, it will not support upgrading to newer","38","            {' '}","39","            versions of SonarQube, and there is no support for migrating your data out of it","40","            {' '}","41","            into a different database engine.","48","        Version {sonarqubeVersion}","50","        <a href=\"http:\/\/www.gnu.org\/licenses\/lgpl-3.0.txt\">LGPL v3<\/a>","52","        <a href=\"http:\/\/www.sonarqube.org\">Community<\/a>","54","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/home.html\">Documentation<\/a>","56","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/community.html\">Get Support<\/a>","57","        {' - '}","58","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">Plugins<\/a>","59","        {' - '}","60","        <Link to=\"\/web_api\">Web API<\/Link>","61","        {' - '}","62","        <Link to=\"\/about\">About<\/Link>"]}],"it\/it-tests\/src\/test\/java\/it\/ui\/UiTest.java":[{"add":["65","  public void footer_doesnt_contains_version_on_login_page() {","66","    WsResponse status = ItUtils.newAdminWsClient(ORCHESTRATOR).wsConnector().call(new GetRequest(\"api\/navigation\/global\"));","67","    Map<String, Object> statusMap = ItUtils.jsonToMap(status.content());","68","","69","    nav.openLogin();","70","    nav.getFooter().shouldNot(hasText((String) statusMap.get(\"version\")));","71","  }","72","","73","  @Test"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/SimpleContainer.js":[{"add":["23","type Props = {","24","  children?: React.Element<*> | Array<React.Element<*>>,","25","  hideLoggedInInfo?: boolean","26","};","27","","29","  props: Props;","59","        <GlobalFooter hideLoggedInInfo={this.props.hideLoggedInInfo} \/>"],"delete":["24","  static propTypes = {","25","    children: React.PropTypes.oneOfType([","26","      React.PropTypes.element,","27","      React.PropTypes.arrayOf(React.PropTypes.element)","28","    ])","29","  };","59","        <GlobalFooter \/>"]}]}},"8f6fd0a83ebd1d1ea5fc8772502172a2bd75cce8":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/plugins.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/plugins.ts":[{"add":["27","  description?: string;"],"delete":["27","  description: string;"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/utils.ts":[{"add":["46","      (plugin.description || '').toLowerCase().includes(s) ||"],"delete":["46","      plugin.description.toLowerCase().includes(s) ||"]}]}},"42cf60a64a18c941b0c844ad3cf4ecd8f86a9612":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/navigator\/controller.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/navigator\/controller.js":[{"add":["45","    facets = _.uniq(facets);"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":[{"add":["31","    if (facets.indexOf('assignees') !== -1) {","32","      facets.push('assigned_to_me');","33","    }"],"delete":["31","    facets.push('assigned_to_me');"]}]}},"fceb5ee46cf3abbf80eb8e40f96422c262953540":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/MeasuresOverlay-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/MeasuresOverlay.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeader-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/styles.css":[{"add":["134",".measures-viewer {","135","  display: flex;","136","  margin: 0 calc(-1 * var(--gridSize));","137","}","138","","139",".measures-viewer + .measures-viewer {","140","  margin-top: var(--gridSize);","141","}","142","","143",".measures-viewer-header {","144","  font-size: var(--smallFontSize);","145","}","146","","147",".measures-viewer-secondary .measures-viewer-card {","148","  background-color: var(--barBackgroundColor);","149","}","150","","151",".measures-viewer-section {","152","  flex: 1;","153","}","154","","155",".measures-viewer-section-limited {","156","  max-width: 25%;","157","}","158","","159",".measures-viewer-card {","160","  margin: calc(2 * var(--gridSize)) var(--gridSize);","161","  padding: var(--gridSize);","162","  border: 1px solid var(--barBorderColor);","163","  background-color: #fff;","164","}","165","","167","  margin-top: calc(2 * var(--gridSize));","168","  padding-top: calc(2 * var(--gridSize));","175","  width: calc(var(--gridSize) * 10);","176","  margin-right: calc(var(--gridSize) * 3);","180",".measure {","181","  line-height: 1.34;","184",".measure-one-line {","185","  display: flex;","186","  justify-content: space-between;","187","}","188","","189",".measure-one-line .measure-name {","190","  display: inline;","210","  margin-top: calc(var(--gridSize) \/ 2);","211","  margin-bottom: var(--gridSize);","212","  font-size: var(--bigFontSize);","215",".measure-big .measure-value,","217","  font-size: var(--hugeFontSize);","221","  margin-left: calc(var(--gridSize) * 3);"],"delete":["41",".source-viewer-header:before,","42",".source-viewer-header:after {","43","  display: table;","44","  content: '';","45","  line-height: 0;","46","}","47","","48",".source-viewer-header:after {","49","  clear: both;","50","}","51","","52",".source-viewer-header-bar + .source-viewer-header-bar {","53","  border-top: 1px solid var(--barBorderColor);","54","}","55","","56",".source-viewer-header-component {","57","  padding-top: 4px;","58","}","59","","60",".source-viewer-header-component-project {","61","  font-size: var(--smallFontSize);","62","}","63","","64",".source-viewer-header-component-name {","65","  font-size: var(--smallFontSize);","66","}","67","","68",".source-viewer-header-favorite {","69","  position: relative;","70","  top: -2px;","71","  margin-left: 4px;","72","  border-bottom: none;","73","}","74","","75",".source-viewer-header-measures-scope {","76","  position: relative;","77","  float: left;","78","}","79","","140",".source-viewer-measures-overlay {","141","  width: 1100px;","142","  left: 50%;","143","  right: auto;","144","  margin-left: -550px;","145","  padding: 20px 10px;","146","  background-color: var(--barBackgroundColor);","147","}","148","","149",".source-viewer-measures-overlay .modal-foot {","150","  width: 1100px;","151","  left: 50%;","152","  right: auto;","153","  margin-left: -550px;","154","}","155","","156",".source-viewer-measures-component {","157","  float: none;","158","  margin: 0 10px 30px;","159","}","160","","161",".source-viewer-measures-modal {","162","  background-color: var(--barBackgroundColor);","163","}","164","","165",".source-viewer-measures {","166","  margin: 0 -10px;","167","  background-color: var(--barBackgroundColor);","168","}","169","","170",".source-viewer-measures:before,","171",".source-viewer-measures:after {","172","  display: table;","173","  content: '';","174","  line-height: 0;","175","}","176","","177",".source-viewer-measures:after {","178","  clear: both;","179","}","180","","181",".source-viewer-measures + .source-viewer-measures {","182","  margin-top: 40px;","183","}","184","","185",".source-viewer-measures-secondary .source-viewer-measures-card {","186","  background-color: rgba(255, 255, 255, 0.6);","187","}","188","","189",".source-viewer-measures-section {","190","  float: left;","191","  width: 25%;","192","  margin: -20px 0;","193","}","194","","195",".source-viewer-measures-section-big {","196","  width: 50%;","197","}","198","","199",".source-viewer-measures-section-full {","200","  width: 100%;","201","}","202","","203",".source-viewer-measures-section + .source-viewer-measures-section-full {","204","  margin-top: 20px;","205","}","206","","207",".source-viewer-measures-card {","208","  margin: 20px 10px;","209","  padding: 10px;","210","  border: 1px solid var(--barBorderColor);","211","  background-color: #fff;","212","}","213","","214",".source-viewer-measures-card-overflow {","215","  overflow: auto;","216","}","217","","218",".source-viewer-measures-card-fixed-height {","219","  max-height: 36vh;","220","  overflow-y: scroll;","221","}","222","","223",".source-viewer-tests-list {","224","  width: 100%;","225","  font-size: var(--baseFontSize);","226","}","227","","228",".source-viewer-test-status,","229",".source-viewer-test-duration,","230",".source-viewer-test-covered-lines {","231","  width: 1px;","232","}","233","","234",".source-viewer-test-status,","235",".source-viewer-test-duration,","236",".source-viewer-test-covered-lines,","237",".source-viewer-test-covered-name {","238","  vertical-align: middle;","239","  padding: 3px;","240","}","241","","242",".source-viewer-test-name {","243","  padding-left: 10px;","244","  word-break: break-all;","245","}","246","","247",".source-viewer-test-covered-lines {","248","  text-align: right;","249","}","250","","251",".source-viewer-issue-location {","252","  max-width: 200px;","253","  margin-right: 10px;","254","  overflow: hidden;","255","  text-overflow: ellipsis;","256","  white-space: nowrap;","257","}","258","","259",".source-viewer-flow-location + .source-viewer-flow-location {","260","  z-index: 504;","261","}","262","","263",".source-line-issue-locations {","264","  float: right;","265","  margin-right: -10px;","266","}","267","","268",".source-line-issue-locations:empty {","269","  display: none;","270","}","271","","306","  margin-top: 15px;","307","  padding-top: 15px;","314","  width: 70px;","315","  margin-right: 20px;","319",".measures-chart .rating {","320","  font-size: 32px;","323",".measure {","324","  line-height: 1.3333333333333;","344","  margin-top: 2px;","345","  font-size: 15px;","346","  font-weight: 400;","349",".measure-big .measure-value {","350","  font-size: 22px;","351","}","352","","354","  font-size: 22px;","358","  margin-left: 20px;","359","}","360","","361",".measure-one-line:before,","362",".measure-one-line:after {","363","  display: table;","364","  content: '';","365","  line-height: 0;","366","}","367","","368",".measure-one-line:after {","369","  clear: both;","370","}","371","","372",".measure-one-line .measure-name {","373","  float: left;","374","}","375","","376",".measure-one-line .measure-value {","377","  float: right;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/MeasuresOverlay-test.tsx.snap":[{"add":["4","  contentLabel=\"component_viewer.file_measures\"","9","    className=\"modal-head\"","10","  >","11","    <h2>","12","      component_viewer.file_measures","13","    <\/h2>","14","  <\/div>","15","  <div","16","    className=\"modal-body modal-container\"","19","      className=\"measures-viewer-header big-spacer-bottom\"","21","      <div>","48","        className=\"display-flex-center little-spacer-top\"","58","      className=\"measures-viewer\"","61","        className=\"measures-viewer-section\"","64","          className=\"measures-viewer-card\"","69","            <MeasuresOverlayMeasure","70","              key=\"lines\"","71","              measure={","72","                Object {","73","                  \"metric\": Object {","74","                    \"domain\": \"Size\",","75","                    \"key\": \"lines\",","76","                    \"type\": \"INT\",","77","                  },","78","                  \"value\": \"18\",","80","              }","81","            \/>","82","            <MeasuresOverlayMeasure","83","              key=\"ncloc\"","84","              measure={","85","                Object {","86","                  \"metric\": Object {","87","                    \"domain\": \"Size\",","88","                    \"key\": \"ncloc\",","89","                    \"type\": \"INT\",","90","                  },","91","                  \"value\": \"8\",","93","              }","94","            \/>","95","            <MeasuresOverlayMeasure","96","              key=\"comment_lines\"","97","              measure={","98","                Object {","99","                  \"metric\": Object {","100","                    \"domain\": \"Size\",","101","                    \"key\": \"comment_lines\",","102","                    \"type\": \"INT\",","103","                  },","104","                  \"value\": \"2\",","106","              }","107","            \/>","108","            <MeasuresOverlayMeasure","109","              key=\"comment_lines_density\"","110","              measure={","111","                Object {","112","                  \"metric\": Object {","113","                    \"domain\": \"Size\",","114","                    \"key\": \"comment_lines_density\",","115","                    \"type\": \"PERCENT\",","116","                  },","117","                  \"value\": \"20.0\",","119","              }","120","            \/>","125","            <MeasuresOverlayMeasure","126","              key=\"cognitive_complexity\"","127","              measure={","128","                Object {","129","                  \"metric\": Object {","130","                    \"domain\": \"Complexity\",","131","                    \"key\": \"cognitive_complexity\",","132","                    \"type\": \"INT\",","133","                  },","134","                  \"value\": \"0\",","136","              }","137","            \/>","138","            <MeasuresOverlayMeasure","139","              key=\"complexity\"","140","              measure={","141","                Object {","142","                  \"metric\": Object {","143","                    \"domain\": \"Complexity\",","144","                    \"key\": \"complexity\",","145","                    \"type\": \"INT\",","146","                  },","147","                  \"value\": \"1\",","149","              }","150","            \/>","155","        className=\"measures-viewer-section\"","158","          className=\"measures-viewer-card\"","206","              className=\"measure measure-one-line\"","207","              key=\"BUG\"","209","              <span","210","                className=\"measure-name\"","212","                <IssueTypeIcon","213","                  className=\"little-spacer-right\"","214","                  query=\"BUG\"","215","                \/>","216","                issue.type.BUG","217","              <\/span>","218","              <span","219","                className=\"measure-value\"","221","                1","222","              <\/span>","223","            <\/div>","224","            <div","225","              className=\"measure measure-one-line\"","226","              key=\"VULNERABILITY\"","227","            >","228","              <span","229","                className=\"measure-name\"","231","                <IssueTypeIcon","232","                  className=\"little-spacer-right\"","233","                  query=\"VULNERABILITY\"","234","                \/>","235","                issue.type.VULNERABILITY","236","              <\/span>","237","              <span","238","                className=\"measure-value\"","239","              >","240","                0","241","              <\/span>","242","            <\/div>","243","            <div","244","              className=\"measure measure-one-line\"","245","              key=\"CODE_SMELL\"","246","            >","247","              <span","248","                className=\"measure-name\"","249","              >","250","                <IssueTypeIcon","251","                  className=\"little-spacer-right\"","252","                  query=\"CODE_SMELL\"","253","                \/>","254","                issue.type.CODE_SMELL","255","              <\/span>","256","              <span","257","                className=\"measure-value\"","258","              >","259","                2","260","              <\/span>","267","              className=\"measure measure-one-line\"","268","              key=\"BLOCKER\"","270","              <span","271","                className=\"measure-name\"","273","                <SeverityHelper","274","                  severity=\"BLOCKER\"","275","                \/>","276","              <\/span>","277","              <span","278","                className=\"measure-value\"","280","                5","281","              <\/span>","282","            <\/div>","283","            <div","284","              className=\"measure measure-one-line\"","285","              key=\"CRITICAL\"","286","            >","287","              <span","288","                className=\"measure-name\"","290","                <SeverityHelper","291","                  severity=\"CRITICAL\"","292","                \/>","293","              <\/span>","294","              <span","295","                className=\"measure-value\"","297","                4","298","              <\/span>","299","            <\/div>","300","            <div","301","              className=\"measure measure-one-line\"","302","              key=\"MAJOR\"","303","            >","304","              <span","305","                className=\"measure-name\"","307","                <SeverityHelper","308","                  severity=\"MAJOR\"","309","                \/>","310","              <\/span>","311","              <span","312","                className=\"measure-value\"","313","              >","314","                1","315","              <\/span>","316","            <\/div>","317","            <div","318","              className=\"measure measure-one-line\"","319","              key=\"MINOR\"","320","            >","321","              <span","322","                className=\"measure-name\"","323","              >","324","                <SeverityHelper","325","                  severity=\"MINOR\"","326","                \/>","327","              <\/span>","328","              <span","329","                className=\"measure-value\"","330","              >","331","                3","332","              <\/span>","333","            <\/div>","334","            <div","335","              className=\"measure measure-one-line\"","336","              key=\"INFO\"","337","            >","338","              <span","339","                className=\"measure-name\"","340","              >","341","                <SeverityHelper","342","                  severity=\"INFO\"","343","                \/>","344","              <\/span>","345","              <span","346","                className=\"measure-value\"","347","              >","348","                2","349","              <\/span>","356","              className=\"measure measure-one-line\"","357","              key=\"bad-practice\"","359","              <span","360","                className=\"measure-name\"","362","                <TagsIcon","363","                  className=\"little-spacer-right\"","364","                \/>","365","                bad-practice","366","              <\/span>","367","              <span","368","                className=\"measure-value\"","370","                1","371","              <\/span>","372","            <\/div>","373","            <div","374","              className=\"measure measure-one-line\"","375","              key=\"cert\"","376","            >","377","              <span","378","                className=\"measure-name\"","380","                <TagsIcon","381","                  className=\"little-spacer-right\"","382","                \/>","383","                cert","384","              <\/span>","385","              <span","386","                className=\"measure-value\"","387","              >","388","                3","389","              <\/span>","390","            <\/div>","391","            <div","392","              className=\"measure measure-one-line\"","393","              key=\"design\"","394","            >","395","              <span","396","                className=\"measure-name\"","397","              >","398","                <TagsIcon","399","                  className=\"little-spacer-right\"","400","                \/>","401","                design","402","              <\/span>","403","              <span","404","                className=\"measure-value\"","405","              >","406","                1","407","              <\/span>","413","        className=\"measures-viewer-section\"","416","          className=\"measures-viewer-card\"","452","            <MeasuresOverlayMeasure","453","              key=\"uncovered_lines\"","454","              measure={","455","                Object {","456","                  \"metric\": Object {","457","                    \"domain\": \"Coverage\",","458","                    \"key\": \"uncovered_lines\",","459","                    \"type\": \"INT\",","460","                  },","461","                  \"value\": \"1\",","463","              }","464","            \/>","465","            <MeasuresOverlayMeasure","466","              key=\"lines_to_cover\"","467","              measure={","468","                Object {","469","                  \"metric\": Object {","470","                    \"domain\": \"Coverage\",","471","                    \"key\": \"lines_to_cover\",","472","                    \"type\": \"INT\",","473","                  },","474","                  \"value\": \"4\",","476","              }","477","            \/>","482","        className=\"measures-viewer-section\"","485","          className=\"measures-viewer-card\"","522","            <MeasuresOverlayMeasure","523","              key=\"duplicated_blocks\"","524","              measure={","525","                Object {","526","                  \"metric\": Object {","527","                    \"domain\": \"Duplications\",","528","                    \"key\": \"duplicated_blocks\",","529","                    \"type\": \"INT\",","530","                  },","531","                  \"value\": \"3\",","533","              }","534","            \/>","535","            <MeasuresOverlayMeasure","536","              key=\"duplicated_lines\"","537","              measure={","538","                Object {","539","                  \"metric\": Object {","540","                    \"domain\": \"Duplications\",","541","                    \"key\": \"duplicated_lines\",","542","                    \"type\": \"INT\",","543","                  },","544","                  \"value\": \"0\",","546","              }","547","            \/>","578","  contentLabel=\"component_viewer.file_measures\"","583","    className=\"modal-head\"","584","  >","585","    <h2>","586","      component_viewer.file_measures","587","    <\/h2>","588","  <\/div>","589","  <div","590","    className=\"modal-body modal-container\"","593","      className=\"measures-viewer-header big-spacer-bottom\"","595","      <div>","622","        className=\"display-flex-center little-spacer-top\"","632","      className=\"measures-viewer\"","635","        className=\"measures-viewer-section\"","638","          className=\"measures-viewer-card\"","643","            <MeasuresOverlayMeasure","644","              key=\"lines\"","645","              measure={","646","                Object {","647","                  \"metric\": Object {","648","                    \"domain\": \"Size\",","649","                    \"key\": \"lines\",","650","                    \"type\": \"INT\",","651","                  },","652","                  \"value\": \"18\",","654","              }","655","            \/>","656","            <MeasuresOverlayMeasure","657","              key=\"ncloc\"","658","              measure={","659","                Object {","660","                  \"metric\": Object {","661","                    \"domain\": \"Size\",","662","                    \"key\": \"ncloc\",","663","                    \"type\": \"INT\",","664","                  },","665","                  \"value\": \"8\",","667","              }","668","            \/>","669","            <MeasuresOverlayMeasure","670","              key=\"comment_lines\"","671","              measure={","672","                Object {","673","                  \"metric\": Object {","674","                    \"domain\": \"Size\",","675","                    \"key\": \"comment_lines\",","676","                    \"type\": \"INT\",","677","                  },","678","                  \"value\": \"2\",","680","              }","681","            \/>","682","            <MeasuresOverlayMeasure","683","              key=\"comment_lines_density\"","684","              measure={","685","                Object {","686","                  \"metric\": Object {","687","                    \"domain\": \"Size\",","688","                    \"key\": \"comment_lines_density\",","689","                    \"type\": \"PERCENT\",","690","                  },","691","                  \"value\": \"20.0\",","693","              }","694","            \/>","699","            <MeasuresOverlayMeasure","700","              key=\"cognitive_complexity\"","701","              measure={","702","                Object {","703","                  \"metric\": Object {","704","                    \"domain\": \"Complexity\",","705","                    \"key\": \"cognitive_complexity\",","706","                    \"type\": \"INT\",","707","                  },","708","                  \"value\": \"0\",","710","              }","711","            \/>","712","            <MeasuresOverlayMeasure","713","              key=\"complexity\"","714","              measure={","715","                Object {","716","                  \"metric\": Object {","717","                    \"domain\": \"Complexity\",","718","                    \"key\": \"complexity\",","719","                    \"type\": \"INT\",","720","                  },","721","                  \"value\": \"1\",","723","              }","724","            \/>","729","        className=\"measures-viewer-section\"","732","          className=\"measures-viewer-card\"","780","              className=\"measure measure-one-line\"","781","              key=\"BUG\"","783","              <span","784","                className=\"measure-name\"","786","                <IssueTypeIcon","787","                  className=\"little-spacer-right\"","788","                  query=\"BUG\"","789","                \/>","790","                issue.type.BUG","791","              <\/span>","792","              <span","793","                className=\"measure-value\"","795","                1","796","              <\/span>","797","            <\/div>","798","            <div","799","              className=\"measure measure-one-line\"","800","              key=\"VULNERABILITY\"","801","            >","802","              <span","803","                className=\"measure-name\"","805","                <IssueTypeIcon","806","                  className=\"little-spacer-right\"","807","                  query=\"VULNERABILITY\"","808","                \/>","809","                issue.type.VULNERABILITY","810","              <\/span>","811","              <span","812","                className=\"measure-value\"","813","              >","814","                0","815","              <\/span>","816","            <\/div>","817","            <div","818","              className=\"measure measure-one-line\"","819","              key=\"CODE_SMELL\"","820","            >","821","              <span","822","                className=\"measure-name\"","823","              >","824","                <IssueTypeIcon","825","                  className=\"little-spacer-right\"","826","                  query=\"CODE_SMELL\"","827","                \/>","828","                issue.type.CODE_SMELL","829","              <\/span>","830","              <span","831","                className=\"measure-value\"","832","              >","833","                2","834","              <\/span>","841","              className=\"measure measure-one-line\"","842","              key=\"BLOCKER\"","844","              <span","845","                className=\"measure-name\"","847","                <SeverityHelper","848","                  severity=\"BLOCKER\"","849","                \/>","850","              <\/span>","851","              <span","852","                className=\"measure-value\"","854","                5","855","              <\/span>","856","            <\/div>","857","            <div","858","              className=\"measure measure-one-line\"","859","              key=\"CRITICAL\"","860","            >","861","              <span","862","                className=\"measure-name\"","864","                <SeverityHelper","865","                  severity=\"CRITICAL\"","866","                \/>","867","              <\/span>","868","              <span","869","                className=\"measure-value\"","871","                4","872","              <\/span>","873","            <\/div>","874","            <div","875","              className=\"measure measure-one-line\"","876","              key=\"MAJOR\"","877","            >","878","              <span","879","                className=\"measure-name\"","881","                <SeverityHelper","882","                  severity=\"MAJOR\"","883","                \/>","884","              <\/span>","885","              <span","886","                className=\"measure-value\"","887","              >","888","                1","889","              <\/span>","890","            <\/div>","891","            <div","892","              className=\"measure measure-one-line\"","893","              key=\"MINOR\"","894","            >","895","              <span","896","                className=\"measure-name\"","897","              >","898","                <SeverityHelper","899","                  severity=\"MINOR\"","900","                \/>","901","              <\/span>","902","              <span","903","                className=\"measure-value\"","904","              >","905","                3","906","              <\/span>","907","            <\/div>","908","            <div","909","              className=\"measure measure-one-line\"","910","              key=\"INFO\"","911","            >","912","              <span","913","                className=\"measure-name\"","914","              >","915","                <SeverityHelper","916","                  severity=\"INFO\"","917","                \/>","918","              <\/span>","919","              <span","920","                className=\"measure-value\"","921","              >","922","                2","923","              <\/span>","930","              className=\"measure measure-one-line\"","931","              key=\"bad-practice\"","933","              <span","934","                className=\"measure-name\"","936","                <TagsIcon","937","                  className=\"little-spacer-right\"","938","                \/>","939","                bad-practice","940","              <\/span>","941","              <span","942","                className=\"measure-value\"","944","                1","945","              <\/span>","946","            <\/div>","947","            <div","948","              className=\"measure measure-one-line\"","949","              key=\"cert\"","950","            >","951","              <span","952","                className=\"measure-name\"","954","                <TagsIcon","955","                  className=\"little-spacer-right\"","956","                \/>","957","                cert","958","              <\/span>","959","              <span","960","                className=\"measure-value\"","961","              >","962","                3","963","              <\/span>","964","            <\/div>","965","            <div","966","              className=\"measure measure-one-line\"","967","              key=\"design\"","968","            >","969","              <span","970","                className=\"measure-name\"","971","              >","972","                <TagsIcon","973","                  className=\"little-spacer-right\"","974","                \/>","975","                design","976","              <\/span>","977","              <span","978","                className=\"measure-value\"","979","              >","980","                1","981","              <\/span>","987","        className=\"measures-viewer-section\"","990","          className=\"measures-viewer-card\"","1026","            <MeasuresOverlayMeasure","1027","              key=\"uncovered_lines\"","1028","              measure={","1029","                Object {","1030","                  \"metric\": Object {","1031","                    \"domain\": \"Coverage\",","1032","                    \"key\": \"uncovered_lines\",","1033","                    \"type\": \"INT\",","1034","                  },","1035","                  \"value\": \"1\",","1037","              }","1038","            \/>","1039","            <MeasuresOverlayMeasure","1040","              key=\"lines_to_cover\"","1041","              measure={","1042","                Object {","1043","                  \"metric\": Object {","1044","                    \"domain\": \"Coverage\",","1045","                    \"key\": \"lines_to_cover\",","1046","                    \"type\": \"INT\",","1047","                  },","1048","                  \"value\": \"4\",","1050","              }","1051","            \/>","1056","        className=\"measures-viewer-section\"","1059","          className=\"measures-viewer-card\"","1096","            <MeasuresOverlayMeasure","1097","              key=\"duplicated_blocks\"","1098","              measure={","1099","                Object {","1100","                  \"metric\": Object {","1101","                    \"domain\": \"Duplications\",","1102","                    \"key\": \"duplicated_blocks\",","1103","                    \"type\": \"INT\",","1104","                  },","1105","                  \"value\": \"3\",","1106","                }","1107","              }","1108","            \/>","1109","            <MeasuresOverlayMeasure","1110","              key=\"duplicated_lines\"","1111","              measure={","1112","                Object {","1113","                  \"metric\": Object {","1114","                    \"domain\": \"Duplications\",","1115","                    \"key\": \"duplicated_lines\",","1116","                    \"type\": \"INT\",","1117","                  },","1118","                  \"value\": \"0\",","1119","                }","1120","              }","1121","            \/>","1122","          <\/div>","1123","        <\/div>","1124","      <\/div>","1125","    <\/div>","1126","    <div","1127","      className=\"spacer-top\"","1128","    >","1129","      <div","1130","        className=\"measures-viewer measures-viewer-secondary\"","1131","      >","1132","        <div","1133","          className=\"measures-viewer-section\"","1134","        >","1135","          <div","1136","            className=\"measures-viewer-card\"","1137","            key=\"Complexity\"","1138","          >","1140","              className=\"measures\"","1142","              <div","1143","                className=\"measure measure-big\"","1144","              >","1145","                <span","1146","                  className=\"measure-name\"","1147","                >","1148","                  Complexity","1149","                <\/span>","1150","              <\/div>","1151","              <MeasuresOverlayMeasure","1152","                key=\"cognitive_complexity\"","1153","                measure={","1154","                  Object {","1155","                    \"metric\": Object {","1156","                      \"domain\": \"Complexity\",","1157","                      \"key\": \"cognitive_complexity\",","1158","                      \"type\": \"INT\",","1159","                    },","1160","                    \"value\": \"0\",","1161","                  }","1162","                }","1163","              \/>","1164","              <MeasuresOverlayMeasure","1165","                key=\"complexity\"","1166","                measure={","1167","                  Object {","1168","                    \"metric\": Object {","1169","                      \"domain\": \"Complexity\",","1170","                      \"key\": \"complexity\",","1171","                      \"type\": \"INT\",","1172","                    },","1173","                    \"value\": \"1\",","1174","                  }","1175","                }","1176","              \/>","1177","            <\/div>","1178","          <\/div>","1179","          <div","1180","            className=\"measures-viewer-card\"","1181","            key=\"Size\"","1182","          >","1183","            <div","1184","              className=\"measures\"","1185","            >","1186","              <div","1187","                className=\"measure measure-big\"","1188","              >","1189","                <span","1190","                  className=\"measure-name\"","1191","                >","1192","                  Size","1193","                <\/span>","1194","              <\/div>","1195","              <MeasuresOverlayMeasure","1196","                key=\"classes\"","1197","                measure={","1198","                  Object {","1199","                    \"metric\": Object {","1200","                      \"domain\": \"Size\",","1201","                      \"key\": \"classes\",","1202","                      \"type\": \"INT\",","1203","                    },","1204","                    \"value\": \"1\",","1205","                  }","1206","                }","1207","              \/>","1208","              <MeasuresOverlayMeasure","1209","                key=\"comment_lines\"","1210","                measure={","1211","                  Object {","1212","                    \"metric\": Object {","1213","                      \"domain\": \"Size\",","1214","                      \"key\": \"comment_lines\",","1215","                      \"type\": \"INT\",","1216","                    },","1217","                    \"value\": \"2\",","1218","                  }","1219","                }","1220","              \/>","1221","              <MeasuresOverlayMeasure","1222","                key=\"comment_lines_density\"","1223","                measure={","1224","                  Object {","1225","                    \"metric\": Object {","1226","                      \"domain\": \"Size\",","1227","                      \"key\": \"comment_lines_density\",","1228","                      \"type\": \"PERCENT\",","1229","                    },","1230","                    \"value\": \"20.0\",","1231","                  }","1232","                }","1233","              \/>","1234","              <MeasuresOverlayMeasure","1235","                key=\"files\"","1236","                measure={","1237","                  Object {","1238","                    \"metric\": Object {","1239","                      \"domain\": \"Size\",","1240","                      \"key\": \"files\",","1241","                      \"type\": \"INT\",","1242","                    },","1243","                    \"value\": \"1\",","1244","                  }","1245","                }","1246","              \/>","1247","              <MeasuresOverlayMeasure","1248","                key=\"functions\"","1249","                measure={","1250","                  Object {","1251","                    \"metric\": Object {","1252","                      \"domain\": \"Size\",","1253","                      \"key\": \"functions\",","1254","                      \"type\": \"INT\",","1255","                    },","1256","                    \"value\": \"1\",","1257","                  }","1258","                }","1259","              \/>","1260","              <MeasuresOverlayMeasure","1261","                key=\"lines\"","1262","                measure={","1263","                  Object {","1264","                    \"metric\": Object {","1265","                      \"domain\": \"Size\",","1266","                      \"key\": \"lines\",","1267","                      \"type\": \"INT\",","1268","                    },","1269","                    \"value\": \"18\",","1270","                  }","1271","                }","1272","              \/>","1273","              <MeasuresOverlayMeasure","1274","                key=\"ncloc\"","1275","                measure={","1276","                  Object {","1277","                    \"metric\": Object {","1278","                      \"domain\": \"Size\",","1279","                      \"key\": \"ncloc\",","1280","                      \"type\": \"INT\",","1281","                    },","1282","                    \"value\": \"8\",","1283","                  }","1284","                }","1285","              \/>","1286","              <MeasuresOverlayMeasure","1287","                key=\"statements\"","1288","                measure={","1289","                  Object {","1290","                    \"metric\": Object {","1291","                      \"domain\": \"Size\",","1292","                      \"key\": \"statements\",","1293","                      \"type\": \"INT\",","1294","                    },","1295","                    \"value\": \"3\",","1296","                  }","1297","                }","1298","              \/>","1299","            <\/div>","1300","          <\/div>","1301","          <div","1302","            className=\"measures-viewer-card\"","1303","            key=\"Coverage\"","1304","          >","1305","            <div","1306","              className=\"measures\"","1307","            >","1308","              <div","1309","                className=\"measure measure-big\"","1310","              >","1311","                <span","1312","                  className=\"measure-name\"","1313","                >","1314","                  Coverage","1315","                <\/span>","1316","              <\/div>","1317","              <MeasuresOverlayMeasure","1318","                key=\"coverage\"","1319","                measure={","1320","                  Object {","1321","                    \"metric\": Object {","1322","                      \"domain\": \"Coverage\",","1323","                      \"key\": \"coverage\",","1324","                      \"type\": \"PERCENT\",","1325","                    },","1326","                    \"value\": \"75.0\",","1327","                  }","1328","                }","1329","              \/>","1330","              <MeasuresOverlayMeasure","1331","                key=\"line_coverage\"","1332","                measure={","1333","                  Object {","1334","                    \"metric\": Object {","1335","                      \"domain\": \"Coverage\",","1336","                      \"key\": \"line_coverage\",","1337","                      \"type\": \"PERCENT\",","1338","                    },","1339","                    \"value\": \"75.0\",","1340","                  }","1341","                }","1342","              \/>","1343","              <MeasuresOverlayMeasure","1344","                key=\"lines_to_cover\"","1345","                measure={","1346","                  Object {","1347","                    \"metric\": Object {","1348","                      \"domain\": \"Coverage\",","1349","                      \"key\": \"lines_to_cover\",","1350","                      \"type\": \"INT\",","1351","                    },","1352","                    \"value\": \"4\",","1353","                  }","1354","                }","1355","              \/>","1356","              <MeasuresOverlayMeasure","1357","                key=\"uncovered_lines\"","1358","                measure={","1359","                  Object {","1360","                    \"metric\": Object {","1361","                      \"domain\": \"Coverage\",","1362","                      \"key\": \"uncovered_lines\",","1363","                      \"type\": \"INT\",","1364","                    },","1365","                    \"value\": \"1\",","1366","                  }","1367","                }","1368","              \/>","1369","            <\/div>","1370","          <\/div>","1371","          <div","1372","            className=\"measures-viewer-card\"","1373","            key=\"Reliability\"","1374","          >","1375","            <div","1376","              className=\"measures\"","1377","            >","1378","              <div","1379","                className=\"measure measure-big\"","1380","              >","1381","                <span","1382","                  className=\"measure-name\"","1383","                >","1384","                  Reliability","1385","                <\/span>","1386","              <\/div>","1387","              <MeasuresOverlayMeasure","1388","                key=\"bugs\"","1389","                measure={","1390","                  Object {","1391","                    \"metric\": Object {","1392","                      \"domain\": \"Reliability\",","1393","                      \"key\": \"bugs\",","1394","                      \"type\": \"INT\",","1395","                    },","1396","                    \"value\": \"0\",","1397","                  }","1398","                }","1399","              \/>","1400","              <MeasuresOverlayMeasure","1401","                key=\"reliability_rating\"","1402","                measure={","1403","                  Object {","1404","                    \"metric\": Object {","1405","                      \"domain\": \"Reliability\",","1406","                      \"key\": \"reliability_rating\",","1407","                      \"type\": \"RATING\",","1408","                    },","1409","                    \"value\": \"1.0\",","1410","                  }","1411","                }","1412","              \/>","1413","            <\/div>","1414","          <\/div>","1415","        <\/div>","1416","        <div","1417","          className=\"measures-viewer-section\"","1418","        >","1419","          <div","1420","            className=\"measures-viewer-card\"","1421","            key=\"Security\"","1422","          >","1423","            <div","1424","              className=\"measures\"","1425","            >","1426","              <div","1427","                className=\"measure measure-big\"","1428","              >","1429","                <span","1430","                  className=\"measure-name\"","1431","                >","1432","                  Security","1433","                <\/span>","1434","              <\/div>","1435","              <MeasuresOverlayMeasure","1436","                key=\"security_rating\"","1437","                measure={","1438","                  Object {","1439","                    \"metric\": Object {","1440","                      \"domain\": \"Security\",","1441","                      \"key\": \"security_rating\",","1442","                      \"type\": \"RATING\",","1443","                    },","1444","                    \"value\": \"1.0\",","1445","                  }","1446","                }","1447","              \/>","1448","              <MeasuresOverlayMeasure","1449","                key=\"vulnerabilities\"","1450","                measure={","1451","                  Object {","1452","                    \"metric\": Object {","1453","                      \"domain\": \"Security\",","1454","                      \"key\": \"vulnerabilities\",","1455","                      \"type\": \"INT\",","1456","                    },","1457","                    \"value\": \"0\",","1458","                  }","1459","                }","1460","              \/>","1461","            <\/div>","1462","          <\/div>","1463","          <div","1464","            className=\"measures-viewer-card\"","1465","            key=\"Tests\"","1466","          >","1467","            <div","1468","              className=\"measures\"","1469","            >","1470","              <div","1471","                className=\"measure measure-big\"","1472","              >","1473","                <span","1474","                  className=\"measure-name\"","1475","                >","1476","                  Tests","1477","                <\/span>","1478","              <\/div>","1479","              <MeasuresOverlayMeasure","1480","                key=\"skipped_tests\"","1481","                measure={","1482","                  Object {","1483","                    \"metric\": Object {","1484","                      \"domain\": \"Tests\",","1485","                      \"key\": \"skipped_tests\",","1486","                      \"type\": \"INT\",","1487","                    },","1488","                    \"value\": \"0\",","1489","                  }","1490","                }","1491","              \/>","1492","              <MeasuresOverlayMeasure","1493","                key=\"test_errors\"","1494","                measure={","1495","                  Object {","1496","                    \"metric\": Object {","1497","                      \"domain\": \"Tests\",","1498","                      \"key\": \"test_errors\",","1499","                      \"type\": \"INT\",","1500","                    },","1501","                    \"value\": \"1\",","1502","                  }","1503","                }","1504","              \/>","1505","              <MeasuresOverlayMeasure","1506","                key=\"test_failures\"","1507","                measure={","1508","                  Object {","1509","                    \"metric\": Object {","1510","                      \"domain\": \"Tests\",","1511","                      \"key\": \"test_failures\",","1512","                      \"type\": \"INT\",","1513","                    },","1514","                    \"value\": \"0\",","1515","                  }","1516","                }","1517","              \/>","1518","              <MeasuresOverlayMeasure","1519","                key=\"test_success_density\"","1520","                measure={","1521","                  Object {","1522","                    \"metric\": Object {","1523","                      \"domain\": \"Tests\",","1524","                      \"key\": \"test_success_density\",","1525","                      \"type\": \"PERCENT\",","1526","                    },","1527","                    \"value\": \"100.0\",","1528","                  }","1529","                }","1530","              \/>","1531","            <\/div>","1532","          <\/div>","1533","          <div","1534","            className=\"measures-viewer-card\"","1535","            key=\"Issues\"","1536","          >","1537","            <div","1538","              className=\"measures\"","1539","            >","1540","              <div","1541","                className=\"measure measure-big\"","1542","              >","1543","                <span","1544","                  className=\"measure-name\"","1545","                >","1546","                  Issues","1547","                <\/span>","1548","              <\/div>","1549","              <MeasuresOverlayMeasure","1550","                key=\"false_positive_issues\"","1551","                measure={","1552","                  Object {","1553","                    \"metric\": Object {","1554","                      \"domain\": \"Issues\",","1555","                      \"key\": \"false_positive_issues\",","1556","                      \"type\": \"INT\",","1557","                    },","1558","                    \"value\": \"0\",","1559","                  }","1560","                }","1561","              \/>","1562","              <MeasuresOverlayMeasure","1563","                key=\"violations\"","1564","                measure={","1565","                  Object {","1566","                    \"metric\": Object {","1567","                      \"domain\": \"Issues\",","1568","                      \"key\": \"violations\",","1569","                      \"type\": \"INT\",","1570","                    },","1571","                    \"value\": \"1\",","1572","                  }","1573","                }","1574","              \/>","1575","              <MeasuresOverlayMeasure","1576","                key=\"wont_fix_issues\"","1577","                measure={","1578","                  Object {","1579","                    \"metric\": Object {","1580","                      \"domain\": \"Issues\",","1581","                      \"key\": \"wont_fix_issues\",","1582","                      \"type\": \"INT\",","1583","                    },","1584","                    \"value\": \"0\",","1585","                  }","1586","                }","1587","              \/>","1588","            <\/div>","1589","          <\/div>","1590","          <div","1591","            className=\"measures-viewer-card\"","1592","            key=\"Duplications\"","1593","          >","1594","            <div","1595","              className=\"measures\"","1596","            >","1597","              <div","1598","                className=\"measure measure-big\"","1599","              >","1600","                <span","1601","                  className=\"measure-name\"","1602","                >","1603","                  Duplications","1604","                <\/span>","1605","              <\/div>","1620","                key=\"duplicated_files\"","1621","                measure={","1622","                  Object {","1623","                    \"metric\": Object {","1624","                      \"domain\": \"Duplications\",","1625","                      \"key\": \"duplicated_files\",","1626","                      \"type\": \"INT\",","1627","                    },","1628","                    \"value\": \"1\",","1629","                  }","1630","                }","1631","              \/>","1632","              <MeasuresOverlayMeasure","1645","              <MeasuresOverlayMeasure","1646","                key=\"duplicated_lines_density\"","1647","                measure={","1648","                  Object {","1649","                    \"metric\": Object {","1650","                      \"domain\": \"Duplications\",","1651","                      \"key\": \"duplicated_lines_density\",","1652","                      \"type\": \"PERCENT\",","1653","                    },","1654","                    \"value\": \"0.0\",","1656","                }","1657","              \/>","1661","            className=\"measures-viewer-card\"","1668","                className=\"measure measure-big\"","1670","                <span","1671","                  className=\"measure-name\"","1673","                  Maintainability","1674","                <\/span>","1676","              <MeasuresOverlayMeasure","1677","                key=\"code_smells\"","1678","                measure={","1679","                  Object {","1680","                    \"metric\": Object {","1681","                      \"domain\": \"Maintainability\",","1682","                      \"key\": \"code_smells\",","1683","                      \"type\": \"INT\",","1684","                    },","1685","                    \"value\": \"2\",","1686","                  }","1687","                }","1688","              \/>","1689","              <MeasuresOverlayMeasure","1690","                key=\"sqale_debt_ratio\"","1691","                measure={","1692","                  Object {","1693","                    \"metric\": Object {","1694","                      \"domain\": \"Maintainability\",","1695","                      \"key\": \"sqale_debt_ratio\",","1696","                      \"type\": \"PERCENT\",","1697","                    },","1698","                    \"value\": \"16.7\",","1699","                  }","1700","                }","1701","              \/>","1702","              <MeasuresOverlayMeasure","1703","                key=\"sqale_index\"","1704","                measure={","1705","                  Object {","1706","                    \"metric\": Object {","1707","                      \"domain\": \"Maintainability\",","1708","                      \"key\": \"sqale_index\",","1709","                      \"type\": \"WORK_DUR\",","1710","                    },","1711","                    \"value\": \"40\",","1712","                  }","1713","                }","1714","              \/>","1735","  contentLabel=\"component_viewer.file_measures\"","1740","    className=\"modal-head\"","1741","  >","1742","    <h2>","1743","      component_viewer.file_measures","1744","    <\/h2>","1745","  <\/div>","1746","  <div","1747","    className=\"modal-body modal-container\"","1750","      className=\"measures-viewer-header big-spacer-bottom\"","1752","      <div>","1779","        className=\"display-flex-center little-spacer-top\"","1789","      className=\"measures-viewer\"","1792","        className=\"measures-viewer-section measures-viewer-section-limited\"","1795","          className=\"measures-viewer-card\"","1800","            <MeasuresOverlayMeasure","1801","              key=\"test_success_density\"","1802","              measure={","1803","                Object {","1804","                  \"metric\": Object {","1805","                    \"domain\": \"Tests\",","1806","                    \"key\": \"test_success_density\",","1807","                    \"type\": \"PERCENT\",","1808","                  },","1809","                  \"value\": \"100.0\",","1811","              }","1812","            \/>","1813","            <MeasuresOverlayMeasure","1814","              key=\"test_failures\"","1815","              measure={","1816","                Object {","1817","                  \"metric\": Object {","1818","                    \"domain\": \"Tests\",","1819","                    \"key\": \"test_failures\",","1820","                    \"type\": \"INT\",","1821","                  },","1822","                  \"value\": \"0\",","1824","              }","1825","            \/>","1826","            <MeasuresOverlayMeasure","1827","              key=\"test_errors\"","1828","              measure={","1829","                Object {","1830","                  \"metric\": Object {","1831","                    \"domain\": \"Tests\",","1832","                    \"key\": \"test_errors\",","1833","                    \"type\": \"INT\",","1834","                  },","1835","                  \"value\": \"1\",","1837","              }","1838","            \/>","1839","            <MeasuresOverlayMeasure","1840","              key=\"skipped_tests\"","1841","              measure={","1842","                Object {","1843","                  \"metric\": Object {","1844","                    \"domain\": \"Tests\",","1845","                    \"key\": \"skipped_tests\",","1846","                    \"type\": \"INT\",","1847","                  },","1848","                  \"value\": \"0\",","1850","              }","1851","            \/>"],"delete":["4","  contentLabel=\"\"","9","    className=\"modal-container source-viewer-measures-modal\"","12","      className=\"source-viewer-header-component source-viewer-measures-component\"","14","      <div","15","        className=\"source-viewer-header-component-project\"","16","      >","43","        className=\"source-viewer-header-component-name display-flex-center little-spacer-top\"","53","      className=\"source-viewer-measures\"","56","        className=\"source-viewer-measures-section\"","59","          className=\"source-viewer-measures-card\"","64","            <div","65","              className=\"measures-list\"","66","            >","67","              <MeasuresOverlayMeasure","68","                key=\"lines\"","69","                measure={","70","                  Object {","71","                    \"metric\": Object {","72","                      \"domain\": \"Size\",","73","                      \"key\": \"lines\",","74","                      \"type\": \"INT\",","75","                    },","76","                    \"value\": \"18\",","77","                  }","79","              \/>","80","              <MeasuresOverlayMeasure","81","                key=\"ncloc\"","82","                measure={","83","                  Object {","84","                    \"metric\": Object {","85","                      \"domain\": \"Size\",","86","                      \"key\": \"ncloc\",","87","                      \"type\": \"INT\",","88","                    },","89","                    \"value\": \"8\",","90","                  }","92","              \/>","93","              <MeasuresOverlayMeasure","94","                key=\"comment_lines\"","95","                measure={","96","                  Object {","97","                    \"metric\": Object {","98","                      \"domain\": \"Size\",","99","                      \"key\": \"comment_lines\",","100","                      \"type\": \"INT\",","101","                    },","102","                    \"value\": \"2\",","103","                  }","105","              \/>","106","              <MeasuresOverlayMeasure","107","                key=\"comment_lines_density\"","108","                measure={","109","                  Object {","110","                    \"metric\": Object {","111","                      \"domain\": \"Size\",","112","                      \"key\": \"comment_lines_density\",","113","                      \"type\": \"PERCENT\",","114","                    },","115","                    \"value\": \"20.0\",","116","                  }","118","              \/>","119","            <\/div>","124","            <div","125","              className=\"measures-list\"","126","            >","127","              <MeasuresOverlayMeasure","128","                key=\"cognitive_complexity\"","129","                measure={","130","                  Object {","131","                    \"metric\": Object {","132","                      \"domain\": \"Complexity\",","133","                      \"key\": \"cognitive_complexity\",","134","                      \"type\": \"INT\",","135","                    },","136","                    \"value\": \"0\",","137","                  }","139","              \/>","140","              <MeasuresOverlayMeasure","141","                key=\"complexity\"","142","                measure={","143","                  Object {","144","                    \"metric\": Object {","145","                      \"domain\": \"Complexity\",","146","                      \"key\": \"complexity\",","147","                      \"type\": \"INT\",","148","                    },","149","                    \"value\": \"1\",","150","                  }","152","              \/>","153","            <\/div>","158","        className=\"source-viewer-measures-section\"","161","          className=\"source-viewer-measures-card\"","209","              className=\"measures-list\"","211","              <div","212","                className=\"measure measure-one-line\"","213","                key=\"BUG\"","215","                <span","216","                  className=\"measure-name\"","217","                >","218","                  <IssueTypeIcon","219","                    className=\"little-spacer-right\"","220","                    query=\"BUG\"","221","                  \/>","222","                  issue.type.BUG","223","                <\/span>","224","                <span","225","                  className=\"measure-value\"","226","                >","227","                  1","228","                <\/span>","229","              <\/div>","230","              <div","231","                className=\"measure measure-one-line\"","232","                key=\"VULNERABILITY\"","234","                <span","235","                  className=\"measure-name\"","236","                >","237","                  <IssueTypeIcon","238","                    className=\"little-spacer-right\"","239","                    query=\"VULNERABILITY\"","240","                  \/>","241","                  issue.type.VULNERABILITY","242","                <\/span>","243","                <span","244","                  className=\"measure-value\"","245","                >","246","                  0","247","                <\/span>","248","              <\/div>","249","              <div","250","                className=\"measure measure-one-line\"","251","                key=\"CODE_SMELL\"","253","                <span","254","                  className=\"measure-name\"","255","                >","256","                  <IssueTypeIcon","257","                    className=\"little-spacer-right\"","258","                    query=\"CODE_SMELL\"","259","                  \/>","260","                  issue.type.CODE_SMELL","261","                <\/span>","262","                <span","263","                  className=\"measure-value\"","264","                >","265","                  2","266","                <\/span>","267","              <\/div>","274","              className=\"measures-list\"","276","              <div","277","                className=\"measure measure-one-line\"","278","                key=\"BLOCKER\"","280","                <span","281","                  className=\"measure-name\"","282","                >","283","                  <SeverityHelper","284","                    severity=\"BLOCKER\"","285","                  \/>","286","                <\/span>","287","                <span","288","                  className=\"measure-value\"","289","                >","290","                  5","291","                <\/span>","292","              <\/div>","293","              <div","294","                className=\"measure measure-one-line\"","295","                key=\"CRITICAL\"","297","                <span","298","                  className=\"measure-name\"","299","                >","300","                  <SeverityHelper","301","                    severity=\"CRITICAL\"","302","                  \/>","303","                <\/span>","304","                <span","305","                  className=\"measure-value\"","306","                >","307","                  4","308","                <\/span>","309","              <\/div>","310","              <div","311","                className=\"measure measure-one-line\"","312","                key=\"MAJOR\"","314","                <span","315","                  className=\"measure-name\"","316","                >","317","                  <SeverityHelper","318","                    severity=\"MAJOR\"","319","                  \/>","320","                <\/span>","321","                <span","322","                  className=\"measure-value\"","323","                >","324","                  1","325","                <\/span>","326","              <\/div>","327","              <div","328","                className=\"measure measure-one-line\"","329","                key=\"MINOR\"","331","                <span","332","                  className=\"measure-name\"","333","                >","334","                  <SeverityHelper","335","                    severity=\"MINOR\"","336","                  \/>","337","                <\/span>","338","                <span","339","                  className=\"measure-value\"","340","                >","341","                  3","342","                <\/span>","343","              <\/div>","344","              <div","345","                className=\"measure measure-one-line\"","346","                key=\"INFO\"","348","                <span","349","                  className=\"measure-name\"","350","                >","351","                  <SeverityHelper","352","                    severity=\"INFO\"","353","                  \/>","354","                <\/span>","355","                <span","356","                  className=\"measure-value\"","357","                >","358","                  2","359","                <\/span>","360","              <\/div>","367","              className=\"measures-list\"","369","              <div","370","                className=\"measure measure-one-line\"","371","                key=\"bad-practice\"","373","                <span","374","                  className=\"measure-name\"","375","                >","376","                  <TagsIcon","377","                    className=\"little-spacer-right\"","378","                  \/>","379","                  bad-practice","380","                <\/span>","381","                <span","382","                  className=\"measure-value\"","383","                >","384","                  1","385","                <\/span>","386","              <\/div>","387","              <div","388","                className=\"measure measure-one-line\"","389","                key=\"cert\"","391","                <span","392","                  className=\"measure-name\"","393","                >","394","                  <TagsIcon","395","                    className=\"little-spacer-right\"","396","                  \/>","397","                  cert","398","                <\/span>","399","                <span","400","                  className=\"measure-value\"","401","                >","402","                  3","403","                <\/span>","404","              <\/div>","405","              <div","406","                className=\"measure measure-one-line\"","407","                key=\"design\"","409","                <span","410","                  className=\"measure-name\"","411","                >","412","                  <TagsIcon","413","                    className=\"little-spacer-right\"","414","                  \/>","415","                  design","416","                <\/span>","417","                <span","418","                  className=\"measure-value\"","419","                >","420","                  1","421","                <\/span>","422","              <\/div>","428","        className=\"source-viewer-measures-section\"","431","          className=\"source-viewer-measures-card\"","467","            <div","468","              className=\"measures-list\"","469","            >","470","              <MeasuresOverlayMeasure","471","                key=\"uncovered_lines\"","472","                measure={","473","                  Object {","474","                    \"metric\": Object {","475","                      \"domain\": \"Coverage\",","476","                      \"key\": \"uncovered_lines\",","477","                      \"type\": \"INT\",","478","                    },","479","                    \"value\": \"1\",","480","                  }","482","              \/>","483","              <MeasuresOverlayMeasure","484","                key=\"lines_to_cover\"","485","                measure={","486","                  Object {","487","                    \"metric\": Object {","488","                      \"domain\": \"Coverage\",","489","                      \"key\": \"lines_to_cover\",","490","                      \"type\": \"INT\",","491","                    },","492","                    \"value\": \"4\",","493","                  }","495","              \/>","496","            <\/div>","501","        className=\"source-viewer-measures-section\"","504","          className=\"source-viewer-measures-card\"","541","            <div","542","              className=\"measures-list\"","543","            >","544","              <MeasuresOverlayMeasure","545","                key=\"duplicated_blocks\"","546","                measure={","547","                  Object {","548","                    \"metric\": Object {","549","                      \"domain\": \"Duplications\",","550","                      \"key\": \"duplicated_blocks\",","551","                      \"type\": \"INT\",","552","                    },","553","                    \"value\": \"3\",","554","                  }","556","              \/>","557","              <MeasuresOverlayMeasure","558","                key=\"duplicated_lines\"","559","                measure={","560","                  Object {","561","                    \"metric\": Object {","562","                      \"domain\": \"Duplications\",","563","                      \"key\": \"duplicated_lines\",","564","                      \"type\": \"INT\",","565","                    },","566","                    \"value\": \"0\",","567","                  }","569","              \/>","570","            <\/div>","601","  contentLabel=\"\"","606","    className=\"modal-container source-viewer-measures-modal\"","609","      className=\"source-viewer-header-component source-viewer-measures-component\"","611","      <div","612","        className=\"source-viewer-header-component-project\"","613","      >","640","        className=\"source-viewer-header-component-name display-flex-center little-spacer-top\"","650","      className=\"source-viewer-measures\"","653","        className=\"source-viewer-measures-section\"","656","          className=\"source-viewer-measures-card\"","661","            <div","662","              className=\"measures-list\"","663","            >","664","              <MeasuresOverlayMeasure","665","                key=\"lines\"","666","                measure={","667","                  Object {","668","                    \"metric\": Object {","669","                      \"domain\": \"Size\",","670","                      \"key\": \"lines\",","671","                      \"type\": \"INT\",","672","                    },","673","                    \"value\": \"18\",","674","                  }","676","              \/>","677","              <MeasuresOverlayMeasure","678","                key=\"ncloc\"","679","                measure={","680","                  Object {","681","                    \"metric\": Object {","682","                      \"domain\": \"Size\",","683","                      \"key\": \"ncloc\",","684","                      \"type\": \"INT\",","685","                    },","686","                    \"value\": \"8\",","687","                  }","689","              \/>","690","              <MeasuresOverlayMeasure","691","                key=\"comment_lines\"","692","                measure={","693","                  Object {","694","                    \"metric\": Object {","695","                      \"domain\": \"Size\",","696","                      \"key\": \"comment_lines\",","697","                      \"type\": \"INT\",","698","                    },","699","                    \"value\": \"2\",","700","                  }","702","              \/>","703","              <MeasuresOverlayMeasure","704","                key=\"comment_lines_density\"","705","                measure={","706","                  Object {","707","                    \"metric\": Object {","708","                      \"domain\": \"Size\",","709","                      \"key\": \"comment_lines_density\",","710","                      \"type\": \"PERCENT\",","711","                    },","712","                    \"value\": \"20.0\",","713","                  }","715","              \/>","716","            <\/div>","721","            <div","722","              className=\"measures-list\"","723","            >","724","              <MeasuresOverlayMeasure","725","                key=\"cognitive_complexity\"","726","                measure={","727","                  Object {","728","                    \"metric\": Object {","729","                      \"domain\": \"Complexity\",","730","                      \"key\": \"cognitive_complexity\",","731","                      \"type\": \"INT\",","732","                    },","733","                    \"value\": \"0\",","734","                  }","736","              \/>","737","              <MeasuresOverlayMeasure","738","                key=\"complexity\"","739","                measure={","740","                  Object {","741","                    \"metric\": Object {","742","                      \"domain\": \"Complexity\",","743","                      \"key\": \"complexity\",","744","                      \"type\": \"INT\",","745","                    },","746","                    \"value\": \"1\",","747","                  }","749","              \/>","750","            <\/div>","755","        className=\"source-viewer-measures-section\"","758","          className=\"source-viewer-measures-card\"","806","              className=\"measures-list\"","808","              <div","809","                className=\"measure measure-one-line\"","810","                key=\"BUG\"","812","                <span","813","                  className=\"measure-name\"","814","                >","815","                  <IssueTypeIcon","816","                    className=\"little-spacer-right\"","817","                    query=\"BUG\"","818","                  \/>","819","                  issue.type.BUG","820","                <\/span>","821","                <span","822","                  className=\"measure-value\"","823","                >","824","                  1","825","                <\/span>","826","              <\/div>","827","              <div","828","                className=\"measure measure-one-line\"","829","                key=\"VULNERABILITY\"","831","                <span","832","                  className=\"measure-name\"","833","                >","834","                  <IssueTypeIcon","835","                    className=\"little-spacer-right\"","836","                    query=\"VULNERABILITY\"","837","                  \/>","838","                  issue.type.VULNERABILITY","839","                <\/span>","840","                <span","841","                  className=\"measure-value\"","842","                >","843","                  0","844","                <\/span>","845","              <\/div>","846","              <div","847","                className=\"measure measure-one-line\"","848","                key=\"CODE_SMELL\"","850","                <span","851","                  className=\"measure-name\"","852","                >","853","                  <IssueTypeIcon","854","                    className=\"little-spacer-right\"","855","                    query=\"CODE_SMELL\"","856","                  \/>","857","                  issue.type.CODE_SMELL","858","                <\/span>","859","                <span","860","                  className=\"measure-value\"","861","                >","862","                  2","863","                <\/span>","864","              <\/div>","871","              className=\"measures-list\"","873","              <div","874","                className=\"measure measure-one-line\"","875","                key=\"BLOCKER\"","877","                <span","878","                  className=\"measure-name\"","879","                >","880","                  <SeverityHelper","881","                    severity=\"BLOCKER\"","882","                  \/>","883","                <\/span>","884","                <span","885","                  className=\"measure-value\"","886","                >","887","                  5","888","                <\/span>","889","              <\/div>","890","              <div","891","                className=\"measure measure-one-line\"","892","                key=\"CRITICAL\"","894","                <span","895","                  className=\"measure-name\"","896","                >","897","                  <SeverityHelper","898","                    severity=\"CRITICAL\"","899","                  \/>","900","                <\/span>","901","                <span","902","                  className=\"measure-value\"","903","                >","904","                  4","905","                <\/span>","906","              <\/div>","907","              <div","908","                className=\"measure measure-one-line\"","909","                key=\"MAJOR\"","911","                <span","912","                  className=\"measure-name\"","913","                >","914","                  <SeverityHelper","915","                    severity=\"MAJOR\"","916","                  \/>","917","                <\/span>","918","                <span","919","                  className=\"measure-value\"","920","                >","921","                  1","922","                <\/span>","923","              <\/div>","924","              <div","925","                className=\"measure measure-one-line\"","926","                key=\"MINOR\"","928","                <span","929","                  className=\"measure-name\"","930","                >","931","                  <SeverityHelper","932","                    severity=\"MINOR\"","933","                  \/>","934","                <\/span>","935","                <span","936","                  className=\"measure-value\"","937","                >","938","                  3","939","                <\/span>","940","              <\/div>","941","              <div","942","                className=\"measure measure-one-line\"","943","                key=\"INFO\"","945","                <span","946","                  className=\"measure-name\"","947","                >","948","                  <SeverityHelper","949","                    severity=\"INFO\"","950","                  \/>","951","                <\/span>","952","                <span","953","                  className=\"measure-value\"","954","                >","955","                  2","956","                <\/span>","957","              <\/div>","964","              className=\"measures-list\"","966","              <div","967","                className=\"measure measure-one-line\"","968","                key=\"bad-practice\"","970","                <span","971","                  className=\"measure-name\"","972","                >","973","                  <TagsIcon","974","                    className=\"little-spacer-right\"","975","                  \/>","976","                  bad-practice","977","                <\/span>","978","                <span","979","                  className=\"measure-value\"","980","                >","981","                  1","982","                <\/span>","983","              <\/div>","984","              <div","985","                className=\"measure measure-one-line\"","986","                key=\"cert\"","988","                <span","989","                  className=\"measure-name\"","990","                >","991","                  <TagsIcon","992","                    className=\"little-spacer-right\"","993","                  \/>","994","                  cert","995","                <\/span>","996","                <span","997","                  className=\"measure-value\"","998","                >","999","                  3","1000","                <\/span>","1001","              <\/div>","1002","              <div","1003","                className=\"measure measure-one-line\"","1004","                key=\"design\"","1006","                <span","1007","                  className=\"measure-name\"","1008","                >","1009","                  <TagsIcon","1010","                    className=\"little-spacer-right\"","1011","                  \/>","1012","                  design","1013","                <\/span>","1014","                <span","1015","                  className=\"measure-value\"","1016","                >","1017","                  1","1018","                <\/span>","1019","              <\/div>","1025","        className=\"source-viewer-measures-section\"","1028","          className=\"source-viewer-measures-card\"","1064","            <div","1065","              className=\"measures-list\"","1066","            >","1067","              <MeasuresOverlayMeasure","1068","                key=\"uncovered_lines\"","1069","                measure={","1070","                  Object {","1071","                    \"metric\": Object {","1072","                      \"domain\": \"Coverage\",","1073","                      \"key\": \"uncovered_lines\",","1074","                      \"type\": \"INT\",","1075","                    },","1076","                    \"value\": \"1\",","1077","                  }","1079","              \/>","1080","              <MeasuresOverlayMeasure","1081","                key=\"lines_to_cover\"","1082","                measure={","1083","                  Object {","1084","                    \"metric\": Object {","1085","                      \"domain\": \"Coverage\",","1086","                      \"key\": \"lines_to_cover\",","1087","                      \"type\": \"INT\",","1088","                    },","1089","                    \"value\": \"4\",","1090","                  }","1092","              \/>","1093","            <\/div>","1098","        className=\"source-viewer-measures-section\"","1101","          className=\"source-viewer-measures-card\"","1139","              className=\"measures-list\"","1167","            <\/div>","1168","          <\/div>","1169","        <\/div>","1170","      <\/div>","1171","    <\/div>","1172","    <div","1173","      className=\"spacer-top\"","1174","    >","1175","      <div","1176","        className=\"source-viewer-measures source-viewer-measures-secondary js-all-measures\"","1177","      >","1178","        <div","1179","          className=\"source-viewer-measures-section source-viewer-measures-section-big\"","1180","        >","1181","          <div","1182","            className=\"source-viewer-measures-card\"","1183","            key=\"Complexity\"","1184","          >","1185","            <div","1186","              className=\"measures\"","1187","            >","1188","              <div","1189","                className=\"measures-list\"","1190","              >","1191","                <div","1192","                  className=\"measure measure-one-line measure-big\"","1193","                >","1194","                  <span","1195","                    className=\"measure-name\"","1196","                  >","1197","                    Complexity","1198","                  <\/span>","1199","                <\/div>","1200","                <MeasuresOverlayMeasure","1201","                  key=\"cognitive_complexity\"","1202","                  measure={","1203","                    Object {","1204","                      \"metric\": Object {","1205","                        \"domain\": \"Complexity\",","1206","                        \"key\": \"cognitive_complexity\",","1207","                        \"type\": \"INT\",","1208","                      },","1209","                      \"value\": \"0\",","1210","                    }","1212","                \/>","1213","                <MeasuresOverlayMeasure","1214","                  key=\"complexity\"","1215","                  measure={","1216","                    Object {","1217","                      \"metric\": Object {","1218","                        \"domain\": \"Complexity\",","1219","                        \"key\": \"complexity\",","1220","                        \"type\": \"INT\",","1221","                      },","1222","                      \"value\": \"1\",","1223","                    }","1224","                  }","1225","                \/>","1226","              <\/div>","1230","            className=\"source-viewer-measures-card\"","1231","            key=\"Size\"","1232","          >","1233","            <div","1234","              className=\"measures\"","1235","            >","1236","              <div","1237","                className=\"measures-list\"","1238","              >","1239","                <div","1240","                  className=\"measure measure-one-line measure-big\"","1241","                >","1242","                  <span","1243","                    className=\"measure-name\"","1244","                  >","1245","                    Size","1246","                  <\/span>","1247","                <\/div>","1248","                <MeasuresOverlayMeasure","1249","                  key=\"classes\"","1250","                  measure={","1251","                    Object {","1252","                      \"metric\": Object {","1253","                        \"domain\": \"Size\",","1254","                        \"key\": \"classes\",","1255","                        \"type\": \"INT\",","1256","                      },","1257","                      \"value\": \"1\",","1258","                    }","1259","                  }","1260","                \/>","1261","                <MeasuresOverlayMeasure","1262","                  key=\"comment_lines\"","1263","                  measure={","1264","                    Object {","1265","                      \"metric\": Object {","1266","                        \"domain\": \"Size\",","1267","                        \"key\": \"comment_lines\",","1268","                        \"type\": \"INT\",","1269","                      },","1270","                      \"value\": \"2\",","1271","                    }","1272","                  }","1273","                \/>","1274","                <MeasuresOverlayMeasure","1275","                  key=\"comment_lines_density\"","1276","                  measure={","1277","                    Object {","1278","                      \"metric\": Object {","1279","                        \"domain\": \"Size\",","1280","                        \"key\": \"comment_lines_density\",","1281","                        \"type\": \"PERCENT\",","1282","                      },","1283","                      \"value\": \"20.0\",","1284","                    }","1285","                  }","1286","                \/>","1287","                <MeasuresOverlayMeasure","1288","                  key=\"files\"","1289","                  measure={","1290","                    Object {","1291","                      \"metric\": Object {","1292","                        \"domain\": \"Size\",","1293","                        \"key\": \"files\",","1294","                        \"type\": \"INT\",","1295","                      },","1296","                      \"value\": \"1\",","1297","                    }","1298","                  }","1299","                \/>","1300","                <MeasuresOverlayMeasure","1301","                  key=\"functions\"","1302","                  measure={","1303","                    Object {","1304","                      \"metric\": Object {","1305","                        \"domain\": \"Size\",","1306","                        \"key\": \"functions\",","1307","                        \"type\": \"INT\",","1308","                      },","1309","                      \"value\": \"1\",","1310","                    }","1311","                  }","1312","                \/>","1313","                <MeasuresOverlayMeasure","1314","                  key=\"lines\"","1315","                  measure={","1316","                    Object {","1317","                      \"metric\": Object {","1318","                        \"domain\": \"Size\",","1319","                        \"key\": \"lines\",","1320","                        \"type\": \"INT\",","1321","                      },","1322","                      \"value\": \"18\",","1323","                    }","1324","                  }","1325","                \/>","1326","                <MeasuresOverlayMeasure","1327","                  key=\"ncloc\"","1328","                  measure={","1329","                    Object {","1330","                      \"metric\": Object {","1331","                        \"domain\": \"Size\",","1332","                        \"key\": \"ncloc\",","1333","                        \"type\": \"INT\",","1334","                      },","1335","                      \"value\": \"8\",","1336","                    }","1337","                  }","1338","                \/>","1339","                <MeasuresOverlayMeasure","1340","                  key=\"statements\"","1341","                  measure={","1342","                    Object {","1343","                      \"metric\": Object {","1344","                        \"domain\": \"Size\",","1345","                        \"key\": \"statements\",","1346","                        \"type\": \"INT\",","1347","                      },","1348","                      \"value\": \"3\",","1349","                    }","1350","                  }","1351","                \/>","1352","              <\/div>","1353","            <\/div>","1354","          <\/div>","1355","          <div","1356","            className=\"source-viewer-measures-card\"","1357","            key=\"Coverage\"","1358","          >","1359","            <div","1360","              className=\"measures\"","1361","            >","1362","              <div","1363","                className=\"measures-list\"","1364","              >","1365","                <div","1366","                  className=\"measure measure-one-line measure-big\"","1367","                >","1368","                  <span","1369","                    className=\"measure-name\"","1370","                  >","1371","                    Coverage","1372","                  <\/span>","1373","                <\/div>","1374","                <MeasuresOverlayMeasure","1375","                  key=\"coverage\"","1376","                  measure={","1377","                    Object {","1378","                      \"metric\": Object {","1379","                        \"domain\": \"Coverage\",","1380","                        \"key\": \"coverage\",","1381","                        \"type\": \"PERCENT\",","1382","                      },","1383","                      \"value\": \"75.0\",","1384","                    }","1385","                  }","1386","                \/>","1387","                <MeasuresOverlayMeasure","1388","                  key=\"line_coverage\"","1389","                  measure={","1390","                    Object {","1391","                      \"metric\": Object {","1392","                        \"domain\": \"Coverage\",","1393","                        \"key\": \"line_coverage\",","1394","                        \"type\": \"PERCENT\",","1395","                      },","1396","                      \"value\": \"75.0\",","1397","                    }","1398","                  }","1399","                \/>","1400","                <MeasuresOverlayMeasure","1401","                  key=\"lines_to_cover\"","1402","                  measure={","1403","                    Object {","1404","                      \"metric\": Object {","1405","                        \"domain\": \"Coverage\",","1406","                        \"key\": \"lines_to_cover\",","1407","                        \"type\": \"INT\",","1408","                      },","1409","                      \"value\": \"4\",","1410","                    }","1411","                  }","1412","                \/>","1413","                <MeasuresOverlayMeasure","1414","                  key=\"uncovered_lines\"","1415","                  measure={","1416","                    Object {","1417","                      \"metric\": Object {","1418","                        \"domain\": \"Coverage\",","1419","                        \"key\": \"uncovered_lines\",","1420","                        \"type\": \"INT\",","1421","                      },","1422","                      \"value\": \"1\",","1423","                    }","1424","                  }","1425","                \/>","1426","              <\/div>","1427","            <\/div>","1428","          <\/div>","1429","          <div","1430","            className=\"source-viewer-measures-card\"","1431","            key=\"Reliability\"","1432","          >","1433","            <div","1434","              className=\"measures\"","1435","            >","1436","              <div","1437","                className=\"measures-list\"","1438","              >","1439","                <div","1440","                  className=\"measure measure-one-line measure-big\"","1441","                >","1442","                  <span","1443","                    className=\"measure-name\"","1444","                  >","1445","                    Reliability","1446","                  <\/span>","1447","                <\/div>","1448","                <MeasuresOverlayMeasure","1449","                  key=\"bugs\"","1450","                  measure={","1451","                    Object {","1452","                      \"metric\": Object {","1453","                        \"domain\": \"Reliability\",","1454","                        \"key\": \"bugs\",","1455","                        \"type\": \"INT\",","1456","                      },","1457","                      \"value\": \"0\",","1458","                    }","1459","                  }","1460","                \/>","1461","                <MeasuresOverlayMeasure","1462","                  key=\"reliability_rating\"","1463","                  measure={","1464","                    Object {","1465","                      \"metric\": Object {","1466","                        \"domain\": \"Reliability\",","1467","                        \"key\": \"reliability_rating\",","1468","                        \"type\": \"RATING\",","1469","                      },","1470","                      \"value\": \"1.0\",","1471","                    }","1472","                  }","1473","                \/>","1474","              <\/div>","1475","            <\/div>","1476","          <\/div>","1477","        <\/div>","1478","        <div","1479","          className=\"source-viewer-measures-section source-viewer-measures-section-big\"","1480","        >","1481","          <div","1482","            className=\"source-viewer-measures-card\"","1483","            key=\"Security\"","1484","          >","1485","            <div","1486","              className=\"measures\"","1487","            >","1488","              <div","1489","                className=\"measures-list\"","1490","              >","1491","                <div","1492","                  className=\"measure measure-one-line measure-big\"","1493","                >","1494","                  <span","1495","                    className=\"measure-name\"","1496","                  >","1497","                    Security","1498","                  <\/span>","1499","                <\/div>","1500","                <MeasuresOverlayMeasure","1501","                  key=\"security_rating\"","1502","                  measure={","1503","                    Object {","1504","                      \"metric\": Object {","1505","                        \"domain\": \"Security\",","1506","                        \"key\": \"security_rating\",","1507","                        \"type\": \"RATING\",","1508","                      },","1509","                      \"value\": \"1.0\",","1510","                    }","1511","                  }","1512","                \/>","1513","                <MeasuresOverlayMeasure","1514","                  key=\"vulnerabilities\"","1515","                  measure={","1516","                    Object {","1517","                      \"metric\": Object {","1518","                        \"domain\": \"Security\",","1519","                        \"key\": \"vulnerabilities\",","1520","                        \"type\": \"INT\",","1521","                      },","1522","                      \"value\": \"0\",","1523","                    }","1524","                  }","1525","                \/>","1526","              <\/div>","1527","            <\/div>","1528","          <\/div>","1529","          <div","1530","            className=\"source-viewer-measures-card\"","1531","            key=\"Tests\"","1532","          >","1533","            <div","1534","              className=\"measures\"","1535","            >","1536","              <div","1537","                className=\"measures-list\"","1538","              >","1539","                <div","1540","                  className=\"measure measure-one-line measure-big\"","1541","                >","1542","                  <span","1543","                    className=\"measure-name\"","1544","                  >","1545","                    Tests","1546","                  <\/span>","1547","                <\/div>","1548","                <MeasuresOverlayMeasure","1549","                  key=\"skipped_tests\"","1550","                  measure={","1551","                    Object {","1552","                      \"metric\": Object {","1553","                        \"domain\": \"Tests\",","1554","                        \"key\": \"skipped_tests\",","1555","                        \"type\": \"INT\",","1556","                      },","1557","                      \"value\": \"0\",","1558","                    }","1559","                  }","1560","                \/>","1561","                <MeasuresOverlayMeasure","1562","                  key=\"test_errors\"","1563","                  measure={","1564","                    Object {","1565","                      \"metric\": Object {","1566","                        \"domain\": \"Tests\",","1567","                        \"key\": \"test_errors\",","1568","                        \"type\": \"INT\",","1569","                      },","1570","                      \"value\": \"1\",","1571","                    }","1572","                  }","1573","                \/>","1574","                <MeasuresOverlayMeasure","1575","                  key=\"test_failures\"","1576","                  measure={","1577","                    Object {","1578","                      \"metric\": Object {","1579","                        \"domain\": \"Tests\",","1580","                        \"key\": \"test_failures\",","1581","                        \"type\": \"INT\",","1582","                      },","1583","                      \"value\": \"0\",","1584","                    }","1585","                  }","1586","                \/>","1587","                <MeasuresOverlayMeasure","1588","                  key=\"test_success_density\"","1589","                  measure={","1590","                    Object {","1591","                      \"metric\": Object {","1592","                        \"domain\": \"Tests\",","1593","                        \"key\": \"test_success_density\",","1594","                        \"type\": \"PERCENT\",","1595","                      },","1596","                      \"value\": \"100.0\",","1597","                    }","1598","                  }","1599","                \/>","1600","              <\/div>","1601","            <\/div>","1602","          <\/div>","1603","          <div","1604","            className=\"source-viewer-measures-card\"","1605","            key=\"Issues\"","1606","          >","1607","            <div","1608","              className=\"measures\"","1609","            >","1610","              <div","1611","                className=\"measures-list\"","1612","              >","1613","                <div","1614","                  className=\"measure measure-one-line measure-big\"","1615","                >","1616","                  <span","1617","                    className=\"measure-name\"","1618","                  >","1619","                    Issues","1620","                  <\/span>","1621","                <\/div>","1622","                <MeasuresOverlayMeasure","1623","                  key=\"false_positive_issues\"","1624","                  measure={","1625","                    Object {","1626","                      \"metric\": Object {","1627","                        \"domain\": \"Issues\",","1628","                        \"key\": \"false_positive_issues\",","1629","                        \"type\": \"INT\",","1630","                      },","1631","                      \"value\": \"0\",","1632","                    }","1633","                  }","1634","                \/>","1635","                <MeasuresOverlayMeasure","1636","                  key=\"violations\"","1637","                  measure={","1638","                    Object {","1639","                      \"metric\": Object {","1640","                        \"domain\": \"Issues\",","1641","                        \"key\": \"violations\",","1642","                        \"type\": \"INT\",","1643","                      },","1644","                      \"value\": \"1\",","1645","                    }","1646","                  }","1647","                \/>","1648","                <MeasuresOverlayMeasure","1649","                  key=\"wont_fix_issues\"","1650","                  measure={","1651","                    Object {","1652","                      \"metric\": Object {","1653","                        \"domain\": \"Issues\",","1654","                        \"key\": \"wont_fix_issues\",","1655","                        \"type\": \"INT\",","1656","                      },","1657","                      \"value\": \"0\",","1658","                    }","1659","                  }","1660","                \/>","1661","              <\/div>","1662","            <\/div>","1663","          <\/div>","1664","          <div","1665","            className=\"source-viewer-measures-card\"","1666","            key=\"Duplications\"","1667","          >","1668","            <div","1669","              className=\"measures\"","1670","            >","1671","              <div","1672","                className=\"measures-list\"","1673","              >","1674","                <div","1675","                  className=\"measure measure-one-line measure-big\"","1676","                >","1677","                  <span","1678","                    className=\"measure-name\"","1679","                  >","1680","                    Duplications","1681","                  <\/span>","1682","                <\/div>","1683","                <MeasuresOverlayMeasure","1684","                  key=\"duplicated_blocks\"","1685","                  measure={","1686","                    Object {","1687","                      \"metric\": Object {","1688","                        \"domain\": \"Duplications\",","1689","                        \"key\": \"duplicated_blocks\",","1690","                        \"type\": \"INT\",","1691","                      },","1692","                      \"value\": \"3\",","1693","                    }","1694","                  }","1695","                \/>","1696","                <MeasuresOverlayMeasure","1697","                  key=\"duplicated_files\"","1698","                  measure={","1699","                    Object {","1700","                      \"metric\": Object {","1701","                        \"domain\": \"Duplications\",","1702","                        \"key\": \"duplicated_files\",","1703","                        \"type\": \"INT\",","1704","                      },","1705","                      \"value\": \"1\",","1706","                    }","1707","                  }","1708","                \/>","1709","                <MeasuresOverlayMeasure","1710","                  key=\"duplicated_lines\"","1711","                  measure={","1712","                    Object {","1713","                      \"metric\": Object {","1714","                        \"domain\": \"Duplications\",","1715","                        \"key\": \"duplicated_lines\",","1716","                        \"type\": \"INT\",","1717","                      },","1718","                      \"value\": \"0\",","1719","                    }","1720","                  }","1721","                \/>","1722","                <MeasuresOverlayMeasure","1723","                  key=\"duplicated_lines_density\"","1724","                  measure={","1725","                    Object {","1726","                      \"metric\": Object {","1727","                        \"domain\": \"Duplications\",","1728","                        \"key\": \"duplicated_lines_density\",","1729","                        \"type\": \"PERCENT\",","1730","                      },","1731","                      \"value\": \"0.0\",","1732","                    }","1733","                  }","1734","                \/>","1735","              <\/div>","1736","            <\/div>","1737","          <\/div>","1738","          <div","1739","            className=\"source-viewer-measures-card\"","1746","                className=\"measures-list\"","1748","                <div","1749","                  className=\"measure measure-one-line measure-big\"","1751","                  <span","1752","                    className=\"measure-name\"","1753","                  >","1754","                    Maintainability","1755","                  <\/span>","1756","                <\/div>","1757","                <MeasuresOverlayMeasure","1758","                  key=\"code_smells\"","1759","                  measure={","1760","                    Object {","1761","                      \"metric\": Object {","1762","                        \"domain\": \"Maintainability\",","1763","                        \"key\": \"code_smells\",","1764","                        \"type\": \"INT\",","1765","                      },","1766","                      \"value\": \"2\",","1767","                    }","1768","                  }","1769","                \/>","1770","                <MeasuresOverlayMeasure","1771","                  key=\"sqale_debt_ratio\"","1772","                  measure={","1773","                    Object {","1774","                      \"metric\": Object {","1775","                        \"domain\": \"Maintainability\",","1776","                        \"key\": \"sqale_debt_ratio\",","1777","                        \"type\": \"PERCENT\",","1778","                      },","1779","                      \"value\": \"16.7\",","1780","                    }","1781","                  }","1782","                \/>","1783","                <MeasuresOverlayMeasure","1784","                  key=\"sqale_index\"","1785","                  measure={","1786","                    Object {","1787","                      \"metric\": Object {","1788","                        \"domain\": \"Maintainability\",","1789","                        \"key\": \"sqale_index\",","1790","                        \"type\": \"WORK_DUR\",","1791","                      },","1792","                      \"value\": \"40\",","1793","                    }","1794","                  }","1795","                \/>","1817","  contentLabel=\"\"","1822","    className=\"modal-container source-viewer-measures-modal\"","1825","      className=\"source-viewer-header-component source-viewer-measures-component\"","1827","      <div","1828","        className=\"source-viewer-header-component-project\"","1829","      >","1856","        className=\"source-viewer-header-component-name display-flex-center little-spacer-top\"","1866","      className=\"source-viewer-measures\"","1869","        className=\"source-viewer-measures-section\"","1872","          className=\"source-viewer-measures-card\"","1877","            <div","1878","              className=\"measures-list\"","1879","            >","1880","              <MeasuresOverlayMeasure","1881","                key=\"test_success_density\"","1882","                measure={","1883","                  Object {","1884","                    \"metric\": Object {","1885","                      \"domain\": \"Tests\",","1886","                      \"key\": \"test_success_density\",","1887","                      \"type\": \"PERCENT\",","1888","                    },","1889","                    \"value\": \"100.0\",","1890","                  }","1892","              \/>","1893","              <MeasuresOverlayMeasure","1894","                key=\"test_failures\"","1895","                measure={","1896","                  Object {","1897","                    \"metric\": Object {","1898","                      \"domain\": \"Tests\",","1899","                      \"key\": \"test_failures\",","1900","                      \"type\": \"INT\",","1901","                    },","1902","                    \"value\": \"0\",","1903","                  }","1905","              \/>","1906","              <MeasuresOverlayMeasure","1907","                key=\"test_errors\"","1908","                measure={","1909","                  Object {","1910","                    \"metric\": Object {","1911","                      \"domain\": \"Tests\",","1912","                      \"key\": \"test_errors\",","1913","                      \"type\": \"INT\",","1914","                    },","1915","                    \"value\": \"1\",","1916","                  }","1918","              \/>","1919","              <MeasuresOverlayMeasure","1920","                key=\"skipped_tests\"","1921","                measure={","1922","                  Object {","1923","                    \"metric\": Object {","1924","                      \"domain\": \"Tests\",","1925","                      \"key\": \"skipped_tests\",","1926","                      \"type\": \"INT\",","1927","                    },","1928","                    \"value\": \"0\",","1929","                  }","1931","              \/>","1932","            <\/div>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2272","component_viewer.file_measures=File measures"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/MeasuresOverlay.tsx":[{"add":["141","      <div className=\"measures-viewer-section\">","142","        <div className=\"measures-viewer-card\">","144","            {this.renderMeasure(measures.lines)}","145","            {this.renderMeasure(measures.ncloc)}","146","            {this.renderMeasure(measures.comment_lines)}","147","            {this.renderMeasure(measures.comment_lines_density)}","151","            {this.renderMeasure(measures.cognitive_complexity)}","152","            {this.renderMeasure(measures.complexity)}","153","            {this.renderMeasure(measures.function_complexity)}","178","      <div className=\"measures-viewer-section\">","179","        <div className=\"measures-viewer-card\">","188","                  {sortBy(typesFacet, f => ISSUE_TYPES.indexOf(f.val)).map(f => (","189","                    <div className=\"measure measure-one-line\" key={f.val}>","190","                      <span className=\"measure-name\">","191","                        <IssueTypeIcon className=\"little-spacer-right\" query={f.val} \/>","192","                        {translate('issue.type', f.val)}","193","                      <\/span>","194","                      <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","195","                    <\/div>","196","                  ))}","201","                  {sortBy(severitiesFacet, f => SEVERITIES.indexOf(f.val)).map(f => (","202","                    <div className=\"measure measure-one-line\" key={f.val}>","203","                      <span className=\"measure-name\">","204","                        <SeverityHelper severity={f.val} \/>","205","                      <\/span>","206","                      <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","207","                    <\/div>","208","                  ))}","213","                  {tagsFacet.map(f => (","214","                    <div className=\"measure measure-one-line\" key={f.val}>","215","                      <span className=\"measure-name\">","216","                        <TagsIcon className=\"little-spacer-right\" \/>","217","                        {f.val}","218","                      <\/span>","219","                      <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","220","                    <\/div>","221","                  ))}","237","      <div className=\"measures-viewer-section\">","238","        <div className=\"measures-viewer-card\">","256","            {this.renderMeasure(this.state.measures.uncovered_lines)}","257","            {this.renderMeasure(this.state.measures.lines_to_cover)}","258","            {this.renderMeasure(this.state.measures.uncovered_conditions)}","259","            {this.renderMeasure(this.state.measures.conditions_to_cover)}","272","      <div className=\"measures-viewer-section\">","273","        <div className=\"measures-viewer-card\">","297","            {this.renderMeasure(this.state.measures.duplicated_blocks)}","298","            {this.renderMeasure(this.state.measures.duplicated_lines)}","308","      <div className=\"measures-viewer\">","309","        <div className=\"measures-viewer-section measures-viewer-section-limited\">","310","          <div className=\"measures-viewer-card\">","312","              {this.renderMeasure(measures.tests)}","313","              {this.renderMeasure(measures.test_success_density)}","314","              {this.renderMeasure(measures.test_failures)}","315","              {this.renderMeasure(measures.test_errors)}","316","              {this.renderMeasure(measures.skipped_tests)}","317","              {this.renderMeasure(measures.test_execution_time)}","327","      <div className=\"measures-viewer-card\" key={domain}>","329","          <div className=\"measure measure-big\">","330","            <span className=\"measure-name\">{domain}<\/span>","332","          {sortBy(measures.filter(measure => measure.value !== undefined), measure =>","333","            getLocalizedMetricName(measure.metric)","334","          ).map(measure => this.renderMeasure(measure))}","346","      <div className=\"measures-viewer measures-viewer-secondary\">","347","        <div className=\"measures-viewer-section\">","350","        <div className=\"measures-viewer-section\">","361","    const header = translate('component_viewer.file_measures');","363","      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"large\">","364","        <div className=\"modal-head\">","365","          <h2>{header}<\/h2>","366","        <\/div>","367","        <div className=\"modal-body modal-container\">","368","          <div className=\"measures-viewer-header big-spacer-bottom\">","369","            <div>","383","            <div className=\"display-flex-center little-spacer-top\">","396","                <div className=\"measures-viewer\">"],"delete":["141","      <div className=\"source-viewer-measures-section\">","142","        <div className=\"source-viewer-measures-card\">","144","            <div className=\"measures-list\">","145","              {this.renderMeasure(measures.lines)}","146","              {this.renderMeasure(measures.ncloc)}","147","              {this.renderMeasure(measures.comment_lines)}","148","              {this.renderMeasure(measures.comment_lines_density)}","149","            <\/div>","153","            <div className=\"measures-list\">","154","              {this.renderMeasure(measures.cognitive_complexity)}","155","              {this.renderMeasure(measures.complexity)}","156","              {this.renderMeasure(measures.function_complexity)}","157","            <\/div>","182","      <div className=\"source-viewer-measures-section\">","183","        <div className=\"source-viewer-measures-card\">","192","                  <div className=\"measures-list\">","193","                    {sortBy(typesFacet, f => ISSUE_TYPES.indexOf(f.val)).map(f => (","194","                      <div className=\"measure measure-one-line\" key={f.val}>","195","                        <span className=\"measure-name\">","196","                          <IssueTypeIcon className=\"little-spacer-right\" query={f.val} \/>","197","                          {translate('issue.type', f.val)}","198","                        <\/span>","199","                        <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","200","                      <\/div>","201","                    ))}","202","                  <\/div>","207","                  <div className=\"measures-list\">","208","                    {sortBy(severitiesFacet, f => SEVERITIES.indexOf(f.val)).map(f => (","209","                      <div className=\"measure measure-one-line\" key={f.val}>","210","                        <span className=\"measure-name\">","211","                          <SeverityHelper severity={f.val} \/>","212","                        <\/span>","213","                        <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","214","                      <\/div>","215","                    ))}","216","                  <\/div>","221","                  <div className=\"measures-list\">","222","                    {tagsFacet.map(f => (","223","                      <div className=\"measure measure-one-line\" key={f.val}>","224","                        <span className=\"measure-name\">","225","                          <TagsIcon className=\"little-spacer-right\" \/>","226","                          {f.val}","227","                        <\/span>","228","                        <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","229","                      <\/div>","230","                    ))}","231","                  <\/div>","247","      <div className=\"source-viewer-measures-section\">","248","        <div className=\"source-viewer-measures-card\">","266","            <div className=\"measures-list\">","267","              {this.renderMeasure(this.state.measures.uncovered_lines)}","268","              {this.renderMeasure(this.state.measures.lines_to_cover)}","269","              {this.renderMeasure(this.state.measures.uncovered_conditions)}","270","              {this.renderMeasure(this.state.measures.conditions_to_cover)}","271","            <\/div>","284","      <div className=\"source-viewer-measures-section\">","285","        <div className=\"source-viewer-measures-card\">","309","            <div className=\"measures-list\">","310","              {this.renderMeasure(this.state.measures.duplicated_blocks)}","311","              {this.renderMeasure(this.state.measures.duplicated_lines)}","312","            <\/div>","322","      <div className=\"source-viewer-measures\">","323","        <div className=\"source-viewer-measures-section\">","324","          <div className=\"source-viewer-measures-card\">","326","              <div className=\"measures-list\">","327","                {this.renderMeasure(measures.tests)}","328","                {this.renderMeasure(measures.test_success_density)}","329","                {this.renderMeasure(measures.test_failures)}","330","                {this.renderMeasure(measures.test_errors)}","331","                {this.renderMeasure(measures.skipped_tests)}","332","                {this.renderMeasure(measures.test_execution_time)}","333","              <\/div>","343","      <div className=\"source-viewer-measures-card\" key={domain}>","345","          <div className=\"measures-list\">","346","            <div className=\"measure measure-one-line measure-big\">","347","              <span className=\"measure-name\">{domain}<\/span>","348","            <\/div>","349","            {sortBy(measures.filter(measure => measure.value !== undefined), measure =>","350","              getLocalizedMetricName(measure.metric)","351","            ).map(measure => this.renderMeasure(measure))}","364","      <div className=\"source-viewer-measures source-viewer-measures-secondary js-all-measures\">","365","        <div className=\"source-viewer-measures-section source-viewer-measures-section-big\">","368","        <div className=\"source-viewer-measures-section source-viewer-measures-section-big\">","380","      <Modal contentLabel=\"\" onRequestClose={this.props.onClose} size=\"large\">","381","        <div className=\"modal-container source-viewer-measures-modal\">","382","          <div className=\"source-viewer-header-component source-viewer-measures-component\">","383","            <div className=\"source-viewer-header-component-project\">","397","            <div className=\"source-viewer-header-component-name display-flex-center little-spacer-top\">","410","                <div className=\"source-viewer-measures\">"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeader-test.tsx.snap":[{"add":["7","    className=\"flex-1 little-spacer-top\"","127","    className=\"flex-1 little-spacer-top\"","265","    className=\"flex-1 little-spacer-top\""],"delete":["7","    className=\"source-viewer-header-component flex-1\"","127","    className=\"source-viewer-header-component flex-1\"","265","    className=\"source-viewer-header-component flex-1\""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.tsx":[{"add":["126","        <div className=\"flex-1 little-spacer-top\">"],"delete":["126","        <div className=\"source-viewer-header-component flex-1\">"]}]}},"d5d5fbb4cd90b6c6419bd2940281fd1fd6e29d93":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest\/ce_tables.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphans.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":[{"add":["35","      .add(2006, \"Clean orphans in Compute Engine child tables\", CleanCeChildTablesOrphans.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest\/ce_tables.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphans.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":[{"add":["38","    verifyMigrationCount(underTest, 7);"],"delete":["38","    verifyMigrationCount(underTest, 6);"]}]}},"5493e3f33006b780fbc55a64cb58727245ab953b":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutor.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutorTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutor.java":[{"add":["34","import org.sonar.api.utils.log.Logger;","35","import org.sonar.api.utils.log.Loggers;","57","  private static final Logger LOG = Loggers.get(PostProjectAnalysisTasksExecutor.class);","58","","99","      executeTask(projectAnalysis, postProjectAnalysisTask);","100","    }","101","  }","102","","103","  private static void executeTask(ProjectAnalysis projectAnalysis, PostProjectAnalysisTask postProjectAnalysisTask) {","104","    try {","106","    } catch (Exception e) {","107","      LOG.error(\"Execution of task \" + postProjectAnalysisTask.getClass() + \" failed\", e);"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutorTest.java":[{"add":["52","import static org.mockito.Matchers.any;","53","import static org.mockito.Mockito.doThrow;","238","  @Test","239","  @UseDataProvider(\"booleanValues\")","240","  public void finished_does_not_fail_if_listener_throws_exception_and_execute_subsequent_listeners(boolean allStepsExecuted) {","241","    PostProjectAnalysisTask postProjectAnalysisTask1 = mock(PostProjectAnalysisTask.class);","242","    PostProjectAnalysisTask postProjectAnalysisTask2 = mock(PostProjectAnalysisTask.class);","243","    PostProjectAnalysisTask postProjectAnalysisTask3 = mock(PostProjectAnalysisTask.class);","244","    InOrder inOrder = inOrder(postProjectAnalysisTask1, postProjectAnalysisTask2, postProjectAnalysisTask3);","245","","246","    doThrow(new RuntimeException(\"Faking a listener throws an exception\"))","247","        .when(postProjectAnalysisTask2)","248","        .finished(any(PostProjectAnalysisTask.ProjectAnalysis.class));","249","","250","    new PostProjectAnalysisTasksExecutor(","251","        ceTask, analysisMetadataHolder, qualityGateHolder, qualityGateStatusHolder, reportReader,","252","        system2, new PostProjectAnalysisTask[] {postProjectAnalysisTask1, postProjectAnalysisTask2, postProjectAnalysisTask3})","253","        .finished(allStepsExecuted);","254","","255","    inOrder.verify(postProjectAnalysisTask1).finished(projectAnalysisArgumentCaptor.capture());","256","    inOrder.verify(postProjectAnalysisTask2).finished(projectAnalysisArgumentCaptor.capture());","257","    inOrder.verify(postProjectAnalysisTask3).finished(projectAnalysisArgumentCaptor.capture());","258","    inOrder.verifyNoMoreInteractions();","259","  }","260",""],"delete":[]}]}},"eb17d0d2279c9d125f494525bfa4c4ab3692a0e1":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/FavoriteBase.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/FavoriteBase.tsx":[{"add":["50","    if (nextProps.favorite !== this.props.favorite || nextProps.favorite !== this.state.favorite) {"],"delete":["50","    if (nextProps.favorite !== this.props.favorite && nextProps.favorite !== this.state.favorite) {"]}]}},"91f37bb55b79523a00ab02f5b180c9a3b12a5b9a":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueMapper.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueDao.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueMapper.java":[{"add":["70","  List<QueueCount> countByStatusAndMainComponentUuids(@Param(\"status\") CeQueueDto.Status status, @Param(\"mainComponentUuids\") List<String> mainComponentUuids);"],"delete":["22","import java.util.Set;","71","  List<QueueCount> countByStatusAndMainComponentUuids(@Param(\"status\") CeQueueDto.Status status, @Param(\"mainComponentUuids\") Set<String> mainComponentUuids);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueDao.java":[{"add":["158","      partitionOfProjectUuids -> {","159","        List<QueueCount> i = mapper(dbSession).countByStatusAndMainComponentUuids(status, partitionOfProjectUuids);"],"delete":["158","      uuids -> {","159","        List<QueueCount> i = mapper(dbSession).countByStatusAndMainComponentUuids(status, projectUuids);"]}]}},"6c9938e19c97a44e8cec9a33fa6f9b0acbc7609a":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/ProjectFileIndexer.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/ProjectFileIndexer.java":[{"add":["41","import org.sonar.api.batch.fs.internal.DefaultInputModule;","165","      for (Iterator<Path> it = paths.iterator(); it.hasNext();) {","284","      return excludedByPatternsCount.get();","288","      excludedByScmCount.incrementAndGet();"],"delete":["47","import org.sonar.api.batch.fs.internal.DefaultInputModule;","165","      for (Iterator<Path> it = paths.iterator(); it.hasNext(); ) {","284","      return excludedByScmCount.get();","288","      excludedByPatternsCount.incrementAndGet();"]}]}},"3f20a128d9068f85965a63f4e5e28f0b6f17c230":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/941_alter_issues_char_columns_on_mssql.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/941_alter_issues_char_columns_on_mssql.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 941;"],"delete":["31","  public static final int LAST_VERSION = 940;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["361","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('941');"],"delete":[]}]}},"6794de31803c2fcbb420f46c21030c94ae169ab4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRules.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfilePermissions-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileDetails.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritance.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfilePermissions-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileDetails-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfilePermissions.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRules.tsx":[{"add":["73","    if (prevProps.profile.key !== this.props.profile.key) {"],"delete":["73","    if (prevProps.profile !== this.props.profile) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfilePermissions-test.tsx":[{"add":["33","const profile = { key: 'sonar-way', name: 'Sonar way', language: 'js' };"],"delete":["33","const profile = { name: 'Sonar way', language: 'js' };"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileDetails.tsx":[{"add":["54","          <ProfileProjects","55","            organization={props.organization}","56","            profile={profile}","57","            updateProfiles={props.updateProfiles}","58","          \/>"],"delete":["54","          <ProfileProjects {...props} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritance.tsx":[{"add":["66","    if (prevProps.profile.key !== this.props.profile.key) {"],"delete":["66","    if (prevProps.profile !== this.props.profile) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfilePermissions-test.tsx.snap":[{"add":["51","            \"key\": \"sonar-way\",","73","            \"key\": \"sonar-way\","],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileDetails-test.tsx.snap":[{"add":[],"delete":["64","        exporters={Array []}","73","        profiles={Array []}","115","        exporters={Array []}","118","        profiles={Array []}"]}],"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":[{"add":["119","): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {"],"delete":["119","): Promise<{ more: boolean; results: ProfileProject[] }> {"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":[{"add":["38","  loadingMore: boolean;","40","  projects: Array<{ key: string; name: string }>;","50","    loadingMore: false,","52","    projects: [],","62","    if (prevProps.profile.key !== this.props.profile.key) {","63","      this.loadProjects();","71","  stopLoading = () => {","72","    if (this.mounted) {","73","      this.setState({ loading: false });","74","    }","75","  };","76","","79","      this.setState({ loading: false, projects: [] });","83","    this.setState({ loading: true });","85","    getProfileProjects(data).then(({ paging, results }) => {","86","      if (this.mounted) {","87","        this.setState({","88","          projects: results,","89","          total: paging.total,","90","          loading: false","91","        });","92","      }","93","    }, this.stopLoading);","97","    this.setState({ loadingMore: true });","98","    const data = { key: this.props.profile.key, page: this.state.page + 1 };","99","    getProfileProjects(data).then(({ paging, results }) => {","100","      if (this.mounted) {","101","        this.setState(state => ({","102","          projects: [...state.projects, ...results],","103","          total: paging.total,","104","          loadingMore: false","105","        }));","106","      }","107","    }, this.stopLoading);","143","            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.key}>","155","          ready={!this.state.loadingMore}"],"delete":["39","  projects: Array<{ key: string; name: string; uuid: string }> | null;","40","  ready: boolean;","51","    projects: null,","52","    ready: true,","62","    if (prevProps.profile !== this.props.profile) {","63","      this.setState({ projects: null, page: 1 }, this.loadProjects);","73","      this.setState({ loading: false });","78","    getProfileProjects(data).then(","79","      (r: any) => {","80","        if (this.mounted) {","81","          this.setState(state => ({","82","            projects: state.projects ? [...state.projects, ...r.results] : r.results,","83","            total: r.paging.total,","84","            loading: false,","85","            ready: true","86","          }));","87","        }","88","      },","89","      () => {}","90","    );","94","    this.setState(state => ({ ready: false, page: state.page + 1 }), this.loadProjects);","107","    if (this.state.loading) {","108","      return <i className=\"spinner\" \/>;","109","    }","110","","126","    if (projects == null) {","127","      return null;","128","    }","129","","138","            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.uuid}>","150","          ready={this.state.ready}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfilePermissions.tsx":[{"add":["31","import { Profile } from '..\/types';","45","  profile: Pick<Profile, 'key' | 'language' | 'name'>;","67","      prevProps.profile.key !== this.props.profile.key"],"delete":["44","  profile: { language: string; name: string };","66","      prevProps.profile !== this.props.profile"]}]}},"2af0a2dd2bff90fb3a7cdcb531271d537f5c8b57":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeConfigurationModule.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/package-info.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorModule.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImplTest.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeQueueModule.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImplTest.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorService.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":"ADD","server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImplTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImplTest.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImpl.java":"ADD","server\/sonar-ce-api\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepository.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/taskprocessor\/MutableTaskResultHolderImplTest.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryRule.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingScheduler.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueInitializerTest.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueInitializer.java":"ADD","server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/package-info.java":"ADD","\/dev\/null":"DELETE","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":"ADD","server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueue.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImpl.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallable.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorServiceImpl.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImpl.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":"ADD"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeConfigurationModule.java":[{"add":["21","import org.sonar.ce.configuration.CeConfigurationImpl;"],"delete":["24","import org.sonar.server.computation.configuration.CeConfigurationImpl;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImpl.java":[{"add":["26","import org.sonar.ce.configuration.CeConfiguration;"],"delete":["26","import org.sonar.server.computation.configuration.CeConfiguration;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/package-info.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorModule.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeQueueModule.java":[{"add":["24","import org.sonar.ce.queue.CeQueueInitializer;","25","import org.sonar.ce.queue.InternalCeQueueImpl;"],"delete":["24","import org.sonar.server.computation.queue.CeQueueInitializer;","25","import org.sonar.server.computation.queue.InternalCeQueueImpl;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorService.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImplTest.java":[{"add":["29","import org.sonar.ce.configuration.CeConfiguration;"],"delete":["29","import org.sonar.server.computation.configuration.CeConfiguration;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImpl.java":[{"add":["48","import org.sonar.ce.queue.CeQueueCleaner;","49","import org.sonar.ce.queue.PurgeCeActivities;","51","import org.sonar.ce.taskprocessor.CeTaskProcessorModule;"],"delete":["70","import org.sonar.server.computation.queue.CeQueueCleaner;","71","import org.sonar.server.computation.queue.PurgeCeActivities;","73","import org.sonar.server.computation.taskprocessor.CeTaskProcessorModule;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepository.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/taskprocessor\/MutableTaskResultHolderImplTest.java":[{"add":["21","import org.assertj.core.api.Assertions;","49","    Assertions.assertThat(underTest.getResult()).isSameAs(taskResult);"],"delete":["26","import static org.assertj.core.api.Assertions.assertThat;","49","    assertThat(underTest.getResult()).isSameAs(taskResult);"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryRule.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingScheduler.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueInitializerTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueInitializer.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/package-info.java":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueue.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallable.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorServiceImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":[{"add":[],"delete":[]}]}},"ec384a1e6926c801dc5167807f26b1f2ef6baf84":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentService.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStepTest.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/component\/ComponentKeysTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/component\/ComponentKeys.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidatorTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkUpdateKeyActionTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidator.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentService.java":[{"add":["43","import static org.sonar.core.component.ComponentKeys.checkProjectKey;","61","    checkProjectKey(newKey);"],"delete":["43","import static org.sonar.core.component.ComponentKeys.isValidProjectKey;","44","import static org.sonar.server.exceptions.BadRequestException.checkRequest;","62","    checkProjectKeyFormat(newKey);","96","  private static void checkProjectKeyFormat(String key) {","97","    checkRequest(isValidProjectKey(key), \"Malformed key for '%s'. It cannot be empty nor contain whitespaces.\", key);","98","  }","99",""]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStep.java":[{"add":["29","import org.sonar.api.utils.System2;","30","import org.sonar.ce.task.log.CeTaskMessages;","49","import static org.sonar.core.component.ComponentKeys.ALLOWED_CHARACTERS_MESSAGE;","50","import static org.sonar.core.component.ComponentKeys.isValidProjectKey;","59","  private final CeTaskMessages taskMessages;","60","  private final System2 system2;","62","  public ValidateProjectStep(DbClient dbClient, TreeRootHolder treeRootHolder, AnalysisMetadataHolder analysisMetadataHolder, CeTaskMessages taskMessages, System2 system2) {","66","    this.taskMessages = taskMessages;","67","    this.system2 = system2;","75","      \/\/ FIXME if module have really be dropped, no more need to load them","122","      Optional<ComponentDto> baseProjectOpt = loadBaseComponent(rawProjectKey);","123","      validateAnalysisDate(baseProjectOpt);","124","      if (!baseProjectOpt.isPresent()) {","125","        return;","126","      }","127","      if (!isValidProjectKey(baseProjectOpt.get().getKey())) {","128","        ComponentDto baseProject = baseProjectOpt.get();","129","        \/\/ As it was possible in the past to use project key with a format that is no more compatible, we need to display a warning to the user in","130","        \/\/ order for him to update his project key.","131","        \/\/ SONAR-13191 This warning should be removed in 9.0, and instead the analysis should fail","132","        taskMessages.add(new CeTaskMessages.Message(","133","          format(\"The project key \u2018%s\u2019 contains invalid characters. %s. You should update the project key with the expected format.\", baseProject.getKey(),","134","            ALLOWED_CHARACTERS_MESSAGE),","135","          system2.now()));","136","      }","146","            \"Latest analysis: \\\"%s\\\". It's only possible to rebuild the past in a chronological order.\","],"delete":["48","\/**","49"," * Validate project and modules. It will fail in the following cases :","50"," * <ol>","51"," * <li>module key is not valid<\/li>","52"," * <li>module key already exists in another project (same module key cannot exists in different projects)<\/li>","53"," * <li>module key is already used as a project key<\/li>","54"," * <li>date of the analysis is before last analysis<\/li>","55"," * <li>PR targets a branch that still contains modules<\/li>","56"," * <\/ol>","57"," *\/","66","  public ValidateProjectStep(DbClient dbClient, TreeRootHolder treeRootHolder, AnalysisMetadataHolder analysisMetadataHolder) {","123","      Optional<ComponentDto> baseProject = loadBaseComponent(rawProjectKey);","124","      validateAnalysisDate(baseProject);","134","              \"Latest analysis: \\\"%s\\\". It's only possible to rebuild the past in a chronological order.\","]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStepTest.java":[{"add":["26","import org.sonar.api.impl.utils.TestSystem2;","30","import org.sonar.ce.task.log.CeTaskMessages;","46","import static org.mockito.Mockito.times;","47","import static org.mockito.Mockito.verify;","48","import static org.mockito.Mockito.verifyNoInteractions;","53","  static long PAST_ANALYSIS_TIME = 1_420_088_400_000L; \/\/ 2015-01-01","54","  static long DEFAULT_ANALYSIS_TIME = 1_433_131_200_000L; \/\/ 2015-06-01","55","  static long NOW = 1_500_000_000_000L;","56","","61","  public DbTester db = DbTester.create(System2.INSTANCE);","70","  private System2 system2 = new TestSystem2().setNow(NOW);","72","  private CeTaskMessages taskMessages = mock(CeTaskMessages.class);","73","  private DbClient dbClient = db.getDbClient();","74","","75","  private ValidateProjectStep underTest = new ValidateProjectStep(dbClient, treeRootHolder, analysisMetadataHolder, taskMessages, system2);","76","","77","  @Test","78","  public void dont_fail_for_long_forked_from_master_with_modules() {","79","    ComponentDto masterProject = db.components().insertPublicProject();","80","    dbClient.componentDao().insert(db.getSession(), ComponentTesting.newModuleDto(masterProject));","81","    setBranch(BranchType.BRANCH, masterProject.uuid());","82","    db.getSession().commit();","83","","84","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"DEFG\")","85","      .setKey(\"branch\")","86","      .build());","87","","88","    underTest.execute(new TestComputationStepContext());","89","    verifyNoInteractions(taskMessages);","90","  }","91","","92","  @Test","93","  public void not_fail_if_analysis_date_is_after_last_analysis() {","94","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","95","    dbClient.componentDao().insert(db.getSession(), project);","96","    dbClient.snapshotDao().insert(db.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(PAST_ANALYSIS_TIME));","97","    db.getSession().commit();","98","","99","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"ABCD\").setKey(PROJECT_KEY).build());","100","","101","    underTest.execute(new TestComputationStepContext());","102","  }","106","    ComponentDto masterProject = db.components().insertPublicProject();","107","    ComponentDto mergeBranch = db.components().insertProjectBranch(masterProject, b -> b.setKey(\"mergeBranch\"));","108","    dbClient.componentDao().insert(db.getSession(), ComponentTesting.newModuleDto(mergeBranch));","110","    db.getSession().commit();","125","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","126","    dbClient.componentDao().insert(db.getSession(), project);","127","    dbClient.snapshotDao().insert(db.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(1433131200000L)); \/\/ 2015-06-01","128","    db.getSession().commit();","140","  @Test","141","  public void add_warning_when_project_key_is_invalid() {","142","    ComponentDto project = db.components().insertPrivateProject(p -> p.setDbKey(\"inv$lid!\"));","143","    db.components().insertSnapshot(project, a -> a.setCreatedAt(PAST_ANALYSIS_TIME));","144","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1)","145","      .setUuid(project.uuid())","146","      .setKey(project.getKey())","147","      .build());","148","","149","    underTest.execute(new TestComputationStepContext());","150","","151","    verify(taskMessages, times(1))","152","      .add(new CeTaskMessages.Message(","153","        \"The project key \u2018inv$lid!\u2019 contains invalid characters. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit. \" +","154","          \"You should update the project key with the expected format.\",","155","        NOW));","156","  }","157","","158","  private void setBranch(BranchType type, @Nullable String mergeBranchUuid) {","159","    Branch branch = mock(Branch.class);","160","    when(branch.getType()).thenReturn(type);","161","    when(branch.getReferenceBranchUuid()).thenReturn(mergeBranchUuid);","162","    analysisMetadataHolder.setBranch(branch);","163","  }"],"delete":["48","  static long DEFAULT_ANALYSIS_TIME = 1433131200000L; \/\/ 2015-06-01","53","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","54","","57","","60","","66","  private DbClient dbClient = dbTester.getDbClient();","67","  private ValidateProjectStep underTest = new ValidateProjectStep(dbClient, treeRootHolder, analysisMetadataHolder);","71","    ComponentDto masterProject = dbTester.components().insertPublicProject();","72","    ComponentDto mergeBranch = dbTester.components().insertProjectBranch(masterProject, b -> b.setKey(\"mergeBranch\"));","73","    dbClient.componentDao().insert(dbTester.getSession(), ComponentTesting.newModuleDto(mergeBranch));","75","    dbTester.getSession().commit();","87","  public void dont_fail_for_long_forked_from_master_with_modules() {","88","    ComponentDto masterProject = dbTester.components().insertPublicProject();","89","    dbClient.componentDao().insert(dbTester.getSession(), ComponentTesting.newModuleDto(masterProject));","90","    setBranch(BranchType.BRANCH, masterProject.uuid());","91","    dbTester.getSession().commit();","92","","93","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"DEFG\")","94","      .setKey(\"branch\")","95","      .build());","96","","97","    underTest.execute(new TestComputationStepContext());","98","  }","99","","100","  private void setBranch(BranchType type, @Nullable String mergeBranchUuid) {","101","    Branch branch = mock(Branch.class);","102","    when(branch.getType()).thenReturn(type);","103","    when(branch.getReferenceBranchUuid()).thenReturn(mergeBranchUuid);","104","    analysisMetadataHolder.setBranch(branch);","105","  }","106","","107","  @Test","108","  public void not_fail_if_analysis_date_is_after_last_analysis() {","109","    ComponentDto project = ComponentTesting.newPrivateProjectDto(dbTester.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","110","    dbClient.componentDao().insert(dbTester.getSession(), project);","111","    dbClient.snapshotDao().insert(dbTester.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(1420088400000L)); \/\/ 2015-01-01","112","    dbTester.getSession().commit();","113","","114","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"ABCD\").setKey(PROJECT_KEY).build());","115","","116","    underTest.execute(new TestComputationStepContext());","117","  }","118","","119","  @Test","123","    ComponentDto project = ComponentTesting.newPrivateProjectDto(dbTester.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","124","    dbClient.componentDao().insert(dbTester.getSession(), project);","125","    dbClient.snapshotDao().insert(dbTester.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(1433131200000L)); \/\/ 2015-06-01","126","    dbTester.getSession().commit();"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/component\/ComponentKeysTest.java":[{"add":["39","  public void valid_project_key() {","42","  }","43","","44","  @Test","45","  public void invalid_project_key() {","46","    assertThat(ComponentKeys.isValidProjectKey(\"0123\")).isFalse();","47","","48","    assertThat(ComponentKeys.isValidProjectKey(\"ab\/12\")).isFalse();","49","    assertThat(ComponentKeys.isValidProjectKey(\"코드품질\")).isFalse();","50","","77","","78","  @Test","79","  public void checkProjectKey_fail_if_only_digit() {","80","    expectedException.expect(IllegalArgumentException.class);","81","    expectedException.expectMessage(\"Malformed key for '0123'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","82","","83","    ComponentKeys.checkProjectKey(\"0123\");","84","  }","85","","86","  @Test","87","  public void checkProjectKey_fail_if_special_characters_not_allowed() {","88","    expectedException.expect(IllegalArgumentException.class);","89","","90","    ComponentKeys.checkProjectKey(\"ab\/12\");","91","  }"],"delete":["39","  public void isValidProjectKey() {","41","    assertThat(ComponentKeys.isValidProjectKey(\"0123\")).isTrue();","43","    assertThat(ComponentKeys.isValidProjectKey(\"ab\/12\")).isTrue();","44","    assertThat(ComponentKeys.isValidProjectKey(\"코드품질\")).isTrue();"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":[{"add":["45","import static org.sonar.core.component.ComponentKeys.ALLOWED_CHARACTERS_MESSAGE;","172","    checkRequest(isValidProjectKey(key), \"Malformed key for %s: '%s'. %s.\", getQualifierToDisplay(qualifier), key, ALLOWED_CHARACTERS_MESSAGE);"],"delete":["44","import static org.sonar.api.resources.Qualifiers.APP;","172","    checkRequest(isValidProjectKey(key), \"Malformed key for %s: '%s'. It cannot be empty nor contain whitespaces.\", getQualifierToDisplay(qualifier), key);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["275","  public void fail_when_invalid_project_key() {","279","    expectedException.expectMessage(\"Malformed key for Project: 'project%Key'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","282","      .setProjectKey(\"project%Key\")"],"delete":["275","  public void properly_fail_when_invalid_project_key() {","279","    expectedException.expectMessage(\"Malformed key for Project: 'project Key'. It cannot be empty nor contain whitespaces.\");","282","      .setProjectKey(\"project Key\")"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":[{"add":["292","    expectedException.expectMessage(\"Malformed key for Project: '1234'\");","296","        .setKey(\"1234\")","304","  public void fail_when_key_contains_percent_character() {","306","    expectedException.expectMessage(\"Malformed key for Project: 'roject%Key'\");","310","        .setKey(\"roject%Key\")"],"delete":["292","    expectedException.expectMessage(\"Malformed key for Project: '  '\");","296","        .setKey(\"  \")","304","  public void properly_fail_when_key_contains_percent_character() {","306","    expectedException.expectMessage(\"Malformed key for Project: '  '\");","310","        .setKey(\"  \")"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/component\/ComponentKeys.java":[{"add":["21","import java.util.regex.Pattern;","31","  public static final String ALLOWED_CHARACTERS_MESSAGE = \"Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit\";","33","  public static final String MALFORMED_KEY_MESSAGE = \"Malformed key for '%s'. %s.\";","34","","35","  \/**","36","   * Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit","38","  private static final Pattern VALID_PROJECT_KEY_REGEXP = Pattern.compile(\"[\\\\p{Alnum}\\\\-_.:]*[\\\\p{Alpha}\\\\-_.:]+[\\\\p{Alnum}\\\\-_.:]*\");","56","    return VALID_PROJECT_KEY_REGEXP.matcher(keyCandidate).matches();","65","    checkArgument(isValidProjectKey(keyCandidate), MALFORMED_KEY_MESSAGE, keyCandidate, ALLOWED_CHARACTERS_MESSAGE);"],"delete":["30","  \/*","31","   * Must not be blank or empty","32","   *\/","33","  private static final String VALID_PROJECT_KEY_REGEXP = \"[^\\\\p{javaWhitespace}]+\";","35","  \/*","36","   * Allowed characters are alphanumeric, '-', '_', '.' and '\/'","38","  private static final String VALID_BRANCH_REGEXP = \"[\\\\p{Alnum}\\\\-_.\/]*\";","55","  \/**","56","   * Test if given parameter is valid for a project. A key is valid if it doesn't contain whitespaces.","57","   *","58","   * @return <code>true<\/code> if <code>keyCandidate<\/code> can be used for a project","59","   *\/","61","    return keyCandidate.matches(VALID_PROJECT_KEY_REGEXP);","70","    checkArgument(isValidProjectKey(keyCandidate), \"Malformed key for '%s'. %s\", keyCandidate, \"Project key cannot be empty nor contain whitespaces.\");"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidatorTest.java":[{"add":["36","import org.sonar.api.utils.log.LogAndArguments;","37","import org.sonar.api.utils.log.LogTester;","38","import org.sonar.api.utils.log.LoggerLevel;","44","import static org.assertj.core.api.Assertions.assertThat;","56","  @Rule","57","  public LogTester logTester = new LogTester();","58","","95","  public void log_warning_when_invalid_key() {","96","    ProjectReactor reactor = createProjectReactor(\"foo$bar\");","99","","100","    assertThat(logTester.getLogs(LoggerLevel.WARN))","101","      .extracting(LogAndArguments::getFormattedMsg)","102","      .containsOnly(\"\\\"foo$bar\\\" is not a valid project or module key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","103","  }","104","","105","  @Test","106","  public void log_warning_when_only_digits() {","107","    ProjectReactor reactor = createProjectReactor(\"12345\");","108","","109","    underTest.validate(reactor);","110","","111","    assertThat(logTester.getLogs(LoggerLevel.WARN))","112","      .extracting(LogAndArguments::getFormattedMsg)","113","      .containsOnly(\"\\\"12345\\\" is not a valid project or module key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","114","  }","115","","116","  @Test","117","  public void log_warning_when_backslash_in_key() {","118","    ProjectReactor reactor = createProjectReactor(\"foo\\\\bar\");","119","","120","    underTest.validate(reactor);","121","","122","    assertThat(logTester.getLogs(LoggerLevel.WARN))","123","      .extracting(LogAndArguments::getFormattedMsg)","124","      .containsOnly(\"\\\"foo\\\\bar\\\" is not a valid project or module key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");"],"delete":["88","  public void fail_with_invalid_key() {","89","    ProjectReactor reactor = createProjectReactor(\"  \");","91","    thrown.expect(MessageException.class);","92","    thrown.expectMessage(\"\\\"  \\\" is not a valid project or module key\");"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":[{"add":["49",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":[{"add":["369","    thrown.expectMessage(\"Malformed key for 'my?project?key'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","371","    underTest.bulkUpdateKey(dbSession, project.uuid(), project.getDbKey(), \"my?project?key\", doNotReturnAnyRekeyedResource());","432","    underTest.simulateBulkUpdateKey(dbSession, \"A\", \"project\", \"project?\");"],"delete":["22","import java.util.Collections;","370","    thrown.expectMessage(\"Malformed key for '  '. Project key cannot be empty nor contain whitespaces.\");","372","    underTest.bulkUpdateKey(dbSession, project.uuid(), project.getDbKey(), \"  \", doNotReturnAnyRekeyedResource());","433","    underTest.simulateBulkUpdateKey(dbSession, \"A\", \"project\", \"  \");"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":[{"add":["133","    expectedException.expect(IllegalArgumentException.class);","134","    expectedException.expectMessage(\"Malformed key for ''. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","140","  public void fail_if_new_key_is_not_formatted_correctly() {","144","    expectedException.expect(IllegalArgumentException.class);","145","    expectedException.expectMessage(\"Malformed key for 'sample?root'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","147","    underTest.updateKey(dbSession, componentDb.getProjectDto(project), \"sample?root\");"],"delete":["35","import org.sonar.server.exceptions.BadRequestException;","134","    expectedException.expect(BadRequestException.class);","135","    expectedException.expectMessage(\"Malformed key for ''. It cannot be empty nor contain whitespaces.\");","141","  public void fail_if_new_key_is_invalid() {","145","    expectedException.expect(BadRequestException.class);","146","    expectedException.expectMessage(\"Malformed key for 'sample root'. It cannot be empty nor contain whitespaces.\");","148","    underTest.updateKey(dbSession, componentDb.getProjectDto(project), \"sample root\");"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkUpdateKeyActionTest.java":[{"add":["62","","172","    expectedException.expectMessage(\"Malformed key for 'my?project'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","174","    callByKey(MY_PROJECT_KEY, FROM, \"my?\");","182","    expectedException.expectMessage(\"Malformed key for 'my?project'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","184","    callDryRunByKey(MY_PROJECT_KEY, FROM, \"my?\");"],"delete":["171","    expectedException.expectMessage(\"Malformed key for 'my aproject'. Project key cannot be empty nor contain whitespaces.\");","173","    callByKey(MY_PROJECT_KEY, FROM, \"my a\");","181","    expectedException.expectMessage(\"Malformed key for 'my aproject'. Project key cannot be empty nor contain whitespaces.\");","183","    callDryRunByKey(MY_PROJECT_KEY, FROM, \"my a\");"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidator.java":[{"add":["28","import org.sonar.api.utils.log.Logger;","29","import org.sonar.api.utils.log.Loggers;","35","import static java.util.Collections.singletonList;","38","import static org.sonar.core.component.ComponentKeys.ALLOWED_CHARACTERS_MESSAGE;","51","","52","  private static final Logger LOG = Loggers.get(ProjectReactorValidator.class);","53","","73","      validateModule(moduleDef);","90","    for (String param : singletonList(BRANCH_NAME)) {","105","  private static void validateModule(ProjectDefinition moduleDef) {","107","      \/\/ As it was possible in the past to use project key with a format that is no more compatible, we need to display a warning to the user in","108","      \/\/ order for him to update his project key.","109","      \/\/ SONAR-13191 This warning should be removed in 9.0","110","      LOG.warn(\"\\\"{}\\\" is not a valid project or module key. {}.\", moduleDef.getKey(), ALLOWED_CHARACTERS_MESSAGE);"],"delete":["22","import java.util.Arrays;","67","      validateModule(moduleDef, validationMessages);","84","    for (String param : Arrays.asList(BRANCH_NAME)) {","99","  private static void validateModule(ProjectDefinition moduleDef, List<String> validationMessages) {","101","      validationMessages.add(format(\"\\\"%s\\\" is not a valid project or module key. It cannot be empty nor contain whitespaces.\", moduleDef.getKey()));"]}]}},"0ce861b4c00a06e3a19ca42be3da809ad8f9d4db":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/nav\/NavBar.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/nav\/NavBar.css":[{"add":["17","  min-width: 1080px;"],"delete":["17","  min-width: 1100px;"]}]}},"13728b3b2196021e1cc7fa1d4cdec05a204273c6":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/analysis\/AnalysisMetadataHolder.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/analysis\/AnalysisMetadataHolder.java":[{"add":["98","   * Branch being analyzed. Can be of any type: long or short, main or not.","99","   *","100","   * @throws IllegalStateException if branch has not been set","107","   * @throws IllegalStateException if pull request key has not been set"],"delete":["98","   * Branch being analyzed. Can be of any type: long or short, main or not. ","105","   * @throws IllegalStateException if current analysis is not a pull request"]}]}},"266070dc7726da6f7fe4491adcd651a0eff34b7a":{"changes":{"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/index.js":"MODIFY","server\/sonar-docs\/src\/templates\/page.tsx":"MODIFY"},"diff":{"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/index.js":[{"add":["31","  newContent = replaceInstanceTag(newContent);","79","function replaceInstanceTag(content) {","80","  return content.replace(\/{instance}\/gi, 'SonarQube');","81","}","82",""],"delete":[]}],"server\/sonar-docs\/src\/templates\/page.tsx":[{"add":[],"delete":["73","    htmlPageContent = replaceInstanceTag(htmlPageContent);","128","function replaceInstanceTag(content: string) {","129","  return content.replace(\/{instance}\/gi, 'SonarQube');","130","}","131",""]}]}},"20a1224a63f0d1132ecc14e61eb13c07b8d91c31":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/ProcessLauncherImpl.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/FileUtils2.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/ProcessLauncherImpl.java":[{"add":["131","","132","            if (outdatedDir.exists()) {","133","              LOG.info(\"Failed to delete outdated search index data directory {}\", outdatedDir);","134","            }"],"delete":[]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/FileUtils2.java":[{"add":["23","import java.nio.file.AccessDeniedException;","24","import java.nio.file.DirectoryNotEmptyException;","33","import org.sonar.api.utils.log.Logger;","34","import org.sonar.api.utils.log.Loggers;","44","  private static final Logger LOG = Loggers.get(FileUtils2.class);","87","","88","        if (file.exists()) {","89","          LOG.warn(\"Unable to delete directory '{}'\", file);","90","        }","190","      try {","191","        Files.delete(file);","192","      } catch (AccessDeniedException e) {","193","        LOG.debug(\"Access delete to file '{}'. Ignoring and proceeding with recursive delete\", file);","194","      }","200","      try {","201","        Files.delete(dir);","202","      } catch (AccessDeniedException e) {","203","        LOG.debug(\"Access denied to delete directory '{}'. Ignoring and proceeding with recursive delete\", dir);","204","      } catch (DirectoryNotEmptyException e) {","205","        LOG.trace(\"Can not delete non empty directory '{}', presumably because it contained non accessible files\/directories. \" +","206","          \"Ignoring and proceeding with recursive delete\", dir, e);","207","      }"],"delete":["112","","113","    if (directory.exists()) {","114","      throw new IOException(format(\"Unable to delete directory '%s'\", directory));","115","    }","185","      Files.delete(file);","191","      Files.delete(dir);"]}]}},"a9d2422b125b9d89cd8efeef69b43439d41d0bf5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["252","              notExist: false,"],"delete":[]}]}},"0a2f324b94e66acc9183cfd98ede1802667d525f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/controller.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/controller.js":[{"add":["28","  ruleFields: [","29","    'name',","30","    'lang',","31","    'langName',","32","    'sysTags',","33","    'tags',","34","    'status',","35","    'severity',","36","    'isTemplate',","37","    'templateKey'","38","  ],"],"delete":["28","  ruleFields: ['name', 'lang', 'langName', 'sysTags', 'tags', 'status', 'severity', 'isTemplate'],"]}]}},"c2cd8b4fccf2665d25db30a372c6385da29152f2":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.js":[{"add":["24","import { fetchLanguages, fetchAppState } from '..\/..\/store\/rootActions';","45","      .then(() => Promise.all([this.props.fetchAppState(), this.props.fetchLanguages()]))","71","  fetchLanguages"],"delete":["24","import { fetchLanguages, fetchAppState, fetchOrganizations } from '..\/..\/store\/rootActions';","33","    fetchOrganizations: React.PropTypes.func.isRequired,","46","      .then(() =>","47","        Promise.all([","48","          this.props.fetchAppState(),","49","          this.props.fetchOrganizations(),","50","          this.props.fetchLanguages()","51","        ])","52","      )","78","  fetchLanguages,","79","  fetchOrganizations"]}]}},"a56e60d168802ff9dc23ffec978bb412fd501f97":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/AddProjectActionTest.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileProjectOperations.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDao.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/AddProjectActionTest.java":[{"add":["105","  @Test","106","  public void change_project_association_when_project_is_linked_on_many_profiles() throws Exception {","107","    setUserAsQualityProfileAdmin();","108","    QualityProfileDto profile1Language1 = newQProfileDto(QProfileName.createFor(LANGUAGE_1, \"profile1\"), \"Profile 1\");","109","    QualityProfileDto profile2Language2 = newQProfileDto(QProfileName.createFor(LANGUAGE_2, \"profile2\"), \"Profile 2\");","110","    QualityProfileDto profile3Language1 = newQProfileDto(QProfileName.createFor(LANGUAGE_1, \"profile3\"), \"Profile 3\");","111","    qualityProfileDbTester.insertQualityProfiles(profile1Language1, profile2Language2, profile3Language1);","112","    qualityProfileDbTester.associateProjectWithQualityProfile(project, profile1Language1, profile2Language2);","113","    session.commit();","114","","115","    executeRequest(project, profile3Language1);","116","","117","    assertProjectIsAssociatedToProfile(project.key(), LANGUAGE_1, profile3Language1.getKey());","118","    assertProjectIsAssociatedToProfile(project.key(), LANGUAGE_2, profile2Language2.getKey());","119","  }","120",""],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":[{"add":["28","import org.sonar.db.DbSession;","30","import org.sonar.db.component.ComponentDbTester;","31","import org.sonar.db.component.ComponentDto;","32","import org.sonar.db.component.ComponentTesting;","39","import static org.sonar.db.qualityprofile.QualityProfileDto.createFor;","48","  DbSession dbSession = dbTester.getSession();","49","","50","  ComponentDbTester componentDb = new ComponentDbTester(dbTester);","51","  QualityProfileDbTester qualityProfileDbTester = new QualityProfileDbTester(dbTester);","52","","53","  QualityProfileDao underTest = dbTester.getDbClient().qualityProfileDao();","56","  public void initNow() {","64","    QualityProfileDto dto = createFor(\"abcde\")","68","    underTest.insert(dto);","70","    dbTester.assertDbUnit(getClass(), \"insert-result.xml\", new String[] {\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","84","    underTest.update(dto);","86","    dbTester.assertDbUnit(getClass(), \"update-result.xml\", new String[] {\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","93","    underTest.delete(1);","102","    List<QualityProfileDto> dtos = underTest.selectAll(dbTester.getSession());","123","    List<QualityProfileDto> dtos = underTest.selectAll();","135","    QualityProfileDto java = underTest.selectDefaultProfile(\"java\");","139","    assertThat(underTest.selectDefaultProfile(\"js\")).isNull();","146","    List<QualityProfileDto> java = underTest.selectDefaultProfiles(dbTester.getSession(), singletonList(\"java\"));","149","    assertThat(underTest.selectDefaultProfiles(dbTester.getSession(), singletonList(\"js\"))).isEmpty();","150","    assertThat(underTest.selectDefaultProfiles(dbTester.getSession(), of(\"java\", \"js\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","151","    assertThat(underTest.selectDefaultProfiles(dbTester.getSession(), of(\"js\", \"java\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","158","    QualityProfileDto dto = underTest.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession());","164","    assertThat(underTest.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession())).isNotNull();","165","    assertThat(underTest.selectByNameAndLanguage(\"Sonar Way\", \"unknown\", dbTester.getSession())).isNull();","172","    List<QualityProfileDto> dtos = underTest.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"java\"), dbTester.getSession());","180","    assertThat(underTest.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"unknown\"), dbTester.getSession())).isEmpty();","181","    assertThat(underTest.selectByNameAndLanguages(\"Sonar Way\", of(\"java\", \"unknown\"), dbTester.getSession())).extracting(\"id\").containsOnly(1);","188","    List<QualityProfileDto> result = underTest.selectByLanguage(\"java\");","198","    QualityProfileDto dto = underTest.selectById(1);","204","    assertThat(underTest.selectById(555)).isNull();","211","    QualityProfileDto dto = underTest.selectParentById(1);","219","    List<QualityProfileDto> dtos = underTest.selectChildren(dbTester.getSession(), \"java_parent\");","240","    assertThat(underTest.selectProjects(\"Sonar Way\", \"java\")).hasSize(2);","247","    assertThat(underTest.countProjects(\"Sonar Way\", \"java\")).isEqualTo(2);","254","    assertThat(underTest.countProjectsByProfileKey()).containsOnly(","263","    QualityProfileDto dto = underTest.selectByProjectAndLanguage(1L, \"java\");","271","    QualityProfileDto dto = underTest.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"java\");","274","    assertThat(underTest.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"unkown\")).isNull();","275","    assertThat(underTest.selectByProjectAndLanguage(dbTester.getSession(), \"unknown\", \"java\")).isNull();","282","    List<QualityProfileDto> dto = underTest.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"java\"));","285","    assertThat(underTest.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"unkown\"))).isEmpty();","286","    assertThat(underTest.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", of(\"java\", \"unkown\"))).extracting(\"id\").containsOnly(1);","287","    assertThat(underTest.selectByProjectAndLanguages(dbTester.getSession(), \"unknown\", singletonList(\"java\"))).isEmpty();","288","  }","289","","290","  @Test","291","  public void update_project_profile_association() {","292","    ComponentDto project = componentDb.insertComponent(ComponentTesting.newProjectDto());","293","    QualityProfileDto profile1Language1 = insertQualityProfileDto(\"profile1\", \"Profile 1\", \"xoo\");","294","    QualityProfileDto profile2Language2 = insertQualityProfileDto(\"profile2\", \"Profile 2\", \"xoo2\");","295","    QualityProfileDto profile3Language1 = insertQualityProfileDto(\"profile3\", \"Profile 3\", \"xoo\");","296","    qualityProfileDbTester.associateProjectWithQualityProfile(project, profile1Language1, profile2Language2);","297","","298","    underTest.updateProjectProfileAssociation(project.uuid(), profile3Language1.getKey(), profile1Language1.getKey(), dbSession);","299","","300","    assertThat(underTest.selectByProjectAndLanguage(dbSession, project.getKey(), \"xoo\").getKey()).isEqualTo(profile3Language1.getKey());","301","    assertThat(underTest.selectByProjectAndLanguage(dbSession, project.getKey(), \"xoo2\").getKey()).isEqualTo(profile2Language2.getKey());","302","  }","303","","304","  private QualityProfileDto insertQualityProfileDto(String key, String name, String language) {","305","    QualityProfileDto dto = QualityProfileDto.createFor(key).setName(name).setLanguage(language);","306","    underTest.insert(dbSession, dto);","307","    return dto;"],"delete":["35","","44","  QualityProfileDao dao = dbTester.getDbClient().qualityProfileDao();","47","  public void createDao() {","55","    QualityProfileDto dto = QualityProfileDto.createFor(\"abcde\")","59","    dao.insert(dto);","61","    dbTester.assertDbUnit(getClass(), \"insert-result.xml\", new String[]{\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","75","    dao.update(dto);","77","    dbTester.assertDbUnit(getClass(), \"update-result.xml\", new String[]{\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","84","    dao.delete(1);","93","    List<QualityProfileDto> dtos = dao.selectAll(dbTester.getSession());","114","    List<QualityProfileDto> dtos = dao.selectAll();","126","    QualityProfileDto java = dao.selectDefaultProfile(\"java\");","130","    assertThat(dao.selectDefaultProfile(\"js\")).isNull();","137","    List<QualityProfileDto> java = dao.selectDefaultProfiles(dbTester.getSession(), singletonList(\"java\"));","140","    assertThat(dao.selectDefaultProfiles(dbTester.getSession(), singletonList(\"js\"))).isEmpty();","141","    assertThat(dao.selectDefaultProfiles(dbTester.getSession(), of(\"java\", \"js\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","142","    assertThat(dao.selectDefaultProfiles(dbTester.getSession(), of(\"js\", \"java\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","149","    QualityProfileDto dto = dao.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession());","155","    assertThat(dao.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession())).isNotNull();","156","    assertThat(dao.selectByNameAndLanguage(\"Sonar Way\", \"unknown\", dbTester.getSession())).isNull();","163","    List<QualityProfileDto> dtos = dao.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"java\"), dbTester.getSession());","171","    assertThat(dao.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"unknown\"), dbTester.getSession())).isEmpty();","172","    assertThat(dao.selectByNameAndLanguages(\"Sonar Way\", of(\"java\", \"unknown\"), dbTester.getSession())).extracting(\"id\").containsOnly(1);","179","    List<QualityProfileDto> result = dao.selectByLanguage(\"java\");","189","    QualityProfileDto dto = dao.selectById(1);","195","    assertThat(dao.selectById(555)).isNull();","202","    QualityProfileDto dto = dao.selectParentById(1);","210","    List<QualityProfileDto> dtos = dao.selectChildren(dbTester.getSession(), \"java_parent\");","231","    assertThat(dao.selectProjects(\"Sonar Way\", \"java\")).hasSize(2);","238","    assertThat(dao.countProjects(\"Sonar Way\", \"java\")).isEqualTo(2);","245","    assertThat(dao.countProjectsByProfileKey()).containsOnly(","254","    QualityProfileDto dto = dao.selectByProjectAndLanguage(1L, \"java\");","262","    QualityProfileDto dto = dao.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"java\");","265","    assertThat(dao.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"unkown\")).isNull();","266","    assertThat(dao.selectByProjectAndLanguage(dbTester.getSession(), \"unknown\", \"java\")).isNull();","273","    List<QualityProfileDto> dto = dao.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"java\"));","276","    assertThat(dao.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"unkown\"))).isEmpty();","277","    assertThat(dao.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", of(\"java\", \"unkown\"))).extracting(\"id\").containsOnly(1);","278","    assertThat(dao.selectByProjectAndLanguages(dbTester.getSession(), \"unknown\", singletonList(\"java\"))).isEmpty();"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":[{"add":["237","    UPDATE project_qprofiles SET profile_key=#{profileKey} WHERE project_uuid=#{projectUuid} AND profile_key=#{oldProfileKey}"],"delete":["237","    UPDATE project_qprofiles SET profile_key=#{profileKey} WHERE project_uuid=#{projectUuid}"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileProjectOperations.java":[{"add":["69","      db.qualityProfileDao().updateProjectProfileAssociation(projectUuid, profileKey, currentProfile.getKey(), session);"],"delete":["69","      db.qualityProfileDao().updateProjectProfileAssociation(projectUuid, profileKey, session);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDao.java":[{"add":["353","  public void updateProjectProfileAssociation(String projectUuid, String newProfileKey, String oldProfileKey, DbSession session) {","354","    mapper(session).updateProjectProfileAssociation(projectUuid, newProfileKey, oldProfileKey);"],"delete":["353","  public void updateProjectProfileAssociation(String projectUuid, String profileKey, DbSession session) {","354","    mapper(session).updateProjectProfileAssociation(projectUuid, profileKey);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.java":[{"add":["80","  void updateProjectProfileAssociation(@Param(\"projectUuid\") String projectUuid, @Param(\"profileKey\") String profileKey, @Param(\"oldProfileKey\") String oldProfileKey);"],"delete":["80","  void updateProjectProfileAssociation(@Param(\"projectUuid\") String projectUuid, @Param(\"profileKey\") String profileKey);"]}]}},"5d8830fa08d4fd4280a029d7a9b7fbd0d7bc3fca":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/SnapshotMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotMapper.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/SnapshotDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/SnapshotMapper.xml":[{"add":[],"delete":["107","      inner join ce_activity ca on ca.analysis_uuid = s.uuid and ca.component_uuid = pb.project_uuid","113","      and ca.status=#{ceStatus, jdbcType=VARCHAR}"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotDao.java":[{"add":["112","    return executeLargeInputs(componentUuidFromDatePairs, partition -> mapper(dbSession).selectFinishedByComponentUuidsAndFromDates(partition), i -> i \/ 2);"],"delete":["34","import org.sonar.db.ce.CeActivityDto.Status;","113","    return executeLargeInputs(componentUuidFromDatePairs, partition -> mapper(dbSession).selectFinishedByComponentUuidsAndFromDates(partition, Status.SUCCESS), i -> i \/ 2);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotMapper.java":[{"add":["56","  List<SnapshotDto> selectFinishedByComponentUuidsAndFromDates(@Param(\"componentUuidFromDatePairs\") List<ComponentUuidFromDatePair> pairs);"],"delete":["26","import org.sonar.db.ce.CeActivityDto;","57","  List<SnapshotDto> selectFinishedByComponentUuidsAndFromDates(@Param(\"componentUuidFromDatePairs\") List<ComponentUuidFromDatePair> pairs,","58","    @Param(\"ceStatus\") CeActivityDto.Status ceStatus);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/SnapshotDaoTest.java":[{"add":["237","  public void selectFinishedByComponentUuidsAndFromDates_returns_processed_analysis_even_if_analysis_failed() {","250","      .containsExactlyInAnyOrder(finishedAnalysis.getUuid(), canceledAnalysis.getUuid());"],"delete":["237","  public void selectFinishedByComponentUuidsAndFromDates_ignores_unsuccessful_analysis() {","250","      .containsExactlyInAnyOrder(finishedAnalysis.getUuid());"]}]}},"c5f4811ce2b4ee1f373c31d104acda9c73a476b9":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/creation-date-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/creation-date-facet.js":[{"add":["128","  onAllClick (e) {","129","    e.preventDefault();"],"delete":["128","  onAllClick () {"]}]}},"2e95a6d9729ad591ef16c950453529a704d534db":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest\/schema.sql":"ADD","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentViewerJsonWriter.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromProperties.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest.java":"ADD"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":[{"add":["362","      .filter(Objects::nonNull)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":[{"add":["33","      .add(4005, \"Drop orphan favorites from 'properties' table\", DropOrphanFavoritesFromProperties.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":[{"add":["32","import javax.annotation.Nullable;","631","  public void does_not_fail_on_orphan_favorite() {","632","    userSession.logIn();","633","    OrganizationDto organization = db.organizations().insert();","634","    ComponentDto javaProject = insertProject(organization);","635","    ComponentDto markDownProject = insertProject(organization);","636","    ComponentDto sonarQubeProject = insertProject(organization);","637","    Stream.of(javaProject, markDownProject).forEach(this::addFavourite);","638","","639","    addFavourite((String) null);","640","","641","    SearchProjectsWsResponse result = call(request.setFilter(\"isFavorite\"));","642","","643","    assertThat(result.getComponentsCount()).isEqualTo(2);","644","    assertThat(result.getComponentsList()).extracting(Component::getKey).containsExactly(javaProject.getDbKey(), markDownProject.getDbKey());","645","  }","646","","647","  @Test","1431","    addFavourite(project.uuid());","1432","  }","1433","","1434","  private void addFavourite(@Nullable String componentUuid) {","1435","    dbClient.propertiesDao().saveProperty(dbSession, new PropertyDto().setKey(\"favourite\").setComponentUuid(componentUuid).setUserUuid(userSession.getUuid()));"],"delete":["1413","    dbClient.propertiesDao().saveProperty(dbSession, new PropertyDto().setKey(\"favourite\").setComponentUuid(project.uuid()).setUserUuid(userSession.getUuid()));"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentViewerJsonWriter.java":[{"add":["100","      .setKey(\"favourite\")","101","      .setComponentUuid(component.uuid())","103","      .build(),"],"delete":["100","        .setKey(\"favourite\")","101","        .setComponentUuid(component.uuid())","103","        .build(),"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromProperties.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest.java":[{"add":[],"delete":[]}]}},"77ac9136fa46b471bac80420680e661343fcb495":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/SensorStrategy.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/SensorStrategy.java":[{"add":["21","import org.sonar.api.batch.fs.InputFile;","22","","24"," * A shared, mutable object in the project container.","27"," * It is also injected into each InputFile to change the behavior of {@link InputFile#relativePath()}"],"delete":["22"," * A shared, mutable object in the module container."]}]}},"2beaf73c2d10dcaaf3949889af53579e7d5aba13":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.css":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/MetaLink-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/__tests__\/ProjectCard-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.css":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/MetaLink-test.tsx":[{"add":["33","  expect(shallow(<MetaLink iconOnly={true} link={link} \/>)).toMatchSnapshot();"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.tsx":[{"add":["24","import '.\/MetaLink.css';","27","  iconOnly?: boolean;","46","    const { iconOnly, link } = this.props;","47","    const linkTitle = getLinkName(link);","55","          target=\"_blank\"","56","          title={linkTitle}>","58","          {!iconOnly && linkTitle}"],"delete":["44","    const { link } = this.props;","52","          target=\"_blank\">","54","          {getLinkName(link)}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/utils.ts":[{"add":["33","    ...sortBy(unknown, link => link.name && link.name.toLowerCase())"],"delete":["33","    ...sortBy(unknown, link => link.name!.toLowerCase())"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/__tests__\/ProjectCard-test.tsx":[{"add":["24","  const wrapper = shallowRender();","25","  expect(wrapper.find('.account-project-key').text()).toBe('key');","27","    wrapper","29","      .find('Link')","35","  const wrapper = shallowRender({ description: 'bla' });","36","  expect(wrapper.find('.account-project-description').text()).toBe('bla');","40","  const wrapper = shallowRender();","41","  expect(wrapper.find('.account-project-description').length).toBe(0);","42","  expect(wrapper.find('.account-project-quality-gate').length).toBe(0);","43","  expect(wrapper.find('.account-project-links').length).toBe(0);","47","  const wrapper = shallowRender({ lastAnalysisDate: '2016-05-17' });","48","  expect(wrapper.find('.account-project-analysis DateFromNow')).toHaveLength(1);","52","  const wrapper = shallowRender();","53","  expect(wrapper.find('.account-project-analysis').text()).toContain(","59","  const wrapper = shallowRender({ qualityGate: 'ERROR' });","61","    wrapper","63","      .find('Level')","69","  const wrapper = shallowRender({","70","    links: [{ name: 'name', type: 'type', href: 'href' }]","71","  });","72","  expect(wrapper.find('MetaLink').length).toBe(1);","74","","75","function shallowRender(project: Partial<T.MyProject> = {}) {","76","  return shallow(<ProjectCard project={{ key: 'key', links: [], name: 'name', ...project }} \/>);","77","}"],"delete":["21","import { Link } from 'react-router';","23","import Level from '..\/..\/..\/..\/components\/ui\/Level';","24","","25","const BASE = { key: 'key', links: [], name: 'name' };","28","  const project = { ...BASE };","29","  const output = shallow(<ProjectCard project={project} \/>);","30","  expect(output.find('.account-project-key').text()).toBe('key');","32","    output","34","      .find(Link)","40","  const project = { ...BASE, description: 'bla' };","41","  const output = shallow(<ProjectCard project={project} \/>);","42","  expect(output.find('.account-project-description').text()).toBe('bla');","46","  const project = { ...BASE };","47","  const output = shallow(<ProjectCard project={project} \/>);","48","  expect(output.find('.account-project-description').length).toBe(0);","49","  expect(output.find('.account-project-quality-gate').length).toBe(0);","50","  expect(output.find('.account-project-links').length).toBe(0);","54","  const project = { ...BASE, lastAnalysisDate: '2016-05-17' };","55","  const output = shallow(<ProjectCard project={project} \/>);","56","  expect(output.find('.account-project-analysis DateFromNow')).toHaveLength(1);","60","  const project = { ...BASE };","61","  const output = shallow(<ProjectCard project={project} \/>);","62","  expect(output.find('.account-project-analysis').text()).toContain(","68","  const project = { ...BASE, qualityGate: 'ERROR' };","69","  const output = shallow(<ProjectCard project={project} \/>);","71","    output","73","      .find(Level)","79","  const project = {","80","    ...BASE,","81","    links: [{ name: 'n', type: 't', href: 'h' }]","82","  };","83","  const output = shallow(<ProjectCard project={project} \/>);","84","  expect(output.find('.account-project-links').find('li').length).toBe(1);"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.tsx.snap":[{"add":["9","    title=\"Foo\"","27","    title=\"Foo\"","45","    title=\"Foo\"","63","    title=\"Foo\"","74","exports[`should match snapshot 2`] = `","75","<li>","76","  <a","77","    className=\"link-with-icon\"","78","    href=\"http:\/\/example.com\"","79","    rel=\"nofollow noreferrer noopener\"","80","    target=\"_blank\"","81","    title=\"Foo\"","82","  >","83","    <ProjectLinkIcon","84","      className=\"little-spacer-right\"","85","      type=\"foo\"","86","    \/>","87","  <\/a>","88","<\/li>","89","`;","90","","99","    title=\"Dangerous\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":[{"add":[],"delete":["476",".copy-paste-link .overview-key {","477","  width: 90%;","478","}","479","","480",".copy-paste-link .close {","481","  color: #000;","482","  border-bottom: 0;","483","  height: 100%;","484","  display: inline-block;","485","  margin-left: 5px;","486","  box-sizing: border-box;","487","}","488","","489",".copy-paste-link .close svg {","490","  vertical-align: sub;","491","}","492",""]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":[{"add":["26","import MetaLink from '..\/..\/overview\/meta\/MetaLink';","27","import { orderLinks } from '..\/..\/projectLinks\/utils';","35","  const { links } = project;","36","","37","  const orderedLinks: T.ProjectLink[] = orderLinks(","38","    links.map((link, i) => {","39","      const { href, name, type } = link;","40","      return {","41","        id: `link-${i}`,","42","        name,","43","        type,","44","        url: href","45","      };","46","    })","47","  );","48","","87","      {orderedLinks.length > 0 && (","90","            {orderedLinks.map(link => (","91","              <MetaLink iconOnly={true} key={link.id} link={link} \/>"],"delete":["20","import { sortBy } from 'lodash';","26","import ProjectLinkIcon from '..\/..\/..\/components\/icons-components\/ProjectLinkIcon';","35","  const links = sortBy(project.links, 'type');","74","      {links.length > 0 && (","77","            {links.map(link => (","78","              <li key={link.type}>","79","                <a","80","                  className=\"link-with-icon\"","81","                  href={link.href}","82","                  rel=\"nofollow\"","83","                  target=\"_blank\"","84","                  title={link.name}>","85","                  <ProjectLinkIcon type={link.type} \/>","86","                <\/a>","87","              <\/li>"]}]}},"d835fdaa1d594451b554af805db9869134c716df":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectBranches\/components\/SettingForm.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaGradle-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/ClangGCC.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/MSBuildScanner-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/ActivationFormModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/testMocks.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/MSBuildScanner.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsDescription.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleDetailsParameters-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/DotNet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Msvc.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/charts\/__tests__\/TreeMap-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/SQScanner-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsParameters.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/BuildWrapper-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Other-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaMaven.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/ClangGCC-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/BuildWrapper.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/SQScanner.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleDetailsParameters-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/SubCategoryDefinitionsList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchShowMore-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaGradle.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.tsx":"MODIFY","server\/sonar-docs\/src\/templates\/page.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchShowMore.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/DotNet-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/charts\/TreeMapRect.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/CustomRuleFormModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaMaven-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/GenerateSecretKeyForm.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Other.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Msvc-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectBranches\/components\/SettingForm.tsx":[{"add":["23","import { sanitizeTranslation } from '..\/..\/settings\/utils';","99","            dangerouslySetInnerHTML={{","100","              __html: sanitizeTranslation(translate(`property.${setting.key}.description`))","101","            }}"],"delete":["98","            dangerouslySetInnerHTML={{ __html: translate(`property.${setting.key}.description`) }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaGradle-test.tsx.snap":[{"add":["37","  >","38","    <FormattedMessage","39","      defaultMessage=\"onboarding.analysis.docs\"","40","      id=\"onboarding.analysis.docs\"","41","      values={","42","        Object {","43","          \"link\": <a","44","            href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","45","            rel=\"noopener noreferrer\"","46","            target=\"_blank\"","47","          >","48","            onboarding.analysis.java.gradle.docs_link","49","          <\/a>,","50","        }","52","    \/>","53","  <\/p>","56","  >","57","    onboarding.analysis.browse_url_after_analysis","58","  <\/p>","97","  >","98","    <FormattedMessage","99","      defaultMessage=\"onboarding.analysis.docs\"","100","      id=\"onboarding.analysis.docs\"","101","      values={","102","        Object {","103","          \"link\": <a","104","            href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","105","            rel=\"noopener noreferrer\"","106","            target=\"_blank\"","107","          >","108","            onboarding.analysis.java.gradle.docs_link","109","          <\/a>,","110","        }","112","    \/>","113","  <\/p>","116","  >","117","    onboarding.analysis.browse_url_after_analysis","118","  <\/p>","157","  >","158","    <FormattedMessage","159","      defaultMessage=\"onboarding.analysis.docs\"","160","      id=\"onboarding.analysis.docs\"","161","      values={","162","        Object {","163","          \"link\": <a","164","            href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","165","            rel=\"noopener noreferrer\"","166","            target=\"_blank\"","167","          >","168","            onboarding.analysis.java.gradle.docs_link","169","          <\/a>,","170","        }","172","    \/>","173","  <\/p>","176","  >","177","    onboarding.analysis.auto_refresh_after_analysis","178","  <\/p>"],"delete":["37","    dangerouslySetInnerHTML={","38","      Object {","39","        \"__html\": \"onboarding.analysis.java.gradle.docs\",","41","    }","42","  \/>","45","    dangerouslySetInnerHTML={","46","      Object {","47","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","48","      }","49","    }","50","  \/>","89","    dangerouslySetInnerHTML={","90","      Object {","91","        \"__html\": \"onboarding.analysis.java.gradle.docs\",","93","    }","94","  \/>","97","    dangerouslySetInnerHTML={","98","      Object {","99","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","100","      }","101","    }","102","  \/>","141","    dangerouslySetInnerHTML={","142","      Object {","143","        \"__html\": \"onboarding.analysis.java.gradle.docs\",","145","    }","146","  \/>","149","    dangerouslySetInnerHTML={","150","      Object {","151","        \"__html\": \"onboarding.analysis.auto_refresh_after_analysis\",","152","      }","153","    }","154","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/ClangGCC.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","66","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","70","      <p className=\"big-spacer-top markdown\">","71","        <FormattedMessage","72","          defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}","73","          id=\"onboarding.analysis.sq_scanner.docs\"","74","          values={{","75","            link: (","76","              <a","77","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","78","                rel=\"noopener noreferrer\"","79","                target=\"_blank\">","80","                {translate('onboarding.analysis.sq_scanner.docs_link')}","81","              <\/a>","82","            )","83","          }}","84","        \/>","85","      <\/p>"],"delete":["65","        {transformedMessage => (","66","          <p","67","            className=\"spacer-bottom markdown\"","68","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","69","          \/>","70","        )}","74","      <p","75","        className=\"big-spacer-top markdown\"","76","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.sq_scanner.docs') }}","77","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":[{"add":["54","          \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/MSBuildScanner-test.tsx.snap":[{"add":["11","  >","12","    <FormattedMessage","13","      defaultMessage=\"onboarding.analysis.msbuild.text\"","14","      id=\"onboarding.analysis.msbuild.text\"","15","      values={","16","        Object {","17","          \"code\": <code>","18","            %PATH%","19","          <\/code>,","20","        }","22","    \/>","23","  <\/p>"],"delete":["11","    dangerouslySetInnerHTML={","12","      Object {","13","        \"__html\": \"onboarding.analysis.msbuild.text\",","15","    }","16","  \/>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["938","property.sonar.leak.period.description.intro=Period used to compare measures and track new issues. Values are:","939","property.sonar.leak.period.description.item1=Number of days before  analysis, for example 5.","940","property.sonar.leak.period.description.item2=A custom date. Format is yyyy-MM-dd, for example 2010-12-25","941","property.sonar.leak.period.description.item3='previous_version' to compare to the previous version in the project history","942","property.sonar.leak.period.description.item4=A version, for example '1.2' or 'BASELINE'","943","property.sonar.leak.period.description.details1=When specifying a number of days or a date, the snapshot selected as the baseline for comparison is the first one available inside the corresponding time range. Specifically, the first analysis in the range is considered to be before the New Code Period. ","944","property.sonar.leak.period.description.details2=Changing this property only takes effect after subsequent project analyses.","954","search.show_more.hint=Press {key} to display","2947","onboarding.analysis.docs=Please visit the {link} for more details.","2948","","2951","onboarding.analysis.java.maven.docs_link=official documentation of the Scanner for Maven","2954","onboarding.analysis.java.gradle.text.1=Running an analysis with Gradle is straighforward. You just need to declare the {plugin_code} plugin in your {filename} file:","2956","onboarding.analysis.java.gradle.docs_link=official documentation of the Scanner for Gradle","2959","onboarding.analysis.msbuild.text=And add the executable's directory to the {code} environment variable","2962","onboarding.analysis.msbuild.docs_link=official documentation of the Scanner for MSBuild","2967","onboarding.analysis.build_wrapper.text=And add the executable's directory to the {env_var} environment variable","2972","onboarding.analysis.sq_scanner.text=And add the {dir} directory to the {env_var} environment variable","2975","onboarding.analysis.sq_scanner.docs=Please visit the {link} for more details.","2976","onboarding.analysis.sq_scanner.docs_link=official documentation of the Scanner","3070","encryption.how_to_use.content1=Store the secret key in the file {secret_file} of the server. This file can be relocated by defining the property {property} in {propreties_file}","3071","encryption.how_to_use.content2=Restrict access to this file by making it readable and by owner only","3072","encryption.how_to_use.content3=Restart the server if the property {property} has been set or changed.","3073","encryption.how_to_use.content4=For each property that you want to encrypt, generate the encrypted value and replace the original value wherever it is stored (configuration files, command lines).","3162","maintenance.sonarqube_is_under_maintenance.1=While waiting, you might want to investigate {link} to extend the current functionality.","3163","maintenance.sonarqube_is_under_maintenance_link.1=new plugins","3164","maintenance.sonarqube_is_under_maintenance.2=If you are an administrator and have no idea why this message is being shown, you should read the {link}.","3165","maintenance.sonarqube_is_under_maintenance_link.2=upgrade guide"],"delete":["947","search.show_more.hint=Press {0} to display","2942","onboarding.analysis.java.maven.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\" target=\"_blank\">official documentation of the Scanner for Maven<\/a> for more details.","2945","onboarding.analysis.java.gradle.text.1=Running an analysis with Gradle is straighforward. You just need to declare the <code>org.sonarqube<\/code> plugin in your <code>build.gradle<\/code> file:","2947","onboarding.analysis.java.gradle.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\" target=\"_blank\">official documentation of the Scanner for Gradle<\/a> for more details.","2950","onboarding.analysis.msbuild.text=And add the executable's directory to the <code>%PATH%<\/code> environment variable","2953","onboarding.analysis.msbuild.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\" target=\"_blank\">official documentation of the Scanner for MSBuild<\/a> for more details.","2958","onboarding.analysis.build_wrapper.text.linux=And add the executable's directory to the <code>PATH<\/code> environment variable","2959","onboarding.analysis.build_wrapper.text.win=And add the executable's directory to the <code>%PATH%<\/code> environment variable","2960","onboarding.analysis.build_wrapper.text.mac=And add the executable's directory to the <code>PATH<\/code> environment variable","2965","onboarding.analysis.sq_scanner.text.linux=And add the <code>bin<\/code> directory to the <code>PATH<\/code> environment variable","2966","onboarding.analysis.sq_scanner.text.win=And add the <code>bin<\/code> directory to the <code>%PATH%<\/code> environment variable","2967","onboarding.analysis.sq_scanner.text.mac=And add the <code>bin<\/code> directory to the <code>PATH<\/code> environment variable","2970","onboarding.analysis.sq_scanner.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\" target=\"_blank\">official documentation of the Scanner<\/a> for more details.","3064","encryption.how_to_use.content=<ul><li>Store the secret key in the file <code>~\/.sonar\/sonar-secret.txt<\/code> of the server. This file can be relocated by defining the property <code>sonar.secretKeyPath<\/code> in <code>conf\/sonar.properties<\/code><\/li><li>Restrict access to this file by making it readable and by owner only<\/li><li>Restart the server if the property <code>sonar.secretKeyPath<\/code> has been set or changed.<\/li><li>For each property that you want to encrypt, generate the encrypted value and replace the original value wherever it is stored (configuration files, command lines).<\/li><\/ul>","3065","","3154","maintenance.sonarqube_is_under_maintenance.1=While waiting, you might want to investigate <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">new plugins<\/a> to extend the current functionality.","3155","maintenance.sonarqube_is_under_maintenance.2=If you are an administrator and have no idea why this message is being shown, you should read the <a href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\">upgrade guide<\/a>."]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/ActivationFormModal.tsx":[{"add":["226","                    \/\/ Safe: defined by rule creator (instance admin?)"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":[{"add":["21","import { FormattedMessage } from 'react-intl';","22","import * as classNames from 'classnames';","204","                    <p className=\"maintenance-text\">","205","                      <FormattedMessage","206","                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.1')}","207","                        id=\"maintenance.sonarqube_is_under_maintenance.1\"","208","                        values={{","209","                          link: (","210","                            <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">","211","                              {translate('maintenance.sonarqube_is_under_maintenance_link.1')}","212","                            <\/a>","213","                          )","214","                        }}","215","                      \/>","216","                    <\/p>","217","                    <p className=\"maintenance-text\">","218","                      <FormattedMessage","219","                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.2')}","220","                        id=\"maintenance.sonarqube_is_under_maintenance.2\"","221","                        values={{","222","                          link: (","223","                            <a href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\">","224","                              {translate('maintenance.sonarqube_is_under_maintenance_link.2')}","225","                            <\/a>","226","                          )","227","                        }}","228","                      \/>","229","                    <\/p>"],"delete":["20","import * as classNames from 'classnames';","203","                    <p","204","                      className=\"maintenance-text\"","205","                      dangerouslySetInnerHTML={{","206","                        __html: translate('maintenance.sonarqube_is_under_maintenance.1')","207","                      }}","208","                    \/>","209","                    <p","210","                      className=\"maintenance-text\"","211","                      dangerouslySetInnerHTML={{","212","                        __html: translate('maintenance.sonarqube_is_under_maintenance.2')","213","                      }}","214","                    \/>"]}],"server\/sonar-web\/package.json":[{"add":["7","    \"@types\/dompurify\": \"^0.0.32\",","19","    \"dompurify\": \"^1.0.11\",","82","    \"@types\/sanitize-html\": \"1.20.0\","],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/testMocks.ts":[{"add":["621","export function mockRuleDetailsParameter(","622","  overrides: Partial<T.RuleParameter> = {}","623","): T.RuleParameter {","624","  return {","625","    defaultValue: '1',","626","    htmlDesc: 'description',","627","    key: '1',","628","    type: 'number',","629","    ...overrides","630","  };","631","}","632",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/MSBuildScanner.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","31","      <p className=\"spacer-bottom markdown\">","32","        <FormattedMessage","33","          defaultMessage={translate('onboarding.analysis.msbuild.text')}","34","          id=\"onboarding.analysis.msbuild.text\"","35","          values={{ code: <code>%PATH%<\/code> }}","36","        \/>","37","      <\/p>"],"delete":["30","      <p","31","        className=\"spacer-bottom markdown\"","32","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.msbuild.text') }}","33","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsDescription.tsx":[{"add":["114","          \/\/ Safe: defined by rule creator (instance admin?)","196","            \/\/ Safe: defined by rule creator (instance admin?)"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/utils-test.ts":[{"add":["19","import { getEmptyValue, getDefaultValue, sanitizeTranslation } from '..\/utils';","78","","79","describe('sanitizeTranslation', () => {","80","  it('should preserve formatting tags', () => {","81","    const allowed = `","82","    Hi this is <i>in italics<\/i> and <ul>","83","    <li> lists <\/li>","84","    <li> are allowed<\/li>","85","    <\/ul>","86","    <p>","87","    as well. This is <b>Amazing<\/b> and this <strong>bold<\/strong> <br>","88","    and <code>code.is.accepted too<\/code>","89","    <\/p>","90","  `;","91","","92","    const clean = sanitizeTranslation(allowed);","93","    expect(clean).toBe(allowed);","94","  });","95","","96","  \/*","97","   * Test code borrowed from OWASP's sanitizer tests","98","   * https:\/\/github.com\/OWASP\/java-html-sanitizer\/blob\/master\/src\/test\/resources\/org\/owasp\/html\/htmllexerinput1.html","99","   *\/","100","  it('should strip everything else', () => {","101","    const clean = sanitizeTranslation(`<?xml version=\"not-even-close\"?>","102","","103","    <!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.01 Transitional\/\/EN\">","104","    ","105","    <!-- a test input for HtmlLexer -->","106","    ","107","    <html>","108","    <head>","109","    <title>Test File For HtmlLexer &amp; HtmlParser<\/title>","110","    <link rel=stylesheet type=\"text\/css\" src=foo\/bar.css \/>","111","    <body","112","     bgcolor=white","113","     linkcolor = \"blue\"","114","     onload=\"document.writeln(","115","      &quot;&lt;p&gt;properly escaped code in a handler&lt;\/p&gt;&quot;);\"","116","    >","117","    ","118","    <script type=\"text\/javascript\"><!--","119","    document.writeln(\"<p>Some initialization code in global context<\/p>\");","120","    --><\/script>","121","    ","122","    <script type=\"text\/javascript\">","123","    \/\/ hi there","124","    document.writeln(\"<p>More initialization<\/p>\");","125","    <\/script>","126","    ","127","    <div id=clickydiv onclick=\"handleClicky(event)\"","128","     ondblclick=this.onclick(event);return(false)>","129","    Clicky","130","    <\/div>","131","    ","132","    <input id=foo>","133","    <gxp:attr name=\"onchange\">alert(\"&lt;b&gt;hi&lt;\/b&gt;\");<\/gxp:attr>","134","    <\/input>","135","    ","136","    <pre>&lt;div id=notarealtag onclick=notcode()&gt;<\/pre>","137","    ","138","    <!-- some tokenization corner cases -->","139","    ","140","    < notatag <atag\/>","141","    ","142","    <\/ notatag> <\/redundantlyclosed\/>","143","    ","144","    <messyattributes a=b=c d=\"e\"f=g h =i j= k l = m checked n=\"o\"\/>","145","    ","146","    < < < all in one text block > > >","147","    ","148","    <xmp>Make sure that <!-- comments don't obscure the xmp close<\/xmp>","149","    <% # some php code here","150","    write(\"<pre>$horriblySyntacticConstruct1<\/pre>\\n\\n\");","151","    %>","152","    <script type=\"text\/javascript\"><!--","153","    alert(\"hello world\");","154","    \/\/ --><\/script>","155","    ","156","    <script>\/* <\/script> *\/alert('hi');<\/script>","157","    <script><!--\/* <\/script> *\/alert('hi');--><\/script>","158","    ","159","    <xmp style=color:blue><!--\/* <\/xmp> *\/alert('hi');--><\/xmp>","160","    ","161","    <style><!-- p { contentf: '<\/style>' } --><\/style>","162","    <style>Foo<!-- > <\/style> --><\/style>","163","    <textarea><!-- Zoicks <\/textarea>--><\/textarea>","164","    <!-- An escaping text span start may share its U+002D HYPHEN-MINUS characters","165","       - with its corresponding escaping text span end. -->","166","    <script><!--><\/script>","167","    <script><!---><\/script>","168","    <script><!----><\/script>","169","    <\/body>","170","    <\/html>","171","    <![CDATA[ No such thing as a CDATA> section in HTML ]]>","172","    <script>a<b<\/script>","173","    <img src=foo.gif \/><a href=><a href=\/>","174","    <span title=malformed attribs' do=don't id=foo checked onclick=\"a<b\">Bar<\/span>`);","175","","176","    expect(clean.replace(\/\\s+\/g, '')).toBe(","177","      `Clickyalert(\"&lt;b&gt;hi&lt;\/b&gt;\");&lt;divid=notarealtagonclick=notcode()&gt;&lt;notatag&lt;&lt;&lt;allinonetextblock&gt;&gt;&gt;Makesurethat&lt;%#somephpcodeherewrite(\"$horriblySyntacticConstruct1\");%&gt;*\/alert('hi');*\/alert('hi');--&gt;*\/alert('hi');--&gt;'}--&gt;--&gt;&lt;!--Zoicks--&gt;sectioninHTML]]&gt;Bar`","178","    );","179","  });","180","});"],"delete":["19","import { getEmptyValue, getDefaultValue } from '..\/utils';"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleDetailsParameters-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/DotNet.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","55","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","60","      <p className=\"big-spacer-top markdown\">","61","        <FormattedMessage","62","          defaultMessage={translate('onboarding.analysis.docs')}","63","          id=\"onboarding.analysis.docs\"","64","          values={{","65","            link: (","66","              <a","67","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","68","                rel=\"noopener noreferrer\"","69","                target=\"_blank\">","70","                {translate('onboarding.analysis.msbuild.docs_link')}","71","              <\/a>","72","            )","73","          }}","74","        \/>","75","      <\/p>"],"delete":["54","        {transformedMessage => (","55","          <p","56","            className=\"spacer-bottom markdown\"","57","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","58","          \/>","59","        )}","64","      <p","65","        className=\"big-spacer-top markdown\"","66","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.msbuild.docs') }}","67","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Msvc.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","58","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","63","      <p className=\"big-spacer-top markdown\">","64","        <FormattedMessage","65","          defaultMessage={translate('onboarding.analysis.docs')}","66","          id=\"onboarding.analysis.docs\"","67","          values={{","68","            link: (","69","              <a","70","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","71","                rel=\"noopener noreferrer\"","72","                target=\"_blank\">","73","                {translate('onboarding.analysis.msbuild.docs_link')}","74","              <\/a>","75","            )","76","          }}","77","        \/>","78","      <\/p>"],"delete":["57","        {transformedMessage => (","58","          <p","59","            className=\"spacer-bottom markdown\"","60","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","61","          \/>","62","        )}","67","      <p","68","        className=\"big-spacer-top markdown\"","69","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.msbuild.docs') }}","70","      \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/__tests__\/TreeMap-test.tsx":[{"add":["20","import { mount } from 'enzyme';","22","import TreeMapRect from '..\/TreeMapRect';","23","import { mockEvent } from '..\/..\/..\/helpers\/testMocks';","25","it('should render correctly', () => {","31","  const onRectClick = jest.fn();","32","  const chart = mount(","33","    <TreeMap height={100} items={items} onRectangleClick={onRectClick} width={100} \/>","35","  const rects = chart.find(TreeMapRect);","36","  expect(rects).toHaveLength(3);","37","","38","  const event: React.MouseEvent<HTMLAnchorElement> = mockEvent({ stopPropagation: jest.fn() });","39","  (rects.first().instance() as TreeMapRect).handleLinkClick(event);","40","  expect(event.stopPropagation).toHaveBeenCalled();","41","","42","  (rects.first().instance() as TreeMapRect).handleRectClick();","43","  expect(onRectClick).toHaveBeenCalledWith('2');"],"delete":["20","import { shallow } from 'enzyme';","23","it('should display', () => {","29","  const chart = shallow(","30","    <TreeMap height={100} items={items} onRectangleClick={() => {}} width={100} \/>","32","  expect(chart.find('TreeMapRect')).toHaveLength(3);"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["26","      >","27","        <FormattedMessage","28","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.1\"","29","          id=\"maintenance.sonarqube_is_under_maintenance.1\"","30","          values={","31","            Object {","32","              \"link\": <a","33","                href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\"","34","              >","35","                maintenance.sonarqube_is_under_maintenance_link.1","36","              <\/a>,","37","            }","39","        \/>","40","      <\/p>","43","      >","44","        <FormattedMessage","45","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.2\"","46","          id=\"maintenance.sonarqube_is_under_maintenance.2\"","47","          values={","48","            Object {","49","              \"link\": <a","50","                href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\"","51","              >","52","                maintenance.sonarqube_is_under_maintenance_link.2","53","              <\/a>,","54","            }","56","        \/>","57","      <\/p>","87","      >","88","        <FormattedMessage","89","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.1\"","90","          id=\"maintenance.sonarqube_is_under_maintenance.1\"","91","          values={","92","            Object {","93","              \"link\": <a","94","                href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\"","95","              >","96","                maintenance.sonarqube_is_under_maintenance_link.1","97","              <\/a>,","98","            }","100","        \/>","101","      <\/p>","104","      >","105","        <FormattedMessage","106","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.2\"","107","          id=\"maintenance.sonarqube_is_under_maintenance.2\"","108","          values={","109","            Object {","110","              \"link\": <a","111","                href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\"","112","              >","113","                maintenance.sonarqube_is_under_maintenance_link.2","114","              <\/a>,","115","            }","117","        \/>","118","      <\/p>"],"delete":["26","        dangerouslySetInnerHTML={","27","          Object {","28","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.1\",","30","        }","31","      \/>","34","        dangerouslySetInnerHTML={","35","          Object {","36","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.2\",","38","        }","39","      \/>","69","        dangerouslySetInnerHTML={","70","          Object {","71","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.1\",","73","        }","74","      \/>","77","        dangerouslySetInnerHTML={","78","          Object {","79","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.2\",","81","        }","82","      \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":[{"add":["139","                  \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/SQScanner-test.tsx.snap":[{"add":["11","  >","12","    <FormattedMessage","13","      defaultMessage=\"onboarding.analysis.sq_scanner.text\"","14","      id=\"onboarding.analysis.sq_scanner.text\"","15","      values={","16","        Object {","17","          \"dir\": <code>","18","            bin","19","          <\/code>,","20","          \"env_var\": <code>","21","            %PATH%","22","          <\/code>,","23","        }","25","    \/>","26","  <\/p>","49","  >","50","    <FormattedMessage","51","      defaultMessage=\"onboarding.analysis.sq_scanner.text\"","52","      id=\"onboarding.analysis.sq_scanner.text\"","53","      values={","54","        Object {","55","          \"dir\": <code>","56","            bin","57","          <\/code>,","58","          \"env_var\": <code>","59","            PATH","60","          <\/code>,","61","        }","63","    \/>","64","  <\/p>","87","  >","88","    <FormattedMessage","89","      defaultMessage=\"onboarding.analysis.sq_scanner.text\"","90","      id=\"onboarding.analysis.sq_scanner.text\"","91","      values={","92","        Object {","93","          \"dir\": <code>","94","            bin","95","          <\/code>,","96","          \"env_var\": <code>","97","            PATH","98","          <\/code>,","99","        }","101","    \/>","102","  <\/p>"],"delete":["11","    dangerouslySetInnerHTML={","12","      Object {","13","        \"__html\": \"onboarding.analysis.sq_scanner.text.win\",","15","    }","16","  \/>","39","    dangerouslySetInnerHTML={","40","      Object {","41","        \"__html\": \"onboarding.analysis.sq_scanner.text.linux\",","43","    }","44","  \/>","67","    dangerouslySetInnerHTML={","68","      Object {","69","        \"__html\": \"onboarding.analysis.sq_scanner.text.mac\",","71","    }","72","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsParameters.tsx":[{"add":["31","        <p \/\/ Safe: defined by rule creator (instance admin?)","32","          dangerouslySetInnerHTML={{ __html: param.htmlDesc || '' }}","33","        \/>"],"delete":["31","        <p dangerouslySetInnerHTML={{ __html: param.htmlDesc || '' }} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/BuildWrapper-test.tsx.snap":[{"add":["11","  >","12","    <FormattedMessage","13","      defaultMessage=\"onboarding.analysis.build_wrapper.text\"","14","      id=\"onboarding.analysis.build_wrapper.text\"","15","      values={","16","        Object {","17","          \"env_var\": <code>","18","            %PATH%","19","          <\/code>,","20","        }","22","    \/>","23","  <\/p>","46","  >","47","    <FormattedMessage","48","      defaultMessage=\"onboarding.analysis.build_wrapper.text\"","49","      id=\"onboarding.analysis.build_wrapper.text\"","50","      values={","51","        Object {","52","          \"env_var\": <code>","53","            PATH","54","          <\/code>,","55","        }","57","    \/>","58","  <\/p>","81","  >","82","    <FormattedMessage","83","      defaultMessage=\"onboarding.analysis.build_wrapper.text\"","84","      id=\"onboarding.analysis.build_wrapper.text\"","85","      values={","86","        Object {","87","          \"env_var\": <code>","88","            PATH","89","          <\/code>,","90","        }","92","    \/>","93","  <\/p>"],"delete":["11","    dangerouslySetInnerHTML={","12","      Object {","13","        \"__html\": \"onboarding.analysis.build_wrapper.text.win\",","15","    }","16","  \/>","39","    dangerouslySetInnerHTML={","40","      Object {","41","        \"__html\": \"onboarding.analysis.build_wrapper.text.linux\",","43","    }","44","  \/>","67","    dangerouslySetInnerHTML={","68","      Object {","69","        \"__html\": \"onboarding.analysis.build_wrapper.text.mac\",","71","    }","72","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Other-test.tsx.snap":[{"add":["32","  >","33","    <FormattedMessage","34","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","35","      id=\"onboarding.analysis.sq_scanner.docs\"","36","      values={","37","        Object {","38","          \"link\": <a","39","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","40","            rel=\"noopener noreferrer\"","41","            target=\"_blank\"","42","          >","43","            onboarding.analysis.sq_scanner.docs_link","44","          <\/a>,","45","        }","47","    \/>","48","  <\/p>","82","  >","83","    <FormattedMessage","84","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","85","      id=\"onboarding.analysis.sq_scanner.docs\"","86","      values={","87","        Object {","88","          \"link\": <a","89","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","90","            rel=\"noopener noreferrer\"","91","            target=\"_blank\"","92","          >","93","            onboarding.analysis.sq_scanner.docs_link","94","          <\/a>,","95","        }","97","    \/>","98","  <\/p>","132","  >","133","    <FormattedMessage","134","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","135","      id=\"onboarding.analysis.sq_scanner.docs\"","136","      values={","137","        Object {","138","          \"link\": <a","139","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","140","            rel=\"noopener noreferrer\"","141","            target=\"_blank\"","142","          >","143","            onboarding.analysis.sq_scanner.docs_link","144","          <\/a>,","145","        }","147","    \/>","148","  <\/p>"],"delete":["32","    dangerouslySetInnerHTML={","33","      Object {","34","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","36","    }","37","  \/>","71","    dangerouslySetInnerHTML={","72","      Object {","73","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","75","    }","76","  \/>","110","    dangerouslySetInnerHTML={","111","      Object {","112","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","114","    }","115","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaMaven.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","48","      <p className=\"big-spacer-top markdown\">","49","        <FormattedMessage","50","          defaultMessage={translate('onboarding.analysis.docs')}","51","          id=\"onboarding.analysis.docs\"","52","          values={{","53","            link: (","54","              <a","55","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","56","                rel=\"noopener noreferrer\"","57","                target=\"_blank\">","58","                {translate('onboarding.analysis.java.maven.docs_link')}","59","              <\/a>","60","            )","61","          }}","62","        \/>","63","      <\/p>","64","      <p className=\"big-spacer-top markdown\">","65","        {props.projectKey","66","          ? translate('onboarding.analysis.auto_refresh_after_analysis')","67","          : translate('onboarding.analysis.browse_url_after_analysis')}","68","      <\/p>"],"delete":["47","      <p","48","        className=\"big-spacer-top markdown\"","49","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.java.maven.docs') }}","50","      \/>","51","      <p","52","        className=\"big-spacer-top markdown\"","53","        dangerouslySetInnerHTML={{","54","          __html: props.projectKey","55","            ? translate('onboarding.analysis.auto_refresh_after_analysis')","56","            : translate('onboarding.analysis.browse_url_after_analysis')","57","        }}","58","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/ClangGCC-test.tsx.snap":[{"add":["40","  >","41","    <FormattedMessage","42","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","43","      id=\"onboarding.analysis.sq_scanner.docs\"","44","      values={","45","        Object {","46","          \"link\": <a","47","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","48","            rel=\"noopener noreferrer\"","49","            target=\"_blank\"","50","          >","51","            onboarding.analysis.sq_scanner.docs_link","52","          <\/a>,","53","        }","55","    \/>","56","  <\/p>","98","  >","99","    <FormattedMessage","100","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","101","      id=\"onboarding.analysis.sq_scanner.docs\"","102","      values={","103","        Object {","104","          \"link\": <a","105","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","106","            rel=\"noopener noreferrer\"","107","            target=\"_blank\"","108","          >","109","            onboarding.analysis.sq_scanner.docs_link","110","          <\/a>,","111","        }","113","    \/>","114","  <\/p>","157","  >","158","    <FormattedMessage","159","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","160","      id=\"onboarding.analysis.sq_scanner.docs\"","161","      values={","162","        Object {","163","          \"link\": <a","164","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","165","            rel=\"noopener noreferrer\"","166","            target=\"_blank\"","167","          >","168","            onboarding.analysis.sq_scanner.docs_link","169","          <\/a>,","170","        }","172","    \/>","173","  <\/p>"],"delete":["40","    dangerouslySetInnerHTML={","41","      Object {","42","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","44","    }","45","  \/>","87","    dangerouslySetInnerHTML={","88","      Object {","89","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","91","    }","92","  \/>","135","    dangerouslySetInnerHTML={","136","      Object {","137","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","139","    }","140","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.tsx":[{"add":["121",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/BuildWrapper.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","41","      <p className=\"spacer-bottom markdown\">","42","        <FormattedMessage","43","          defaultMessage={translate('onboarding.analysis.build_wrapper.text')}","44","          id=\"onboarding.analysis.build_wrapper.text\"","45","          values={{","46","            env_var: <code>{props.os === 'win' ? '%PATH%' : 'PATH'}<\/code>","47","          }}","48","        \/>","49","      <\/p>"],"delete":["40","      <p","41","        className=\"spacer-bottom markdown\"","42","        dangerouslySetInnerHTML={{","43","          __html: translate('onboarding.analysis.build_wrapper.text', props.os)","44","        }}","45","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/SQScanner.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","34","      <p className=\"spacer-bottom markdown\">","35","        <FormattedMessage","36","          defaultMessage={translate('onboarding.analysis.sq_scanner.text')}","37","          id=\"onboarding.analysis.sq_scanner.text\"","38","          values={{","39","            dir: <code>bin<\/code>,","40","            env_var: <code>{props.os === 'win' ? '%PATH%' : 'PATH'}<\/code>","41","          }}","42","        \/>","43","      <\/p>"],"delete":["33","      <p","34","        className=\"spacer-bottom markdown\"","35","        dangerouslySetInnerHTML={{","36","          __html: translate('onboarding.analysis.sq_scanner.text', props.os)","37","        }}","38","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.tsx":[{"add":["28","  isDefaultOrInherited,","29","  sanitizeTranslation","145","              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}"],"delete":["28","  isDefaultOrInherited","144","              dangerouslySetInnerHTML={{ __html: description }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleDetailsParameters-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/SubCategoryDefinitionsList.tsx":[{"add":["23","import { getSubCategoryName, getSubCategoryDescription, sanitizeTranslation } from '..\/utils';","76","                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}"],"delete":["23","import { getSubCategoryName, getSubCategoryDescription } from '..\/utils';","76","                dangerouslySetInnerHTML={{ __html: subCategory.description }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/utils.ts":[{"add":["19","import { sanitize } from 'dompurify';","38","export function sanitizeTranslation(html: string) {","39","  return sanitize(html, {","40","    ALLOWED_TAGS: ['b', 'br', 'code', 'i', 'li', 'p', 'strong', 'ul']","41","  });","42","}","43",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":[{"add":["101","                    \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":[{"add":["91","          \/\/ Safe: Comes from the backend, after markdown transformation to html"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchShowMore-test.tsx.snap":[{"add":["21","      >","22","        <FormattedMessage","23","          defaultMessage=\"search.show_more.hint\"","24","          id=\"search.show_more.hint\"","25","          values={","26","            Object {","27","              \"key\": <span","28","                className=\"shortcut-button shortcut-button-small\"","29","              >","30","                Enter","31","              <\/span>,","32","            }","34","        \/>","35","      <\/div>"],"delete":["21","        dangerouslySetInnerHTML={","22","          Object {","23","            \"__html\": \"search.show_more.hint.<span class=\\\\\"shortcut-button shortcut-button-small\\\\\">Enter<\/span>\",","25","        }","26","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaGradle.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","48","          <p className=\"spacer-bottom markdown\">","49","            <FormattedMessage","50","              defaultMessage={transformedMessage}","51","              id=\"onboarding.analysis.java.gradle.text.1\"","52","              values={{","53","                plugin_code: <code>org.sonarqube<\/code>,","54","                filename: <code>build.gradle<\/code>","55","              }}","56","            \/>","57","          <\/p>","65","      <p className=\"big-spacer-top markdown\">","66","        <FormattedMessage","67","          defaultMessage={translate('onboarding.analysis.docs')}","68","          id=\"onboarding.analysis.docs\"","69","          values={{","70","            link: (","71","              <a","72","                href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","73","                rel=\"noopener noreferrer\"","74","                target=\"_blank\">","75","                {translate('onboarding.analysis.java.gradle.docs_link')}","76","              <\/a>","77","            )","78","          }}","79","        \/>","80","      <\/p>","81","      <p className=\"big-spacer-top markdown\">","82","        {props.projectKey","83","          ? translate('onboarding.analysis.auto_refresh_after_analysis')","84","          : translate('onboarding.analysis.browse_url_after_analysis')}","85","      <\/p>"],"delete":["47","          <p","48","            className=\"spacer-bottom markdown\"","49","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","50","          \/>","58","      <p","59","        className=\"big-spacer-top markdown\"","60","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.java.gradle.docs') }}","61","      \/>","62","      <p","63","        className=\"big-spacer-top markdown\"","64","        dangerouslySetInnerHTML={{","65","          __html: props.projectKey","66","            ? translate('onboarding.analysis.auto_refresh_after_analysis')","67","            : translate('onboarding.analysis.browse_url_after_analysis')","68","        }}","69","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.tsx":[{"add":["160","            <div","161","              className=\"about-page-section\"","162","              \/\/ Safe: Defined by instance admin","163","              dangerouslySetInnerHTML={{ __html: customText }}","164","            \/>"],"delete":["160","            <div className=\"about-page-section\" dangerouslySetInnerHTML={{ __html: customText }} \/>"]}],"server\/sonar-docs\/src\/templates\/page.tsx":[{"add":["106","        <div","107","          className=\"markdown-content\"","108","          \/\/ Safe: comes from the backend","109","          dangerouslySetInnerHTML={{ __html: htmlPageContent }}","110","        \/>"],"delete":["106","        <div className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: htmlPageContent }} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchShowMore.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","23","import { translate } from '..\/..\/..\/helpers\/l10n';","64","            <div className=\"pull-right text-muted-2 menu-footer-note\">","65","              <FormattedMessage","66","                defaultMessage={translate('search.show_more.hint')}","67","                id={'search.show_more.hint'}","68","                values={{","69","                  key: <span className=\"shortcut-button shortcut-button-small\">Enter<\/span>","70","                }}","71","              \/>","72","            <\/div>"],"delete":["22","import { translate, translateWithParameters } from '..\/..\/..\/helpers\/l10n';","63","            <div","64","              className=\"pull-right text-muted-2 menu-footer-note\"","65","              dangerouslySetInnerHTML={{","66","                __html: translateWithParameters(","67","                  'search.show_more.hint',","68","                  '<span class=\"shortcut-button shortcut-button-small\">Enter<\/span>'","69","                )","70","              }}","71","            \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/DotNet-test.tsx.snap":[{"add":["41","  >","42","    <FormattedMessage","43","      defaultMessage=\"onboarding.analysis.docs\"","44","      id=\"onboarding.analysis.docs\"","45","      values={","46","        Object {","47","          \"link\": <a","48","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","49","            rel=\"noopener noreferrer\"","50","            target=\"_blank\"","51","          >","52","            onboarding.analysis.msbuild.docs_link","53","          <\/a>,","54","        }","56","    \/>","57","  <\/p>","101","  >","102","    <FormattedMessage","103","      defaultMessage=\"onboarding.analysis.docs\"","104","      id=\"onboarding.analysis.docs\"","105","      values={","106","        Object {","107","          \"link\": <a","108","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","109","            rel=\"noopener noreferrer\"","110","            target=\"_blank\"","111","          >","112","            onboarding.analysis.msbuild.docs_link","113","          <\/a>,","114","        }","116","    \/>","117","  <\/p>"],"delete":["41","    dangerouslySetInnerHTML={","42","      Object {","43","        \"__html\": \"onboarding.analysis.msbuild.docs\",","45","    }","46","  \/>","90","    dangerouslySetInnerHTML={","91","      Object {","92","        \"__html\": \"onboarding.analysis.msbuild.docs\",","94","    }","95","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":[{"add":["173","            \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/TreeMapRect.tsx":[{"add":["99","          {isTextVisible &&","100","            (this.props.prefix ? (","101","              <span className=\"treemap-text\">","102","                {this.props.prefix}","103","                <br \/>","104","                {this.props.label.substr(this.props.prefix.length)}","105","              <\/span>","106","            ) : (","107","              <span className=\"treemap-text\">{this.props.label}<\/span>","108","            ))}"],"delete":["86","    const label = this.props.prefix","87","      ? `${this.props.prefix}<br>${this.props.label.substr(this.props.prefix.length)}`","88","      : this.props.label;","89","","103","          {isTextVisible && (","104","            <span className=\"treemap-text\" dangerouslySetInnerHTML={{ __html: label }} \/>","105","          )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/CustomRuleFormModal.tsx":[{"add":["306","        \/\/ Safe: defined by rule creator (instance admin?)"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaMaven-test.tsx.snap":[{"add":["29","  >","30","    <FormattedMessage","31","      defaultMessage=\"onboarding.analysis.docs\"","32","      id=\"onboarding.analysis.docs\"","33","      values={","34","        Object {","35","          \"link\": <a","36","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","37","            rel=\"noopener noreferrer\"","38","            target=\"_blank\"","39","          >","40","            onboarding.analysis.java.maven.docs_link","41","          <\/a>,","42","        }","44","    \/>","45","  <\/p>","48","  >","49","    onboarding.analysis.browse_url_after_analysis","50","  <\/p>","81","  >","82","    <FormattedMessage","83","      defaultMessage=\"onboarding.analysis.docs\"","84","      id=\"onboarding.analysis.docs\"","85","      values={","86","        Object {","87","          \"link\": <a","88","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","89","            rel=\"noopener noreferrer\"","90","            target=\"_blank\"","91","          >","92","            onboarding.analysis.java.maven.docs_link","93","          <\/a>,","94","        }","96","    \/>","97","  <\/p>","100","  >","101","    onboarding.analysis.browse_url_after_analysis","102","  <\/p>","133","  >","134","    <FormattedMessage","135","      defaultMessage=\"onboarding.analysis.docs\"","136","      id=\"onboarding.analysis.docs\"","137","      values={","138","        Object {","139","          \"link\": <a","140","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","141","            rel=\"noopener noreferrer\"","142","            target=\"_blank\"","143","          >","144","            onboarding.analysis.java.maven.docs_link","145","          <\/a>,","146","        }","148","    \/>","149","  <\/p>","152","  >","153","    onboarding.analysis.auto_refresh_after_analysis","154","  <\/p>"],"delete":["29","    dangerouslySetInnerHTML={","30","      Object {","31","        \"__html\": \"onboarding.analysis.java.maven.docs\",","33","    }","34","  \/>","37","    dangerouslySetInnerHTML={","38","      Object {","39","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","40","      }","41","    }","42","  \/>","73","    dangerouslySetInnerHTML={","74","      Object {","75","        \"__html\": \"onboarding.analysis.java.maven.docs\",","77","    }","78","  \/>","81","    dangerouslySetInnerHTML={","82","      Object {","83","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","84","      }","85","    }","86","  \/>","117","    dangerouslySetInnerHTML={","118","      Object {","119","        \"__html\": \"onboarding.analysis.java.maven.docs\",","121","    }","122","  \/>","125","    dangerouslySetInnerHTML={","126","      Object {","127","        \"__html\": \"onboarding.analysis.auto_refresh_after_analysis\",","128","      }","129","    }","130","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/GenerateSecretKeyForm.tsx":[{"add":["78","            <div className=\"markdown\">","79","              <ul>","80","                <li>","81","                  <FormattedMessage","82","                    defaultMessage={translate('encryption.how_to_use.content1')}","83","                    id=\"encryption.how_to_use.content1\"","84","                    values={{","85","                      secret_file: <code>~\/.sonar\/sonar-secret.txt<\/code>,","86","                      property: <code>sonar.secretKeyPath<\/code>,","87","                      propreties_file: <code>conf\/sonar.properties<\/code>","88","                    }}","89","                  \/>","90","                <\/li>","91","                <li>{translate('encryption.how_to_use.content2')}<\/li>","92","                <li>","93","                  <FormattedMessage","94","                    defaultMessage={translate('encryption.how_to_use.content3')}","95","                    id=\"encryption.how_to_use.content3\"","96","                    values={{","97","                      property: <code>sonar.secretKeyPath<\/code>","98","                    }}","99","                  \/>","100","                <\/li>","101","                <li>{translate('encryption.how_to_use.content4')}<\/li>","102","              <\/ul>","103","            <\/div>"],"delete":["78","            <div","79","              className=\"markdown\"","80","              dangerouslySetInnerHTML={{ __html: translate('encryption.how_to_use.content') }}","81","            \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Other.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","54","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","57","      <p className=\"big-spacer-top markdown\">","58","        <FormattedMessage","59","          defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}","60","          id=\"onboarding.analysis.sq_scanner.docs\"","61","          values={{","62","            link: (","63","              <a","64","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","65","                rel=\"noopener noreferrer\"","66","                target=\"_blank\">","67","                {translate('onboarding.analysis.sq_scanner.docs_link')}","68","              <\/a>","69","            )","70","          }}","71","        \/>","72","      <\/p>"],"delete":["53","        {transformedMessage => (","54","          <p","55","            className=\"spacer-bottom markdown\"","56","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","57","          \/>","58","        )}","61","      <p","62","        className=\"big-spacer-top markdown\"","63","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.sq_scanner.docs') }}","64","      \/>"]}],"server\/sonar-web\/yarn.lock":[{"add":["969","\"@types\/domhandler@*\":","970","  version \"2.4.1\"","971","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/domhandler\/-\/domhandler-2.4.1.tgz#7b3b347f7762180fbcb1ece1ce3dd0ebbb8c64cf\"","972","  integrity sha1-ezs0f3diGA+8sezhzj3Q67uMZM8=","973","","974","\"@types\/dompurify@^0.0.32\":","975","  version \"0.0.32\"","976","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/dompurify\/-\/dompurify-0.0.32.tgz#ccc4148d7f2e0598006611e82e840806fab4b268\"","977","  integrity sha1-zMQUjX8uBZgAZhHoLoQIBvq0smg=","978","","979","\"@types\/domutils@*\":","980","  version \"1.7.2\"","981","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/domutils\/-\/domutils-1.7.2.tgz#89422e579c165994ad5c09ce90325da596cc105d\"","982","  integrity sha1-iUIuV5wWWZStXAnOkDJdpZbMEF0=","983","  dependencies:","984","    \"@types\/domhandler\" \"*\"","985","","1013","\"@types\/htmlparser2@*\":","1014","  version \"3.10.0\"","1015","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/htmlparser2\/-\/htmlparser2-3.10.0.tgz#b94d3b08f813c9eec12990ac6a34d8b17a7aebc9\"","1016","  integrity sha1-uU07CPgTye7BKZCsajTYsXp668k=","1017","  dependencies:","1018","    \"@types\/domhandler\" \"*\"","1019","    \"@types\/domutils\" \"*\"","1020","    \"@types\/node\" \"*\"","1021","","1134","\"@types\/sanitize-html@1.20.0\":","1135","  version \"1.20.0\"","1136","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/sanitize-html\/-\/sanitize-html-1.20.0.tgz#b3beaa9eacab0e0fa5022d5faa727fea8fb9fc5d\"","1137","  integrity sha1-s76qnqyrDg+lAi1fqnJ\/6o+5\/F0=","1138","  dependencies:","1139","    \"@types\/htmlparser2\" \"*\"","1140","","3443","dompurify@^1.0.11:","3444","  version \"1.0.11\"","3445","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/dompurify\/-\/dompurify-1.0.11.tgz#fe0f4a40d147f7cebbe31a50a1357539cfc1eb4d\"","3446","  integrity sha1-\/g9KQNFH98674xpQoTV1Oc\/B600=","3447",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Msvc-test.tsx.snap":[{"add":["45","  >","46","    <FormattedMessage","47","      defaultMessage=\"onboarding.analysis.docs\"","48","      id=\"onboarding.analysis.docs\"","49","      values={","50","        Object {","51","          \"link\": <a","52","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","53","            rel=\"noopener noreferrer\"","54","            target=\"_blank\"","55","          >","56","            onboarding.analysis.msbuild.docs_link","57","          <\/a>,","58","        }","60","    \/>","61","  <\/p>","110","  >","111","    <FormattedMessage","112","      defaultMessage=\"onboarding.analysis.docs\"","113","      id=\"onboarding.analysis.docs\"","114","      values={","115","        Object {","116","          \"link\": <a","117","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","118","            rel=\"noopener noreferrer\"","119","            target=\"_blank\"","120","          >","121","            onboarding.analysis.msbuild.docs_link","122","          <\/a>,","123","        }","125","    \/>","126","  <\/p>"],"delete":["45","    dangerouslySetInnerHTML={","46","      Object {","47","        \"__html\": \"onboarding.analysis.msbuild.docs\",","49","    }","50","  \/>","99","    dangerouslySetInnerHTML={","100","      Object {","101","        \"__html\": \"onboarding.analysis.msbuild.docs\",","103","    }","104","  \/>"]}]}},"9155f18ee43b7447aaf1665f17ef4cd668f0e618":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasuresTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasures.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokens.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokensTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasuresTest.java":[{"add":["21","import org.junit.Before;","54","  private static final int FILE_5_REF = 1263;","55","","60","  private static final FileAttributes FILE_5_ATTRS = mock(FileAttributes.class);","75","          builder(FILE, FILE_4_REF).setFileAttributes(FILE_4_ATTRS).build(),","76","          builder(FILE, FILE_5_REF).setFileAttributes(FILE_5_ATTRS).build())","91","  @Before","92","  public void before() {","93","    when(FILE_5_ATTRS.isUnitTest()).thenReturn(true);","94","  }","95","","107","  public void dont_compute_duplicated_blocks_for_test_files() {","108","    duplicationRepository.addDuplication(FILE_5_REF, new TextBlock(1, 1), new TextBlock(3, 3));","109","    duplicationRepository.addDuplication(FILE_5_REF, new TextBlock(2, 2), new TextBlock(3, 3));","110","","111","    underTest.execute();","112","","113","    assertRawMeasureValue(FILE_5_REF, DUPLICATED_BLOCKS_KEY, 0);","114","    assertRawMeasureValue(FILE_5_REF, DUPLICATED_FILES_KEY, 0);","115","","116","  }","117","","118","  @Test","274","    \/\/ this should have no effect as it's a test file","275","    when(FILE_5_ATTRS.getLines()).thenReturn(1_000_000);","276","","303","  public void dont_compute_duplicated_lines_density_when_lines_is_zero() {"],"delete":["71","          builder(FILE, FILE_4_REF).setFileAttributes(FILE_4_ATTRS).build())","278","  public void not_compute_duplicated_lines_density_when_lines_is_zero() {"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasures.java":[{"add":["104","      if (leaf.getType() == Component.Type.FILE && !leaf.getFileAttributes().isUnitTest()) {","126","        InnerDuplicate[] innerDuplicates = duplication.getDuplicates().stream()","127","          .filter(x -> x instanceof InnerDuplicate)","128","          .map(d -> (InnerDuplicate) d)","129","          .toArray(InnerDuplicate[]::new);","130","","131","        for (InnerDuplicate innerDuplicate : innerDuplicates) {"],"delete":["39","import static com.google.common.collect.FluentIterable.from;","90","    protected DuplicationCounter() {","91","      this(null);","92","    }","93","","109","      if (leaf.getType() == Component.Type.FILE) {","131","        for (InnerDuplicate innerDuplicate : from(duplication.getDuplicates()).filter(InnerDuplicate.class)) {"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokens.java":[{"add":["29","import org.sonar.api.utils.log.Logger;","30","import org.sonar.api.utils.log.Loggers;","37","  private static final Logger LOG = Loggers.get(DefaultCpdTokens.class);","39","  private DefaultInputFile inputFile;","45","  private boolean loggedTestCpdWarning = false;","53","    this.inputFile = (DefaultInputFile) requireNonNull(inputFile, \"file can't be null\");","91","    sb.append(image);","98","    if (inputFile.isExcludedForDuplication()) {","99","      return true;","100","    }","101","    if (inputFile.type() == InputFile.Type.TEST) {","102","      if (!loggedTestCpdWarning) {","103","        LOG.warn(\"Duplication reported for '{}' will be ignored because it's a test file.\", inputFile);","104","        loggedTestCpdWarning = true;","105","      }","106","      return true;","107","    }","108","    return false;"],"delete":["35","","37","  private InputFile inputFile;","50","    this.inputFile = requireNonNull(inputFile, \"file can't be null\");","81","    String value = image;","82","","90","    sb.append(value);","97","    return ((DefaultInputFile) inputFile).isExcludedForDuplication();"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokensTest.java":[{"add":["22","import org.sonar.api.batch.fs.InputFile;","35","  private final SensorStorage sensorStorage = mock(SensorStorage.class);","84","  public void dont_save_for_test_files() {","85","    DefaultInputFile testInputFile = new TestInputFileBuilder(\"foo\", \"src\/Foo.java\")","86","      .setLines(2)","87","      .setOriginalLineStartOffsets(new int[] {0, 50})","88","      .setOriginalLineEndOffsets(new int[] {49, 100})","89","      .setLastValidOffset(101)","90","      .setType(InputFile.Type.TEST)","91","      .build();","92","","93","    DefaultCpdTokens tokens = new DefaultCpdTokens(sensorStorage)","94","      .onFile(testInputFile)","95","      .addToken(testInputFile.newRange(1, 2, 1, 5), \"foo\");","96","","97","    tokens.save();","98","    verifyZeroInteractions(sensorStorage);","99","    assertThat(tokens.getTokenLines()).isEmpty();","100","  }","101","","102","  @Test"],"delete":["44","    SensorStorage sensorStorage = mock(SensorStorage.class);","57","    SensorStorage sensorStorage = mock(SensorStorage.class);","71","    SensorStorage sensorStorage = mock(SensorStorage.class);","86","    SensorStorage sensorStorage = mock(SensorStorage.class);"]}]}},"94a57989f8160badd5c1e7cbb66fdbceaa3bb38d":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest\/templates.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeys.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":[{"add":["36","      .add(2007, \"Update PERMISSION_TEMPLATES.KEYS \", UpdatePermissionTooLongTemplateKeys.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest\/templates.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeys.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":[{"add":["38","    verifyMigrationCount(underTest, 8);"],"delete":["38","    verifyMigrationCount(underTest, 7);"]}]}},"38218bf026f2ca74dbdddb30ddc85d6d9e2f2502":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactoryTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactory.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolder.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderRule.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":[{"add":["23","import java.util.Optional;","54","    return getOptionalComponentByRef(ref)","55","      .orElseThrow(() -> new IllegalArgumentException(String.format(\"Component with ref '%s' can't be found\", ref)));","56","  }","57","","58","  @Override","59","  public Optional<Component> getOptionalComponentByRef(int ref) {","62","    return Optional.ofNullable(componentsByRef.get(ref));"],"delete":["25","import static com.google.common.base.Preconditions.checkArgument;","56","    Component component = componentsByRef.get(ref);","57","    checkArgument(component != null, \"Component with ref '%s' can't be found\", ref);","58","    return component;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactoryTest.java":[{"add":["32","import org.sonar.db.protobuf.DbIssues;","58","  private static final String FILE_UUID = \"fake_uuid\";","59","  private static final String ANOTHER_FILE_UUID = \"another_fake_uuid\";","61","  private static int NOT_IN_REPORT_FILE_REF = 3;","62","  private static int ANOTHER_FILE_REF = 4;","64","  private static ReportComponent FILE = ReportComponent.builder(Component.Type.FILE, FILE_REF).setUuid(FILE_UUID).build();","65","  private static ReportComponent ANOTHER_FILE = ReportComponent.builder(Component.Type.FILE, ANOTHER_FILE_REF).setUuid(ANOTHER_FILE_UUID).build();","66","  private static ReportComponent PROJECT = ReportComponent.builder(Component.Type.PROJECT, 1).addChildren(FILE, ANOTHER_FILE).build();","141","  \/\/ SONAR-10781","142","  @Test","143","  public void load_issues_from_report_missing_secondary_location_component() {","144","    RuleKey ruleKey = RuleKey.of(\"java\", \"S001\");","145","    markRuleAsActive(ruleKey);","146","    when(issueFilter.accept(any(), eq(FILE))).thenReturn(true);","147","","148","    when(sourceLinesHash.getLineHashesMatchingDBVersion(FILE)).thenReturn(Collections.singletonList(\"line\"));","149","    ScannerReport.Issue reportIssue = ScannerReport.Issue.newBuilder()","150","      .setTextRange(TextRange.newBuilder().setStartLine(2).build())","151","      .setMsg(\"the message\")","152","      .setRuleRepository(ruleKey.repository())","153","      .setRuleKey(ruleKey.rule())","154","      .setSeverity(Constants.Severity.BLOCKER)","155","      .setGap(3.14)","156","      .addFlow(ScannerReport.Flow.newBuilder()","157","        .addLocation(ScannerReport.IssueLocation.newBuilder()","158","          .setComponentRef(FILE_REF)","159","          .setMsg(\"Secondary location in same file\")","160","          .setTextRange(TextRange.newBuilder().setStartLine(2).build()))","161","        .addLocation(ScannerReport.IssueLocation.newBuilder()","162","          .setComponentRef(NOT_IN_REPORT_FILE_REF)","163","          .setMsg(\"Secondary location in a missing file\")","164","          .setTextRange(TextRange.newBuilder().setStartLine(3).build()))","165","        .addLocation(ScannerReport.IssueLocation.newBuilder()","166","          .setComponentRef(ANOTHER_FILE_REF)","167","          .setMsg(\"Secondary location in another file\")","168","          .setTextRange(TextRange.newBuilder().setStartLine(3).build()))","169","        .build())","170","      .build();","171","    reportReader.putIssues(FILE.getReportAttributes().getRef(), singletonList(reportIssue));","172","    Input<DefaultIssue> input = underTest.create(FILE);","173","","174","    Collection<DefaultIssue> issues = input.getIssues();","175","    assertThat(issues).hasSize(1);","176","    DefaultIssue issue = Iterators.getOnlyElement(issues.iterator());","177","","178","    DbIssues.Locations locations = issue.getLocations();","179","    \/\/ fields set by analysis report","180","    assertThat(locations.getFlowList()).hasSize(1);","181","    assertThat(locations.getFlow(0).getLocationList()).hasSize(2);","182","    \/\/ Not component id if location is in the same file","183","    assertThat(locations.getFlow(0).getLocation(0).getComponentId()).isEmpty();","184","    assertThat(locations.getFlow(0).getLocation(1).getComponentId()).isEqualTo(ANOTHER_FILE_UUID);","185","  }","186",""],"delete":["59","  private static ReportComponent PROJECT = ReportComponent.builder(Component.Type.PROJECT, 1).build();","60","  private static ReportComponent FILE = ReportComponent.builder(Component.Type.FILE, FILE_REF).build();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":[{"add":["102","  public void getOptionalComponentByRef_returns_any_report_component_in_the_tree() {","103","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","104","","105","    for (int i = 1; i <= 4; i++) {","106","      assertThat(underTest.getOptionalComponentByRef(i).get().getReportAttributes().getRef()).isEqualTo(i);","107","    }","108","  }","109","","110","  @Test","121","  public void getOptionalComponentByRef_returns_empty_if_holder_does_not_contain_specified_component() {","122","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","123","","124","    assertThat(underTest.getOptionalComponentByRef(6)).isEmpty();","125","  }","126","","127","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactory.java":[{"add":["24","import java.util.Optional;","172","            convertLocation(location).ifPresent(dbFlowBuilder::addLocation);","209","            convertLocation(location).ifPresent(dbFlowBuilder::addLocation);","254","    private Optional<DbIssues.Location> convertLocation(ScannerReport.IssueLocation source) {","257","        \/\/ SONAR-10781 Component might not exist because on short living branch and PR, only changed components are included in the report","258","        Optional<Component> optionalComponent = treeRootHolder.getOptionalComponentByRef(source.getComponentRef());","259","        if (!optionalComponent.isPresent()) {","260","          return Optional.empty();","261","        }","262","        target.setComponentId(optionalComponent.get().getUuid());","272","      return Optional.of(target.build());"],"delete":["171","            dbFlowBuilder.addLocation(convertLocation(location));","208","            dbFlowBuilder.addLocation(convertLocation(location));","253","    private DbIssues.Location convertLocation(ScannerReport.IssueLocation source) {","256","        target.setComponentId(treeRootHolder.getComponentByRef(source.getComponentRef()).getUuid());","266","      return target.build();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolder.java":[{"add":["21","import java.util.Optional;","22","","43","","44","  \/**","45","   * Return a component by its batch reference. Returns {@link Optional#empty()} if there's","46","   * no {@link Component} with the specified reference","47","   *","48","   * @throws IllegalStateException if the holder is empty (ie. there is no root yet)","49","   * @deprecated This method was introduced as a quick fix for SONAR-10781. Ultimately one should never manipulate component","50","   * ref that doesn't exists in the scanner report","51","   *\/","52","  @Deprecated","53","  Optional<Component> getOptionalComponentByRef(int ref);","54",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderRule.java":[{"add":["21","import java.util.Optional;","47","","48","  @Override","49","  public Optional<Component> getOptionalComponentByRef(int ref) {","50","    return delegate.getOptionalComponentByRef(ref);","51","  }"],"delete":[]}]}},"9d783bdcacbca512660880509fb092a181a54cf4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/LeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/LeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/LeakPeriodLegend-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/LeakPeriodLegend.js":[{"add":["21","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","25","export default function LeakPeriodLegend({ period }) {","26","  const label = (","27","    <div className=\"measures-domains-leak-header\">","28","      {translateWithParameters('overview.leak_period_x', getPeriodLabel(period))}","29","    <\/div>","30","  );","31","","32","  if (period.mode === 'days') {","33","    return label;","34","  }","35","","39","  return <Tooltip placement=\"bottom\" overlay={tooltip}>{label}<\/Tooltip>;","40","}"],"delete":["21","import { TooltipsContainer } from '..\/..\/..\/components\/mixins\/tooltips-mixin';","25","const LeakPeriodLegend = ({ period }) => {","27","  const label = getPeriodLabel(period);","30","","31","  return (","32","    <TooltipsContainer>","33","      <div className=\"measures-domains-leak-header\">","34","        <div title={tooltip} data-toggle=\"tooltip\">","35","          {translateWithParameters('overview.leak_period_x', label)}","36","        <\/div>","37","      <\/div>","38","    <\/TooltipsContainer>","39","  );","40","};","41","","42","export default LeakPeriodLegend;"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/LeakPeriodLegend.js":[{"add":["22","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","61","export default function LeakPeriodLegend({ period }: { period: Period }) {","64","  if (period.mode === 'days') {","65","    return (","66","      <div className=\"overview-legend overview-legend-spaced-line\">","67","        {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}","68","      <\/div>","69","    );","70","  }","71","","72","  const leakPeriodDate = getPeriodDate(period);","75","  const note = ['date'].includes(period.mode)","78","  const tooltip = ['date'].includes(period.mode)","83","    <Tooltip overlay={tooltip} placement=\"bottom\">","84","      <div className=\"overview-legend\">","85","        {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}","86","        <br \/>","87","        <span className=\"note\">{note}<\/span>","88","      <\/div>","89","    <\/Tooltip>"],"delete":["60","export default function LeakPeriodLegend(props: { period: Period }) {","61","  const { period } = props;","63","  const leakPeriodDate = getPeriodDate(period);","67","  const note = ['date', 'days'].includes(period.mode)","70","  const tooltip = ['date', 'days'].includes(period.mode)","75","    <div className=\"overview-legend\" title={tooltip} data-toggle=\"tooltip\">","76","      {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}","77","      <br \/>","78","      <span className=\"note\">{note}<\/span>","79","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/LeakPeriodLegend-test.js":[{"add":["30","    expect(shallow(<LeakPeriodLegend period={period} \/>)).toMatchSnapshot();"],"delete":["30","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('.note')).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":[{"add":["368",".overview-legend-spaced-line {","369","  padding: 14px 0 10px;","370","}","371",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":[{"add":["3","<div","4","  className=\"overview-legend overview-legend-spaced-line\"","6","  overview.leak_period_x.overview.period.days.10","7","<\/div>"],"delete":["3","<span","4","  className=\"note\"","6","  overview.last_analysis_x.4 years ago","7","<\/span>"]}]}},"cc10a68715444305f7a8d8e1181b39b5a79a2343":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/user\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/metric\/ws\/SearchAction.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/BulkChangeAction.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueQuery.java":"MODIFY","server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileRuleImplTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/measure\/custom\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":[{"add":["46","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","80","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["46","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","80","      .addPagingParams(100, MAX_LIMIT)"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersAction.java":[{"add":["54","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","88","    action.addPagingParams(50, MAX_PAGE_SIZE);"],"delete":["54","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","88","    action.addPagingParams(50, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":[{"add":["50","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","80","    wsAction.addPagingParams(50, MAX_PAGE_SIZE);"],"delete":["50","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","80","    wsAction.addPagingParams(50, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["452","    for (int i = 0; i < SearchOptions.MAX_PAGE_SIZE + 1; i++) {","1040","    expectedException.expect(IllegalArgumentException.class);","1041","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got -1)\");","1045","      .execute();"],"delete":["452","    for (int i = 0; i < SearchOptions.MAX_LIMIT + 1; i++) {","1040","    RuleDto rule = newIssueRule();","1041","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org-1\"));","1042","    ComponentDto project = db.components().insertComponent(ComponentTesting.newPublicProjectDto(organization, \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","1043","    indexPermissions();","1044","    ComponentDto file = db.components().insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","1045","    for (int i = 0; i < 12; i++) {","1046","      IssueDto issue = newDto(rule, file, project);","1047","      dbClient.issueDao().insert(session, issue);","1048","    }","1049","    session.commit();","1050","    indexIssues();","1051","","1055","      .execute()","1056","      .assertJson(this.getClass(), \"paging_with_page_size_to_minus_one.json\");"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/user\/ws\/SearchAction.java":[{"add":["102","    action.addPagingParams(50, SearchOptions.MAX_PAGE_SIZE);"],"delete":["56","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","103","    action.addPagingParams(50, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/metric\/ws\/SearchAction.java":[{"add":["36","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","63","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["36","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","63","      .addPagingParams(100, MAX_LIMIT)"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesAction.java":[{"add":["50","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","94","    action.addPagingParamsSince(10, MAX_PAGE_SIZE, \"7.1\");"],"delete":["50","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","94","    action.addPagingParamsSince(10, MAX_LIMIT, \"7.1\");"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/BulkChangeAction.java":[{"add":["93","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","358","      checkArgument(issueKeys.size() <= MAX_PAGE_SIZE, \"Number of issues is limited to %s\", MAX_PAGE_SIZE);"],"delete":["93","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","358","      checkArgument(issueKeys.size() <= MAX_LIMIT, \"Number of issues is limited to %s\", MAX_LIMIT);"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":[{"add":["65","  public void fail_if_page_is_not_strictly_positive() {","66","    expectedException.expect(IllegalArgumentException.class);","67","    expectedException.expectMessage(\"Page must be greater or equal to 1 (got 0)\");","68","    new SearchOptions().setPage(0, 10);","72","  public void fail_if_ps_is_zero() {","73","    expectedException.expect(IllegalArgumentException.class);","74","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got 0)\");","75","    new SearchOptions().setPage(1, 0);","79","  public void fail_if_ps_is_negative() {","80","    expectedException.expect(IllegalArgumentException.class);","81","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got -1)\");","82","    new SearchOptions().setPage(2, -1);","83","  }","84","","85","  @Test","86","  public void fail_if_ps_is_over_limit() {","87","    expectedException.expect(IllegalArgumentException.class);","88","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got 510)\");","89","    new SearchOptions().setPage(3, SearchOptions.MAX_PAGE_SIZE + 10);","90","  }","91","","92","  @Test","93","  public void fail_if_result_after_first_10_000() {","94","    expectedException.expect(IllegalArgumentException.class);","95","    expectedException.expectMessage(\"Can return only the first 10000 results. 10500th result asked.\");","96","","97","    underTest.setPage(21, 500);","105","    expectedException.expect(IllegalArgumentException.class);","106","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got 510)\");","107","    options.setLimit(SearchOptions.MAX_PAGE_SIZE + 10);"],"delete":["29","import static org.junit.Assert.fail;","66","  public void with_zero_page_size() {","67","    SearchOptions options = new SearchOptions().setPage(1, 0);","68","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","69","    assertThat(options.getOffset()).isEqualTo(0);","70","    assertThat(options.getPage()).isEqualTo(1);","74","  public void page_must_be_strictly_positive() {","75","    try {","76","      new SearchOptions().setPage(0, 10);","77","      fail();","78","    } catch (IllegalArgumentException e) {","79","      assertThat(e).hasMessage(\"Page must be greater or equal to 1 (got 0)\");","80","    }","84","  public void use_max_limit_if_negative() {","85","    SearchOptions options = new SearchOptions().setPage(2, -1);","86","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","94","    options.setLimit(SearchOptions.MAX_LIMIT + 10);","95","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","96","  }","97","","98","  @Test","99","  public void max_page_size() {","100","    SearchOptions options = new SearchOptions().setPage(3, SearchOptions.MAX_LIMIT + 10);","101","    assertThat(options.getOffset()).isEqualTo(SearchOptions.MAX_LIMIT * 2);","102","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","115","","116","  @Test","117","  public void fail_if_result_after_first_10_000() {","118","    expectedException.expect(IllegalArgumentException.class);","119","    expectedException.expectMessage(\"Can return only the first 10000 results. 10500th result asked.\");","120","","121","    underTest.setPage(21, 500);","122","  }"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["78","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","213","    action.addPagingParams(100, MAX_PAGE_SIZE);"],"delete":["78","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","213","    action.addPagingParams(100, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":[{"add":["59","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","91","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["59","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","91","      .addPagingParams(100, MAX_LIMIT)"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":[],"delete":["1117","","1118","    \/\/ from 2 to 11 included","1119","    options.setOffset(2).setLimit(0);","1120","    results = underTest.search(new RuleQuery(), options);","1121","    assertThat(results.getTotal()).isEqualTo(3);","1122","    assertThat(results.getUuids()).hasSize(1);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/SearchAction.java":[{"add":["65","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","131","      .addPagingParams(100, MAX_PAGE_SIZE)","229","      context.setPage(Integer.parseInt(request.getP()), 0).setLimit(MAX_PAGE_SIZE);"],"delete":["65","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","131","      .addPagingParams(100, MAX_LIMIT)","229","      context.setPage(Integer.parseInt(request.getP()), 0).setLimit(MAX_LIMIT);"]}],"server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueQuery.java":[{"add":["33","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","502","        checkArgument(issueKeys.size() <= MAX_PAGE_SIZE, \"Number of issue keys must be less than \" + MAX_PAGE_SIZE + \" (got \" + issueKeys.size() + \")\");"],"delete":["33","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","502","        checkArgument(issueKeys.size() <= MAX_LIMIT, \"Number of issue keys must be less than \" + MAX_LIMIT + \" (got \" + issueKeys.size() + \")\");"]}],"server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":[{"add":["110","    result = underTest.search(IssueQuery.builder().build(), new SearchOptions().setOffset(2).setLimit(10));","127","    SearchResponse result = underTest.search(query.build(), new SearchOptions().setLimit(500));","128","    assertThat(result.getHits().getHits()).hasSize(SearchOptions.MAX_PAGE_SIZE);"],"delete":["110","    result = underTest.search(IssueQuery.builder().build(), new SearchOptions().setOffset(2).setLimit(0));","127","    SearchResponse result = underTest.search(query.build(), new SearchOptions().setLimit(Integer.MAX_VALUE));","128","    assertThat(result.getHits().getHits()).hasSize(SearchOptions.MAX_LIMIT);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":[{"add":["40","  public static final int MAX_PAGE_SIZE = 500;","65","   * Set offset and limit according to page approach","69","    setLimit(pageSize);","72","    setOffset(lastResultIndex - pageSize);","91","    checkArgument(limit > 0 && limit <= MAX_PAGE_SIZE, \"Page size must be between 1 and \" + MAX_PAGE_SIZE + \" (got \" + limit + \")\");","92","    this.limit = limit;"],"delete":["40","  public static final int MAX_LIMIT = 500;","65","   * Set offset and limit according to page approach. If pageSize is negative, then","66","   * {@link #MAX_LIMIT} is used.","72","    setLimit(pageSize);","73","    setOffset((page * this.limit) - this.limit);","92","    if (limit <= 0) {","93","      this.limit = MAX_LIMIT;","94","    } else {","95","      this.limit = Math.min(limit, MAX_LIMIT);","96","    }"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileRuleImplTest.java":[{"add":["709","    int bulkSize = SearchOptions.MAX_PAGE_SIZE + 10 + new Random().nextInt(100);","736","    int bulkSize = SearchOptions.MAX_PAGE_SIZE + 10 + new Random().nextInt(100);"],"delete":["709","    int bulkSize = SearchOptions.MAX_LIMIT + 10 + new Random().nextInt(100);","736","    int bulkSize = SearchOptions.MAX_LIMIT + 10 + new Random().nextInt(100);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/measure\/custom\/ws\/SearchAction.java":[{"add":["46","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","76","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["46","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","76","      .addPagingParams(100, MAX_LIMIT)"]}]}},"d98c3ab5b4bc3615b10ca984681b809e98556450":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerController.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/monitoring\/CeTasksMBeanImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClient.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeHttpModule.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientTest.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":[{"add":[],"delete":["24","   * Requests {@link CeConfiguration} to refresh its state, if it has any.","25","   *\/","26","  void refresh();","27","","28","  \/**"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":[{"add":["22","import javax.annotation.Nullable;","56","    this(configuration, null);","59","  public CeConfigurationImpl(Configuration configuration, @Nullable WorkerCountProvider workerCountProvider) {","62","    if (workerCountProvider == null) {","63","      this.workerCount = DEFAULT_WORKER_COUNT;","64","      this.workerThreadCount = DEFAULT_WORKER_THREAD_COUNT;","65","    } else {","66","      this.workerCount = readWorkerCount(workerCountProvider);","67","      this.workerThreadCount = MAX_WORKER_THREAD_COUNT;","68","    }","71","  private static synchronized int readWorkerCount(WorkerCountProvider workerCountProvider) {","81","      \"Worker count '%s' is invalid. It must be an integer strictly greater than 0 and less or equal to 10\",","82","      value));","87","    \/\/ nothing to do","102","    if (workerCountProvider != null) {","103","      workerCount = readWorkerCount(workerCountProvider);","104","    }"],"delete":["55","    this.workerCountProvider = null;","56","    this.workerThreadCount = DEFAULT_WORKER_THREAD_COUNT;","57","    this.workerCount = DEFAULT_WORKER_COUNT;","58","    this.gracefultStopTimeoutInMs = configuration.getInt(SONAR_CE_GRACEFUL_STOP_TIME_OUT_IN_MS).orElse(GRACEFUL_STOP_TIMEOUT);","61","  public CeConfigurationImpl(Configuration configuration, WorkerCountProvider workerCountProvider) {","63","    this.workerThreadCount = MAX_WORKER_THREAD_COUNT;","64","    this.workerCount = readWorkerCount(workerCountProvider);","68","  private static int readWorkerCount(WorkerCountProvider workerCountProvider) {","78","        \"Worker count '%s' is invalid. It must an integer strictly greater than 0 and less or equal to 10\",","79","        value));","84","    \/\/","93","  public void refresh() {","94","    if (workerCountProvider != null) {","95","      this.workerCount = readWorkerCount(workerCountProvider);","96","    }","97","  }","98","","99","  @Override"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":[{"add":["97","      \"It must be an integer strictly greater than 0 and less or equal to 10\");"],"delete":["22","import java.util.stream.IntStream;","98","      \"It must an integer strictly greater than 0 and less or equal to 10\");","119","  @Test","120","  public void refresh_does_not_change_any_value_when_there_is_no_WorkerCountProvider() {","121","    CeConfigurationImpl underTest = new CeConfigurationImpl(EMPTY_CONFIGURATION);","122","    long cleanCeTasksInitialDelay = underTest.getCleanCeTasksInitialDelay();","123","    long cleanCeTasksDelay = underTest.getCleanCeTasksDelay();","124","    long queuePollingDelay = underTest.getQueuePollingDelay();","125","    int workerThreadCount = underTest.getWorkerMaxCount();","126","    int workerCount = underTest.getWorkerCount();","127","","128","    IntStream.range(0, 1 + abs(new Random().nextInt(10)))","129","      .forEach(ignored -> {","130","        underTest.refresh();","131","        assertThat(underTest.getCleanCeTasksInitialDelay()).isEqualTo(cleanCeTasksInitialDelay);","132","        assertThat(underTest.getCleanCeTasksDelay()).isEqualTo(cleanCeTasksDelay);","133","        assertThat(underTest.getQueuePollingDelay()).isEqualTo(queuePollingDelay);","134","        assertThat(underTest.getWorkerMaxCount()).isEqualTo(workerThreadCount);","135","        assertThat(underTest.getWorkerCount()).isEqualTo(workerCount);","136","      });","137","  }","138","","139","  @Test","140","  public void refresh_updates_only_workerCount_from_WorkerCountProvider_when_there_WorkerCountProvider_is_present() {","141","    workerCountProvider.set(randomValidWorkerCount());","142","    CeConfigurationImpl underTest = new CeConfigurationImpl(EMPTY_CONFIGURATION, workerCountProvider);","143","    long cleanCeTasksInitialDelay = underTest.getCleanCeTasksInitialDelay();","144","    long cleanCeTasksDelay = underTest.getCleanCeTasksDelay();","145","    long queuePollingDelay = underTest.getQueuePollingDelay();","146","    int workerThreadCount = underTest.getWorkerMaxCount();","147","","148","    IntStream.range(0, 1 + abs(new Random().nextInt(10)))","149","      .forEach(ignored -> {","150","        int newWorkerCount = randomValidWorkerCount();","151","        workerCountProvider.set(newWorkerCount);","152","","153","        underTest.refresh();","154","","155","        assertThat(underTest.getCleanCeTasksInitialDelay()).isEqualTo(cleanCeTasksInitialDelay);","156","        assertThat(underTest.getCleanCeTasksDelay()).isEqualTo(cleanCeTasksDelay);","157","        assertThat(underTest.getQueuePollingDelay()).isEqualTo(queuePollingDelay);","158","        assertThat(underTest.getWorkerMaxCount()).isEqualTo(workerThreadCount);","159","        assertThat(underTest.getWorkerCount()).isEqualTo(newWorkerCount);","160","      });","161","  }","162",""]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":[{"add":[],"delete":["21","import java.util.function.Consumer;","35","  private Consumer<CeConfigurationRule> refreshCallHook;","36","","37","  @Override","38","  public void refresh() {","39","    if (this.refreshCallHook != null) {","40","      this.refreshCallHook.accept(this);","41","    }","42","  }","43","","44","  public void setRefreshCallHook(Consumer<CeConfigurationRule> refreshCallHook) {","45","    this.refreshCallHook = refreshCallHook;","46","  }"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImplTest.java":[{"add":["95","  public void workerCount_is_always_reloaded() {","96","    when(ceWorker.getOrdinal()).thenReturn(1);","97","","98","    ceConfigurationRule.setWorkerCount(1);","101","    ceConfigurationRule.setWorkerCount(2);"],"delete":["95","  public void workerCount_is_loaded_in_constructor() {","96","    when(ceWorker.getOrdinal()).thenReturn(randomWorkerCount);","99","    ceConfigurationRule.setWorkerCount(randomWorkerCount + 1);","100","    assertThat(underTest.isEnabled(ceWorker)).isFalse();","101","  }","102","","103","  @Test","104","  public void refresh_reloads_workerCount() {","105","    when(ceWorker.getOrdinal()).thenReturn(randomWorkerCount);","106","    assertThat(underTest.isEnabled(ceWorker)).isFalse();","107","    ceConfigurationRule.setRefreshCallHook((rule) -> rule.setWorkerCount(randomWorkerCount + 1));","108","","109","    underTest.refresh();","110","","114","  @Test","115","  public void refresh_writes_info_log_if_workerCount_is_greater_than_1() {","116","    logTester.clear();","117","    int newWorkerCount = randomWorkerCount + 1;","118","    ceConfigurationRule.setRefreshCallHook((rule) -> rule.setWorkerCount(newWorkerCount));","119","","120","    underTest.refresh();","121","","122","    verifyInfoLog(newWorkerCount);","123","  }","124","","125","  @Test","126","  public void refresh_writes_no_info_log_if_workerCount_is_1() {","127","    logTester.clear();","128","    ceConfigurationRule.setRefreshCallHook((rule) -> rule.setWorkerCount(1));","129","","130","    underTest.refresh();","131","","132","    assertThat(logTester.logs()).isEmpty();","133","  }","134",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientImpl.java":[{"add":[],"delete":["125","  @Override","126","  public void refreshCeWorkerCount() {","127","    call(RefreshCeWorkerCountActionClient.INSTANCE);","128","  }","129","","130","  private enum RefreshCeWorkerCountActionClient implements ActionClient<Void> {","131","    INSTANCE;","132","","133","    @Override","134","    public String getPath() {","135","      return \"refreshWorkerCount\";","136","    }","137","","138","    @Override","139","    public Void getDefault() {","140","      return null;","141","    }","142","","143","    @Override","144","    public Void call(String url) throws Exception {","145","      okhttp3.Request request = new okhttp3.Request.Builder()","146","        .post(RequestBody.create(null, new byte[0]))","147","        .url(url)","148","        .build();","149","      try (okhttp3.Response response = new OkHttpClient().newCall(request).execute()) {","150","        if (response.code() != 200) {","151","          throw new IOException(","152","            String.format(","153","              \"Failed to trigger refresh of CE Worker count. Code was '%s' and response was '%s' for url '%s'\",","154","              response.code(),","155","              response.body().string(),","156","              url));","157","        }","158","        return null;","159","      }","160","    }","161","  }","162",""]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerController.java":[{"add":[],"delete":["30","   * Requests the {@link EnabledCeWorkerController} to refresh its state, if it has any.","31","   *\/","32","  void refresh();","33","","34","  \/**"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/monitoring\/CeTasksMBeanImplTest.java":[{"add":[],"delete":["147","    public void refresh() {","148","      throw new UnsupportedOperationException(\"Refresh is not implemented\");","149","    }","150","","151","    @Override"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClient.java":[{"add":[],"delete":["29","","30","  void refreshCeWorkerCount();"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImpl.java":[{"add":["39","    int workerCount = ceConfiguration.getWorkerCount();","40","    if (workerCount > 1) {","41","      Loggers.get(EnabledCeWorkerController.class).info(\"Compute Engine will use {} concurrent workers to process tasks\", workerCount);","63","    return ceWorker.getOrdinal() < ceConfiguration.getWorkerCount();"],"delete":["22","import java.util.concurrent.atomic.AtomicInteger;","29","  private final AtomicInteger workerCount;","37","    this.workerCount = new AtomicInteger(ceConfiguration.getWorkerCount());","42","    if (workerCount.get() > 1) {","43","      Loggers.get(EnabledCeWorkerController.class).info(\"Compute Engine will use {} concurrent workers to process tasks\", this.workerCount);","48","  public void refresh() {","49","    ceConfiguration.refresh();","50","    this.workerCount.set(ceConfiguration.getWorkerCount());","51","    logEnabledWorkerCount();","52","  }","53","","54","  @Override","72","    return ceWorker.getOrdinal() < workerCount.get();"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeHttpModule.java":[{"add":["32","      ChangeLogLevelHttpAction.class);"],"delete":["24","import org.sonar.ce.taskprocessor.RefreshWorkerCountAction;","33","      ChangeLogLevelHttpAction.class,","34","      RefreshWorkerCountAction.class);"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImplTest.java":[{"add":["102","            + 3 \/\/ content of CeHttpModule"],"delete":["102","            + 4 \/\/ content of CeHttpModule"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientTest.java":[{"add":[],"delete":["135","  @Test","136","  public void refreshCeWorkerCount_throws_ISE_if_http_error() {","137","    String message = \"blah\";","138","    server.enqueue(new MockResponse().setResponseCode(500).setBody(message));","139","    \/\/ initialize registration of process","140","    setUpWithHttpUrl(ProcessId.COMPUTE_ENGINE);","141","","142","    expectedException.expect(IllegalStateException.class);","143","    expectedException.expectMessage(\"Failed to call HTTP server of process \" + ProcessId.COMPUTE_ENGINE);","144","    expectedException.expectCause(hasType(IOException.class)","145","        .andMessage(format(\"Failed to trigger refresh of CE Worker count. Code was '500' and response was 'blah' for url \" +","146","            \"'http:\/\/%s:%s\/refreshWorkerCount'\", server.getHostName(), server.getPort())));","147","","148","    underTest.refreshCeWorkerCount();","149","  }","150","","151","  @Test","152","  public void refreshCeWorkerCount_does_not_fail_when_http_code_is_200() {","153","    server.enqueue(new MockResponse().setResponseCode(200));","154","","155","    setUpWithHttpUrl(ProcessId.COMPUTE_ENGINE);","156","","157","    underTest.refreshCeWorkerCount();","158","  }","159",""]}]}},"e22000509bf6734f602c21af925ed372ab7b8b8f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginChangeLogItem.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/SettingsEditionsNotif.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/__tests__\/__snapshots__\/SettingsEditionsNotif-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginUpdateItem.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginChangeLogItem.tsx":[{"add":["23","import { translate } from '..\/..\/..\/helpers\/l10n';","39","          <Tooltip overlay={translate('marketplace.update_status', update.status)}>"],"delete":["23","import { translate, translateWithParameters } from '..\/..\/..\/helpers\/l10n';","39","          <Tooltip overlay={translateWithParameters('marketplace.status', update.status)}>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2142","marketplace.update_status.COMPATIBLE=Compatible","2143","marketplace.update_status.INCOMPATIBLE=Incompatible","2144","marketplace.update_status.REQUIRES_SYSTEM_UPGRADE=Requires system update","2145","marketplace.update_status.DEPS_REQUIRE_SYSTEM_UPGRADE=Some of dependencies requires system update","2156","marketplace.edition_status.AUTOMATIC_IN_PROGRESS=Installing your new Commercial Edition... Please wait...","2157","marketplace.edition_status.AUTOMATIC_READY=Commercial Edition successfully installed. Please restart the server to activate your new edition.","2158","marketplace.edition_status.UNINSTALL_IN_PROGRESS=Commercial Edition successfully downgraded. Please restart the server to remove the features.","2159","marketplace.edition_status.MANUAL_IN_PROGRESS=Commercial Edition can't automatically be installed because of internet access issues. Please manually install the package.","2160","marketplace.edition_status_x.AUTOMATIC_IN_PROGRESS=Installing your new {0}... Please wait...","2161","marketplace.edition_status_x.AUTOMATIC_READY={0} successfully installed. Please restart the server to activate your new edition.","2162","marketplace.edition_status_x.UNINSTALL_IN_PROGRESS=Successfully downgraded to {0}. Please restart the server to remove the features.","2163","marketplace.edition_status_x.MANUAL_IN_PROGRESS={0} can't automatically be installed because of internet access issues. Please manually install the package."],"delete":["2142","marketplace.status.COMPATIBLE=Compatible","2143","marketplace.status.INCOMPATIBLE=Incompatible","2144","marketplace.status.REQUIRES_SYSTEM_UPGRADE=Requires system update","2145","marketplace.status.DEPS_REQUIRE_SYSTEM_UPGRADE=Some of dependencies requires system update","2157","marketplace.status.AUTOMATIC_IN_PROGRESS=Installing your new Commercial Edition. Please wait...","2158","marketplace.status.AUTOMATIC_READY=Commercial Edition successfully installed. Please restart the server to activate your new edition.","2159","marketplace.status.UNINSTALL_IN_PROGRESS=Commercial Edition successfully downgraded. Please restart the server to remove the features.","2160","marketplace.status.MANUAL_IN_PROGRESS=Commercial Edition can't automatically be installed because of internet access issues. Please manually install the package.","2161","marketplace.status_x.AUTOMATIC_IN_PROGRESS=Installing your new {0}. Please wait...","2162","marketplace.status_x.AUTOMATIC_READY={0} successfully installed. Please restart the server to activate your new edition.","2163","marketplace.status_x.UNINSTALL_IN_PROGRESS=Successfully downgraded to {0}. Please restart the server to remove the features.","2164","marketplace.status_x.MANUAL_IN_PROGRESS={0} can't automatically be installed because of internet access issues. Please manually install the package."]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/SettingsEditionsNotif.tsx":[{"add":["57","                'marketplace.edition_status_x.' + editionStatus.installationStatus,","60","            : translate('marketplace.edition_status', editionStatus.installationStatus)}","73","                'marketplace.edition_status_x.' + editionStatus.installationStatus,","76","            : translate('marketplace.edition_status', editionStatus.installationStatus)}","97","          <button className=\"js-restart spacer-left\" onClick={this.handleOpenRestart} type=\"button\">","113","              'marketplace.edition_status_x.' + editionStatus.installationStatus,","116","          : translate('marketplace.edition_status', editionStatus.installationStatus)}"],"delete":["57","                'marketplace.status_x.' + editionStatus.installationStatus,","60","            : translate('marketplace.status', editionStatus.installationStatus)}","73","                'marketplace.status_x.' + editionStatus.installationStatus,","76","            : translate('marketplace.status', editionStatus.installationStatus)}","97","          <button className=\"js-restart spacer-left\" onClick={this.handleOpenRestart}>","113","              'marketplace.status_x.' + editionStatus.installationStatus,","116","          : translate('marketplace.status', editionStatus.installationStatus)}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/__tests__\/__snapshots__\/SettingsEditionsNotif-test.tsx.snap":[{"add":["6","  marketplace.edition_status_x.MANUAL_IN_PROGRESS.Foo","30","    marketplace.edition_status.AUTOMATIC_READY","35","    type=\"button\"","50","    marketplace.edition_status.AUTOMATIC_IN_PROGRESS"],"delete":["6","  marketplace.status_x.MANUAL_IN_PROGRESS.Foo","30","    marketplace.status.AUTOMATIC_READY","49","    marketplace.status.AUTOMATIC_IN_PROGRESS"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginUpdateItem.tsx":[{"add":["59","            <Tooltip overlay={translate('marketplace.update_status', update.status)}>"],"delete":["59","            <Tooltip overlay={translate('marketplace.status', update.status)}>"]}]}},"d662d0c0269e1a12da0c3ecdb8f9d33b765ccdcc":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/AbstractLogHelper.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ListDefinitionsActionTest.java":"MODIFY","server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/qualitymodel\/RatingSettingsTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/user\/SystemPasscodeImpl.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/PauseAction.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationMediumTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/platform\/ComponentContainer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/bootstrap\/GlobalConfigurationProviderTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":"MODIFY","server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/LogbackHelperTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/platform\/UrlSettingsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ResumeAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/InfoAction.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/config\/PropertyDefinitions.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/SettingFormatter.java":"MODIFY","sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/config\/internal\/MapSettings.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueInclusionPatternInitializerTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/startup\/RenameDeprecatedPropertyKeysTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/ProcessProperties.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/config\/PropertyDefinitionsTest.java":"MODIFY","server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueExclusionPatternInitializerTest.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/SettingFormatterTest.java":"MODIFY","server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/GitHubSettingsTest.java":"MODIFY","server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/IntegrationTest.java":"MODIFY","server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlIdentityProviderTest.java":"MODIFY","server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/UserIdentityFactoryImplTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImpl.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImplTest.java":"MODIFY","sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/config\/internal\/MapSettingsTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationDaemonTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogbackHelper.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SettingsUpdaterTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ChildSettingsTest.java":"MODIFY","server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlSettingsTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ResetActionTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/config\/ConfigurationProviderTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":"MODIFY","server\/sonar-auth-gitlab\/src\/test\/java\/org\/sonar\/auth\/gitlab\/GitLabSettingsTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogLevelConfig.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/platform\/UrlSettings.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/measure\/live\/LiveMeasureComputerImplTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/platform\/monitoring\/SettingsSectionTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":[{"add":["27","import org.sonar.api.config.internal.Encryption;","28","import org.sonar.api.utils.System2;","44","    PropertyDefinitions defs = new PropertyDefinitions(System2.INSTANCE, GenericCoverageSensor.properties());"],"delete":["26","import org.sonar.api.config.internal.Encryption;","43","    PropertyDefinitions defs = new PropertyDefinitions(GenericCoverageSensor.properties());"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/AbstractLogHelper.java":[{"add":[],"delete":["30","  static final String SONAR_LOG_LEVEL_PROPERTY = \"sonar.log.level\";","31","  static final String ROLLING_POLICY_PROPERTY = \"sonar.log.rollingPolicy\";","32","  static final String MAX_FILES_PROPERTY = \"sonar.log.maxFiles\";"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":[{"add":["30","import org.sonar.api.batch.sensor.internal.SensorContextTester;","32","import org.sonar.api.config.internal.Encryption;","33","import org.sonar.api.utils.System2;","60","    PropertyDefinitions defs = new PropertyDefinitions(System2.INSTANCE, GenericTestExecutionSensor.properties());"],"delete":["30","import org.sonar.api.config.internal.Encryption;","37","import org.sonar.api.batch.sensor.internal.SensorContextTester;","59","    PropertyDefinitions defs = new PropertyDefinitions(GenericTestExecutionSensor.properties());"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ListDefinitionsActionTest.java":[{"add":["87","  private PropertyDefinitions propertyDefinitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["87","  private PropertyDefinitions propertyDefinitions = new PropertyDefinitions();"]}],"server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":[{"add":["27","import static org.sonar.process.ProcessProperties.Property.WEB_HOST;","28","import static org.sonar.process.ProcessProperties.Property.WEB_HTTP_ACCEPT_COUNT;","29","import static org.sonar.process.ProcessProperties.Property.WEB_HTTP_MAX_THREADS;","30","import static org.sonar.process.ProcessProperties.Property.WEB_HTTP_MIN_THREADS;","59","    connector.setProperty(\"address\", props.value(WEB_HOST.getKey(), \"0.0.0.0\"));","81","    connector.setProperty(\"minSpareThreads\", String.valueOf(props.valueAsInt(WEB_HTTP_MIN_THREADS.getKey(), 5)));","82","    connector.setProperty(\"maxThreads\", String.valueOf(props.valueAsInt(WEB_HTTP_MAX_THREADS.getKey(), 50)));","83","    connector.setProperty(\"acceptCount\", String.valueOf(props.valueAsInt(WEB_HTTP_ACCEPT_COUNT.getKey(), 25)));"],"delete":["55","    connector.setProperty(\"address\", props.value(\"sonar.web.host\", \"0.0.0.0\"));","77","    connector.setProperty(\"minSpareThreads\", String.valueOf(props.valueAsInt(\"sonar.web.http.minThreads\", 5)));","78","    connector.setProperty(\"maxThreads\", String.valueOf(props.valueAsInt(\"sonar.web.http.maxThreads\", 50)));","79","    connector.setProperty(\"acceptCount\", String.valueOf(props.valueAsInt(\"sonar.web.http.acceptCount\", 25)));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/qualitymodel\/RatingSettingsTest.java":[{"add":["29","import org.sonar.api.utils.System2;","40","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, CorePropertyDefinitions.all()));"],"delete":["39","  private MapSettings settings = new MapSettings(new PropertyDefinitions(CorePropertyDefinitions.all()));"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":[{"add":["30","import org.sonar.process.ProcessProperties;","35","import static org.sonar.process.ProcessProperties.Property.LOG_LEVEL;","36","import static org.sonar.process.ProcessProperties.Property.LOG_MAX_FILES;","37","import static org.sonar.process.ProcessProperties.Property.LOG_ROLLING_POLICY;","76","   * <li>the file will follow the rotation policy defined in property {@link ProcessProperties.Property#LOG_ROLLING_POLICY} and","77","   * the max number of files defined in property {@link org.sonar.process.ProcessProperties.Property#LOG_MAX_FILES}<\/li>","112","    String rollingPolicy = props.value(LOG_ROLLING_POLICY.getKey(), \"time:yyyy-MM-dd\");","113","    int maxFiles = props.valueAsInt(LOG_MAX_FILES.getKey(), 7);","125","      throw new MessageException(format(\"Unsupported value for property %s: %s\", LOG_ROLLING_POLICY.getKey(), rollingPolicy));","134","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, LOG_LEVEL.getKey());"],"delete":["72","   * <li>the file will follow the rotation policy defined in property {@link #ROLLING_POLICY_PROPERTY} and","73","   * the max number of files defined in property {@link #MAX_FILES_PROPERTY}<\/li>","108","    String rollingPolicy = props.value(ROLLING_POLICY_PROPERTY, \"time:yyyy-MM-dd\");","109","    int maxFiles = props.valueAsInt(MAX_FILES_PROPERTY, 7);","121","      throw new MessageException(format(\"Unsupported value for property %s: %s\", ROLLING_POLICY_PROPERTY, rollingPolicy));","130","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, SONAR_LOG_LEVEL_PROPERTY);"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/user\/SystemPasscodeImpl.java":[{"add":["29","import static org.sonar.process.ProcessProperties.Property.WEB_SYSTEM_PASS_CODE;","30","","55","    Optional<String> passcodeOpt = configuration.get(WEB_SYSTEM_PASS_CODE.getKey())"],"delete":["33","  public static final String PASSCODE_CONF_PROPERTY = \"sonar.web.systemPasscode\";","54","    Optional<String> passcodeOpt = configuration.get(PASSCODE_CONF_PROPERTY)"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/PauseAction.java":[{"add":["25","import org.sonar.process.ProcessProperties;","46","        \"system passcode (see \" + ProcessProperties.Property.WEB_SYSTEM_PASS_CODE + \" in sonar.properties).\")"],"delete":["27","import org.sonar.server.user.SystemPasscodeImpl;","46","        \"system passcode (see \" + SystemPasscodeImpl.PASSCODE_CONF_PROPERTY + \" in sonar.properties).\")"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationMediumTest.java":[{"add":["26","import org.sonar.api.config.internal.Settings;","29","import org.sonar.api.utils.System2;","71","    MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"],"delete":["25","import org.sonar.api.config.internal.Settings;","70","    MapSettings settings = new MapSettings(new PropertyDefinitions(NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/platform\/ComponentContainer.java":[{"add":["42","import org.sonar.api.utils.System2;","91","    this(picoContainer, new PropertyDefinitions(System2.INSTANCE));"],"delete":["90","    this(picoContainer, new PropertyDefinitions());"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/bootstrap\/GlobalConfigurationProviderTest.java":[{"add":["28","import org.sonar.api.utils.System2;","55","    GlobalConfiguration globalConfig = new GlobalConfigurationProvider().provide(globalServerSettings, scannerProps, new PropertyDefinitions(System2.INSTANCE));"],"delete":["36","  public static final String SOME_VALUE = \"some_value\";","55","    GlobalConfiguration globalConfig = new GlobalConfigurationProvider().provide(globalServerSettings, scannerProps, new PropertyDefinitions());"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":[{"add":["91","  private PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["91","  private PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/LogbackHelperTest.java":[{"add":["504","    assertThat(((LogbackJsonLayout) layout).getProcessKey()).isEqualTo(\"web\");","533","  @Test","534","  public void log_to_console_setting_missing() {","535","    assertThat(underTest.isAllLogsToConsoleEnabled(new Props(new Properties()))).isFalse();","536","  }","537","","538","  @Test","539","  public void log_to_console_setting_enabled() {","540","    Properties properties = new Properties();","541","    properties.setProperty(\"sonar.log.console\", \"true\");","542","    assertThat(underTest.isAllLogsToConsoleEnabled(new Props(properties))).isTrue();","543","  }","544","","545","  @Test","546","  public void log_to_console_setting_disabled() {","547","    Properties properties = new Properties();","548","    properties.setProperty(\"sonar.log.console\", \"false\");","549","    assertThat(underTest.isAllLogsToConsoleEnabled(new Props(properties))).isFalse();","550","  }","551",""],"delete":["504","    assertThat(((LogbackJsonLayout)layout).getProcessKey()).isEqualTo(\"web\");"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/platform\/UrlSettingsTest.java":[{"add":["26","import org.sonar.api.utils.System2;","41","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, CorePropertyDefinitions.all()));"],"delete":["40","  private MapSettings settings = new MapSettings(new PropertyDefinitions(CorePropertyDefinitions.all()));"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ResumeAction.java":[{"add":["25","import org.sonar.process.ProcessProperties;","46","        \"system passcode (see \" + ProcessProperties.Property.WEB_SYSTEM_PASS_CODE + \" in sonar.properties).\")"],"delete":["27","import org.sonar.server.user.SystemPasscodeImpl;","46","        \"system passcode (see \" + SystemPasscodeImpl.PASSCODE_CONF_PROPERTY + \" in sonar.properties).\")"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/InfoAction.java":[{"add":["25","import org.sonar.process.ProcessProperties;","48","        \"system passcode (see \" + ProcessProperties.Property.WEB_SYSTEM_PASS_CODE + \" in sonar.properties).\")"],"delete":["27","import org.sonar.server.user.SystemPasscodeImpl;","48","        \"system passcode (see \" + SystemPasscodeImpl.PASSCODE_CONF_PROPERTY + \" in sonar.properties).\")"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/config\/PropertyDefinitions.java":[{"add":["25","import java.util.Locale;","27","import java.util.Optional;","35","import org.sonar.api.scanner.ScannerSide;","38","import org.sonar.api.utils.System2;","41","import static java.util.Optional.ofNullable;","54","  private final Map<String, String> propertyValueFromEnvironment = new HashMap<>();","61","  private final System2 system;","62","","63","  public PropertyDefinitions(System2 system, Object... components) {","64","    this.system = system;","68","  public PropertyDefinitions(System2 system, Collection<PropertyDefinition> components) {","69","    this.system = system;","119","      String envVar = definition.key().toUpperCase(Locale.ENGLISH).replace('.', '_').replace('-', '_');","120","      ofNullable(system.envVariable(envVar)).ifPresent(value -> propertyValueFromEnvironment.put(definition.key(), value));","137","  public Optional<String> getValueFromEnv(String key) {","138","    return ofNullable(propertyValueFromEnvironment.get(key));","139","  }","140","","141","  public Map<String, String> getAllPropertiesSetInEnv() {","142","    return new HashMap<>(propertyValueFromEnvironment);","143","  }","144",""],"delete":["32","import org.sonar.api.scanner.ScannerSide;","56","  public PropertyDefinitions(Object... components) {","60","  public PropertyDefinitions(Collection<PropertyDefinition> components) {"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/SettingFormatter.java":[{"add":["22","import org.apache.commons.lang.StringUtils;","23","","24","import static org.apache.commons.lang.StringUtils.trim;","34","","35","  \/**","36","   * Value is split and trimmed.","37","   *\/","38","  public static String[] getStringArrayBySeparator(String value, String separator) {","39","    String[] strings = StringUtils.splitByWholeSeparator(value, separator);","40","    String[] result = new String[strings.length];","41","    for (int index = 0; index < strings.length; index++) {","42","      result[index] = trim(strings[index]);","43","    }","44","    return result;","45","  }"],"delete":[]}],"sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/config\/internal\/MapSettings.java":[{"add":["26","import org.sonar.api.utils.System2;","45","    this(new PropertyDefinitions(System2.INSTANCE));"],"delete":["44","    this(new PropertyDefinitions());"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueInclusionPatternInitializerTest.java":[{"add":["25","import org.sonar.api.utils.System2;","37","    settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, IssueExclusionProperties.all()));"],"delete":["36","    settings = new MapSettings(new PropertyDefinitions(IssueExclusionProperties.all()));"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/startup\/RenameDeprecatedPropertyKeysTest.java":[{"add":["25","import org.sonar.api.utils.System2;","28","import static org.mockito.Mockito.mock;","29","import static org.mockito.Mockito.verify;","30","import static org.mockito.Mockito.verifyNoMoreInteractions;","36","    PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE, FakeExtension.class);"],"delete":["27","import static org.mockito.Mockito.*;","33","    PropertyDefinitions definitions = new PropertyDefinitions(FakeExtension.class);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":[{"add":["32","import org.sonar.api.config.internal.Encryption;","62","  public ThreadLocalSettings(PropertyDefinitions definitions, Properties props) {","63","    this(definitions, props, new NopSettingLoader());","67","  ThreadLocalSettings(PropertyDefinitions definitions, Properties props, SettingLoader settingLoader) {","98","    Optional<String> envVal = getDefinitions().getValueFromEnv(key);","99","    if (envVal.isPresent()) {","100","      return envVal;","174","    getDefinitions().getAllPropertiesSetInEnv().forEach(result::put);"],"delete":["22","import java.util.AbstractMap;","29","import java.util.stream.Collectors;","30","import java.util.stream.Stream;","34","import org.sonar.api.config.internal.Encryption;","35","import org.sonar.api.config.PropertyDefinition;","39","import org.sonar.api.utils.System2;","40","import org.sonar.core.util.SettingFormatter;","63","  private final Properties corePropsFromEnvVariables = new Properties();","68","  private System2 system2;","70","  public ThreadLocalSettings(System2 system2, PropertyDefinitions definitions, Properties props) {","71","    this(system2, definitions, props, new NopSettingLoader());","75","  ThreadLocalSettings(System2 system2, PropertyDefinitions definitions, Properties props, SettingLoader settingLoader) {","77","    this.system2 = system2;","79","","80","    resolveCorePropertiesFromEnvironment();","109","    value = corePropsFromEnvVariables.getProperty(key);","110","    if (value != null) {","111","      return Optional.of(value);","185","    corePropsFromEnvVariables.forEach((k, v) -> result.put((String) k, (String) v));","199","","200","  private void resolveCorePropertiesFromEnvironment() {","201","    corePropsFromEnvVariables.putAll(this.getDefinitions().getAll()","202","      .stream()","203","      .map(PropertyDefinition::key)","204","      .flatMap(p -> {","205","        String envVar = SettingFormatter.fromJavaPropertyToEnvVariable(p);","206","        String envVarValue = system2.envVariable(envVar);","207","        if (envVarValue != null) {","208","          return Stream.of(new AbstractMap.SimpleEntry<>(p, envVarValue));","209","        } else {","210","          return Stream.empty();","211","        }","212","      })","213","      .collect(Collectors.toMap(AbstractMap.SimpleEntry::getKey, AbstractMap.SimpleEntry::getValue)));","214","  }"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":[{"add":["25","import org.sonar.process.ProcessProperties;","31","import static org.sonar.process.ProcessProperties.Property.LOG_CONSOLE;","56","   * App's System.out. This is specified by the value of property {@link ProcessProperties.Property#LOG_CONSOLE}.","59","    return props.valueAsBoolean(LOG_CONSOLE.getKey(), false);"],"delete":["33","  private static final String ALL_LOGS_TO_CONSOLE_PROPERTY = \"sonar.log.console\";","53","","56","   * App's System.out. This is specified by the value of property {@link #ALL_LOGS_TO_CONSOLE_PROPERTY}.","59","    return props.valueAsBoolean(ALL_LOGS_TO_CONSOLE_PROPERTY, false);"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/ProcessProperties.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","65","    LOG_LEVEL(\"sonar.log.level\"),","70","    LOG_ROLLING_POLICY(\"sonar.log.rollingPolicy\"),","71","    LOG_MAX_FILES(\"sonar.log.maxFiles\"),","72","    LOG_CONSOLE(\"sonar.log.console\"),","83","    WEB_HOST(\"sonar.web.host\"),","86","    WEB_CONTEXT(\"sonar.web.context\"),","89","    WEB_HTTP_MIN_THREADS(\"sonar.web.http.minThreads\"),","90","    WEB_HTTP_MAX_THREADS(\"sonar.web.http.maxThreads\"),","91","    WEB_HTTP_ACCEPT_COUNT(\"sonar.web.http.acceptCount\"),","92","    WEB_SESSION_TIMEOUT_IN_MIN(\"sonar.web.sessionTimeoutInMinutes\"),","93","    WEB_SYSTEM_PASS_CODE(\"sonar.web.systemPasscode\"),","94","    WEB_ACCESSLOGS_ENABLE(\"sonar.web.accessLogs.enable\"),","95","    WEB_ACCESSLOGS_PATTERN(\"sonar.web.accessLogs.pattern\"),","108","    HTTP_AUTH_NTLM_DOMAIN(\"http.auth.ntlm.domain\"),","132","    LDAP_SERVERS(\"ldap.servers\"),","133","    LDAP_URL(\"ldap.url\"),","134","    LDAP_BIND_DN(\"ldap.bindDn\"),","135","    LDAP_BIND_PASSWORD(\"ldap.bindPassword\"),","136","    LDAP_AUTHENTICATION(\"ldap.authentication\"),","137","    LDAP_REALM(\"ldap.realm\"),","138","    LDAP_CONTEXT_FACTORY_CLASS(\"ldap.contextFactoryClass\"),","139","    LDAP_START_TLS(\"ldap.StartTLS\"),","140","    LDAP_FOLLOW_REFERRALS(\"ldap.followReferrals\"),","141","    LDAP_USER_BASE_DN(\"ldap.user.baseDn\"),","142","    LDAP_USER_REQUEST(\"ldap.user.request\"),","143","    LDAP_USER_REAL_NAME_ATTRIBUTE(\"ldap.user.realNameAttribute\"),","144","    LDAP_USER_EMAIL_ATTRIBUTE(\"ldap.user.emailAttribute\"),","145","    LDAP_GROUP_BASE_DN(\"ldap.group.baseDn\"),","146","    LDAP_GROUP_REQUEST(\"ldap.group.request\"),","147","    LDAP_GROUP_ID_ATTRIBUTE(\"ldap.group.idAttribute\"),","148","","169","    \/**","170","     * Properties that are defined for each LDAP server from the `ldap.servers` property","171","     *\/","172","    public static final Set<String> MULTI_SERVER_LDAP_SETTINGS = ImmutableSet.of(","173","      \"ldap.*.url\",","174","      \"ldap.*.bindDn\",","175","      \"ldap.*.bindPassword\",","176","      \"ldap.*.authentication\",","177","      \"ldap.*.realm\",","178","      \"ldap.*.contextFactoryClass\",","179","      \"ldap.*.StartTLS\",","180","      \"ldap.*.followReferrals\",","181","      \"ldap.*.user.baseDn\",","182","      \"ldap.*.user.request\",","183","      \"ldap.*.user.realNameAttribute\",","184","      \"ldap.*.user.emailAttribute\",","185","      \"ldap.*.group.baseDn\",","186","      \"ldap.*.group.request\",","187","      \"ldap.*.group.idAttribute\");","188",""],"delete":["94","    HTTP_AUTH_NLM_DOMAN(\"http.auth.ntlm.domain\"),"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/config\/PropertyDefinitionsTest.java":[{"add":["21","import com.google.common.collect.ImmutableMap;","33","import org.sonar.api.utils.System2;","37","import static org.mockito.Mockito.mock;","38","import static org.mockito.Mockito.when;","50","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, list);","57","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","67","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, new PluginWithProperty(), new PluginWithProperties());","74","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, PluginWithProperty.class, PluginWithProperties.class);","81","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","91","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, Categories.class);","99","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE);","109","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE);","117","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE);","129","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","148","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","161","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, ByCategory.class);","182","    PropertyDefinitions underTest = new PropertyDefinitions(System2.INSTANCE);","192","    PropertyDefinitions underTest = new PropertyDefinitions(System2.INSTANCE);","205","    PropertyDefinitions underTest = new PropertyDefinitions(System2.INSTANCE, singletonList(","212","      .describedAs(\"expecting key %s being returned for get(%s)\", key, untrimmedKey)","213","      .isEqualTo(key);","222","  @Test","223","  public void get_value_from_env() {","224","    System2 system = mock(System2.class);","225","    when(system.envVariable(\"FOO\")).thenReturn(\"777\");","226","    when(system.envVariable(\"ONE\")).thenReturn(\"888\");","227","    when(system.envVariable(\"SOME_COMPLETELY_RANDOM_ENV_VAR\")).thenReturn(\"999\");","228","","229","    PropertyDefinitions underTest = new PropertyDefinitions(system, new PluginWithProperty(), new PluginWithProperties());","230","","231","    assertThat(underTest.getValueFromEnv(\"foo\")).hasValue(\"777\");","232","    assertThat(underTest.getValueFromEnv(\"one\")).hasValue(\"888\");","233","    assertThat(underTest.getValueFromEnv(\"two\")).isEmpty();","234","    assertThat(underTest.getValueFromEnv(\"some.unrecognizable.prop\")).isEmpty();","235","  }","236","","237","  @Test","238","  public void get_all_properties_set_in_env() {","239","    System2 system = mock(System2.class);","240","    when(system.envVariable(\"FOO\")).thenReturn(\"777\");","241","    when(system.envVariable(\"ONE\")).thenReturn(\"888\");","242","    when(system.envVariable(\"SOME_COMPLETELY_RANDOM_ENV_VAR\")).thenReturn(\"999\");","243","","244","    PropertyDefinitions underTest = new PropertyDefinitions(system, new PluginWithProperty(), new PluginWithProperties());","245","","246","    assertThat(underTest.getAllPropertiesSetInEnv()).containsExactlyInAnyOrderEntriesOf(ImmutableMap.of(\"foo\", \"777\", \"one\", \"888\"));","247","  }","248",""],"delete":["46","    PropertyDefinitions def = new PropertyDefinitions(list);","53","    PropertyDefinitions def = new PropertyDefinitions(","63","    PropertyDefinitions def = new PropertyDefinitions(new PluginWithProperty(), new PluginWithProperties());","70","    PropertyDefinitions def = new PropertyDefinitions(PluginWithProperty.class, PluginWithProperties.class);","77","    PropertyDefinitions def = new PropertyDefinitions(","87","    PropertyDefinitions def = new PropertyDefinitions(Categories.class);","95","    PropertyDefinitions def = new PropertyDefinitions();","105","    PropertyDefinitions def = new PropertyDefinitions();","113","    PropertyDefinitions def = new PropertyDefinitions();","125","    PropertyDefinitions def = new PropertyDefinitions(","144","    PropertyDefinitions def = new PropertyDefinitions(","157","    PropertyDefinitions def = new PropertyDefinitions(ByCategory.class);","178","    PropertyDefinitions underTest = new PropertyDefinitions();","188","    PropertyDefinitions underTest = new PropertyDefinitions();","201","    PropertyDefinitions underTest = new PropertyDefinitions(singletonList(","208","        .describedAs(\"expecting key %s being returned for get(%s)\", key, untrimmedKey)","209","        .isEqualTo(key);"]}],"server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":[{"add":["34","import static org.sonar.process.ProcessProperties.Property.WEB_CONTEXT;","69","    String context = props.value(WEB_CONTEXT.getKey(), \"\");","73","      throw MessageException.of(format(\"Value of '%s' must start with a forward slash: '%s'\", WEB_CONTEXT.getKey(), context));"],"delete":["43","","44","  private static final String PROPERTY_CONTEXT = \"sonar.web.context\";","70","    String context = props.value(PROPERTY_CONTEXT, \"\");","74","      throw MessageException.of(format(\"Value of '%s' must start with a forward slash: '%s'\", PROPERTY_CONTEXT, context));"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueExclusionPatternInitializerTest.java":[{"add":["26","import org.sonar.api.utils.System2;","37","    settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, IssueExclusionProperties.all()));"],"delete":["36","    settings = new MapSettings(new PropertyDefinitions(IssueExclusionProperties.all()));"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/SettingFormatterTest.java":[{"add":["32","","33","  @Test","34","  public void test_getStringArrayBySeparator_on_input_with_separator() {","35","    String[] result = SettingFormatter.getStringArrayBySeparator(\" abc, DeF  , ghi\", \",\");","36","    assertThat(result).containsExactly(\"abc\", \"DeF\", \"ghi\");","37","  }","38","","39","  @Test","40","  public void test_getStringArrayBySeparator_on_input_without_separator() {","41","    String[] result = SettingFormatter.getStringArrayBySeparator(\" abc, DeF  , ghi\", \";\");","42","    assertThat(result).containsExactly(\"abc, DeF  , ghi\");","43","  }"],"delete":[]}],"server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/GitHubSettingsTest.java":[{"add":["24","import org.sonar.api.utils.System2;","30","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitHubSettings.definitions()));"],"delete":["29","  private MapSettings settings = new MapSettings(new PropertyDefinitions(GitHubSettings.definitions()));"]}],"server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/IntegrationTest.java":[{"add":["39","import org.sonar.api.utils.System2;","55","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitHubSettings.definitions()));"],"delete":["54","  private MapSettings settings = new MapSettings(new PropertyDefinitions(GitHubSettings.definitions()));"]}],"server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlIdentityProviderTest.java":[{"add":["29","import org.apache.commons.io.IOUtils;","38","import org.sonar.api.utils.System2;","51","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, SamlSettings.definitions()));"],"delete":["34","import org.apache.commons.io.IOUtils;","50","  private MapSettings settings = new MapSettings(new PropertyDefinitions(SamlSettings.definitions()));"]}],"server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/UserIdentityFactoryImplTest.java":[{"add":["27","import org.sonar.api.utils.System2;","36","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitHubSettings.definitions()));"],"delete":["35","  private MapSettings settings = new MapSettings(new PropertyDefinitions(GitHubSettings.definitions()));"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":[{"add":["35","import org.sonar.api.Property;","73","    underTest = create(system, Collections.emptyMap());","82","    underTest = create(system, ImmutableMap.of(\"foo\", \"bar\"));","91","    underTest = create(system, Collections.emptyMap());","104","    underTest = create(system, Collections.emptyMap());","123","    underTest = create(system, ImmutableMap.of(\"foo\", \"from_system\"));","133","    underTest = create(system, ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", secretKey.getAbsolutePath()));","140","    underTest = create(system, ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", \"unknown\/path\/to\/sonar-secret.txt\"));","145","  private ThreadLocalSettings create(System2 system, Map<String, String> systemProps) {","146","    PropertyDefinitions definitions = new PropertyDefinitions(system);","147","    definitions.addComponents(CorePropertyDefinitions.all());","148","    definitions.addComponent(new AnnotatedTestClass());","149","","152","    return new ThreadLocalSettings(definitions, p, dbSettingLoader);","157","    underTest = create(system, ImmutableMap.of(\"foo\", \"1\", \"bar\", \"2\"));","167","    when(system.envVariable(\"SONAR_ANNOTATION_TEST_PROP\")).thenReturn(\"113\");","168","    underTest = create(system, ImmutableMap.of());","171","    assertThat(underTest.get(\"sonar.annotation.test.prop\")).hasValue(\"113\");","173","    assertThat(underTest.getProperties()).containsOnly(entry(\"sonar.forceAuthentication\", \"true\"), entry(\"sonar.annotation.test.prop\", \"113\"));","179","    underTest = create(system, Collections.emptyMap());","191","    underTest = create(system, ImmutableMap.of(\"foo\", \"from system\"));","200","    underTest = create(system, ImmutableMap.of(\"system\", \"from system\"));","208","    underTest = create(system, Collections.emptyMap());","228","    underTest = create(system, Collections.emptyMap());","248","    underTest = create(system, emptyMap());","259","    underTest = create(system, Collections.emptyMap());","272","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties());","283","    underTest = create(system, Collections.emptyMap());","295","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","306","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","325","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","349","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","360","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","426","","427","  @org.sonar.api.Properties({","428","    @Property(","429","      key = \"sonar.annotation.test.prop\",","430","      defaultValue = \"60\",","431","      name = \"Test annotation property\",","432","      global = false)","433","  })","434","  class AnnotatedTestClass {","435","  }"],"delete":["72","    underTest = create(Collections.emptyMap());","81","    underTest = create(ImmutableMap.of(\"foo\", \"bar\"));","90","    underTest = create(Collections.emptyMap());","103","    underTest = create(Collections.emptyMap());","122","    underTest = create(ImmutableMap.of(\"foo\", \"from_system\"));","132","    underTest = create(ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", secretKey.getAbsolutePath()));","139","    underTest = create(ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", \"unknown\/path\/to\/sonar-secret.txt\"));","144","  private ThreadLocalSettings create(Map<String, String> systemProps) {","147","    return new ThreadLocalSettings(system, new PropertyDefinitions(CorePropertyDefinitions.all()), p, dbSettingLoader);","152","    underTest = create(ImmutableMap.of(\"foo\", \"1\", \"bar\", \"2\"));","162","    underTest = create(ImmutableMap.of());","166","    assertThat(underTest.getProperties()).containsOnly(entry(\"sonar.forceAuthentication\", \"true\"));","172","    underTest = create(Collections.emptyMap());","184","    underTest = create(ImmutableMap.of(\"foo\", \"from system\"));","193","    underTest = create(ImmutableMap.of(\"system\", \"from system\"));","201","    underTest = create(Collections.emptyMap());","221","    underTest = create(Collections.emptyMap());","241","    underTest = create(emptyMap());","252","    underTest = create(Collections.emptyMap());","265","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties());","276","    underTest = create(Collections.emptyMap());","288","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","299","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","318","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","342","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","353","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":[{"add":["93","  private PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["93","  private PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImpl.java":[{"add":["27","import java.util.HashSet;","35","import org.sonar.core.util.SettingFormatter;","43","import static java.util.Arrays.stream;","46","import static org.sonar.process.ProcessProperties.Property.LDAP_SERVERS;","47","import static org.sonar.process.ProcessProperties.Property.MULTI_SERVER_LDAP_SETTINGS;","79","    Set<String> keysOverridableFromEnv = stream(ProcessProperties.Property.values()).map(ProcessProperties.Property::getKey)","80","      .collect(Collectors.toSet());","81","    keysOverridableFromEnv.addAll(p.stringPropertyNames());","82","","83","    \/\/ 1st pass to load static properties","84","    Props staticProps = reloadProperties(keysOverridableFromEnv, p);","85","    keysOverridableFromEnv.addAll(getDynamicPropertiesKeys(staticProps));","86","","87","    \/\/ 2nd pass to load dynamic properties like `ldap.*.url` or `ldap.*.baseDn` which keys depend on values of static","88","    \/\/ properties loaded in 1st step","89","    Props props = reloadProperties(keysOverridableFromEnv, p);","90","","91","    new ProcessProperties(serviceLoaderWrapper).completeDefaults(props);","92","    stream(consumers).forEach(c -> c.accept(props));","93","    return new AppSettingsImpl(props);","94","  }","95","","96","  private static Set<String> getDynamicPropertiesKeys(Props p) {","97","    Set<String> dynamicPropertiesKeys = new HashSet<>();","98","    String ldapServersValue = p.value(LDAP_SERVERS.getKey());","99","    if (ldapServersValue != null) {","100","      stream(SettingFormatter.getStringArrayBySeparator(ldapServersValue, \",\")).forEach(","101","        ldapServer -> MULTI_SERVER_LDAP_SETTINGS.forEach(","102","          multiLdapSetting -> dynamicPropertiesKeys.add(multiLdapSetting.replace(\"*\", ldapServer))));","103","    }","104","","105","    return dynamicPropertiesKeys;","106","  }","107","","108","  private Props reloadProperties(Set<String> keysOverridableFromEnv, Properties p) {","109","    loadPropertiesFromEnvironment(system, p, keysOverridableFromEnv);","117","    return new Props(p);","120","  private static void loadPropertiesFromEnvironment(System2 system, Properties properties, Set<String> overridableSettings) {","121","    overridableSettings.forEach(key -> {"],"delete":["27","import java.util.Arrays;","75","    fetchSettingsFromEnvironment(system, p);","83","    Props props = new Props(p);","84","    new ProcessProperties(serviceLoaderWrapper).completeDefaults(props);","85","    Arrays.stream(consumers).forEach(c -> c.accept(props));","86","","87","    return new AppSettingsImpl(props);","90","  private static void fetchSettingsFromEnvironment(System2 system, Properties properties) {","91","    Set<String> possibleSettings = Arrays.stream(ProcessProperties.Property.values()).map(ProcessProperties.Property::getKey)","92","      .collect(Collectors.toSet());","93","    possibleSettings.addAll(properties.stringPropertyNames());","94","    possibleSettings.forEach(key -> {"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImplTest.java":[{"add":["90","  public void load_multi_ldap_settings() throws IOException {","91","    when(system.getenv()).thenReturn(ImmutableMap.of(","92","      \"LDAP_FOO_URL\", \"url1\",","93","      \"LDAP_RANDOM_PROP\", \"5\"));","94","    when(system.getenv(\"LDAP_FOO_URL\")).thenReturn(\"url1\");","95","    when(system.getenv(\"LDAP_RANDOM_PROP\")).thenReturn(\"5\");","96","    File homeDir = temp.newFolder();","97","    File propsFile = new File(homeDir, \"conf\/sonar.properties\");","98","    FileUtils.write(propsFile, \"ldap.servers=foo,bar\\n\" +","99","      \"ldap.bar.url=url2\", UTF_8);","100","    AppSettingsLoaderImpl underTest = new AppSettingsLoaderImpl(system, new String[0], homeDir, serviceLoaderWrapper);","101","","102","    AppSettings settings = underTest.load();","103","","104","    assertThat(settings.getProps().rawProperties()).contains(","105","      entry(\"ldap.servers\", \"foo,bar\"),","106","      entry(\"ldap.foo.url\", \"url1\"),","107","      entry(\"ldap.bar.url\", \"url2\"));","108","  }","109","","110","  @Test"],"delete":[]}],"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/config\/internal\/MapSettingsTest.java":[{"add":["43","import org.sonar.api.utils.System2;","78","    definitions = new PropertyDefinitions(System2.INSTANCE);","132","    Settings underTest = new MapSettings(new PropertyDefinitions(System2.INSTANCE, singletonList(PropertyDefinition.builder(key).multiValues(true).build())));","163","    Settings underTest = new MapSettings(new PropertyDefinitions(System2.INSTANCE, singletonList(PropertyDefinition.builder(key).multiValues(true).build())));"],"delete":["77","    definitions = new PropertyDefinitions();","131","    Settings underTest = new MapSettings(new PropertyDefinitions(singletonList(PropertyDefinition.builder(key).multiValues(true).build())));","162","    Settings underTest = new MapSettings(new PropertyDefinitions(singletonList(PropertyDefinition.builder(key).multiValues(true).build())));"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationDaemonTest.java":[{"add":["30","import org.sonar.api.utils.System2;","46","    MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"],"delete":["45","    MapSettings settings = new MapSettings(new PropertyDefinitions(NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":[{"add":["25","import org.sonar.api.utils.System2;","46","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, PurgeProperties.all()));"],"delete":["23","import org.sonar.api.CoreProperties;","36","import static org.mockito.ArgumentMatchers.anyLong;","38","import static org.mockito.Mockito.never;","48","  private MapSettings settings = new MapSettings(new PropertyDefinitions(PurgeProperties.all()));"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogbackHelper.java":[{"add":["49","import org.sonar.process.ProcessProperties;","54","import static org.sonar.process.ProcessProperties.Property.LOG_CONSOLE;","55","import static org.sonar.process.ProcessProperties.Property.LOG_LEVEL;","56","import static org.sonar.process.ProcessProperties.Property.LOG_MAX_FILES;","57","import static org.sonar.process.ProcessProperties.Property.LOG_ROLLING_POLICY;","124","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, LOG_LEVEL.getKey());","175","   * <li>the file will follow the rotation policy defined in property {@link ProcessProperties.Property#LOG_ROLLING_POLICY} and","176","   * the max number of files defined in property {@link org.sonar.process.ProcessProperties.Property#LOG_MAX_FILES}<\/li>","210","   * App's System.out. This is specified by the value of property {@link ProcessProperties.Property#LOG_CONSOLE}.","213","    return props.valueAsBoolean(LOG_CONSOLE.getKey(), false);","247","    String rollingPolicy = props.value(LOG_ROLLING_POLICY.getKey(), \"time:yyyy-MM-dd\");","248","    int maxFiles = props.valueAsInt(LOG_MAX_FILES.getKey(), 7);","261","      throw new MessageException(format(\"Unsupported value for property %s: %s\", LOG_ROLLING_POLICY.getKey(), rollingPolicy));"],"delete":["60","  private static final String ALL_LOGS_TO_CONSOLE_PROPERTY = \"sonar.log.console\";","120","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, SONAR_LOG_LEVEL_PROPERTY);","171","   * <li>the file will follow the rotation policy defined in property {@link #ROLLING_POLICY_PROPERTY} and","172","   * the max number of files defined in property {@link #MAX_FILES_PROPERTY}<\/li>","206","   * App's System.out. This is specified by the value of property {@link #ALL_LOGS_TO_CONSOLE_PROPERTY}.","209","    return props.valueAsBoolean(ALL_LOGS_TO_CONSOLE_PROPERTY, false);","243","    String rollingPolicy = props.value(ROLLING_POLICY_PROPERTY, \"time:yyyy-MM-dd\");","244","    int maxFiles = props.valueAsInt(MAX_FILES_PROPERTY, 7);","257","      throw new MessageException(format(\"Unsupported value for property %s: %s\", ROLLING_POLICY_PROPERTY, rollingPolicy));"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SettingsUpdaterTest.java":[{"add":["61","  PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["61","  PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ChildSettingsTest.java":[{"add":["31","import org.sonar.api.utils.System2;","49","    MapSettings parent = new MapSettings(new PropertyDefinitions(System2.INSTANCE, Collections.singletonList(multipleValues)));"],"delete":["48","    MapSettings parent = new MapSettings(new PropertyDefinitions(Collections.singletonList(multipleValues)));"]}],"server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlSettingsTest.java":[{"add":["30","import org.sonar.api.utils.System2;","40","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, SamlSettings.definitions()));"],"delete":["39","  private MapSettings settings = new MapSettings(new PropertyDefinitions(SamlSettings.definitions()));"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":[{"add":["29","import org.sonar.api.config.internal.Encryption;","30","import org.sonar.api.utils.System2;","34","import static java.util.Collections.singletonList;","45","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, Arrays.asList(","72","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, Arrays.asList(","91","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, Arrays.asList(","118","    assertThat(getStringArray(\"  \\\" , ,, \\\", a\\n,b\\n\")).containsExactly(\" , ,, \", \"a\", \"b\");","131","    return new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, singletonList("],"delete":["26","import org.sonar.api.config.internal.Encryption;","43","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(Arrays.asList(","70","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(Arrays.asList(","89","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(Arrays.asList(","116","    assertThat(getStringArray(\"  \\\" , ,, \\\", a\\n,b\\n\")).containsExactly(\" , ,, \", \"a\",\"b\");","129","    return new DefaultConfiguration(new PropertyDefinitions(Arrays.asList("]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ResetActionTest.java":[{"add":["83","  private PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["83","  private PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/config\/ConfigurationProviderTest.java":[{"add":["30","import org.sonar.api.utils.System2;","41","  private final MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE,"],"delete":["40","  private final MapSettings settings = new MapSettings(new PropertyDefinitions("]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":[{"add":["41","import static org.sonar.process.ProcessProperties.Property.HTTP_AUTH_NTLM_DOMAIN;","67","    HTTP_AUTH_NTLM_DOMAIN.getKey(),"],"delete":["41","import static org.sonar.process.ProcessProperties.Property.HTTP_AUTH_NLM_DOMAN;","67","    HTTP_AUTH_NLM_DOMAN.getKey(),"]}],"server\/sonar-auth-gitlab\/src\/test\/java\/org\/sonar\/auth\/gitlab\/GitLabSettingsTest.java":[{"add":["27","import org.sonar.api.utils.System2;","47","    settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitLabSettings.definitions()));"],"delete":["46","    settings = new MapSettings(new PropertyDefinitions(GitLabSettings.definitions()));","57",""]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogLevelConfig.java":[{"add":["34","import static org.sonar.process.ProcessProperties.Property.LOG_LEVEL;","37","  private static final String SONAR_LOG_LEVEL_PROPERTY = LOG_LEVEL.getKey();","39","  private static final String SONAR_PROCESS_LOG_LEVEL_PROPERTY = SONAR_LOG_LEVEL_PROPERTY + \".\" + PROCESS_NAME_PLACEHOLDER;"],"delete":["36","  private static final String SONAR_LOG_LEVEL_PROPERTY = \"sonar.log.level\";","38","  private static final String SONAR_PROCESS_LOG_LEVEL_PROPERTY = \"sonar.log.level.\" + PROCESS_NAME_PLACEHOLDER;"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":[{"add":["42","import static org.sonar.process.ProcessProperties.Property.WEB_SESSION_TIMEOUT_IN_MIN;","176","    int minutes = config.getInt(WEB_SESSION_TIMEOUT_IN_MIN.getKey()).orElse(SESSION_TIMEOUT_DEFAULT_VALUE_IN_MINUTES);","177","    checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s\", WEB_SESSION_TIMEOUT_IN_MIN.getKey(), minutes);","178","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES,","179","      \"Property %s must not be greater than 3 months (%s minutes). Got %s minutes\", WEB_SESSION_TIMEOUT_IN_MIN.getKey(),","180","      MAX_SESSION_TIMEOUT_IN_MINUTES, minutes);"],"delete":["47","","48","  private static final String SESSION_TIMEOUT_IN_MINUTES_PROPERTY = \"sonar.web.sessionTimeoutInMinutes\";","177","    int minutes = config.getInt(SESSION_TIMEOUT_IN_MINUTES_PROPERTY).orElse(SESSION_TIMEOUT_DEFAULT_VALUE_IN_MINUTES);","178","    checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s\", SESSION_TIMEOUT_IN_MINUTES_PROPERTY, minutes);","179","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES, \"Property %s must not be greater than 3 months (%s minutes). Got %s minutes\",","180","      SESSION_TIMEOUT_IN_MINUTES_PROPERTY, MAX_SESSION_TIMEOUT_IN_MINUTES, minutes);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/platform\/UrlSettings.java":[{"add":["29","import static org.sonar.process.ProcessProperties.Property.WEB_CONTEXT;","30","import static org.sonar.process.ProcessProperties.Property.WEB_HOST;","45","    this.contextPath = config.get(WEB_CONTEXT.getKey()).orElse(\"\")","68","    String host = config.get(WEB_HOST.getKey()).orElse(\"\");","70","    String context = config.get(WEB_CONTEXT.getKey()).orElse(\"\");"],"delete":["33","  private static final String PROPERTY_CONTEXT = \"sonar.web.context\";","34","","45","    this.contextPath = config.get(PROPERTY_CONTEXT).orElse(\"\")","68","    String host = config.get(\"sonar.web.host\").orElse(\"\");","70","    String context = config.get(PROPERTY_CONTEXT).orElse(\"\");"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/measure\/live\/LiveMeasureComputerImplTest.java":[{"add":["41","import org.sonar.api.utils.System2;","402","    MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, CorePropertyDefinitions.all()));"],"delete":["401","    MapSettings settings = new MapSettings(new PropertyDefinitions(CorePropertyDefinitions.all()));"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/platform\/monitoring\/SettingsSectionTest.java":[{"add":["26","import org.sonar.api.config.internal.Settings;","27","import org.sonar.api.utils.System2;","39","  private PropertyDefinitions defs = new PropertyDefinitions(System2.INSTANCE, PropertyDefinition.builder(PASSWORD_PROPERTY).type(PropertyType.PASSWORD).build());"],"delete":["25","import org.sonar.api.config.internal.Settings;","38","  private PropertyDefinitions defs = new PropertyDefinitions(PropertyDefinition.builder(PASSWORD_PROPERTY).type(PropertyType.PASSWORD).build());"]}]}},"f2f3ede233eca98118c026c7cf151145eb0dfa99":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/duplications.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/__snapshots__\/loadIssues-test.ts.snap":"ADD","server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/duplications-test.ts":"ADD","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/loadIssues-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/app\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/loadIssues.ts":"ADD","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/components.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineNumber.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineDuplicationBlock.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/getCoverageStatus.ts":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/duplications.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/styles.css":[{"add":["256",".snippet > .expand-block:hover,","257",".snippet > .expand-block:focus,","258",".snippet > .expand-block:active {","260","  outline: none;"],"delete":["256",".snippet > .expand-block:hover {"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":[{"add":["25","  onPopupToggle: (linePopup: T.LinePopup) => void;"],"delete":["25","  onPopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.tsx":[{"add":["48","  linePopup: T.LinePopup | undefined;","50","  onLinePopupToggle: (linePopup: T.LinePopup) => void;","61","  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;"],"delete":["48","  linePopup: { index?: number; line: number; name: string } | undefined;","50","  onLinePopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;","61","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/__snapshots__\/loadIssues-test.ts.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":[{"add":["33","  outline: none;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetViewer.tsx":[{"add":["20","import * as classNames from 'classnames';","33","import { getSources } from '..\/..\/..\/api\/components';","45","  duplications?: T.Duplication[];","46","  duplicationsByLine?: { [line: number]: number[] };","52","  linePopup?: T.LinePopup;","53","  loadDuplications: (component: string, line: T.SourceLine) => void;","57","  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;","59","  renderDuplicationPopup: (","60","    component: T.SourceViewerFile,","61","    index: number,","62","    line: number","63","  ) => React.ReactNode;","173","          this.setState({ loading: false, snippets: [lines] });","184","  handleLinePopupToggle = (linePopup: T.LinePopup) => {","185","    this.props.onLinePopupToggle({","186","      ...linePopup,","187","      component: this.props.snippetGroup.component.key","207","  loadDuplications = (line: T.SourceLine) => {","208","    this.props.loadDuplications(this.props.snippetGroup.component.key, line);","209","  };","210","","211","  renderDuplicationPopup = (index: number, line: number) => {","212","    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);","213","  };","214","","235","    const { duplications, duplicationsByLine } = this.props;","236","    const duplicationsCount = duplications ? duplications.length : 0;","237","    const lineDuplications =","238","      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];","247","        displayDuplications={!!line.duplicated}","250","        duplications={lineDuplications}","251","        duplicationsCount={duplicationsCount}","264","        linePopup={this.props.linePopup}","265","        loadDuplications={this.loadDuplications}","268","        onIssueSelect={() => {}}","269","        onIssueUnselect={() => {}}","277","        renderDuplicationPopup={this.renderDuplicationPopup}","360","    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;","370","      <div","371","        className={classNames('component-source-container', {","372","          'source-duplications-expanded': duplications && duplications.length > 0","373","        })}>"],"delete":["28","import { getSources } from '..\/..\/..\/api\/components';","53","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;","61","  linePopup?: { index?: number; line: number; name: string };","142","                linePopup: undefined,","165","          this.setState({ linePopup: undefined, loading: false, snippets: [lines] });","176","  handleLinePopupToggle = ({","177","    index,","178","    line,","179","    name,","180","    open","181","  }: {","182","    index?: number;","183","    line: number;","184","    name: string;","185","    open?: boolean;","186","  }) => {","187","    this.setState((state: State) => {","188","      const samePopup =","189","        state.linePopup !== undefined &&","190","        state.linePopup.name === name &&","191","        state.linePopup.line === line &&","192","        state.linePopup.index === index;","193","      if (open !== false && !samePopup) {","194","        return { linePopup: { index, line, name } };","195","      } else if (open !== true && samePopup) {","196","        return { linePopup: undefined };","197","      }","198","      return null;","236","","239","    const noop = () => {};","248","        displayDuplications={false}","251","        duplications={[]}","252","        duplicationsCount={0}","265","        linePopup={this.state.linePopup}","266","        loadDuplications={noop}","269","        onIssueSelect={noop}","270","        onIssueUnselect={noop}","278","        renderDuplicationPopup={this.props.renderDuplicationPopup}","361","    const { branchLike, issue, issuesByLine, last, snippetGroup } = this.props;","371","      <div className=\"component-source-container\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":[{"add":["23","import DuplicationPopup from '..\/..\/..\/components\/SourceViewer\/components\/DuplicationPopup';","24","import { WorkspaceContext } from '..\/..\/..\/components\/workspace\/context';","26","import {","27","  filterDuplicationBlocksByLine,","28","  isDuplicationBlockInRemovedComponent,","29","  getDuplicationBlocksForIndex","30","} from '..\/..\/..\/components\/SourceViewer\/helpers\/duplications';","31","import {","32","  duplicationsByLine,","33","  issuesByComponentAndLine","34","} from '..\/..\/..\/components\/SourceViewer\/helpers\/indexing';","35","import { getDuplications } from '..\/..\/..\/api\/components';","36","import { getBranchLikeQuery } from '..\/..\/..\/helpers\/branches';","51","interface State {","52","  components: T.Dict<T.SnippetsByComponent>;","53","  duplicatedFiles?: T.Dict<T.DuplicatedFile>;","54","  duplications?: T.Duplication[];","55","  duplicationsByLine: { [line: number]: number[] };","56","  issuePopup?: { issue: string; name: string };","57","  linePopup?: T.LinePopup & { component: string };","58","  loading: boolean;","59","}","60","","65","    duplicationsByLine: {},","84","  fetchDuplications = (component: string, line: T.SourceLine) => {","85","    getDuplications({","86","      key: component,","87","      ...getBranchLikeQuery(this.props.branchLike)","88","    }).then(","89","      r => {","90","        if (this.mounted) {","91","          this.setState(state => ({","92","            duplicatedFiles: r.files,","93","            duplications: r.duplications,","94","            duplicationsByLine: duplicationsByLine(r.duplications),","95","            linePopup:","96","              r.duplications.length === 1","97","                ? { component, index: 0, line: line.line, name: 'duplications' }","98","                : state.linePopup","99","          }));","100","        }","101","      },","102","      () => {}","103","    );","104","  };","105","","111","          this.setState({","112","            components,","113","            issuePopup: undefined,","114","            linePopup: undefined,","115","            loading: false","116","          });","143","  handleLinePopupToggle = ({","144","    component,","145","    index,","146","    line,","147","    name,","148","    open","149","  }: T.LinePopup & { component: string }) => {","150","    this.setState((state: State) => {","151","      const samePopup =","152","        state.linePopup !== undefined &&","153","        state.linePopup.line === line &&","154","        state.linePopup.name === name &&","155","        state.linePopup.component === component &&","156","        state.linePopup.index === index;","157","      if (open !== false && !samePopup) {","158","        return { linePopup: { component, index, line, name } };","159","      } else if (open !== true && samePopup) {","160","        return { linePopup: undefined };","161","      }","162","      return null;","163","    });","164","  };","165","","166","  handleCloseLinePopup = () => {","167","    this.setState({ linePopup: undefined });","168","  };","169","","170","  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {","171","    const { duplicatedFiles, duplications } = this.state;","172","","173","    if (!component || !duplicatedFiles) {","174","      return null;","175","    }","176","","177","    const blocks = getDuplicationBlocksForIndex(duplications, index);","178","","179","    return (","180","      <WorkspaceContext.Consumer>","181","        {({ openComponent }) => (","182","          <DuplicationPopup","183","            blocks={filterDuplicationBlocksByLine(blocks, line)}","184","            branchLike={this.props.branchLike}","185","            duplicatedFiles={duplicatedFiles}","186","            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}","187","            onClose={this.handleCloseLinePopup}","188","            openComponent={openComponent}","189","            sourceViewerFile={component}","190","          \/>","191","        )}","192","      <\/WorkspaceContext.Consumer>","193","    );","194","  };","195","","197","    const { loading } = this.state;","207","    const { components, duplications, duplicationsByLine, linePopup } = this.state;","213","        {locationsByComponent.map((snippetGroup, i) => {","214","          let componentProps = {};","215","          if (linePopup && snippetGroup.component.key === linePopup.component) {","216","            componentProps = {","217","              duplications,","218","              duplicationsByLine,","219","              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }","220","            };","221","          }","222","          return (","223","            <ComponentSourceSnippetViewer","224","              branchLike={this.props.branchLike}","225","              highlightedLocationMessage={this.props.highlightedLocationMessage}","226","              issue={this.props.issue}","227","              issuePopup={this.state.issuePopup}","228","              issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}","229","              key={`${this.props.issue.key}-${this.props.selectedFlowIndex}-${i}`}","230","              last={i === locationsByComponent.length - 1}","231","              loadDuplications={this.fetchDuplications}","232","              locations={snippetGroup.locations || []}","233","              onIssueChange={this.props.onIssueChange}","234","              onIssuePopupToggle={this.handleIssuePopupToggle}","235","              onLinePopupToggle={this.handleLinePopupToggle}","236","              onLocationSelect={this.props.onLocationSelect}","237","              renderDuplicationPopup={this.renderDuplicationPopup}","238","              scroll={this.props.scroll}","239","              snippetGroup={snippetGroup}","240","              {...componentProps}","241","            \/>","242","          );","243","        })}"],"delete":["24","import { issuesByComponentAndLine } from '..\/..\/..\/components\/SourceViewer\/helpers\/indexing';","25","","26","interface State {","27","  components: T.Dict<T.SnippetsByComponent>;","28","  issuePopup?: { issue: string; name: string };","29","  loading: boolean;","30","}","41","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;","73","          this.setState({ components, issuePopup: undefined, loading: false });","101","    const { components, loading } = this.state;","116","        {locationsByComponent.map((g, i) => (","117","          <ComponentSourceSnippetViewer","118","            branchLike={this.props.branchLike}","119","            highlightedLocationMessage={this.props.highlightedLocationMessage}","120","            issue={this.props.issue}","121","            issuePopup={this.state.issuePopup}","122","            issuesByLine={issuesByComponent[g.component.key] || {}}","123","            key={`${this.props.issue.key}-${this.props.selectedFlowIndex}-${i}`}","124","            last={i === locationsByComponent.length - 1}","125","            locations={g.locations || []}","126","            onIssueChange={this.props.onIssueChange}","127","            onIssuePopupToggle={this.handleIssuePopupToggle}","128","            onLocationSelect={this.props.onLocationSelect}","129","            renderDuplicationPopup={this.props.renderDuplicationPopup}","130","            scroll={this.props.scroll}","131","            snippetGroup={g}","132","          \/>","133","        ))}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/duplications-test.ts":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/loadIssues-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":[{"add":["259","    _ref?: string;","421","  export interface LinePopup {","422","    index?: number;","423","    line: number;","424","    name: string;","425","    open?: boolean;","426","  }","427",""],"delete":["259","    _ref: string;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":[{"add":["2","exports[`should handle duplication popup 1`] = `","3","<Context.Consumer>","4","  [Function]","5","<\/Context.Consumer>","6","`;","7","","15","","16","exports[`should render correctly 2`] = `","17","<div>","18","  <ComponentSourceSnippetViewer","19","    issue={","20","      Object {","21","        \"actions\": Array [],","22","        \"component\": \"main.js\",","23","        \"componentLongName\": \"main.js\",","24","        \"componentQualifier\": \"FIL\",","25","        \"componentUuid\": \"foo1234\",","26","        \"creationDate\": \"2017-03-01T09:36:01+0100\",","27","        \"flows\": Array [","28","          Array [","29","            Object {","30","              \"component\": \"main.js\",","31","              \"textRange\": Object {","32","                \"endLine\": 2,","33","                \"endOffset\": 2,","34","                \"startLine\": 1,","35","                \"startOffset\": 1,","36","              },","37","            },","38","            Object {","39","              \"component\": \"main.js\",","40","              \"textRange\": Object {","41","                \"endLine\": 2,","42","                \"endOffset\": 2,","43","                \"startLine\": 1,","44","                \"startOffset\": 1,","45","              },","46","            },","47","            Object {","48","              \"component\": \"main.js\",","49","              \"textRange\": Object {","50","                \"endLine\": 2,","51","                \"endOffset\": 2,","52","                \"startLine\": 1,","53","                \"startOffset\": 1,","54","              },","55","            },","56","          ],","57","          Array [","58","            Object {","59","              \"component\": \"main.js\",","60","              \"textRange\": Object {","61","                \"endLine\": 2,","62","                \"endOffset\": 2,","63","                \"startLine\": 1,","64","                \"startOffset\": 1,","65","              },","66","            },","67","            Object {","68","              \"component\": \"main.js\",","69","              \"textRange\": Object {","70","                \"endLine\": 2,","71","                \"endOffset\": 2,","72","                \"startLine\": 1,","73","                \"startOffset\": 1,","74","              },","75","            },","76","          ],","77","        ],","78","        \"fromHotspot\": false,","79","        \"key\": \"1\",","80","        \"line\": 25,","81","        \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","82","        \"organization\": \"myorg\",","83","        \"project\": \"myproject\",","84","        \"projectKey\": \"foo\",","85","        \"projectName\": \"Foo\",","86","        \"projectOrganization\": \"org\",","87","        \"rule\": \"javascript:S1067\",","88","        \"ruleName\": \"foo\",","89","        \"secondaryLocations\": Array [","90","          Object {","91","            \"component\": \"main.js\",","92","            \"textRange\": Object {","93","              \"endLine\": 2,","94","              \"endOffset\": 2,","95","              \"startLine\": 1,","96","              \"startOffset\": 1,","97","            },","98","          },","99","          Object {","100","            \"component\": \"main.js\",","101","            \"textRange\": Object {","102","              \"endLine\": 2,","103","              \"endOffset\": 2,","104","              \"startLine\": 1,","105","              \"startOffset\": 1,","106","            },","107","          },","108","        ],","109","        \"severity\": \"MAJOR\",","110","        \"status\": \"OPEN\",","111","        \"textRange\": Object {","112","          \"endLine\": 26,","113","          \"endOffset\": 15,","114","          \"startLine\": 25,","115","          \"startOffset\": 0,","116","        },","117","        \"transitions\": Array [],","118","        \"type\": \"BUG\",","119","      }","120","    }","121","    issuesByLine={Object {}}","122","    key=\"1-0-0\"","123","    last={true}","124","    loadDuplications={[Function]}","125","    locations={","126","      Array [","127","        Object {","128","          \"component\": \"main.js\",","129","          \"index\": 0,","130","          \"textRange\": Object {","131","            \"endLine\": 2,","132","            \"endOffset\": 2,","133","            \"startLine\": 1,","134","            \"startOffset\": 1,","135","          },","136","        },","137","      ]","138","    }","139","    onIssueChange={[MockFunction]}","140","    onIssuePopupToggle={[Function]}","141","    onLinePopupToggle={[Function]}","142","    onLocationSelect={[MockFunction]}","143","    renderDuplicationPopup={[Function]}","144","    scroll={[MockFunction]}","145","    snippetGroup={","146","      Object {","147","        \"component\": Object {","148","          \"key\": \"main.js\",","149","          \"measures\": Object {","150","            \"coverage\": \"85.2\",","151","            \"duplicationDensity\": \"1.0\",","152","            \"issues\": \"12\",","153","            \"lines\": \"56\",","154","          },","155","          \"path\": \"main.js\",","156","          \"project\": \"my-project\",","157","          \"projectName\": \"MyProject\",","158","          \"q\": \"FIL\",","159","          \"uuid\": \"foo-bar\",","160","        },","161","        \"locations\": Array [","162","          Object {","163","            \"component\": \"main.js\",","164","            \"index\": 0,","165","            \"textRange\": Object {","166","              \"endLine\": 2,","167","              \"endOffset\": 2,","168","              \"startLine\": 1,","169","              \"startOffset\": 1,","170","            },","171","          },","172","        ],","173","        \"sources\": Object {","174","          \"16\": Object {","175","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","176","            \"coverageStatus\": \"covered\",","177","            \"coveredConditions\": 2,","178","            \"duplicated\": false,","179","            \"isNew\": true,","180","            \"line\": 16,","181","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","182","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","183","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","184","          },","185","        },","186","      }","187","    }","188","  \/>","189","<\/div>","190","`;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["30","  filterDuplicationBlocksByLine,","31","  getDuplicationBlocksForIndex,","32","  isDuplicationBlockInRemovedComponent","33","} from '.\/helpers\/duplications';","34","import {","40","import { Alert } from '..\/ui\/Alert';","104","  linePopup?: T.LinePopup;","502","  handleLinePopupToggle = ({ index, line, name, open }: T.LinePopup) => {","584","    if (!component || !duplicatedFiles) {","585","      return null;","586","    }","588","    const blocks = getDuplicationBlocksForIndex(duplications, index);","594","            blocks={filterDuplicationBlocksByLine(blocks, line)}","597","            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}"],"delete":["43","import { Alert } from '..\/ui\/Alert';","99","  linePopup?: { index?: number; line: number; name: string };","497","  handleLinePopupToggle = ({","498","    index,","499","    line,","500","    name,","501","    open","502","  }: {","503","    index?: number;","504","    line: number;","505","    name: string;","506","    open?: boolean;","507","  }) => {","589","    if (!component || !duplicatedFiles) return <><\/>;","591","    const duplication = duplications && duplications[index];","592","    let blocks = (duplication && duplication.blocks) || [];","593","    \/* eslint-disable no-underscore-dangle *\/","594","    const inRemovedComponent = blocks.some(b => b._ref === undefined);","595","    let foundOne = false;","596","    blocks = blocks.filter(b => {","597","      const outOfBounds = b.from > line || b.from + b.size < line;","598","      const currentFile = b._ref === '1';","599","      const shouldDisplayForCurrentFile = outOfBounds || foundOne;","600","      const shouldDisplay = !currentFile || shouldDisplayForCurrentFile;","601","      const isOk = b._ref !== undefined && shouldDisplay;","602","      if (b._ref === '1' && !outOfBounds) {","603","        foundOne = true;","604","      }","605","      return isOk;","606","    });","607","    \/* eslint-enable no-underscore-dangle *\/","613","            blocks={blocks}","616","            inRemovedComponent={inRemovedComponent}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/loadIssues.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.tsx":[{"add":["58","  linePopup: T.LinePopup | undefined;","70","  onLinePopupToggle: (linePopup: T.LinePopup) => void;","74","  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;"],"delete":["58","  linePopup: { index?: number; line: number; name: string } | undefined;","70","  onLinePopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;","74","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;"]}],"server\/sonar-web\/src\/main\/js\/api\/components.ts":[{"add":["278","export function getDuplications(","279","  data: { key: string } & T.BranchParameters","280","): Promise<{ duplications: T.Duplication[]; files: T.Dict<T.DuplicatedFile> }> {","281","  return getJSON('\/api\/duplications\/show', data).catch(throwGlobalError);"],"delete":["278","export function getDuplications(data: { key: string } & T.BranchParameters): Promise<any> {","279","  return getJSON('\/api\/duplications\/show', data);"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineNumber.tsx":[{"add":["25","  onPopupToggle: (linePopup: T.LinePopup) => void;"],"delete":["25","  onPopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":[{"add":["120","it('should correctly handle lines actions', () => {","121","  const snippetGroup: T.SnippetGroup = {","122","    locations: [","123","      mockFlowLocation({","124","        component: 'a',","125","        textRange: { startLine: 34, endLine: 34, startOffset: 0, endOffset: 0 }","126","      }),","127","      mockFlowLocation({","128","        component: 'a',","129","        textRange: { startLine: 54, endLine: 54, startOffset: 0, endOffset: 0 }","130","      })","131","    ],","132","    ...mockSnippetsByComponent('a', [32, 33, 34, 35, 36, 52, 53, 54, 55, 56])","133","  };","134","  const loadDuplications = jest.fn();","135","  const onLinePopupToggle = jest.fn();","136","  const renderDuplicationPopup = jest.fn();","137","","138","  const wrapper = shallowRender({","139","    loadDuplications,","140","    onLinePopupToggle,","141","    renderDuplicationPopup,","142","    snippetGroup","143","  });","144","","145","  const line = mockSourceLine();","146","  wrapper","147","    .find('Line')","148","    .first()","149","    .prop<Function>('loadDuplications')(line);","150","  expect(loadDuplications).toHaveBeenCalledWith('a', line);","151","","152","  wrapper","153","    .find('Line')","154","    .first()","155","    .prop<Function>('onLinePopupToggle')({ line: 13, name: 'foo' });","156","  expect(onLinePopupToggle).toHaveBeenCalledWith({ component: 'a', line: 13, name: 'foo' });","157","","158","  wrapper","159","    .find('Line')","160","    .first()","161","    .prop<Function>('renderDuplicationPopup')(1, 13);","162","  expect(renderDuplicationPopup).toHaveBeenCalledWith(","163","    mockSourceViewerFile({ key: 'a', path: 'a' }),","164","    1,","165","    13","166","  );","167","});","168","","178","      duplications={undefined}","179","      duplicationsByLine={undefined}","184","      linePopup={undefined}","185","      loadDuplications={jest.fn()}","189","      onLinePopupToggle={jest.fn()}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineDuplicationBlock.tsx":[{"add":["29","  onPopupToggle: (linePopup: T.LinePopup) => void;","31","  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;"],"delete":["29","  onPopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;","31","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":[{"add":["22","import {","23","  mockFlowLocation,","24","  mockIssue,","25","  mockSnippetsByComponent,","26","  mockSourceLine,","27","  mockSourceViewerFile","28","} from '..\/..\/..\/..\/helpers\/testMocks';","31","import { getDuplications } from '..\/..\/..\/..\/api\/components';","34","  const { mockSnippetsByComponent } = require.requireActual('..\/..\/..\/..\/helpers\/testMocks');","36","    getIssueFlowSnippets: jest.fn().mockResolvedValue({ 'main.js': mockSnippetsByComponent() })","40","jest.mock('..\/..\/..\/..\/api\/components', () => ({","41","  getDuplications: jest.fn().mockResolvedValue({})","42","}));","43","","48","it('should render correctly', async () => {","49","  const wrapper = shallowRender();","50","  expect(wrapper).toMatchSnapshot();","51","","52","  await waitAndUpdate(wrapper);","53","  expect(wrapper).toMatchSnapshot();","60","  expect(getIssueFlowSnippets).toHaveBeenCalledWith('1');","61","  expect(wrapper.state('components')).toEqual({ 'main.js': mockSnippetsByComponent() });","79","it('should handle line popup', async () => {","80","  const wrapper = shallowRender();","81","  await waitAndUpdate(wrapper);","82","","83","  const linePopup = { component: 'foo', index: 0, line: 16, name: 'b.tsx' };","84","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(linePopup);","85","  expect(wrapper.state('linePopup')).toEqual(linePopup);","86","","87","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(linePopup);","88","  expect(wrapper.state('linePopup')).toEqual(undefined);","89","","90","  const openLinePopup = { ...linePopup, open: true };","91","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(openLinePopup);","92","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(openLinePopup);","93","  expect(wrapper.state('linePopup')).toEqual(linePopup);","94","});","95","","96","it('should handle duplication popup', async () => {","97","  const files = { b: { key: 'b', name: 'B.tsx', project: 'foo', projectName: 'Foo' } };","98","  const duplications = [{ blocks: [{ _ref: '1', from: 1, size: 2 }] }];","99","  (getDuplications as jest.Mock).mockResolvedValueOnce({ duplications, files });","100","","101","  const wrapper = shallowRender();","102","  await waitAndUpdate(wrapper);","103","","104","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('loadDuplications')(","105","    'foo',","106","    mockSourceLine()","107","  );","108","","109","  await waitAndUpdate(wrapper);","110","  expect(getDuplications).toHaveBeenCalledWith({ key: 'foo' });","111","  expect(wrapper.state('duplicatedFiles')).toEqual(files);","112","  expect(wrapper.state('duplications')).toEqual(duplications);","113","  expect(wrapper.state('duplicationsByLine')).toEqual({ '1': [0], '2': [0] });","114","  expect(wrapper.state('linePopup')).toEqual({","115","    component: 'foo',","116","    index: 0,","117","    line: 16,","118","    name: 'duplications'","119","  });","120","","121","  expect(","122","    wrapper.find('ComponentSourceSnippetViewer').prop<Function>('renderDuplicationPopup')(","123","      mockSourceViewerFile(),","124","      0,","125","      16","126","    )","127","  ).toMatchSnapshot();","128","});","129","","135","      issue={mockIssue(true, { key: '1' })}","137","      locations={[mockFlowLocation()]}"],"delete":["22","import { mockIssue, mockSourceViewerFile } from '..\/..\/..\/..\/helpers\/testMocks';","27","  const { mockSourceViewerFile } = require.requireActual('..\/..\/..\/..\/helpers\/testMocks');","29","    getIssueFlowSnippets: jest.fn().mockResolvedValue([mockSourceViewerFile()])","37","it('should render correctly', () => {","38","  expect(shallowRender()).toMatchSnapshot();","45","  expect(getIssueFlowSnippets).toBeCalled();","46","  expect(wrapper.state('components')).toEqual([mockSourceViewerFile()]);","69","      issue={mockIssue(true)}","71","      locations={[]}","75","      renderDuplicationPopup={jest.fn()}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/getCoverageStatus.ts":[{"add":[],"delete":[]}]}},"29d4206d4d69d5c36e8153bf1f0f52d47418799c":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/treemap.html.erb":"MODIFY","server\/sonar-web\/src\/main\/js\/libs\/widgets\/treemap.js":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/treemap.html.erb":[{"add":["56","              <%= colorMetric.name -%>: { val: <%= color ? color.value : \"null\" -%>, fval: '<%= color ? color.formatted_value : \"-\" -%>' },","57","              <%= sizeMetric.name -%>: { val: <%= size ? size.value : \"null\" -%>, fval: '<%= size ? size.formatted_value : \"-\" -%>' }"],"delete":["56","              <%= colorMetric.name -%>: { val: <%= color ? color.value : \"null\" -%>, fval: '<%= color ? color.formatted_value : \"-\" -%>', data: '<%= color ? color.formatted_value : \"-\" -%>' },","57","              <%= sizeMetric.name -%>: { val: <%= size ? size.value : \"null\" -%>, fval: '<%= size ? size.formatted_value : \"-\" -%>', data: '<%= size ? size.formatted_value : \"-\" -%>' }"]}],"server\/sonar-web\/src\/main\/js\/libs\/widgets\/treemap.js":[{"add":["26","    this.color = that.getColorScale();","210","    var domain = [1, 2, 3, 4, 5];","211","    if (this.components().length > 0) {","212","      var colorMetricSample = this.colorMetric.value(_.first(this.components()));","213","      if (typeof colorMetricSample === 'string') {","214","        domain = ['A', 'B', 'C', 'D', 'E'];","215","      }","216","    }"],"delete":["209","    var domain = ['A', 'B', 'C', 'D', 'E'];"]}]}},"b64932e6d07560db391a4fe3c849529fd223eb75":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImplTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeCommandsTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolder.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImpl.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableDisabledComponentsHolder.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":[{"add":["21","import java.util.Set;","55","  public ProjectCleaner purge(DbSession session, String rootUuid, String projectUuid, Configuration projectConfig, Set<String> disabledComponentUuids) {"],"delete":["21","import java.util.Collection;","55","  public ProjectCleaner purge(DbSession session, String rootUuid, String projectUuid, Configuration projectConfig, Collection<String> disabledComponentUuids) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImplTest.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","37","    underTest.setUuids(ImmutableSet.of(\"U1\", \"U2\"));","44","    underTest.setUuids(ImmutableSet.of(\"U1\", \"U2\"));","48","    underTest.setUuids(ImmutableSet.of(\"U1\", \"U2\"));"],"delete":["25","import static java.util.Arrays.asList;","37","    underTest.setUuids(asList(\"U1\", \"U2\"));","44","    underTest.setUuids(asList(\"U1\", \"U2\"));","48","    underTest.setUuids(asList(\"U1\", \"U2\"));"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeCommandsTest.java":[{"add":["26","import org.sonar.api.utils.internal.AlwaysIncreasingSystem2;","44","  private AlwaysIncreasingSystem2 system2 = new AlwaysIncreasingSystem2();","60","    new PurgeCommands(dbTester.getSession(), profiler, system2).deleteAnalyses(getHugeNumberOfIdUuidPairs());","71","    new PurgeCommands(dbTester.getSession(), profiler, system2).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","80","    new PurgeCommands(dbTester.getSession(), profiler, system2).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","90","    new PurgeCommands(dbTester.getSession(), profiler, system2).purgeAnalyses(getHugeNumberOfIdUuidPairs());","98","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","113","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","129","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","145","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","158","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","171","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);"],"delete":["58","    new PurgeCommands(dbTester.getSession(), profiler).deleteAnalyses(getHugeNumberOfIdUuidPairs());","69","    new PurgeCommands(dbTester.getSession(), profiler).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","78","    new PurgeCommands(dbTester.getSession(), profiler).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","88","    new PurgeCommands(dbTester.getSession(), profiler).purgeAnalyses(getHugeNumberOfIdUuidPairs());","96","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","111","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","127","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","143","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","156","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","169","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["22","import java.util.Set;","36","  Set<String> selectDisabledComponentsWithFileSource(@Param(\"projectUuid\") String projectUuid);","37","","38","  Set<String> selectDisabledComponentsWithUnresolvedIssues(@Param(\"projectUuid\") String projectUuid);","39","","40","  Set<String> selectDisabledComponentsWithLiveMeasures(@Param(\"projectUuid\") String projectUuid);","41",""],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolder.java":[{"add":["21","import java.util.Set;","25","  Set<String> getUuids();"],"delete":["21","import java.util.Collection;","25","  Collection<String> getUuids();"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImpl.java":[{"add":["21","import java.util.Set;","27","  private Set<String> uuids;","30","  public Set<String> getUuids() {","36","  public void setUuids(Set<String> uuids) {"],"delete":["21","import java.util.Collection;","27","  private Collection<String> uuids;","30","  public Collection<String> getUuids() {","36","  public void setUuids(Collection<String> uuids) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableDisabledComponentsHolder.java":[{"add":["21","import java.util.Set;","25","  void setUuids(Set<String> uuids);"],"delete":["21","import java.util.Collection;","25","  void setUuids(Collection<String> uuids);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["65","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler, system2);","70","    purgeDisabledComponents(commands, conf, listener);","104","  private static void purgeDisabledComponents(PurgeCommands commands, PurgeConfiguration conf, PurgeListener listener) {","105","    String rootUuid = conf.rootUuid();","106","    listener.onComponentsDisabling(rootUuid, conf.getDisabledComponentUuids());","107","    commands.purgeDisabledComponents(rootUuid, conf.getDisabledComponentUuids(), listener);","108","  }","109","","174","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler, system2);","185","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler, system2);","221","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler, system2);","228","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler, system2);","276","    PurgeCommands purgeCommands = new PurgeCommands(dbSession, profiler, system2);","304","    new PurgeCommands(session, profiler, system2).deleteAnalyses(analysisIdUuids);"],"delete":["65","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","70","    purgeDisabledComponents(session, mapper, conf, listener);","150","  private void purgeDisabledComponents(DbSession session, PurgeMapper mapper, PurgeConfiguration conf, PurgeListener listener) {","151","    executeLargeInputs(conf.getDisabledComponentUuids(),","152","      input -> {","153","        mapper.deleteFileSourcesByFileUuid(input);","154","        mapper.resolveComponentIssuesNotAlreadyResolved(input, system2.now());","155","        mapper.deleteLiveMeasuresByComponentUuids(input);","156","        return emptyList();","157","      });","158","","159","    listener.onComponentsDisabling(conf.rootUuid(), conf.getDisabledComponentUuids());","160","","161","    session.commit();","162","  }","163","","182","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","193","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","202","","230","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler);","237","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler);","285","    PurgeCommands purgeCommands = new PurgeCommands(dbSession, profiler);","313","    new PurgeCommands(session, profiler).deleteAnalyses(analysisIdUuids);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["24","import java.util.Collection;","25","import java.util.HashSet;","27","import java.util.Set;","30","import org.sonar.api.utils.System2;","33","import static org.sonar.db.DatabaseUtils.executeLargeInputs;","34","","43","  private final System2 system2;","45","  PurgeCommands(DbSession session, PurgeMapper purgeMapper, PurgeProfiler profiler, System2 system2) {","49","    this.system2 = system2;","53","  PurgeCommands(DbSession session, PurgeProfiler profiler, System2 system2) {","54","    this(session, session.getMapper(PurgeMapper.class), profiler, system2);","157","  void purgeDisabledComponents(String rootComponentUuid, Collection<String> disabledComponentUuids, PurgeListener listener) {","158","    Set<String> missedDisabledComponentUuids = new HashSet<>();","159","","160","    profiler.start(\"purgeDisabledComponents (file_sources)\");","161","    missedDisabledComponentUuids.addAll(","162","      executeLargeInputs(","163","        purgeMapper.selectDisabledComponentsWithFileSource(rootComponentUuid),","164","        input -> {","165","          purgeMapper.deleteFileSourcesByFileUuid(input);","166","          return input;","167","        }));","168","    profiler.stop();","169","","170","    profiler.start(\"purgeDisabledComponents (unresolved_issues)\");","171","    missedDisabledComponentUuids.addAll(","172","      executeLargeInputs(","173","        purgeMapper.selectDisabledComponentsWithUnresolvedIssues(rootComponentUuid),","174","        input -> {","175","          purgeMapper.resolveComponentIssuesNotAlreadyResolved(input, system2.now());","176","          return input;","177","        }));","178","    profiler.stop();","179","","180","    profiler.start(\"purgeDisabledComponents (live_measures)\");","181","    missedDisabledComponentUuids.addAll(","182","      executeLargeInputs(","183","        purgeMapper.selectDisabledComponentsWithLiveMeasures(rootComponentUuid),","184","        input -> {","185","          purgeMapper.deleteLiveMeasuresByComponentUuids(input);","186","          return input;","187","        }));","188","    profiler.stop();","189","","190","    session.commit();","191","","192","    \/\/ notify listener for any disabled component we found child data for which isn't part of the disabled components","193","    \/\/ provided","194","    missedDisabledComponentUuids.removeAll(disabledComponentUuids);","195","    if (!missedDisabledComponentUuids.isEmpty()) {","196","      listener.onComponentsDisabling(rootComponentUuid, missedDisabledComponentUuids);","197","    }","198","  }","199",""],"delete":["38","  PurgeCommands(DbSession session, PurgeMapper purgeMapper, PurgeProfiler profiler) {","45","  PurgeCommands(DbSession session, PurgeProfiler profiler) {","46","    this(session, session.getMapper(PurgeMapper.class), profiler);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["85","  <select id=\"selectDisabledComponentsWithFileSource\" parameterType=\"map\" resultType=\"String\">","86","    select","87","      file_uuid","88","    from file_sources fs","89","    inner join projects p on","90","      p.uuid = fs.file_uuid","91","      and p.enabled = ${_false}","92","      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}","93","  <\/select>","94","","95","  <select id=\"selectDisabledComponentsWithUnresolvedIssues\" parameterType=\"map\" resultType=\"String\">","96","    select","97","      i.component_uuid","98","    from issues i","99","    inner join projects p on","100","      p.uuid = i.component_uuid","101","      and p.enabled = ${_false}","102","      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}","103","    where","104","      resolution is null","105","  <\/select>","106","","107","  <select id=\"selectDisabledComponentsWithLiveMeasures\" parameterType=\"map\" resultType=\"String\">","108","    select","109","      lm.component_uuid","110","    from live_measures lm","111","    inner join projects p on","112","      p.uuid = lm.component_uuid","113","      and p.enabled = ${_false}","114","      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}","115","  <\/select>","116",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":[{"add":["32","import static java.util.Collections.emptySet;","38","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 0, Optional.empty(), System2.INSTANCE, emptySet());","41","    conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), -1, Optional.empty(), System2.INSTANCE, emptySet());","49","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 30, Optional.empty(), System2.INSTANCE, emptySet());","59","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 30, Optional.of(10), System2.INSTANCE, emptySet());","67","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 30, Optional.empty(), System2.INSTANCE, emptySet());","77","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), \"root\", \"project\", emptySet());"],"delete":["32","import static java.util.Collections.emptyList;","38","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 0, Optional.empty(), System2.INSTANCE, emptyList());","41","    conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), -1, Optional.empty(), System2.INSTANCE, emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.of(10), System2.INSTANCE, emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","77","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), \"root\", \"project\", emptyList());"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":[{"add":["26","import java.util.Set;","42","  private final Set<String> disabledComponentUuids;","45","    Optional<Integer> maxAgeInDaysOfInactiveShortLivingBranches, System2 system2, Set<String> disabledComponentUuids) {","55","  public static PurgeConfiguration newDefaultPurgeConfiguration(Configuration config, String rootUuid, String projectUuid, Set<String> disabledComponentUuids) {","80","  public Set<String> getDisabledComponentUuids() {"],"delete":["41","  private final Collection<String> disabledComponentUuids;","44","    Optional<Integer> maxAgeInDaysOfInactiveShortLivingBranches, System2 system2, Collection<String> disabledComponentUuids) {","54","  public static PurgeConfiguration newDefaultPurgeConfiguration(Configuration config, String rootUuid, String projectUuid, Collection<String> disabledComponentUuids) {","79","  public Collection<String> getDisabledComponentUuids() {"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["32","import java.util.Set;","84","import static java.util.Collections.emptySet;","89","import static org.mockito.Mockito.verify;","217","      30, Optional.of(30), System2.INSTANCE, emptySet());","237","    ComponentDto enabledFile = db.components().insertComponent(newFileDto(module, dir).setEnabled(true));","242","    IssueDto openOnEnabledComponent = db.issues().insert(rule, project, enabledFile, issue -> issue.setStatus(\"OPEN\"));","243","    IssueDto confirmOnEnabledComponent = db.issues().insert(rule, project, enabledFile, issue -> issue.setStatus(\"CONFIRM\"));","251","    FileSourceDto nonSelectedFileSource = db.fileSources().insertFileSource(enabledFile);","262","    LiveMeasureDto liveMeasureMetric1OnNonSelected = db.measures().insertLiveMeasure(enabledFile, metric1);","263","    LiveMeasureDto liveMeasureMetric2OnNonSelected = db.measures().insertLiveMeasure(enabledFile, metric2);","265","    PurgeListener purgeListener = mock(PurgeListener.class);","268","    Set<String> selectedComponentUuids = ImmutableSet.of(module.uuid(), srcFile.uuid(), testFile.uuid());","269","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid(), selectedComponentUuids),","270","      purgeListener, new PurgeProfiler());","273","    verify(purgeListener).onComponentsDisabling(project.uuid(), selectedComponentUuids);","274","    verify(purgeListener).onComponentsDisabling(project.uuid(), ImmutableSet.of(dir.uuid()));","275","","286","    for (IssueDto issue : Arrays.asList(openOnEnabledComponent, confirmOnEnabledComponent)) {","299","      .selectByComponentUuidsAndMetricIds(dbSession, ImmutableSet.of(srcFile.uuid(), dir.uuid(), project.uuid(), enabledFile.uuid()),","303","      .containsOnly(enabledFile.uuid(), project.uuid());","1029","    PurgeListener purgeListener = mock(PurgeListener.class);","1031","    Set<String> disabledComponentUuids = ImmutableSet.of(disabledFileWithIssues.uuid(), disabledFileWithoutIssues.uuid());","1033","      newConfigurationWith30Days(System2.INSTANCE, project.uuid(), project.uuid(), disabledComponentUuids),","1034","      purgeListener, new PurgeProfiler());","1040","    verify(purgeListener).onComponentsDisabling(project.uuid(), disabledComponentUuids);","1085","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse(); \/\/ because more than 4 weeks old","1672","    return new PurgeConfiguration(PROJECT_UUID, PROJECT_UUID, emptyList(), 30, Optional.of(30), System2.INSTANCE, emptySet());","1675","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid) {","1676","    return newConfigurationWith30Days(system2, rootUuid, projectUuid, Collections.emptySet());","1677","  }","1678","","1679","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid, Set<String> disabledComponentUuids) {","1680","    return new PurgeConfiguration(rootUuid, projectUuid, emptyList(), 30, Optional.of(30), system2, disabledComponentUuids);"],"delete":["214","      30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","234","    ComponentDto nonSelectedFile = db.components().insertComponent(newFileDto(module, dir).setEnabled(false));","239","    IssueDto openOnNonSelected = db.issues().insert(rule, project, nonSelectedFile, issue -> issue.setStatus(\"OPEN\"));","240","    IssueDto confirmOnNonSelected = db.issues().insert(rule, project, nonSelectedFile, issue -> issue.setStatus(\"CONFIRM\"));","248","    FileSourceDto nonSelectedFileSource = db.fileSources().insertFileSource(nonSelectedFile);","259","    LiveMeasureDto liveMeasureMetric1OnNonSelected = db.measures().insertLiveMeasure(nonSelectedFile, metric1);","260","    LiveMeasureDto liveMeasureMetric2OnNonSelected = db.measures().insertLiveMeasure(nonSelectedFile, metric2);","264","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid(), module.uuid(), dir.uuid(), srcFile.uuid(), testFile.uuid()), PurgeListener.EMPTY,","265","      new PurgeProfiler());","278","    for (IssueDto issue : Arrays.asList(openOnNonSelected, confirmOnNonSelected)) {","291","      .selectByComponentUuidsAndMetricIds(dbSession, ImmutableSet.of(srcFile.uuid(), dir.uuid(), project.uuid(), nonSelectedFile.uuid()),","295","      .containsOnly(nonSelectedFile.uuid(), project.uuid());","1023","      newConfigurationWith30Days(System2.INSTANCE, project.uuid(), disabledFileWithIssues.uuid(), disabledFileWithoutIssues.uuid()),","1024","      PurgeListener.EMPTY, new PurgeProfiler());","1074","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse();  \/\/ because more than 4 weeks old","1661","    return new PurgeConfiguration(PROJECT_UUID, PROJECT_UUID, emptyList(), 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","1664","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid, String... disabledComponentUuids) {","1665","    return new PurgeConfiguration(rootUuid, projectUuid, emptyList(), 30, Optional.of(30), system2, asList(disabledComponentUuids));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":[{"add":["34","import static java.util.Collections.emptySet;","59","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());","68","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());","77","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());"],"delete":["34","import static java.util.Collections.emptyList;","59","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());","68","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());","77","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());"]}]}},"fa27c18738852cb20da4669b4d61691270accc14":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/projectInformation\/ProjectInformation.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/projectInformation\/ProjectInformation.tsx":[{"add":["88","    const canConfigureNotifications =","89","      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;"],"delete":["88","    const canConfigureNotifications = isLoggedIn(currentUser);"]}]}},"c13aab927fa11aa451a188bf3f6b183589394bf7":{"changes":{"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/SecurityManagement.java":"MODIFY","server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/SecurityManagementTest.java":"MODIFY"},"diff":{"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/SecurityManagement.java":[{"add":["41","    private static final Set<String> BLOCKED_RUNTIME_PERMISSIONS = new HashSet<>(Arrays.asList(","42","      \"createClassLoader\",","43","      \"getClassLoader\",","44","      \"setContextClassLoader\",","45","      \"enableContextClassLoaderOverride\",","46","      \"closeClassLoader\",","47","      \"setSecurityManager\",","48","      \"createSecurityManager\"","49","    ));","50","    private static final Set<String> BLOCKED_SECURITY_PERMISSIONS = new HashSet<>(Arrays.asList(","51","      \"createAccessControlContext\",","52","      \"setPolicy\"","53","    ));","60","        if (permission instanceof RuntimePermission && BLOCKED_RUNTIME_PERMISSIONS.contains(permission.getName())) {","63","        if (permission instanceof SecurityPermission && BLOCKED_SECURITY_PERMISSIONS.contains(permission.getName())) {"],"delete":["21","import java.lang.reflect.ReflectPermission;","42","    private static final Set<String> ALLOWED_RUNTIME_PERMISSIONS = new HashSet<>(Arrays.asList(\"getFileSystemAttributes\", \"readFileDescriptor\", \"writeFileDescriptor\",","43","      \"getStackTrace\", \"setDefaultUncaughtExceptionHandler\", \"manageProcess\", \"localeServiceProvider\", \"LoggerFinder\"));","50","        if (permission instanceof RuntimePermission && !ALLOWED_RUNTIME_PERMISSIONS.contains(permission.getName())) {","53","        if (permission instanceof ReflectPermission || permission instanceof SecurityPermission) {"]}],"server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/SecurityManagementTest.java":[{"add":["36","  private Permission allowedSecurity = new SecurityPermission(\"getProperty.key\");","37","  private Permission deniedSecurity = new SecurityPermission(\"setPolicy\");","48","    assertThat(policy.implies(pd, allowedSecurity)).isTrue();","49","    assertThat(policy.implies(pd, deniedSecurity)).isFalse();","63","    assertThat(policy.implies(pd, allowedSecurity)).isTrue();","64","    assertThat(policy.implies(pd, deniedSecurity)).isTrue();"],"delete":["21","import java.lang.reflect.ReflectPermission;","37","  private Permission reflect = new ReflectPermission(\"suppressAccessChecks\");","38","  private Permission security = new SecurityPermission(\"setPolicy\");","51","    assertThat(policy.implies(pd, reflect)).isFalse();","52","    assertThat(policy.implies(pd, security)).isFalse();","66","    assertThat(policy.implies(pd, reflect)).isTrue();","67","    assertThat(policy.implies(pd, security)).isTrue();"]}]}},"77547b4944e0e86dfe27cd98e1811e18d770da9c":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/dashboard\/configure.html.erb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/dashboard\/configure.html.erb":[{"add":["83","    { id:\"<%= widget_id -%>\", c:\"<%= escape_javascript widget_title.gsub(\/\\r\\n?\/, \" \") -%> <%= escape_javascript widget_description.gsub(\/\\r\\n?\/, \" \") -%>\" } <%= \",\" unless index==number_of_widgets-1 -%>"],"delete":["83","    { id:\"<%= widget_id -%>\", c:\"<%= widget_title.gsub(\/\\r\\n?\/, \" \") -%> <%= widget_description.gsub(\/\\r\\n?\/, \" \") -%>\" } <%= \",\" unless index==number_of_widgets-1 -%>"]}]}},"baf8ce1ddc8136eaf3dac8424830b8960991ee21":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizerTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizer.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizerTest.java":[{"add":["43","  @Test","44","  public void isOverLimit() {","45","    assertThat(BlockRecognizer.isOverLimit(20, 40)).isFalse();","46","    assertThat(BlockRecognizer.isOverLimit(3, 100_000)).isTrue();","47","","48","    \/\/ multiplication of these two ints is higher than Integer.MAX_VALUE","49","    assertThat(BlockRecognizer.isOverLimit(50_000, 60_000)).isTrue();","50","  }","51",""],"delete":[]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizer.java":[{"add":["79","    if (isOverLimit(basesByLine.keySet().size(), rawsByLine.keySet().size())) {","99","  static boolean isOverLimit(long a, long b) {","100","    return Math.multiplyExact(a, b) >= 250_000;","101","  }","102",""],"delete":["79","    if (basesByLine.keySet().size() * rawsByLine.keySet().size() >= 250_000) {"]}]}},"56844138c6d4b5a0a0365c08fd44d94135395154":{"changes":{"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV1.java":"ADD","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV2.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":"MODIFY","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV1.java":"MODIFY","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":"MODIFY","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV1.java":"ADD","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV2.java":"MODIFY","\/dev\/null":"DELETE","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV2.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/BlueGreenTest.java":"MODIFY","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV2.java":"ADD","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV1.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":"MODIFY","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":"MODIFY"},"diff":{"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV1.java":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV2.java":[{"add":["21","import org.sonar.api.rules.RuleType;","31","    NewRule ruleB = repo.createRule(\"b\")","32","      .setName(\"Rule B\")","33","      .setHtmlDescription(\"Rule B\")","34","      .setType(RuleType.VULNERABILITY);","35","    ruleB.createParam(\"p2\").setName(\"Param Two\");","36","    ruleB.createParam(\"p3\").setName(\"Param Three\");","37","","38","    repo.createRule(\"c\")","39","      .setName(\"Rule C\")","40","      .setHtmlDescription(\"Rule C\")","41","      .setType(RuleType.VULNERABILITY);"],"delete":["30","    repo.createRule(\"b\").setName(\"Rule B\").setHtmlDescription(\"Rule B\");","31","    repo.createRule(\"c\").setName(\"Rule C\").setHtmlDescription(\"Rule C\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":[{"add":["24","import java.util.Collection;","25","import java.util.HashMap;","26","import java.util.Map;","32","import org.sonar.api.Plugin;","52","import org.sonar.server.project.Project;","54","import static java.util.Arrays.stream;","78","  private TestPluginRepository pluginRepository = new TestPluginRepository();","337","    metadataBuilder.putQprofilesPerLanguage(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"jsInOrg1\").setName(\"Sonar way\").setLanguage(\"js\").build());","338","    metadataBuilder.putQprofilesPerLanguage(\"php\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"phpInOrg2\").setName(\"PHP way\").setLanguage(\"php\").build());","360","    metadataBuilder.putQprofilesPerLanguage(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"p1\").setName(\"Sonar way\").setLanguage(\"js\").build());","370","    \/\/ the installed plugins","371","    pluginRepository.add(","372","      new PluginInfo(\"java\"),","373","      new PluginInfo(\"customjava\").setBasePlugin(\"java\"),","374","      new PluginInfo(\"php\"));","376","    \/\/ the plugins sent by scanner","377","    ScannerReport.Metadata.Builder metadataBuilder = newBatchReportBuilder();","378","    metadataBuilder.putPluginsByKey(\"java\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"java\").setUpdatedAt(10L).build());","379","    metadataBuilder.putPluginsByKey(\"php\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"php\").setUpdatedAt(20L).build());","380","    metadataBuilder.putPluginsByKey(\"customjava\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"customjava\").setUpdatedAt(30L).build());","381","    metadataBuilder.putPluginsByKey(\"uninstalled\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"uninstalled\").setUpdatedAt(40L).build());","387","      .containsExactlyInAnyOrder(","388","        tuple(\"java\", null, 10L),","389","        tuple(\"php\", null, 20L),","390","        tuple(\"customjava\", \"java\", 30L),","391","        tuple(\"uninstalled\", null, 40L));","411","  private static class TestPluginRepository implements PluginRepository {","412","    private final Map<String, PluginInfo> pluginsMap = new HashMap<>();","413","","414","    void add(PluginInfo... plugins) {","415","      stream(plugins).forEach(p -> pluginsMap.put(p.getKey(), p));","416","    }","417","","418","    @Override","419","    public Collection<PluginInfo> getPluginInfos() {","420","      return pluginsMap.values();","421","    }","422","","423","    @Override","424","    public PluginInfo getPluginInfo(String key) {","425","      if (!pluginsMap.containsKey(key)) {","426","        throw new IllegalArgumentException();","427","      }","428","      return pluginsMap.get(key);","429","    }","430","","431","    @Override","432","    public Plugin getPluginInstance(String key) {","433","      throw new UnsupportedOperationException();","434","    }","435","","436","    @Override","437","    public boolean hasPlugin(String key) {","438","      return pluginsMap.containsKey(key);","439","    }","440","  }"],"delete":["41","import org.sonar.server.project.Project;","73","  private PluginRepository pluginRepository = mock(PluginRepository.class);","332","    metadataBuilder.getMutableQprofilesPerLanguage().put(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"jsInOrg1\").setName(\"Sonar way\").setLanguage(\"js\").build());","333","    metadataBuilder.getMutableQprofilesPerLanguage().put(\"php\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"phpInOrg2\").setName(\"PHP way\").setLanguage(\"php\").build());","355","    metadataBuilder.getMutableQprofilesPerLanguage().put(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"p1\").setName(\"Sonar way\").setLanguage(\"js\").build());","365","    ScannerReport.Metadata.Builder metadataBuilder = newBatchReportBuilder();","366","    metadataBuilder.getMutablePluginsByKey().put(\"java\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"java\").setUpdatedAt(12345L).build());","367","    metadataBuilder.getMutablePluginsByKey().put(\"php\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"php\").setUpdatedAt(678910L).build());","368","    metadataBuilder.getMutablePluginsByKey().put(\"customjava\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"customjava\").setUpdatedAt(111111L).build());","369","    when(pluginRepository.getPluginInfo(\"customjava\")).thenReturn(new PluginInfo(\"customjava\").setBasePlugin(\"java\"));","375","    assertThat(analysisMetadataHolder.getScannerPluginsByKey()).containsOnlyKeys(\"java\", \"php\", \"customjava\");","377","      .containsOnly(","378","        tuple(\"java\", null, 12345L),","379","        tuple(\"customjava\", \"java\", 111111L),","380","        tuple(\"php\", null, 678910L));"]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV1.java":[{"add":["21","import org.sonar.api.rules.RuleType;","31","    repo.createRule(\"a\")","32","      .setName(\"Rule A\")","33","      .setHtmlDescription(\"Rule A\")","34","      .setType(RuleType.VULNERABILITY);","35","    NewRule ruleB = repo.createRule(\"b\")","36","      .setName(\"Rule B\")","37","      .setHtmlDescription(\"Rule B\")","38","      .setType(RuleType.VULNERABILITY);","39","    ruleB.createParam(\"p1\").setName(\"Param One\");","40","    ruleB.createParam(\"p2\").setName(\"Param Two\");"],"delete":["30","    repo.createRule(\"a\").setName(\"Rule A\").setHtmlDescription(\"Rule A\");","31","    repo.createRule(\"b\").setName(\"Rule B\").setHtmlDescription(\"Rule B\");"]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":[{"add":["29","      MetricsDefinitionV1.class,","32","      SensorV1.class);"],"delete":["31","      RuleSensorV1.class);"]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV1.java":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV2.java":[{"add":["27","    NewBuiltInActiveRule activeB = profile.activateRule(RulesDefinitionV2.REPOSITORY_KEY, \"b\")","28","      .overrideSeverity(\"MINOR\");","29","    activeB.overrideParam(\"p2\", \"two\");","30","    activeB.overrideParam(\"p3\", \"three\");"],"delete":["27","    profile.activateRule(RulesDefinitionV2.REPOSITORY_KEY, \"b\").overrideSeverity(\"MINOR\");"]}],"\/dev\/null":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV2.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/BlueGreenTest.java":[{"add":["38","import org.sonarqube.ws.client.plugins.UninstallRequest;","40","import util.ItUtils;","70","  public void upgrade_analyzer_when_analysis_is_pending_in_compute_engine_queue() throws Exception {","79","    Project project = new Project();","80","    project.associateToXooProfile(\"Blue Profile\");","81","    project.analyzeAndWait();","82","    \/\/ assert 2 issues + security rating E (rule A is blocker, rule B is critical)","83","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"violations\")).isEqualTo(2.0);","84","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"security_rating\")).isEqualTo(5.0);","85","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"blue\")).isEqualTo(10.0);","86","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"bluegreen\")).isEqualTo(20.0);","87","","88","    \/\/ remove rule \"A\" and metric \"blue\" between analysis and execution of Compute Engine","89","","90","    \/\/ 1. pause compute engine so that the second analysis is kept pending","92","    project.analyze();","95","    \/\/ 2. upgrade plugin and verify that analysis is still pending in CE queue","103","    \/\/ 3. resume the queue and verify that the issue on rule A is ignored. Only","104","    \/\/ the critical issue on rule B is remaining","106","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"violations\")).isEqualTo(1.0);","107","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"security_rating\")).isEqualTo(4.0);","108","    assertThat(ItUtils.getMeasure(orchestrator, project.getKey(), \"blue\")).isNull();","109","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"bluegreen\")).isEqualTo(20.0);","111","    \/\/ test removal of analyzer. Analysis should not fail when queue is resumed.","112","    tester.wsClient().ce().pause();","113","    project.analyze();","114","    tester.wsClient().plugins().uninstall(new UninstallRequest().setKey(\"xoo\"));","115","    tester.wsClient().plugins().uninstall(new UninstallRequest().setKey(\"bluegreen\"));","116","    orchestrator.restartServer();","118","    resumeAndWaitForCeQueueEmpty();","119","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"violations\")).isEqualTo(0.0);","120","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"security_rating\")).isEqualTo(1.0);","121","    assertThat(ItUtils.getMeasure(orchestrator, project.getKey(), \"blue\")).isNull();","122","    assertThat(ItUtils.getMeasure(orchestrator, project.getKey(), \"bluegreen\")).isNull();","139","","140","  private class Project {","141","    private final Projects.CreateWsResponse.Project project;","142","    private final File dir;","143","","144","    Project() throws Exception {","145","      this.project = tester.projects().provision();","146","      this.dir = new XooProjectBuilder(project.getKey())","147","        .setFilesPerModule(1)","148","        .build(temp.newFolder());","149","    }","150","","151","    String getKey() {","152","      return project.getKey();","153","    }","154","","155","    void associateToXooProfile(String name) {","156","      tester.wsClient().qualityprofiles().addProject(new AddProjectRequest()","157","        .setProject(project.getKey())","158","        .setLanguage(\"xoo\")","159","        .setQualityProfile(name));","160","    }","161","","162","    void analyzeAndWait() {","163","      orchestrator.executeBuild(SonarScanner.create(dir), true);","164","    }","165","","166","    void analyze() {","167","      orchestrator.executeBuild(SonarScanner.create(dir), false);","168","    }","169","  }"],"delete":["25","import java.io.IOException;","36","import org.sonarqube.qa.util.pageobjects.Navigation;","70","  public void test_change_of_version_at_runtime() throws Exception {","79","    \/\/ pause compute engine so that analysis is kept pending","81","    Projects.CreateWsResponse.Project project = tester.projects().provision();","82","    associateProjectToProfile(project, \"Blue Profile\");","83","    analyze(project);","86","    \/\/ open browser","87","    Navigation browser = tester.openBrowser();","88","","89","","90","    \/\/ upgrade plugin","94","","95","    \/\/ analysis task is still pending","102","    \/\/ TODO check issues and measures","103","  }","105","  private void analyze(Projects.CreateWsResponse.Project project) throws IOException {","106","    File projectDir = new XooProjectBuilder(project.getKey())","107","      .setFilesPerModule(1)","108","      .build(temp.newFolder());","109","    orchestrator.executeBuild(SonarScanner.create(projectDir), false);","110","  }","111","","112","  private void associateProjectToProfile(Projects.CreateWsResponse.Project project, String xooProfileName) {","113","    tester.wsClient().qualityprofiles().addProject(new AddProjectRequest()","114","      .setProject(project.getKey())","115","      .setLanguage(\"xoo\")","116","      .setQualityProfile(xooProfileName));"]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV2.java":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV1.java":[{"add":["27","    profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"a\")","28","      .overrideSeverity(\"BLOCKER\");","29","    NewBuiltInActiveRule activeB = profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"b\")","30","      .overrideSeverity(\"CRITICAL\");","31","    activeB.overrideParam(\"p1\", \"one\");","32","    activeB.overrideParam(\"p2\", \"two\");"],"delete":["27","    profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"a\").overrideSeverity(\"BLOCKER\");","28","    profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"b\").overrideSeverity(\"CRITICAL\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":[{"add":["49","import org.sonar.server.project.Project;","154","    if (!pluginRepository.hasPlugin(p.getKey())) {","159","    return pluginRepository.getPluginInfo(p.getKey()).getBasePlugin();"],"delete":["31","import org.sonar.core.platform.PluginInfo;","44","import org.sonar.server.project.Project;","155","    PluginInfo pluginInfo = pluginRepository.getPluginInfo(p.getKey());","156","    if (pluginInfo == null) {","161","    return pluginInfo.getBasePlugin();"]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":[{"add":["29","      MetricsDefinitionV2.class,","32","      SensorV2.class);"],"delete":["31","      RuleSensorV2.class);"]}]}},"71a9ed4535dd3b0d424ac4390d4a4c5a2d60bfde":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":[{"add":["68","      new CreateAction(null, null, null, languages, importers, userSessionRule, null),"],"delete":["68","      new CreateAction(null, null, null, languages, importers, userSessionRule),"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateAction.java":[{"add":["63","  private final ActiveRuleIndexer activeRuleIndexer;","64","","66","                      Languages languages, ProfileImporter[] importers, UserSession userSession, ActiveRuleIndexer activeRuleIndexer) {","73","    this.activeRuleIndexer = activeRuleIndexer;","76","  public CreateAction(DbClient dbClient, QProfileFactory profileFactory, QProfileExporters exporters, Languages languages, UserSession userSession,","77","                      ActiveRuleIndexer activeRuleIndexer) {","78","    this(dbClient, profileFactory, exporters, languages, new ProfileImporter[0], userSession, activeRuleIndexer);","133","    activeRuleIndexer.index(result.getChanges());"],"delete":["64","                      Languages languages, ProfileImporter[] importers, UserSession userSession) {","73","  public CreateAction(DbClient dbClient, QProfileFactory profileFactory, QProfileExporters exporters, Languages languages, UserSession userSession) {","74","    this(dbClient, profileFactory, exporters, languages, new ProfileImporter[0], userSession);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":[{"add":["53","import org.sonar.server.rule.index.RuleQuery;","103","  CreateAction underTest = new CreateAction(dbClient, new QProfileFactory(dbClient), qProfileExporters, newLanguages(XOO_LANGUAGE), profileImporters, userSession, activeRuleIndexer);","137","    assertThat(ruleIndex.searchAll(new RuleQuery().setQProfileKey(dto.getKey()).setActivation(true))).hasSize(1);"],"delete":["102","  CreateAction underTest = new CreateAction(dbClient, new QProfileFactory(dbClient), qProfileExporters, newLanguages(XOO_LANGUAGE), profileImporters, userSession);","136","    \/\/ FIXME","137","    \/\/ assertThat(ruleIndex.searchAll(new RuleQuery().setQProfileKey(profile.getKey()).setActivation(true))).hasSize(1);"]}]}},"a100aef8cfcc0578e18ef1b5839a75bf0d915423":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issues\/IssuesMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorBuilder.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issues\/IssuesMediumTest.java":[{"add":["287","","288","","289","    \/\/ SONAR-11850 The Maven scanner replicates properties defined on the root module to all modules","290","    logTester.clear();","291","    result = tester.newAnalysis()","292","      .properties(ImmutableMap.<String, String>builder()","293","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","294","        .put(\"sonar.projectKey\", \"com.foo.project\")","295","        .put(\"sonar.modules\", \"moduleA,moduleB\")","296","        .put(\"sonar.sources\", \"src\")","297","        .put(\"sonar.scm.disabled\", \"true\")","298","        .put(\"sonar.issue.ignore.multicriteria\", \"1\")","299","        .put(\"sonar.issue.ignore.multicriteria.1.ruleKey\", \"*\")","300","        .put(\"sonar.issue.ignore.multicriteria.1.resourceKey\", \"*\")","301","        .put(\"moduleA.sonar.issue.ignore.multicriteria\", \"1\")","302","        .put(\"moduleA.sonar.issue.ignore.multicriteria.1.ruleKey\", \"*\")","303","        .put(\"moduleA.sonar.issue.ignore.multicriteria.1.resourceKey\", \"*\")","304","        .build())","305","      .execute();","306","","307","    assertThat(logTester.logs(LoggerLevel.WARN)).isEmpty();"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorBuilder.java":[{"add":["33","import java.util.Objects;","185","      checkUnsupportedIssueExclusions(moduleProperties, parent.properties());","194","  private void checkUnsupportedIssueExclusions(Map<String, String> moduleProperties, Map<String, String> parentProps) {","196","      if (moduleProperties.containsKey(p) && !Objects.equals(moduleProperties.get(p), parentProps.get(p))) {"],"delete":["184","      checkUnsupportedIssueExclusions(moduleProperties);","193","  private void checkUnsupportedIssueExclusions(Map<String, String> moduleProperties) {","195","      if (moduleProperties.containsKey(p)) {"]}]}},"371a6747cde5bcc9d21a70588b7035a99d6d7e9c":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.tsx.snap":[{"add":["94","                \"types\": undefined,","192","                \"types\": undefined,"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.tsx":[{"add":["93","","94","it('should have a correct permalink for security hotspots', () => {","95","  const wrapper = shallow(","96","    <IssueTitleBar issue={{ ...issue, type: 'SECURITY_HOTSPOT' }} togglePopup={jest.fn()} \/>","97","  );","98","  expect(wrapper.find('.js-issue-permalink').prop('to')).toEqual({","99","    pathname: '\/project\/issues',","100","    query: {","101","      id: 'myproject',","102","      issues: 'AVsae-CQS-9G3txfbFN2',","103","      open: 'AVsae-CQS-9G3txfbFN2',","104","      types: 'SECURITY_HOTSPOT'","105","    }","106","  });","107","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.tsx":[{"add":["65","    open: issue.key,","66","    types: issue.type === 'SECURITY_HOTSPOT' ? issue.type : undefined"],"delete":["65","    open: issue.key"]}]}},"84c3c4c71a7fadb52b7214b9514f5227835c2cac":{"changes":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/AuthorizationDao.java":"MODIFY","server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":["40","import java.util.function.IntFunction;","58","  protected DatabaseUtils() {","59","    throw new IllegalStateException(\"Utility class\");","60","  }","61","","102","    return executeLargeInputs(input, function, i -> i);","105","  \/**","106","   * Partition by 1000 elements a list of input and execute a function on each part.","107","   *","108","   * The goal is to prevent issue with ORACLE when there's more than 1000 elements in a 'in ('X', 'Y', ...)'","109","   * and with MsSQL when there's more than 2000 parameters in a query","110","   *\/","111","  public static <OUTPUT, INPUT extends Comparable<INPUT>> List<OUTPUT> executeLargeInputs(Collection<INPUT> input, Function<List<INPUT>, List<OUTPUT>> function,","112","    IntFunction<Integer> partitionSizeManipulations) {","113","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptyList() : new ArrayList<>(size), partitionSizeManipulations);","114","  }","115","","116","  public static <OUTPUT, INPUT extends Comparable<INPUT>> Set<OUTPUT> executeLargeInputsIntoSet(Collection<INPUT> input, Function<List<INPUT>, Set<OUTPUT>> function,","117","    IntFunction<Integer> partitionSizeManipulations) {","118","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptySet() : new HashSet<>(size), partitionSizeManipulations);","122","    Function<List<INPUT>, RESULT> function, java.util.function.Function<Integer, RESULT> outputInitializer, IntFunction<Integer> partitionSizeManipulations) {","127","    for (List<INPUT> partition : toUniqueAndSortedPartitions(input, partitionSizeManipulations)) {","143","    executeLargeUpdates(inputs, consumer, i -> i);","144","  }","145","","146","  \/**","147","   * Partition by 1000 elements a list of input and execute a consumer on each part.","148","   *","149","   * The goal is to prevent issue with ORACLE when there's more than 1000 elements in a 'in ('X', 'Y', ...)'","150","   * and with MsSQL when there's more than 2000 parameters in a query","151","   *","152","   * @param inputs the whole list of elements to be partitioned","153","   * @param consumer the mapper method to be executed, for example {@code mapper(dbSession)::selectByUuids}","154","   * @param partitionSizeManipulations the function that computes the number of usages of a partition, for example","155","   *                                   {@code partitionSize -> partitionSize \/ 2} when the partition of elements","156","   *                                   in used twice in the SQL request.","157","   *\/","158","  public static <INPUT extends Comparable<INPUT>> void executeLargeUpdates(Collection<INPUT> inputs, Consumer<List<INPUT>> consumer,","159","    IntFunction<Integer> partitionSizeManipulations) {","160","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs, partitionSizeManipulations);","172","   * @param inputs the whole list of elements to be partitioned","174","   * @param partitionSizeManipulations the function that computes the number of usages of a partition, for example","175","   *                                   {@code partitionSize -> partitionSize \/ 2} when the partition of elements","176","   *                                   in used twice in the SQL request.","179","  public static <INPUT extends Comparable<INPUT>> int executeLargeUpdates(Collection<INPUT> inputs, Function<List<INPUT>, Integer> sqlCaller,","180","    IntFunction<Integer> partitionSizeManipulations) {","181","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs, partitionSizeManipulations);","193","    return toUniqueAndSortedPartitions(inputs, i -> i);","194","  }","195","","196","  \/**","197","   * Ensure values {@code inputs} are unique (which avoids useless arguments) and sorted before creating the partition.","198","   *\/","199","  public static <INPUT extends Comparable<INPUT>> Iterable<List<INPUT>> toUniqueAndSortedPartitions(Collection<INPUT> inputs, IntFunction<Integer> partitionSizeManipulations) {","200","    int partitionSize = partitionSizeManipulations.apply(PARTITION_SIZE_FOR_ORACLE);","201","    return Iterables.partition(toUniqueAndSortedList(inputs), partitionSize);"],"delete":["97","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptyList() : new ArrayList<>(size));","100","  public static <OUTPUT, INPUT extends Comparable<INPUT>> Set<OUTPUT> executeLargeInputsIntoSet(Collection<INPUT> input, Function<List<INPUT>, Set<OUTPUT>> function) {","101","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptySet() : new HashSet<>(size));","105","    Function<List<INPUT>, RESULT> function, java.util.function.Function<Integer, RESULT> outputInitializer) {","110","    for (List<INPUT> partition : toUniqueAndSortedPartitions(input)) {","126","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs);","139","   *","142","  public static <INPUT extends Comparable<INPUT>> int executeLargeUpdates(Collection<INPUT> inputs, Function<List<INPUT>, Integer> sqlCaller) {","143","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs);","155","    return Iterables.partition(toUniqueAndSortedList(inputs), PARTITION_SIZE_FOR_ORACLE);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/AuthorizationDao.java":[{"add":["138","      },","139","      partitionSize -> partitionSize \/ 2);","150","      },","151","      partitionSize -> partitionSize \/ 2);","161","      partitionOfIds -> mapper(dbSession).keepAuthorizedUsersForRoleAndProject(role, projectId, partitionOfIds),","162","      partitionSize -> partitionSize \/ 3);"],"delete":["138","      });","149","      });","159","      partitionOfIds -> mapper(dbSession).keepAuthorizedUsersForRoleAndProject(role, projectId, partitionOfIds));"]}],"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":[{"add":["27","import java.util.ArrayList;","284","  public void executeLargeInputs_uses_specified_partition_size_manipulations() {","285","    List<List<Integer>> partitions = new ArrayList<>();","286","    List<Integer> outputs = DatabaseUtils.executeLargeInputs(","287","      asList(1, 2, 3),","288","      partition -> {","289","        partitions.add(partition);","290","        return partition;","291","      },","292","      i -> i \/ 500);","293","","294","    assertThat(outputs).containsExactly(1,2,3);","295","    assertThat(partitions).containsExactly(asList(1,2), asList(3));","296","  }","297","","298","  @Test"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":[{"add":["21","import java.util.Collection;","23","import java.util.List;","26","import java.util.stream.Collectors;","485","  public void keepAuthorizedProjectIds_should_be_able_to_handle_lots_of_projects() {","486","    List<ComponentDto> projects = IntStream.range(0, 2000).mapToObj(i -> db.components().insertPublicProject(organization)).collect(Collectors.toList());","487","","488","    Collection<Long> ids = projects.stream().map(ComponentDto::getId).collect(Collectors.toSet());","489","    assertThat(underTest.keepAuthorizedProjectIds(dbSession, ids, null, UserRole.USER))","490","      .containsOnly(ids.toArray(new Long[0]));","491","  }","492","","493","  @Test","494","  public void keepAuthorizedProjectUuids_should_be_able_to_handle_lots_of_projects() {","495","    List<ComponentDto> projects = IntStream.range(0, 2000).mapToObj(i -> db.components().insertPublicProject(organization)).collect(Collectors.toList());","496","","497","    Collection<String> uuids = projects.stream().map(ComponentDto::uuid).collect(Collectors.toSet());","498","    assertThat(underTest.keepAuthorizedProjectUuids(dbSession, uuids, null, UserRole.USER))","499","      .containsOnly(uuids.toArray(new String[0]));","500","  }","501","","502","  @Test","686","  public void keepAuthorizedUsersForRoleAndProject_should_be_able_to_handle_lots_of_users() {","687","    List<UserDto> users = IntStream.range(0, 2000).mapToObj(i -> db.users().insertUser()).collect(Collectors.toList());","688","","689","    assertThat(underTest.keepAuthorizedUsersForRoleAndProject(dbSession,","690","      users.stream().map(UserDto::getId).collect(Collectors.toSet()), \"user\", PROJECT_ID)).isEmpty();","691","  }","692","","693","","694","  @Test"],"delete":[]}]}},"17968cf78d5f505c1ce3fb3ae5c8be6bf22684cd":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensor.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/GenericCoverageMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/tests\/GenericTestExecutionMediumTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":[{"add":["23","import java.nio.charset.StandardCharsets;","24","import java.util.HashMap;","25","import java.util.Map;","31","import org.sonar.api.config.Encryption;","37","import org.sonar.scanner.bootstrap.GlobalAnalysisMode;","38","import org.sonar.scanner.config.DefaultConfiguration;","40","import org.sonar.scanner.scan.ProjectSettings;","57","    FileUtils.write(report, \"<unitTest version=\\\"1\\\"><file path=\\\"A.java\\\"><testCase name=\\\"test1\\\" duration=\\\"500\\\"\/><\/file><\/unitTest>\", StandardCharsets.UTF_8);","59","","60","    Map<String, String> settings = new HashMap<>();","61","    settings.put(GenericTestExecutionSensor.OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY, \"report.xml\");","62","    PropertyDefinitions defs = new PropertyDefinitions(GenericTestExecutionSensor.properties());","63","    DefaultConfiguration config = new ProjectSettings(defs, new Encryption(null), mock(GlobalAnalysisMode.class), settings);","64","","65","    new GenericTestExecutionSensor(mock(TestPlanBuilder.class), config).execute(context);"],"delete":["50","    FileUtils.write(report, \"<unitTest version=\\\"1\\\"><file path=\\\"A.java\\\"><testCase name=\\\"test1\\\" duration=\\\"500\\\"\/><\/file><\/unitTest>\");","52","    Settings settings = new MapSettings(new PropertyDefinitions(GenericTestExecutionSensor.properties()));","53","    settings.setProperty(GenericTestExecutionSensor.OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY, \"report.xml\");","54","    context.setSettings(settings);","55","    new GenericTestExecutionSensor(mock(TestPlanBuilder.class)).execute(context);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":[{"add":["24","import java.nio.charset.StandardCharsets;","59","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","60","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\", StandardCharsets.UTF_8);","95","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","97","    FileUtils.write(xooUtCoverageFile, \"2:2:2:2\\n4:0\", StandardCharsets.UTF_8);","99","    FileUtils.write(xooItCoverageFile, \"2:2:2:1\\n3:1\\n5:0\", StandardCharsets.UTF_8);","139","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","140","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\", StandardCharsets.UTF_8);","173","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","174","    FileUtils.write(measuresFile, \"executable_lines_data:2=1;3=1;4=0\", StandardCharsets.UTF_8);","216","    FileUtils.write(xooFile1, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","217","    FileUtils.write(measuresFile1, \"executable_lines_data:2=1;3=1;4=0\", StandardCharsets.UTF_8);","221","    FileUtils.write(xooFile2, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","222","    FileUtils.write(measuresFile2, \"executable_lines_data:2=1;3=1;4=0\", StandardCharsets.UTF_8);"],"delete":["58","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","59","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\");","94","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","96","    FileUtils.write(xooUtCoverageFile, \"2:2:2:2\\n4:0\");","98","    FileUtils.write(xooItCoverageFile, \"2:2:2:1\\n3:1\\n5:0\");","138","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","139","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\");","172","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","173","    FileUtils.write(measuresFile, \"executable_lines_data:2=1;3=1;4=0\");","215","    FileUtils.write(xooFile1, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","216","    FileUtils.write(measuresFile1, \"executable_lines_data:2=1;3=1;4=0\");","220","    FileUtils.write(xooFile2, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","221","    FileUtils.write(measuresFile2, \"executable_lines_data:2=1;3=1;4=0\");"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensor.java":[{"add":["34","import org.sonar.scanner.config.DefaultConfiguration;","65","  private final DefaultConfiguration config;","67","  public GenericCoverageSensor(DefaultConfiguration config) {","79","        .multiValues(true)","85","  private void loadArrayDeprecated(Set<String> reportPaths, String propertyKey) {","86","    if (config.getOriginalProperties().containsKey(propertyKey)) {","92","  private void loadDeprecated(Set<String> reportPaths, String propertyKey) {","93","    if (config.getOriginalProperties().containsKey(propertyKey)) {","94","      LOG.warn(\"Property '{}' is deprecated. Please use '{}' instead.\", propertyKey, REPORT_PATHS_PROPERTY_KEY);","95","      config.get(propertyKey).ifPresent(reportPaths::add);","96","    }","97","  }","98","","130","    loadArrayDeprecated(reportPaths, OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","131","    loadArrayDeprecated(reportPaths, OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","132","    loadArrayDeprecated(reportPaths, OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY);"],"delete":["30","import org.sonar.api.config.Configuration;","65","  private final Configuration config;","67","  public GenericCoverageSensor(Configuration config) {","84","  private void loadDeprecated(Set<String> reportPaths, String propertyKey) {","85","    if (config.hasKey(propertyKey)) {","122","    loadDeprecated(reportPaths, OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","123","    loadDeprecated(reportPaths, OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","124","    loadDeprecated(reportPaths, OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensor.java":[{"add":["31","import org.sonar.scanner.config.DefaultConfiguration;","48","  private final DefaultConfiguration configuration;","50","  public GenericTestExecutionSensor(TestPlanBuilder testPlanBuilder, DefaultConfiguration configuration) {","52","    this.configuration = configuration;","63","        .multiValues(true)","76","    if (configuration.getOriginalProperties().containsKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY)) {","79","","80","    for (String reportPath : configuration.getStringArray(REPORT_PATHS_PROPERTY_KEY)) {"],"delete":["48","  public GenericTestExecutionSensor(TestPlanBuilder testPlanBuilder) {","62","","73","    if (context.settings().hasKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY)) {","76","    for (String reportPath : context.settings().getStringArray(REPORT_PATHS_PROPERTY_KEY)) {"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":[{"add":["21","import java.util.HashMap;","22","import java.util.Map;","26","import org.sonar.api.config.Encryption;","30","import org.sonar.scanner.bootstrap.GlobalAnalysisMode;","31","import org.sonar.scanner.config.DefaultConfiguration;","32","import org.sonar.scanner.scan.ProjectSettings;","35","import static org.mockito.Mockito.mock;","44","    Map<String, String> settings = new HashMap<>();","45","    settings.put(GenericCoverageSensor.OLD_REPORT_PATH_PROPERTY_KEY, \"old.xml\");","46","    settings.put(GenericCoverageSensor.OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old1.xml,old2.xml\");","47","    settings.put(GenericCoverageSensor.OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old3.xml,old4.xml,old.xml\");","48","    settings.put(GenericCoverageSensor.OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old5.xml,old6.xml\");","49","","50","    PropertyDefinitions defs = new PropertyDefinitions(GenericCoverageSensor.properties());","51","    DefaultConfiguration config = new ProjectSettings(defs, new Encryption(null), mock(GlobalAnalysisMode.class), settings);","52","","53","    Set<String> reportPaths = new GenericCoverageSensor(config).loadReportPaths();","54",""],"delete":["25","import org.sonar.api.config.internal.MapSettings;","38","    MapSettings settings = new MapSettings(new PropertyDefinitions(GenericCoverageSensor.properties()));","39","    settings.setProperty(GenericCoverageSensor.OLD_REPORT_PATH_PROPERTY_KEY, \"old.xml\");","40","    settings.setProperty(GenericCoverageSensor.OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old1.xml,old2.xml\");","41","    settings.setProperty(GenericCoverageSensor.OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old3.xml,old4.xml,old.xml\");","42","    settings.setProperty(GenericCoverageSensor.OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old5.xml,old6.xml\");","43","    Set<String> reportPaths = new GenericCoverageSensor(settings.asConfig()).loadReportPaths();","53",""]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":[{"add":[],"delete":["23","import org.apache.commons.lang.StringUtils;"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/GenericCoverageMediumTest.java":[{"add":["23","import java.util.ArrayList;","24","import java.util.List;","37","  private final List<String> logs = new ArrayList<>();","38","  ","50","      .setLogOutput((msg, level) -> logs.add(msg))","83","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.coverageReportPaths'\"));","84","","85","  }","86","  ","87","  @Test","88","  public void warnAboutDeprecatedProperty() {","89","    File projectDir = new File(\"src\/test\/resources\/mediumtest\/xoo\/sample-generic-coverage\");","90","","91","    tester","92","      .setLogOutput((msg, level) -> logs.add(msg))","93","      .newScanTask(new File(projectDir, \"sonar-project.properties\"))","94","      .property(\"sonar.genericcoverage.reportPath\", \"coverage.xml\")","95","      .execute();","96","      ","97","      ","98","    assertThat(logs).anyMatch(l -> l.contains(\"Please use 'sonar.coverageReportPaths'\"));","107","      .setLogOutput((msg, level) -> logs.add(msg))","140","    ","141","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.coverageReportPaths'\"));","143","  "],"delete":["35","","78","","119","","122",""]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":[{"add":["49","  private final Map<String, String> originalProperties;","56","    this.originalProperties = Collections.unmodifiableMap(props);","84","  public Map<String, String> getOriginalProperties() {","85","    return originalProperties;","86","  }","87",""],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/tests\/GenericTestExecutionMediumTest.java":[{"add":["24","import java.nio.charset.StandardCharsets;","25","import java.util.ArrayList;","26","import java.util.List;","43","  private final List<String> logs = new ArrayList<>();","63","    FileUtils.write(xooFile, \"foo\", StandardCharsets.UTF_8);","66","    FileUtils.write(xooTestFile, \"failure\\nerror\\nok\\nskipped\", StandardCharsets.UTF_8);","72","      \"success:4:::OK:INTEGRATION\", StandardCharsets.UTF_8);","74","    TaskResult result = tester","75","      .newTask()","106","      .setLogOutput((msg, level) -> logs.add(msg))","141","    ","142","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.testExecutionReportPaths'\"));","151","      .setLogOutput((msg, level) -> logs.add(msg))","190","    ","191","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.testExecutionReportPaths'\"));"],"delete":["59","    FileUtils.write(xooFile, \"foo\");","62","    FileUtils.write(xooTestFile, \"failure\\nerror\\nok\\nskipped\");","68","      \"success:4:::OK:INTEGRATION\");","70","    TaskResult result = tester.newTask()"]}]}},"40f9260e999f65532a82096a7995f14fad8f695f":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizations.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest\/properties_and_organizations.sql":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest.java":[{"add":["21","import com.google.common.collect.ImmutableList;","23","import java.sql.Timestamp;","24","import java.util.ArrayList;","25","import java.util.List;","28","import org.junit.After;","32","import org.sonar.core.util.UuidFactory;","33","import org.sonar.core.util.UuidFactoryFast;","36","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","51","  private RecordingUuidFactory recordingUuidFactory = new RecordingUuidFactory();","53","    new DefaultOrganizationUuidProviderImpl(), recordingUuidFactory);","54","","55","  @After","56","  public void clearRecordingUuidFactory() {","57","    recordingUuidFactory.clear();","58","  }","137","  public void execute_should_update_kee_when_old_kee_is_too_long() throws SQLException {","138","    setupDefaultOrganization();","139","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","140","    insertProperty(DEFAULT_VIEW_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","141","    insertProperty(DEFAULT_PROJECT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","142","    insertProperty(DEFAULT_DEV_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","143","","144","    underTest.execute();","145","","146","    verifyTemplateColumns(recordingUuidFactory.getRecordedUuids().get(0), recordingUuidFactory.getRecordedUuids().get(1));","147","    verifyPropertiesDoNotExist();","148","    verifyExistenceOfPermissionTemplate(recordingUuidFactory.getRecordedUuids().get(0));","149","    verifyExistenceOfPermissionTemplate(recordingUuidFactory.getRecordedUuids().get(1));","150","  }","151","","152","  @Test","153","  public void execute_should_update_kee_only_when_old_kee_length_is_41_or_more() throws SQLException {","154","    setupDefaultOrganization();","155","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","156","    insertProperty(DEFAULT_VIEW_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","157","    insertProperty(DEFAULT_PROJECT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","158","    insertProperty(DEFAULT_DEV_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","159","","160","    underTest.execute();","161","","162","    assertThat(recordingUuidFactory.getRecordedUuids()).isEmpty();","163","","164","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","165","    insertProperty(DEFAULT_VIEW_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","166","    insertProperty(DEFAULT_PROJECT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","167","    insertProperty(DEFAULT_DEV_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","168","","169","    underTest.execute();","170","","171","    assertThat(recordingUuidFactory.getRecordedUuids()).hasSize(2);","172","  }","173","","174","  @Test","207","  @Test","208","  public void migration_is_reentrant() throws SQLException {","209","    setupDefaultOrganization();","210","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, \"foo\");","211","","212","    underTest.execute();","213","","214","    underTest.execute();","215","  }","216","","229","  private void verifyExistenceOfPermissionTemplate(String kee) {","230","    assertThat(dbTester.countSql(\"select count(kee) from permission_templates where kee='\" + kee +\"'\")).isEqualTo(1);","248","  private String insertPermissionTemplates(String kee) {","249","    dbTester.executeInsert(","250","      \"PERMISSION_TEMPLATES\",","251","      \"ORGANIZATION_UUID\", DEFAULT_ORGANIZATION_UUID,","252","      \"NAME\", randomAlphanumeric(50),","253","      \"KEE\", kee,","254","      \"DESCRIPTION\", randomAlphanumeric(500),","255","      \"KEY_PATTERN\", \"\",","256","      \"CREATED_AT\", new Timestamp(1000L),","257","      \"UPDATED_AT\", new Timestamp(1000L));","258","","259","    return kee;","260","  }","261","","277","","278","  private static final class RecordingUuidFactory implements UuidFactory {","279","    private final List<String> generatedUuids = new ArrayList<>();","280","    private final UuidFactory uuidFactory = UuidFactoryFast.getInstance();","281","","282","    @Override","283","    public String create() {","284","      String uuid = uuidFactory.create();","285","      generatedUuids.add(uuid);","286","      return uuid;","287","    }","288","","289","    public void clear() {","290","      generatedUuids.clear();","291","    }","292","","293","    public List<String> getRecordedUuids() {","294","      return ImmutableList.copyOf(generatedUuids);","295","    }","296","  }"],"delete":["44","    new DefaultOrganizationUuidProviderImpl());","167","  @Test","168","  public void migration_is_reentrant() throws SQLException {","169","    setupDefaultOrganization();","170","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, \"foo\");","171","","172","    underTest.execute();","173","","174","    underTest.execute();"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizations.java":[{"add":["24","import javax.annotation.Nullable;","26","import org.sonar.core.util.UuidFactory;","28","import org.sonar.server.platform.db.migration.def.VarcharColumnDef;","54","  private final UuidFactory uuidFactory;","56","  public PopulateDefaultPermTemplateColumnsOfOrganizations(Database db, DefaultOrganizationUuidProvider defaultOrganizationUuid, UuidFactory uuidFactory) {","59","    this.uuidFactory = uuidFactory;","74","    String projectDefaultTemplate = updateKeeIfRequired(context,","75","      firstNonNull(defaultTemplateProperties.get(DEFAULT_PROJECT_TEMPLATE_PROPERTY), globalDefaultTemplate));","76","    String viewDefaultTemplate = updateKeeIfRequired(context,","77","      defaultTemplateProperties.get(DEFAULT_VIEW_TEMPLATE_PROPERTY));","104","  \/**","105","   * SONAR-10407 Ensure that the kee length is not greater than 40","106","   * In this case, we must update the kee to a UUID","107","   *\/","108","  private String updateKeeIfRequired(Context context, @Nullable String kee) throws SQLException {","109","    if (kee == null || kee.length() <= VarcharColumnDef.UUID_SIZE) {","110","      return kee;","111","    }","112","","113","    String newKee = uuidFactory.create();","114","    context.prepareUpsert(\"update permission_templates set kee=? where kee=?\")","115","      .setString(1, newKee)","116","      .setString(2, kee)","117","      .execute();","118","    return newKee;","119","  }","120",""],"delete":["52","  public PopulateDefaultPermTemplateColumnsOfOrganizations(Database db, DefaultOrganizationUuidProvider defaultOrganizationUuid) {","69","    String projectDefaultTemplate = firstNonNull(defaultTemplateProperties.get(DEFAULT_PROJECT_TEMPLATE_PROPERTY), globalDefaultTemplate);","70","    String viewDefaultTemplate = defaultTemplateProperties.get(DEFAULT_VIEW_TEMPLATE_PROPERTY);"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest\/properties_and_organizations.sql":[{"add":["36","","37","CREATE TABLE \"PERMISSION_TEMPLATES\" (","38","  \"ID\" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),","39","  \"ORGANIZATION_UUID\" VARCHAR(40) NOT NULL,","40","  \"NAME\" VARCHAR(100) NOT NULL,","41","  \"KEE\" VARCHAR(100) NOT NULL,","42","  \"DESCRIPTION\" VARCHAR(4000),","43","  \"KEY_PATTERN\" VARCHAR(500),","44","  \"CREATED_AT\" TIMESTAMP,","45","  \"UPDATED_AT\" TIMESTAMP","46",");"],"delete":[]}]}},"f64450ef7cf35b30c4730491e9f30f31f688b98b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutAppForSonarQubeDotComLazyLoader.js":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":[{"add":["38","import AboutAppForSonarQubeDotComLazyLoader from '.\/AboutAppForSonarQubeDotComLazyLoader';","121","        <AboutAppForSonarQubeDotComLazyLoader"],"delete":["38","import AboutAppForSonarQubeDotCom from '.\/AboutAppForSonarQubeDotCom';","121","        <AboutAppForSonarQubeDotCom"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutAppForSonarQubeDotComLazyLoader.js":[{"add":[],"delete":[]}]}},"ee8183913dd87fb6abbc73cc3d1cd2dcc77c93d9":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/SchedulerImpl.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/EsScriptCommand.java":"ADD","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsInstallation.java":"ADD","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/AbstractCommand.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/JavaCommand.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncher.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/AbstractCommandTest.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsInstallationTest.java":"ADD","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsSettingsTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/EsProcessMonitor.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactory.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/CommandFactoryImplTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsSettings.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/EsProcessMonitorTest.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/ProcessLauncherImplTest.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/SchedulerImplTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncherImpl.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/SchedulerImpl.java":[{"add":["30","import org.sonar.application.command.AbstractCommand;","109","      tryToStartProcess(process, commandFactory::createEsCommand);","125","      tryToStartProcess(process, () -> commandFactory.createWebCommand(false));","127","      tryToStartProcess(process, () -> commandFactory.createWebCommand(true));","141","      tryToStartProcess(process, commandFactory::createCeCommand);","150","  private void tryToStartProcess(SQProcess process, Supplier<AbstractCommand> commandSupplier) {","152","      AbstractCommand command = commandSupplier.get();"],"delete":["31","import org.sonar.application.command.EsCommand;","32","import org.sonar.application.command.JavaCommand;","110","      tryToStartEsProcess(process, commandFactory::createEsCommand);","126","      tryToStartJavaProcess(process, () -> commandFactory.createWebCommand(false));","128","      tryToStartJavaProcess(process, () -> commandFactory.createWebCommand(true));","142","      tryToStartJavaProcess(process, commandFactory::createCeCommand);","151","  private void tryToStartJavaProcess(SQProcess process, Supplier<JavaCommand> commandSupplier) {","153","      JavaCommand command = commandSupplier.get();","154","      return processLauncher.launch(command);","155","    });","156","  }","157","","158","  private void tryToStartEsProcess(SQProcess process, Supplier<EsCommand> commandSupplier) {","159","    tryToStart(process, () -> {","160","      EsCommand command = commandSupplier.get();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/EsScriptCommand.java":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsInstallation.java":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/AbstractCommand.java":[{"add":["26","import javax.annotation.CheckForNull;","27","import org.sonar.application.es.EsInstallation;","39","  private EsInstallation esInstallation;","81","","82","","83","  public T setEsInstallation(EsInstallation esInstallation) {","84","    this.esInstallation = esInstallation;","85","    return castThis();","86","  }","87","","88","  @CheckForNull","89","  public EsInstallation getEsInstallation() {","90","    return esInstallation;","91","  }"],"delete":["24","import java.util.LinkedHashMap;","26","import java.util.Properties;","28","import javax.annotation.Nullable;","37","  \/\/ program arguments","38","  private final Map<String, String> arguments = new LinkedHashMap<>();","62","  public Map<String, String> getArguments() {","63","    return arguments;","64","  }","65","","66","  public T setArgument(String key, @Nullable String value) {","67","    if (value == null) {","68","      arguments.remove(key);","69","    } else {","70","      arguments.put(key, value);","71","    }","72","    return castThis();","73","  }","74","","75","  public T setArguments(Properties args) {","76","    for (Map.Entry<Object, Object> entry : args.entrySet()) {","77","      setArgument(entry.getKey().toString(), entry.getValue() != null ? entry.getValue().toString() : null);","78","    }","79","    return castThis();","80","  }","81",""]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/JavaCommand.java":[{"add":["23","import java.util.LinkedHashMap;","25","import java.util.Map;","26","import java.util.Properties;","27","import javax.annotation.Nullable;","32","  \/\/ program arguments","33","  private final Map<String, String> arguments = new LinkedHashMap<>();","39","  private boolean readsArgumentsFromFile;","73","  public boolean getReadsArgumentsFromFile() {","74","    return readsArgumentsFromFile;","75","  }","76","","77","  public JavaCommand<T> setReadsArgumentsFromFile(boolean readsArgumentsFromFile) {","78","    this.readsArgumentsFromFile = readsArgumentsFromFile;","79","    return this;","80","  }","81","","82","  public Map<String, String> getArguments() {","83","    return arguments;","84","  }","85","","86","  public JavaCommand<T> setArgument(String key, @Nullable String value) {","87","    if (value == null) {","88","      arguments.remove(key);","89","    } else {","90","      arguments.put(key, value);","91","    }","92","    return this;","93","  }","94","","95","  public JavaCommand<T> setArguments(Properties args) {","96","    for (Map.Entry<Object, Object> entry : args.entrySet()) {","97","      setArgument(entry.getKey().toString(), entry.getValue() != null ? entry.getValue().toString() : null);","98","    }","99","    return this;","100","  }","101",""],"delete":[]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncher.java":[{"add":["22","import org.sonar.application.command.AbstractCommand;","30","   * Launch a command.","34","  ProcessMonitor launch(AbstractCommand command);"],"delete":["22","import org.sonar.application.command.EsCommand;","23","import org.sonar.application.command.JavaCommand;","31","   * Launch an ES command.","35","  ProcessMonitor launch(EsCommand esCommand);","36","","37","  \/**","38","   * Launch a Java command.","39","   * ","40","   * @throws IllegalStateException if an error occurs","41","   *\/","42","  ProcessMonitor launch(JavaCommand javaCommand);"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/AbstractCommandTest.java":[{"add":[],"delete":["69","  public void test_command_with_complete_information() throws Exception {","70","    File workDir = temp.newFolder();","71","    AbstractCommand command = new AbstractCommand(ProcessId.ELASTICSEARCH, workDir, System2.INSTANCE) {","72","","73","    };","74","","75","    command.setArgument(\"first_arg\", \"val1\");","76","    Properties args = new Properties();","77","    args.setProperty(\"second_arg\", \"val2\");","78","    command.setArguments(args);","79","","80","    command.setEnvVariable(\"JAVA_COMMAND_TEST\", \"1000\");","81","","82","    assertThat(command.toString()).isNotNull();","83","    assertThat(command.getWorkDir()).isSameAs(workDir);","84","","85","    \/\/ copy current env variables","86","    assertThat(command.getEnvVariables().get(\"JAVA_COMMAND_TEST\")).isEqualTo(\"1000\");","87","    assertThat(command.getEnvVariables().size()).isEqualTo(System.getenv().size() + 1);","88","  }","89","","90","  @Test"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsInstallationTest.java":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsSettingsTest.java":[{"add":["67","    new EsSettings(props, new EsInstallation(props), system2);","78","    new EsSettings(props, new EsInstallation(props), system2);","89","    new EsSettings(props, new EsInstallation(props), system2);","119","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","158","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","177","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","194","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","201","    EsInstallation mockedEsInstallation = mock(EsInstallation.class);","202","    when(mockedEsInstallation.getHomeDirectory()).thenReturn(new File(\"\/foo\/home\"));","203","    when(mockedEsInstallation.getConfDirectory()).thenReturn(new File(\"\/foo\/conf\"));","204","    when(mockedEsInstallation.getLogDirectory()).thenReturn(new File(\"\/foo\/log\"));","205","    when(mockedEsInstallation.getDataDirectory()).thenReturn(new File(\"\/foo\/data\"));","207","    EsSettings underTest = new EsSettings(minProps(new Random().nextBoolean()), mockedEsInstallation, System2.INSTANCE);","219","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","231","    EsSettings underTest = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","242","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","251","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","260","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","269","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","278","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","290","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();"],"delete":["67","    new EsSettings(props, new EsFileSystem(props), system2);","78","    new EsSettings(props, new EsFileSystem(props), system2);","89","    new EsSettings(props, new EsFileSystem(props), system2);","119","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","158","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","177","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","194","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","201","    EsFileSystem mockedEsFileSystem = mock(EsFileSystem.class);","202","    when(mockedEsFileSystem.getHomeDirectory()).thenReturn(new File(\"\/foo\/home\"));","203","    when(mockedEsFileSystem.getConfDirectory()).thenReturn(new File(\"\/foo\/conf\"));","204","    when(mockedEsFileSystem.getLogDirectory()).thenReturn(new File(\"\/foo\/log\"));","205","    when(mockedEsFileSystem.getDataDirectory()).thenReturn(new File(\"\/foo\/data\"));","207","    EsSettings underTest = new EsSettings(minProps(new Random().nextBoolean()), mockedEsFileSystem, System2.INSTANCE);","219","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","231","    EsSettings underTest = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","242","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","251","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","260","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","269","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","278","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","290","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/EsProcessMonitor.java":[{"add":["40","import org.sonar.application.es.EsInstallation;","41","import org.sonar.process.ProcessId;","59","  private final EsInstallation esConfig;","63","  public EsProcessMonitor(Process process, ProcessId processId, EsInstallation esConfig, EsConnector esConnector) {","64","    super(process, processId);","65","    this.esConfig = esConfig;","172","    esSettings.put(\"cluster.name\", esConfig.getClusterName());","175","    HostAndPort host = HostAndPort.fromParts(esConfig.getHost(), esConfig.getPort());"],"delete":["40","import org.sonar.application.command.EsCommand;","58","  private final EsCommand esCommand;","62","  public EsProcessMonitor(Process process, EsCommand esCommand, EsConnector esConnector) {","63","    super(process, esCommand.getProcessId());","64","    this.esCommand = esCommand;","171","    esSettings.put(\"cluster.name\", esCommand.getClusterName());","174","    HostAndPort host = HostAndPort.fromParts(esCommand.getHost(), esCommand.getPort());"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactory.java":[{"add":["23","  AbstractCommand createEsCommand();"],"delete":["23","  EsCommand createEsCommand();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":[{"add":["25","import org.sonar.application.es.EsInstallation;","26","import org.sonar.application.es.EsLogging;","27","import org.sonar.application.es.EsSettings;","28","import org.sonar.application.es.EsYmlSettings;","34","import static org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS;","70","  public AbstractCommand<?> createEsCommand() {","71","    if (IS_OS_WINDOWS) {","72","      return createEsCommandForWindows();","73","    }","74","    return createEsCommandForUnix();","75","  }","76","","77","  private EsScriptCommand createEsCommandForUnix() {","78","    EsInstallation esInstallation = new EsInstallation(props);","79","    if (!esInstallation.getExecutable().exists()) {","82","    Map<String, String> settingsMap = new EsSettings(props, esInstallation, System2.INSTANCE).build();","84","    esInstallation","85","      .setLog4j2Properties(new EsLogging().createProperties(props, esInstallation.getLogDirectory()))","90","      .setClusterName(settingsMap.get(\"cluster.name\"))","91","      .setHost(settingsMap.get(\"network.host\"))","92","      .setPort(Integer.valueOf(settingsMap.get(\"transport.tcp.port\")));","93","","94","    return new EsScriptCommand(ProcessId.ELASTICSEARCH, esInstallation.getHomeDirectory())","95","      .setEsInstallation(esInstallation)","96","      .addOption(\"-Epath.conf=\" + esInstallation.getConfDirectory().getAbsolutePath())","97","      .setEnvVariable(\"ES_JVM_OPTIONS\", esInstallation.getJvmOptions().getAbsolutePath())","102","  private JavaCommand createEsCommandForWindows() {","103","    EsInstallation esInstallation = new EsInstallation(props);","104","    if (!esInstallation.getExecutable().exists()) {","105","      throw new IllegalStateException(\"Cannot find elasticsearch binary\");","106","    }","107","    Map<String, String> settingsMap = new EsSettings(props, esInstallation, System2.INSTANCE).build();","108","","109","    esInstallation","110","      .setLog4j2Properties(new EsLogging().createProperties(props, esInstallation.getLogDirectory()))","111","      .setEsJvmOptions(new EsJvmOptions()","112","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_OPTS)","113","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_ADDITIONAL_OPTS))","114","      .setEsYmlSettings(new EsYmlSettings(settingsMap))","115","      .setClusterName(settingsMap.get(\"cluster.name\"))","116","      .setHost(settingsMap.get(\"network.host\"))","117","      .setPort(Integer.valueOf(settingsMap.get(\"transport.tcp.port\")));","118","","119","    return new JavaCommand<EsJvmOptions>(ProcessId.ELASTICSEARCH, esInstallation.getHomeDirectory())","120","      .setEsInstallation(esInstallation)","121","      .setReadsArgumentsFromFile(false)","122","      .setArgument(\"path.conf\", esInstallation.getConfDirectory().getAbsolutePath())","123","      .setJvmOptions(new EsJvmOptions()","124","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_OPTS)","125","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_ADDITIONAL_OPTS)","126","        .add(\"-Delasticsearch\")","127","        .add(\"-Des.path.home=\" + esInstallation.getHomeDirectory())","128","      )","129","      .setEnvVariable(\"ES_JVM_OPTIONS\", esInstallation.getJvmOptions().getAbsolutePath())","130","      .setEnvVariable(\"JAVA_HOME\", System.getProperties().getProperty(\"java.home\"))","131","      .setClassName(\"org.elasticsearch.bootstrap.Elasticsearch\")","132","      .addClasspath(\"lib\/*\")","133","      .suppressEnvVariable(ENV_VAR_JAVA_TOOL_OPTIONS);","134","  }","135","","146","      .setReadsArgumentsFromFile(true)","173","      .setReadsArgumentsFromFile(true)"],"delete":["29","import org.sonar.application.es.EsFileSystem;","30","import org.sonar.application.es.EsLogging;","31","import org.sonar.application.es.EsSettings;","32","import org.sonar.application.es.EsYmlSettings;","69","  public EsCommand createEsCommand() {","70","    EsFileSystem esFileSystem = new EsFileSystem(props);","71","    if (!esFileSystem.getExecutable().exists()) {","74","    Map<String, String> settingsMap = new EsSettings(props, esFileSystem, System2.INSTANCE).build();","76","    return new EsCommand(ProcessId.ELASTICSEARCH, esFileSystem.getHomeDirectory())","77","      .setFileSystem(esFileSystem)","78","      .setLog4j2Properties(new EsLogging().createProperties(props, esFileSystem.getLogDirectory()))","79","      .setArguments(props.rawProperties())","80","      .setClusterName(settingsMap.get(\"cluster.name\"))","81","      .setHost(settingsMap.get(\"network.host\"))","82","      .setPort(Integer.valueOf(settingsMap.get(\"transport.tcp.port\")))","83","      .addEsOption(\"-Epath.conf=\" + esFileSystem.getConfDirectory().getAbsolutePath())","88","      .setEnvVariable(\"ES_JVM_OPTIONS\", esFileSystem.getJvmOptions().getAbsolutePath())"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/CommandFactoryImplTest.java":[{"add":["33","import org.sonar.application.es.EsInstallation;","112","    AbstractCommand esCommand = newFactory(props).createEsCommand();","113","    EsInstallation esConfig = esCommand.getEsInstallation();","115","    assertThat(esConfig.getClusterName()).isEqualTo(\"sonarqube\");","116","    assertThat(esConfig.getHost()).isNotEmpty();","117","    assertThat(esConfig.getPort()).isEqualTo(9001);","118","    assertThat(esConfig.getEsJvmOptions().getAll())","127","    assertThat(esConfig.getEsYmlSettings()).isNotNull();","129","    assertThat(esConfig.getLog4j2Properties())","145","    AbstractCommand esCommand = newFactory(props).createEsCommand();","146","    EsInstallation esConfig = esCommand.getEsInstallation();","148","    assertThat(esConfig.getClusterName()).isEqualTo(\"foo\");","149","    assertThat(esConfig.getPort()).isEqualTo(1234);","150","    assertThat(esConfig.getEsJvmOptions().getAll())","175","      .isNotEmpty();"],"delete":["111","    EsCommand esCommand = newFactory(props).createEsCommand();","113","    assertThat(esCommand.getClusterName()).isEqualTo(\"sonarqube\");","114","    assertThat(esCommand.getHost()).isNotEmpty();","115","    assertThat(esCommand.getPort()).isEqualTo(9001);","116","    assertThat(esCommand.getEsJvmOptions().getAll())","122","    assertThat(esCommand.getEsOptions()).containsOnly(\"-Epath.conf=\" + esConfDir.getAbsolutePath());","126","    assertThat(esCommand.getEsYmlSettings()).isNotNull();","128","    assertThat(esCommand.getLog4j2Properties())","144","    EsCommand command = newFactory(props).createEsCommand();","146","    assertThat(command.getClusterName()).isEqualTo(\"foo\");","147","    assertThat(command.getPort()).isEqualTo(1234);","148","    assertThat(command.getEsJvmOptions().getAll())","173","      .containsKey(\"JAVA_HOME\");"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsSettings.java":[{"add":["44","  private final EsInstallation fileSystem;","50","  public EsSettings(Props props, EsInstallation fileSystem, System2 system2) {"],"delete":["44","  private final EsFileSystem fileSystem;","50","  public EsSettings(Props props, EsFileSystem fileSystem, System2 system2) {"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/EsProcessMonitorTest.java":[{"add":["30","import java.util.Properties;","37","import org.sonar.application.es.EsInstallation;","39","import org.sonar.process.Props;","53","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","61","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","69","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","77","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","90","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","99","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","116","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","134","  private EsInstallation getEsConfig() throws IOException {","136","    Properties properties = new Properties();","137","    properties.setProperty(\"sonar.path.home\", \"\/imaginary\/path\");","138","    properties.setProperty(\"sonar.path.data\", \"\/imaginary\/path\");","139","    properties.setProperty(\"sonar.path.temp\", \"\/imaginary\/path\");","140","    properties.setProperty(\"sonar.path.logs\", \"\/imaginary\/path\");","141","    return new EsInstallation(new Props(properties))"],"delete":["37","import org.sonar.application.command.EsCommand;","51","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","59","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","67","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","75","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","88","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","97","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","114","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","132","  private EsCommand getEsCommand() throws IOException {","134","    return new EsCommand(ProcessId.ELASTICSEARCH, tempDirectory.toFile())"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/ProcessLauncherImplTest.java":[{"add":["33","import org.sonar.application.command.EsScriptCommand;","36","import org.sonar.application.es.EsInstallation;","95","    JavaCommand<JvmOptions> command = new JavaCommand<>(ProcessId.WEB_SERVER, temp.newFolder());","96","    command.setReadsArgumentsFromFile(true);","113","        entry(\"process.key\", ProcessId.WEB_SERVER.getKey()),","114","        entry(\"process.index\", String.valueOf(ProcessId.WEB_SERVER.getIpcIndex())),","120","  public void temporary_properties_file_can_be_avoided() throws Exception {","121","    File tempDir = temp.newFolder();","122","    TestProcessBuilder processBuilder = new TestProcessBuilder();","123","    ProcessLauncher underTest = new ProcessLauncherImpl(tempDir, commands, () -> processBuilder);","124","    JavaCommand<JvmOptions> command = new JavaCommand<>(ProcessId.WEB_SERVER, temp.newFolder());","125","    command.setReadsArgumentsFromFile(false);","126","    command.setArgument(\"foo\", \"bar\");","127","    command.setArgument(\"baz\", \"woo\");","128","    command.setJvmOptions(new JvmOptions<>());","129","","130","    underTest.launch(command);","131","","132","    String propsFilePath = processBuilder.commands.get(processBuilder.commands.size() - 1);","133","    File file = new File(propsFilePath);","134","    assertThat(file).doesNotExist();","135","  }","136","","137","  @Test","144","    EsScriptCommand command = createEsScriptCommand(tempDir, homeDir, dataDir, logDir);","162","    EsScriptCommand command = createEsScriptCommand(tempDir, homeDir, dataDir, logDir);","185","  private EsScriptCommand createEsScriptCommand(File tempDir, File homeDir, File dataDir, File logDir) throws IOException {","186","    EsScriptCommand command = new EsScriptCommand(ProcessId.ELASTICSEARCH, temp.newFolder());","192","    command.setEsInstallation(new EsInstallation(props)","193","      .setEsYmlSettings(mock(EsYmlSettings.class))","194","      .setEsJvmOptions(mock(EsJvmOptions.class))","195","      .setLog4j2Properties(new Properties()));"],"delete":["32","import org.sonar.application.command.EsCommand;","36","import org.sonar.application.es.EsFileSystem;","95","    JavaCommand<JvmOptions> command = new JavaCommand<>(ProcessId.ELASTICSEARCH, temp.newFolder());","112","        entry(\"process.key\", ProcessId.ELASTICSEARCH.getKey()),","113","        entry(\"process.index\", String.valueOf(ProcessId.ELASTICSEARCH.getIpcIndex())),","125","    EsCommand command = createEsCommand(tempDir, homeDir, dataDir, logDir);","143","    EsCommand command = createEsCommand(tempDir, homeDir, dataDir, logDir);","166","  private EsCommand createEsCommand(File tempDir, File homeDir, File dataDir, File logDir) throws IOException {","167","    EsCommand command = new EsCommand(ProcessId.ELASTICSEARCH, temp.newFolder());","173","    command.setFileSystem(new EsFileSystem(props));","174","    command.setEsYmlSettings(mock(EsYmlSettings.class));","175","    command.setEsJvmOptions(mock(EsJvmOptions.class));","176","    command.setLog4j2Properties(new Properties());"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/SchedulerImplTest.java":[{"add":["42","import org.sonar.application.command.EsScriptCommand;","75","  private EsScriptCommand esScriptCommand;","76","  private JavaCommand esJavaCommand;","93","    esScriptCommand = new EsScriptCommand(ELASTICSEARCH, tempDir);","94","    esJavaCommand = new JavaCommand(ELASTICSEARCH, tempDir);","121","    assertThat(processLauncher.commands).containsExactly(esScriptCommand, webLeaderCommand);","129","    assertThat(processLauncher.commands).containsExactly(esScriptCommand, webLeaderCommand, ceCommand);","364","    public EsScriptCommand createEsCommand() {","365","      return esScriptCommand;","385","    public ProcessMonitor launch(AbstractCommand command) {","386","      return launchImpl(command);"],"delete":["42","import org.sonar.application.command.EsCommand;","75","  private EsCommand esCommand;","92","    esCommand = new EsCommand(ELASTICSEARCH, tempDir);","119","    assertThat(processLauncher.commands).containsExactly(esCommand, webLeaderCommand);","127","    assertThat(processLauncher.commands).containsExactly(esCommand, webLeaderCommand, ceCommand);","362","    public EsCommand createEsCommand() {","363","      return esCommand;","383","    public ProcessMonitor launch(EsCommand esCommand) {","384","      return launchImpl(esCommand);","385","    }","386","","387","    @Override","388","    public ProcessMonitor launch(JavaCommand javaCommand) {","389","      return launchImpl(javaCommand);"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncherImpl.java":[{"add":["35","import org.sonar.application.command.EsScriptCommand;","38","import org.sonar.application.es.EsInstallation;","71","  public ProcessMonitor launch(AbstractCommand command) {","72","    EsInstallation fileSystem = command.getEsInstallation();","73","    if (fileSystem != null) {","74","      cleanupOutdatedEsData(fileSystem);","75","      writeConfFiles(fileSystem);","76","    }","77","","78","    Process process;","79","    if (command instanceof EsScriptCommand) {","80","      process = launchExternal((EsScriptCommand) command);","81","    } else if (command instanceof JavaCommand) {","82","      process = launchJava((JavaCommand) command);","83","    } else {","84","      throw new IllegalStateException(\"Unexpected type of command: \" + command.getClass());","85","    }","86","","87","    ProcessId processId = command.getProcessId();","89","      if (processId == ProcessId.ELASTICSEARCH) {","90","        return new EsProcessMonitor(process, processId, command.getEsInstallation(), new EsConnectorImpl());","91","      } else {","92","        ProcessCommands commands = allProcessesCommands.createAfterClean(processId.getIpcIndex());","93","        return new ProcessCommandsProcessMonitor(process, processId, commands);","94","      }","100","      throw new IllegalStateException(format(\"Fail to launch monitor of process [%s]\", processId.getKey()), e);","104","  private Process launchExternal(EsScriptCommand esScriptCommand) {","105","    try {","106","      ProcessBuilder processBuilder = create(esScriptCommand);","107","      logLaunchedCommand(esScriptCommand, processBuilder);","108","      return processBuilder.start();","109","    } catch (Exception e) {","110","      throw new IllegalStateException(format(\"Fail to launch process [%s]\", esScriptCommand.getProcessId().getKey()), e);","111","    }","112","  }","113","","114","  private static void cleanupOutdatedEsData(EsInstallation esInstallation) {","115","    esInstallation.getOutdatedSearchDirectories().forEach(outdatedDir -> {","127","  private static void writeConfFiles(EsInstallation esInstallation) {","128","    File confDir = esInstallation.getConfDirectory();","136","      esInstallation.getEsYmlSettings().writeToYmlSettingsFile(esInstallation.getElasticsearchYml());","137","      esInstallation.getEsJvmOptions().writeToJvmOptionFile(esInstallation.getJvmOptions());","138","      esInstallation.getLog4j2Properties().store(new FileOutputStream(esInstallation.getLog4j2PropertiesLocation()), \"log4j2 properties file for ES bundled in SonarQube\");","144","  private Process launchJava(JavaCommand javaCommand) {","149","      return processBuilder.start();","164","  private ProcessBuilder create(EsScriptCommand esScriptCommand) {","166","    commands.add(esScriptCommand.getEsInstallation().getExecutable().getAbsolutePath());","167","    commands.addAll(esScriptCommand.getOptions());","169","    return create(esScriptCommand, commands);","178","    if (javaCommand.getReadsArgumentsFromFile()) {","179","      commands.add(buildPropertiesFile(javaCommand).getAbsolutePath());","180","    } else {","181","      javaCommand.getArguments().forEach((key, value) -> {","182","        if (value != null && !value.isEmpty()) {","183","          commands.add(\"-E\" + key + \"=\" + value);","184","        }","185","      });","186","    }"],"delete":["35","import org.sonar.application.command.EsCommand;","38","import org.sonar.application.es.EsFileSystem;","71","  @Override","72","  public ProcessMonitor launch(EsCommand esCommand) {","73","    Process process = null;","75","      cleanupOutdatedEsData(esCommand);","76","      writeConfFiles(esCommand);","77","      ProcessBuilder processBuilder = create(esCommand);","78","      logLaunchedCommand(esCommand, processBuilder);","79","","80","      process = processBuilder.start();","81","","82","      return new EsProcessMonitor(process, esCommand, new EsConnectorImpl());","88","      throw new IllegalStateException(format(\"Fail to launch process [%s]\", esCommand.getProcessId().getKey()), e);","92","  private static void cleanupOutdatedEsData(EsCommand esCommand) {","93","    EsFileSystem esFileSystem = esCommand.getFileSystem();","94","    esFileSystem.getOutdatedSearchDirectories().forEach(outdatedDir -> {","106","  private static void writeConfFiles(EsCommand esCommand) {","107","    EsFileSystem esFileSystem = esCommand.getFileSystem();","108","    File confDir = esFileSystem.getConfDirectory();","116","      esCommand.getEsYmlSettings().writeToYmlSettingsFile(esFileSystem.getElasticsearchYml());","117","      esCommand.getEsJvmOptions().writeToJvmOptionFile(esFileSystem.getJvmOptions());","118","      esCommand.getLog4j2Properties().store(new FileOutputStream(esFileSystem.getLog4j2Properties()), \"log4j2 properties file for ES bundled in SonarQube\");","124","  @Override","125","  public ProcessMonitor launch(JavaCommand javaCommand) {","126","    Process process = null;","129","      ProcessCommands commands = allProcessesCommands.createAfterClean(processId.getIpcIndex());","130","","133","      process = processBuilder.start();","134","      return new ProcessCommandsProcessMonitor(process, processId, commands);","136","      \/\/ just in case","137","      if (process != null) {","138","        process.destroyForcibly();","139","      }","153","  private ProcessBuilder create(EsCommand esCommand) {","155","    commands.add(esCommand.getFileSystem().getExecutable().getAbsolutePath());","156","    commands.addAll(esCommand.getEsOptions());","158","    return create(esCommand, commands);","167","    commands.add(buildPropertiesFile(javaCommand).getAbsolutePath());"]}]}},"e00d1c11e359c75025fdd85aba7c4df4b22737c9":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleCreator.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/CreateActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleCreator.java":[{"add":["79","    checkArgument(templateRule.getStatus() != RuleStatus.REMOVED, \"The template key doesn't exist: %s\", templateKey.toString());"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/CreateActionTest.java":[{"add":["43","import org.sonar.server.ws.TestRequest;","165","  public void create_custom_rule_of_non_existing_template_should_fail() {","166","    logInAsQProfileAdministrator();","167","","168","    TestRequest request = ws.newRequest()","169","      .setParam(\"custom_key\", \"MY_CUSTOM\")","170","      .setParam(\"template_key\", \"non:existing\")","171","      .setParam(\"name\", \"My custom rule\")","172","      .setParam(\"markdown_description\", \"Description\")","173","      .setParam(\"severity\", \"MAJOR\")","174","      .setParam(\"prevent_reactivation\", \"true\");","175","","176","    expectedException.expect(IllegalArgumentException.class);","177","    expectedException.expectMessage(\"The template key doesn't exist: non:existing\");","178","","179","    request.execute();","180","  }","181","","182","  @Test","183","  public void create_custom_rule_of_removed_template_should_fail() {","184","    logInAsQProfileAdministrator();","185","","186","    RuleDefinitionDto templateRule = db.rules().insert(r -> r.setIsTemplate(true).setStatus(RuleStatus.REMOVED));","187","","188","    TestRequest request = ws.newRequest()","189","      .setParam(\"custom_key\", \"MY_CUSTOM\")","190","      .setParam(\"template_key\", templateRule.getKey().toString())","191","      .setParam(\"name\", \"My custom rule\")","192","      .setParam(\"markdown_description\", \"Description\")","193","      .setParam(\"severity\", \"MAJOR\")","194","      .setParam(\"prevent_reactivation\", \"true\");","195","","196","    expectedException.expect(IllegalArgumentException.class);","197","    expectedException.expectMessage(\"The template key doesn't exist: \" + templateRule.getKey());","198","","199","    request.execute();","200","  }","201","","202","  @Test"],"delete":[]}]}},"340950d96f60bd730962296784c2465da2e3dc23":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.tsx":[{"add":["110","    \/\/ when home page is set to the default branch of a project, its name is returned as `undefined`","111","    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;"],"delete":["110","    const branch =","111","      isMainBranch(branchLike) || isLongLivingBranch(branchLike) ? branchLike.name : undefined;"]}]}},"9caa226fd480041bd57a3db46d8be4a81a55840d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ComponentAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ComponentAction.java":[{"add":["62","        \"Requires the following permission: 'Browse' on the project of the specified component.<br>\" +"],"delete":["62","        \"Requires one of the following permissions:\" +","63","        \"<ul>\" +","64","        \"<li>'Administer System'<\/li>\" +","65","        \"<li>'Administer' rights on the specified component<\/li>\" +","66","        \"<\/ul>\" +"]}]}},"cdfee0b5b7ec3074e16c9f94c8b4fb7ea1fea274":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/BulkIndexer.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/BulkIndexer.java":[{"add":["83","    \/\/ see https:\/\/jira.sonarsource.com\/browse\/SONAR-8075","84","    this.concurrentRequests = Math.max(1, Runtime.getRuntime().availableProcessors() \/ 5);"],"delete":["83","    this.concurrentRequests = Math.max(1, Runtime.getRuntime().availableProcessors() - 1);"]}]}},"9d95a6b0e9d0b84d2a3d76ae1a6c002a0f812b84":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDao.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDao.java":[{"add":["28","import static org.sonar.db.DatabaseUtils.executeLargeInputs;","33","    return executeLargeInputs(templateIds, partitionOfTemplateIds -> mapper(dbSession).selectByTemplateIds(partitionOfTemplateIds));"],"delete":["27","import static java.util.Collections.emptyList;","33","    return templateIds.isEmpty() ? emptyList() : mapper(dbSession).selectByTemplateIds(templateIds);"]}]}},"0dcc152f6804e619c042cea729c166c37e897607":{"changes":{"server\/sonar-webserver-auth\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImplTest.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfile.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImpl.java":"MODIFY","server\/sonar-webserver-auth\/src\/testFixtures\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryRule.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileInsertImpl.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImpl.java":"MODIFY"},"diff":{"server\/sonar-webserver-auth\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImplTest.java":[{"add":["28","import org.sonar.api.rule.RuleKey;","32","import org.sonar.db.rule.RuleDefinitionDto;","36","import static java.util.Collections.emptyList;","37","import static java.util.Collections.singletonList;","41","import static org.sonar.db.rule.RuleTesting.EXTERNAL_XOO;","42","import static org.sonar.server.qualityprofile.BuiltInQProfile.ActiveRule;","51","  public DbTester db = DbTester.create();","53","  private DbClient dbClient = db.getDbClient();","54","","55","  @Test","56","  public void create_qprofile_with_rule() {","57","    RuleDefinitionDto rule1 = db.rules().insert();","58","    RuleDefinitionDto rule2 = db.rules().insert();","59","    RuleDefinitionDto ruleNotToBeActivated = db.rules().insert();","60","    List<DummyProfileDefinition> definitions = singletonList(new DummyProfileDefinition(\"foo\", \"foo\", false,","61","      asList(rule1.getKey(), rule2.getKey())));","62","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","63","","64","    underTest.initialize();","65","","66","    assertThat(underTest.get())","67","      .extracting(BuiltInQProfile::getName)","68","      .containsExactlyInAnyOrder(\"foo\");","69","    assertThat(underTest.get().get(0).getActiveRules())","70","      .extracting(ActiveRule::getRuleId, ActiveRule::getRuleKey)","71","      .containsExactlyInAnyOrder(","72","        tuple(rule1.getId(), rule1.getKey()),","73","        tuple(rule2.getId(), rule2.getKey())","74","      );","75","  }","76","","77","  @Test","78","  public void make_single_profile_of_a_language_default_even_if_not_flagged_as_so() {","79","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", false));","80","","81","    underTest.initialize();","82","","83","    assertThat(underTest.get())","84","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","85","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","86","  }","87","","88","  @Test","89","  public void make_single_profile_of_a_language_default_even_if_flagged_as_so() {","90","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", true));","91","","92","    underTest.initialize();","93","","94","    assertThat(underTest.get())","95","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","96","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","97","  }","98","","99","  @Test","100","  public void make_first_profile_of_a_language_default_when_none_flagged_as_so() {","101","    List<DummyProfileDefinition> definitions = new ArrayList<>(","102","      asList(new DummyProfileDefinition(\"foo\", \"foo1\", false), new DummyProfileDefinition(\"foo\", \"foo2\", false)));","103","    String firstName = definitions.get(0).getName();","104","    String secondName = definitions.get(1).getName();","105","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","106","","107","    underTest.initialize();","108","","109","    assertThat(underTest.get())","110","      .extracting(BuiltInQProfile::getName, BuiltInQProfile::isDefault)","111","      .containsExactlyInAnyOrder(tuple(firstName, true), tuple(secondName, false));","112","  }","113","","114","  @Test","115","  public void create_profile_Sonar_Way_as_default_if_none_other_is_defined_default_for_a_given_language() {","116","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","117","      dbClient, new Languages(FOO_LANGUAGE),","118","      new DummyProfileDefinition(\"foo\", \"doh\", false), new DummyProfileDefinition(\"foo\", \"boo\", false),","119","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", false));","120","","121","    underTest.initialize();","122","","123","    assertThat(underTest.get())","124","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","125","      .filteredOn(BuiltInQProfile::isDefault)","126","      .extracting(BuiltInQProfile::getName)","127","      .containsExactly(SONAR_WAY_QP_NAME);","128","  }","129","","130","  @Test","131","  public void do_not_create_Sonar_Way_as_default_if_other_profile_is_defined_as_default() {","132","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","133","      dbClient, new Languages(FOO_LANGUAGE),","134","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", true));","135","","136","    underTest.initialize();","137","","138","    assertThat(underTest.get())","139","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","140","      .filteredOn(BuiltInQProfile::isDefault)","141","      .extracting(BuiltInQProfile::getName)","142","      .containsExactly(\"goo\");","143","  }","144","","145","  @Test","146","  public void match_Sonar_Way_default_with_case_sensitivity() {","147","    String sonarWayInOtherCase = SONAR_WAY_QP_NAME.toUpperCase();","148","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","149","      dbClient, new Languages(FOO_LANGUAGE),","150","      new DummyProfileDefinition(\"foo\", \"goo\", false), new DummyProfileDefinition(\"foo\", sonarWayInOtherCase, false));","151","","152","    underTest.initialize();","153","","154","    assertThat(underTest.get())","155","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","156","      .filteredOn(BuiltInQProfile::isDefault)","157","      .extracting(BuiltInQProfile::getName)","158","      .containsExactly(\"goo\");","159","  }","160","","161","  @Test","162","  public void create_no_BuiltInQProfile_when_all_definitions_apply_to_non_defined_languages() {","163","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(mock(DbClient.class), new Languages(), new DummyProfileDefinition(\"foo\", \"P1\", false));","164","","165","    underTest.initialize();","166","","167","    assertThat(underTest.get()).isEmpty();","168","  }","169","","170","  @Test","171","  public void create_qprofile_with_deprecated_rule() {","172","    RuleDefinitionDto rule1 = db.rules().insert();","173","    db.rules().insertDeprecatedKey(d -> d.setRuleId(rule1.getId()).setOldRepositoryKey(\"oldRepo\").setOldRuleKey(\"oldKey\"));","174","    RuleDefinitionDto rule2 = db.rules().insert();","175","    List<DummyProfileDefinition> definitions = singletonList(new DummyProfileDefinition(\"foo\", \"foo\", false,","176","      asList(RuleKey.of(\"oldRepo\", \"oldKey\"), rule2.getKey())));","177","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","178","","179","    underTest.initialize();","180","","181","    assertThat(underTest.get())","182","      .extracting(BuiltInQProfile::getName)","183","      .containsExactlyInAnyOrder(\"foo\");","184","    assertThat(underTest.get().get(0).getActiveRules())","185","      .extracting(ActiveRule::getRuleId, ActiveRule::getRuleKey)","186","      .containsExactlyInAnyOrder(","187","        tuple(rule1.getId(), rule1.getKey()),","188","        tuple(rule2.getId(), rule2.getKey())","189","      );","190","  }","191","","192","  @Test","193","  public void fail_with_ISE_when_rule_does_not_exist() {","194","    List<DummyProfileDefinition> definitions = singletonList(new DummyProfileDefinition(\"foo\", \"foo\", false, singletonList(EXTERNAL_XOO)));","195","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","196","","197","    expectedException.expect(IllegalStateException.class);","198","    expectedException.expectMessage(String.format(\"Rule with key '%s' not found\", EXTERNAL_XOO.toString()));","199","","200","    underTest.initialize();","201","  }","202","","203","  @Test","204","  public void fail_with_ISE_when_two_profiles_with_different_name_are_default_for_the_same_language() {","205","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE),","206","      new DummyProfileDefinition(\"foo\", \"foo1\", true), new DummyProfileDefinition(\"foo\", \"foo2\", true));","207","","208","    expectedException.expect(IllegalStateException.class);","209","    expectedException.expectMessage(\"Several Quality profiles are flagged as default for the language foo: [foo1, foo2]\");","210","","211","    underTest.initialize();","212","  }","249","    private final List<RuleKey> activeRuleKeys;","251","    private DummyProfileDefinition(String language, String name, boolean defaultProfile, List<RuleKey> activeRuleKeys) {","255","      this.activeRuleKeys = activeRuleKeys;","256","    }","257","","258","    private DummyProfileDefinition(String language, String name, boolean defaultProfile) {","259","      this(language, name, defaultProfile, emptyList());","264","      NewBuiltInQualityProfile builtInQualityProfile = context.createBuiltInQualityProfile(name, language);","265","      activeRuleKeys.stream().forEach(activeRuleKey -> builtInQualityProfile.activateRule(activeRuleKey.repository(), activeRuleKey.rule()));","266","      builtInQualityProfile.setDefault(defaultProfile);","267","      builtInQualityProfile.done();"],"delete":["22","import java.util.Collections;","30","import org.sonar.api.utils.System2;","47","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","49","  private DbClient dbClient = dbTester.getDbClient();","78","    ","79","    underTest.initialize();","80","  }","81","","82","  @Test","83","  public void initialize_creates_no_BuiltInQProfile_when_all_definitions_apply_to_non_defined_languages() {","84","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(mock(DbClient.class), new Languages(), new DummyProfileDefinition(\"foo\", \"P1\", false));","87","","88","    assertThat(underTest.get()).isEmpty();","89","  }","90","","91","  @Test","92","  public void initialize_makes_single_profile_of_a_language_default_even_if_not_flagged_as_so() {","93","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", false));","94","","95","    underTest.initialize();","96","","97","    assertThat(underTest.get())","98","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","99","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","100","  }","101","","102","  @Test","103","  public void initialize_makes_single_profile_of_a_language_default_even_if_flagged_as_so() {","104","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", true));","105","","106","    underTest.initialize();","107","","108","    assertThat(underTest.get())","109","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","110","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","111","  }","112","","113","  @Test","114","  public void initialize_makes_first_profile_of_a_language_default_when_none_flagged_as_so() {","115","    List<DummyProfileDefinition> definitions = new ArrayList<>(","116","      asList(new DummyProfileDefinition(\"foo\", \"foo1\", false), new DummyProfileDefinition(\"foo\", \"foo2\", false)));","117","    Collections.shuffle(definitions);","118","    String firstName = definitions.get(0).getName();","119","    String secondName = definitions.get(1).getName();","120","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","121","","122","    underTest.initialize();","123","","124","    assertThat(underTest.get())","125","      .extracting(BuiltInQProfile::getName, BuiltInQProfile::isDefault)","126","      .containsExactlyInAnyOrder(tuple(firstName, true), tuple(secondName, false));","127","  }","128","","129","  @Test","130","  public void initialize_fails_with_ISE_when_two_profiles_with_different_name_are_default_for_the_same_language() {","131","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE),","132","      new DummyProfileDefinition(\"foo\", \"foo1\", true), new DummyProfileDefinition(\"foo\", \"foo2\", true));","133","","134","    expectedException.expect(IllegalStateException.class);","135","    expectedException.expectMessage(\"Several Quality profiles are flagged as default for the language foo: [foo1, foo2]\");","136","","137","    underTest.initialize();","138","  }","139","","140","  @Test","141","  public void initialize_creates_profile_Sonar_Way_as_default_if_none_other_is_defined_default_for_a_given_language() {","142","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","143","      dbClient, new Languages(FOO_LANGUAGE),","144","      new DummyProfileDefinition(\"foo\", \"doh\", false), new DummyProfileDefinition(\"foo\", \"boo\", false),","145","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", false));","146","","147","    underTest.initialize();","148","","149","    assertThat(underTest.get())","150","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","151","      .filteredOn(BuiltInQProfile::isDefault)","152","      .extracting(BuiltInQProfile::getName)","153","      .containsExactly(SONAR_WAY_QP_NAME);","154","  }","155","","156","  @Test","157","  public void initialize_does_not_create_Sonar_Way_as_default_if_other_profile_is_defined_as_default() {","158","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","159","      dbClient, new Languages(FOO_LANGUAGE),","160","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", true));","161","","162","    underTest.initialize();","163","","164","    assertThat(underTest.get())","165","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","166","      .filteredOn(BuiltInQProfile::isDefault)","167","      .extracting(BuiltInQProfile::getName)","168","      .containsExactly(\"goo\");","169","  }","170","","171","  @Test","172","  public void initialize_matches_Sonar_Way_default_with_case_sensitivity() {","173","    String sonarWayInOtherCase = SONAR_WAY_QP_NAME.toUpperCase();","174","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","175","      dbClient, new Languages(FOO_LANGUAGE),","176","      new DummyProfileDefinition(\"foo\", \"goo\", false), new DummyProfileDefinition(\"foo\", sonarWayInOtherCase, false));","177","","178","    underTest.initialize();","179","","180","    assertThat(underTest.get())","181","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","182","      .filteredOn(BuiltInQProfile::isDefault)","183","      .extracting(BuiltInQProfile::getName)","184","      .containsExactly(\"goo\");","192","    private DummyProfileDefinition(String language, String name, boolean defaultProfile) {","200","      context.createBuiltInQualityProfile(name, language)","201","        .setDefault(defaultProfile).done();"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfile.java":[{"add":["24","import javax.annotation.CheckForNull;","25","import javax.annotation.Nullable;","30","import static org.sonar.api.server.profile.BuiltInQualityProfilesDefinition.BuiltInActiveRule;","31","import static org.sonar.api.server.profile.BuiltInQualityProfilesDefinition.OverriddenParam;","32","","70","    private final RuleKey ruleKey;","71","    private final String severity;","72","    private final List<OverriddenParam> params;","74","    ActiveRule(int ruleId, BuiltInActiveRule builtIn) {","75","      this(ruleId, RuleKey.of(builtIn.repoKey(), builtIn.ruleKey()), builtIn.overriddenSeverity(), builtIn.overriddenParams());","76","    }","77","","78","    ActiveRule(int ruleId, RuleKey ruleKey, @Nullable String severity, List<OverriddenParam> params) {","80","      this.ruleKey = ruleKey;","81","      this.severity = severity;","82","      this.params = params;","90","      return ruleKey;","93","    @CheckForNull","94","    public String getSeverity() {","95","      return severity;","96","    }","97","","98","    public List<OverriddenParam> getParams() {","99","      return params;"],"delete":["65","    private final BuiltInQualityProfilesDefinition.BuiltInActiveRule builtIn;","67","    ActiveRule(int ruleId, BuiltInQualityProfilesDefinition.BuiltInActiveRule builtIn) {","69","      this.builtIn = builtIn;","77","      return RuleKey.of(builtIn.repoKey(), builtIn.ruleKey());","80","    public BuiltInQualityProfilesDefinition.BuiltInActiveRule getBuiltIn() {","81","      return builtIn;","120","    Builder addRule(BuiltInQualityProfilesDefinition.BuiltInActiveRule rule, int ruleId) {","121","      this.activeRules.add(new ActiveRule(ruleId, rule));","122","      return this;","123","    }","124",""]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImpl.java":[{"add":["83","    Map<String, String> params = ar.getParams().stream()","85","    return RuleActivation.create(ar.getRuleId(), ar.getSeverity(), params);"],"delete":["83","    Map<String, String> params = ar.getBuiltIn().overriddenParams().stream()","85","    return RuleActivation.create(ar.getRuleId(), ar.getBuiltIn().overriddenSeverity(), params);"]}],"server\/sonar-webserver-auth\/src\/testFixtures\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryRule.java":[{"add":["97","      builder.addRule(new BuiltInQProfile.ActiveRule(ruleDefinition.getId(), rule));"],"delete":["97","      builder.addRule(rule, ruleDefinition.getId());"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileInsertImpl.java":[{"add":["150","    dto.setSeverity(firstNonNull(activeRule.getSeverity(), ruleDefinitionDto.getSeverityString()));","165","    Map<String, String> valuesByParamKey = activeRule.getParams()"],"delete":["150","    dto.setSeverity(firstNonNull(activeRule.getBuiltIn().overriddenSeverity(), ruleDefinitionDto.getSeverityString()));","165","    Map<String, String> valuesByParamKey = activeRule.getBuiltIn().overriddenParams()"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImpl.java":[{"add":["22","import com.google.common.collect.Multimap;","26","import java.util.HashMap;","46","import org.sonar.db.rule.DeprecatedRuleKeyDto;","103","      String.join(\"\", languagesWithoutBuiltInQProfiles));","125","    Map<RuleKey, RuleDefinitionDto> rulesByRuleKey = loadRuleDefinitionsByRuleKey();","126","    Map<String, List<BuiltInQProfile.Builder>> buildersByLanguage = rulesProfilesByLanguage","127","      .entrySet()","128","      .stream()","129","      .collect(MoreCollectors.uniqueIndex(","130","        Map.Entry::getKey,","131","        rulesProfilesByLanguageAndName -> toQualityProfileBuilders(rulesProfilesByLanguageAndName, rulesByRuleKey)));","132","    return buildersByLanguage","133","      .entrySet()","134","      .stream()","135","      .filter(BuiltInQProfileRepositoryImpl::ensureAtMostOneDeclaredDefault)","136","      .map(entry -> toQualityProfiles(entry.getValue()))","137","      .flatMap(Collection::stream)","138","      .collect(MoreCollectors.toList());","139","  }","141","  private Map<RuleKey, RuleDefinitionDto> loadRuleDefinitionsByRuleKey() {","143","      List<RuleDefinitionDto> ruleDefinitions = dbClient.ruleDao().selectAllDefinitions(dbSession);","144","      Multimap<Integer, DeprecatedRuleKeyDto> deprecatedRuleKeysByRuleId = dbClient.ruleDao().selectAllDeprecatedRuleKeys(dbSession).stream()","145","        .collect(MoreCollectors.index(DeprecatedRuleKeyDto::getRuleId));","146","      Map<RuleKey, RuleDefinitionDto> rulesByRuleKey = new HashMap<>();","147","      for (RuleDefinitionDto ruleDefinition : ruleDefinitions) {","148","        rulesByRuleKey.put(ruleDefinition.getKey(), ruleDefinition);","149","        deprecatedRuleKeysByRuleId.get(ruleDefinition.getId()).forEach(t -> rulesByRuleKey.put(RuleKey.of(t.getOldRepositoryKey(), t.getOldRuleKey()), ruleDefinition));","150","      }","151","      return rulesByRuleKey;","200","      builder.addRule(new BuiltInQProfile.ActiveRule(ruleDefinition.getId(), ruleDefinition.getKey(),","201","        builtInActiveRule.overriddenSeverity(), builtInActiveRule.overriddenParams()));"],"delete":["100","      languagesWithoutBuiltInQProfiles.stream().collect(Collectors.joining()));","124","      Map<RuleKey, RuleDefinitionDto> rulesByRuleKey = dbClient.ruleDao().selectAllDefinitions(dbSession)","125","        .stream()","126","        .collect(MoreCollectors.uniqueIndex(RuleDefinitionDto::getKey));","127","      Map<String, List<BuiltInQProfile.Builder>> buildersByLanguage = rulesProfilesByLanguage","128","        .entrySet()","129","        .stream()","130","        .collect(MoreCollectors.uniqueIndex(","131","          Map.Entry::getKey,","132","          rulesProfilesByLanguageAndName -> toQualityProfileBuilders(rulesProfilesByLanguageAndName, rulesByRuleKey)));","133","      return buildersByLanguage","134","        .entrySet()","135","        .stream()","136","        .filter(BuiltInQProfileRepositoryImpl::ensureAtMostOneDeclaredDefault)","137","        .map(entry -> toQualityProfiles(entry.getValue()))","138","        .flatMap(Collection::stream)","139","        .collect(MoreCollectors.toList());","188","      builder.addRule(builtInActiveRule, ruleDefinition.getId());"]}]}},"b727216b31e7e06559e5f38ccfab41c50245c6d4":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoaderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoader.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoaderTest.java":[{"add":["26","import java.net.HttpURLConnection;","41","import static org.mockito.ArgumentMatchers.anyInt;","62","  public void continueOnHttp404Exception() {","63","    when(wsClient.call(any(WsRequest.class))).thenThrow(new HttpException(\"\/batch\/project.protobuf?key=foo%3F\", HttpURLConnection.HTTP_NOT_FOUND, \"\"));","64","    ProjectRepositories proj = loader.load(PROJECT_KEY, null);","65","    assertThat(proj.exists()).isEqualTo(false);","66","  }","67","","68","  @Test(expected = IllegalStateException.class)","69","  public void failOnNonHttp404Exception() {","75","  @Test(expected = IllegalStateException.class)","78","    when(is.read(any(byte[].class), anyInt(), anyInt())).thenThrow(IOException.class);"],"delete":["60","  public void continueOnError() {","66","  @Test","69","    when(is.read()).thenThrow(IOException.class);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoader.java":[{"add":["78","      if (t instanceof HttpException && ((HttpException) t).code() == HttpURLConnection.HTTP_NOT_FOUND) {","79","        return false;","83","    return true;"],"delete":["30","import org.sonar.api.utils.MessageException;","79","      if (t instanceof HttpException) {","80","        HttpException http = (HttpException) t;","81","        return http.code() != HttpURLConnection.HTTP_NOT_FOUND;","82","      }","83","      if (t instanceof MessageException) {","84","        return true;","88","    return false;"]}]}},"0f906cccf16b98864d8f2dd1ae3966b60fb8ac4a":{"changes":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1152_remove_useless_indexes_on_group_roles.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":[],"delete":["543","CREATE INDEX \"GROUP_ROLES_GROUP\" ON \"GROUP_ROLES\" (\"GROUP_ID\");","544","","647","CREATE INDEX \"GROUP_ROLES_ROLE\" ON \"GROUP_ROLES\" (\"ROLE\");","648",""]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1152_remove_useless_indexes_on_group_roles.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["32","  public static final int LAST_VERSION = 1_152;"],"delete":["32","  public static final int LAST_VERSION = 1_151;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["407","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1152');"],"delete":[]}]}},"357067b1cb44bcb96e1f8c29d54a4f2da536d921":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTables.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest\/ce_tables.sql":"ADD","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74Test.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChange.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["250","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuid(rootUuid);","254","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuid(rootUuid);","258","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuid(rootUuid);","262","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuid(rootUuid);","266","    purgeMapper.deleteCeActivityByRootUuid(rootUuid);","273","    purgeMapper.deleteCeScannerContextOfCeQueueByRootUuid(rootUuid);","277","    purgeMapper.deleteCeTaskCharacteristicsOfCeQueueByRootUuid(rootUuid);","281","    purgeMapper.deleteCeTaskInputOfCeQueueByRootUuid(rootUuid);","285","    purgeMapper.deleteCeTaskMessageOfCeQueueByRootUuid(rootUuid);","289","    purgeMapper.deleteCeQueueByRootUuid(rootUuid);"],"delete":["250","    purgeMapper.deleteCeScannerContextOfCeActivityByProjectUuid(rootUuid);","254","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByProjectUuid(rootUuid);","258","    purgeMapper.deleteCeTaskInputOfCeActivityByProjectUuid(rootUuid);","262","    purgeMapper.deleteCeTaskMessageOfCeActivityByProjectUuid(rootUuid);","266","    purgeMapper.deleteCeActivityByProjectUuid(rootUuid);","273","    purgeMapper.deleteCeScannerContextOfCeQueueByProjectUuid(rootUuid);","277","    purgeMapper.deleteCeTaskCharacteristicsOfCeQueueByProjectUuid(rootUuid);","281","    purgeMapper.deleteCeTaskInputOfCeQueueByProjectUuid(rootUuid);","285","    purgeMapper.deleteCeTaskMessageOfCeQueueByProjectUuid(rootUuid);","289","    purgeMapper.deleteCeQueueByProjectUuid(rootUuid);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["314","  <delete id=\"deleteCeScannerContextOfCeActivityByRootUuid\">","317","      task_uuid in (","318","        select","319","          uuid","320","        from ce_activity","321","        where","322","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","323","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","324","      )","327","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByRootUuid\">","330","      task_uuid in (","331","        select","332","          uuid","333","        from ce_activity","334","        where","335","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","336","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","337","      )","340","  <delete id=\"deleteCeTaskInputOfCeActivityByRootUuid\">","343","      task_uuid in (","344","        select","345","          uuid","346","        from ce_activity","347","        where","348","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","349","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","350","      )","353","  <delete id=\"deleteCeTaskMessageOfCeActivityByRootUuid\">","356","      task_uuid in (","357","        select","358","          uuid","359","        from ce_activity","360","        where","361","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","362","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","363","      )","366","  <delete id=\"deleteCeActivityByRootUuid\">","367","      delete from ce_activity","368","      where","369","        component_uuid=#{rootUuid,jdbcType=VARCHAR}","370","        or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","373","  <delete id=\"deleteCeScannerContextOfCeQueueByRootUuid\">","376","      task_uuid in (","377","        select","378","          uuid","379","        from ce_queue","380","        where","381","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","382","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","383","      )","386","  <delete id=\"deleteCeTaskCharacteristicsOfCeQueueByRootUuid\">","389","      task_uuid in (","390","        select","391","          uuid","392","        from ce_queue","393","        where","394","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","395","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","396","      )","399","  <delete id=\"deleteCeTaskInputOfCeQueueByRootUuid\">","402","      task_uuid in (","403","        select","404","          uuid","405","        from ce_queue","406","        where","407","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","408","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","409","      )","412","  <delete id=\"deleteCeTaskMessageOfCeQueueByRootUuid\">","415","      task_uuid in (","416","        select","417","          uuid","418","        from ce_queue","419","        where","420","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","421","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","422","      )","425","  <delete id=\"deleteCeQueueByRootUuid\">","426","    delete from ce_queue","427","    where","428","      component_uuid=#{rootUuid,jdbcType=VARCHAR}","429","      or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}"],"delete":["314","  <delete id=\"deleteCeScannerContextOfCeActivityByProjectUuid\">","317","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","320","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByProjectUuid\">","323","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","326","  <delete id=\"deleteCeTaskInputOfCeActivityByProjectUuid\">","329","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","332","  <delete id=\"deleteCeTaskMessageOfCeActivityByProjectUuid\">","335","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","338","  <delete id=\"deleteCeActivityByProjectUuid\">","339","      delete from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR}","342","  <delete id=\"deleteCeScannerContextOfCeQueueByProjectUuid\">","345","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","348","  <delete id=\"deleteCeTaskCharacteristicsOfCeQueueByProjectUuid\">","351","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","354","  <delete id=\"deleteCeTaskInputOfCeQueueByProjectUuid\">","357","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","360","  <delete id=\"deleteCeTaskMessageOfCeQueueByProjectUuid\">","363","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","366","  <delete id=\"deleteCeQueueByProjectUuid\">","367","    delete from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR}"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTables.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest\/ce_tables.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["92","  void deleteCeTaskCharacteristicsOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","94","  void deleteCeTaskInputOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","96","  void deleteCeScannerContextOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","98","  void deleteCeTaskMessageOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","100","  void deleteCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","102","  void deleteCeScannerContextOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","104","  void deleteCeTaskCharacteristicsOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","106","  void deleteCeTaskInputOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","108","  void deleteCeTaskMessageOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","110","  void deleteCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);"],"delete":["92","  void deleteCeTaskCharacteristicsOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","94","  void deleteCeTaskInputOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","96","  void deleteCeTaskMessageOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","98","  void deleteCeScannerContextOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","100","  void deleteCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","102","  void deleteCeScannerContextOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","104","  void deleteCeTaskCharacteristicsOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","106","  void deleteCeTaskInputOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","108","  void deleteCeTaskMessageOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","110","  void deleteCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74Test.java":[{"add":["37","    verifyMigrationCount(underTest, 17);"],"delete":["37","    verifyMigrationCount(underTest, 16);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["76","import static org.sonar.db.component.ComponentTesting.newBranchDto;","141","    assertThat(uuidsIn(\"projects\")).containsOnly(project.uuid(), longBranch.uuid(), recentShortBranch.uuid());","167","    assertThat(uuidsIn(\"projects\")).containsOnly(project.uuid(), longBranch.uuid(), recentPullRequest.uuid());","333","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","334","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","335","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","336","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","337","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","339","    CeActivityDto projectTask = insertCeActivity(project);","340","    insertCeTaskInput(projectTask.getUuid());","341","    CeActivityDto branchTask = insertCeActivity(branch);","342","    insertCeTaskInput(branchTask.getUuid());","343","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","344","    insertCeTaskInput(anotherBranchTask.getUuid());","345","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","346","    insertCeTaskInput(anotherProjectTask.getUuid());","350","    underTest.deleteProject(dbSession, branch.uuid());","353","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","354","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","355","","356","    underTest.deleteProject(dbSession, project.uuid());","357","    dbSession.commit();","358","","359","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","360","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","365","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","366","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","367","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","368","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","369","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","371","    CeActivityDto projectTask = insertCeActivity(project);","372","    insertCeScannerContext(projectTask.getUuid());","373","    CeActivityDto branchTask = insertCeActivity(branch);","374","    insertCeScannerContext(branchTask.getUuid());","375","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","376","    insertCeScannerContext(anotherBranchTask.getUuid());","377","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","378","    insertCeScannerContext(anotherProjectTask.getUuid());","382","    underTest.deleteProject(dbSession, branch.uuid());","385","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","386","    assertThat(taskUuidsIn(\"ce_scanner_context\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","387","","388","    underTest.deleteProject(dbSession, project.uuid());","389","    dbSession.commit();","390","","391","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","392","    assertThat(taskUuidsIn(\"ce_scanner_context\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","397","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","398","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","399","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","400","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","401","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","403","    CeActivityDto projectTask = insertCeActivity(project);","404","    insertCeTaskCharacteristics(projectTask.getUuid(), 3);","405","    CeActivityDto branchTask = insertCeActivity(branch);","406","    insertCeTaskCharacteristics(branchTask.getUuid(), 2);","407","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","408","    insertCeTaskCharacteristics(anotherBranchTask.getUuid(), 6);","409","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","410","    insertCeTaskCharacteristics(anotherProjectTask.getUuid(), 2);","414","    underTest.deleteProject(dbSession, branch.uuid());","417","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","418","    assertThat(taskUuidsIn(\"ce_task_characteristics\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","419","","420","    underTest.deleteProject(dbSession, project.uuid());","421","    dbSession.commit();","422","","423","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","424","    assertThat(taskUuidsIn(\"ce_task_characteristics\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","425","  }","426","","427","  @Test","428","  public void delete_row_in_ce_task_message_referring_to_a_row_in_ce_activity_when_deleting_project() {","429","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","430","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","431","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","432","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","433","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","434","","435","    CeActivityDto projectTask = insertCeActivity(project);","436","    insertCeTaskMessages(projectTask.getUuid(), 3);","437","    CeActivityDto branchTask = insertCeActivity(branch);","438","    insertCeTaskMessages(branchTask.getUuid(), 2);","439","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","440","    insertCeTaskMessages(anotherBranchTask.getUuid(), 6);","441","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","442","    insertCeTaskMessages(anotherProjectTask.getUuid(), 2);","443","    insertCeTaskMessages(\"non existing task\", 5);","444","    dbSession.commit();","445","","446","    underTest.deleteProject(dbSession, branch.uuid());","447","    dbSession.commit();","448","","449","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","450","    assertThat(taskUuidsIn(\"ce_task_message\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","451","","452","    underTest.deleteProject(dbSession, project.uuid());","453","    dbSession.commit();","454","","455","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","456","    assertThat(taskUuidsIn(\"ce_task_message\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","480","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","481","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","482","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","483","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","484","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","486","    CeQueueDto projectTask = insertCeQueue(project);","487","    insertCeTaskInput(projectTask.getUuid());","488","    CeQueueDto branchTask = insertCeQueue(branch);","489","    insertCeTaskInput(branchTask.getUuid());","490","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","491","    insertCeTaskInput(anotherBranchTask.getUuid());","492","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","493","    insertCeTaskInput(anotherProjectTask.getUuid());","497","    underTest.deleteProject(dbSession, branch.uuid());","500","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","501","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","502","","503","    underTest.deleteProject(dbSession, project.uuid());","504","    dbSession.commit();","505","","506","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","507","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","512","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","513","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","514","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","515","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","516","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","518","    CeQueueDto projectTask = insertCeQueue(project);","519","    insertCeScannerContext(projectTask.getUuid());","520","    CeQueueDto branchTask = insertCeQueue(branch);","521","    insertCeScannerContext(branchTask.getUuid());","522","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","523","    insertCeScannerContext(anotherBranchTask.getUuid());","524","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","525","    insertCeScannerContext(anotherProjectTask.getUuid());","529","    underTest.deleteProject(dbSession, branch.uuid());","532","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","533","    assertThat(taskUuidsIn(\"ce_scanner_context\"))","534","      .containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","535","","536","    underTest.deleteProject(dbSession, project.uuid());","537","    dbSession.commit();","538","","539","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","540","    assertThat(taskUuidsIn(\"ce_scanner_context\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","545","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","546","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","547","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","548","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","549","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","551","    CeQueueDto projectTask = insertCeQueue(project);","552","    insertCeTaskCharacteristics(projectTask.getUuid(), 3);","553","    CeQueueDto branchTask = insertCeQueue(branch);","554","    insertCeTaskCharacteristics(branchTask.getUuid(), 1);","555","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","556","    insertCeTaskCharacteristics(anotherBranchTask.getUuid(), 5);","557","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","558","    insertCeTaskCharacteristics(anotherProjectTask.getUuid(), 2);","562","    underTest.deleteProject(dbSession, branch.uuid());","565","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","566","    assertThat(taskUuidsIn(\"ce_task_characteristics\"))","567","      .containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","568","","569","    underTest.deleteProject(dbSession, project.uuid());","570","    dbSession.commit();","571","","572","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","573","    assertThat(taskUuidsIn(\"ce_task_characteristics\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","578","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","579","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","580","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","581","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","582","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","584","    CeQueueDto projectTask = insertCeQueue(project);","585","    insertCeTaskMessages(projectTask.getUuid(), 3);","586","    CeQueueDto branchTask = insertCeQueue(branch);","587","    insertCeTaskMessages(branchTask.getUuid(), 1);","588","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","589","    insertCeTaskMessages(anotherBranchTask.getUuid(), 5);","590","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","591","    insertCeTaskMessages(anotherProjectTask.getUuid(), 2);","595","    underTest.deleteProject(dbSession, branch.uuid());","598","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","599","    assertThat(taskUuidsIn(\"ce_task_message\"))","600","      .containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","602","    underTest.deleteProject(dbSession, project.uuid());","605","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","606","    assertThat(taskUuidsIn(\"ce_task_message\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","847","    assertThat(uuidsIn(\"projects\"))","873","    assertThat(uuidsIn(\"projects\"))","889","    assertThat(uuidsIn(\"projects\"))","893","    assertThat(uuidsIn(\"projects\"))","913","    assertThat(uuidsIn(\"projects\"))","918","    assertThat(uuidsIn(\"projects\"))","1093","  private Stream<String> uuidsIn(String tableName) {","1094","    return db.select(\"select uuid as \\\"UUID\\\" from \" + tableName)","1095","      .stream()","1096","      .map(row -> (String) row.get(\"UUID\"));","1097","  }","1098","","1099","  private Stream<String> taskUuidsIn(String tableName) {","1100","    return db.select(\"select task_uuid as \\\"UUID\\\" from \" + tableName)","1101","      .stream()","1102","      .map(row -> (String) row.get(\"UUID\"));","1103","  }","1104",""],"delete":["140","    assertThat(getUuidsInTableProjects()).containsOnly(project.uuid(), longBranch.uuid(), recentShortBranch.uuid());","166","    assertThat(getUuidsInTableProjects()).containsOnly(project.uuid(), longBranch.uuid(), recentPullRequest.uuid());","299","  @Test","300","  public void delete_branch_and_associated_data() {","301","    ComponentDto project = db.components().insertMainBranch();","302","    ComponentDto branch = db.components().insertProjectBranch(project);","303","","304","    CeQueueDto projectCeQueue = insertCeQueue(project);","305","    CeActivityDto projectCeActivity = insertCeActivity(project);","306","    CeQueueDto branchCeQueue = insertCeQueue(branch);","307","    CeActivityDto branchCeActivity = insertCeActivity(branch);","308","    Stream.of(projectCeQueue.getUuid(), projectCeActivity.getUuid(), branchCeQueue.getUuid(), branchCeActivity.getUuid())","309","      .forEach(taskUuid -> {","310","        insertCeScannerContext(taskUuid);","311","        insertCeTaskCharacteristics(taskUuid, 2);","312","        insertCeTaskMessages(taskUuid, 3);","313","        insertCeTaskInput(taskUuid);","314","      });","315","","316","    underTest.deleteBranch(dbSession, branch.uuid());","317","    dbSession.commit();","318","","319","    assertThat(uuidsOfTable(\"projects\")).containsOnly(project.uuid());","320","    assertThat(uuidsOfTable(\"project_branches\")).containsOnly(project.uuid());","321","    \/\/ deleteBranch is bugged and does not delete from ce_* tables (see SONAR-10642)","322","    assertThat(uuidsOfTable(\"ce_queue\"))","323","      .containsOnly(projectCeQueue.getUuid(), branchCeQueue.getUuid())","324","      .hasSize(2);","325","    assertThat(uuidsOfTable(\"ce_activity\"))","326","      .containsOnly(projectCeActivity.getUuid(), branchCeActivity.getUuid())","327","      .hasSize(2);","328","    String[] allTaskUuids = {projectCeQueue.getUuid(), projectCeActivity.getUuid(), branchCeQueue.getUuid(), branchCeActivity.getUuid()};","329","    assertThat(taskUuidsOfTable(\"ce_scanner_context\"))","330","      .containsOnly(allTaskUuids)","331","      .hasSize(4);","332","    assertThat(taskUuidsOfTable(\"ce_task_characteristics\"))","333","      .containsOnly(allTaskUuids)","334","      .hasSize(8);","335","    assertThat(taskUuidsOfTable(\"ce_task_message\"))","336","      .containsOnly(allTaskUuids)","337","      .hasSize(12);","338","    assertThat(taskUuidsOfTable(\"ce_task_input\"))","339","      .containsOnly(allTaskUuids)","340","      .hasSize(4);","341","  }","342","","376","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","377","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","378","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","380","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","381","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","382","    insertCeTaskInput(toBeDeleted.getUuid());","383","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","384","    insertCeTaskInput(toNotDelete.getUuid());","388","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","391","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","392","      .extracting(row -> (String) row.get(\"UUID\"))","393","      .containsOnly(toNotDelete.getUuid());","394","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_input\"))","395","      .extracting(row -> (String) row.get(\"UUID\"))","396","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","401","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","402","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","403","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","405","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","406","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","407","    insertCeScannerContext(toBeDeleted.getUuid());","408","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","409","    insertCeScannerContext(toNotDelete.getUuid());","413","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","416","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","417","      .extracting(row -> (String) row.get(\"UUID\"))","418","      .containsOnly(toNotDelete.getUuid());","419","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_scanner_context\"))","420","      .extracting(row -> (String) row.get(\"UUID\"))","421","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","426","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","427","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","428","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","430","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","431","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","432","    insertCeTaskCharacteristics(toBeDeleted.getUuid(), 3);","433","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","434","    insertCeTaskCharacteristics(toNotDelete.getUuid(), 2);","438","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","441","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","442","      .extracting(row -> (String) row.get(\"UUID\"))","443","      .containsOnly(toNotDelete.getUuid());","444","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_characteristics\"))","445","      .extracting(row -> (String) row.get(\"UUID\"))","446","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","470","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","471","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","472","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","474","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","475","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","476","    insertCeTaskInput(toBeDeleted.getUuid());","477","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","478","    insertCeTaskInput(toNotDelete.getUuid());","482","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","485","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","486","      .extracting(row -> (String) row.get(\"UUID\"))","487","      .containsOnly(toNotDelete.getUuid());","488","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_input\"))","489","      .extracting(row -> (String) row.get(\"UUID\"))","490","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","495","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","496","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","497","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","499","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","500","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","501","    insertCeScannerContext(toBeDeleted.getUuid());","502","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","503","    insertCeScannerContext(toNotDelete.getUuid());","507","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","510","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","511","      .extracting(row -> (String) row.get(\"UUID\"))","512","      .containsOnly(toNotDelete.getUuid());","513","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_scanner_context\"))","514","      .extracting(row -> (String) row.get(\"UUID\"))","515","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","520","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","521","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","522","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","524","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","525","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","526","    insertCeTaskCharacteristics(toBeDeleted.getUuid(), 3);","527","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","528","    insertCeTaskCharacteristics(toNotDelete.getUuid(), 2);","532","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","535","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","536","      .extracting(row -> (String) row.get(\"UUID\"))","537","      .containsOnly(toNotDelete.getUuid());","538","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_characteristics\"))","539","      .extracting(row -> (String) row.get(\"UUID\"))","540","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","545","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","546","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","547","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","549","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","550","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","551","    insertCeTaskMessages(toBeDeleted.getUuid(), 3);","552","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","553","    insertCeTaskMessages(toNotDelete.getUuid(), 2);","557","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","560","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","561","      .extracting(row -> (String) row.get(\"UUID\"))","562","      .containsOnly(toNotDelete.getUuid());","563","    assertThat(db.select(\"select task_uuid as \\\"TASK_UUID\\\" from ce_task_message\"))","564","      .extracting(row -> (String) row.get(\"TASK_UUID\"))","565","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","566","  }","568","  @Test","569","  public void delete_row_in_ce_task_message_referring_to_a_row_in_ce_activity_when_deleting_project() {","570","    ComponentDto projectToBeDeleted = ComponentTesting.newPublicProjectDto(db.getDefaultOrganization());","571","    ComponentDto anotherLivingProject = ComponentTesting.newPublicProjectDto(db.getDefaultOrganization());","572","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","573","","574","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","575","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","576","    insertCeTaskMessages(toBeDeleted.getUuid(), 3);","577","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","578","    insertCeTaskMessages(toNotDelete.getUuid(), 2);","579","    insertCeTaskMessages(\"non existing task\", 5);","582","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","583","    dbSession.commit();","584","","585","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","586","      .extracting(row -> (String) row.get(\"UUID\"))","587","      .containsOnly(toNotDelete.getUuid());","588","    assertThat(db.select(\"select task_uuid as \\\"TASK_UUID\\\" from ce_task_message\"))","589","      .extracting(row -> (String) row.get(\"TASK_UUID\"))","590","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","831","    assertThat(getUuidsInTableProjects())","857","    assertThat(getUuidsInTableProjects())","861","  private Stream<String> getUuidsInTableProjects() {","862","    return db.select(\"select uuid as \\\"UUID\\\" from projects\").stream().map(row -> (String) row.get(\"UUID\"));","863","  }","864","","877","    assertThat(getUuidsInTableProjects())","881","    assertThat(getUuidsInTableProjects())","901","    assertThat(getUuidsInTableProjects())","906","    assertThat(getUuidsInTableProjects())"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74.java":[{"add":["45","      .add(2323, \"Clean orphans from deleted branches and PRs in CE_* tables\", CleanOrphanRowsInCeTables.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChange.java":[{"add":["23","import org.sonar.api.config.Configuration;","65","  protected static boolean isSonarCloud(Configuration configuration) {","66","    return configuration.getBoolean(\"sonar.sonarcloud.enabled\").orElse(false);","67","  }","68",""],"delete":[]}]}}}