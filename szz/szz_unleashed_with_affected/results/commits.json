{"100653f76e52f1555ce9424924031acdeb941888":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":[{"add":["116","","117","    long executionTimeInMs = 0L;","123","      executionTimeInMs = updateExecutionFields(activityDto);","127","    } finally {","128","      updateQueueStatus(status, executionTimeInMs);","129","    }","130","  }","131","","132","  private void updateQueueStatus(CeActivityDto.Status status, long executionTimeInMs) {","133","    if (status == CeActivityDto.Status.SUCCESS) {","134","      queueStatus.addSuccess(executionTimeInMs);","135","    } else {","136","      queueStatus.addError(executionTimeInMs);","179","  private long updateExecutionFields(CeActivityDto activityDto) {","182","      return 0L;","184","    long now = system2.now();","185","    long executionTimeInMs = now - startedAt;","186","    activityDto.setExecutedAt(now);","188","    return executionTimeInMs;","198","        updateExecutionFields(activityDto);"],"delete":["121","      updateQueueStatus(status, activityDto);","167","  private void updateQueueStatus(CeActivityDto.Status status, CeActivityDto activityDto) {","170","      return;","172","    activityDto.setExecutedAt(system2.now());","173","    long executionTimeInMs = activityDto.getExecutedAt() - startedAt;","175","    if (status == CeActivityDto.Status.SUCCESS) {","176","      queueStatus.addSuccess(executionTimeInMs);","177","    } else {","178","      queueStatus.addError(executionTimeInMs);","179","    }","189","        updateQueueStatus(CeActivityDto.Status.CANCELED, activityDto);"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":[{"add":["56","import static org.assertj.core.api.Assertions.fail;","57","import static org.mockito.ArgumentMatchers.anyLong;","59","import static org.mockito.Mockito.verify;","60","import static org.mockito.Mockito.verifyZeroInteractions;","251","  @Test","252","  public void remove_updates_queueStatus_success_even_if_task_does_not_exist_in_DB() {","253","    CEQueueStatus queueStatus = mock(CEQueueStatus.class);","254","","255","    CeTask task = submit(CeTaskTypes.REPORT, \"PROJECT_1\");","256","    db.getDbClient().ceQueueDao().deleteByUuid(db.getSession(), task.getUuid());","257","    db.commit();","258","","259","    InternalCeQueueImpl underTest = new InternalCeQueueImpl(system2, db.getDbClient(), null, queueStatus, null, null);","260","","261","    try {","262","      underTest.remove(task, CeActivityDto.Status.SUCCESS, null, null);","263","      fail(\"remove should have thrown a IllegalStateException\");","264","    } catch (IllegalStateException e) {","265","      verify(queueStatus).addSuccess(anyLong());","266","    }","267","  }","268","","269","  @Test","270","  public void remove_updates_queueStatus_failure_even_if_task_does_not_exist_in_DB() {","271","    CEQueueStatus queueStatusMock = mock(CEQueueStatus.class);","272","","273","    CeTask task = submit(CeTaskTypes.REPORT, \"PROJECT_1\");","274","    db.getDbClient().ceQueueDao().deleteByUuid(db.getSession(), task.getUuid());","275","    db.commit();","276","    InternalCeQueueImpl underTest = new InternalCeQueueImpl(system2, db.getDbClient(), null, queueStatusMock, null, null);","277","","278","    try {","279","      underTest.remove(task, CeActivityDto.Status.FAILED, null, null);","280","      fail(\"remove should have thrown a IllegalStateException\");","281","    } catch (IllegalStateException e) {","282","      verify(queueStatusMock).addError(anyLong());","283","    }","284","  }","285","","286","  @Test","287","  public void cancelWornOuts_does_not_update_queueStatus() {","288","    CEQueueStatus queueStatusMock = mock(CEQueueStatus.class);","289","","290","    CeTask task = submit(CeTaskTypes.REPORT, \"PROJECT_1\");","291","    db.executeUpdateSql(\"update ce_queue set status = 'PENDING', started_at = 123 where uuid = '\" + task.getUuid() + \"'\");","292","    db.commit();","293","    InternalCeQueueImpl underTest = new InternalCeQueueImpl(system2, db.getDbClient(), null, queueStatusMock, null, null);","294","","295","    underTest.cancelWornOuts();","296","","297","    assertThat(db.getDbClient().ceActivityDao().selectByUuid(db.getSession(), task.getUuid())).isPresent();","298","    verifyZeroInteractions(queueStatusMock);","299","  }","300",""],"delete":[]}]}},"e5a7b62cb7ceef25cf656d9423e4a4b46fec8afa":{"changes":{"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/util\/ProgressReportTest.java":"ADD","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/util\/ProgressReport.java":"MODIFY"},"diff":{"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/util\/ProgressReportTest.java":[{"add":[],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/util\/ProgressReport.java":[{"add":["36","    thread.setDaemon(true);","46","        break;"],"delete":["45","        thread.interrupt();"]}]}},"7fc68e34923e3fe08b1b0dc81f7def4ab76d2b1e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/web\/SecurityServletFilter.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/settings\/DeprecatedPropertiesWsTest.java":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/web.xml":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/web\/SecurityServletFilter.java":[{"add":[],"delete":["35"," * The list of headers is mirrored in environment.rb as a workaround to Rack swallowing the headers.."]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":[{"add":["377","  public void persist_global_setting_with_non_ascii_characters() {","378","    callForGlobalSetting(\"my.key\", \"ﬁ±∞\u2026\");","379","","380","    assertGlobalSetting(\"my.key\", \"ﬁ±∞\u2026\");","381","    assertThat(settingsChangeNotifier.wasCalled).isTrue();","382","  }","383","","384","  @Test"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":[{"add":["725","  public void return_simple_value_with_non_ascii_characters() throws Exception {","726","    setAuthenticatedUser();","727","    definitions.addComponent(PropertyDefinition","728","      .builder(\"foo\")","729","      .build());","730","    propertyDb.insertProperties(newGlobalPropertyDto().setKey(\"foo\").setValue(\"ﬁ±∞\u2026\"));","731","","732","    ValuesWsResponse result = executeRequestForGlobalProperties(\"foo\");","733","","734","    assertThat(result.getSettings(0).getValue()).isEqualTo(\"ﬁ±∞\u2026\");","735","  }","736","","737","  @Test"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/settings\/DeprecatedPropertiesWsTest.java":[{"add":["355","  private static Response call(Request.Builder requestBuilder) {"],"delete":["355","  public static Response call(Request.Builder requestBuilder) {"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/web.xml":[{"add":["18","    <filter-name>SetCharacterEncodingFilter<\/filter-name>","19","    <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter<\/filter-class>","20","    <init-param>","21","      <param-name>encoding<\/param-name>","22","      <param-value>UTF-8<\/param-value>","23","    <\/init-param>","24","  <\/filter>","25","  <filter>","48","    <filter-name>SetCharacterEncodingFilter<\/filter-name>","49","    <url-pattern>\/*<\/url-pattern>","50","  <\/filter-mapping>","51","  <filter-mapping>"],"delete":[]}]}},"52d805b3ab00fb499546f79fba0a852e893fea79":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueTagsTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/TagsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["597","  public List<String> listTags(@Nullable OrganizationDto organization, @Nullable String textQuery, int size) {","604","    BoolQueryBuilder esQuery = boolQuery()","605","      .filter(createAuthorizationFilter(true));","606","    if (organization != null) {","607","      esQuery.filter(termQuery(FIELD_ISSUE_ORGANIZATION_UUID, organization.getUuid()));","608","    }","609","","612","      .setQuery(esQuery)"],"delete":["597","  public List<String> listTags(OrganizationDto organization, @Nullable String textQuery, int size) {","606","      .setQuery(boolQuery()","607","        .filter(createAuthorizationFilter(true))","608","        .filter(termQuery(FIELD_ISSUE_ORGANIZATION_UUID, organization.getUuid())))"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["22","import com.google.common.collect.ImmutableList;","550","  public List<String> listTags(@Nullable OrganizationDto organization, @Nullable String query, int size) {","557","    ImmutableList.Builder<String> scopes = ImmutableList.<String>builder()","558","      .add(RuleExtensionScope.system().getScope());","559","    if (organization != null) {","560","      scopes.add(RuleExtensionScope.organization(organization).getScope());","561","    }","564","      scopes.build().toArray(new String[0]));"],"delete":["549","  public List<String> listTags(OrganizationDto organization, @Nullable String query, int size) {","558","      RuleExtensionScope.system().getScope(),","559","      RuleExtensionScope.organization(organization).getScope());"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueTagsTest.java":[{"add":["31","import org.sonarqube.tests.Category6Suite;","33","import org.sonarqube.ws.Projects.CreateWsResponse;","41","import static java.util.Collections.singletonList;","77","    analyzeProject(organization.getKey(), projectKey);","84","    String defaultOrganization = tester.organizations().getDefaultOrganization().getKey();","110","  @Test","111","  public void tags_across_organizations() {","112","    Organization organization = tester.organizations().generate();","113","    Organization anotherOrganization = tester.organizations().generate();","114","    restoreProfile(orchestrator, IssueTagsTest.class.getResource(\"\/issue\/one-issue-per-line-profile.xml\"), organization.getKey());","115","    restoreProfile(orchestrator, IssueTagsTest.class.getResource(\"\/issue\/one-issue-per-line-profile.xml\"), anotherOrganization.getKey());","116","    CreateWsResponse.Project project = tester.projects().provision(organization);","117","    CreateWsResponse.Project anotherProject = tester.projects().provision(anotherOrganization);","118","    analyzeProject(organization.getKey(), project.getKey());","119","    analyzeProject(anotherOrganization.getKey(), anotherProject.getKey());","120","    String issue = tester.wsClient().issues().search(new SearchRequest().setProjectKeys(singletonList(project.getKey()))).getIssues(0).getKey();","121","    String anotherIssue = tester.wsClient().issues().search(new SearchRequest().setProjectKeys(singletonList(anotherProject.getKey()))).getIssues(0).getKey();","122","    tester.wsClient().issues().setTags(issue, \"first-tag\");","123","    tester.wsClient().issues().setTags(anotherIssue, \"another-tag\");","124","","125","    assertThat(tester.wsClient().issues().getTags(null).content()).contains(\"first-tag\", \"another-tag\");","126","  }","127","","152","  private void analyzeProject(String organizationKey, String projectKey) {","155","      \"sonar.organization\", organizationKey,"],"delete":["23","import org.sonarqube.tests.Category6Suite;","75","    analyzeProject(projectKey);","82","    String defaultOrganization = null;","132","  private void analyzeProject(String projectKey) {","135","      \"sonar.organization\", organization.getKey(),"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":[{"add":["71","  private WsActionTester ws = new WsActionTester(new TagsAction(issueIndex, ruleIndex, dbTester.getDbClient()));","174","  public void without_organization_parameter_is_cross_organization() {","175","    userSession.logIn();","176","    OrganizationDto organization = dbTester.organizations().insert();","177","    OrganizationDto anotherOrganization = dbTester.organizations().insert();","178","    insertIssueWithBrowsePermission(organization, insertRuleWithoutTags(), \"tag1\");","179","    insertIssueWithBrowsePermission(anotherOrganization, insertRuleWithoutTags(), \"tag2\");","180","","181","    String result = ws.newRequest().execute().getInput();","182","","183","    assertJson(result).isSimilarTo(\"{\\\"tags\\\":[\\\"tag1\\\", \\\"tag2\\\"]}\");","184","  }","185","","186","  @Test","237","  private void insertIssueWithBrowsePermission(OrganizationDto organization, RuleDefinitionDto rule, String... tags) {","238","    IssueDto issue = insertIssueWithoutBrowsePermission(organization, rule, tags);","239","    grantAccess(issue);","240","  }","241","","248","    return insertIssueWithoutBrowsePermission(organization, rule, tags);","249","  }","250","","251","  private IssueDto insertIssueWithoutBrowsePermission(OrganizationDto organization, RuleDefinitionDto rule, String... tags) {"],"delete":["39","import org.sonar.server.organization.TestDefaultOrganizationProvider;","72","  private WsActionTester ws = new WsActionTester(new TagsAction(issueIndex, ruleIndex, dbTester.getDbClient(), TestDefaultOrganizationProvider.from(dbTester)));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":[{"add":["1202","    OrganizationDto anotherOrg = db.organizations().insert();","1206","      newDoc(\"I42\", file).setOrganizationUuid(anotherOrg.getUuid()).setRuleKey(r1.getKey().toString()).setTags(of(\"another\")),","1218","    assertThat(underTest.listTags(null, null, 100)).containsExactlyInAnyOrder(\"another\", \"convention\", \"java8\", \"bug\");"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/TagsAction.java":[{"add":["27","import javax.annotation.CheckForNull;","41","import static org.sonar.server.ws.WsUtils.checkFoundWithOptional;","54","  public TagsAction(IssueIndex issueIndex, RuleIndex ruleIndex, DbClient dbClient) {","94","  private List<String> listTags(@Nullable OrganizationDto organization, @Nullable String textQuery, int pageSize) {","105","  @CheckForNull","108","      return organizationKey == null ? null","109","        : checkFoundWithOptional(dbClient.organizationDao().selectByKey(dbSession, organizationKey), \"No organization with key '%s'\", organizationKey);"],"delete":["25","import java.util.Optional;","39","import org.sonar.server.organization.DefaultOrganizationProvider;","41","import org.sonar.server.ws.WsUtils;","54","  private final DefaultOrganizationProvider defaultOrganizationProvider;","56","  public TagsAction(IssueIndex issueIndex, RuleIndex ruleIndex, DbClient dbClient, DefaultOrganizationProvider defaultOrganizationProvider) {","60","    this.defaultOrganizationProvider = defaultOrganizationProvider;","97","  private List<String> listTags(OrganizationDto organization, @Nullable String textQuery, int pageSize) {","110","      String organizationOrDefaultKey = Optional.ofNullable(organizationKey)","111","        .orElseGet(defaultOrganizationProvider.get()::getKey);","112","      return WsUtils.checkFoundWithOptional(","113","        dbClient.organizationDao().selectByKey(dbSession, organizationOrDefaultKey),","114","        \"No organization with key '%s'\", organizationOrDefaultKey);"]}]}},"729d76da74339dd267cfad768e7b72ec805e6c51":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/measures-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/measures.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/measures-test.js":[{"add":["5","","7","  var HOURS_IN_DAY = 8,","8","      ONE_MINUTE = 1,","9","      ONE_HOUR = ONE_MINUTE * 60,","10","      ONE_DAY = HOURS_IN_DAY * ONE_HOUR;","96","      expect(formatMeasure(40 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('40min');","97","      expect(formatMeasure(58 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('1h');","100","      expect(formatMeasure(ONE_HOUR + 55 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('2h');","101","      expect(formatMeasure(3 * ONE_DAY + 6 * ONE_HOUR, 'SHORT_WORK_DUR')).to.equal('4d');","102","      expect(formatMeasure(7 * ONE_HOUR + 59 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('1d');","209","      expect(formatMeasureVariation(30 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('+30min');","210","      expect(formatMeasureVariation(58 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('+1h');","213","      expect(formatMeasureVariation(ONE_HOUR + 55 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('+2h');","214","      expect(formatMeasureVariation(3 * ONE_DAY + 6 * ONE_HOUR, 'SHORT_WORK_DUR')).to.equal('+4d');","215","      expect(formatMeasureVariation(7 * ONE_HOUR + 59 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('+1d');"],"delete":["0","\/*","1"," * SonarQube","2"," * Copyright (C) 2009-2016 SonarSource SA","3"," * mailto:contact AT sonarsource DOT com","4"," *","5"," * This program is free software; you can redistribute it and\/or","6"," * modify it under the terms of the GNU Lesser General Public","7"," * License as published by the Free Software Foundation; either","8"," * version 3 of the License, or (at your option) any later version.","9"," *","10"," * This program is distributed in the hope that it will be useful,","11"," * but WITHOUT ANY WARRANTY; without even the implied warranty of","12"," * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU","13"," * Lesser General Public License for more details.","14"," *","15"," * You should have received a copy of the GNU Lesser General Public License","16"," * along with this program; if not, write to the Free Software Foundation,","17"," * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.","18"," *\/","25","  const HOURS_IN_DAY = 8;","26","  const ONE_MINUTE = 1;","27","  const ONE_HOUR = ONE_MINUTE * 60;","28","  const ONE_DAY = HOURS_IN_DAY * ONE_HOUR;","113","      expect(formatMeasure(40 * ONE_MINUTE, 'SHORT_WORK_DUR')).to.equal('40min');"]}],"server\/sonar-web\/src\/main\/js\/helpers\/measures.js":[{"add":["268","function shouldDisplayDaysInShortFormat(days) {","269","  return days > 0.9;","270","}","271","","276","function shouldDisplayHoursInShortFormat (hours) {","277","  return hours > 0.9;","307","  if (shouldDisplayDaysInShortFormat(days)) {","308","    const roundedDays = Math.round(days);","309","    const formattedDays = formatMeasure(isNegative ? -1 * roundedDays : roundedDays, 'SHORT_INT');","310","    return translateWithParameters('work_duration.x_days', formattedDays);","312","","313","  if (shouldDisplayHoursInShortFormat(hours)) {","314","    const roundedHours = Math.round(hours);","315","    const formattedHours = formatMeasure(isNegative ? -1 * roundedHours : roundedHours, 'SHORT_INT');","316","    return translateWithParameters('work_duration.x_hours', formattedHours);","318","","319","  const formattedMinutes = formatMeasure(isNegative ? -1 * minutes : minutes, 'SHORT_INT');","320","  return translateWithParameters('work_duration.x_minutes', formattedMinutes);","345","  const days = absValue \/ hoursInDay \/ 60;","346","  let remainingValue = absValue - Math.floor(days) * hoursInDay * 60;","347","  const hours = remainingValue \/ 60;","348","  remainingValue -= Math.floor(hours) * 60;"],"delete":["272","function shouldDisplayHoursInShortFormat (days, hours) {","273","  return hours > 0 && days === 0;","280","function shouldDisplayMinutesInShortFormat (days, hours, minutes) {","281","  return minutes > 0 && hours === 0 && days === 0;","282","}","283","","307","  let formatted = '';","308","  if (shouldDisplayDays(days)) {","309","    const formattedDays = formatMeasure(isNegative ? -1 * days : days, 'SHORT_INT');","310","    formatted += translateWithParameters('work_duration.x_days', formattedDays);","312","  if (shouldDisplayHoursInShortFormat(days, hours)) {","313","    formatted = addSpaceIfNeeded(formatted);","314","    formatted += translateWithParameters('work_duration.x_hours',","315","        isNegative && formatted.length === 0 ? -1 * hours : hours);","317","  if (shouldDisplayMinutesInShortFormat(days, hours, minutes)) {","318","    formatted = addSpaceIfNeeded(formatted);","319","    formatted += translateWithParameters('work_duration.x_minutes',","320","        isNegative && formatted.length === 0 ? -1 * minutes : minutes);","321","  }","322","  return formatted;","347","  const days = Math.floor(absValue \/ hoursInDay \/ 60);","348","  let remainingValue = absValue - days * hoursInDay * 60;","349","  const hours = Math.floor(remainingValue \/ 60);","350","  remainingValue -= hours * 60;"]}]}},"c3256f0716a2352d7a24165a490cb82afdb25ec0":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/cookies.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/SearchSelect-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/cookies.ts":[{"add":["19","import { memoize } from 'lodash';","21","const parseCookies = memoize((documentCookie: string): { [key: string]: string } => {","22","  const rawCookies = documentCookie.split('; ');","23","  const cookies: { [key: string]: string } = {};","28","  return cookies;","29","});","31","export function getCookie(name: string): string | undefined {","32","  return parseCookies(document.cookie)[name];"],"delete":["19","let cookies: { [key: string]: string };","21","export function getCookie(name: string): string | undefined {","22","  if (cookies) {","23","    return cookies[name];","24","  }","25","","26","  const rawCookies = document.cookie.split('; ');","27","  cookies = {};","28","","34","  return cookies[name];"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/SearchSelect-test.js":[{"add":["23","jest.mock('lodash', () => {","24","  const lodash = require.requireActual('lodash');","25","  lodash.debounce = jest.fn(fn => fn);","26","  return lodash;","27","});"],"delete":["19","\/\/ @flow","24","jest.mock('lodash', () => ({","25","  debounce: fn => fn","26","}));"]}]}},"8d3f85ca3272be3b99826c86d24dd4ca54ae85ed":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v60\/PopulateAnalysisUuidOnMeasuresTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v60\/PopulateAnalysisUuidOnMeasures.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v60\/PopulateAnalysisUuidOnMeasuresTest.java":[{"add":["83","  private void insertSnapshot(long id, String uuid, String qualifier, @Nullable Long rootSnapshotId) {"],"delete":["83","  private String insertSnapshot(long id, String uuid, String qualifier, @Nullable Long rootSnapshotId) {","110","    return uuid;"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v60\/PopulateAnalysisUuidOnMeasures.java":[{"add":[],"delete":["46","      \"where m.analysis_uuid is null \" +","47","      \"union \" +","48","      \"select distinct m.snapshot_id as sId, s.root_snapshot_id as rootSid \" +","49","      \"from project_measures m \" +","50","      \"inner join snapshots s on m.snapshot_id=s.id \" +"]}]}},"a79dddadd5038e9d6bbc26d363e39576180c1063":{"changes":{"sonar-application\/src\/test\/java\/org\/sonar\/application\/AppTest.java":"MODIFY","sonar-application\/src\/main\/java\/org\/sonar\/application\/App.java":"MODIFY"},"diff":{"sonar-application\/src\/test\/java\/org\/sonar\/application\/AppTest.java":[{"add":["37","import static org.assertj.core.api.Assertions.entry;","112","  @Test","113","  public void sets_TMPDIR_env_var_of_Web_process() throws Exception {","114","    Monitor monitor = mock(Monitor.class);","115","    App app = new App(monitor);","116","    Props props = initDefaultProps();","117","    String expectedTmpDir = \"expected tmp dir\";","118","    props.set(\"sonar.path.temp\", expectedTmpDir);","119","    app.start(props);","120","","121","    ArgumentCaptor<List<JavaCommand>> argument = newJavaCommandArgumentCaptor();","122","    verify(monitor).start(argument.capture());","123","","124","    assertThat(argument.getValue().get(1).getEnvVariables()).contains(entry(\"TMPDIR\", expectedTmpDir));","125","  }","126",""],"delete":[]}],"sonar-application\/src\/main\/java\/org\/sonar\/application\/App.java":[{"add":["94","      \/\/ ensure JRuby uses SQ's temp directory as temp directory (eg. for temp files used during HTTP uploads)","95","      .setEnvVariable(\"TMPDIR\", props.nonNullValue(ProcessProperties.PATH_TEMP))"],"delete":[]}]}},"46dc0f0590c60abfe479c95f17f11b552ad070a9":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDao.java":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDao.java":[{"add":["44","    dto.setIsLast(dto.getStatus() != CeActivityDto.Status.CANCELED);","46","    CeActivityMapper ceActivityMapper = mapper(dbSession);","47","    if (dto.getIsLast()) {","48","      ceActivityMapper.updateIsLastToFalseForLastKey(dto.getIsLastKey(), dto.getUpdatedAt());","50","    ceActivityMapper.insert(dto);"],"delete":["25","import org.apache.ibatis.session.RowBounds;","45","    dto.setIsLast(false);","46","    mapper(dbSession).insert(dto);","48","    List<String> uuids = mapper(dbSession).selectUuidsOfRecentlyCreatedByIsLastKey(dto.getIsLastKey(), new RowBounds(0, 1));","49","    \/\/ should never be empty, as a row was just inserted!","50","    if (!uuids.isEmpty()) {","51","      mapper(dbSession).updateIsLastToFalseForLastKey(dto.getIsLastKey(), dto.getUpdatedAt());","52","      mapper(dbSession).updateIsLastToTrueForUuid(uuids.get(0), dto.getUpdatedAt());"]}]}},"0d7956367e37a47c21cb05a52b118b38a2c17b66":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModuleTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModule.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModuleTest.java":[{"add":[],"delete":["23","import java.util.Collections;","62","    assertThat(module.sources()).isEqualTo(Collections.singletonList(\"file1\"));","63","    assertThat(module.tests()).isEqualTo(Collections.singletonList(\"test1\"));"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModule.java":[{"add":[],"delete":["25","import java.util.ArrayList;","28","import java.util.List;","49","  private final List<String> sources;","50","  private final List<String> tests;","74","    this.sources = Collections.unmodifiableList(new ArrayList<>(definition.sources()));","75","    this.tests = Collections.unmodifiableList(new ArrayList<>(definition.tests()));","157","  \/**","158","   * @return Source files and folders.","159","   *\/","160","  public List<String> sources() {","161","    return sources;","162","  }","163","","164","  public List<String> tests() {","165","    return tests;","166","  }","167",""]}]}},"08be68fda3cfd859ab412bfa634409d211f79927":{"changes":{"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/QualityProfilePage.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileActions-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/__snapshots__\/ProfileActions-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/BuiltInQualityProfileBadge.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileActions.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/OrganizationQualityProfilesUiTest.java":"MODIFY"},"diff":{"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/QualityProfilePage.java":[{"add":["50","    Selenide.$(\"#profile-projects .select-list-list-container\").shouldBe(Condition.visible);","51","    return this;","52","  }","53","","54","  public QualityProfilePage shouldNotAllowToChangeProjects() {","55","    Selenide.$(\".js-change-projects\").shouldNot(Condition.exist);","56","    return this;","57","  }","58","","59","  public QualityProfilePage shouldNotAllowToEdit() {","60","    Selenide.$(\"button.dropdown-toggle\").should(Condition.exist).click();","61","    Selenide.$(\"#quality-profile-rename\").shouldNot(Condition.exist);","62","    Selenide.$(\"#quality-profile-activate-more-rules\").shouldNot(Condition.exist);"],"delete":["50","    Selenide.$(\"#profile-projects .select-list-list\").shouldBe(Condition.visible);"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileActions-test.tsx":[{"add":["52","it('renders with permission to edit only', () => {","71","        profile={{","72","          ...PROFILE,","73","          actions: {","74","            copy: true,","75","            edit: true,","76","            delete: true,","77","            setAsDefault: true,","78","            associateProjects: true","79","          }","80","        }}"],"delete":["52","it('renders with permission to edit', () => {","71","        profile={{ ...PROFILE, actions: { copy: true, edit: true, setAsDefault: true } }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/__snapshots__\/ProfileActions-test.tsx.snap":[{"add":["5","    id=\"quality-profile-activate-more-rules\"","86","exports[`renders with permission to edit only 1`] = `","89","    id=\"quality-profile-activate-more-rules\""],"delete":["85","exports[`renders with permission to edit 1`] = `","119","  <ActionsDropdownDivider \/>","120","  <ActionsDropdownItem","121","    destructive={true}","122","    id=\"quality-profile-delete\"","123","    onClick={[Function]}","124","  >","125","    delete","126","  <\/ActionsDropdownItem>"]}],"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":[{"add":["32","  associateProjects?: boolean;","34","  delete?: boolean;","108","  return getJSON('\/api\/qualityprofiles\/projects', data).catch(throwGlobalError);"],"delete":["106","  return getJSON('\/api\/qualityprofiles\/projects', data);"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/BuiltInQualityProfileBadge.tsx":[{"add":["43","  return tooltip ? (","44","    <Tooltip overlay={overlay} placement=\"right\">","45","      {badge}","46","    <\/Tooltip>","47","  ) : (","48","    badge","49","  );"],"delete":["43","  return tooltip ? <Tooltip overlay={overlay}>{badge}<\/Tooltip> : badge;"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileActions.tsx":[{"add":["141","        {actions.edit && (","142","          <ActionsDropdownItem to={activateMoreUrl} id=\"quality-profile-activate-more-rules\">","168","        {actions.edit && (","174","        {actions.setAsDefault && (","182","        {actions.delete && <ActionsDropdownDivider \/>}","184","        {actions.delete && ("],"delete":["139","    const canActivateRules = actions.edit && !profile.isBuiltIn;","140","    const canRename = actions.edit && !profile.isBuiltIn;","141","    const canSetAsDefault = actions.setAsDefault && !profile.isDefault;","142","    const canDelete = actions.edit && !profile.isDefault && !profile.isBuiltIn;","143","","146","        {canActivateRules && (","147","          <ActionsDropdownItem to={activateMoreUrl}>","173","        {canRename && (","179","        {canSetAsDefault && (","187","        {canDelete && <ActionsDropdownDivider \/>}","189","        {canDelete && ("]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":[{"add":["71","    getProfileProjects(data).then(","72","      (r: any) => {","73","        if (this.mounted) {","74","          this.setState({","75","            projects: r.results,","76","            more: r.more,","77","            loading: false","78","          });","79","        }","80","      },","81","      () => {}","82","    );","96","    if (this.state.loading) {","97","      return <i className=\"spinner\" \/>;","98","    }","99","","109","    if (this.state.loading) {","110","      return <i className=\"spinner\" \/>;","111","    }","112","","143","          profile.actions.associateProjects && (","156","          {profile.isDefault ? this.renderDefault() : this.renderProjects()}"],"delete":["71","    getProfileProjects(data).then((r: any) => {","72","      if (this.mounted) {","73","        this.setState({","74","          projects: r.results,","75","          more: r.more,","76","          loading: false","77","        });","78","      }","79","    });","132","          profile.actions.edit &&","133","          !profile.isDefault && (","146","          {this.state.loading ? (","147","            <i className=\"spinner\" \/>","148","          ) : profile.isDefault ? (","149","            this.renderDefault()","150","          ) : (","151","            this.renderProjects()","152","          )}"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/OrganizationQualityProfilesUiTest.java":[{"add":["120","  public void testBuiltIn() {","121","    Navigation nav = tester.openBrowser().logIn().submitCredentials(user.getLogin());","122","    nav.openQualityProfile(\"xoo\", \"Sonar way\", \"test-org\")","123","      .shouldNotAllowToEdit()","124","      .shouldAllowToChangeProjects();","125","    nav.openQualityProfile(\"xoo\", \"Basic\", \"test-org\")","126","      .shouldNotAllowToEdit()","127","      .shouldNotAllowToChangeProjects();","128","  }","129","","130","  @Test"],"delete":[]}]}},"3ed96a6b902132626d4f6f4a76139613d7cbb81d":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesDao.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundred.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/queue\/ReportSubmitterTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/favorite\/FavoriteUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77Test.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesMapper.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/favorite\/FavoriteUpdater.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/favorite\/ws\/AddAction.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest.java":"ADD"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesDao.java":[{"add":["162","  public List<PropertyDto> selectByKeyAndUserIdAndComponentQualifier(DbSession session, String key, int userId, String qualifier) {","163","    return getMapper(session).selectByKeyAndUserIdAndComponentQualifier(key, userId, qualifier);","164","  }","165",""],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundred.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/queue\/ReportSubmitterTest.java":[{"add":["31","import org.sonar.api.i18n.I18n;","46","import org.sonar.server.es.TestProjectIndexers;","57","import static java.util.stream.IntStream.rangeClosed;","86","  public DbTester db = DbTester.create();","90","","92","  private TestProjectIndexers projectIndexers = new TestProjectIndexers();","94","  private ComponentUpdater componentUpdater = new ComponentUpdater(db.getDbClient(), mock(I18n.class), mock(System2.class), permissionTemplateService,","95","    new FavoriteUpdater(db.getDbClient()), projectIndexers);","163","    when(permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY))).thenReturn(true);","168","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","171","      && submit.getComponent().filter(cpt -> cpt.getUuid().equals(createdProject.uuid()) && cpt.getMainComponentUuid().equals(createdProject.uuid())).isPresent()","176","  public void add_project_as_favorite_when_project_creator_permission_on_permission_template() {","177","    UserDto user = db.users().insertUser();","178","    OrganizationDto organization = db.organizations().insert();","179","    userSession","180","      .logIn(user)","181","      .addPermission(OrganizationPermission.SCAN, organization.getUuid())","182","      .addPermission(PROVISION_PROJECTS, organization);","183","    mockSuccessfulPrepareSubmitCall();","184","    when(permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY))).thenReturn(true);","185","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","186","","187","    underTest.submit(organization.getKey(), PROJECT_KEY, null, PROJECT_NAME, emptyMap(), IOUtils.toInputStream(\"{binary}\"));","188","","189","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","190","    assertThat(db.favorites().hasFavorite(createdProject, user.getId())).isTrue();","191","  }","192","","193","  @Test","194","  public void do_no_add_favorite_when_no_project_creator_permission_on_permission_template() {","205","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","206","    assertThat(db.favorites().hasNoFavorite(createdProject)).isTrue();","207","  }","208","","209","  @Test","210","  public void do_no_add_favorite_when_already_100_favorite_projects_and_no_project_creator_permission_on_permission_template() {","211","    UserDto user = db.users().insertUser();","212","    rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","213","    OrganizationDto organization = db.organizations().insert();","214","    userSession","215","      .logIn(user)","216","      .addPermission(OrganizationPermission.SCAN, organization.getUuid())","217","      .addPermission(PROVISION_PROJECTS, organization);","218","    mockSuccessfulPrepareSubmitCall();","219","    when(permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY))).thenReturn(true);","220","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","221","","222","    underTest.submit(organization.getKey(), PROJECT_KEY, null, PROJECT_NAME, emptyMap(), IOUtils.toInputStream(\"{binary}\"));","223","","224","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","225","    assertThat(db.favorites().hasNoFavorite(createdProject)).isTrue();"],"delete":["45","import org.sonar.server.component.NewComponent;","62","import static org.mockito.ArgumentMatchers.isNull;","70","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","86","  public DbTester db = DbTester.create(System2.INSTANCE);","91","  private ComponentUpdater componentUpdater = mock(ComponentUpdater.class);","93","  private FavoriteUpdater favoriteUpdater = mock(FavoriteUpdater.class);","109","","110","    ComponentDto project = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","112","    when(componentUpdater.create(any(), any(), any())).thenReturn(project);","131","","132","    ComponentDto project = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","134","    when(componentUpdater.createWithoutCommit(any(), any(), any())).thenReturn(project);","141","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(project));","155","    verifyZeroInteractions(favoriteUpdater);","168","","170","    ComponentDto createdProject = newPrivateProjectDto(organization, PROJECT_UUID).setDbKey(PROJECT_KEY);","171","    when(componentUpdater.createWithoutCommit(any(), any(), isNull())).thenReturn(createdProject);","172","    when(","173","      permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY)))","174","        .thenReturn(true);","181","      && submit.getComponent().filter(cpt -> cpt.getUuid().equals(PROJECT_UUID) && cpt.getMainComponentUuid().equals(PROJECT_UUID)).isPresent()","183","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(createdProject));","187","  public void no_favorite_when_no_project_creator_permission_on_permission_template() {","191","","192","    ComponentDto createdProject = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","193","    when(componentUpdater.createWithoutCommit(any(), any(), isNull())).thenReturn(createdProject);","201","    verifyZeroInteractions(favoriteUpdater);","202","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(createdProject));","210","","211","    ComponentDto project = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","213","    when(componentUpdater.createWithoutCommit(any(), any(), any())).thenReturn(project);","220","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(project));","252","","255","","323","    when(componentUpdater.create(any(DbSession.class), any(NewComponent.class), eq(null))).thenReturn(new ComponentDto().setUuid(PROJECT_UUID).setDbKey(PROJECT_KEY));"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/favorite\/FavoriteUpdaterTest.java":[{"add":["21","import java.util.stream.IntStream;","30","import org.sonar.db.user.UserDto;","39","  public DbTester db = DbTester.create();","48","    ComponentDto project = db.components().insertPrivateProject();","49","    UserDto user = db.users().insertUser();","50","    assertNoFavorite(project, user);","52","    underTest.add(dbSession, project, user.getId(), true);","54","    assertFavorite(project, user);","59","    ComponentDto project = db.components().insertPrivateProject();","61","    underTest.add(dbSession, project, null, true);","62","","63","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","64","      .setComponentId(project.getId())","65","      .build(), dbSession)).isEmpty();","66","  }","67","","68","  @Test","69","  public void do_not_add_favorite_when_already_100_favorite_projects() {","70","    UserDto user = db.users().insertUser();","71","    IntStream.rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","72","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","73","      .setUserId(user.getId())","74","      .build(), dbSession)).hasSize(100);","75","    ComponentDto project = db.components().insertPrivateProject();","76","","77","    underTest.add(dbSession, project, user.getId(), false);","78","","79","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","80","      .setUserId(user.getId())","81","      .build(), dbSession)).hasSize(100);","82","  }","83","","84","  @Test","85","  public void do_not_add_favorite_when_already_100_favorite_portfolios() {","86","    UserDto user = db.users().insertUser();","87","    IntStream.rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","88","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","89","      .setUserId(user.getId())","90","      .build(), dbSession)).hasSize(100);","91","    ComponentDto project = db.components().insertPrivateProject();","92","","93","    underTest.add(dbSession, project, user.getId(), false);","94","","95","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","96","      .setUserId(user.getId())","97","      .build(), dbSession)).hasSize(100);","98","  }","99","","100","  @Test","101","  public void fail_when_more_than_100_projects_favorites() {","102","    UserDto user = db.users().insertUser();","103","    IntStream.rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","104","    ComponentDto project = db.components().insertPrivateProject();","105","","106","    expectedException.expect(IllegalArgumentException.class);","107","    expectedException.expectMessage(\"You cannot have more than 100 favorites on components with qualifier 'TRK'\");","108","","109","    underTest.add(dbSession, project, user.getId(), true);","114","    ComponentDto project = db.components().insertPrivateProject();","115","    UserDto user = db.users().insertUser();","116","    underTest.add(dbSession, project, user.getId(), true);","117","    assertFavorite(project, user);","120","    expectedException.expectMessage(String.format(\"Component '%s' is already a favorite\", project.getKey()));","122","    underTest.add(dbSession, project, user.getId(), true);","125","  private void assertFavorite(ComponentDto project, UserDto user) {","127","      .setUserId(user.getId())","128","      .setComponentId(project.getId())","132","  private void assertNoFavorite(ComponentDto project, UserDto user) {","134","      .setUserId(user.getId())","135","      .setComponentId(project.getId())"],"delete":["24","import org.sonar.api.utils.System2;","29","import org.sonar.db.component.ComponentTesting;","30","import org.sonar.db.organization.OrganizationTesting;","36","  private static final long COMPONENT_ID = 23L;","37","  private static final String COMPONENT_KEY = \"K1\";","38","  private static final ComponentDto COMPONENT = ComponentTesting.newPrivateProjectDto(OrganizationTesting.newOrganizationDto())","39","    .setId(COMPONENT_ID)","40","    .setDbKey(COMPONENT_KEY);","41","  private static final int USER_ID = 42;","46","  public DbTester db = DbTester.create(System2.INSTANCE);","55","    assertNoFavorite();","57","    underTest.add(dbSession, COMPONENT, USER_ID);","59","    assertFavorite();","64","    underTest.add(dbSession, COMPONENT, null);","66","    assertNoFavorite();","71","    underTest.add(dbSession, COMPONENT, USER_ID);","72","    assertFavorite();","75","    expectedException.expectMessage(\"Component 'K1' is already a favorite\");","77","    underTest.add(dbSession, COMPONENT, USER_ID);","80","  private void assertFavorite() {","82","      .setUserId(USER_ID)","83","      .setComponentId(COMPONENT_ID)","87","  private void assertNoFavorite() {","89","      .setUserId(USER_ID)","90","      .setComponentId(COMPONENT_ID)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["27","import org.sonar.db.DbSession;","31","import org.sonar.db.user.UserDto;","52","import static java.util.stream.IntStream.rangeClosed;","58","import static org.mockito.Mockito.when;","88","  private PermissionTemplateService permissionTemplateService = mock(PermissionTemplateService.class);","93","      new ComponentUpdater(db.getDbClient(), i18n, system2, permissionTemplateService, new FavoriteUpdater(db.getDbClient()),","239","  public void add_project_to_user_favorites_if_project_creator_is_defined_in_permission_template() {","240","    OrganizationDto organization = db.organizations().insert();","241","    UserDto user = db.users().insertUser();","242","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","243","    userSession.logIn(user).addPermission(PROVISION_PROJECTS, organization);","244","","245","    ws.newRequest()","246","      .setParam(\"key\", DEFAULT_PROJECT_KEY)","247","      .setParam(\"name\", DEFAULT_PROJECT_NAME)","248","      .setParam(\"organization\", organization.getKey())","249","      .executeProtobuf(CreateWsResponse.class);","250","","251","    ComponentDto project = db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get();","252","    assertThat(db.favorites().hasFavorite(project, user.getId())).isTrue();","253","  }","254","","255","  @Test","256","  public void do_not_add_project_to_user_favorites_if_project_creator_is_defined_in_permission_template_and_already_100_favorites() {","257","    OrganizationDto organization = db.organizations().insert();","258","    UserDto user = db.users().insertUser();","259","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","260","    rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","261","    userSession.logIn(user).addPermission(PROVISION_PROJECTS, organization);","262","","263","    ws.newRequest()","264","      .setParam(\"key\", DEFAULT_PROJECT_KEY)","265","      .setParam(\"name\", DEFAULT_PROJECT_NAME)","266","      .setParam(\"organization\", organization.getKey())","267","      .executeProtobuf(CreateWsResponse.class);","268","","269","    ComponentDto project = db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get();","270","    assertThat(db.favorites().hasNoFavorite(project)).isTrue();","271","  }","272","","273","  @Test"],"delete":["88","      new ComponentUpdater(db.getDbClient(), i18n, system2, mock(PermissionTemplateService.class), new FavoriteUpdater(db.getDbClient()),"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77Test.java":[{"add":["38","    verifyMigrationCount(underTest, 10);"],"delete":["38","    verifyMigrationCount(underTest, 9);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesMapper.java":[{"add":["40","  List<PropertyDto> selectByKeyAndUserIdAndComponentQualifier(@Param(\"key\") String key, @Param(\"userId\") int userId, @Param(\"qualifier\") String qualifier);","41",""],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":[{"add":["42","import org.sonar.db.component.ComponentTesting;","55","import static org.sonar.db.property.PropertyTesting.newPropertyDto;","405","      .extracting(PropertyDto::getValue, PropertyDto::getResourceId)","406","      .containsExactlyInAnyOrder(","407","        tuple(\"value\", project1.getId()),","408","        tuple(\"value\", project2.getId()),","409","        tuple(\"value\", null));","410","  }","411","","412","  @Test","413","  public void selectByKeyAndUserIdAndComponentQualifier() {","414","    UserDto user1 = db.users().insertUser();","415","    UserDto user2 = db.users().insertUser();","416","    ComponentDto project1 = db.components().insertPrivateProject();","417","    ComponentDto file1 = db.components().insertComponent(ComponentTesting.newFileDto(project1));","418","    ComponentDto project2 = db.components().insertPrivateProject();","419","    db.properties().insertProperties(","420","      newPropertyDto(\"key\", \"1\", project1, user1),","421","      newPropertyDto(\"key\", \"2\", project2, user1),","422","      newPropertyDto(\"key\", \"3\", file1, user1),","423","      newPropertyDto(\"another key\", \"4\", project1, user1),","424","      newPropertyDto(\"key\", \"5\", project1, user2),","425","      newGlobalPropertyDto(\"key\", \"global\"));","426","","427","    assertThat(underTest.selectByKeyAndUserIdAndComponentQualifier(db.getSession(), \"key\", user1.getId(), \"TRK\"))","428","      .extracting(PropertyDto::getValue).containsExactlyInAnyOrder(\"1\", \"2\");","429","    assertThat(underTest.selectByKeyAndUserIdAndComponentQualifier(db.getSession(), \"key\", user1.getId(), \"FIL\"))","430","      .extracting(PropertyDto::getValue).containsExactlyInAnyOrder(\"3\");","431","    assertThat(underTest.selectByKeyAndUserIdAndComponentQualifier(db.getSession(), \"key\", user2.getId(), \"FIL\")).isEmpty();"],"delete":["403","    .extracting(PropertyDto::getValue, PropertyDto::getResourceId)","404","    .containsExactlyInAnyOrder(","405","      tuple(\"value\", project1.getId()),","406","      tuple(\"value\", project2.getId()),","407","      tuple(\"value\", null)","408","    );"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77.java":[{"add":["37","      .add(2608, \"Delete favorites on not supported components\", DeleteFavouritesOnNotSupportedComponentQualifiers.class)","38","      .add(2609, \"Delete exceeding favorites when there are more than 100 for a user\", DeleteFavoritesExceedingOneHundred.class);"],"delete":["37","      .add(2608, \"Delete favorites on not supported components\", DeleteFavouritesOnNotSupportedComponentQualifiers.class);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":[{"add":["74","   * - Index component in es indexes","133","  private void createMainBranch(DbSession session, String componentUuid) {","160","      favoriteUpdater.add(dbSession, componentDto, userId, false);"],"delete":["74","   * - Index component if es indexes","133","  private BranchDto createMainBranch(DbSession session, String componentUuid) {","140","","142","    return branch;","162","      favoriteUpdater.add(dbSession, componentDto, userId);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/favorite\/FavoriteUpdater.java":[{"add":["43","  public void add(DbSession dbSession, ComponentDto componentDto, @Nullable Integer userId, boolean failIfTooManyFavorites) {","54","","55","    List<PropertyDto> existingFavorites = dbClient.propertiesDao().selectByKeyAndUserIdAndComponentQualifier(dbSession, PROP_FAVORITE_KEY, userId, componentDto.qualifier());","56","    if (existingFavorites.size() >= 100) {","57","      checkArgument(!failIfTooManyFavorites, \"You cannot have more than 100 favorites on components with qualifier '%s'\", componentDto.qualifier());","58","      return;","59","    }"],"delete":["43","  public void add(DbSession dbSession, ComponentDto componentDto, @Nullable Integer userId) {"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":[{"add":["28","import org.sonar.db.DbSession;","42","import static java.util.stream.IntStream.rangeClosed;","218","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class)))","219","      .thenReturn(true);","220","","221","    ComponentDto dto = underTest.create(db.getSession(), project, userDto.getId());","222","","223","    assertThat(db.favorites().hasFavorite(dto, userDto.getId())).isTrue();","224","  }","225","","226","  @Test","227","  public void do_not_add_project_to_user_favorites_if_project_creator_is_defined_in_permission_template_and_already_100_favorites() {","228","    UserDto user = db.users().insertUser();","229","    rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","230","    NewComponent project = NewComponent.newComponentBuilder()","231","      .setKey(DEFAULT_PROJECT_KEY)","232","      .setName(DEFAULT_PROJECT_NAME)","233","      .setOrganizationUuid(db.getDefaultOrganization().getUuid())","234","      .build();","240","      user.getId());","242","    assertThat(db.favorites().hasFavorite(dto, user.getId())).isFalse();"],"delete":["221","      userDto.getId());","223","    assertThat(db.favorites().hasFavorite(dto, userDto.getId())).isTrue();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/favorite\/ws\/AddAction.java":[{"add":["63","        \"Only 100 components by qualifier can be added as favorite.<br>\" +","67","        new Change(\"7.7\", \"It's no longer possible to have more than 100 favorites by qualifier\"),","68","        new Change(\"7.7\", \"It's no longer possible to set a directory as favorite\"),","93","        favoriteUpdater.add(dbSession, componentDto, userSession.isLoggedIn() ? userSession.getUserId() : null, true);"],"delete":["66","        new Change(\"7.7\", \"It's no more possible to set a directory as favorite\"),","91","        favoriteUpdater.add(dbSession, componentDto, userSession.isLoggedIn() ? userSession.getUserId() : null);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":[{"add":["130","  <select id=\"selectByKeyAndUserIdAndComponentQualifier\" parameterType=\"map\" resultType=\"ScrapProperty\">","131","    select","132","    <include refid=\"columnsToScrapPropertyDto\"\/>","133","    from","134","    properties p","135","      inner join projects prj on prj.id=p.resource_id and prj.qualifier = #{qualifier, jdbcType=VARCHAR}","136","    where","137","      p.prop_key = #{key, jdbcType=VARCHAR}","138","      and p.user_id = #{userId, jdbcType=INTEGER}","139","  <\/select>","140",""],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest.java":[{"add":[],"delete":[]}]}},"91f37bb55b79523a00ab02f5b180c9a3b12a5b9a":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueMapper.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueDao.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueMapper.java":[{"add":["70","  List<QueueCount> countByStatusAndMainComponentUuids(@Param(\"status\") CeQueueDto.Status status, @Param(\"mainComponentUuids\") List<String> mainComponentUuids);"],"delete":["22","import java.util.Set;","71","  List<QueueCount> countByStatusAndMainComponentUuids(@Param(\"status\") CeQueueDto.Status status, @Param(\"mainComponentUuids\") Set<String> mainComponentUuids);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeQueueDao.java":[{"add":["158","      partitionOfProjectUuids -> {","159","        List<QueueCount> i = mapper(dbSession).countByStatusAndMainComponentUuids(status, partitionOfProjectUuids);"],"delete":["158","      uuids -> {","159","        List<QueueCount> i = mapper(dbSession).countByStatusAndMainComponentUuids(status, projectUuids);"]}]}},"e0c834ebf18b722009ae5940e98b5916c8bbea71":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v50\/FeedFileSourcesTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v50\/FeedFileSources.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v50\/FeedFileSourcesTest.java":[{"add":["91","  public void migrate_ignores_duplicate_multiple_rows_in_snapshots_with_islast_true() throws Exception {","92","    db.prepareDbUnit(getClass(), \"before.xml\");","93","    db.executeUpdateSql(\"insert into snapshots \" +","94","        \"(id,project_id,parent_snapshot_id,root_project_id,root_snapshot_id,status,islast) \" +","95","        \"values \" +","96","        \"(9,3,4,1,2,'P',true)\");","97","    db.executeUpdateSql(\"insert into snapshot_sources \" +","98","        \"(snapshot_id, data, updated_at) \" +","99","        \"values \" +","100","        \"(6, 'class Foo {\\r\\n  \/\/ Empty\\r\\n}\\r\\n', '2014-10-31 16:44:02.000')\");","101","","102","    db.executeUpdateSql(\"insert into snapshot_sources \" +","103","        \"(snapshot_id, data, updated_at) \" +","104","        \"values \" +","105","        \"(9, 'class Bar {\\r\\n  \/\/ Empty\\r\\n}\\r\\n', '2014-10-31 16:44:02.000')\");","106","","107","    migration.execute();","108","","109","    List<Map<String, Object>> results = getFileSources();","110","    assertThat(results).hasSize(2);","111","","112","    \/\/ the lastest inserted row is the one taken into account","113","    assertThat(results.get(1).get(\"data\")).isEqualTo(\",,,,,,,,,,,,,,,class Bar {\\r\\n,,,,,,,,,,,,,,,  \/\/ Empty\\r\\n,,,,,,,,,,,,,,,}\\r\\n,,,,,,,,,,,,,,,\\r\\n\");","114","  }","115","","116","  @Test"],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v50\/FeedFileSources.java":[{"add":["24","import java.util.Objects;","99","    \"m13.measure_data \" +","141","    \"ORDER BY \" +","142","      \/\/ to be able to detect duplicate  a given file uuid only once","143","      \"f.uuid, \" +","144","      \/\/ to take into account the (presumably) most recent snapshot in case of duplicate","145","      \"s.id desc,\" +","146","      \/\/ to take into account the (presumably) most recent line in FILE_SOURCES in case of duplicate","147","      \"ss.id desc\";","156","    private String previousFileUuid = null;","195","      if (Objects.equals(fileUuid, previousFileUuid)) {","198","      this.previousFileUuid = fileUuid;"],"delete":["98","    \"m13.measure_data, \" +","99","","100","    \/\/ to detect multiple rows in snapshot_sources for the same snapshot","101","    \"s.id \" +","143","    \"ORDER BY s.id, ss.id desc\";","152","    private long previousSnapshotId = -1;","190","      long snapshotId = row.getLong(31);","192","      if (snapshotId == previousSnapshotId) {","195","      this.previousSnapshotId = snapshotId;"]}]}},"5cb50b88707b28319bd457a2602b6bfc7445f8d9":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueAssign-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueAssign-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueAssign.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/BulkChangeModal-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/AssigneeFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/Item.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/BulkChangeModal-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueAssign-test.tsx.snap":[{"add":["60","exports[`should render a fallback assignee display if assignee info are not available 1`] = `","61","<div","62","  className=\"dropdown\"","63",">","64","  <Toggler","65","    closeOnEscape={true}","66","    onRequestClose={[Function]}","67","    open={false}","68","    overlay={","69","      <Connect(withCurrentUser(SetAssigneePopup))","70","        issue={","71","          Object {","72","            \"projectOrganization\": \"org\",","73","          }","74","        }","75","        onSelect={[MockFunction]}","76","      \/>","77","    }","78","  >","79","    <ButtonLink","80","      className=\"issue-action issue-action-with-options js-issue-assign\"","81","      onClick={[Function]}","82","    >","83","      <span","84","        className=\"issue-meta-label\"","85","      >","86","        unassigned","87","      <\/span>","88","      <DropdownIcon","89","        className=\"little-spacer-left\"","90","      \/>","91","    <\/ButtonLink>","92","  <\/Toggler>","93","<\/div>","94","`;","95",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueAssign-test.tsx":[{"add":["39","it('should render a fallback assignee display if assignee info are not available', () => {","40","  expect(shallowRender({ issue: { projectOrganization: 'org' } })).toMatchSnapshot();","41","});","42","","53","  return shallow<IssueAssign>("],"delete":["49","  return shallow("]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.tsx":[{"add":["163","      results.map(r => {","164","        const userInfo = r.name || r.login;","165","","166","        return {","167","          avatar: r.avatar,","168","          label: isUserActive(r) ? userInfo : translateWithParameters('user.x_deleted', userInfo),","169","          value: r.login","170","        };","171","      })"],"delete":["163","      results.map(r => ({","164","        avatar: r.avatar,","165","        label: isUserActive(r) ? r.name : translateWithParameters('user.x_deleted', r.login),","166","        value: r.login","167","      }))"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueAssign.tsx":[{"add":["49","    const assigneeName = issue.assigneeName || issue.assignee;","51","    if (assigneeName) {","64","              ? translateWithParameters('user.x_deleted', assigneeName)","65","              : assigneeName}"],"delete":["49","    const assignee =","50","      issue.assigneeActive !== false ? issue.assigneeName || issue.assignee : issue.assignee;","52","    if (assignee) {","65","              ? translateWithParameters('user.x_deleted', assignee)","66","              : assignee}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/BulkChangeModal-test.tsx":[{"add":["35","jest.mock('..\/..\/utils', () => ({","36","  searchAssignees: jest.fn().mockResolvedValue({","37","    results: [","38","      {","39","        active: true,","40","        avatar: '##toto',","41","        login: 'toto@toto',","42","        name: 'toto'","43","      },","44","      {","45","        active: false,","46","        avatar: '##toto',","47","        login: 'login@login',","48","        name: 'toto'","49","      },","50","      {","51","        active: true,","52","        avatar: '##toto',","53","        login: 'login@login'","54","      }","55","    ]","56","  })","57","}));","58","","83","it('should properly handle the search for assignee', async () => {","84","  const issues: T.Issue[] = [];","85","  for (let i = MAX_PAGE_SIZE + 1; i > 0; i--) {","86","    issues.push(mockIssue());","87","  }","88","","89","  const wrapper = getWrapper(issues);","90","  const result = await wrapper.instance().handleAssigneeSearch('toto');","91","  expect(result).toMatchSnapshot();","92","});","93","","95","  return shallow<BulkChangeModal>("],"delete":["60","  return shallow("]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/AssigneeFacet.tsx":[{"add":["106","    if (!user) {","107","      return assignee;","108","    }","109","","110","    const userName = user.name || user.login;","111","","112","    return (","114","        <Avatar className=\"little-spacer-right\" hash={user.avatar} name={userName} size={16} \/>","115","        {isUserActive(user) ? userName : translateWithParameters('user.x_deleted', userName)}"],"delete":["106","    return user ? (","108","        <Avatar","109","          className=\"little-spacer-right\"","110","          hash={user.avatar}","111","          name={user.name || user.login}","112","          size={16}","113","        \/>","114","        {isUserActive(user) ? user.name : translateWithParameters('user.x_deleted', user.login)}","116","    ) : (","117","      assignee"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/Item.tsx":[{"add":["88","    const userName = measure.user.name || measure.user.login;","120","              ? userName","121","              : translateWithParameters('user.x_deleted', userName)}"],"delete":["119","              ? measure.user.name || measure.user.login","120","              : translateWithParameters('user.x_deleted', measure.user.login)}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/BulkChangeModal-test.tsx.snap":[{"add":["124","","125","exports[`should properly handle the search for assignee 1`] = `","126","Array [","127","  Object {","128","    \"avatar\": \"##toto\",","129","    \"label\": \"toto\",","130","    \"value\": \"toto@toto\",","131","  },","132","  Object {","133","    \"avatar\": \"##toto\",","134","    \"label\": \"user.x_deleted.toto\",","135","    \"value\": \"login@login\",","136","  },","137","  Object {","138","    \"avatar\": \"##toto\",","139","    \"label\": \"user.x_deleted.login@login\",","140","    \"value\": \"login@login\",","141","  },","142","]","143","`;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":[{"add":["79","                {this.state.changelog.map((item, idx) => {","80","                  const userName = item.userName || item.user;","81","","82","                  return (","83","                    <tr key={idx}>","84","                      <td className=\"thin text-left text-top nowrap\">","85","                        <DateTimeFormatter date={item.creationDate} \/>","86","                      <\/td>","87","                      <td className=\"text-left text-top\">","88","                        {userName && (","89","                          <p>","90","                            <Avatar","91","                              className=\"little-spacer-right\"","92","                              hash={item.avatar}","93","                              name={userName}","94","                              size={16}","95","                            \/>","96","                            {item.isUserActive","97","                              ? userName","98","                              : translateWithParameters('user.x_deleted', userName)}","99","                          <\/p>","100","                        )}","101","                        {item.diffs.map(diff => (","102","                          <IssueChangelogDiff diff={diff} key={diff.key} \/>","103","                        ))}","104","                      <\/td>","105","                    <\/tr>","106","                  );","107","                })}"],"delete":["79","                {this.state.changelog.map((item, idx) => (","80","                  <tr key={idx}>","81","                    <td className=\"thin text-left text-top nowrap\">","82","                      <DateTimeFormatter date={item.creationDate} \/>","83","                    <\/td>","84","                    <td className=\"text-left text-top\">","85","                      <p>","86","                        <Avatar","87","                          className=\"little-spacer-right\"","88","                          hash={item.avatar}","89","                          name={(item.isUserActive && item.userName) || item.user}","90","                          size={16}","91","                        \/>","92","                        {item.isUserActive","93","                          ? item.userName || item.user","94","                          : translateWithParameters('user.x_deleted', item.user)}","95","                      <\/p>","96","                      {item.diffs.map(diff => (","97","                        <IssueChangelogDiff diff={diff} key={diff.key} \/>","98","                      ))}","99","                    <\/td>","100","                  <\/tr>","101","                ))}"]}]}},"7ae93382eb4a2f4d364beb529b15140d53791ce7":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/Favorite.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Favorite-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Favorite-test.tsx.snap":"MODIFY","server\/sonar-web\/package.json":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/Favorite.tsx":[{"add":["20","import FavoriteButton from 'sonar-ui-common\/components\/controls\/FavoriteButton';","31","interface State {","32","  favorite: boolean;","33","}","35","export default class Favorite extends React.PureComponent<Props, State> {","36","  mounted = false;","38","  constructor(props: Props) {","39","    super(props);","40","","41","    this.state = {","42","      favorite: props.favorite","43","    };","44","  }","45","","46","  componentDidMount() {","47","    this.mounted = true;","48","  }","49","","50","  componentDidUpdate(_prevProps: Props, prevState: State) {","51","    if (prevState.favorite !== this.props.favorite) {","52","      this.setState({ favorite: this.props.favorite });","53","    }","54","  }","55","","56","  componentWillUnmount() {","57","    this.mounted = false;","58","  }","59","","60","  toggleFavorite = () => {","61","    const newFavorite = !this.state.favorite;","62","    const apiMethod = newFavorite ? addFavorite : removeFavorite;","63","","64","    return apiMethod(this.props.component).then(() => {","65","      if (this.mounted) {","66","        this.setState({ favorite: newFavorite }, () => {","67","          if (this.props.handleFavorite) {","68","            this.props.handleFavorite(this.props.component, newFavorite);","69","          }","70","        });","71","      }","72","    });","76","    const { className, qualifier } = this.props;","77","    const { favorite } = this.state;","78","","79","    return (","80","      <FavoriteButton","81","        className={className}","82","        favorite={favorite}","83","        qualifier={qualifier}","84","        toggleFavorite={this.toggleFavorite}","85","      \/>","86","    );","89","\/*  *\/"],"delete":["20","import FavoriteBase from 'sonar-ui-common\/components\/controls\/FavoriteBase';","31","export default class Favorite extends React.PureComponent<Props> {","32","  callback = (isFavorite: boolean) =>","33","    this.props.handleFavorite && this.props.handleFavorite(this.props.component, isFavorite);","35","  add = () => {","36","    return addFavorite(this.props.component).then(() => this.callback(true));","37","  };","39","  remove = () => {","40","    return removeFavorite(this.props.component).then(() => this.callback(false));","44","    const { component, handleFavorite, ...other } = this.props;","45","    return <FavoriteBase {...other} addFavorite={this.add} removeFavorite={this.remove} \/>;"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Favorite-test.tsx":[{"add":["21","import FavoriteButton from 'sonar-ui-common\/components\/controls\/FavoriteButton';","36","  const favoriteBase = wrapper.find(FavoriteButton);","37","  const toggleFavorite = favoriteBase.prop<Function>('toggleFavorite');","39","  toggleFavorite();","43","  toggleFavorite();"],"delete":["35","  const favoriteBase = wrapper.find('FavoriteBase');","36","  const addFavorite = favoriteBase.prop<Function>('addFavorite');","37","  const removeFavorite = favoriteBase.prop<Function>('removeFavorite');","39","  removeFavorite();","43","  addFavorite();"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Favorite-test.tsx.snap":[{"add":["3","<FavoriteButton","6","  toggleFavorite={[Function]}"],"delete":["3","<FavoriteBase","4","  addFavorite={[Function]}","7","  removeFavorite={[Function]}"]}],"server\/sonar-web\/package.json":[{"add":["37","    \"sonar-ui-common\": \"0.0.20\","],"delete":["37","    \"sonar-ui-common\": \"0.0.19\","]}]}},"294f80226f7f5c7a255346371680633445bde331":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/ReportSubmitterTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/ReportSubmitterTest.java":[{"add":["33","import org.sonar.core.permission.GlobalPermissions;","247","  \/**","248","   * SONAR-8757","249","   *\/","250","  @Test","251","  public void project_branch_must_not_benefit_from_the_scan_permission_on_main_project() {","252","    ComponentDto mainProject = db.components().insertProject();","253","    userSession.addProjectUuidPermissions(GlobalPermissions.SCAN_EXECUTION, mainProject.uuid());","254","","255","    \/\/ user does not have the \"scan\" permission on the branch, so it can't scan it","256","    String branchName = \"branchFoo\";","257","    ComponentDto branchProject = db.components().insertProject(p -> p.setKey(mainProject.getKey() + \":\" + branchName));","258","","259","","260","    thrown.expect(ForbiddenException.class);","261","    underTest.submit(defaultOrganizationKey, mainProject.key(), branchName, PROJECT_NAME, IOUtils.toInputStream(\"{binary}\"));","262","  }","263",""],"delete":[]}]}},"353570feab92e6b24c3081211136526f75478629":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule-details-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule-details-view.js":[{"add":["144","      const { controller } = this.options.app;","145","      if (controller.isRulePermalink()) {","146","        controller.newSearch();","147","      } else {","148","        controller.fetchList();","149","      }"],"delete":["144","      this.options.app.controller.fetchList();"]}]}},"6d6d5f77cb72d1a4cb66d15da9c2a786d46a7e85":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/measures_helper.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/measures_helper.rb":[{"add":["23","      html = link_to_function(h(column.title_label), \"refreshList#{widget_id}('#{h escape_javascript column.key}',#{!filter.sort_asc?}, '#{h(escape_javascript(filter.criteria[:page])) || 1}')\", :title => h(column.tooltip))"],"delete":["23","      html = link_to_function(h(column.title_label), \"refreshList#{widget_id}('#{escape_javascript column.key}',#{!filter.sort_asc?}, '#{filter.criteria[:page]||1}')\", :title => h(column.tooltip))"]}]}},"4e2c7f4e37f3f1263a44a5e7fd612f553ec916ed":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/GroupWsSupport.java":"MODIFY","sonar-ws\/src\/main\/protobuf\/ws-user_groups.proto":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":[{"add":["143","      .setId(group.getUuid())"],"delete":["143","      .setUuid(group.getUuid())"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/GroupWsSupport.java":[{"add":["149","      .setId(group.getUuid())"],"delete":["149","      .setUuid(group.getUuid())"]}],"sonar-ws\/src\/main\/protobuf\/ws-user_groups.proto":[{"add":["45","  optional string id = 1;"],"delete":["45","  optional string uuid = 1;"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":[{"add":["167","    assertThat(call(ws.newRequest()).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","169","    assertThat(call(ws.newRequest().setParam(FIELDS, \"\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","171","    assertThat(call(ws.newRequest().setParam(FIELDS, \"name\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","173","    assertThat(call(ws.newRequest().setParam(FIELDS, \"description\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","175","    assertThat(call(ws.newRequest().setParam(FIELDS, \"membersCount\")).getGroupsList()).extracting(Group::hasId, Group::hasName, Group::hasDescription, Group::hasMembersCount)","190","    assertThat(response.getGroupsList()).extracting(Group::getId, Group::getName).containsOnly(tuple(group.getUuid(), \"users\"));"],"delete":["167","    assertThat(call(ws.newRequest()).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","169","    assertThat(call(ws.newRequest().setParam(FIELDS, \"\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","171","    assertThat(call(ws.newRequest().setParam(FIELDS, \"name\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","173","    assertThat(call(ws.newRequest().setParam(FIELDS, \"description\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","175","    assertThat(call(ws.newRequest().setParam(FIELDS, \"membersCount\")).getGroupsList()).extracting(Group::hasUuid, Group::hasName, Group::hasDescription, Group::hasMembersCount)","190","    assertThat(response.getGroupsList()).extracting(Group::getUuid, Group::getName).containsOnly(tuple(group.getUuid(), \"users\"));"]}]}},"d06fdc6045943e9833c1dddbb05a3071ef7bae79":{"changes":{"\/dev\/null":"DELETE","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsers.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/DbVersion66.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest\/users.sql":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsers.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/DbVersion66.java":[{"add":[],"delete":["24","import org.sonar.server.platform.db.migration.version.v65.FixEmptyIdentityProviderInUsers;"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest\/users.sql":[{"add":[],"delete":[]}]}},"da80cca3a9fc255e0ebaa1f7ea2ba098725ee7c2":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/CreateProfileForm.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/CreateProfileForm.tsx":[{"add":["178","              {\/* drop me when we stop supporting ie11 *\/}","179","              <input type=\"hidden\" name=\"hello-ie11\" value=\"\" \/>"],"delete":[]}]}},"20a1224a63f0d1132ecc14e61eb13c07b8d91c31":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/ProcessLauncherImpl.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/FileUtils2.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/ProcessLauncherImpl.java":[{"add":["131","","132","            if (outdatedDir.exists()) {","133","              LOG.info(\"Failed to delete outdated search index data directory {}\", outdatedDir);","134","            }"],"delete":[]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/FileUtils2.java":[{"add":["23","import java.nio.file.AccessDeniedException;","24","import java.nio.file.DirectoryNotEmptyException;","33","import org.sonar.api.utils.log.Logger;","34","import org.sonar.api.utils.log.Loggers;","44","  private static final Logger LOG = Loggers.get(FileUtils2.class);","87","","88","        if (file.exists()) {","89","          LOG.warn(\"Unable to delete directory '{}'\", file);","90","        }","190","      try {","191","        Files.delete(file);","192","      } catch (AccessDeniedException e) {","193","        LOG.debug(\"Access delete to file '{}'. Ignoring and proceeding with recursive delete\", file);","194","      }","200","      try {","201","        Files.delete(dir);","202","      } catch (AccessDeniedException e) {","203","        LOG.debug(\"Access denied to delete directory '{}'. Ignoring and proceeding with recursive delete\", dir);","204","      } catch (DirectoryNotEmptyException e) {","205","        LOG.trace(\"Can not delete non empty directory '{}', presumably because it contained non accessible files\/directories. \" +","206","          \"Ignoring and proceeding with recursive delete\", dir, e);","207","      }"],"delete":["112","","113","    if (directory.exists()) {","114","      throw new IOException(format(\"Unable to delete directory '%s'\", directory));","115","    }","185","      Files.delete(file);","191","      Files.delete(dir);"]}]}},"f892d78c31867ce944e85086e118148e5350024a":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/organization\/CreateWsRequest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesService.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/Category6Suite.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/issue\/IssueTagsTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesWsParameters.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/organization\/CreateWsRequest.java":[{"add":["59","  public static Builder builder() {","60","    return new Builder();","61","  }","62",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["586","        .filter(createAuthorizationFilter(true))"],"delete":[]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesService.java":[{"add":["21","import java.util.Arrays;","22","import java.util.stream.Collectors;","23","import javax.annotation.Nullable;","31","import org.sonarqube.ws.client.WsResponse;","46","import static org.sonarqube.ws.client.issue.IssuesWsParameters.ACTION_SET_TAGS;","48","import static org.sonarqube.ws.client.issue.IssuesWsParameters.ACTION_TAGS;","78","import static org.sonarqube.ws.client.issue.IssuesWsParameters.PARAM_ORGANIZATION;","216","","217","  public Issues.Operation setTags(String issue, String... tags) {","218","    return call(new PostRequest(path(ACTION_SET_TAGS))","219","        .setParam(PARAM_ISSUE, issue)","220","        .setParam(PARAM_TAGS, Arrays.stream(tags).collect(Collectors.joining(\",\"))),","221","      Issues.Operation.parser());","222","  }","223","","224","  public WsResponse getTags(@Nullable String organization) {","225","    return call(new PostRequest(path(ACTION_TAGS))","226","      .setParam(PARAM_ORGANIZATION, organization)","227","    );","228","  }"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/Category6Suite.java":[{"add":["22","import it.issue.IssueTagsTest;","50","  BillingTest.class,","51","  IssueTagsTest.class"],"delete":["49","  BillingTest.class"]}],"it\/it-tests\/src\/test\/java\/it\/issue\/IssueTagsTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":[{"add":["21","import java.util.Collections;","41","import org.sonar.server.permission.index.PermissionIndexerDao;","42","import org.sonar.server.permission.index.PermissionIndexerTester;","67","  private PermissionIndexerTester permissionIndexerTester = new PermissionIndexerTester(es, issueIndexer);","81","    userSession.logIn();","93","    userSession.logIn();","112","    userSession.logIn();","129","    userSession.logIn();","142","    userSession.logIn();","154","  public void do_not_return_issues_without_permission() throws Exception {","155","    userSession.logIn();","156","    insertIssueWithBrowsePermission(insertRuleWithoutTags(), \"tag1\", \"tag2\");","157","    insertIssueWithoutBrowsePermission(insertRuleWithoutTags(), \"tag3\", \"tag4\");","158","","159","    String result = tester.newRequest()","160","      .setParam(\"organization\", organization.getKey())","161","      .execute().getInput();","162","    assertJson(result).isSimilarTo(\"{\\\"tags\\\":[\\\"tag1\\\", \\\"tag2\\\"]}\");","163","    assertThat(result).doesNotContain(\"tag3\").doesNotContain(\"tag4\");","164","  }","165","","166","  @Test","168","    userSession.logIn();","175","    userSession.logIn();","191","    userSession.logIn();","225","  private void insertIssueWithBrowsePermission(RuleDefinitionDto rule, String... tags) {","226","    IssueDto issue = insertIssueWithoutBrowsePermission(rule, tags);","227","    grantAccess(issue);","230","  private IssueDto insertIssueWithoutBrowsePermission(RuleDefinitionDto rule, String... tags) {","231","    IssueDto issue = db.issues().insertIssue(organization, i -> i.setRule(rule).setTags(asList(tags)));","232","    ComponentDto project = db.getDbClient().componentDao().selectByUuid(db.getSession(), issue.getProjectUuid()).get();","233","    userSession.addProjectPermission(USER, project);","234","    issueIndexer.index(Collections.singletonList(issue.getKey()));","237","","238","  private void grantAccess(IssueDto issue) {","239","    PermissionIndexerDao.Dto access = new PermissionIndexerDao.Dto(issue.getProjectUuid(), System2.INSTANCE.now(), \"TRK\");","240","    access.addUserId(userSession.getUserId());","241","    permissionIndexerTester.allow(access);","242","  }"],"delete":["31","import org.sonar.db.issue.IssueTesting;","50","import static org.sonar.db.component.ComponentTesting.newFileDto;","81","    issueIndexer.indexOnStartup(null);","111","    issueIndexer.indexOnStartup(null);","128","    issueIndexer.indexOnStartup(null);","141","    issueIndexer.indexOnStartup(null);","159","    issueIndexer.indexOnStartup(null);","207","  private IssueDto insertIssue(RuleDefinitionDto rule, String... tags) {","208","    ComponentDto project = db.components().insertPrivateProject(organization);","209","    ComponentDto file = db.components().insertComponent(newFileDto(project));","210","    IssueDto issueDto = IssueTesting.newIssue(rule, file, project).setTags(asList(tags));","211","    return db.issues().insertIssue(issueDto);","214","  private void setUserWithBrowsePermission(IssueDto issue) {","215","    userSession.logIn(\"john\").addProjectPermission(USER, db.getDbClient().componentDao().selectByUuid(db.getSession(), issue.getProjectUuid()).get());","216","  }","217","","218","  private IssueDto insertIssueWithBrowsePermission(RuleDefinitionDto rule, String... tags) {","219","    IssueDto issue = insertIssue(rule, tags);","220","    setUserWithBrowsePermission(issue);"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesWsParameters.java":[{"add":["44","  public static final String ACTION_TAGS = \"tags\";"],"delete":[]}]}},"8813433bbee5e54f99224e3fb072019e894ae7d3":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/dialect\/MsSql.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/ClobColumnDefTest.java":"MODIFY","\/dev\/null":"DELETE","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/AlterColumnsTypeBuilderTest.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/VarcharColumnDefTest.java":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/gems\/gems\/activerecord-jdbc-adapter-1.1.3\/lib\/arjdbc\/mssql\/adapter.rb":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/ClobColumnDef.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/AddColumnsBuilderTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/VarcharColumnDef.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/dialect\/MsSql.java":[{"add":[],"delete":["27","  public static final String COLLATION = \"Latin1_General_CS_AS\";","28",""]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/ClobColumnDefTest.java":[{"add":["64","    assertThat(def.generateSqlType(new MsSql())).isEqualTo(\"NVARCHAR (MAX)\");"],"delete":["64","    assertThat(def.generateSqlType(new MsSql())).isEqualTo(\"NVARCHAR (MAX) COLLATE Latin1_General_CS_AS\");"]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":[{"add":[],"delete":["61","import org.sonar.db.version.v53.FixMsSqlCollation;","137","      FixMsSqlCollation.class,"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/AlterColumnsTypeBuilderTest.java":[{"add":["56","      .containsOnly(\"ALTER TABLE issues ALTER COLUMN value DECIMAL (30,20)\", \"ALTER TABLE issues ALTER COLUMN name NVARCHAR (10)\");","62","      .containsOnly(\"ALTER TABLE issues ALTER COLUMN name NVARCHAR (10) NOT NULL\");"],"delete":["56","      .containsOnly(\"ALTER TABLE issues ALTER COLUMN value DECIMAL (30,20)\", \"ALTER TABLE issues ALTER COLUMN name NVARCHAR (10) COLLATE Latin1_General_CS_AS\");","62","      .containsOnly(\"ALTER TABLE issues ALTER COLUMN name NVARCHAR (10) COLLATE Latin1_General_CS_AS NOT NULL\");"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/VarcharColumnDefTest.java":[{"add":["73","    assertThat(def.generateSqlType(new MsSql())).isEqualTo(\"NVARCHAR (10)\");"],"delete":["73","    assertThat(def.generateSqlType(new MsSql())).isEqualTo(\"NVARCHAR (10) COLLATE Latin1_General_CS_AS\");"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/gems\/gems\/activerecord-jdbc-adapter-1.1.3\/lib\/arjdbc\/mssql\/adapter.rb":[{"add":["81","        'NVARCHAR(MAX)'"],"delete":["81","        'NVARCHAR(MAX) COLLATE Latin1_General_CS_AS'","84","      elsif type.to_s == 'string'","85","        super + ' COLLATE Latin1_General_CS_AS'"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":[{"add":["31","    assertThat(container.size()).isEqualTo(63);"],"delete":["31","    assertThat(container.size()).isEqualTo(64);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/ClobColumnDef.java":[{"add":["45","      return \"NVARCHAR (MAX)\";"],"delete":["45","      return String.format(\"NVARCHAR (MAX) COLLATE %s\", MsSql.COLLATION);"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/AddColumnsBuilderTest.java":[{"add":["66","      .isEqualTo(\"ALTER TABLE issues ADD date_in_ms BIGINT NULL, name NVARCHAR (10) NOT NULL\");"],"delete":["66","      .isEqualTo(\"ALTER TABLE issues ADD date_in_ms BIGINT NULL, name NVARCHAR (10) COLLATE Latin1_General_CS_AS NOT NULL\");"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/VarcharColumnDef.java":[{"add":["51","      return format(\"NVARCHAR (%d)\", columnSize);"],"delete":["51","      return format(\"NVARCHAR (%d) COLLATE %s\", columnSize, MsSql.COLLATION);"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":[],"delete":["364","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1002');"]}]}},"0359411125578632c70ccf458625d0163c2b8b16":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/actions\/index.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/actions\/index.js":[{"add":["131","function requestChildren (componentKey, metrics, page) {","132","  return getChildren(componentKey, metrics, { p: page, ps: PAGE_SIZE }).then(r => {","133","    if (r.paging.total > r.paging.pageSize * r.paging.pageIndex) {","134","      return requestChildren(componentKey, metrics, page + 1).then(moreComponents => {","135","        return [...r.components, ...moreComponents];","136","      })","137","    }","138","    return r.components;","139","  });","140","}","141","","142","function requestAllChildren (componentKey, metrics) {","143","  return requestChildren(componentKey, metrics, 1);","144","}","145","","150","      return requestAllChildren(rootDir.key, metrics).then(components => {","151","        const nextChildren = _.without([...children, ...components], rootDir);","152","        const nextTotal = total + components.length - \/* root dir *\/ 1;"],"delete":["135","      return getChildren(rootDir.key, metrics).then(r => {","136","        const nextChildren = _.without([...children, ...r.components], rootDir);","137","        const nextTotal = total + r.components.length - \/* root dir *\/ 1;"]}]}},"5d8830fa08d4fd4280a029d7a9b7fbd0d7bc3fca":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/SnapshotMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotMapper.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/SnapshotDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/SnapshotMapper.xml":[{"add":[],"delete":["107","      inner join ce_activity ca on ca.analysis_uuid = s.uuid and ca.component_uuid = pb.project_uuid","113","      and ca.status=#{ceStatus, jdbcType=VARCHAR}"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotDao.java":[{"add":["112","    return executeLargeInputs(componentUuidFromDatePairs, partition -> mapper(dbSession).selectFinishedByComponentUuidsAndFromDates(partition), i -> i \/ 2);"],"delete":["34","import org.sonar.db.ce.CeActivityDto.Status;","113","    return executeLargeInputs(componentUuidFromDatePairs, partition -> mapper(dbSession).selectFinishedByComponentUuidsAndFromDates(partition, Status.SUCCESS), i -> i \/ 2);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotMapper.java":[{"add":["56","  List<SnapshotDto> selectFinishedByComponentUuidsAndFromDates(@Param(\"componentUuidFromDatePairs\") List<ComponentUuidFromDatePair> pairs);"],"delete":["26","import org.sonar.db.ce.CeActivityDto;","57","  List<SnapshotDto> selectFinishedByComponentUuidsAndFromDates(@Param(\"componentUuidFromDatePairs\") List<ComponentUuidFromDatePair> pairs,","58","    @Param(\"ceStatus\") CeActivityDto.Status ceStatus);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/SnapshotDaoTest.java":[{"add":["237","  public void selectFinishedByComponentUuidsAndFromDates_returns_processed_analysis_even_if_analysis_failed() {","250","      .containsExactlyInAnyOrder(finishedAnalysis.getUuid(), canceledAnalysis.getUuid());"],"delete":["237","  public void selectFinishedByComponentUuidsAndFromDates_ignores_unsuccessful_analysis() {","250","      .containsExactlyInAnyOrder(finishedAnalysis.getUuid());"]}]}},"5e12a8cf6011e4f95405a1f8abeee38c92245141":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/account\/_favorites.html.erb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/account\/_favorites.html.erb":[{"add":["7","      <td>","8","        <%","9","          url = ApplicationController.root_context + '\/dashboard?id=' + url_encode(f.key)","10","        %>","11","        <a href=\"<%= url -%>\" class=\"link-with-icon\">","12","          <%= qualifier_icon f %>","13","          <span><%= h f.name -%><\/span>","14","        <\/a>","15","      <\/td>"],"delete":["7","      <td><%= qualifier_icon f %> <%= link_to_resource f %><\/td>"]}]}},"d2dd76f34d2cce8162a1c408322e18299c14e6e1":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentMapper.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":[{"add":["275","    return Optional.ofNullable(mapper(session).selectBranchByKeyAndBranchKey(key, generateBranchKey(key, branch), branch));","279","    return Optional.ofNullable(mapper(session).selectPrByKeyAndBranchKey(key, generatePullRequestKey(key, pullRequestId), pullRequestId));"],"delete":["275","    return Optional.ofNullable(mapper(session).selectByKeyAndBranchKey(key, generateBranchKey(key, branch), branch));","279","    return Optional.ofNullable(mapper(session).selectByKeyAndBranchKey(key, generatePullRequestKey(key, pullRequestId), pullRequestId));"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentMapper.java":[{"add":["37","  ComponentDto selectBranchByKeyAndBranchKey(@Param(\"key\") String key, @Param(\"dbKey\") String dbKey, @Param(\"branch\") String branch);","38","","39","  @CheckForNull","40","  ComponentDto selectPrByKeyAndBranchKey(@Param(\"key\") String key, @Param(\"dbKey\") String dbKey, @Param(\"branch\") String branch);"],"delete":["37","  ComponentDto selectByKeyAndBranchKey(@Param(\"key\") String key, @Param(\"dbKey\") String dbKey, @Param(\"branch\") String branch);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["38","  <select id=\"selectBranchByKeyAndBranchKey\" parameterType=\"String\" resultType=\"Component\">","39","    select","40","      <include refid=\"componentColumns\"\/>","41","    from projects p","42","    inner join project_branches pb on pb.uuid = p.project_uuid","43","    where","45","      and pb.kee=#{branch,jdbcType=VARCHAR}","46","      and (pb.branch_type='LONG' or pb.branch_type='SHORT')","47","  <\/select>","48","","49","  <select id=\"selectPrByKeyAndBranchKey\" parameterType=\"String\" resultType=\"Component\">","50","    select","51","      <include refid=\"componentColumns\"\/>","52","    from projects p","53","    inner join project_branches pb on pb.uuid = p.project_uuid","54","    where","55","      (p.kee=#{dbKey,jdbcType=VARCHAR} OR p.kee=#{key,jdbcType=VARCHAR})","56","      and pb.kee=#{branch,jdbcType=VARCHAR}","57","      and pb.branch_type='PULL_REQUEST'"],"delete":["38","  <select id=\"selectByKeyAndBranchKey\" parameterType=\"String\" resultType=\"Component\">","39","    SELECT","40","    <include refid=\"componentColumns\"\/>","41","    FROM projects p","42","    INNER JOIN project_branches pb on pb.uuid = p.project_uuid","43","    <where>","45","      AND pb.kee=#{branch,jdbcType=VARCHAR}","46","    <\/where>"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["73","import static org.sonar.db.component.BranchType.PULL_REQUEST;","217","  @UseDataProvider(\"branchBranchTypes\")","218","  public void selectByKeyAndBranch(BranchType branchType) {","220","    ComponentDto branch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\").setBranchType(branchType));","229","  ","230","  @DataProvider","231","  public static Object[][] branchBranchTypes() {","232","    return new Object[][] {","233","      {BranchType.SHORT},","234","      {BranchType.LONG}","235","    };","236","  }","237","","238","  @Test","239","  public void selectByKeyAndPullRequest() {","240","    ComponentDto project = db.components().insertMainBranch();","241","    ComponentDto branch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\"));","242","    ComponentDto pullRequest = db.components().insertProjectBranch(project, b -> b.setKey(\"my_PR\").setBranchType(PULL_REQUEST));","243","    ComponentDto pullRequestNamedAsMainBranch = db.components().insertProjectBranch(project, b -> b.setKey(\"master\").setBranchType(PULL_REQUEST));","244","    ComponentDto pullRequestNamedAsBranch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\").setBranchType(PULL_REQUEST));","245","    ComponentDto file = db.components().insertComponent(newFileDto(pullRequest));","246","","247","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, project.getKey(), \"my_PR\").get().uuid()).isEqualTo(pullRequest.uuid());","248","    assertThat(underTest.selectByKeyAndBranch(dbSession, project.getKey(), \"master\").get().uuid()).isEqualTo(project.uuid());","249","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, project.getKey(), \"master\").get().uuid()).isEqualTo(pullRequestNamedAsMainBranch.uuid());","250","    assertThat(underTest.selectByKeyAndBranch(dbSession, branch.getKey(), \"my_branch\").get().uuid()).isEqualTo(branch.uuid());","251","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, branch.getKey(), \"my_branch\").get().uuid()).isEqualTo(pullRequestNamedAsBranch.uuid());","252","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, file.getKey(), \"my_PR\").get().uuid()).isEqualTo(file.uuid());","253","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, \"unknown\", \"my_branch\")).isNotPresent();","254","    assertThat(underTest.selectByKeyAndPullRequest(dbSession, file.getKey(), \"unknown\")).isNotPresent();","255","  }"],"delete":["216","  public void selectByKeyAndBranch() {","218","    ComponentDto branch = db.components().insertProjectBranch(project, b -> b.setKey(\"my_branch\"));"]}]}},"bb6bb844e6a8ac1bb2fd9fdafa73e4005c994806":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDao.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusAction.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityMapper.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusActionTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDao.java":[{"add":["82","  public Optional<CeActivityDto> selectLastByComponentUuidAndTaskType(DbSession dbSession, String componentUuid, String taskType) {","83","    return Optional.ofNullable(mapper(dbSession).selectLastByComponentUuidAndTaskType(componentUuid, taskType));"],"delete":["82","  public Optional<CeActivityDto> selectLastByComponentUuid(DbSession dbSession, String componentUuid) {","83","    return Optional.ofNullable(mapper(dbSession).selectLastByComponentUuid(componentUuid));","84","  }","85","","86","  public Optional<CeActivityDto> selectLastByMainComponentUuid(DbSession dbSession, String mainComponentUuid) {","87","    return Optional.ofNullable(mapper(dbSession).selectLastByMainComponentUuid(mainComponentUuid));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusAction.java":[{"add":["34","import org.sonar.db.ce.CeTaskTypes;","104","      CeActivityDto lastActivity = dbClient.ceActivityDao()","105","        .selectLastByComponentUuidAndTaskType(dbSession, component.uuid(), CeTaskTypes.REPORT).orElse(null);"],"delete":["103","      CeActivityDto lastActivity = dbClient.ceActivityDao().selectLastByComponentUuid(dbSession, component.uuid()).orElse(null);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityMapper.java":[{"add":["47","  CeActivityDto selectLastByComponentUuidAndTaskType(@Param(\"componentUuid\") String componentUuid, @Param(\"taskType\") String taskType);"],"delete":["47","  CeActivityDto selectLastByComponentUuid(@Param(\"componentUuid\") String componentUuid);","48","","49","  @CheckForNull","50","  CeActivityDto selectLastByMainComponentUuid(@Param(\"mainComponentUuid\") String mainComponentUuid);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusActionTest.java":[{"add":["51","import static org.sonar.db.ce.CeTaskTypes.REPORT;","166","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis, REPORT);","176","    insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis2, REPORT);","177","    insertActivity(\"task-uuid\" + counter++, project, SUCCESS, null, \"PROJECT_EXPORT\");","193","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis, REPORT);","204","    insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis2, REPORT);","205","    insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, null, \"PROJECT_EXPORT\");","225","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis, REPORT);","236","    insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis2, REPORT);","237","    insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, null, \"PROJECT_EXPORT\");","253","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis, REPORT);","258","    CeActivityDto branchActivity = insertActivity(\"task-uuid\" + counter++, branchWithWarning, SUCCESS, branchAnalysis, REPORT);","263","    insertActivity(\"task-uuid\" + counter++, branchWithoutWarning, SUCCESS, branchWithoutWarningAnalysis, REPORT);","270","    CeActivityDto prActivity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, prAnalysis, REPORT);","346","  private CeActivityDto insertActivity(String taskUuid, ComponentDto component, CeActivityDto.Status status,","347","    @Nullable SnapshotDto analysis, String taskType) {","349","    queueDto.setTaskType(taskType);","357","    activityDto.setTaskType(taskType);","358","    activityDto.setComponentUuid(component.uuid());"],"delete":["37","import org.sonar.db.ce.CeTaskTypes;","166","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis);","176","    insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis2);","192","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis);","203","    insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis2);","223","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis);","234","    insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis2);","250","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis);","255","    CeActivityDto branchActivity = insertActivity(\"task-uuid\" + counter++, branchWithWarning, SUCCESS, branchAnalysis);","260","    insertActivity(\"task-uuid\" + counter++, branchWithoutWarning, SUCCESS, branchWithoutWarningAnalysis);","267","    CeActivityDto prActivity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, prAnalysis);","343","  private CeActivityDto insertActivity(String taskUuid, ComponentDto component, CeActivityDto.Status status, @Nullable SnapshotDto analysis) {","345","    queueDto.setTaskType(CeTaskTypes.REPORT);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":[{"add":["235","  <select id=\"selectLastByComponentUuidAndTaskType\" parameterType=\"map\" resultType=\"org.sonar.db.ce.CeActivityDto\">","243","      and ca.task_type = #{taskType,jdbcType=VARCHAR}"],"delete":["235","  <select id=\"selectLastByComponentUuid\" parameterType=\"map\" resultType=\"org.sonar.db.ce.CeActivityDto\">","246","  <select id=\"selectLastByMainComponentUuid\" parameterType=\"map\" resultType=\"org.sonar.db.ce.CeActivityDto\">","247","    select","248","      <include refid=\"columns\"\/>","249","    from ce_activity ca","250","    left outer join ce_scanner_context csc on","251","      ca.uuid = csc.task_uuid","252","    where","253","      ca.main_component_uuid = #{mainComponentUuid,jdbcType=VARCHAR}","254","      and ca.main_is_last = ${_true}","255","  <\/select>","256",""]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":[{"add":["673","  @Test","674","  public void selectLastByComponentUuidAndTaskType_returns_task_of_given_type() {","675","    insert(\"TASK_1\", \"VIEW_REFRESH\", MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","676","    insert(\"TASK_2\", CeTaskTypes.REPORT, MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","677","    insert(\"TASK_3\", \"PROJECT_EXPORT\", MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","678","    insert(\"TASK_4\", \"PROJECT_IMPORT\", MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","679","    db.commit();","680","","681","    Optional<CeActivityDto> result = underTest.selectLastByComponentUuidAndTaskType(db.getSession(), MAINCOMPONENT_1, \"PROJECT_EXPORT\");","682","","683","    assertThat(result).hasValueSatisfying(value -> assertThat(value.getUuid()).isEqualTo(\"TASK_3\"));","684","  }","685","","686","  @Test","687","  public void selectLastByComponentUuidAndTaskType_returns_empty_if_task_of_given_type_does_not_exist() {","688","    insert(\"TASK_1\", CeTaskTypes.REPORT, MAINCOMPONENT_1, SUCCESS);","689","    db.commit();","690","","691","    Optional<CeActivityDto> result = underTest.selectLastByComponentUuidAndTaskType(db.getSession(), MAINCOMPONENT_1, \"PROJECT_EXPORT\");","692","","693","    assertThat(result).isEmpty();","694","  }","695",""],"delete":[]}]}},"9155f18ee43b7447aaf1665f17ef4cd668f0e618":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasuresTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasures.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokens.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokensTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasuresTest.java":[{"add":["21","import org.junit.Before;","54","  private static final int FILE_5_REF = 1263;","55","","60","  private static final FileAttributes FILE_5_ATTRS = mock(FileAttributes.class);","75","          builder(FILE, FILE_4_REF).setFileAttributes(FILE_4_ATTRS).build(),","76","          builder(FILE, FILE_5_REF).setFileAttributes(FILE_5_ATTRS).build())","91","  @Before","92","  public void before() {","93","    when(FILE_5_ATTRS.isUnitTest()).thenReturn(true);","94","  }","95","","107","  public void dont_compute_duplicated_blocks_for_test_files() {","108","    duplicationRepository.addDuplication(FILE_5_REF, new TextBlock(1, 1), new TextBlock(3, 3));","109","    duplicationRepository.addDuplication(FILE_5_REF, new TextBlock(2, 2), new TextBlock(3, 3));","110","","111","    underTest.execute();","112","","113","    assertRawMeasureValue(FILE_5_REF, DUPLICATED_BLOCKS_KEY, 0);","114","    assertRawMeasureValue(FILE_5_REF, DUPLICATED_FILES_KEY, 0);","115","","116","  }","117","","118","  @Test","274","    \/\/ this should have no effect as it's a test file","275","    when(FILE_5_ATTRS.getLines()).thenReturn(1_000_000);","276","","303","  public void dont_compute_duplicated_lines_density_when_lines_is_zero() {"],"delete":["71","          builder(FILE, FILE_4_REF).setFileAttributes(FILE_4_ATTRS).build())","278","  public void not_compute_duplicated_lines_density_when_lines_is_zero() {"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/duplication\/DuplicationMeasures.java":[{"add":["104","      if (leaf.getType() == Component.Type.FILE && !leaf.getFileAttributes().isUnitTest()) {","126","        InnerDuplicate[] innerDuplicates = duplication.getDuplicates().stream()","127","          .filter(x -> x instanceof InnerDuplicate)","128","          .map(d -> (InnerDuplicate) d)","129","          .toArray(InnerDuplicate[]::new);","130","","131","        for (InnerDuplicate innerDuplicate : innerDuplicates) {"],"delete":["39","import static com.google.common.collect.FluentIterable.from;","90","    protected DuplicationCounter() {","91","      this(null);","92","    }","93","","109","      if (leaf.getType() == Component.Type.FILE) {","131","        for (InnerDuplicate innerDuplicate : from(duplication.getDuplicates()).filter(InnerDuplicate.class)) {"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokens.java":[{"add":["29","import org.sonar.api.utils.log.Logger;","30","import org.sonar.api.utils.log.Loggers;","37","  private static final Logger LOG = Loggers.get(DefaultCpdTokens.class);","39","  private DefaultInputFile inputFile;","45","  private boolean loggedTestCpdWarning = false;","53","    this.inputFile = (DefaultInputFile) requireNonNull(inputFile, \"file can't be null\");","91","    sb.append(image);","98","    if (inputFile.isExcludedForDuplication()) {","99","      return true;","100","    }","101","    if (inputFile.type() == InputFile.Type.TEST) {","102","      if (!loggedTestCpdWarning) {","103","        LOG.warn(\"Duplication reported for '{}' will be ignored because it's a test file.\", inputFile);","104","        loggedTestCpdWarning = true;","105","      }","106","      return true;","107","    }","108","    return false;"],"delete":["35","","37","  private InputFile inputFile;","50","    this.inputFile = requireNonNull(inputFile, \"file can't be null\");","81","    String value = image;","82","","90","    sb.append(value);","97","    return ((DefaultInputFile) inputFile).isExcludedForDuplication();"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/cpd\/internal\/DefaultCpdTokensTest.java":[{"add":["22","import org.sonar.api.batch.fs.InputFile;","35","  private final SensorStorage sensorStorage = mock(SensorStorage.class);","84","  public void dont_save_for_test_files() {","85","    DefaultInputFile testInputFile = new TestInputFileBuilder(\"foo\", \"src\/Foo.java\")","86","      .setLines(2)","87","      .setOriginalLineStartOffsets(new int[] {0, 50})","88","      .setOriginalLineEndOffsets(new int[] {49, 100})","89","      .setLastValidOffset(101)","90","      .setType(InputFile.Type.TEST)","91","      .build();","92","","93","    DefaultCpdTokens tokens = new DefaultCpdTokens(sensorStorage)","94","      .onFile(testInputFile)","95","      .addToken(testInputFile.newRange(1, 2, 1, 5), \"foo\");","96","","97","    tokens.save();","98","    verifyZeroInteractions(sensorStorage);","99","    assertThat(tokens.getTokenLines()).isEmpty();","100","  }","101","","102","  @Test"],"delete":["44","    SensorStorage sensorStorage = mock(SensorStorage.class);","57","    SensorStorage sensorStorage = mock(SensorStorage.class);","71","    SensorStorage sensorStorage = mock(SensorStorage.class);","86","    SensorStorage sensorStorage = mock(SensorStorage.class);"]}]}},"00056ffb7e4bb18ad4ce36b98d2671fd3902fad3":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/ListFooter.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/ListFooter.tsx":[{"add":["29","  total?: number;","41","  const hasMore = props.total && props.total > props.count;"],"delete":["29","  total: number;","41","  const hasMore = props.total > props.count;"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":[{"add":["26","import ListFooter from '..\/..\/..\/components\/controls\/ListFooter';","38","  page: number;","40","  ready: boolean;","41","  total: number;","50","    page: 1,","51","    projects: null,","52","    ready: true,","53","    total: 0","77","    const data = { key: this.props.profile.key, page: this.state.page };","81","          this.setState(state => ({","82","            projects: state.projects ? [...state.projects, ...r.results] : r.results,","83","            total: r.paging.total,","84","            loading: false,","85","            ready: true","86","          }));","93","  loadMore = () => {","94","    this.setState(state => ({ ready: false, page: state.page + 1 }), this.loadProjects);","95","  };","96","","135","      <>","136","        <ul>","137","          {projects.map(project => (","138","            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.uuid}>","139","              <Link","140","                className=\"link-with-icon\"","141","                to={{ pathname: '\/dashboard', query: { id: project.key } }}>","142","                <QualifierIcon qualifier=\"TRK\" \/> <span>{project.name}<\/span>","143","              <\/Link>","144","            <\/li>","145","          ))}","146","        <\/ul>","147","        <ListFooter","148","          count={projects.length}","149","          loadMore={this.loadMore}","150","          ready={this.state.ready}","151","          total={this.state.total}","152","        \/>","153","      <\/>"],"delete":["37","  more?: boolean;","47","    projects: null","71","    const data = { key: this.props.profile.key };","75","          this.setState({","76","            projects: r.results,","77","            more: r.more,","78","            loading: false","79","          });","124","      <ul>","125","        {projects.map(project => (","126","          <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.uuid}>","127","            <Link","128","              className=\"link-with-icon\"","129","              to={{ pathname: '\/dashboard', query: { id: project.key } }}>","130","              <QualifierIcon qualifier=\"TRK\" \/> <span>{project.name}<\/span>","131","            <\/Link>","132","          <\/li>","133","        ))}","134","      <\/ul>"]}]}},"b7976ff3de0187d28cbe371a858d51af32913853":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticator.java":"ADD","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/LoginPage.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticationModule.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticatorTest.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/RealmAuthenticationTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImplTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/HttpHeadersAuthenticationTest.java":"ADD","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/GroupTester.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserMapper.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImpl.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImpl.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category5Suite.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/BaseIdentityProviderTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImplTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/OAuth2IdentityProviderTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/user\/UserDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserDao.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticator.java":[{"add":[],"delete":[]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/pageobjects\/LoginPage.java":[{"add":["47","  public Navigation useBaseAuth() {","48","    Selenide.$(\".oauth-providers a\").click();","49","    return Selenide.page(Navigation.class);","50","  }","51",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticationModule.java":[{"add":["53","      HttpHeadersAuthenticator.class,"],"delete":["53","      SsoAuthenticator.class,"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/HttpHeadersAuthenticatorTest.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/RealmAuthenticationTest.java":[{"add":["24","import java.util.Collections;","35","import org.sonarqube.ws.UserGroups.Group;","36","import org.sonarqube.ws.Users;","38","import org.sonarqube.ws.client.users.ChangePasswordRequest;","41","import static java.util.Arrays.asList;","44","import static util.ItUtils.expectHttpError;","72","  public void synchronize_details_and_groups() {","74","    String username = tester.users().generateLogin();","76","    Group group = tester.groups().generate();","79","    updateUsersInExtAuth(ImmutableMap.of(","80","      username + \".password\", password,","81","      username + \".name\", \"Tester Testerovich\",","82","      username + \".email\", \"tester@example.org\",","83","      username + \".groups\", group.getName()));","84","","87","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(username)).getUsersList())","88","      .extracting(User::getLogin, User::getName, User::getEmail,","89","        User::getExternalIdentity, User::getExternalProvider, User::getLocal, u -> u.getGroups().getGroupsList())","90","      .containsExactlyInAnyOrder(tuple(username, \"Tester Testerovich\", \"tester@example.org\", username, \"sonarqube\", false, asList(group.getName(), \"sonar-users\")));","93","    Users.CreateWsResponse.User adminUser = tester.users().generateAdministrator();","94","    SystemInfoPage page = tester.openBrowser().logIn().submitCredentials(adminUser.getLogin()).openSystemInfo();","102","  public void update_details_by_default() {","104","    String username = tester.users().generateLogin();","108","    updateUsersInExtAuth(ImmutableMap.of(","109","      username + \".password\", password,","110","      username + \".name\", \"Tester Testerovich\",","111","      username + \".email\", \"tester@example.org\"));","112","","115","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(username)).getUsersList())","116","      .extracting(User::getLogin, User::getName, User::getEmail)","117","      .containsExactlyInAnyOrder(tuple(username, \"Tester Testerovich\", \"tester@example.org\"));","120","    updateUsersInExtAuth(ImmutableMap.of(","121","      username + \".password\", password,","122","      username + \".name\", \"Tester2 Testerovich\",","123","      username + \".email\", \"tester2@example.org\"));","124","","129","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(username)).getUsersList())","130","      .extracting(User::getLogin, User::getName, User::getEmail)","131","      .containsExactlyInAnyOrder(tuple(username, \"Tester2 Testerovich\", \"tester2@example.org\"));","138","  public void does_not_fallback() {","140","    String login = tester.users().generateLogin();","144","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", password));","149","    updateUsersInExtAuth(Collections.emptyMap());","158","  public void admin_is_local_account_by_default() {","165","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", remotePassword));","176","  public void create_new_users() {","178","    String username = tester.users().generateLogin();","186","    updateUsersInExtAuth(ImmutableMap.of(username + \".password\", password));","189","    verifyUser(username);","195","  public void reactivate_deleted_user() {","197","    Users.CreateWsResponse.User adminUser = tester.users().generateAdministrator();","200","    String login = tester.users().generateLogin();","202","    UsersManagementPage page = nav.logIn().submitCredentials(adminUser.getLogin()).openUsersManagement();","204","      .createUser(login)","206","      .getUser(login)","210","      .logIn().submitWrongCredentials(login, login)","215","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", password));","218","    verifyUser(login);","227","    String login = tester.users().generateLogin();","228","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", login));","229","    verifyAuthenticationIsOk(login, login);","232","    Users.CreateWsResponse.User techUser = tester.users().generate(u -> u.setPassword(\"old_password\"));","233","    verifyAuthenticationIsOk(techUser.getLogin(), \"old_password\");","236","    tester.users().service().changePassword(new ChangePasswordRequest().setLogin(techUser.getLogin()).setPassword(\"new_password\"));","237","    verifyAuthenticationIsOk(techUser.getLogin(), \"new_password\");","240","    expectHttpError(400, () -> tester.users().service().changePassword(new ChangePasswordRequest().setLogin(login).setPassword(\"new_password\")));","249","    String login = tester.users().generateLogin();","253","    updateUsersInExtAuth(ImmutableMap.of(login + \".password\", password));","256","    verifyUser(login);","282","    Users.CreateWsResponse.User user = tester.users().generate(u -> u.setName(\"Tester Testerovich\")","284","      .setPassword(null)","287","    verifyAuthenticationIsNotOk(user.getLogin(), \"123\");","290","      user.getLogin() + \".password\", \"123\",","291","      user.getLogin() + \".name\", \"Tester Testerovich\",","292","      user.getLogin() + \".email\", \"tester@example.org\"));","294","    verifyAuthenticationIsOk(user.getLogin(), \"123\");","295","    verifyUser(user.getLogin());","300","    Users.CreateWsResponse.User user = tester.users().generate();","301","    String username = tester.users().generateLogin();","303","","304","    updateUsersInExtAuth(ImmutableMap.of(","305","      username + \".password\", password,","306","      username + \".email\", user.getEmail()));","311","  @Test","312","  public void fail_to_authenticate_user_when_email_already_exists_on_several_users() {","313","    Users.CreateWsResponse.User user1 = tester.users().generate(u -> u.setEmail(\"user@email.com\"));","314","    Users.CreateWsResponse.User user2 = tester.users().generate(u -> u.setEmail(\"user@email.com\"));","315","    String username = tester.users().generateLogin();","316","    String password = \"123\";","318","    updateUsersInExtAuth(ImmutableMap.of(","319","      username + \".password\", password,","320","      username + \".email\", \"user@email.com\"));","321","","322","    verifyAuthenticationIsNotOk(username, password);","329","    tester.settings().setGlobalSettings(\"sonar.fakeauthenticator.users\", format(users));","345","    tester.as(login, password).wsClient().system().ping();","349","    expectHttpError(401, () -> tester.as(login, password).wsClient().system().ping());","352","  private void verifyUser(String login) {","353","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(login)).getUsersList())","354","      .extracting(User::getLogin, User::getExternalIdentity, User::getExternalProvider, User::getLocal)","355","      .containsExactlyInAnyOrder(tuple(login, login, \"sonarqube\", false));"],"delete":["23","import com.google.common.collect.Maps;","27","import org.junit.After;","28","import org.junit.Before;","33","import org.sonar.wsclient.Host;","34","import org.sonar.wsclient.Sonar;","35","import org.sonar.wsclient.base.HttpException;","36","import org.sonar.wsclient.connectors.HttpClient4Connector;","37","import org.sonar.wsclient.services.AuthenticationQuery;","38","import org.sonar.wsclient.user.UserParameters;","44","import org.sonarqube.ws.client.GetRequest;","45","import org.sonarqube.ws.client.WsResponse;","46","import org.sonarqube.ws.client.users.CreateRequest;","48","import util.user.UserRule;","50","import static java.net.HttpURLConnection.HTTP_OK;","51","import static java.net.HttpURLConnection.HTTP_UNAUTHORIZED;","54","import static org.junit.Assert.fail;","56","import static util.ItUtils.newUserWsClient;","58","import static util.ItUtils.resetSettings;","59","import static util.selenium.Selenese.runSelenese;","68","  private static final String TECH_USER = \"techUser\";","69","  private static final String USER_LOGIN = \"tester\";","70","  private static final String ADMIN_USER_LOGIN = \"admin-user\";","71","","75","  \/**","76","   * Property from security-plugin for user management.","77","   *\/","78","  private static final String USERS_PROPERTY = \"sonar.fakeauthenticator.users\";","79","","87","  public UserRule userRule = UserRule.from(orchestrator);","88","","89","  @Rule","92","  @Before","93","  @After","94","  public void resetData() {","95","    resetSettings(orchestrator, null, USERS_PROPERTY, \"sonar.security.updateUserAttributes\");","96","  }","97","","98","  @Before","99","  public void initAdminUser() {","100","    userRule.createAdminUser(ADMIN_USER_LOGIN, ADMIN_USER_LOGIN);","101","  }","102","","103","  @After","104","  public void deleteAdminUser() {","105","    userRule.resetUsers();","106","  }","107","","113","  public void shouldSynchronizeDetailsAndGroups() {","115","    String username = USER_LOGIN;","117","    Map<String, String> users = Maps.newHashMap();","120","    users.put(username + \".password\", password);","121","    users.put(username + \".name\", \"Tester Testerovich\");","122","    users.put(username + \".email\", \"tester@example.org\");","123","    users.put(username + \".groups\", \"sonar-user\");","124","    updateUsersInExtAuth(users);","127","    verifyUser();","128","","129","    \/\/ with external details and groups","130","    runSelenese(orchestrator, \"\/user\/ExternalAuthenticationTest\/external-user-details.html\");","133","    SystemInfoPage page = tester.openBrowser().logIn().submitCredentials(ADMIN_USER_LOGIN).openSystemInfo();","141","  public void shouldUpdateDetailsByDefault() {","143","    String username = USER_LOGIN;","145","    Map<String, String> users = Maps.newHashMap();","148","    users.put(username + \".password\", password);","149","    users.put(username + \".name\", \"Tester Testerovich\");","150","    users.put(username + \".email\", \"tester@example.org\");","151","    users.put(username + \".groups\", \"sonar-user\");","152","    updateUsersInExtAuth(users);","155","    verifyUser();","156","","157","    \/\/ with external details and groups","158","    \/\/ TODO replace by WS ? Or with new Selenese utils","159","    runSelenese(orchestrator, \"\/user\/ExternalAuthenticationTest\/external-user-details.html\");","162","    users.put(username + \".name\", \"Tester2 Testerovich\");","163","    users.put(username + \".email\", \"tester2@example.org\");","164","    updateUsersInExtAuth(users);","169","    runSelenese(orchestrator, \"\/user\/ExternalAuthenticationTest\/external-user-details2.html\");","176","  public void shouldNotFallback() {","178","    String login = USER_LOGIN;","180","    Map<String, String> users = Maps.newHashMap();","183","    users.put(login + \".password\", password);","184","    updateUsersInExtAuth(users);","189","    users.remove(login + \".password\");","190","    updateUsersInExtAuth(users);","199","  public void adminIsLocalAccountByDefault() {","204","    Map<String, String> users = Maps.newHashMap();","207","    users.put(login + \".password\", remotePassword);","208","    updateUsersInExtAuth(users);","219","  public void shouldCreateNewUsers() {","221","    String username = USER_LOGIN;","223","    Map<String, String> users = Maps.newHashMap();","230","    users.put(username + \".password\", password);","231","    updateUsersInExtAuth(users);","234","    verifyUser();","240","  public void shouldAutomaticallyReactivateDeletedUser() {","245","    UsersManagementPage page = nav.logIn().submitCredentials(ADMIN_USER_LOGIN).openUsersManagement();","247","      .createUser(USER_LOGIN)","249","      .getUser(USER_LOGIN)","253","      .logIn().submitWrongCredentials(USER_LOGIN, USER_LOGIN)","257","    String login = USER_LOGIN;","259","    Map<String, String> users = Maps.newHashMap();","260","    users.put(login + \".password\", password);","261","    updateUsersInExtAuth(users);","264","    verifyUser();","273","    updateUsersInExtAuth(ImmutableMap.of(USER_LOGIN + \".password\", USER_LOGIN));","274","    verifyAuthenticationIsOk(USER_LOGIN, USER_LOGIN);","277","    createUserInDb(TECH_USER, \"old_password\");","278","    assertThat(checkAuthenticationThroughWebService(TECH_USER, \"old_password\")).isTrue();","281","    updateUserPasswordInDb(TECH_USER, \"new_password\");","282","    assertThat(checkAuthenticationThroughWebService(TECH_USER, \"new_password\")).isTrue();","285","    try {","286","      updateUserPasswordInDb(USER_LOGIN, \"new_password\");","287","      fail();","288","    } catch (HttpException e) {","289","      verifyHttpException(e, 400);","290","    }","299","    String login = USER_LOGIN;","301","    Map<String, String> users = Maps.newHashMap();","304","    users.put(login + \".password\", password);","305","    updateUsersInExtAuth(users);","308","    verifyUser();","334","    tester.wsClient().users().create(new CreateRequest()","335","      .setLogin(USER_LOGIN)","336","      .setName(\"Tester Testerovich\")","340","    verifyAuthenticationIsNotOk(USER_LOGIN, \"123\");","343","      USER_LOGIN + \".password\", \"123\",","344","      USER_LOGIN + \".name\", \"Tester Testerovich\",","345","      USER_LOGIN + \".email\", \"tester@example.org\"));","347","    verifyAuthenticationIsOk(USER_LOGIN, \"123\");","348","    verifyUser();","353","    userRule.createUser(\"another\", \"Another\", \"tester@example.org\", \"another\");","354","","355","    String username = USER_LOGIN;","357","    Map<String, String> users = Maps.newHashMap();","358","    users.put(username + \".password\", password);","359","    users.put(username + \".name\", \"Tester Testerovich\");","360","    users.put(username + \".email\", \"tester@example.org\");","361","    users.put(username + \".groups\", \"sonar-user\");","362","    updateUsersInExtAuth(users);","367","  private void verifyHttpException(Exception e, int expectedCode) {","368","    assertThat(e).isInstanceOf(HttpException.class);","369","    HttpException exception = (HttpException) e;","370","    assertThat(exception.status()).isEqualTo(expectedCode);","371","  }","373","  private boolean checkAuthenticationThroughWebService(String login, String password) {","374","    return createWsClient(login, password).find(new AuthenticationQuery()).isValid();","381","    tester.settings().setGlobalSettings(USERS_PROPERTY, format(users));","382","  }","383","","384","  private void createUserInDb(String login, String password) {","385","    orchestrator.getServer().adminWsClient().userClient().create(UserParameters.create().login(login).name(login)","386","      .password(password).passwordConfirmation(password));","387","  }","388","","389","  private void updateUserPasswordInDb(String login, String newPassword) {","390","    orchestrator.getServer().adminWsClient().post(\"\/api\/users\/change_password\", \"login\", login, \"password\", newPassword);","391","  }","392","","393","  \/**","394","   * Utility method to create {@link Sonar} with specified {@code username} and {@code password}.","395","   * Orchestrator does not provide such method.","396","   *\/","397","  private Sonar createWsClient(String username, String password) {","398","    return new Sonar(new HttpClient4Connector(new Host(orchestrator.getServer().getUrl(), username, password)));","414","    assertThat(checkAuthenticationWithWebService(login, password).code()).isEqualTo(HTTP_OK);","418","    assertThat(checkAuthenticationWithWebService(login, password).code()).isEqualTo(HTTP_UNAUTHORIZED);","421","  private void verifyUser(){","422","    assertThat(tester.wsClient().users().search(new SearchRequest().setQ(USER_LOGIN)).getUsersList())","423","    .extracting(User::getLogin, User::getExternalIdentity, User::getExternalProvider, User::getLocal)","424","    .containsExactlyInAnyOrder(tuple(USER_LOGIN, USER_LOGIN, \"sonarqube\", false));","425","  }","426","","427","  private WsResponse checkAuthenticationWithWebService(String login, String password) {","428","    \/\/ Call any WS","429","    return newUserWsClient(orchestrator, login, password).wsConnector().call(new GetRequest(\"api\/rules\/search\"));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImplTest.java":[{"add":["279","    db.users().insertUser(u -> u.setEmail(\"john@email.com\"));","280","    Source source = Source.realm(AuthenticationEvent.Method.FORM, IDENTITY_PROVIDER.getName());","281","","282","    expectedException.expect(authenticationException().from(source)","283","      .withLogin(USER_IDENTITY.getLogin())","284","      .andPublicMessage(\"You can't sign up because email 'john@email.com' is already used by an existing user. \" +","285","        \"This means that you probably already registered with another account.\"));","286","    expectedException.expectMessage(\"Email 'john@email.com' is already used\");","287","","288","    underTest.authenticate(UserIdentityAuthenticatorParameters.builder()","289","      .setUserIdentity(USER_IDENTITY)","290","      .setProvider(IDENTITY_PROVIDER)","291","      .setSource(source)","292","      .setExistingEmailStrategy(FORBID)","293","      .setExistingEmailStrategy(ExistingEmailStrategy.FORBID)","294","      .setUpdateLoginStrategy(UpdateLoginStrategy.ALLOW)","295","      .build());","296","  }","297","","298","  @Test","299","  public void throw_AuthenticationException_when_authenticating_new_user_and_email_already_exists_multiple_times() {","300","    db.users().insertUser(u -> u.setEmail(\"john@email.com\"));","301","    db.users().insertUser(u -> u.setEmail(\"john@email.com\"));"],"delete":["279","    db.users().insertUser(newUserDto()","280","      .setLogin(\"Existing user with same email\")","281","      .setActive(true)","282","      .setEmail(\"john@email.com\"));"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/HttpHeadersAuthenticationTest.java":[{"add":[],"delete":[]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/GroupTester.java":[{"add":["72","  public GroupTester addMemberToGroups(@Nullable Organizations.Organization organization, String userLogin, String... groups) {","76","        .setOrganization(organization != null ? organization.getKey() : null)"],"delete":["72","  public GroupTester addMemberToGroups(Organizations.Organization organization, String userLogin, String... groups) {","76","        .setOrganization(organization.getKey())"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserMapper.java":[{"add":["59","  List<UserDto> selectByEmail(String email);"],"delete":["59","  @CheckForNull","60","  UserDto selectByEmail(String email);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImpl.java":[{"add":["30","  private final HttpHeadersAuthenticator httpHeadersAuthenticator;","32","  public AuthenticatorsImpl(JwtHttpHandler jwtHttpHandler, BasicAuthenticator basicAuthenticator, HttpHeadersAuthenticator httpHeadersAuthenticator) {","35","    this.httpHeadersAuthenticator = httpHeadersAuthenticator;","42","    Optional<UserDto> user = httpHeadersAuthenticator.authenticate(request, response);"],"delete":["30","  private final SsoAuthenticator ssoAuthenticator;","32","  public AuthenticatorsImpl(JwtHttpHandler jwtHttpHandler, BasicAuthenticator basicAuthenticator, SsoAuthenticator ssoAuthenticator) {","35","    this.ssoAuthenticator = ssoAuthenticator;","42","    Optional<UserDto> user = ssoAuthenticator.authenticate(request, response);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserIdentityAuthenticatorImpl.java":[{"add":["25","import java.util.List;","138","    List<UserDto> existingUsers = dbClient.userDao().selectByEmail(dbSession, email);","139","    if (existingUsers.isEmpty()) {","140","      return Optional.empty();","141","    }","142","    if (existingUsers.size() > 1) {","143","      throw generateExistingEmailError(authenticatorParameters, email);","144","    }","145","","146","    UserDto existingUser = existingUsers.get(0);","162","        throw generateExistingEmailError(authenticatorParameters, email);","268","  private static AuthenticationException generateExistingEmailError(UserIdentityAuthenticatorParameters authenticatorParameters, String email) {","269","    return AuthenticationException.newBuilder()","270","      .setSource(authenticatorParameters.getSource())","271","      .setLogin(authenticatorParameters.getUserIdentity().getLogin())","272","      .setMessage(format(\"Email '%s' is already used\", email))","273","      .setPublicMessage(format(","274","        \"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\",","275","        email))","276","      .build();","277","  }","278",""],"delete":["137","    UserDto existingUser = dbClient.userDao().selectByEmail(dbSession, email);","153","        throw AuthenticationException.newBuilder()","154","          .setSource(authenticatorParameters.getSource())","155","          .setLogin(authenticatorParameters.getUserIdentity().getLogin())","156","          .setMessage(format(\"Email '%s' is already used\", email))","157","          .setPublicMessage(format(","158","            \"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\",","159","            email))","160","          .build();"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category5Suite.java":[{"add":["39","import org.sonarqube.tests.user.HttpHeadersAuthenticationTest;","63","  HttpHeadersAuthenticationTest.class,"],"delete":["41","import org.sonarqube.tests.user.SsoAuthenticationTest;","63","  SsoAuthenticationTest.class,"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/BaseIdentityProviderTest.java":[{"add":["21","import com.codeborne.selenide.Condition;","42","import static com.codeborne.selenide.Selenide.$;","43","import static java.lang.String.format;","44","import static java.nio.charset.StandardCharsets.UTF_8;","45","import static org.apache.commons.io.FileUtils.readFileToString;","109","    tester.openBrowser()","110","      .logIn()","111","      .useBaseAuth();","113","    $(\"#bd\").shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"));","123","    tester.openBrowser()","124","      .logIn()","125","      .useBaseAuth();","127","    $(\"#bd\").shouldHave(Condition.text(","128","      format(\"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\", USER_EMAIL)));","129","    assertThat(readFileToString(ORCHESTRATOR.getServer().getWebLogs(), UTF_8))","134","  public void fail_to_authenticate_user_when_email_already_exists_on_several_users() {","135","    enablePlugin();","136","    setUserCreatedByAuthPlugin(USER_LOGIN, USER_PROVIDER_ID, USER_PROVIDER_LOGIN, USER_NAME, USER_EMAIL);","137","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","138","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","139","","140","    tester.openBrowser()","141","      .logIn()","142","      .useBaseAuth();","143","","144","    $(\"#bd\").shouldHave(Condition.text(","145","      format(\"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\", USER_EMAIL)));","146","    assertThat(tester.users().getByLogin(USER_LOGIN)).isNotPresent();","147","  }","148","","149","  @Test","155","    tester.openBrowser()","156","      .logIn()","157","      .useBaseAuth();","159","    $(\"#bd\")","160","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator.\"))","161","      .shouldHave(Condition.text(format(\"Reason: '%s' users are not allowed to sign up\", FAKE_PROVIDER_KEY)));","221","    tester.openBrowser()","222","      .logIn()","223","      .useBaseAuth();","225","    $(\"#bd\")","226","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"))","227","      .shouldHave(Condition.text(\"Reason: A functional error has happened\"));","228","    assertThat(readFileToString(ORCHESTRATOR.getServer().getWebLogs(), UTF_8))","229","      .doesNotContain(\"A functional error has happened\")","230","      .doesNotContain(\"UnauthorizedException\");"],"delete":["23","import java.io.File;","28","import org.apache.commons.io.FileUtils;","46","import static util.selenium.Selenese.runSelenese;","107","    runSelenese(ORCHESTRATOR, \"\/user\/BaseIdentityProviderTest\/display_unauthorized_page_when_authentication_failed.html\");","118","    runSelenese(ORCHESTRATOR, \"\/user\/BaseIdentityProviderTest\/fail_when_email_already_exists.html\");","120","    File logFile = ORCHESTRATOR.getServer().getWebLogs();","121","    assertThat(FileUtils.readFileToString(logFile))","131","    runSelenese(ORCHESTRATOR, \"\/user\/BaseIdentityProviderTest\/fail_to_authenticate_when_not_allowed_to_sign_up.html\");","192","    runSelenese(ORCHESTRATOR,","193","      \"\/user\/BaseIdentityProviderTest\/display_message_in_ui_but_not_in_log_when_unauthorized_exception.html\");","195","    File logFile = ORCHESTRATOR.getServer().getWebLogs();","196","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"A functional error has happened\");","197","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"UnauthorizedException\");","198",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/AuthenticatorsImplTest.java":[{"add":["42","  private HttpHeadersAuthenticator httpHeadersAuthenticator = mock(HttpHeadersAuthenticator.class);","43","  private Authenticators underTest = new AuthenticatorsImpl(jwtHttpHandler, basicAuthenticator, httpHeadersAuthenticator);","47","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","57","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","69","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.of(user));","74","    verify(httpHeadersAuthenticator).authenticate(request, response);","82","    when(httpHeadersAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());"],"delete":["42","  private SsoAuthenticator ssoAuthenticator = mock(SsoAuthenticator.class);","43","  private Authenticators underTest = new AuthenticatorsImpl(jwtHttpHandler, basicAuthenticator, ssoAuthenticator);","47","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","57","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());","69","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.of(user));","74","    verify(ssoAuthenticator).authenticate(request, response);","82","    when(ssoAuthenticator.authenticate(request, response)).thenReturn(Optional.empty());"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/user\/OAuth2IdentityProviderTest.java":[{"add":["40","import static java.lang.String.format;","41","import static java.nio.charset.StandardCharsets.UTF_8;","42","import static org.apache.commons.io.FileUtils.readFileToString;","139","    tester.openBrowser()","140","      .logIn()","141","      .useOAuth2();","143","    $(\"#bd\").shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"));","153","    tester.openBrowser()","154","      .logIn()","155","      .useOAuth2();","157","    $(\"#bd\")","158","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator.\"))","159","      .shouldHave(Condition.text(format(\"Reason: '%s' users are not allowed to sign up\", FAKE_PROVIDER_KEY)));","169","    tester.openBrowser()","170","      .logIn()","171","      .useOAuth2();","173","    $(\"#bd\")","174","      .shouldHave(Condition.text(\"You're not authorized to access this page. Please contact the administrator\"))","175","      .shouldHave(Condition.text(\"Reason: A functional error has happened\"));","176","    assertThat(readFileToString(orchestrator.getServer().getWebLogs(), UTF_8))","177","      .doesNotContain(\"A functional error has happened\")","178","      .doesNotContain(\"UnauthorizedException\");","220","  public void fail_to_authenticate_user_when_email_already_exists_on_several_users() {","221","    simulateRedirectionToCallback();","222","    enablePlugin();","223","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","224","    tester.users().generate(u -> u.setEmail(USER_EMAIL));","225","","226","    tester.openBrowser()","227","      .logIn()","228","      .useOAuth2();","229","","230","    $(\"#bd\").shouldHave(Condition.text(","231","      format(\"You can't sign up because email '%s' is already used by an existing user. This means that you probably already registered with another account.\", USER_EMAIL)));","232","    assertThatUserDoesNotExist(USER_LOGIN);","233","  }","234","","235","  @Test"],"delete":["23","import java.io.File;","27","import org.apache.commons.io.FileUtils;","39","import util.selenium.Selenese;","139","    Selenese.runSelenese(orchestrator, \"\/user\/OAuth2IdentityProviderTest\/display_unauthorized_page_when_authentication_failed.html\");","150","    Selenese.runSelenese(orchestrator, \"\/user\/OAuth2IdentityProviderTest\/fail_to_authenticate_when_not_allowed_to_sign_up.html\");","161","    Selenese.runSelenese(orchestrator, \"\/user\/OAuth2IdentityProviderTest\/display_message_in_ui_but_not_in_log_when_unauthorized_exception.html\");","163","    File logFile = orchestrator.getServer().getWebLogs();","164","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"A functional error has happened\");","165","    assertThat(FileUtils.readFileToString(logFile)).doesNotContain(\"UnauthorizedException\");","166",""]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/user\/UserDaoTest.java":[{"add":["587","    UserDto activeUser1 = db.users().insertUser(u -> u.setEmail(\"user1@email.com\"));","588","    UserDto activeUser2 = db.users().insertUser(u -> u.setEmail(\"user1@email.com\"));","591","    assertThat(underTest.selectByEmail(session, \"user1@email.com\")).hasSize(2);","592","    assertThat(underTest.selectByEmail(session, disableUser.getEmail())).isEmpty();","593","    assertThat(underTest.selectByEmail(session, \"unknown\")).isEmpty();"],"delete":["587","    UserDto activeUser = db.users().insertUser();","590","    assertThat(underTest.selectByEmail(session, activeUser.getEmail())).isNotNull();","591","    assertThat(underTest.selectByEmail(session, disableUser.getEmail())).isNull();","592","    assertThat(underTest.selectByEmail(session, \"unknown\")).isNull();"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/user\/UserDao.java":[{"add":["39","import static java.util.Locale.ENGLISH;","42","import static org.sonar.db.user.UserDto.SCM_ACCOUNTS_SEPARATOR;","156","      .append(SCM_ACCOUNTS_SEPARATOR).append(scmAccountOrLoginOrEmail)","157","      .append(SCM_ACCOUNTS_SEPARATOR).append(\"%\").toString();","162","   * Search for an active user with the given emailCaseInsensitive exits in database","164","   * Select is case insensitive. Result for searching 'mail@emailCaseInsensitive.com' or 'Mail@Email.com' is the same","166","  public List<UserDto> selectByEmail(DbSession dbSession, String emailCaseInsensitive) {","167","    return mapper(dbSession).selectByEmail(emailCaseInsensitive.toLowerCase(ENGLISH));"],"delete":["24","import java.util.Locale;","48","","156","      .append(UserDto.SCM_ACCOUNTS_SEPARATOR).append(scmAccountOrLoginOrEmail)","157","      .append(UserDto.SCM_ACCOUNTS_SEPARATOR).append(\"%\").toString();","162","   * Search for an active user with the given email exits in database","164","   * Please note that email is case insensitive, result for searching 'mail@email.com' or 'Mail@Email.com' will be the same","166","  @CheckForNull","167","  public UserDto selectByEmail(DbSession dbSession, String email) {","168","    return mapper(dbSession).selectByEmail(email.toLowerCase(Locale.ENGLISH));"]}]}},"52c881f7c12e803379a71e6d539a87e9112145e5":{"changes":{"server\/sonar-web\/src\/main\/js\/coding-rules\/facets\/custom-values-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/coding-rules\/facets\/custom-values-facet.js":[{"add":["45","        minimumInputLength: 1,","54","          return tp('select2.tooShort', 1);"],"delete":["45","        minimumInputLength: 2,","54","          return tp('select2.tooShort', 2);"]}]}},"6e4367ab807afdb78fe968424f034657ca3802bf":{"changes":{"sonar-plugin-api\/build.gradle":"MODIFY"},"diff":{"sonar-plugin-api\/build.gradle":[{"add":["51","    'project.buildVersion': project.version.endsWith('SNAPSHOT') ? project.version : on3Digits(project.version) + '.' + (System.getProperty(\"buildNumber\") ?: '0'),"],"delete":["51","    'project.buildVersion': project.version.endsWith('SNAPSHOT') ? project.version : on3Digits(project.version) + '.' + System.getProperty(\"buildNumber\"),"]}]}},"b09c52cd3808a9726ec9bd9d510a59dcb1fcea54":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/roles_controller.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/roles_controller.rb":[{"add":["24","  before_filter :admin_required"],"delete":[]}]}},"fc415711a8d3a3ac3cfd69ba439d2f6c84a350c5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeaderSlim-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.tsx":[{"add":["20","import { Link } from 'react-router';","21","import * as classNames from 'classnames';","27","import { translate } from '..\/..\/helpers\/l10n';","28","import { getPathUrlAsString, getBranchLikeUrl, getComponentIssuesUrl } from '..\/..\/helpers\/urls';","30","import { isMainBranch, getBranchLikeQuery } from '..\/..\/helpers\/branches';","48","  const {","49","    key,","50","    measures,","51","    path,","52","    project,","53","    projectName,","54","    q,","55","    subProject,","56","    subProjectName","57","  } = sourceViewerFile;","92","      {measures.issues !== undefined && (","93","        <div","94","          className={classNames('flex-0 big-spacer-left', {","95","            'little-spacer-right': !expandable || loading","96","          })}>","97","          <Link","98","            to={getComponentIssuesUrl(project, {","99","              ...getBranchLikeQuery(branchLike),","100","              fileUuids: sourceViewerFile.uuid,","101","              resolved: 'false'","102","            })}>","103","            {translate('source_viewer.view_all_issues')}","104","          <\/Link>","105","        <\/div>","106","      )}","107","","110","          <div className=\"flex-0 big-spacer-left\">"],"delete":["25","import { getPathUrlAsString, getBranchLikeUrl } from '..\/..\/helpers\/urls';","27","import { isMainBranch } from '..\/..\/helpers\/branches';","45","  const { key, path, project, projectName, q, subProject, subProjectName } = sourceViewerFile;","82","          <div className=\"source-viewer-header-slim-actions flex-0\">"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeaderSlim-test.tsx.snap":[{"add":["40","  <div","41","    className=\"flex-0 big-spacer-left\"","42","  >","43","    <Link","44","      onlyActiveOnIndex={false}","45","      style={Object {}}","46","      to={","47","        Object {","48","          \"pathname\": \"\/project\/issues\",","49","          \"query\": Object {","50","            \"fileUuids\": \"foo-bar\",","51","            \"id\": \"my-project\",","52","            \"resolved\": \"false\",","53","          },","54","        }","55","      }","56","    >","57","      source_viewer.view_all_issues","58","    <\/Link>","59","  <\/div>","65","      className=\"flex-0 big-spacer-left\"","123","  <div","124","    className=\"flex-0 big-spacer-left\"","125","  >","126","    <Link","127","      onlyActiveOnIndex={false}","128","      style={Object {}}","129","      to={","130","        Object {","131","          \"pathname\": \"\/project\/issues\",","132","          \"query\": Object {","133","            \"fileUuids\": \"foo-bar\",","134","            \"id\": \"my-project\",","135","            \"resolved\": \"false\",","136","          },","137","        }","138","      }","139","    >","140","      source_viewer.view_all_issues","141","    <\/Link>","142","  <\/div>","148","      className=\"flex-0 big-spacer-left\""],"delete":["45","      className=\"source-viewer-header-slim-actions flex-0\"","108","      className=\"source-viewer-header-slim-actions flex-0\""]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2223","source_viewer.view_all_issues=See all issues in this file"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeaderSlim.css":[{"add":[],"delete":["26","","27",".source-viewer-header-slim-actions {","28","  margin-left: calc(3 * var(--gridSize));","29","}"]}]}},"90e2bc7b5149d2d64a1987a11cf50dfce1b8457d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndexer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleIndexer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleDoc.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleDoc.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleExtensionDoc.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndexer.java":[{"add":["125","    return new IndexRequest(INDEX_TYPE_RULE.getIndex(), INDEX_TYPE_RULE.getType())","126","      .id(rule.getId())","127","      .routing(rule.getRouting())","128","      .source(rule.getFields());","132","    return new IndexRequest(INDEX_TYPE_RULE_EXTENSION.getIndex(), INDEX_TYPE_RULE_EXTENSION.getType())","133","      .id(ruleExtension.getId())","134","      .routing(ruleExtension.getRouting())"],"delete":["125","    return new IndexRequest(INDEX_TYPE_RULE.getIndex(), INDEX_TYPE_RULE.getType(), rule.key().toString()).source(rule.getFields());","129","    return new IndexRequest(INDEX_TYPE_RULE_EXTENSION.getIndex(), INDEX_TYPE_RULE_EXTENSION.getType(), ruleExtension.getId())"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleIndexer.java":[{"add":["90","          bulk.addDeletion(INDEX_TYPE_ACTIVE_RULE, String.valueOf(c.getActiveRule().getId()), c.getKey().getRuleKey().toString());","131","    return new IndexRequest(INDEX_TYPE_ACTIVE_RULE.getIndex(), INDEX_TYPE_ACTIVE_RULE.getType())","132","      .id(doc.getId())","133","      .routing(doc.getRouting())"],"delete":["90","          bulk.addDeletion(INDEX_TYPE_ACTIVE_RULE, String.valueOf(c.getActiveRule().getId()));","131","    return new IndexRequest(INDEX_TYPE_ACTIVE_RULE.getIndex(), INDEX_TYPE_ACTIVE_RULE.getType(), doc.getId())"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleDoc.java":[{"add":["51","    return keyAsString();","60","    return RuleKey.parse(keyAsString());","61","  }","62","","63","  private String keyAsString() {","64","    return getField(RuleIndexDefinition.FIELD_RULE_KEY);"],"delete":["51","    return null;","60","    return RuleKey.parse(this.getField(RuleIndexDefinition.FIELD_RULE_KEY));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleDoc.java":[{"add":["53","    return getRuleKeyAsString();","62","    return RuleKey.parse(getRuleKeyAsString());","63","  }","64","","65","  private String getRuleKeyAsString() {","66","    return getField(FIELD_ACTIVE_RULE_RULE_KEY);"],"delete":["53","    return null;","62","    return RuleKey.parse(getField(FIELD_ACTIVE_RULE_RULE_KEY));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleExtensionDoc.java":[{"add":["46","    return getRuleKey().toString();"],"delete":["46","    return null;"]}]}},"c8b01d4f1520a14be831547f6b35c072a8b9517e":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/log\/LogListenerTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppenderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppender.java":"MODIFY","plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/lang\/MeasureSensor.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/log\/LogListenerTest.java":[{"add":["40","import org.sonar.batch.bootstrapper.LogOutput.Level;","43","","45","import static org.assertj.core.api.Assertions.fail;","199","  \/\/ SONAR-7540","200","  @Test","201","  public void testStackTrace() throws IOException {","202","    File srcDir = new File(baseDir, \"src\");","203","    srcDir.mkdir();","204","","205","    File xooFile = new File(srcDir, \"sample.xoo\");","206","    FileUtils.write(xooFile, \"Sample xoo\\ncontent\");","207","    File xooFileMeasure = new File(srcDir, \"sample.xoo.measures\");","208","    FileUtils.write(xooFileMeasure, \"foo:bar\");","209","","210","    try {","211","      tester.newTask()","212","        .properties(builder","213","          .put(\"sonar.sources\", \"src\")","214","          .build())","215","        .start();","216","      fail(\"Expected exception\");","217","    } catch (Exception e) {","218","      assertThat(e.getMessage()).contains(\"Error processing line 1\");","219","    }","220","    tester.stop();","221","","222","    assertNoStdOutput();","223","","224","    synchronized (logOutput) {","225","      for (LogEvent e : logOutput) {","226","        if (e.level == Level.ERROR) {","227","          assertThat(e.msg).contains(\"Error processing line 1 of file\", \"src\/sample.xoo.measures\", \"java.lang.IllegalStateException: Unknow metric with key: foo\",","228","            \"at org.sonar.xoo.lang.MeasureSensor.saveMeasure\");","229","","230","        }","231","      }","232","    }","233","  }","234",""],"delete":["22","","32",""]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppenderTest.java":[{"add":["65","    verify(event).getThrowableProxy();"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/bootstrapper\/LogCallbackAppender.java":[{"add":["22","import ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter;","39","    if (event.getThrowableProxy() == null) {","40","      target.log(event.getFormattedMessage(), translate(event.getLevel()));","41","    } else {","42","      ExtendedThrowableProxyConverter throwableConverter = new ExtendedThrowableProxyConverter();","43","      throwableConverter.start();","44","      target.log(event.getFormattedMessage() + \"\\n\" + throwableConverter.convert(event), translate(event.getLevel()));","45","      throwableConverter.stop();","46","    }"],"delete":["38","    target.log(event.getFormattedMessage(), translate(event.getLevel()));"]}],"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/lang\/MeasureSensor.java":[{"add":["79","      LOG.error(\"Error processing line \" + lineNumber + \" of file \" + measureFile.getAbsolutePath(), e);"],"delete":[]}]}},"a7243098e4d10f492c88a7c2bd28a7cea1164023":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/issue_filter.html.erb":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/issue_filter.html.erb":[{"add":[],"delete":["19","      werwer"]}]}},"f4bf76e488ab3d48cb12295d2aad77d9cf61cfb0":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentPopup-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":[{"add":["6","  <div","7","    className=\"menu is-container issue-changelog\"","8","  >","9","    <table","10","      className=\"spaced\"","12","      <tbody>","13","        <tr>","14","          <td","15","            className=\"thin text-left text-top nowrap\"","17","            <DateTimeFormatter","18","              date=\"2017-03-01T09:36:01+0100\"","19","            \/>","20","          <\/td>","21","          <td","22","            className=\"text-left text-top\"","23","          >","24","            created_by john.david.dalton@gmail.com","25","          <\/td>","26","        <\/tr>","27","        <tr","28","          key=\"0\"","29","        >","30","          <td","31","            className=\"thin text-left text-top nowrap\"","32","          >","33","            <DateTimeFormatter","34","              date=\"2017-03-01T09:36:01+0100\"","35","            \/>","36","          <\/td>","37","          <td","38","            className=\"text-left text-top\"","39","          >","40","            <p>","41","              <Connect(Avatar)","42","                className=\"little-spacer-right\"","43","                hash=\"gravatarhash\"","44","                name=\"John Doe\"","45","                size={16}","47","              John Doe","48","            <\/p>","49","            <IssueChangelogDiff","50","              diff={","51","                Object {","52","                  \"key\": \"severity\",","53","                  \"newValue\": \"MINOR\",","54","                  \"oldValue\": \"CRITICAL\",","56","              }","57","              key=\"severity\"","58","            \/>","59","          <\/td>","60","        <\/tr>","61","      <\/tbody>","62","    <\/table>","63","  <\/div>","71","  <div","72","    className=\"menu is-container issue-changelog\"","73","  >","74","    <table","75","      className=\"spaced\"","77","      <tbody>","78","        <tr>","79","          <td","80","            className=\"thin text-left text-top nowrap\"","82","            <DateTimeFormatter","83","              date=\"2017-03-01T09:36:01+0100\"","84","            \/>","85","          <\/td>","86","          <td","87","            className=\"text-left text-top\"","88","          >","89","            created_by john.david.dalton@gmail.com","90","          <\/td>","91","        <\/tr>","92","        <tr","93","          key=\"0\"","94","        >","95","          <td","96","            className=\"thin text-left text-top nowrap\"","97","          >","98","            <DateTimeFormatter","99","              date=\"2017-03-01T09:36:01+0100\"","100","            \/>","101","          <\/td>","102","          <td","103","            className=\"text-left text-top\"","104","          >","105","            <p>","106","              <Connect(Avatar)","107","                className=\"little-spacer-right\"","108","                name=\"john.doe\"","109","                size={16}","111","              user.x_deleted.john.doe","112","            <\/p>","113","            <IssueChangelogDiff","114","              diff={","115","                Object {","116","                  \"key\": \"severity\",","117","                  \"newValue\": \"MINOR\",","118","                  \"oldValue\": \"CRITICAL\",","120","              }","121","              key=\"severity\"","122","            \/>","123","          <\/td>","124","        <\/tr>","125","      <\/tbody>","126","    <\/table>","127","  <\/div>"],"delete":["6","  <ClickEventBoundary>","7","    <div","8","      className=\"menu is-container issue-changelog\"","10","      <table","11","        className=\"spaced\"","12","      >","13","        <tbody>","14","          <tr>","15","            <td","16","              className=\"thin text-left text-top nowrap\"","17","            >","18","              <DateTimeFormatter","19","                date=\"2017-03-01T09:36:01+0100\"","20","              \/>","21","            <\/td>","22","            <td","23","              className=\"text-left text-top\"","24","            >","25","              created_by john.david.dalton@gmail.com","26","            <\/td>","27","          <\/tr>","28","          <tr","29","            key=\"0\"","31","            <td","32","              className=\"thin text-left text-top nowrap\"","33","            >","34","              <DateTimeFormatter","35","                date=\"2017-03-01T09:36:01+0100\"","37","            <\/td>","38","            <td","39","              className=\"text-left text-top\"","40","            >","41","              <p>","42","                <Connect(Avatar)","43","                  className=\"little-spacer-right\"","44","                  hash=\"gravatarhash\"","45","                  name=\"John Doe\"","46","                  size={16}","47","                \/>","48","                John Doe","49","              <\/p>","50","              <IssueChangelogDiff","51","                diff={","52","                  Object {","53","                    \"key\": \"severity\",","54","                    \"newValue\": \"MINOR\",","55","                    \"oldValue\": \"CRITICAL\",","56","                  }","58","                key=\"severity\"","59","              \/>","60","            <\/td>","61","          <\/tr>","62","        <\/tbody>","63","      <\/table>","64","    <\/div>","65","  <\/ClickEventBoundary>","73","  <ClickEventBoundary>","74","    <div","75","      className=\"menu is-container issue-changelog\"","77","      <table","78","        className=\"spaced\"","79","      >","80","        <tbody>","81","          <tr>","82","            <td","83","              className=\"thin text-left text-top nowrap\"","84","            >","85","              <DateTimeFormatter","86","                date=\"2017-03-01T09:36:01+0100\"","87","              \/>","88","            <\/td>","89","            <td","90","              className=\"text-left text-top\"","91","            >","92","              created_by john.david.dalton@gmail.com","93","            <\/td>","94","          <\/tr>","95","          <tr","96","            key=\"0\"","98","            <td","99","              className=\"thin text-left text-top nowrap\"","100","            >","101","              <DateTimeFormatter","102","                date=\"2017-03-01T09:36:01+0100\"","104","            <\/td>","105","            <td","106","              className=\"text-left text-top\"","107","            >","108","              <p>","109","                <Connect(Avatar)","110","                  className=\"little-spacer-right\"","111","                  name=\"john.doe\"","112","                  size={16}","113","                \/>","114","                user.x_deleted.john.doe","115","              <\/p>","116","              <IssueChangelogDiff","117","                diff={","118","                  Object {","119","                    \"key\": \"severity\",","120","                    \"newValue\": \"MINOR\",","121","                    \"oldValue\": \"CRITICAL\",","122","                  }","124","                key=\"severity\"","125","              \/>","126","            <\/td>","127","          <\/tr>","128","        <\/tbody>","129","      <\/table>","130","    <\/div>","131","  <\/ClickEventBoundary>"]}],"server\/sonar-web\/package.json":[{"add":["37","    \"sonar-ui-common\": \"0.0.30\","],"delete":["37","    \"sonar-ui-common\": \"0.0.25\","]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":[{"add":["75","        <div className=\"issue-comment-bubble-popup\">","76","          <div className=\"issue-comment-form-text\">","77","            <textarea","78","              autoFocus={true}","79","              onChange={this.handleCommentChange}","80","              onKeyDown={this.handleKeyboard}","81","              placeholder={this.props.placeholder}","82","              rows={2}","83","              value={this.state.textComment}","84","            \/>","85","          <\/div>","86","          <div className=\"issue-comment-form-footer\">","87","            <div className=\"issue-comment-form-actions\">","88","              <Button","89","                className=\"js-issue-comment-submit little-spacer-right\"","90","                disabled={this.state.textComment.trim().length < 1}","91","                onClick={this.handleCommentClick}>","92","                {comment && translate('save')}","93","                {!comment && translate('issue.comment.submit')}","94","              <\/Button>","95","              <ResetButtonLink className=\"js-issue-comment-cancel\" onClick={this.handleCancelClick}>","96","                {autoTriggered ? translate('skip') : translate('cancel')}","97","              <\/ResetButtonLink>","99","            <div className=\"issue-comment-form-tips\">","100","              <MarkdownTips \/>","103","        <\/div>"],"delete":["21","import ClickEventBoundary from 'sonar-ui-common\/components\/controls\/ClickEventBoundary';","76","        <ClickEventBoundary>","77","          <div className=\"issue-comment-bubble-popup\">","78","            <div className=\"issue-comment-form-text\">","79","              <textarea","80","                autoFocus={true}","81","                onChange={this.handleCommentChange}","82","                onKeyDown={this.handleKeyboard}","83","                placeholder={this.props.placeholder}","84","                rows={2}","85","                value={this.state.textComment}","86","              \/>","88","            <div className=\"issue-comment-form-footer\">","89","              <div className=\"issue-comment-form-actions\">","90","                <Button","91","                  className=\"js-issue-comment-submit little-spacer-right\"","92","                  disabled={this.state.textComment.trim().length < 1}","93","                  onClick={this.handleCommentClick}>","94","                  {comment && translate('save')}","95","                  {!comment && translate('issue.comment.submit')}","96","                <\/Button>","97","                <ResetButtonLink","98","                  className=\"js-issue-comment-cancel\"","99","                  onClick={this.handleCancelClick}>","100","                  {autoTriggered ? translate('skip') : translate('cancel')}","101","                <\/ResetButtonLink>","102","              <\/div>","103","              <div className=\"issue-comment-form-tips\">","104","                <MarkdownTips \/>","105","              <\/div>","108","        <\/ClickEventBoundary>"]}],"server\/sonar-web\/yarn.lock":[{"add":["9389","sonar-ui-common@0.0.30:","9390","  version \"0.0.30\"","9391","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/sonar-ui-common\/-\/sonar-ui-common-0.0.30.tgz#23cf7184b7fdf9711805b176540c6dd304ba669b\"","9392","  integrity sha1-I89xhLf9+XEYBbF2VAxt0wS6Zps="],"delete":["9389","sonar-ui-common@0.0.25:","9390","  version \"0.0.25\"","9391","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/sonar-ui-common\/-\/sonar-ui-common-0.0.25.tgz#c448e83dece5198592f3d6097f570fd9188dcee0\"","9392","  integrity sha1-xEjoPezlGYWS89YJf1cP2RiNzuA="]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":[{"add":["65","        <div className=\"menu is-container issue-changelog\">","66","          <table className=\"spaced\">","67","            <tbody>","68","              <tr>","69","                <td className=\"thin text-left text-top nowrap\">","70","                  <DateTimeFormatter date={issue.creationDate} \/>","71","                <\/td>","72","                <td className=\"text-left text-top\">","73","                  {author ? `${translate('created_by')} ${author}` : translate('created')}","74","                <\/td>","75","              <\/tr>","77","              {this.state.changelog.map((item, idx) => {","78","                const userName = item.userName || item.user;","80","                return (","81","                  <tr key={idx}>","82","                    <td className=\"thin text-left text-top nowrap\">","83","                      <DateTimeFormatter date={item.creationDate} \/>","84","                    <\/td>","85","                    <td className=\"text-left text-top\">","86","                      {userName && (","87","                        <p>","88","                          <Avatar","89","                            className=\"little-spacer-right\"","90","                            hash={item.avatar}","91","                            name={userName}","92","                            size={16}","93","                          \/>","94","                          {item.isUserActive","95","                            ? userName","96","                            : translateWithParameters('user.x_deleted', userName)}","97","                        <\/p>","98","                      )}","99","                      {item.diffs.map(diff => (","100","                        <IssueChangelogDiff diff={diff} key={diff.key} \/>","101","                      ))}","102","                    <\/td>","103","                  <\/tr>","104","                );","105","              })}","106","            <\/tbody>","107","          <\/table>","108","        <\/div>"],"delete":["20","import ClickEventBoundary from 'sonar-ui-common\/components\/controls\/ClickEventBoundary';","66","        <ClickEventBoundary>","67","          <div className=\"menu is-container issue-changelog\">","68","            <table className=\"spaced\">","69","              <tbody>","70","                <tr>","71","                  <td className=\"thin text-left text-top nowrap\">","72","                    <DateTimeFormatter date={issue.creationDate} \/>","73","                  <\/td>","74","                  <td className=\"text-left text-top\">","75","                    {author ? `${translate('created_by')} ${author}` : translate('created')}","76","                  <\/td>","77","                <\/tr>","79","                {this.state.changelog.map((item, idx) => {","80","                  const userName = item.userName || item.user;","82","                  return (","83","                    <tr key={idx}>","84","                      <td className=\"thin text-left text-top nowrap\">","85","                        <DateTimeFormatter date={item.creationDate} \/>","86","                      <\/td>","87","                      <td className=\"text-left text-top\">","88","                        {userName && (","89","                          <p>","90","                            <Avatar","91","                              className=\"little-spacer-right\"","92","                              hash={item.avatar}","93","                              name={userName}","94","                              size={16}","95","                            \/>","96","                            {item.isUserActive","97","                              ? userName","98","                              : translateWithParameters('user.x_deleted', userName)}","99","                          <\/p>","100","                        )}","101","                        {item.diffs.map(diff => (","102","                          <IssueChangelogDiff diff={diff} key={diff.key} \/>","103","                        ))}","104","                      <\/td>","105","                    <\/tr>","106","                  );","107","                })}","108","              <\/tbody>","109","            <\/table>","110","          <\/div>","111","        <\/ClickEventBoundary>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentPopup-test.tsx.snap":[{"add":["4","  <div","5","    className=\"issue-comment-bubble-popup\"","6","  >","8","      className=\"issue-comment-form-text\"","9","    >","10","      <textarea","11","        autoFocus={true}","12","        onChange={[Function]}","13","        onKeyDown={[Function]}","14","        placeholder=\"\"","15","        rows={2}","16","        value=\"*test*\"","17","      \/>","18","    <\/div>","19","    <div","20","      className=\"issue-comment-form-footer\"","23","        className=\"issue-comment-form-actions\"","25","        <Button","26","          className=\"js-issue-comment-submit little-spacer-right\"","27","          disabled={false}","28","          onClick={[Function]}","29","        >","30","          save","31","        <\/Button>","32","        <ResetButtonLink","33","          className=\"js-issue-comment-cancel\"","34","          onClick={[Function]}","35","        >","36","          cancel","37","        <\/ResetButtonLink>","40","        className=\"issue-comment-form-tips\"","42","        <MarkdownTips \/>","45","  <\/div>","51","  <div","52","    className=\"issue-comment-bubble-popup\"","53","  >","55","      className=\"issue-comment-form-text\"","56","    >","57","      <textarea","58","        autoFocus={true}","59","        onChange={[Function]}","60","        onKeyDown={[Function]}","61","        placeholder=\"placeholder test\"","62","        rows={2}","63","        value=\"\"","64","      \/>","65","    <\/div>","66","    <div","67","      className=\"issue-comment-form-footer\"","70","        className=\"issue-comment-form-actions\"","72","        <Button","73","          className=\"js-issue-comment-submit little-spacer-right\"","74","          disabled={true}","75","          onClick={[Function]}","76","        >","77","          issue.comment.submit","78","        <\/Button>","79","        <ResetButtonLink","80","          className=\"js-issue-comment-cancel\"","81","          onClick={[Function]}","82","        >","83","          cancel","84","        <\/ResetButtonLink>","87","        className=\"issue-comment-form-tips\"","89","        <MarkdownTips \/>","92","  <\/div>"],"delete":["4","  <ClickEventBoundary>","6","      className=\"issue-comment-bubble-popup\"","9","        className=\"issue-comment-form-text\"","11","        <textarea","12","          autoFocus={true}","13","          onChange={[Function]}","14","          onKeyDown={[Function]}","15","          placeholder=\"\"","16","          rows={2}","17","          value=\"*test*\"","18","        \/>","21","        className=\"issue-comment-form-footer\"","23","        <div","24","          className=\"issue-comment-form-actions\"","25","        >","26","          <Button","27","            className=\"js-issue-comment-submit little-spacer-right\"","28","            disabled={false}","29","            onClick={[Function]}","30","          >","31","            save","32","          <\/Button>","33","          <ResetButtonLink","34","            className=\"js-issue-comment-cancel\"","35","            onClick={[Function]}","36","          >","37","            cancel","38","          <\/ResetButtonLink>","39","        <\/div>","40","        <div","41","          className=\"issue-comment-form-tips\"","42","        >","43","          <MarkdownTips \/>","44","        <\/div>","47","  <\/ClickEventBoundary>","53","  <ClickEventBoundary>","55","      className=\"issue-comment-bubble-popup\"","58","        className=\"issue-comment-form-text\"","60","        <textarea","61","          autoFocus={true}","62","          onChange={[Function]}","63","          onKeyDown={[Function]}","64","          placeholder=\"placeholder test\"","65","          rows={2}","66","          value=\"\"","67","        \/>","70","        className=\"issue-comment-form-footer\"","72","        <div","73","          className=\"issue-comment-form-actions\"","74","        >","75","          <Button","76","            className=\"js-issue-comment-submit little-spacer-right\"","77","            disabled={true}","78","            onClick={[Function]}","79","          >","80","            issue.comment.submit","81","          <\/Button>","82","          <ResetButtonLink","83","            className=\"js-issue-comment-cancel\"","84","            onClick={[Function]}","85","          >","86","            cancel","87","          <\/ResetButtonLink>","88","        <\/div>","89","        <div","90","          className=\"issue-comment-form-tips\"","91","        >","92","          <MarkdownTips \/>","93","        <\/div>","96","  <\/ClickEventBoundary>"]}]}},"8b36b92c75be2da2d16e9d14e3fe2254f6dc4368":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/RailsAppsDeployer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/index\/CachesManager.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/BatchPluginJarExploder.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/report\/ReportPublisher.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/EmbeddedTomcat.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/PluginDownloader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginJarExploder.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/GlobalTempFolderProvider.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileCopier.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginRepository.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/report\/ReportFiles.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/cache\/DefaultProjectCacheStatus.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/RailsAppsDeployer.java":[{"add":["113","        org.sonar.core.util.FileUtils.deleteDirectory(appsDir);"],"delete":["113","        FileUtils.deleteDirectory(appsDir);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":[{"add":["138","      org.sonar.core.util.FileUtils.cleanDirectory(dir);"],"delete":["138","      FileUtils.cleanDirectory(dir);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":[{"add":["76","      org.sonar.core.util.FileUtils.cleanDirectory(deprecated);"],"delete":["76","      FileUtils.cleanDirectory(deprecated);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/index\/CachesManager.java":[{"add":["24","import java.io.File;","25","import java.util.Properties;","29","import org.sonar.api.utils.TempFolder;","31","import static org.sonar.core.util.FileUtils.deleteQuietly;","86","    deleteQuietly(tempDir);"],"delete":["21","import org.sonar.api.utils.TempFolder;","22","","26","import org.apache.commons.io.FileUtils;","31","import java.io.File;","32","import java.util.Properties;","87","    FileUtils.deleteQuietly(tempDir);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/BatchPluginJarExploder.java":[{"add":["33","import static org.sonar.core.util.FileUtils.deleteQuietly;","34","","74","        deleteQuietly(lockFile);"],"delete":["72","        FileUtils.deleteQuietly(lockFile);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/report\/ReportPublisher.java":[{"add":["25","import java.io.File;","26","import java.io.IOException;","27","import java.io.InputStream;","28","import java.io.Writer;","29","import java.net.URL;","30","import java.nio.charset.StandardCharsets;","31","import java.util.LinkedHashMap;","32","import java.util.Map;","33","import javax.annotation.Nullable;","53","import static org.sonar.core.util.FileUtils.deleteQuietly;","76","    ImmutableProjectReactor projectReactor, DefaultAnalysisMode analysisMode, TempFolder temp, ReportPublisherStep[] publishers) {","96","      deleteQuietly(reportDir);","177",""],"delete":["44","import javax.annotation.Nullable;","45","import java.io.File;","46","import java.io.IOException;","47","import java.io.InputStream;","48","import java.io.Writer;","49","import java.net.URL;","50","import java.nio.charset.StandardCharsets;","51","import java.util.LinkedHashMap;","52","import java.util.Map;","75","                         ImmutableProjectReactor projectReactor, DefaultAnalysisMode analysisMode, TempFolder temp, ReportPublisherStep[] publishers) {","95","      FileUtils.deleteQuietly(reportDir);","176","      "]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/EmbeddedTomcat.java":[{"add":["30","import static org.sonar.core.util.FileUtils.deleteQuietly;","31","","100","    deleteQuietly(tomcatBasedir());"],"delete":["26","import org.apache.commons.io.FileUtils;","99","    FileUtils.deleteQuietly(tomcatBasedir());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/PluginDownloader.java":[{"add":["50","import static org.sonar.core.util.FileUtils.deleteQuietly;","96","        org.sonar.core.util.FileUtils.cleanDirectory(downloadDir);"],"delete":["44","import static org.apache.commons.io.FileUtils.cleanDirectory;","47","import static org.apache.commons.io.FileUtils.deleteQuietly;","97","        cleanDirectory(downloadDir);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginJarExploder.java":[{"add":["21","import java.io.File;","27","import org.sonar.core.platform.PluginJarExploder;","51","      org.sonar.core.util.FileUtils.cleanDirectory(toDir);"],"delete":["25","import org.sonar.core.platform.PluginJarExploder;","29","import java.io.File;","30","","31","import static org.apache.commons.io.FileUtils.cleanDirectory;","53","      cleanDirectory(toDir);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":[{"add":["23","import org.picocontainer.injectors.ProviderAdapter;","24","import org.sonar.api.batch.bootstrap.ProjectReactor;","25","import org.sonar.core.util.FileUtils;","40","      FileUtils.cleanDirectory(dir);"],"delete":["21","import org.apache.commons.io.FileUtils;","22","import org.picocontainer.injectors.ProviderAdapter;","23","import org.sonar.api.batch.bootstrap.ProjectReactor;","24","","27","import java.nio.file.Files;","42","      FileUtils.deleteDirectory(dir);","43","      Files.createDirectories(dir.toPath());"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/GlobalTempFolderProvider.java":[{"add":["28","import org.apache.commons.lang.StringUtils;","29","import org.picocontainer.ComponentLifecycle;","30","import org.picocontainer.PicoContainer;","31","import org.picocontainer.injectors.ProviderAdapter;","32","import org.sonar.api.CoreProperties;","33","import org.sonar.api.utils.System2;","34","import org.sonar.api.utils.TempFolder;","35","import org.sonar.api.utils.internal.DefaultTempFolder;","36","import org.sonar.api.utils.log.Logger;","37","import org.sonar.api.utils.log.Loggers;","38","","39","import static org.sonar.core.util.FileUtils.deleteQuietly;","114","          deleteQuietly(p.toFile());"],"delete":["21","import org.picocontainer.ComponentLifecycle;","22","","23","import org.picocontainer.PicoContainer;","24","import org.picocontainer.injectors.ProviderAdapter;","25","import org.sonar.api.utils.System2;","26","import org.sonar.api.utils.log.Logger;","27","import org.sonar.api.utils.log.Loggers;","28","import org.apache.commons.io.FileUtils;","29","import org.sonar.api.utils.TempFolder;","30","import org.apache.commons.lang.StringUtils;","31","import org.sonar.api.CoreProperties;","32","import org.sonar.api.utils.internal.DefaultTempFolder;","33","","115","          FileUtils.deleteQuietly(p.toFile());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileCopier.java":[{"add":["28","import org.apache.commons.io.FileUtils;","29","import org.apache.commons.io.IOUtils;","30","import org.apache.commons.lang.StringUtils;","31","import org.sonar.api.server.ServerSide;","32","import org.sonar.api.utils.TempFolder;","33","import org.sonar.db.DbClient;","34","import org.sonar.db.DbSession;","35","import org.sonar.db.qualityprofile.QualityProfileDto;","60","      org.sonar.core.util.FileUtils.deleteQuietly(backupFile);"],"delete":["21","import org.apache.commons.io.FileUtils;","22","import org.apache.commons.io.IOUtils;","23","import org.apache.commons.lang.StringUtils;","24","import org.sonar.api.server.ServerSide;","25","import org.sonar.api.utils.TempFolder;","26","import org.sonar.db.DbSession;","27","import org.sonar.db.qualityprofile.QualityProfileDto;","28","import org.sonar.db.DbClient;","29","","61","      FileUtils.deleteQuietly(backupFile);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginRepository.java":[{"add":["55","import static org.sonar.core.util.FileUtils.deleteQuietly;","161","      org.sonar.core.util.FileUtils.deleteQuietly(info.getNonNullJarFile());"],"delete":["55","import static org.apache.commons.io.FileUtils.deleteQuietly;","161","      deleteQuietly(info.getNonNullJarFile());"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":[{"add":["54","import static org.sonar.core.util.FileUtils.deleteQuietly;","55","","150","      deleteQuietly(toFile);"],"delete":["31","","46","","48","","50","import org.apache.commons.io.FileUtils;","152","      FileUtils.deleteQuietly(toFile);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/report\/ReportFiles.java":[{"add":["51","      org.sonar.core.util.FileUtils.deleteQuietly(file);","58","    org.sonar.core.util.FileUtils.deleteQuietly(fileForUuid(taskUuid));","65","        org.sonar.core.util.FileUtils.cleanDirectory(dir);"],"delete":["51","      FileUtils.deleteQuietly(file);","58","    FileUtils.deleteQuietly(fileForUuid(taskUuid));","65","        FileUtils.cleanDirectory(dir);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/cache\/DefaultProjectCacheStatus.java":[{"add":["29","import org.sonar.home.cache.PersistentCache;","30","","31","import static org.sonar.core.util.FileUtils.deleteQuietly;","57","    deleteQuietly(getStatusFilePath().toFile());","71","      deleteQuietly(p.toFile());"],"delete":["21","import org.apache.commons.io.FileUtils;","22","","23","import org.sonar.home.cache.PersistentCache;","24","","58","    FileUtils.deleteQuietly(getStatusFilePath().toFile());","72","      FileUtils.deleteQuietly(p.toFile());"]}]}},"f533245c9a73a0be2dd6e87124e23c8d4374295c":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMenu-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.tsx":[{"add":["276","    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {","277","      return null;","278","    }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMenu-test.tsx.snap":[{"add":[],"delete":["328","                \"pathname\": \"\/project\/baseline\",","329","                \"query\": Object {","330","                  \"id\": \"foo\",","331","                },","332","              }","333","            }","334","          >","335","            project_baseline.page","336","          <\/Link>","337","        <\/li>","338","        <li>","339","          <Link","340","            activeClassName=\"active\"","341","            onlyActiveOnIndex={false}","342","            style={Object {}}","343","            to={","344","              Object {","453","  <Dropdown","454","    data-test=\"administration\"","455","    overlay={","456","      <ul","457","        className=\"menu\"","458","      >","459","        <li>","460","          <Link","461","            activeClassName=\"active\"","462","            onlyActiveOnIndex={false}","463","            style={Object {}}","464","            to={","465","              Object {","466","                \"pathname\": \"\/project\/baseline\",","467","                \"query\": Object {","468","                  \"id\": \"foo\",","469","                },","470","              }","471","            }","472","          >","473","            project_baseline.page","474","          <\/Link>","475","        <\/li>","476","      <\/ul>","477","    }","478","    tagName=\"li\"","479","  >","480","    <Component \/>","481","  <\/Dropdown>","587","                \"pathname\": \"\/project\/baseline\",","588","                \"query\": Object {","589","                  \"id\": \"foo\",","590","                },","591","              }","592","            }","593","          >","594","            project_baseline.page","595","          <\/Link>","596","        <\/li>","597","        <li>","598","          <Link","599","            activeClassName=\"active\"","600","            onlyActiveOnIndex={false}","601","            style={Object {}}","602","            to={","603","              Object {"]}]}},"71a9ed4535dd3b0d424ac4390d4a4c5a2d60bfde":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":[{"add":["68","      new CreateAction(null, null, null, languages, importers, userSessionRule, null),"],"delete":["68","      new CreateAction(null, null, null, languages, importers, userSessionRule),"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateAction.java":[{"add":["63","  private final ActiveRuleIndexer activeRuleIndexer;","64","","66","                      Languages languages, ProfileImporter[] importers, UserSession userSession, ActiveRuleIndexer activeRuleIndexer) {","73","    this.activeRuleIndexer = activeRuleIndexer;","76","  public CreateAction(DbClient dbClient, QProfileFactory profileFactory, QProfileExporters exporters, Languages languages, UserSession userSession,","77","                      ActiveRuleIndexer activeRuleIndexer) {","78","    this(dbClient, profileFactory, exporters, languages, new ProfileImporter[0], userSession, activeRuleIndexer);","133","    activeRuleIndexer.index(result.getChanges());"],"delete":["64","                      Languages languages, ProfileImporter[] importers, UserSession userSession) {","73","  public CreateAction(DbClient dbClient, QProfileFactory profileFactory, QProfileExporters exporters, Languages languages, UserSession userSession) {","74","    this(dbClient, profileFactory, exporters, languages, new ProfileImporter[0], userSession);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":[{"add":["53","import org.sonar.server.rule.index.RuleQuery;","103","  CreateAction underTest = new CreateAction(dbClient, new QProfileFactory(dbClient), qProfileExporters, newLanguages(XOO_LANGUAGE), profileImporters, userSession, activeRuleIndexer);","137","    assertThat(ruleIndex.searchAll(new RuleQuery().setQProfileKey(dto.getKey()).setActivation(true))).hasSize(1);"],"delete":["102","  CreateAction underTest = new CreateAction(dbClient, new QProfileFactory(dbClient), qProfileExporters, newLanguages(XOO_LANGUAGE), profileImporters, userSession);","136","    \/\/ FIXME","137","    \/\/ assertThat(ruleIndex.searchAll(new RuleQuery().setQProfileKey(profile.getKey()).setActivation(true))).hasSize(1);"]}]}},"6885b465d9fffa09f8c03b03ebd792f8669f9685":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/List.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/ListItem-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/List-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/ListItem.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/ManageMemberGroupsForm.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/Header-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/List-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/ListItem-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/Header-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/Header.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/App-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/user_groups.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1750","groups.users.edit=Change group members"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/List.tsx":[{"add":["26","  onDelete: (group: T.Group) => void;","27","  onEdit: (group: T.Group) => void;","39","            <th className=\"nowrap width-10\" colSpan={2}>","40","              {translate('members')}","41","            <\/th>","52","              <td className=\"width-10\" colSpan={2} \/>","64","              key={group.name}"],"delete":["26","  onDelete: (name: string) => Promise<void>;","27","  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;","29","  organization: string | undefined;","40","            <th className=\"nowrap\">{translate('members')}<\/th>","51","              <td className=\"width-10\" \/>","63","              key={group.id}","67","              organization={props.organization}"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/ListItem-test.tsx":[{"add":["21","import { mockGroup } from '..\/..\/..\/..\/helpers\/testMocks';","22","import ListItem, { ListItemProps } from '..\/ListItem';","24","it('should render correctly', () => {","25","  expect(shallowRender()).toMatchSnapshot();","26","  expect(shallowRender({ group: mockGroup({ default: true }) })).toMatchSnapshot('default group');","29","function shallowRender(overrides: Partial<ListItemProps> = {}) {","30","  return shallow(","32","      group={mockGroup()}","36","      {...overrides}","39","}"],"delete":["21","import { click } from 'sonar-ui-common\/helpers\/testUtils';","22","import ListItem from '..\/ListItem';","24","it('should edit group', () => {","25","  const group = { id: 3, name: 'Foo', membersCount: 5 };","26","  const onEdit = jest.fn();","27","  const wrapper = shallow(","28","    <ListItem","29","      group={group}","30","      onDelete={jest.fn()}","31","      onEdit={onEdit}","32","      onEditMembers={jest.fn()}","33","      organization=\"org\"","34","    \/>","35","  );","36","","37","  click(wrapper.find('.js-group-update'));","38","  wrapper.update();","39","","40","  wrapper.find('Form').prop<Function>('onSubmit')({ name: 'Bar', description: 'bla bla' });","41","  expect(onEdit).lastCalledWith({ description: 'bla bla', id: 3, name: 'Bar' });","44","it('should delete group', () => {","45","  const group = { id: 3, name: 'Foo', membersCount: 5 };","46","  const onDelete = jest.fn();","47","  const wrapper = shallow(","49","      group={group}","50","      onDelete={onDelete}","51","      onEdit={jest.fn()}","52","      onEditMembers={jest.fn()}","53","      organization=\"org\"","54","    \/>","55","  );","56","  expect(wrapper).toMatchSnapshot();","57","","58","  click(wrapper.find('.js-group-delete'));","59","  wrapper.update();","60","","61","  wrapper.find('DeleteForm').prop<Function>('onSubmit')();","62","  expect(onDelete).toBeCalledWith('Foo');","63","});","64","","65","it('should render default group', () => {","66","  const group = { default: true, id: 3, name: 'Foo', membersCount: 5 };","67","  const wrapper = shallow(","68","    <ListItem","69","      group={group}","73","      organization=\"org\"","76","  expect(wrapper).toMatchSnapshot();","77","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["78","      showAnyone={true}","84","        count={3}","86","        loading={false}","88","        total={5}"],"delete":["17","      loading={true}","47","      loading={false}","80","      organization=\"foo\"","81","      showAnyone={false}","87","        count={2}","90","        total={4}"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":[{"add":["5","    aria-label=\"groups.users.edit\"","8","    title=\"groups.users.edit\"","18","    aria-label=\"groups.users.edit\"","21","    title=\"groups.users.edit\"","41","    aria-label=\"groups.users.edit\"","44","    title=\"groups.users.edit\""],"delete":["30","    organization=\"org\""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/List-test.tsx":[{"add":[],"delete":["47","      organization=\"org\""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/ListItem.tsx":[{"add":["27","export interface ListItemProps {","29","  onDelete: (group: T.Group) => void;","30","  onEdit: (group: T.Group) => void;","34","export default function ListItem(props: ListItemProps) {","35","  const { group } = props;","37","  return (","38","    <tr data-id={group.name}>","39","      <td className=\"width-20\">","40","        <strong className=\"js-group-name\">{group.name}<\/strong>","41","        {group.default && <span className=\"little-spacer-left\">({translate('default')})<\/span>}","42","      <\/td>","44","      <td className=\"thin text-middle text-right little-padded-right\">{group.membersCount}<\/td>","45","      <td className=\"little-padded-left\">","46","        {!group.default && <EditMembers group={group} onEdit={props.onEditMembers} \/>}","47","      <\/td>","49","      <td className=\"width-40\">","50","        <span className=\"js-group-description\">{group.description}<\/span>","51","      <\/td>","53","      <td className=\"thin nowrap text-right\">","54","        {!group.default && (","55","          <ActionsDropdown>","56","            <ActionsDropdownItem className=\"js-group-update\" onClick={() => props.onEdit(group)}>","57","              {translate('update_details')}","58","            <\/ActionsDropdownItem>","59","            <ActionsDropdownDivider \/>","60","            <ActionsDropdownItem","61","              className=\"js-group-delete\"","62","              destructive={true}","63","              onClick={() => props.onDelete(group)}>","64","              {translate('delete')}","65","            <\/ActionsDropdownItem>","66","          <\/ActionsDropdown>","68","      <\/td>","69","    <\/tr>","70","  );"],"delete":["25","import { omitNil } from 'sonar-ui-common\/helpers\/request';","26","import DeleteForm from '.\/DeleteForm';","28","import Form from '.\/Form';","30","interface Props {","32","  onDelete: (name: string) => Promise<void>;","33","  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;","35","  organization: string | undefined;","38","interface State {","39","  deleteForm: boolean;","40","  editForm: boolean;","41","}","43","export default class ListItem extends React.PureComponent<Props, State> {","44","  mounted = false;","45","  state: State = { deleteForm: false, editForm: false };","47","  componentDidMount() {","48","    this.mounted = true;","49","  }","51","  componentWillUnmount() {","52","    this.mounted = false;","53","  }","55","  handleDeleteClick = () => {","56","    this.setState({ deleteForm: true });","57","  };","58","","59","  handleEditClick = () => {","60","    this.setState({ editForm: true });","61","  };","62","","63","  closeDeleteForm = () => {","64","    if (this.mounted) {","65","      this.setState({ deleteForm: false });","66","    }","67","  };","68","","69","  closeEditForm = () => {","70","    if (this.mounted) {","71","      this.setState({ editForm: false });","72","    }","73","  };","74","","75","  handleDeleteFormSubmit = () => {","76","    return this.props.onDelete(this.props.group.name);","77","  };","78","","79","  handleEditFormSubmit = ({ name, description }: { name: string; description: string }) => {","80","    const { group } = this.props;","81","    return this.props.onEdit({","82","      description,","83","      id: group.id,","84","      \/\/ pass `name` only if it has changed, otherwise the WS fails","85","      ...omitNil({ name: name !== group.name ? name : undefined })","86","    });","87","  };","88","","89","  render() {","90","    const { group } = this.props;","91","","92","    return (","93","      <tr data-id={group.id}>","94","        <td className=\" width-20\">","95","          <strong className=\"js-group-name\">{group.name}<\/strong>","96","          {group.default && <span className=\"little-spacer-left\">({translate('default')})<\/span>}","97","        <\/td>","98","","99","        <td className=\"width-10\">","100","          <div className=\"display-flex-center\">","101","            <span className=\"spacer-right\">{group.membersCount}<\/span>","102","            {!group.default && (","103","              <EditMembers","104","                group={group}","105","                onEdit={this.props.onEditMembers}","106","                organization={this.props.organization}","107","              \/>","108","            )}","109","          <\/div>","110","        <\/td>","111","","112","        <td className=\"width-40\">","113","          <span className=\"js-group-description\">{group.description}<\/span>","114","        <\/td>","115","","116","        <td className=\"thin nowrap text-right\">","117","          {!group.default && (","118","            <ActionsDropdown>","119","              <ActionsDropdownItem className=\"js-group-update\" onClick={this.handleEditClick}>","120","                {translate('update_details')}","121","              <\/ActionsDropdownItem>","122","              <ActionsDropdownDivider \/>","123","              <ActionsDropdownItem","124","                className=\"js-group-delete\"","125","                destructive={true}","126","                onClick={this.handleDeleteClick}>","127","                {translate('delete')}","128","              <\/ActionsDropdownItem>","129","            <\/ActionsDropdown>","130","          )}","131","        <\/td>","132","","133","        {this.state.deleteForm && (","134","          <DeleteForm","135","            group={group}","136","            onClose={this.closeDeleteForm}","137","            onSubmit={this.handleDeleteFormSubmit}","138","          \/>","140","","141","        {this.state.editForm && (","142","          <Form","143","            confirmButtonText={translate('update_verb')}","144","            group={group}","145","            header={translate('groups.update_group')}","146","            onClose={this.closeEditForm}","147","            onSubmit={this.handleEditFormSubmit}","148","          \/>","149","        )}","150","      <\/tr>","151","    );","152","  }"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/ManageMemberGroupsForm.tsx":[{"add":["141","                      key={group.name}"],"delete":["141","                      key={group.id}"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":[{"add":["110","    <EditMembersModal group={group} onClose={jest.fn()} {...props} \/>"],"delete":["26","const organization = 'orga';","70","      organization,","90","      organization,","105","      organization,","114","    <EditMembersModal group={group} onClose={jest.fn()} organization={organization} {...props} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/Header-test.tsx.snap":[{"add":[],"delete":["13","    <DeferredSpinner","14","      loading={false}","15","      timeout={100}","16","    \/>","47","    <DeferredSpinner","48","      loading={false}","49","      timeout={100}","50","    \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":[{"add":["97","      login","110","      login"],"delete":["33","  organization: string | undefined;","68","      organization: this.props.organization,","99","      login,","100","      organization: this.props.organization","113","      login,","114","      organization: this.props.organization"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":[{"add":["28","  const wrapper = shallow(<EditMembers group={group} onEdit={onEdit} \/>);"],"delete":["28","  const wrapper = shallow(<EditMembers group={group} onEdit={onEdit} organization=\"org\" \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/List-test.tsx.snap":[{"add":["14","          className=\"nowrap width-10\"","15","          colSpan={2}","43","          colSpan={2}","66","        key=\"bar\"","81","        key=\"foo\"","96","        key=\"sonar-users\""],"delete":["14","          className=\"nowrap\"","64","        key=\"3\"","68","        organization=\"org\"","80","        key=\"2\"","84","        organization=\"org\"","96","        key=\"1\"","100","        organization=\"org\""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/ListItem-test.tsx.snap":[{"add":["2","exports[`should render correctly 1`] = `","4","  data-id=\"Foo\"","7","    className=\"width-20\"","16","    className=\"thin text-middle text-right little-padded-right\"","18","    1","19","  <\/td>","20","  <td","21","    className=\"little-padded-left\"","22","  >","23","    <EditMembers","24","      group={","25","        Object {","26","          \"id\": 1,","27","          \"membersCount\": 1,","28","          \"name\": \"Foo\",","30","      }","31","      onEdit={[MockFunction]}","32","    \/>","64","exports[`should render correctly: default group 1`] = `","66","  data-id=\"Foo\"","69","    className=\"width-20\"","85","    className=\"thin text-middle text-right little-padded-right\"","87","    1","90","    className=\"little-padded-left\"","91","  \/>","92","  <td"],"delete":["2","exports[`should delete group 1`] = `","4","  data-id={3}","7","    className=\" width-20\"","16","    className=\"width-10\"","18","    <div","19","      className=\"display-flex-center\"","20","    >","21","      <span","22","        className=\"spacer-right\"","23","      >","24","        5","25","      <\/span>","26","      <EditMembers","27","        group={","28","          Object {","29","            \"id\": 3,","30","            \"membersCount\": 5,","31","            \"name\": \"Foo\",","32","          }","34","        onEdit={[MockFunction]}","35","        organization=\"org\"","36","      \/>","37","    <\/div>","69","exports[`should render default group 1`] = `","71","  data-id={3}","74","    className=\" width-20\"","90","    className=\"width-10\"","92","    <div","93","      className=\"display-flex-center\"","94","    >","95","      <span","96","        className=\"spacer-right\"","97","      >","98","        5","99","      <\/span>","100","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/Header-test.tsx":[{"add":["26","  const wrapper = shallow(<Header onCreate={onCreate} \/>);"],"delete":["26","  const wrapper = shallow(<Header loading={false} onCreate={onCreate} \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":[{"add":["22","import { translate } from 'sonar-ui-common\/helpers\/l10n';","61","        <ButtonIcon","62","          aria-label={translate('groups.users.edit')}","63","          className=\"button-small\"","64","          onClick={this.handleMembersClick}","65","          title={translate('groups.users.edit')}>","69","          <EditMembersModal group={this.props.group} onClose={this.handleModalClose} \/>"],"delete":["27","  organization: string | undefined;","61","        <ButtonIcon className=\"button-small\" onClick={this.handleMembersClick}>","65","          <EditMembersModal","66","            group={this.props.group}","67","            onClose={this.handleModalClose}","68","            organization={this.props.organization}","69","          \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/Header.tsx":[{"add":[],"delete":["21","import DeferredSpinner from 'sonar-ui-common\/components\/ui\/DeferredSpinner';","26","  loading: boolean;","66","          <DeferredSpinner loading={this.props.loading} \/>","67",""]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/App-test.tsx":[{"add":["28","import { mockGroup } from '..\/..\/..\/..\/helpers\/testMocks';","70","  expect(searchUsersGroups).toHaveBeenCalledWith({ q: '' });","87","  wrapper.setState({ groupToBeDeleted: mockGroup({ name: 'Members' }) });","88","  wrapper.instance().handleDelete();","91","  expect(wrapper.state().groupToBeDeleted).toBeUndefined();","92","});","93","","94","it('should ignore deletion', async () => {","95","  const wrapper = shallowRender();","96","  await waitAndUpdate(wrapper);","97","  wrapper.setState({ groupToBeDeleted: undefined });","98","  wrapper.instance().handleDelete();","99","  expect(deleteGroup).not.toHaveBeenCalled();","105","  wrapper.setState({ editedGroup: mockGroup({ id: 1, name: 'Owners' }) });","106","  wrapper.instance().handleEdit({ description: 'foo', name: 'bar' });","118","it('should ignore edition', async () => {","119","  const wrapper = shallowRender();","120","  await waitAndUpdate(wrapper);","121","  wrapper.setState({ editedGroup: undefined });","122","  wrapper.instance().handleEdit({ description: 'nope', name: 'nuhuh' });","123","  expect(updateGroup).not.toHaveBeenCalled();","124","});","125","","131","  expect(searchUsersGroups).toHaveBeenCalledWith({ p: 2, q: '' });","139","  expect(searchUsersGroups).toBeCalledWith({ q: 'foo' });","143","it('should handle edit modal', async () => {","144","  const editedGroup = mockGroup();","145","","146","  const wrapper = shallowRender();","147","  await waitAndUpdate(wrapper);","148","  expect(wrapper.state().editedGroup).toBeUndefined();","149","","150","  wrapper.instance().openEditForm(editedGroup);","151","  expect(wrapper.state().editedGroup).toEqual(editedGroup);","152","","153","  wrapper.instance().closeEditForm();","154","  expect(wrapper.state().editedGroup).toBeUndefined();","155","});","156","","157","it('should handle delete modal', async () => {","158","  const groupToBeDeleted = mockGroup();","159","","160","  const wrapper = shallowRender();","161","  await waitAndUpdate(wrapper);","162","  expect(wrapper.state().groupToBeDeleted).toBeUndefined();","163","","164","  wrapper.instance().openDeleteForm(groupToBeDeleted);","165","  expect(wrapper.state().groupToBeDeleted).toEqual(groupToBeDeleted);","166","","167","  wrapper.instance().closeDeleteForm();","168","  expect(wrapper.state().groupToBeDeleted).toBeUndefined();","169","});","170","","171","it('should refresh correctly', async () => {","172","  const wrapper = shallowRender();","173","","174","  await waitAndUpdate(wrapper);","175","","176","  const query = 'preserve me';","177","  wrapper.setState({ paging: { pageIndex: 2, pageSize: 2, total: 5 }, query });","178","","179","  (searchUsersGroups as jest.Mock).mockClear();","180","","181","  wrapper.instance().refresh();","182","  await waitAndUpdate(wrapper);","183","","184","  expect(searchUsersGroups).toHaveBeenNthCalledWith(1, { organization: undefined, q: query });","185","  expect(searchUsersGroups).toHaveBeenNthCalledWith(2, { organization: undefined, q: query, p: 2 });","186","});","187","","189","  return shallow<App>(<App {...props} \/>);"],"delete":["28","import { mockOrganization } from '..\/..\/..\/..\/helpers\/testMocks';","70","  expect(searchUsersGroups).toHaveBeenCalledWith({ organization: 'foo', q: '' });","81","  expect(wrapper.state('groups')).toHaveLength(3);","88","  wrapper.instance().handleDelete('Members');","91","  expect(wrapper.state('groups')).toHaveLength(1);","97","  wrapper.instance().handleEdit({ id: 1, description: 'foo', name: 'bar' });","114","  expect(searchUsersGroups).toHaveBeenCalledWith({ organization: 'foo', p: 2, q: '' });","122","  expect(searchUsersGroups).toBeCalledWith({ organization: 'foo', q: 'foo' });","127","  return shallow<App>(<App organization={mockOrganization()} {...props} \/>);"]}],"server\/sonar-web\/src\/main\/js\/api\/user_groups.ts":[{"add":["64","  organization?: string;","74","export function deleteGroup(data: { name: string; organization?: string }) {"],"delete":["64","  organization: string | undefined;","74","export function deleteGroup(data: { name: string; organization: string | undefined }) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":[{"add":["24","import { omitNil } from 'sonar-ui-common\/helpers\/request';","27","import DeleteForm from '.\/DeleteForm';","28","import Form from '.\/Form';","34","  editedGroup?: T.Group;","35","  groupToBeDeleted?: T.Group;","41","export default class App extends React.PureComponent<{}, State> {","68","  fetchGroups = async (data?: { p?: number; q?: string }) => {","69","    try {","70","      const { groups, paging } = await this.makeFetchGroupsRequest(data);","74","    } catch {","75","      this.stopLoading();","76","    }","79","  fetchMoreGroups = async () => {","80","    const { paging: currentPaging } = this.state;","81","    if (currentPaging && currentPaging.total > currentPaging.pageIndex * currentPaging.pageSize) {","82","      try {","83","        const { groups, paging } = await this.makeFetchGroupsRequest({","84","          p: currentPaging.pageIndex + 1","85","        });","93","      } catch {","94","        this.stopLoading();","95","      }","104","  refresh = async () => {","105","    const { paging, query } = this.state;","106","","107","    await this.fetchGroups({ q: query });","108","","109","    \/\/ reload all pages in order","110","    if (paging && paging.pageIndex > 1) {","111","      for (let p = 1; p < paging.pageIndex; p++) {","112","        await this.fetchMoreGroups();","113","      }","114","    }","117","  closeDeleteForm = () => {","118","    this.setState({ groupToBeDeleted: undefined });","121","  closeEditForm = () => {","122","    this.setState({ editedGroup: undefined });","125","  openDeleteForm = (group: T.Group) => {","126","    this.setState({ groupToBeDeleted: group });","127","  };","128","","129","  openEditForm = (group: T.Group) => {","130","    this.setState({ editedGroup: group });","131","  };","132","","133","  handleCreate = async (data: { description: string; name: string }) => {","134","    await createGroup({ ...data });","135","","136","    await this.refresh();","137","  };","138","","139","  handleDelete = async () => {","140","    const { groupToBeDeleted } = this.state;","141","","142","    if (!groupToBeDeleted) {","143","      return;","144","    }","145","","146","    await deleteGroup({ name: groupToBeDeleted.name });","147","","148","    await this.refresh();","149","","150","    if (this.mounted) {","151","      this.setState({ groupToBeDeleted: undefined });","152","    }","153","  };","154","","155","  handleEdit = async ({ name, description }: { name?: string; description: string }) => {","156","    const { editedGroup } = this.state;","157","","158","    if (!editedGroup) {","159","      return;","160","    }","161","","162","    const data = {","163","      description,","164","      id: editedGroup.id,","165","      \/\/ pass `name` only if it has changed, otherwise the WS fails","166","      ...omitNil({ name: name !== editedGroup.name ? name : undefined })","167","    };","168","","169","    await updateGroup(data);","170","","171","    if (this.mounted) {","172","      this.setState(({ groups = [] }: State) => ({","173","        editedGroup: undefined,","174","        groups: groups.map(group =>","175","          group.name === editedGroup.name ? { ...group, ...data } : group","176","        )","177","      }));","178","    }","182","    const { editedGroup, groupToBeDeleted, groups, loading, paging, query } = this.state;","184","    const showAnyone = 'anyone'.includes(query.toLowerCase());","191","          <Header onCreate={this.handleCreate} \/>","205","              onDelete={this.openDeleteForm}","206","              onEdit={this.openEditForm}","216","                loading={loading}","223","","224","          {groupToBeDeleted && (","225","            <DeleteForm","226","              group={groupToBeDeleted}","227","              onClose={this.closeDeleteForm}","228","              onSubmit={this.handleDelete}","229","            \/>","230","          )}","231","","232","          {editedGroup && (","233","            <Form","234","              confirmButtonText={translate('update_verb')}","235","              group={editedGroup}","236","              header={translate('groups.update_group')}","237","              onClose={this.closeEditForm}","238","              onSubmit={this.handleEdit}","239","            \/>","240","          )}"],"delete":["29","interface Props {","30","  organization?: Pick<T.Organization, 'key'>;","31","}","32","","40","export default class App extends React.PureComponent<Props, State> {","53","  get organization() {","54","    return this.props.organization && this.props.organization.key;","55","  }","56","","60","      organization: this.organization,","72","  fetchGroups = (data?: { p?: number; q?: string }) => {","73","    this.makeFetchGroupsRequest(data).then(({ groups, paging }) => {","77","    }, this.stopLoading);","80","  fetchMoreGroups = () => {","81","    const { paging } = this.state;","82","    if (paging && paging.total > paging.pageIndex * paging.pageSize) {","83","      this.makeFetchGroupsRequest({ p: paging.pageIndex + 1 }).then(({ groups, paging }) => {","91","      }, this.stopLoading);","100","  refresh = () => {","101","    this.fetchGroups({ q: this.state.query });","104","  handleCreate = (data: { description: string; name: string }) => {","105","    return createGroup({ ...data, organization: this.organization }).then(group => {","106","      if (this.mounted) {","107","        this.setState(({ groups = [] }: State) => ({","108","          groups: [...groups, group]","109","        }));","110","      }","111","    });","114","  handleDelete = (name: string) => {","115","    return deleteGroup({ name, organization: this.organization }).then(() => {","116","      if (this.mounted) {","117","        this.setState(({ groups = [] }: State) => ({","118","          groups: groups.filter(group => group.name !== name)","119","        }));","120","      }","121","    });","124","  handleEdit = (data: { description?: string; id: number; name?: string }) => {","125","    return updateGroup(data).then(() => {","126","      if (this.mounted) {","127","        this.setState(({ groups = [] }: State) => ({","128","          groups: groups.map(group => (group.id === data.id ? { ...group, ...data } : group))","129","        }));","130","      }","131","    });","135","    const { groups, loading, paging, query } = this.state;","137","    const showAnyone =","138","      this.props.organization === undefined && 'anyone'.includes(query.toLowerCase());","145","          <Header loading={loading} onCreate={this.handleCreate} \/>","159","              onDelete={this.handleDelete}","160","              onEdit={this.handleEdit}","162","              organization={this.organization}"]}]}},"a100aef8cfcc0578e18ef1b5839a75bf0d915423":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issues\/IssuesMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorBuilder.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issues\/IssuesMediumTest.java":[{"add":["287","","288","","289","    \/\/ SONAR-11850 The Maven scanner replicates properties defined on the root module to all modules","290","    logTester.clear();","291","    result = tester.newAnalysis()","292","      .properties(ImmutableMap.<String, String>builder()","293","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","294","        .put(\"sonar.projectKey\", \"com.foo.project\")","295","        .put(\"sonar.modules\", \"moduleA,moduleB\")","296","        .put(\"sonar.sources\", \"src\")","297","        .put(\"sonar.scm.disabled\", \"true\")","298","        .put(\"sonar.issue.ignore.multicriteria\", \"1\")","299","        .put(\"sonar.issue.ignore.multicriteria.1.ruleKey\", \"*\")","300","        .put(\"sonar.issue.ignore.multicriteria.1.resourceKey\", \"*\")","301","        .put(\"moduleA.sonar.issue.ignore.multicriteria\", \"1\")","302","        .put(\"moduleA.sonar.issue.ignore.multicriteria.1.ruleKey\", \"*\")","303","        .put(\"moduleA.sonar.issue.ignore.multicriteria.1.resourceKey\", \"*\")","304","        .build())","305","      .execute();","306","","307","    assertThat(logTester.logs(LoggerLevel.WARN)).isEmpty();"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorBuilder.java":[{"add":["33","import java.util.Objects;","185","      checkUnsupportedIssueExclusions(moduleProperties, parent.properties());","194","  private void checkUnsupportedIssueExclusions(Map<String, String> moduleProperties, Map<String, String> parentProps) {","196","      if (moduleProperties.containsKey(p) && !Objects.equals(moduleProperties.get(p), parentProps.get(p))) {"],"delete":["184","      checkUnsupportedIssueExclusions(moduleProperties);","193","  private void checkUnsupportedIssueExclusions(Map<String, String> moduleProperties) {","195","      if (moduleProperties.containsKey(p)) {"]}]}},"84c3c4c71a7fadb52b7214b9514f5227835c2cac":{"changes":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/AuthorizationDao.java":"MODIFY","server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":["40","import java.util.function.IntFunction;","58","  protected DatabaseUtils() {","59","    throw new IllegalStateException(\"Utility class\");","60","  }","61","","102","    return executeLargeInputs(input, function, i -> i);","105","  \/**","106","   * Partition by 1000 elements a list of input and execute a function on each part.","107","   *","108","   * The goal is to prevent issue with ORACLE when there's more than 1000 elements in a 'in ('X', 'Y', ...)'","109","   * and with MsSQL when there's more than 2000 parameters in a query","110","   *\/","111","  public static <OUTPUT, INPUT extends Comparable<INPUT>> List<OUTPUT> executeLargeInputs(Collection<INPUT> input, Function<List<INPUT>, List<OUTPUT>> function,","112","    IntFunction<Integer> partitionSizeManipulations) {","113","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptyList() : new ArrayList<>(size), partitionSizeManipulations);","114","  }","115","","116","  public static <OUTPUT, INPUT extends Comparable<INPUT>> Set<OUTPUT> executeLargeInputsIntoSet(Collection<INPUT> input, Function<List<INPUT>, Set<OUTPUT>> function,","117","    IntFunction<Integer> partitionSizeManipulations) {","118","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptySet() : new HashSet<>(size), partitionSizeManipulations);","122","    Function<List<INPUT>, RESULT> function, java.util.function.Function<Integer, RESULT> outputInitializer, IntFunction<Integer> partitionSizeManipulations) {","127","    for (List<INPUT> partition : toUniqueAndSortedPartitions(input, partitionSizeManipulations)) {","143","    executeLargeUpdates(inputs, consumer, i -> i);","144","  }","145","","146","  \/**","147","   * Partition by 1000 elements a list of input and execute a consumer on each part.","148","   *","149","   * The goal is to prevent issue with ORACLE when there's more than 1000 elements in a 'in ('X', 'Y', ...)'","150","   * and with MsSQL when there's more than 2000 parameters in a query","151","   *","152","   * @param inputs the whole list of elements to be partitioned","153","   * @param consumer the mapper method to be executed, for example {@code mapper(dbSession)::selectByUuids}","154","   * @param partitionSizeManipulations the function that computes the number of usages of a partition, for example","155","   *                                   {@code partitionSize -> partitionSize \/ 2} when the partition of elements","156","   *                                   in used twice in the SQL request.","157","   *\/","158","  public static <INPUT extends Comparable<INPUT>> void executeLargeUpdates(Collection<INPUT> inputs, Consumer<List<INPUT>> consumer,","159","    IntFunction<Integer> partitionSizeManipulations) {","160","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs, partitionSizeManipulations);","172","   * @param inputs the whole list of elements to be partitioned","174","   * @param partitionSizeManipulations the function that computes the number of usages of a partition, for example","175","   *                                   {@code partitionSize -> partitionSize \/ 2} when the partition of elements","176","   *                                   in used twice in the SQL request.","179","  public static <INPUT extends Comparable<INPUT>> int executeLargeUpdates(Collection<INPUT> inputs, Function<List<INPUT>, Integer> sqlCaller,","180","    IntFunction<Integer> partitionSizeManipulations) {","181","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs, partitionSizeManipulations);","193","    return toUniqueAndSortedPartitions(inputs, i -> i);","194","  }","195","","196","  \/**","197","   * Ensure values {@code inputs} are unique (which avoids useless arguments) and sorted before creating the partition.","198","   *\/","199","  public static <INPUT extends Comparable<INPUT>> Iterable<List<INPUT>> toUniqueAndSortedPartitions(Collection<INPUT> inputs, IntFunction<Integer> partitionSizeManipulations) {","200","    int partitionSize = partitionSizeManipulations.apply(PARTITION_SIZE_FOR_ORACLE);","201","    return Iterables.partition(toUniqueAndSortedList(inputs), partitionSize);"],"delete":["97","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptyList() : new ArrayList<>(size));","100","  public static <OUTPUT, INPUT extends Comparable<INPUT>> Set<OUTPUT> executeLargeInputsIntoSet(Collection<INPUT> input, Function<List<INPUT>, Set<OUTPUT>> function) {","101","    return executeLargeInputs(input, function, size -> size == 0 ? Collections.emptySet() : new HashSet<>(size));","105","    Function<List<INPUT>, RESULT> function, java.util.function.Function<Integer, RESULT> outputInitializer) {","110","    for (List<INPUT> partition : toUniqueAndSortedPartitions(input)) {","126","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs);","139","   *","142","  public static <INPUT extends Comparable<INPUT>> int executeLargeUpdates(Collection<INPUT> inputs, Function<List<INPUT>, Integer> sqlCaller) {","143","    Iterable<List<INPUT>> partitions = toUniqueAndSortedPartitions(inputs);","155","    return Iterables.partition(toUniqueAndSortedList(inputs), PARTITION_SIZE_FOR_ORACLE);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/AuthorizationDao.java":[{"add":["138","      },","139","      partitionSize -> partitionSize \/ 2);","150","      },","151","      partitionSize -> partitionSize \/ 2);","161","      partitionOfIds -> mapper(dbSession).keepAuthorizedUsersForRoleAndProject(role, projectId, partitionOfIds),","162","      partitionSize -> partitionSize \/ 3);"],"delete":["138","      });","149","      });","159","      partitionOfIds -> mapper(dbSession).keepAuthorizedUsersForRoleAndProject(role, projectId, partitionOfIds));"]}],"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":[{"add":["27","import java.util.ArrayList;","284","  public void executeLargeInputs_uses_specified_partition_size_manipulations() {","285","    List<List<Integer>> partitions = new ArrayList<>();","286","    List<Integer> outputs = DatabaseUtils.executeLargeInputs(","287","      asList(1, 2, 3),","288","      partition -> {","289","        partitions.add(partition);","290","        return partition;","291","      },","292","      i -> i \/ 500);","293","","294","    assertThat(outputs).containsExactly(1,2,3);","295","    assertThat(partitions).containsExactly(asList(1,2), asList(3));","296","  }","297","","298","  @Test"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":[{"add":["21","import java.util.Collection;","23","import java.util.List;","26","import java.util.stream.Collectors;","485","  public void keepAuthorizedProjectIds_should_be_able_to_handle_lots_of_projects() {","486","    List<ComponentDto> projects = IntStream.range(0, 2000).mapToObj(i -> db.components().insertPublicProject(organization)).collect(Collectors.toList());","487","","488","    Collection<Long> ids = projects.stream().map(ComponentDto::getId).collect(Collectors.toSet());","489","    assertThat(underTest.keepAuthorizedProjectIds(dbSession, ids, null, UserRole.USER))","490","      .containsOnly(ids.toArray(new Long[0]));","491","  }","492","","493","  @Test","494","  public void keepAuthorizedProjectUuids_should_be_able_to_handle_lots_of_projects() {","495","    List<ComponentDto> projects = IntStream.range(0, 2000).mapToObj(i -> db.components().insertPublicProject(organization)).collect(Collectors.toList());","496","","497","    Collection<String> uuids = projects.stream().map(ComponentDto::uuid).collect(Collectors.toSet());","498","    assertThat(underTest.keepAuthorizedProjectUuids(dbSession, uuids, null, UserRole.USER))","499","      .containsOnly(uuids.toArray(new String[0]));","500","  }","501","","502","  @Test","686","  public void keepAuthorizedUsersForRoleAndProject_should_be_able_to_handle_lots_of_users() {","687","    List<UserDto> users = IntStream.range(0, 2000).mapToObj(i -> db.users().insertUser()).collect(Collectors.toList());","688","","689","    assertThat(underTest.keepAuthorizedUsersForRoleAndProject(dbSession,","690","      users.stream().map(UserDto::getId).collect(Collectors.toSet()), \"user\", PROJECT_ID)).isEmpty();","691","  }","692","","693","","694","  @Test"],"delete":[]}]}},"9538f9ae5502b33651f1d916ee69aaf74c121231":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeNotif-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeItem-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/SystemUpgradeNotif.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeNotif-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/styles.css":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeIntermediate-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeIntermediate.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeForm-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeIntermediate-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/style.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeItem.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeForm-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeForm.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeItem-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeNotif.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/system.ts":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/alerts.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeNotif-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeItem-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/SystemUpgradeNotif.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeNotif-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/styles.css":[{"add":["63","","64",".system-upgrade-version {","65","  padding: 8px;","66","}","67","","68",".system-upgrade-version ~ .system-upgrade-version {","69","  margin-top: 10px;","70","  padding-top: 18px;","71","  border-top: solid 1px #e6e6e6;","72","}","73","","74",".system-upgrade-intermediate {","75","  padding: 6px 10px;","76","}"],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2236","system.download_x=Download {0}","2237","system.hide_intermediate_versions=Hide intermediate versions","2238","system.how_to_upgrade=How to upgrade?","2240","system.latest_version=Latest Version","2241","system.latest_lts_version=Latest LTS Version","2246","system.new_version_available=A new version of SonarQube is available.","2247","system.release_notes=Release Notes","2248","system.released_x=Released {0}","2251","system.see_sonarqube_downloads=See All SonarQube Downloads","2253","system.show_intermediate_versions=Show intermediate versions","2254","system.system_upgrade=System Upgrade","2255","system.version_is_availble={version} is available"],"delete":["2068","marketplace.system_upgrades=System Upgrades","2226",""]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeIntermediate-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeIntermediate.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeForm-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeIntermediate-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/style.css":[{"add":[],"delete":["32","","33",".marketplace-notifs .alert {","34","  padding: 8px;","35","}","36","","37",".marketplace-notifs .alert:last-child {","38","  margin-bottom: 16px;","39","}"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/__tests__\/utils-test.ts":[{"add":["20","import { ClusterSysInfo, SysInfo, SystemUpgrade } from '..\/..\/..\/api\/system';","86","","87","describe('sortUpgrades', () => {","88","  it('should sort correctly versions', () => {","89","    expect(","90","      u.sortUpgrades([","91","        { version: '5.4.2' },","92","        { version: '5.10' },","93","        { version: '5.1' },","94","        { version: '5.4' }","95","      ] as SystemUpgrade[])","96","    ).toEqual([{ version: '5.10' }, { version: '5.4.2' }, { version: '5.4' }, { version: '5.1' }]);","97","    expect(","98","      u.sortUpgrades([","99","        { version: '5.10' },","100","        { version: '5.1.2' },","101","        { version: '6.0' },","102","        { version: '6.9' }","103","      ] as SystemUpgrade[])","104","    ).toEqual([{ version: '6.9' }, { version: '6.0' }, { version: '5.10' }, { version: '5.1.2' }]);","105","  });","106","});","107","","108","describe('groupUpgrades', () => {","109","  it('should group correctly', () => {","110","    expect(","111","      u.groupUpgrades([","112","        { version: '5.10' },","113","        { version: '5.4.2' },","114","        { version: '5.4' },","115","        { version: '5.1' }","116","      ] as SystemUpgrade[])","117","    ).toEqual([","118","      [{ version: '5.10' }, { version: '5.4.2' }, { version: '5.4' }, { version: '5.1' }]","119","    ]);","120","    expect(","121","      u.groupUpgrades([","122","        { version: '6.9' },","123","        { version: '6.7' },","124","        { version: '6.0' },","125","        { version: '5.10' },","126","        { version: '5.4.2' }","127","      ] as SystemUpgrade[])","128","    ).toEqual([","129","      [{ version: '6.9' }, { version: '6.7' }, { version: '6.0' }],","130","      [{ version: '5.10' }, { version: '5.4.2' }]","131","    ]);","132","  });","133","});"],"delete":["20","import { ClusterSysInfo, SysInfo } from '..\/..\/..\/api\/system';"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeItem.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":[{"add":["187","    this.setState({ editionStatus });","213","        <div className=\"page-notifs\">"],"delete":["187","    this.setState({ editionStatus: editionStatus });","213","        <div className=\"marketplace-notifs\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeForm-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeForm.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":[{"add":["25","import SystemUpgradeNotif from '.\/system-upgrade\/SystemUpgradeNotif';","120","        <SystemUpgradeNotif \/>"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeItem-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeNotif.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/utils.ts":[{"add":["19","import { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';","33","  SysValueObject,","34","  SystemUpgrade","188","","189","export function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {","190","  return sortBy(upgrades, [","191","    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),","192","    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),","193","    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)","194","  ]);","195","}","196","","197","export function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {","198","  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);","199","  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));","200","  return sortedMajor.map(key => groupedVersions[key]);","201","}"],"delete":["19","import { each, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';","33","  SysValueObject"]}],"server\/sonar-web\/src\/main\/js\/api\/system.ts":[{"add":["60","export interface SystemUpgrade {","61","  version: string;","62","  description: string;","63","  releaseDate: string;","64","  changeLogUrl: string;","65","  downloadUrl: string;","66","  plugins: any;","67","}","68","","81","export function getSystemUpgrades(): Promise<{","82","  upgrades: SystemUpgrade[];","83","  updateCenterRefresh: string;","84","}> {","85","  return getJSON('\/api\/system\/upgrades');","86","}","87",""],"delete":[]}],"server\/sonar-web\/src\/main\/less\/components\/alerts.less":[{"add":["67","","68",".page-notifs .alert {","69","  display: flex;","70","  justify-content: space-between;","71","  padding: 8px 10px;","72","}","73","","74",".page-notifs .alert:last-child {","75","  margin-bottom: 16px;","76","}"],"delete":[]}]}},"a4bb18bf2e7dee17af8ae2974f47a9f8909a638b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["183","    } else if (","184","      !this.state.openIssue &&","185","      (prevState.selected !== this.state.selected || prevState.openIssue != null)","186","    ) {","187","      \/\/ if user simply selected another issue","188","      \/\/ or if he went from the source code back to the list of issues","189","      this.scrollToSelectedIssue();"],"delete":["183","    } else if (prevState.selected !== this.state.selected) {","184","      if (!this.state.openIssue) {","185","        this.scrollToSelectedIssue();","186","      }"]}]}},"f64450ef7cf35b30c4730491e9f30f31f688b98b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutAppForSonarQubeDotComLazyLoader.js":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":[{"add":["38","import AboutAppForSonarQubeDotComLazyLoader from '.\/AboutAppForSonarQubeDotComLazyLoader';","121","        <AboutAppForSonarQubeDotComLazyLoader"],"delete":["38","import AboutAppForSonarQubeDotCom from '.\/AboutAppForSonarQubeDotCom';","121","        <AboutAppForSonarQubeDotCom"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutAppForSonarQubeDotComLazyLoader.js":[{"add":[],"delete":[]}]}},"489725dae8e137b669d596a9c9a53e86e6eee2ac":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["154","        locationsNavigator: false,"],"delete":[]}]}},"4cb268769ddfce3f001a9587218594b65697f1bf":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/docs\/DocMarkdownBlock.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/docs\/DocMarkdownBlock.css":[{"add":["20",".markdown-content .alert {","26",".markdown-content .alert.is-inline {","30",".markdown-content .alert:empty {","34",".markdown-content .alert-error {","40",".markdown-content .alert-error .alert-icon {","44",".markdown-content .alert-warning {","50",".markdown-content .alert-warning .alert-icon {","54",".markdown-content .alert-info {","60",".markdown-content .alert-info .alert-icon {","64",".markdown-content .alert-success {","70",".markdown-content .alert-success .alert-icon {"],"delete":["20",".alert {","26",".alert.is-inline {","30",".alert:empty {","34",".alert-error {","40",".alert-error .alert-icon {","44",".alert-warning {","50",".alert-warning .alert-icon {","54",".alert-info {","60",".alert-info .alert-icon {","64",".alert-success {","70",".alert-success .alert-icon {"]}]}},"b50a849b37ac7832f5ebd7e402d1e44f2b11eb20":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/SearchableFilterFooter.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/LanguagesFilter.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/__tests__\/LanguagesFilter-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/__tests__\/__snapshots__\/LanguagesFilter-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/SearchableFilterFooter.tsx":[{"add":["25","  isFavorite?: boolean;","26","  isLoading?: boolean;","29","  onQueryChange: (change: RawQuery) => void;","30","  options: Array<{ label: string; value: string }>;","32","  property: string;","33","  query: { [x: string]: any };"],"delete":["25","  onQueryChange: (change: RawQuery) => void;","26","  property: string;","27","  query: { [x: string]: any };","28","  options: Array<{ label: string; value: string }>;","31","  isLoading?: boolean;","32","  isFavorite?: boolean;"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/LanguagesFilter.tsx":[{"add":["38","  value?: string[];","43","    const { facet, languages } = this.props;","44","    let languageKeys = Object.keys(languages);","45","    if (facet) {","46","      languageKeys = difference(languageKeys, Object.keys(facet));","48","    return languageKeys.map(key => ({ label: languages[key].name, value: key }));"],"delete":["38","  value?: Array<string>;","41","const LIST_SIZE = 10;","42","","45","    let languageKeys = Object.keys(this.props.languages);","46","    if (this.props.facet) {","47","      languageKeys = difference(languageKeys, Object.keys(this.props.facet));","49","    return languageKeys","50","      .slice(0, LIST_SIZE)","51","      .map(key => ({ label: this.props.languages[key].name, value: key }));"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/__tests__\/LanguagesFilter-test.tsx":[{"add":[],"delete":["59","","60","it('should render maximum 10 languages in the searchbox results', () => {","61","  const manyLanguages = {","62","    ...languages,","63","    c: { key: 'c', name: 'c' },","64","    d: { key: 'd', name: 'd' },","65","    e: { key: 'e', name: 'e' },","66","    f: { key: 'f', name: 'f' },","67","    g: { key: 'g', name: 'g' },","68","    h: { key: 'h', name: 'h' },","69","    i: { key: 'i', name: 'i' },","70","    k: { key: 'k', name: 'k' },","71","    l: { key: 'l', name: 'l' }","72","  };","73","  const wrapper = shallow(","74","    <LanguagesFilter","75","      facet={{ ...languagesFacet, g: 1 }}","76","      languages={manyLanguages}","77","      onQueryChange={jest.fn()}","78","      query={{ languages: ['java', 'g'] }}","79","      value={['java', 'g']}","80","    \/>","81","  );","82","  expect(wrapper).toMatchSnapshot();","83","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/filters\/__tests__\/__snapshots__\/LanguagesFilter-test.tsx.snap":[{"add":[],"delete":["2","exports[`should render maximum 10 languages in the searchbox results 1`] = `","3","<Filter","4","  facet={","5","    Object {","6","      \"cs\": 4,","7","      \"g\": 1,","8","      \"java\": 39,","9","      \"js\": 1,","10","    }","11","  }","12","  footer={","13","    <SearchableFilterFooter","14","      onQueryChange={[MockFunction]}","15","      options={","16","        Array [","17","          Object {","18","            \"label\": \"Flex\",","19","            \"value\": \"flex\",","20","          },","21","          Object {","22","            \"label\": \"PHP\",","23","            \"value\": \"php\",","24","          },","25","          Object {","26","            \"label\": \"Python\",","27","            \"value\": \"py\",","28","          },","29","          Object {","30","            \"label\": \"c\",","31","            \"value\": \"c\",","32","          },","33","          Object {","34","            \"label\": \"d\",","35","            \"value\": \"d\",","36","          },","37","          Object {","38","            \"label\": \"e\",","39","            \"value\": \"e\",","40","          },","41","          Object {","42","            \"label\": \"f\",","43","            \"value\": \"f\",","44","          },","45","          Object {","46","            \"label\": \"h\",","47","            \"value\": \"h\",","48","          },","49","          Object {","50","            \"label\": \"i\",","51","            \"value\": \"i\",","52","          },","53","          Object {","54","            \"label\": \"k\",","55","            \"value\": \"k\",","56","          },","57","        ]","58","      }","59","      property=\"languages\"","60","      query={","61","        Object {","62","          \"languages\": Array [","63","            \"java\",","64","            \"g\",","65","          ],","66","        }","67","      }","68","    \/>","69","  }","70","  getFacetValueForOption={[Function]}","71","  header={","72","    <FilterHeader","73","      name=\"projects.facets.languages\"","74","    \/>","75","  }","76","  onQueryChange={[MockFunction]}","77","  options={","78","    Array [","79","      \"java\",","80","      \"cs\",","81","      \"g\",","82","      \"js\",","83","    ]","84","  }","85","  property=\"languages\"","86","  query={","87","    Object {","88","      \"languages\": Array [","89","        \"java\",","90","        \"g\",","91","      ],","92","    }","93","  }","94","  renderOption={[Function]}","95","  value={","96","    Array [","97","      \"java\",","98","      \"g\",","99","    ]","100","  }","101","\/>","102","`;","103",""]}]}},"939fb2453e19774469729f2ced0de7daee67bbb7":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/lib\/need_authentication.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/lib\/need_authentication.rb":[{"add":["162","      # Note that validation disabled","163","      user.save(false)","165","    # Must be outside the transaction in order to not have a lock on the users table : http:\/\/jira.sonarsource.com\/browse\/SONAR-6726","166","    user.notify_creation_handlers","167","    "],"delete":["162","      user.notify_creation_handlers","163","      user"]}]}},"81f6a5ff6a1b372fa401d31e98de2e50600a7cbe":{"changes":{"server\/sonar-vsts\/package.json":"MODIFY","server\/sonar-vsts\/yarn.lock":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-docs\/package.json":"MODIFY","server\/sonar-docs\/yarn.lock":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY"},"diff":{"server\/sonar-vsts\/package.json":[{"add":["10","    \"lodash\": \"4.17.15\",","31","    \"@types\/lodash\": \"4.14.138\","],"delete":["10","    \"lodash\": \"4.17.11\",","31","    \"@types\/lodash\": \"4.14.123\","]}],"server\/sonar-vsts\/yarn.lock":[{"add":["1052","\"@types\/lodash@4.14.138\":","1053","  version \"4.14.138\"","1054","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.138.tgz#34f52640d7358230308344e579c15b378d91989e\"","1055","  integrity sha1-NPUmQNc1gjAwg0TlecFbN42RmJ4=","5958","lodash@4.17.15, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.13, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.3.0:"],"delete":["1052","\"@types\/lodash@4.14.123\":","1053","  version \"4.14.123\"","1054","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.123.tgz#39be5d211478c8dd3bdae98ee75bb7efe4abfe4d\"","1055","  integrity sha1-Ob5dIRR4yN072umO51u37+Sr\/k0=","5958","lodash@4.17.11, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.3.0:","5959","  version \"4.17.11\"","5960","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.11.tgz#b39ea6229ef607ecd89e2c8df12536891cac9b8d\"","5961","  integrity sha1-s56mIp72B+zYniyN8SU2iRysm40=","5962","","5963","lodash@^4.17.13:"]}],"server\/sonar-web\/package.json":[{"add":["17","    \"lodash\": \"4.17.15\",","62","    \"@types\/lodash\": \"4.14.138\","],"delete":["17","    \"lodash\": \"4.17.11\",","62","    \"@types\/lodash\": \"4.14.123\","]}],"server\/sonar-docs\/package.json":[{"add":["17","    \"lodash\": \"4.17.15\",","29","    \"@types\/lodash\": \"4.14.138\","],"delete":["17","    \"lodash\": \"4.17.11\",","29","    \"@types\/lodash\": \"4.14.123\","]}],"server\/sonar-docs\/yarn.lock":[{"add":["1177","\"@types\/lodash@4.14.138\":","1178","  version \"4.14.138\"","1179","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.138.tgz#34f52640d7358230308344e579c15b378d91989e\"","1180","  integrity sha1-NPUmQNc1gjAwg0TlecFbN42RmJ4=","7582","lodash@4.17.15, lodash@^4.11.1, lodash@^4.13.1, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:","7583","  version \"4.17.15\"","7584","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.15.tgz#b447f6670a0455bbfeedd11392eff330ea097548\"","7585","  integrity sha1-tEf2ZwoEVbv+7dETku\/zMOoJdUg="],"delete":["1177","\"@types\/lodash@4.14.123\":","1178","  version \"4.14.123\"","1179","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.123.tgz#39be5d211478c8dd3bdae98ee75bb7efe4abfe4d\"","1180","  integrity sha1-Ob5dIRR4yN072umO51u37+Sr\/k0=","7582","lodash@4.17.11, lodash@^4.11.1, lodash@^4.13.1, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:","7583","  version \"4.17.11\"","7584","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.11.tgz#b39ea6229ef607ecd89e2c8df12536891cac9b8d\"","7585","  integrity sha1-s56mIp72B+zYniyN8SU2iRysm40="]}],"server\/sonar-web\/yarn.lock":[{"add":["1149","\"@types\/lodash@4.14.138\":","1150","  version \"4.14.138\"","1151","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.138.tgz#34f52640d7358230308344e579c15b378d91989e\"","1152","  integrity sha1-NPUmQNc1gjAwg0TlecFbN42RmJ4=","6470","lodash@4.17.15, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.13, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:"],"delete":["1149","\"@types\/lodash@4.14.123\":","1150","  version \"4.14.123\"","1151","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/lodash\/-\/lodash-4.14.123.tgz#39be5d211478c8dd3bdae98ee75bb7efe4abfe4d\"","1152","  integrity sha1-Ob5dIRR4yN072umO51u37+Sr\/k0=","6470","lodash@4.17.11, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.17.5, lodash@^4.3.0:","6471","  version \"4.17.11\"","6472","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/lodash\/-\/lodash-4.17.11.tgz#b39ea6229ef607ecd89e2c8df12536891cac9b8d\"","6473","  integrity sha1-s56mIp72B+zYniyN8SU2iRysm40=","6474","","6475","lodash@^4.17.13:"]}]}},"6103fc329f77399dab5fffc8c9688d6285cf67d3":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Action-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Params-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ResponseExample-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Menu-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Menu-test.tsx.snap":"ADD","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Params-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ActionChangelog-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Search-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ActionChangelog.tsx":"ADD","server\/sonar-web\/src\/main\/js\/components\/icons-components\/LinkIcon.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.tsx":"ADD","server\/sonar-web\/src\/main\/js\/api\/web-api.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/DeprecatedBadge.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Search-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/styles\/web-api.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/InternalBadge.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ResponseExample-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":"ADD","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Action-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Domain-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ActionChangelog-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Domain-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ResponseExample.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.tsx":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Action-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Params-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ResponseExample-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Menu-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Menu-test.tsx.snap":[{"add":[],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2877","api_documentation.possible_values=Possible values","2878","api_documentation.default_values=Default value","2879","api_documentation.example_values=Example value","2880","api_documentation.max_values=Maximum allowed values","2881","api_documentation.internal=internal","2882","api_documentation.deprecated=deprecated","2883","api_documentation.depracated_since_x=deprecated since {0}","2884","api_documentation.parameters=Parameters","2885","api_documentation.response_example=Response Example","2886","api_documentation.changelog=Changelog","2887",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Params-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ActionChangelog-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Search-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ActionChangelog.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/icons-components\/LinkIcon.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/web-api.ts":[{"add":["21","export interface Changelog {","22","  description: string;","23","  version: string;","24","}","25","","35","  maxValuesAllowed?: number;","38","  since?: string;","43","  changelog: Changelog[];","47","  internal: boolean;","49","  post: boolean;","50","  since?: string;","59","  since?: string;","60","}","61","","62","export interface Example {","63","  example: string;","64","  format: string;","77","export function fetchResponseExample(domain: string, action: string): Promise<Example> {"],"delete":["38","  since?: string;","39","  internal: boolean;","40","  post: boolean;","42","  changelog: Array<{ version: string; description: string }>;","64","export function fetchResponseExample(domain: string, action: string): Promise<{ example: string }> {"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/DeprecatedBadge.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Search-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/styles\/web-api.css":[{"add":["50",".web-api-action hr {","51","  margin: 10px 0 0;","52","  background-color: #ddd;","53","}","54",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/InternalBadge.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/ResponseExample-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Action-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Domain-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/ActionChangelog-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Domain-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/ResponseExample.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.tsx":[{"add":[],"delete":[]}]}},"f128c2dafa50eff8c5d5c94afef561da4d2f7a73":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeQueueMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeQueueMapper.xml":[{"add":["17","    order by","18","      cq.created_at asc,","19","      cq.id asc","23","    order by","24","      cq.created_at desc,","25","      cq.id desc","30","      <include refid=\"columns\"\/>","31","    from","32","      ce_queue cq","33","    where","34","      cq.uuid=#{uuid,jdbcType=VARCHAR}","38","    select","39","      count(1)","40","    from","41","      ce_queue","42","    where","43","      status=#{status,jdbcType=VARCHAR}","44","      <if test=\"componentUuid!=null\">","45","        and component_uuid=#{componentUuid,jdbcType=VARCHAR}","46","      <\/if>","50","    select","51","      count(1)","52","    from","53","      ce_queue","58","      <include refid=\"columns\"\/>","59","    from","60","      ce_queue cq","61","    where","62","      cq.component_uuid=#{componentUuid,jdbcType=VARCHAR}","68","      <include refid=\"columns\"\/>","69","    from","70","      ce_queue cq","82","    select","83","      count(1)","88","    from","89","      ce_queue cq","113","    select","114","      cq.uuid","115","    from","116","      ce_queue cq","117","    where","118","      cq.status='PENDING'","119","      and not exists (","120","        select","121","          1","122","        from","123","          ce_queue cq2","124","        where","125","          cq.component_uuid=cq2.component_uuid","126","          and cq2.status &lt;&gt; 'PENDING'","127","      )","133","    (","134","      uuid,","135","      task_type,","136","      component_uuid,","137","      status,","138","      submitter_login,","139","      started_at,","140","      created_at,","141","      updated_at","142","    )","144","      #{uuid,jdbcType=VARCHAR},","145","      #{taskType,jdbcType=VARCHAR},","146","      #{componentUuid,jdbcType=VARCHAR},","147","      #{status,jdbcType=VARCHAR},","148","      #{submitterLogin,jdbcType=VARCHAR},","149","      #{startedAt,jdbcType=BIGINT},","150","      #{createdAt,jdbcType=BIGINT},","151","      #{updatedAt,jdbcType=BIGINT}","156","    update ce_queue set","157","      status='PENDING',","158","      started_at=NULL,","159","      updated_at=#{updatedAt,jdbcType=BIGINT}","160","    where","161","      status &lt;&gt; 'PENDING'","165","    update ce_queue set","166","      status=#{newStatus,jdbcType=VARCHAR},","167","      started_at=#{startedAt,jdbcType=BIGINT},","168","      updated_at=#{updatedAt,jdbcType=BIGINT}","169","    where","170","      uuid=#{uuid,jdbcType=VARCHAR}","171","      and status=#{oldStatus,jdbcType=VARCHAR}","175","    delete from","176","      ce_queue","177","    where","178","      uuid=#{uuid,jdbcType=VARCHAR}"],"delete":["17","    order by cq.created_at asc, cq.id asc","21","    order by cq.created_at desc, cq.id desc","26","    <include refid=\"columns\"\/>","27","    from ce_queue cq","28","    where cq.uuid=#{uuid,jdbcType=VARCHAR}","32","    select count(1)","33","    from ce_queue","34","    where status=#{status,jdbcType=VARCHAR}","35","    <if test=\"componentUuid!=null\">","36","      and component_uuid=#{componentUuid,jdbcType=VARCHAR}","37","    <\/if>","41","    select count(1) from ce_queue","46","    <include refid=\"columns\"\/>","47","    from ce_queue cq","48","    where cq.component_uuid=#{componentUuid,jdbcType=VARCHAR}","54","    <include refid=\"columns\"\/>","55","    from ce_queue cq","67","    select count(1)","72","    from ce_queue cq","96","    select cq.uuid","97","    from ce_queue cq","98","    where cq.status='PENDING'","99","    and not exists(","100","    select 1","101","    from ce_queue cq2","102","    where cq.component_uuid=cq2.component_uuid and cq2.status &lt;&gt; 'PENDING'","103","    )","109","    (uuid, task_type, component_uuid, status, submitter_login, started_at, created_at, updated_at)","111","    #{uuid,jdbcType=VARCHAR},","112","    #{taskType,jdbcType=VARCHAR},","113","    #{componentUuid,jdbcType=VARCHAR},","114","    #{status,jdbcType=VARCHAR},","115","    #{submitterLogin,jdbcType=VARCHAR},","116","    #{startedAt,jdbcType=BIGINT},","117","    #{createdAt,jdbcType=BIGINT},","118","    #{updatedAt,jdbcType=BIGINT}","123","    update ce_queue","124","    set status='PENDING', started_at=NULL, updated_at=#{updatedAt,jdbcType=BIGINT}","125","    where status &lt;&gt; 'PENDING'","129","    update ce_queue","130","    set status=#{newStatus,jdbcType=VARCHAR},","131","    started_at=#{startedAt,jdbcType=BIGINT},","132","    updated_at=#{updatedAt,jdbcType=BIGINT}","133","    where uuid=#{uuid,jdbcType=VARCHAR} and status=#{oldStatus,jdbcType=VARCHAR}","137","    delete from ce_queue where uuid=#{uuid,jdbcType=VARCHAR}"]}]}},"0ec0be546e4a0bf1956b016a986e1f57ca465618":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/issues.html.erb":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/issues.html.erb":[{"add":["23","     period_date = (@snapshot.period_datetime(@dashboard_configuration.period_index) + 1).strftime('%FT%T%z')"],"delete":["23","     period_date = @snapshot.period_datetime(@dashboard_configuration.period_index).strftime('%FT%T%z')"]}]}},"a9a04c4793e1909eb96a489d4ab56c43aca44427":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigator.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["63","  displayLocationMarkers?: boolean;","148","    displayLocationMarkers: true,","608","        displayLocationMarkers={this.props.displayLocationMarkers}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":[{"add":["43","    displayLocationMarkers?: boolean;","159","        displayLocationMarkers={this.props.displayLocationMarkers}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":[{"add":["43","  displayLocationMarkers?: boolean;","151","          displayLocationMarkers={this.props.displayLocationMarkers}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigator.js":[{"add":["51","    if (locations == null || locations.length === 0 || locations.every(location => !location.msg)) {"],"delete":["51","    if (locations == null || locations.length === 0) {"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":[{"add":["36","  displayLocationMarkers?: boolean,","206","      if (this.props.displayLocationMarkers && token.markers.length > 0) {"],"delete":["205","      if (token.markers.length > 0) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.js":[{"add":["103","    const allMessagesEmpty = locations != null && locations.every(location => !location.msg);","104","","114","          displayLocationMarkers={!allMessagesEmpty}"],"delete":[]}]}},"0f906cccf16b98864d8f2dd1ae3966b60fb8ac4a":{"changes":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1152_remove_useless_indexes_on_group_roles.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":[],"delete":["543","CREATE INDEX \"GROUP_ROLES_GROUP\" ON \"GROUP_ROLES\" (\"GROUP_ID\");","544","","647","CREATE INDEX \"GROUP_ROLES_ROLE\" ON \"GROUP_ROLES\" (\"ROLE\");","648",""]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1152_remove_useless_indexes_on_group_roles.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["32","  public static final int LAST_VERSION = 1_152;"],"delete":["32","  public static final int LAST_VERSION = 1_151;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["407","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1152');"],"delete":[]}]}},"b37fcd78ff36d2f10d97632f494d08c0f10f3114":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["167","      .setDescription(\"Comma-separated list of coding rule keys. Format is &lt;repository&gt;:&lt;rule&gt;\")"],"delete":["167","      .setDescription(\"Comma-separated list of coding rule keys. Format is <repository>:<rule>\")"]}]}},"6d95cb9f19193a9d6eb4424d1ff6dba7efd75c3f":{"changes":{"server\/sonar-web\/src\/main\/js\/widgets\/timeMachine\/index.js":"MODIFY","it\/it-tests\/src\/test\/resources\/measureHistory\/HistoryUiTest\/history-timemachine-widget\/time-machine-widget.html":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/widgets\/timeMachine\/index.js":[{"add":["33","  \/\/ use [].slice instead of Array.from, because this code might be executed with polyfill","34","  const elements = [].slice.call(document.querySelectorAll(selector));"],"delete":["33","  const elements = Array.from(document.querySelectorAll(selector));"]}],"it\/it-tests\/src\/test\/resources\/measureHistory\/HistoryUiTest\/history-timemachine-widget\/time-machine-widget.html":[{"add":["38","\t<td>waitForElementPresent<\/td>","39","\t<td>css=svg path<\/td>"],"delete":["38","\t<td>assertElementPresent<\/td>","39","\t<td>css=img[alt=&quot;Chart?cht=sl&amp;chdi=80x15&amp;chv=20141019000000,6&quot;]<\/td>"]}]}},"fa2a913859fd48bf63246d566b5fec250fb4aca8":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["45","import org.sonar.db.permission.OrganizationPermission;","245","    componentDbTester.insertComponent(project);","254","    componentDbTester.insertComponent(project);"],"delete":["52","import org.sonar.db.permission.OrganizationPermission;","245","    componentDbTester.insertProjectAndSnapshot(project);","254","    componentDbTester.insertProjectAndSnapshot(project);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["48","import org.sonar.db.permission.OrganizationPermission;","162","    List<Page> pages = pageRepository.getComponentPages(false, component.qualifier());","163","    writeExtensions(json, component, pages);","165","      json.prop(\"version\", analysis.getVersion()).prop(\"snapshotDate\", DateUtils.formatDateTime(new Date(analysis.getCreatedAt())));"],"delete":["52","import org.sonar.db.permission.OrganizationPermission;","162","","164","      json.prop(\"version\", analysis.getVersion())","165","        .prop(\"snapshotDate\", DateUtils.formatDateTime(new Date(analysis.getCreatedAt())));","166","      List<Page> pages = pageRepository.getComponentPages(false, component.qualifier());","167","      writeExtensions(json, component, pages);"]}]}},"f1a6f4027de9d542e438409c53a88d8bb06dfd1a":{"changes":{"build.gradle":"MODIFY"},"diff":{"build.gradle":[{"add":["119","      dependencySet(group: 'com.fasterxml.jackson.core', version: '2.9.8') {"],"delete":["119","      dependencySet(group: 'com.fasterxml.jackson.core', version: '2.9.5') {"]}]}},"1e175c1f25b46050a4be209688eff36c71ad6c6e":{"changes":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStepTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":[{"add":["22","  private int onCurrentAnalysis = 0;","23","  private int offCurrentAnalysis = 0;","25","  MetricStatsInt increment(boolean onCurrentAnalysis) {","26","    if (onCurrentAnalysis) {","27","      this.onCurrentAnalysis += 1;","29","      this.offCurrentAnalysis += 1;","34","  public int getOnCurrentAnalysis() {","35","    return onCurrentAnalysis;","39","    return onCurrentAnalysis + offCurrentAnalysis;","45","      \"on=\" + onCurrentAnalysis +","46","      \", off=\" + offCurrentAnalysis +"],"delete":["22","  private int onLeak = 0;","23","  private int offLeak = 0;","25","  MetricStatsInt increment(boolean onLeak) {","26","    if (onLeak) {","27","      this.onLeak += 1;","29","      this.offLeak += 1;","34","  public int getOnLeak() {","35","    return onLeak;","39","    return onLeak + offLeak;","45","      \"onLeak=\" + onLeak +","46","      \", offLeak=\" + offLeak +"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":[{"add":["30","  DistributedMetricStatsInt increment(String label, boolean onCurrentAnalysis) {","31","    this.globalStats.increment(onCurrentAnalysis);","32","    statsPerLabel.computeIfAbsent(label, l -> new MetricStatsInt()).increment(onCurrentAnalysis);","44","  public int getOnCurrentAnalysis() {","45","    return globalStats.getOnCurrentAnalysis();"],"delete":["30","  DistributedMetricStatsInt increment(String label, boolean onLeak) {","31","    this.globalStats.increment(onLeak);","32","    statsPerLabel.computeIfAbsent(label, l -> new MetricStatsInt()).increment(onLeak);","44","  public int getOnLeak() {","45","    return globalStats.getOnLeak();"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":[{"add":["182","  public void set_statistics_when_no_issues_created_on_current_analysis() {","224","  public void set_statistics_when_some_issues_are_no_created_on_current_analysis() {"],"delete":["182","  public void set_statistics_when_no_issues_created_in_current_analysis() {","224","  public void set_statistics_when_some_issues_are_no_created_in_current_analysis() {"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":[{"add":["160","    setDefaultMessage(stats.getDistributedMetricStats(RULE_TYPE).getOnCurrentAnalysis() + \" new issues on \" + projectName + \".\\n\");","173","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis);","181","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(ruleStats.getValue().getOnCurrentAnalysis()));","189","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis);","195","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(componentStats.getValue().getOnCurrentAnalysis()));","203","    for (Map.Entry<String, MetricStatsInt> tagStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis)) {","204","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(tagStats.getValue().getOnCurrentAnalysis()));","212","    List<Map.Entry<String, MetricStatsInt>> entries = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis);","219","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(assigneeStats.getValue().getOnCurrentAnalysis()));","242","    setFieldValue(RULE_TYPE + COUNT, String.valueOf(distributedMetricStats.getOnCurrentAnalysis()));","246","        String.valueOf(distributedMetricStats.getForLabel(ruleType.name()).map(MetricStatsInt::getOnCurrentAnalysis).orElse(0))));"],"delete":["160","    setDefaultMessage(stats.getDistributedMetricStats(RULE_TYPE).getOnLeak() + \" new issues on \" + projectName + \".\\n\");","173","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","181","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(ruleStats.getValue().getOnLeak()));","189","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","195","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(componentStats.getValue().getOnLeak()));","203","    for (Map.Entry<String, MetricStatsInt> tagStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak)) {","204","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(tagStats.getValue().getOnLeak()));","212","    List<Map.Entry<String, MetricStatsInt>> entries = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","219","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(assigneeStats.getValue().getOnLeak()));","242","    setFieldValue(RULE_TYPE + COUNT, String.valueOf(distributedMetricStats.getOnLeak()));","246","        String.valueOf(distributedMetricStats.getForLabel(ruleType.name()).map(MetricStatsInt::getOnLeak).orElse(0))));"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":[{"add":["98","  public void add_counts_issue_per_RuleType_on_current_analysis_globally_and_per_assignee() {","107","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 1, 1)));","111","  public void add_counts_issue_per_RuleType_off_current_analysis_globally_and_per_assignee() {","120","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 0, 1)));","124","  public void add_counts_issue_per_component_on_current_analysis_globally_and_per_assignee() {","134","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 1, 1)));","138","  public void add_counts_issue_per_component_off_current_analysis_globally_and_per_assignee() {","149","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 0, 1)));","167","  public void add_counts_issue_per_ruleKey_on_current_analysis_globally_and_per_assignee() {","179","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 1, 1)));","183","  public void add_counts_issue_per_ruleKey_off_current_analysis_globally_and_per_assignee() {","194","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 0, 1)));","212","  public void add_counts_issue_per_assignee_on_current_analysis_globally_and_per_assignee() {","219","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 1, 1));","223","      assertThat(assigneeStats.getOnCurrentAnalysis()).isEqualTo(1);","230","          assertThat(forLabel.getOnCurrentAnalysis()).isEqualTo(1);","240","  public void add_counts_issue_per_assignee_off_current_analysis_globally_and_per_assignee() {","247","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 0, 1));","251","      assertThat(assigneeStats.getOnCurrentAnalysis()).isEqualTo(0);","258","          assertThat(forLabel.getOnCurrentAnalysis()).isEqualTo(0);","278","  public void add_counts_issue_per_tags_on_current_analysis_globally_and_per_assignee() {","286","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 1, 1)));","290","  public void add_counts_issue_per_tags_off_current_analysis_globally_and_per_assignee() {","298","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 0, 1)));","316","  public void add_sums_effort_on_current_analysis_globally_and_per_assignee() {","329","        assertThat(distribution.getOnCurrentAnalysis()).isEqualTo(expected);","330","        assertThat(distribution.getOffCurrentAnalysis()).isEqualTo(0);","336","  public void add_sums_effort_off_current_analysis_globally_and_per_assignee() {","349","        assertThat(distribution.getOnCurrentAnalysis()).isEqualTo(0);","350","        assertThat(distribution.getOffCurrentAnalysis()).isEqualTo(expected);","390","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","391","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{on=1, off=0}}}, \" +","392","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","393","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{on=1, off=0}}}, \" +","394","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","395","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{on=1, off=0}}}, \" +","396","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","397","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{on=1, off=0}}}, \" +","398","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","399","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{on=1, off=0}}}}, \" +","400","        \"effortStats=MetricStatsLong{on=\" + effort + \", off=0}}}, \" +","402","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","403","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{on=1, off=0}}}, \" +","404","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","405","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{on=1, off=0}}}, \" +","406","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","407","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{on=1, off=0}}}, \" +","408","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","409","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{on=1, off=0}}}, \" +","410","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","411","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{on=1, off=0}}}}, \" +","412","        \"effortStats=MetricStatsLong{on=\" + effort + \", off=0}}}\");","424","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onCurrentAnalysis, int total) {","428","    assertThat(stats.getOnCurrentAnalysis()).isEqualTo(onCurrentAnalysis);"],"delete":["98","  public void add_counts_issue_per_RuleType_on_leak_globally_and_per_assignee() {","107","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 1, 0, 1)));","111","  public void add_counts_issue_per_RuleType_off_leak_globally_and_per_assignee() {","120","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 0, 1, 1)));","124","  public void add_counts_issue_per_component_on_leak_globally_and_per_assignee() {","134","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 1, 0, 1)));","138","  public void add_counts_issue_per_component_off_leak_globally_and_per_assignee() {","149","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 0, 1, 1)));","167","  public void add_counts_issue_per_ruleKey_on_leak_globally_and_per_assignee() {","179","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 1, 0, 1)));","183","  public void add_counts_issue_per_ruleKey_off_leak_globally_and_per_assignee() {","194","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 0, 1, 1)));","212","  public void add_counts_issue_per_assignee_on_leak_globally_and_per_assignee() {","219","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 1, 0, 1));","223","      assertThat(assigneeStats.getOnLeak()).isEqualTo(1);","230","          assertThat(forLabel.getOnLeak()).isEqualTo(1);","240","  public void add_counts_issue_per_assignee_off_leak_globally_and_per_assignee() {","247","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 0, 1, 1));","251","      assertThat(assigneeStats.getOnLeak()).isEqualTo(0);","258","          assertThat(forLabel.getOnLeak()).isEqualTo(0);","278","  public void add_counts_issue_per_tags_on_leak_globally_and_per_assignee() {","286","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 1, 0, 1)));","290","  public void add_counts_issue_per_tags_off_leak_globally_and_per_assignee() {","298","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 0, 1, 1)));","316","  public void add_sums_effort_on_leak_globally_and_per_assignee() {","329","        assertThat(distribution.getOnLeak()).isEqualTo(expected);","330","        assertThat(distribution.getOffLeak()).isEqualTo(0);","336","  public void add_sums_effort_off_leak_globally_and_per_assignee() {","349","        assertThat(distribution.getOnLeak()).isEqualTo(0);","350","        assertThat(distribution.getOffLeak()).isEqualTo(expected);","390","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","391","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","392","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","393","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","394","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","395","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","396","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","397","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","398","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","399","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","400","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}, \" +","402","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","403","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","404","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","405","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","406","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","407","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","408","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","409","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","410","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","411","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","412","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}\");","424","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onLeak, int offLeak, int total) {","428","    assertThat(stats.getOnLeak()).isEqualTo(onLeak);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStep.java":[{"add":["110","    Predicate<DefaultIssue> onCurrentAnalysis = i -> i.isNew() && i.creationDate().getTime() >= truncateToSeconds(analysisDate);","111","    NewIssuesStatistics newIssuesStats = new NewIssuesStatistics(onCurrentAnalysis);","122","    if (newIssuesStats.hasIssuesOnCurrentAnalysis()) {","182","      .setDebt(Duration.create(globalStatistics.effort().getOnCurrentAnalysis()));","195","      .filter(e -> e.getValue().hasIssuesOnCurrentAnalysis())","207","          .setDebt(Duration.create(assigneeStatistics.effort().getOnCurrentAnalysis()));","223","      .stream().filter(e -> e.getValue().hasIssuesOnCurrentAnalysis()).collect(toList());"],"delete":["82","  private Map<String, Component> componentsByDbKey;","83","","112","    Predicate<DefaultIssue> isOnLeakPredicate = i -> i.isNew() && i.creationDate().getTime() >= truncateToSeconds(analysisDate);","113","    NewIssuesStatistics newIssuesStats = new NewIssuesStatistics(isOnLeakPredicate);","124","    if (newIssuesStats.hasIssuesOnLeak()) {","184","      .setDebt(Duration.create(globalStatistics.effort().getOnLeak()));","197","      .filter(e -> e.getValue().hasIssuesOnLeak())","209","          .setDebt(Duration.create(assigneeStatistics.effort().getOnLeak()));","225","      .stream().filter(e -> e.getValue().hasIssuesOnLeak()).collect(toList());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStepTest.java":[{"add":["227","    assertThat(severity.getOnCurrentAnalysis()).isEqualTo(efforts.length);","417","    assertThat(severity.getOnCurrentAnalysis()).isEqualTo(assigned.length);","466","    assertThat(severity.getOnCurrentAnalysis()).isEqualTo(efforts.length);"],"delete":["227","    assertThat(severity.getOnLeak()).isEqualTo(efforts.length);","417","    assertThat(severity.getOnLeak()).isEqualTo(assigned.length);","466","    assertThat(severity.getOnLeak()).isEqualTo(efforts.length);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":[{"add":["22","  private long onCurrentAnalysis = 0;","23","  private long offCurrentAnalysis = 0;","25","  MetricStatsLong add(long toAdd, boolean onCurrentAnalysis) {","26","    if (onCurrentAnalysis) {","27","      this.onCurrentAnalysis += toAdd;","29","      this.offCurrentAnalysis += toAdd;","34","  public long getOnCurrentAnalysis() {","35","    return onCurrentAnalysis;","38","  public long getOffCurrentAnalysis() {","39","    return offCurrentAnalysis;","43","    return onCurrentAnalysis + offCurrentAnalysis;","49","      \"on=\" + onCurrentAnalysis +","50","      \", off=\" + offCurrentAnalysis +"],"delete":["22","  private long onLeak = 0;","23","  private long offLeak = 0;","25","  MetricStatsLong add(long toAdd, boolean onLeak) {","26","    if (onLeak) {","27","      this.onLeak += toAdd;","29","      this.offLeak += toAdd;","34","  public long getOnLeak() {","35","    return onLeak;","38","  public long getOffLeak() {","39","    return offLeak;","43","    return onLeak + offLeak;","49","      \"onLeak=\" + onLeak +","50","      \", offLeak=\" + offLeak +"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":[{"add":["36","  private final Predicate<DefaultIssue> onCurrentAnalysisPredicate;","40","  public NewIssuesStatistics(Predicate<DefaultIssue> onCurrentAnalysisPredicate) {","41","    this.onCurrentAnalysisPredicate = onCurrentAnalysisPredicate;","42","    this.globalStatistics = new Stats(onCurrentAnalysisPredicate);","49","      assigneesStatistics.computeIfAbsent(userUuid, a -> new Stats(onCurrentAnalysisPredicate)).add(issue);","65","  public boolean hasIssuesOnCurrentAnalysis() {","66","    return globalStatistics.hasIssuesOnCurrentAnalysis();","91","    private final Predicate<DefaultIssue> onCurrentAnalysisPredicate;","95","    public Stats(Predicate<DefaultIssue> onCurrentAnalysisPredicate) {","96","      this.onCurrentAnalysisPredicate = onCurrentAnalysisPredicate;","105","      boolean onCurrentAnalysis = onCurrentAnalysisPredicate.test(issue);","106","      distributions.get(RULE_TYPE).increment(issue.type().name(), onCurrentAnalysis);","109","        distributions.get(COMPONENT).increment(componentUuid, onCurrentAnalysis);","113","        distributions.get(RULE).increment(ruleKey.toString(), onCurrentAnalysis);","117","        distributions.get(ASSIGNEE).increment(assigneeUuid, onCurrentAnalysis);","120","        distributions.get(TAG).increment(tag, onCurrentAnalysis);","124","        effortStats.add(effort.toMinutes(), onCurrentAnalysis);","140","    public boolean hasIssuesOnCurrentAnalysis() {","141","      return getDistributedMetricStats(RULE_TYPE).getOnCurrentAnalysis() > 0;"],"delete":["36","  private final Predicate<DefaultIssue> onLeakPredicate;","40","  public NewIssuesStatistics(Predicate<DefaultIssue> onLeakPredicate) {","41","    this.onLeakPredicate = onLeakPredicate;","42","    this.globalStatistics = new Stats(onLeakPredicate);","49","      assigneesStatistics.computeIfAbsent(userUuid, a -> new Stats(onLeakPredicate)).add(issue);","65","  public boolean hasIssuesOnLeak() {","66","    return globalStatistics.hasIssuesOnLeak();","91","    private final Predicate<DefaultIssue> onLeakPredicate;","95","    public Stats(Predicate<DefaultIssue> onLeakPredicate) {","96","      this.onLeakPredicate = onLeakPredicate;","105","      boolean isOnLeak = onLeakPredicate.test(issue);","106","      distributions.get(RULE_TYPE).increment(issue.type().name(), isOnLeak);","109","        distributions.get(COMPONENT).increment(componentUuid, isOnLeak);","113","        distributions.get(RULE).increment(ruleKey.toString(), isOnLeak);","117","        distributions.get(ASSIGNEE).increment(assigneeUuid, isOnLeak);","120","        distributions.get(TAG).increment(tag, isOnLeak);","124","        effortStats.add(effort.toMinutes(), isOnLeak);","140","    public boolean hasIssuesOnLeak() {","141","      return getDistributedMetricStats(RULE_TYPE).getOnLeak() > 0;"]}]}},"48191a7dd1e630ac53f73418852fc7ea6edd2545":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/LogsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/LogsAction.java":[{"add":["63","      .setDescription(\"Logs of a task. Format of response is plain text. HTTP code 404 is returned if the task does not exist or if logs are not available. <br\/>\" +","64","        \"Requires system administration permission or project administration permission.\")"],"delete":["63","      .setDescription(\"Logs of a task. Format of response is plain text. HTTP code 404 is returned if the task does not \" +","64","        \"exist or if logs are not available. Requires system administration permission.\")"]}]}},"5620329e9393d7afc4d23835df8b585196df9757":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBranchesMenu-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBranchesMenu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBranchesMenu-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBranchesMenu-test.tsx":[{"add":["56","      branchLikes={[","57","        mainBranch(),","58","        shortBranch('foo'),","59","        shortBranch('foobar'),","60","        longBranch('bar'),","61","        longBranch('BARBAZ')","62","      ]}"],"delete":["56","      branchLikes={[mainBranch(), shortBranch('foo'), shortBranch('foobar'), longBranch('bar')]}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":[{"add":["31",".navbar-context-branches .popup {","32","  min-width: 430px;","33","}","34",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBranchesMenu.tsx":[{"add":["86","        (branchLike.title.toLowerCase().includes(query) ||","87","          branchLike.key.toLowerCase().includes(query));"],"delete":["86","        (branchLike.title.includes(query) || branchLike.key.includes(query));"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBranchesMenu-test.tsx.snap":[{"add":["280","      key=\"branch-BARBAZ\"","281","    >","282","      <li","283","        className=\"divider\"","284","      \/>","285","      <ComponentNavBranchesMenuItem","286","        branchLike={","287","          Object {","288","            \"isMain\": false,","289","            \"name\": \"BARBAZ\",","290","            \"type\": \"LONG\",","291","          }","292","        }","293","        component={","294","          Object {","295","            \"key\": \"component\",","296","          }","297","        }","298","        innerRef={[Function]}","299","        key=\"branch-BARBAZ\"","300","        onSelect={[Function]}","301","        selected={false}","302","      \/>","303","    <\/React.Fragment>","304","    <React.Fragment"],"delete":[]}]}},"6868ebd60bcc61d9ec5c079d9da55c836ba5c154":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/ProjectRowActions-test.tsx":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_with_all_properties.json":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/nav.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/types.d.ts":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/resources\/org\/sonar\/server\/ui\/ws\/component-example.json":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRowActions.tsx":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/ProjectRowActions-test.tsx":[{"add":["30","beforeEach(() => {","31","  jest.clearAllMocks();","32","});","33","","43","        canBrowseProject: false,","71","","72","  it('also shows the restore access when browse permission is missing', async () => {","73","    (getComponentNavigation as jest.Mock).mockResolvedValueOnce({","74","      configuration: { canBrowseProject: false, showPermissions: true }","75","    });","76","","77","    const wrapper = shallowRender();","78","    wrapper.instance().handleDropdownOpen();","79","    await waitAndUpdate(wrapper);","80","","81","    expect(getComponentNavigation).toBeCalledWith({ component: 'foo' });","82","    expect(wrapper.find('.js-restore-access').exists()).toBe(true);","83","  });","90","        canBrowseProject: true,"],"delete":["37","    jest.resetAllMocks();","71","    jest.resetAllMocks();"]}],"server\/sonar-webserver-webapi\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_with_all_properties.json":[{"add":["10","    \"showBackgroundTasks\": true,","11","    \"canApplyPermissionTemplate\": false,","12","    \"canBrowseProject\": true,","13","    \"canUpdateProjectVisibilityToPrivate\": false,"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/nav.ts":[{"add":["26","type NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;","27","","30","): Promise<NavComponent> {"],"delete":["28","): Promise<any> {"]}],"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":[{"add":["154","    canBrowseProject?: boolean;"],"delete":[]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["411","  public void return_configuration_for_private_projects() {","412","    ComponentDto project = insertOrganizationAndProject();","413","    UserSessionRule userSessionRule = userSession.logIn();","414","    init();","415","","416","    userSessionRule.addProjectPermission(UserRole.ADMIN, project);","417","    assertJson(execute(project.getDbKey())).isSimilarTo(\"{\\n\" +","418","      \"  \\\"configuration\\\": {\\n\" +","419","      \"    \\\"showSettings\\\": false,\\n\" +","420","      \"    \\\"showQualityProfiles\\\": true,\\n\" +","421","      \"    \\\"showQualityGates\\\": true,\\n\" +","422","      \"    \\\"showManualMeasures\\\": true,\\n\" +","423","      \"    \\\"showLinks\\\": true,\\n\" +","424","      \"    \\\"showPermissions\\\": false,\\n\" +","425","      \"    \\\"showHistory\\\": false,\\n\" +","426","      \"    \\\"showUpdateKey\\\": false,\\n\" +","427","      \"    \\\"showBackgroundTasks\\\": true,\\n\" +","428","      \"    \\\"canApplyPermissionTemplate\\\": false,\\n\" +","429","      \"    \\\"canBrowseProject\\\": false,\\n\" +","430","      \"    \\\"canUpdateProjectVisibilityToPrivate\\\": false\\n\" +","431","      \"  }\\n\" +","432","      \"}\");","433","","434","    userSessionRule.addProjectPermission(UserRole.USER, project);","435","    assertJson(execute(project.getDbKey())).isSimilarTo(\"{\\n\" +","436","      \"  \\\"configuration\\\": {\\n\" +","437","      \"    \\\"showSettings\\\": false,\\n\" +","438","      \"    \\\"showQualityProfiles\\\": true,\\n\" +","439","      \"    \\\"showQualityGates\\\": true,\\n\" +","440","      \"    \\\"showManualMeasures\\\": true,\\n\" +","441","      \"    \\\"showLinks\\\": true,\\n\" +","442","      \"    \\\"showPermissions\\\": false,\\n\" +","443","      \"    \\\"showHistory\\\": false,\\n\" +","444","      \"    \\\"showUpdateKey\\\": false,\\n\" +","445","      \"    \\\"showBackgroundTasks\\\": true,\\n\" +","446","      \"    \\\"canApplyPermissionTemplate\\\": false,\\n\" +","447","      \"    \\\"canBrowseProject\\\": true,\\n\" +","448","      \"    \\\"canUpdateProjectVisibilityToPrivate\\\": false\\n\" +","449","      \"  }\\n\" +","450","      \"}\");","451","  }","452","","453","  @Test","726","}"],"delete":["683","  }"]}],"server\/sonar-webserver-webapi\/src\/main\/resources\/org\/sonar\/server\/ui\/ws\/component-example.json":[{"add":["46","    \"canBrowseProject\": true,"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRowActions.tsx":[{"add":["61","          const hasAccess = Boolean(","62","            configuration && configuration.showPermissions && configuration.canBrowseProject","63","          );"],"delete":["61","          const hasAccess = Boolean(configuration && configuration.showPermissions);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["309","    boolean canBrowseProject = userSession.hasComponentPermission(USER, component);","321","    json.prop(\"canBrowseProject\", canBrowseProject);"],"delete":[]}]}},"31afeda58d4b373438fc49b95ff15fb17f469a08":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandler.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandlerTest.java":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandler.java":[{"add":["45","  private static final String BIN = \"BIN\";","46","  private static final String BIN2 = \"BIN2\";","67","      if (!isCollationCorrect(column)) {","82","  \/**","83","   * Collation is correct if is contains {@link #CASE_SENSITIVE_ACCENT_SENSITIVE} or {@link #BIN} or {@link #BIN2}.","84","   *\/","85","  private static boolean isCollationCorrect(ColumnDef column) {","86","    String collation = column.getCollation();","87","    return containsIgnoreCase(collation, CASE_SENSITIVE_ACCENT_SENSITIVE)","88","      || containsIgnoreCase(collation, BIN)","89","      || containsIgnoreCase(collation, BIN2);","90","  }","91","","150","  static String toCaseSensitive(String collation) {","152","    return collation"],"delete":["65","      if (!containsIgnoreCase(column.getCollation(), CASE_SENSITIVE_ACCENT_SENSITIVE)) {","138","  static String toCaseSensitive(String ciCollation) {","140","    return ciCollation"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandlerTest.java":[{"add":["131","    for (String sensitivity : Arrays.asList(\"CI_AI\", \"CI_AS\", \"CS_AI\")) {","132","      for (String suffix : Arrays.asList(\"\", \"_KS_WS\")) {","133","        res.add(new String[] {","134","          format(\"Latin1_General_%s%s\", sensitivity, suffix),","135","          format(\"Latin1_General_CS_AS%s\", suffix)","136","        });","164","  @Test","165","  @UseDataProvider(\"combinationOfBinAndSuffix\")","166","  public void do_not_repair_if_collation_contains_BIN(String collation) throws Exception {","167","    answerColumns(asList(new ColumnDef(TABLE_PROJECTS, COLUMN_NAME, \"Latin1_General\", collation, \"varchar\", 10, false)));","168","","169","    Connection connection = mock(Connection.class);","170","    underTest.handle(connection, immutableEnumSet(AUTO_REPAIR_COLLATION));","171","","172","    verify(selectExecutor, never()).executeUpdate(any(Connection.class), anyString());","173","  }","174","","175","  @DataProvider","176","  public static Object[][] combinationOfBinAndSuffix() {","177","    return Arrays.asList(\"\", \"_KS_WS\")","178","      .stream()","179","      .map(suffix -> new String[] {format(\"Latin1_General_BIN%s\", suffix)})","180","      .toArray(Object[][]::new);","181","  }","182","","183","  @Test","184","  @UseDataProvider(\"combinationOfBin2AndSuffix\")","185","  public void do_not_repair_if_collation_contains_BIN2(String collation) throws Exception {","186","    answerColumns(asList(new ColumnDef(TABLE_PROJECTS, COLUMN_NAME, \"Latin1_General\", collation, \"varchar\", 10, false)));","187","","188","    Connection connection = mock(Connection.class);","189","    underTest.handle(connection, immutableEnumSet(AUTO_REPAIR_COLLATION));","190","","191","    verify(selectExecutor, never()).executeUpdate(any(Connection.class), anyString());","192","  }","193","","194","  @DataProvider","195","  public static Object[][] combinationOfBin2AndSuffix() {","196","    return Arrays.asList(\"\", \"_KS_WS\")","197","      .stream()","198","      .map(suffix -> new String[] {format(\"Latin1_General_BIN2%s\", suffix)})","199","      .toArray(Object[][]::new);","200","  }","201",""],"delete":["131","    for (String caseSensitivity : Arrays.asList(\"CS\", \"CI\")) {","132","      for (String accentSensitivity : Arrays.asList(\"AS\", \"AI\")) {","133","        if (caseSensitivity.equals(\"CI\") || accentSensitivity.equals(\"AI\")) {","134","          for (String suffix : Arrays.asList(\"\", \"_KS_WS\")) {","135","            res.add(new String[] {","136","              format(\"Latin1_General_%s_%s%s\", caseSensitivity, accentSensitivity, suffix),","137","              format(\"Latin1_General_CS_AS%s\", suffix)","138","            });","139","          }","140","        }"]}]}},"42cf60a64a18c941b0c844ad3cf4ecd8f86a9612":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/navigator\/controller.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/navigator\/controller.js":[{"add":["45","    facets = _.uniq(facets);"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":[{"add":["31","    if (facets.indexOf('assignees') !== -1) {","32","      facets.push('assigned_to_me');","33","    }"],"delete":["31","    facets.push('assigned_to_me');"]}]}},"d383aa2db56e889c1dfbc0608483cad96f508f52":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Conditions.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Conditions.js":[{"add":["75","    const savedConditions = conditions.filter(condition => condition.id != null);","76","    savedConditions.forEach(condition => {","77","      const sameCount = savedConditions"],"delete":["75","    conditions.forEach(condition => {","76","      const sameCount = conditions"]}]}},"6f6f00faf62ea79215031534671bc4f1d9a55856":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocationTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocation.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocationTest.java":[{"add":["22","import org.hamcrest.Description;","23","import org.hamcrest.Matcher;","24","import org.hamcrest.TypeSafeMatcher;","32","import static org.junit.rules.ExpectedException.none;","37","  public ExpectedException thrown = none();","44","  public void should_build() {","45","    assertThat(new DefaultIssueLocation()","46","      .on(inputFile)","47","      .message(\"pipo bimbo\")","48","      .message()","49","    ).isEqualTo(\"pipo bimbo\");","50","  }","51","","52","  @Test","73","  @Test","74","  public void prevent_null_character_in_message_text() {","75","    thrown.expect(IllegalArgumentException.class);","76","    thrown.expectMessage(\"Character \\\\u0000 is not supported in issue message\");","77","","78","    new DefaultIssueLocation()","79","      .message(\"pipo \" + '\\u0000' + \" bimbo\");","80","  }","81","","82","  @Test","83","  public void prevent_null_character_in_message_text_when_builder_has_been_initialized() {","84","    thrown.expect(IllegalArgumentException.class);","85","    thrown.expectMessage(customMatcher(\"Character \\\\u0000 is not supported in issue message\", \", on component: src\/Foo.php\"));","86","","87","    new DefaultIssueLocation()","88","      .on(inputFile)","89","      .message(\"pipo \" + '\\u0000' + \" bimbo\");","90","  }","91","","92","  private Matcher<String> customMatcher(String startWith, String endWith) {","93","    return new TypeSafeMatcher<String>() {","94","      @Override","95","      public void describeTo(Description description) {","96","        description.appendText(\"Invalid message\");","97","      }","98","","99","      @Override","100","      protected boolean matchesSafely(final String item) {","101","        return item.startsWith(startWith) && item.endsWith(endWith);","102","      }","103","    };","104","  }","105",""],"delete":["33","  public ExpectedException thrown = ExpectedException.none();"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":[{"add":["23","import org.junit.Rule;","25","import org.junit.rules.ExpectedException;","32","import static org.junit.rules.ExpectedException.none;","37","  @Rule","38","  public ExpectedException thrown = none();","39","","69","  public void fail_if_message_contains_null_character(){","70","    ORCHESTRATOR.getServer().provisionProject(SAMPLE_PROJECT_KEY, SAMPLE_PROJECT_KEY);","71","    ItUtils.restoreProfile(ORCHESTRATOR, getClass().getResource(\"\/issue\/IssueCreationTest\/with-custom-message.xml\"));","72","    ORCHESTRATOR.getServer().associateProjectToQualityProfile(SAMPLE_PROJECT_KEY, \"xoo\", \"with-custom-message\");","73","","74","    thrown.expect(java.lang.IllegalStateException.class);","75","","76","    runProjectAnalysis(ORCHESTRATOR, \"shared\/xoo-sample\", \"sonar.customMessage.message\", \"a \\u0000 0message\");","77","  }","78","","79","  @Test"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocation.java":[{"add":["28","import javax.annotation.Nullable;","29","","30","import static com.google.common.base.Preconditions.checkArgument;","32","import static org.apache.commons.lang.StringUtils.abbreviate;","33","import static org.apache.commons.lang.StringUtils.trim;","43","    checkArgument(component != null, \"Component can't be null\");","62","    if (message.contains(\"\\u0000\")) {","63","      throw new IllegalArgumentException(unsupportedCharacterError(message, component));","64","    }","65","    this.message = abbreviate(trim(message), MESSAGE_MAX_SIZE);","69","  private static String unsupportedCharacterError(String message, @Nullable InputComponent component) {","70","    String error = \"Character \\\\u0000 is not supported in issue message '\" + message + \"'\";","71","    if (component != null) {","72","      error += \", on component: \" + component.toString();","73","    }","74","    return error;","75","  }","76","","92","  public static void main (String[] args) {","93","","94","    new DefaultIssueLocation().message(\"pipo\");","95","","96","  }","97",""],"delete":["22","import org.apache.commons.lang.StringUtils;","39","    Preconditions.checkArgument(component != null, \"Component can't be null\");","58","    this.message = StringUtils.abbreviate(StringUtils.trim(message), MESSAGE_MAX_SIZE);"]}]}},"00d449d02ed7525705d29769d6a9d282337e117c":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/documentation\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/documentation\/styles.css":[{"add":["82",".documentation-content.markdown li > p,","83",".documentation-content.markdown li > p + pre {"],"delete":["82",".documentation-content.markdown li > p {"]}]}},"5bf0d2cb3e25a4c629e49110b6bba0fb8c40959d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Menu-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Search-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Menu-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Search-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Domain-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":[{"add":["23","import { getActionKey, actionsFilter, Query } from '..\/utils';","28","  query: Query;","31","export default function Domain({ domain, query }: Props) {","32","  const filteredActions = domain.actions.filter(action => actionsFilter(query, domain, action));","64","            key={getActionKey(domain.path, action.key)}","65","            showDeprecated={query.deprecated}","66","            showInternal={query.internal}"],"delete":["23","import { getActionKey, actionsFilter } from '..\/utils';","28","  showDeprecated: boolean;","29","  showInternal: boolean;","30","  searchQuery: string;","33","export default function Domain({ domain, showInternal, showDeprecated, searchQuery }: Props) {","34","  const filteredActions = domain.actions.filter(action =>","35","    actionsFilter(showDeprecated, showInternal, searchQuery, domain, action)","36","  );","66","            key={getActionKey(domain.path, action.key)}","69","            showDeprecated={showDeprecated}","70","            showInternal={showInternal}"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Menu-test.tsx":[{"add":["47","  query: { search: '', deprecated: false, internal: false },","51","const SHOW_DEPRECATED = { search: '', deprecated: true, internal: false };","52","const SHOW_INTERNAL = { search: '', deprecated: false, internal: true };","53","const SEARCH_FOO = { search: 'Foo', deprecated: false, internal: false };","54","const SEARCH_BAR = { search: 'Bar', deprecated: false, internal: false };","55","","63","  expect(shallow(<Menu {...PROPS} domains={domains} query={SHOW_DEPRECATED} \/>)).toMatchSnapshot();","73","  expect(shallow(<Menu {...PROPS} domains={domains} \/>)).toMatchSnapshot();","79","  expect(shallow(<Menu {...PROPS} domains={domains} query={SHOW_INTERNAL} \/>)).toMatchSnapshot();","85","  expect(shallow(<Menu {...PROPS} domains={domains} \/>)).toMatchSnapshot();","94","  expect(shallow(<Menu {...PROPS} domains={domains} query={SEARCH_FOO} \/>)).toMatchSnapshot();","105","  expect(shallow(<Menu {...PROPS} domains={domains} query={SEARCH_BAR} \/>)).toMatchSnapshot();"],"delete":["47","  showDeprecated: false,","48","  showInternal: false,","49","  searchQuery: '',","60","  expect(shallow(<Menu {...PROPS} domains={domains} showDeprecated={true} \/>)).toMatchSnapshot();","70","  expect(shallow(<Menu {...PROPS} domains={domains} showDeprecated={false} \/>)).toMatchSnapshot();","76","  expect(shallow(<Menu {...PROPS} domains={domains} showInternal={true} \/>)).toMatchSnapshot();","82","  expect(shallow(<Menu {...PROPS} domains={domains} showInternal={false} \/>)).toMatchSnapshot();","91","  expect(shallow(<Menu {...PROPS} domains={domains} searchQuery=\"Foo\" \/>)).toMatchSnapshot();","102","  expect(shallow(<Menu {...PROPS} domains={domains} searchQuery=\"Bar\" \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Search-test.tsx":[{"add":["24","  query: { search: '', deprecated: false, internal: false },"],"delete":["24","  showDeprecated: false,","25","  showInternal: false,"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Menu-test.tsx.snap":[{"add":["14","      to={","15","        Object {","16","          \"pathname\": \"\/web_api\/bar\",","17","          \"query\": Object {","18","            \"query\": \"Bar\",","19","          },","20","        }","21","      }","34","      to={","35","        Object {","36","          \"pathname\": \"\/web_api\/baz\",","37","          \"query\": Object {","38","            \"query\": \"Bar\",","39","          },","40","        }","41","      }","65","      to={","66","        Object {","67","          \"pathname\": \"\/web_api\/foo\",","68","          \"query\": Object {},","69","        }","70","      }","94","      to={","95","        Object {","96","          \"pathname\": \"\/web_api\/foo\",","97","          \"query\": Object {},","98","        }","99","      }","123","      to={","124","        Object {","125","          \"pathname\": \"\/web_api\/foo\",","126","          \"query\": Object {","127","            \"deprecated\": true,","128","          },","129","        }","130","      }","143","      to={","144","        Object {","145","          \"pathname\": \"\/web_api\/bar\",","146","          \"query\": Object {","147","            \"deprecated\": true,","148","          },","149","        }","150","      }","174","      to={","175","        Object {","176","          \"pathname\": \"\/web_api\/foo\",","177","          \"query\": Object {","178","            \"internal\": true,","179","          },","180","        }","181","      }","194","      to={","195","        Object {","196","          \"pathname\": \"\/web_api\/bar\",","197","          \"query\": Object {","198","            \"internal\": true,","199","          },","200","        }","201","      }","226","      to={","227","        Object {","228","          \"pathname\": \"\/web_api\/foo\",","229","          \"query\": Object {","230","            \"query\": \"Foo\",","231","          },","232","        }","233","      }"],"delete":["14","      to=\"\/web_api\/bar\"","27","      to=\"\/web_api\/baz\"","51","      to=\"\/web_api\/foo\"","75","      to=\"\/web_api\/foo\"","99","      to=\"\/web_api\/foo\"","112","      to=\"\/web_api\/bar\"","136","      to=\"\/web_api\/foo\"","149","      to=\"\/web_api\/bar\"","174","      to=\"\/web_api\/foo\""]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/Search-test.tsx.snap":[{"add":["10","      value=\"\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/utils.ts":[{"add":["19","import { memoize } from 'lodash';","21","import {","22","  cleanQuery,","23","  RawQuery,","24","  serializeString,","25","  parseAsOptionalBoolean,","26","  parseAsString","27","} from '..\/..\/helpers\/query';","29","export interface Query {","30","  search: string;","31","  deprecated: boolean;","32","  internal: boolean;","33","}","34","","35","export function actionsFilter(query: Query, domain: Domain, action: Action) {","36","  const lowSearchQuery = query.search.toLowerCase();","38","    (query.internal || !action.internal) &&","39","    (query.deprecated || !action.deprecatedSince) &&","65","","66","export const parseQuery = memoize((urlQuery: RawQuery): Query => ({","67","  search: parseAsString(urlQuery['query']),","68","  deprecated: parseAsOptionalBoolean(urlQuery['deprecated']) || false,","69","  internal: parseAsOptionalBoolean(urlQuery['internal']) || false","70","}));","71","","72","export const serializeQuery = memoize((query: Query): RawQuery =>","73","  cleanQuery({","74","    query: query.search ? serializeString(query.search) : undefined,","75","    deprecated: query.deprecated || undefined,","76","    internal: query.internal || undefined","77","  })","78",");"],"delete":["21","export function actionsFilter(","22","  showDeprecated: boolean,","23","  showInternal: boolean,","24","  searchQuery: string,","25","  domain: Domain,","26","  action: Action","27",") {","28","  const lowSearchQuery = searchQuery.toLowerCase();","30","    (showInternal || !action.internal) &&","31","    (showDeprecated || !action.deprecatedSince) &&"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":["28","import { getActionKey, isDomainPathActive, Query, serializeQuery, parseQuery } from '..\/utils';","32","import { RawQuery } from '..\/..\/..\/helpers\/query';","36","  location: { pathname: string; query: RawQuery };","53","    this.state = { domains: [] };","99","  updateQuery = (newQuery: Partial<Query>) => {","100","    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });","101","    this.context.router.push({ pathname: this.props.location.pathname, query });","102","  };","103","","106","    const { domains } = this.state;","107","    const query = parseQuery(this.props.location.query);","109","    if (!query.internal && splat) {","110","      const domain = domains.find(domain => domain.path.startsWith(splat));","111","      if (domain) {","112","        let action;","113","        if (domain.path !== splat) {","114","          action = domain.actions.find(action => getActionKey(domain.path, action.key) === splat);","116","        if (domain.internal || (action && action.internal)) {","117","          this.updateQuery({ internal: true });","118","        }","119","      }","123","  handleSearch = (search: string) => {","124","    this.updateQuery({ search });","125","  };","132","    const query = parseQuery(this.props.location.query);","133","    const internal = !query.internal;","135","    if (domain && domain.internal && !internal) {","136","      router.push({","137","        pathname: '\/web_api',","138","        query: { ...serializeQuery(query), internal: false }","139","      });","140","      return;","143","    this.updateQuery({ internal });","146","  handleToggleDeprecated = () => {","147","    const query = parseQuery(this.props.location.query);","148","    this.updateQuery({ deprecated: !query.deprecated });","149","  };","153","    const query = parseQuery(this.props.location.query);","154","    const { domains } = this.state;","176","                    onToggleInternal={this.handleToggleInternal}","177","                    query={query}","180","                  <Menu domains={this.state.domains} query={query} splat={splat} \/>","189","            {domain && <Domain domain={domain} key={domain.path} query={query} \/>}"],"delete":["28","import { getActionKey, isDomainPathActive } from '..\/utils';","40","  searchQuery: string;","41","  showDeprecated: boolean;","42","  showInternal: boolean;","54","    this.state = {","55","      domains: [],","56","      searchQuery: '',","57","      showDeprecated: false,","58","      showInternal: false","59","    };","107","    const { domains, showInternal } = this.state;","109","    if (!showInternal) {","110","      domains.forEach(domain => {","111","        if (domain.path === splat && domain.internal) {","112","          this.setState({ showInternal: true });","114","        domain.actions.forEach(action => {","115","          const actionKey = getActionKey(domain.path, action.key);","116","          if (actionKey === splat && action.internal) {","117","            this.setState({ showInternal: true });","118","          }","119","        });","120","      });","124","  handleSearch = (searchQuery: string) => this.setState({ searchQuery });","131","    const showInternal = !this.state.showInternal;","133","    if (domain && domain.internal && !showInternal) {","134","      router.push('\/web_api');","137","    this.setState({ showInternal });","140","  handleToggleDeprecated = () =>","141","    this.setState(state => ({ showDeprecated: !state.showDeprecated }));","145","    const { domains, showInternal, showDeprecated, searchQuery } = this.state;","165","                    showDeprecated={showDeprecated}","166","                    showInternal={showInternal}","168","                    onToggleInternal={this.handleToggleInternal}","172","                  <Menu","173","                    domains={this.state.domains}","174","                    showDeprecated={showDeprecated}","175","                    showInternal={showInternal}","176","                    searchQuery={searchQuery}","177","                    splat={splat}","178","                  \/>","187","            {domain && (","188","              <Domain","189","                key={domain.path}","190","                domain={domain}","191","                showDeprecated={showDeprecated}","192","                showInternal={showInternal}","193","                searchQuery={searchQuery}","194","              \/>","195","            )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/Domain-test.tsx":[{"add":["40","  query: { search: '', deprecated: false, internal: false }","42","const SHOW_DEPRECATED = { search: '', deprecated: true, internal: false };","43","const SHOW_INTERNAL = { search: '', deprecated: false, internal: true };","44","const SEARCH_FOO = { search: 'Foo', deprecated: false, internal: false };","50","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} query={SHOW_DEPRECATED} \/>)","58","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} query={SHOW_INTERNAL} \/>)","66","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} query={SHOW_INTERNAL} \/>)","73","  expect(shallow(<Domain {...DEFAULT_PROPS} domain={domain} \/>)).toMatchSnapshot();","80","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} query={SEARCH_FOO} \/>)","92","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} query={SEARCH_FOO} \/>)"],"delete":["40","  showDeprecated: false,","41","  showInternal: false,","42","  searchQuery: ''","49","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} showDeprecated={true} \/>)","57","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} showDeprecated={false} \/>)","65","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} showInternal={true} \/>)","72","  expect(","73","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} showInternal={false} \/>)","74","  ).toMatchSnapshot();","81","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} searchQuery=\"Foo\" \/>)","93","    shallow(<Domain {...DEFAULT_PROPS} domain={domain} searchQuery=\"Foo\" \/>)"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Menu.tsx":[{"add":["24","import { isDomainPathActive, actionsFilter, Query, serializeQuery } from '..\/utils';","29","  query: Query;","34","  const { domains, query, splat } = props;","37","      const filteredActions = domain.actions.filter(action => actionsFilter(query, domain, action));","51","            to={{ pathname: '\/web_api\/' + domain.path, query: serializeQuery(query) }}>"],"delete":["24","import { isDomainPathActive, actionsFilter } from '..\/utils';","29","  showDeprecated: boolean;","30","  showInternal: boolean;","31","  searchQuery: string;","36","  const { domains, showInternal, showDeprecated, searchQuery, splat } = props;","39","      const filteredActions = domain.actions.filter(action =>","40","        actionsFilter(showDeprecated, showInternal, searchQuery, domain, action)","41","      );","55","            to={'\/web_api\/' + domain.path}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.tsx":[{"add":["24","import { Query } from '..\/utils';","27","  query: Query;","34","  const { query, onToggleInternal, onToggleDeprecated } = props;","39","        <SearchBox","40","          onChange={props.onSearch}","41","          placeholder={translate('api_documentation.search')}","42","          value={query.search}","43","        \/>","47","        <Checkbox checked={query.internal} className=\"text-middle\" onCheck={onToggleInternal}>","57","        <Checkbox checked={query.deprecated} className=\"text-middle\" onCheck={onToggleDeprecated}>"],"delete":["26","  showDeprecated: boolean;","27","  showInternal: boolean;","34","  const { showInternal, showDeprecated, onToggleInternal, onToggleDeprecated } = props;","39","        <SearchBox onChange={props.onSearch} placeholder={translate('api_documentation.search')} \/>","43","        <Checkbox checked={showInternal} className=\"text-middle\" onCheck={onToggleInternal}>","53","        <Checkbox checked={showDeprecated} className=\"text-middle\" onCheck={onToggleDeprecated}>"]}]}},"7a59b82ec1d9c7b18b067ede96076b2a3bdd5e05":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/restore-profile-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/quality-profiles.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-restore-profile.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/restore-profile-view.js":[{"add":["22","import { restoreQualityProfile } from '..\/..\/api\/quality-profiles';","29","    const data = new FormData(e.currentTarget);","30","","31","    this.disableForm();","32","","33","    restoreQualityProfile(data)","34","        .then(r => {","35","          this.profile = r.profile;","36","          this.ruleSuccesses = r.ruleSuccesses;","37","          this.ruleFailures = r.ruleFailures;","38","          this.render();","39","          this.addProfile(r.profile);","40","        })","41","        .catch(e => {","42","          this.enableForm();","43","          e.response.json().then(r => this.showErrors(r.errors, r.warnings));","44","        });","54","  },","55","","56","  serializeData() {","57","    return Object.assign({}, ModalFormView.prototype.serializeData.apply(this, arguments), {","58","      profile: this.profile,","59","      ruleSuccesses: this.ruleSuccesses,","60","      ruleFailures: this.ruleFailures","61","    });"],"delete":["19","import $ from 'jquery';","20","import _ from 'underscore';","22","import uploader from '..\/..\/components\/common\/file-upload';","30","    const that = this;","32","    uploader({ form: $(e.currentTarget) }).done(function (r) {","33","      if (_.isArray(r.errors) || _.isArray(r.warnings)) {","34","        that.showErrors(r.errors, r.warnings);","35","      } else {","36","        that.addProfile(r.profile);","37","        that.destroy();","38","      }","39","    });"]}],"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.js":[{"add":["32","","33","export function restoreQualityProfile (data) {","34","  const url = window.baseUrl + '\/api\/qualityprofiles\/restore';","35","  const options = {","36","    method: 'post',","37","    credentials: 'same-origin',","38","    body: data","39","  };","40","  return window.fetch(url, options)","41","      .then(checkStatus)","42","      .then(parseJSON);","43","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-restore-profile.hbs":[{"add":["0","<form id=\"restore-profile-form\">","4","","7","    {{#if profile}}","8","      {{#if ruleFailures}}","9","        <div class=\"alert alert-warning\">","10","          {{tp 'quality_profiles.restore_profile.warning' profile.name ruleSuccesses ruleFailures}}","11","        <\/div>","12","      {{else}}","13","        <div class=\"alert alert-success\">","14","          {{tp 'quality_profiles.restore_profile.success' profile.name ruleSuccesses}}","15","        <\/div>","16","      {{\/if}}","17","    {{else}}","18","      <div class=\"modal-field\">","19","        <label for=\"restore-profile-backup\">{{t 'backup'}}<em class=\"mandatory\">*<\/em><\/label>","20","        <input type=\"file\" id=\"restore-profile-backup\" name=\"backup\" required>","21","      <\/div>","22","    {{\/if}}","24","","26","    {{#notNull ruleSuccesses}}","27","      <a href=\"#\" class=\"js-modal-close\">{{t 'close'}}<\/a>","28","    {{else}}","29","      <button id=\"restore-profile-submit\">{{t 'restore'}}<\/button>","30","      <a href=\"#\" class=\"js-modal-close\" id=\"restore-profile-cancel\">{{t 'cancel'}}<\/a>","31","    {{\/notNull}}"],"delete":["0","<form id=\"restore-profile-form\" action=\"{{link '\/api\/qualityprofiles\/restore'}}\" enctype=\"multipart\/form-data\"","1","      method=\"POST\">","7","    <div class=\"modal-field\">","8","      <label for=\"restore-profile-backup\">{{t 'backup'}}<em class=\"mandatory\">*<\/em><\/label>","9","      <input type=\"file\" id=\"restore-profile-backup\" name=\"backup\" required>","10","    <\/div>","13","    <button id=\"restore-profile-submit\">{{t 'restore'}}<\/button>","14","    <a href=\"#\" class=\"js-modal-close\" id=\"restore-profile-cancel\">{{t 'cancel'}}<\/a>"]}]}},"eabdc54edbad6ef9dea9b8521d544817c0f90c2a":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/index.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/index.ts":[{"add":["61","      intl.addLocaleData(intlBundle.default);"],"delete":["61","      intl.addLocaleData(intlBundle);"]}]}},"0322e241e02e55e102205ae95e07c4c4cd649eec":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLanguages.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLanguages.js":[{"add":["22","import { TooltipsContainer } from '..\/..\/..\/components\/mixins\/tooltips-mixin';","48","        <TooltipsContainer options={{ delay: { show: 500, hide: 0 } }}>","49","          <div className=\"project-card-languages\">","50","            <span title={finalLanguages.join('<br\/>')} data-toggle=\"tooltip\">{finalLanguages.join(', ')}<\/span>","51","          <\/div>","52","        <\/TooltipsContainer>"],"delete":["47","        <div className=\"project-card-languages\">","48","          {finalLanguages.join(', ')}","49","        <\/div>"]}]}},"243c757d0aa23bd907aeedb39154458c3894b2a3":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/charts\/BubbleChart.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/charts\/BubbleChart.tsx":[{"add":["212","      \/\/ as we modified the `x` using `transform`, check that it is inside the range again","213","      return x > 0 && x < xScale.range()[1] ? (","233","      \/\/ as we modified the `y` using `transform`, check that it is inside the range again","234","      return y > 0 && y < yScale.range()[0] ? (","303","              height={availableHeight + 4}","304","              width={availableWidth + 4}"],"delete":["212","      return x > 0 ? (","232","      return y > 0 && y < this.props.height - 80 ? (","301","              height={this.props.height - this.props.padding[0] - this.props.padding[2] + 4}","302","              width={width + 4}"]}]}},"6794de31803c2fcbb420f46c21030c94ae169ab4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRules.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfilePermissions-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileDetails.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritance.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfilePermissions-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileDetails-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfilePermissions.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRules.tsx":[{"add":["73","    if (prevProps.profile.key !== this.props.profile.key) {"],"delete":["73","    if (prevProps.profile !== this.props.profile) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfilePermissions-test.tsx":[{"add":["33","const profile = { key: 'sonar-way', name: 'Sonar way', language: 'js' };"],"delete":["33","const profile = { name: 'Sonar way', language: 'js' };"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileDetails.tsx":[{"add":["54","          <ProfileProjects","55","            organization={props.organization}","56","            profile={profile}","57","            updateProfiles={props.updateProfiles}","58","          \/>"],"delete":["54","          <ProfileProjects {...props} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileInheritance.tsx":[{"add":["66","    if (prevProps.profile.key !== this.props.profile.key) {"],"delete":["66","    if (prevProps.profile !== this.props.profile) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfilePermissions-test.tsx.snap":[{"add":["51","            \"key\": \"sonar-way\",","73","            \"key\": \"sonar-way\","],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileDetails-test.tsx.snap":[{"add":[],"delete":["64","        exporters={Array []}","73","        profiles={Array []}","115","        exporters={Array []}","118","        profiles={Array []}"]}],"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":[{"add":["119","): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {"],"delete":["119","): Promise<{ more: boolean; results: ProfileProject[] }> {"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":[{"add":["38","  loadingMore: boolean;","40","  projects: Array<{ key: string; name: string }>;","50","    loadingMore: false,","52","    projects: [],","62","    if (prevProps.profile.key !== this.props.profile.key) {","63","      this.loadProjects();","71","  stopLoading = () => {","72","    if (this.mounted) {","73","      this.setState({ loading: false });","74","    }","75","  };","76","","79","      this.setState({ loading: false, projects: [] });","83","    this.setState({ loading: true });","85","    getProfileProjects(data).then(({ paging, results }) => {","86","      if (this.mounted) {","87","        this.setState({","88","          projects: results,","89","          total: paging.total,","90","          loading: false","91","        });","92","      }","93","    }, this.stopLoading);","97","    this.setState({ loadingMore: true });","98","    const data = { key: this.props.profile.key, page: this.state.page + 1 };","99","    getProfileProjects(data).then(({ paging, results }) => {","100","      if (this.mounted) {","101","        this.setState(state => ({","102","          projects: [...state.projects, ...results],","103","          total: paging.total,","104","          loadingMore: false","105","        }));","106","      }","107","    }, this.stopLoading);","143","            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.key}>","155","          ready={!this.state.loadingMore}"],"delete":["39","  projects: Array<{ key: string; name: string; uuid: string }> | null;","40","  ready: boolean;","51","    projects: null,","52","    ready: true,","62","    if (prevProps.profile !== this.props.profile) {","63","      this.setState({ projects: null, page: 1 }, this.loadProjects);","73","      this.setState({ loading: false });","78","    getProfileProjects(data).then(","79","      (r: any) => {","80","        if (this.mounted) {","81","          this.setState(state => ({","82","            projects: state.projects ? [...state.projects, ...r.results] : r.results,","83","            total: r.paging.total,","84","            loading: false,","85","            ready: true","86","          }));","87","        }","88","      },","89","      () => {}","90","    );","94","    this.setState(state => ({ ready: false, page: state.page + 1 }), this.loadProjects);","107","    if (this.state.loading) {","108","      return <i className=\"spinner\" \/>;","109","    }","110","","126","    if (projects == null) {","127","      return null;","128","    }","129","","138","            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.uuid}>","150","          ready={this.state.ready}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfilePermissions.tsx":[{"add":["31","import { Profile } from '..\/types';","45","  profile: Pick<Profile, 'key' | 'language' | 'name'>;","67","      prevProps.profile.key !== this.props.profile.key"],"delete":["44","  profile: { language: string; name: string };","66","      prevProps.profile !== this.props.profile"]}]}},"45db190c5e259163bb31eac16b8f7fe80d35a4d4":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/AuthorizationMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/AuthorizationDaoTest.java":[{"add":["1023","    ComponentDto project = db.components().insertPrivateProject();","1024","","1027","    db.users().insertProjectPermissionOnUser(user4, \"admin\", project);"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/AuthorizationMapper.xml":[{"add":["387","    and ur.resource_id is null","397","    gr.resource_id is null and"],"delete":[]}]}},"4377c049eab9efbf8ecb56caf1fd3c0c779a0731":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/measures\/MeasuresMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/measures\/MeasuresMediumTest.java":[{"add":["29","import org.junit.Rule;","33","import org.sonar.api.utils.log.LogTester;","34","import org.sonar.api.utils.log.LoggerLevel;","42","import static org.junit.Assert.fail;","46","  @Rule","47","  public LogTester logTester = new LogTester();","48","","49","  @Rule","71","  public void setUp() throws Exception {","72","    baseDir = temp.newFolder();","135","  public void applyExclusionsOnCoverageMeasures() throws IOException {","136","    File xooFile = new File(srcDir, \"sample.xoo\");","137","    FileUtils.write(xooFile, \"Sample xoo\\n\\ncontent\");","138","","139","    File measures = new File(srcDir, \"sample.xoo.measures\");","140","    FileUtils.write(measures, \"lines_to_cover:2\");","141","","142","    TaskResult result = tester.newTask()","143","      .properties(ImmutableMap.<String, String>builder()","144","        .put(\"sonar.task\", \"scan\")","145","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","146","        .put(\"sonar.projectKey\", \"com.foo.project\")","147","        .put(\"sonar.projectName\", \"Foo Project\")","148","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","149","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","150","        .put(\"sonar.sources\", \"src\")","151","        .build())","152","      .start();","153","","154","    Map<String, List<Measure>> allMeasures = result.allMeasures();","155","","156","    assertThat(allMeasures.get(\"com.foo.project:src\/sample.xoo\")).extracting(\"metricKey\", \"intValue.value\")","157","      .containsOnly(tuple(\"lines\", 3),","158","        tuple(\"lines_to_cover\", 2));","159","","160","    result = tester.newTask()","161","      .properties(ImmutableMap.<String, String>builder()","162","        .put(\"sonar.task\", \"scan\")","163","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","164","        .put(\"sonar.projectKey\", \"com.foo.project\")","165","        .put(\"sonar.projectName\", \"Foo Project\")","166","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","167","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","168","        .put(\"sonar.sources\", \"src\")","169","        .put(\"sonar.coverage.exclusions\", \"src\/sample.xoo\")","170","        .build())","171","      .start();","172","","173","    allMeasures = result.allMeasures();","174","    assertThat(allMeasures.get(\"com.foo.project:src\/sample.xoo\")).extracting(\"metricKey\", \"intValue.value\")","175","      .containsOnly(tuple(\"lines\", 3));","176","  }","177","","178","  @Test","179","  public void deprecatedCoverageMeasuresAreConverted() throws IOException {","180","    File xooFile = new File(srcDir, \"sample.xoo\");","181","    FileUtils.write(xooFile, \"Sample xoo\\n\\ncontent\");","182","","183","    File measures = new File(srcDir, \"sample.xoo.measures\");","184","    FileUtils.write(measures, \"it_lines_to_cover:2\");","185","","186","    TaskResult result = tester.newTask()","187","      .properties(ImmutableMap.<String, String>builder()","188","        .put(\"sonar.task\", \"scan\")","189","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","190","        .put(\"sonar.projectKey\", \"com.foo.project\")","191","        .put(\"sonar.projectName\", \"Foo Project\")","192","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","193","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","194","        .put(\"sonar.sources\", \"src\")","195","        .build())","196","      .start();","197","","198","    Map<String, List<Measure>> allMeasures = result.allMeasures();","199","","200","    assertThat(allMeasures.get(\"com.foo.project:src\/sample.xoo\")).extracting(\"metricKey\", \"intValue.value\")","201","      .containsOnly(tuple(\"lines\", 3),","202","        tuple(\"lines_to_cover\", 2));","203","","204","    assertThat(logTester.logs(LoggerLevel.WARN))","205","      .contains(\"Coverage measure for metric 'lines_to_cover' should not be saved directly by a Sensor. Plugin should be updated to use SensorContext::newCoverage instead.\");","206","  }","207","","208","  @Test","209","  public void failIfTryingToSaveServerSideMeasure() throws IOException {","210","    File xooFile = new File(srcDir, \"sample.xoo\");","211","    FileUtils.write(xooFile, \"Sample xoo\\n\\ncontent\");","212","","213","    File measures = new File(srcDir, \"sample.xoo.measures\");","214","    FileUtils.write(measures, \"new_lines:2\");","215","","216","    try {","217","      tester.newTask()","218","        .properties(ImmutableMap.<String, String>builder()","219","          .put(\"sonar.task\", \"scan\")","220","          .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","221","          .put(\"sonar.projectKey\", \"com.foo.project\")","222","          .put(\"sonar.projectName\", \"Foo Project\")","223","          .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","224","          .put(\"sonar.projectDescription\", \"Description of Foo Project\")","225","          .put(\"sonar.sources\", \"src\")","226","          .build())","227","        .start();","228","      fail(\"Expected exception\");","229","    } catch (Exception e) {","230","      assertThat(e)","231","        .hasCauseInstanceOf(UnsupportedOperationException.class)","232","        .hasStackTraceContaining(\"Metric 'new_lines' should not be computed by a Sensor\");","233","    }","234","  }","235","","236","  @Test"],"delete":["42","  @org.junit.Rule","64","  public void setUp() {","65","    baseDir = temp.getRoot();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":[{"add":["26","import java.util.HashMap;","54","import org.sonar.api.utils.log.Logger;","55","import org.sonar.api.utils.log.Loggers;","120","  private static final Logger LOG = Loggers.get(DefaultSensorStorage.class);","155","  private final Map<Metric<?>, Metric<?>> deprecatedCoverageMetricMapping = new HashMap<>();","235","    DefaultMeasure measureToSave;","238","      measureToSave = new DefaultMeasure<>()","239","        .forMetric((Metric) metric)","240","        .on(measure.inputComponent())","241","        .withValue(measure.value());","242","    } else {","243","      measureToSave = measure;","258","      saveCoverageMetricInternal((InputFile) component, metric, measureToSave);","263","      measureCache.put(component.key(), metric.key(), measureToSave);"],"delete":["27","import java.util.IdentityHashMap;","35","import org.slf4j.Logger;","36","import org.slf4j.LoggerFactory;","120","  private static final Logger LOG = LoggerFactory.getLogger(DefaultSensorStorage.class);","155","  private final Map<Metric<?>, Metric<?>> deprecatedCoverageMetricMapping = new IdentityHashMap<>();","251","      saveCoverageMetricInternal((InputFile) component, metric, measure);","256","      measureCache.put(component.key(), metric.key(), measure);"]}]}},"a0d8fee001d9e074da508fc1e04031e239f1c490":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/charts\/AdvancedTimeline.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/charts\/AdvancedTimeline.tsx":[{"add":["200","    const parentBbox = event.currentTarget.getBoundingClientRect();","220","    const parentBbox = event.currentTarget.getBoundingClientRect();"],"delete":["61","  mouseOverlayPos?: ClientRect | DOMRect;","198","  getMouseOverlayPos = (target: SVGElement) => {","199","    if (this.state.mouseOverlayPos) {","200","      return this.state.mouseOverlayPos;","201","    }","202","    const pos = target.getBoundingClientRect();","203","    this.setState({ mouseOverlayPos: pos });","204","    return pos;","205","  };","206","","210","    const parentBbox = this.getMouseOverlayPos(event.currentTarget);","230","    const parentBbox = this.getMouseOverlayPos(event.currentTarget);"]}]}},"0a21ddb780241a6b0ad1ca4394840e479658943c":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/qualitymodel\/RatingSettings.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/qualitymodel\/RatingSettingsTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/qualitymodel\/RatingSettings.java":[{"add":["27","import org.sonar.api.utils.MessageException;","53","      String languageKey = settings.getString(languagePropertyKey);","54","      if (languageKey == null) {","55","        throw MessageException.of(\"Technical debt configuration is corrupted. At least one language specific parameter has no Language key. \" +","56","          \"Contact your administrator to update this configuration in the global administration section of SonarQube.\");","57","      }","58","      builder.put(languageKey, LanguageSpecificConfiguration.create(settings, languageConfigIndex));"],"delete":["52","      builder.put(settings.getString(languagePropertyKey), LanguageSpecificConfiguration.create(settings, languageConfigIndex));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/qualitymodel\/RatingSettingsTest.java":[{"add":["28","import org.sonar.api.utils.MessageException;","31","import static org.sonar.api.CoreProperties.DEVELOPMENT_COST;","32","import static org.sonar.api.CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS;","33","import static org.sonar.api.CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY;","34","import static org.sonar.api.CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY;","63","    settings.setProperty(DEVELOPMENT_COST, \"50\");","75","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS, \"0,1\");","76","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY, aLanguage);","77","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"30\");","78","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_SIZE_METRIC_KEY, CoreMetrics.NCLOC_KEY);","79","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"1\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY, anotherLanguage);","80","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"1\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"40\");","81","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"1\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_SIZE_METRIC_KEY, CoreMetrics.COMPLEXITY_KEY);","91","    RatingSettings configurationLoader = new RatingSettings(settings);","103","    settings.setProperty(DEVELOPMENT_COST, \"30\");","104","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS, \"0\");","105","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY, aLanguage);","106","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"40\");","112","","113","  @Test","114","  public void constructor_fails_with_ME_if_language_specific_parameter_language_is_missing() {","115","    settings.setProperty(DEVELOPMENT_COST, \"30\");","116","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS, \"0\");","117","    settings.setProperty(LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"40\");","118","","119","    throwable.expect(MessageException.class);","120","    throwable.expectMessage(\"Technical debt configuration is corrupted. At least one language specific parameter has no Language key. \" +","121","      \"Contact your administrator to update this configuration in the global administration section of SonarQube.\");","122","","123","    new RatingSettings(settings);","124","  }"],"delete":["58","    settings.setProperty(CoreProperties.DEVELOPMENT_COST, \"50\");","70","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS, \"0,1\");","71","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY, aLanguage);","72","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"30\");","73","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_SIZE_METRIC_KEY, CoreMetrics.NCLOC_KEY);","74","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"1\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY, anotherLanguage);","75","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"1\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"40\");","76","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"1\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_SIZE_METRIC_KEY, CoreMetrics.COMPLEXITY_KEY);","89","    RatingSettings configurationLoader = new RatingSettings(settings);","98","    settings.setProperty(CoreProperties.DEVELOPMENT_COST, \"30\");","99","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS, \"0\");","100","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_LANGUAGE_KEY, aLanguage);","101","    settings.setProperty(CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS + \".\" + \"0\" + \".\" + CoreProperties.LANGUAGE_SPECIFIC_PARAMETERS_MAN_DAYS_KEY, \"40\");"]}]}},"a35c677063a62e426b5412572b712240d410a357":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanel-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanelSection-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/application.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverviewRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverview.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanelSection.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/BranchOverview-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/quality-gates.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/application.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverviewRenderer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanel.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/QualityGatePanel-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverview-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/component.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanel-test.tsx.snap":[{"add":[],"delete":["38","        branchLike={","39","          Object {","40","            \"analysisDate\": \"2018-01-01\",","41","            \"excludedFromPurge\": true,","42","            \"isMain\": true,","43","            \"name\": \"master\",","44","          }","45","        }","107","        branchLike={","108","          Object {","109","            \"analysisDate\": \"2018-01-01\",","110","            \"excludedFromPurge\": true,","111","            \"isMain\": true,","112","            \"name\": \"master\",","113","          }","114","        }","241","        branchLike={","242","          Object {","243","            \"analysisDate\": \"2018-01-01\",","244","            \"excludedFromPurge\": true,","245","            \"isMain\": true,","246","            \"name\": \"master\",","247","          }","248","        }","310","        branchLike={","311","          Object {","312","            \"analysisDate\": \"2018-01-01\",","313","            \"excludedFromPurge\": true,","314","            \"isMain\": true,","315","            \"name\": \"master\",","316","          }","317","        }","393","        branchLike={","394","          Object {","395","            \"analysisDate\": \"2018-01-01\",","396","            \"excludedFromPurge\": true,","397","            \"isMain\": true,","398","            \"name\": \"master\",","399","          }","400","        }","553","        branchLike={","554","          Object {","555","            \"analysisDate\": \"2018-01-01\",","556","            \"excludedFromPurge\": true,","557","            \"isMain\": true,","558","            \"name\": \"master\",","559","          }","560","        }"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/QualityGatePanelSection-test.tsx.snap":[{"add":[],"delete":["12","    branchLike={","13","      Object {","14","        \"analysisDate\": \"2018-01-01\",","15","        \"excludedFromPurge\": true,","16","        \"isMain\": true,","17","        \"name\": \"master\",","18","      }","19","    }","116","    branchLike={","117","      Object {","118","        \"analysisDate\": \"2018-01-01\",","119","        \"excludedFromPurge\": true,","120","        \"isMain\": true,","121","        \"name\": \"master\",","122","      }","123","    }","232","    branchLike={","233","      Object {","234","        \"analysisDate\": \"2018-01-01\",","235","        \"excludedFromPurge\": true,","236","        \"isMain\": true,","237","        \"name\": \"master\",","238","      }","239","    }","336","    branchLike={","337","      Object {","338","        \"analysisDate\": \"2018-01-01\",","339","        \"excludedFromPurge\": true,","340","        \"isMain\": true,","341","        \"name\": \"master\",","342","      }","343","    }"]}],"server\/sonar-web\/src\/main\/js\/types\/application.ts":[{"add":["19","import { Branch } from '.\/branch-like';","20","import { Visibility } from '.\/component';","21","","27","","28","export interface Application {","29","  branches: Pick<Branch, 'isMain' | 'name'>[];","30","  description?: string;","31","  key: string;","32","  name: string;","33","  projects: ApplicationProject[];","34","  visibility: Visibility;","35","}","36","","37","export interface ApplicationProject {","38","  branch: string;","39","  enabled?: boolean;","40","  isMain: boolean;","41","  key: string;","42","  name: string;","43","  selected?: boolean;","44","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverviewRenderer.tsx":[{"add":[],"delete":["76","                  branchLike={branchLike}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/BranchOverview.tsx":[{"add":["23","import { getApplicationDetails, getApplicationLeak } from '..\/..\/..\/api\/application';","36","  isMainBranch,","126","      component.key,","127","      branchLike","130","    const appBranchName =","131","      (branchLike && !isMainBranch(branchLike) && getBranchLikeDisplayName(branchLike)) ||","132","      undefined;","133","","134","    const appDetails = await getApplicationDetails(component.key, appBranchName);","135","","137","    getApplicationLeak(component.key, appBranchName).then(","161","        const projectDetails = appDetails.projects.find(p => p.key === project.key);","162","        const projectBranchLike = projectDetails","163","          ? { isMain: projectDetails.isMain, name: projectDetails.branch, excludedFromPurge: false }","164","          : undefined;","165","","168","          projectBranchLike,","174","          project,","175","          projectBranchLike","181","          const qgStatuses = results.map(({ measures = [], project, projectBranchLike }) => {","190","              status,","191","              branchLike: projectBranchLike","231","    this.loadMeasuresAndMeta(key, branchLike, metricKeys).then(","243","            status,","244","            branchLike","266","  loadMeasuresAndMeta = (","267","    componentKey: string,","268","    branchLike?: BranchLike,","269","    metricKeys: string[] = []","270","  ) => {"],"delete":["23","import { getApplicationLeak } from '..\/..\/..\/api\/application';","118","","126","      component.key","130","    getApplicationLeak(component.key, branchLike && getBranchLikeDisplayName(branchLike)).then(","161","          project","167","          const qgStatuses = results.map(({ measures = [], project }) => {","176","              status","216","    this.loadMeasuresAndMeta(key, metricKeys).then(","228","            status","250","  loadMeasuresAndMeta = (componentKey: string, metricKeys: string[] = []) => {","251","    const { branchLike } = this.props;","252",""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanelSection.tsx":[{"add":["34","  const { component, qgStatus } = props;","57","            branchLike={qgStatus.branchLike}","70","            branchLike={qgStatus.branchLike}"],"delete":["34","  const { branchLike, component, qgStatus } = props;","56","            branchLike={branchLike}","69","            branchLike={branchLike}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/BranchOverview-test.tsx":[{"add":["24","import { getApplicationDetails, getApplicationLeak } from '..\/..\/..\/..\/api\/application';","33","import { mockBranch, mockMainBranch } from '..\/..\/..\/..\/helpers\/mocks\/branch-like';","154","  getApplicationDetails: jest.fn().mockResolvedValue({","155","    branches: [],","156","    key: 'key-1',","157","    name: 'app',","158","    projects: [","159","      {","160","        branch: 'foo',","161","        key: 'KEY-P1',","162","        name: 'P1'","163","      }","164","    ],","165","    visibility: 'Private'","166","  }),","255","  it('should fetch correctly other branch', async () => {","256","    const wrapper = shallowRender({ branchLike: mockBranch(), component });","257","    await waitAndUpdate(wrapper);","258","    expect(getApplicationDetails).toHaveBeenCalled();","259","    expect(wrapper).toMatchSnapshot();","260","  });","261",""],"delete":["24","import { getApplicationLeak } from '..\/..\/..\/..\/api\/application';","33","import { mockMainBranch } from '..\/..\/..\/..\/helpers\/mocks\/branch-like';"]}],"server\/sonar-web\/src\/main\/js\/types\/quality-gates.ts":[{"add":["19","import { BranchLike } from '.\/branch-like';","20","","66","  branchLike?: BranchLike;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/application.ts":[{"add":["21","import { Application, ApplicationPeriod } from '..\/types\/application';","32","","33","export function getApplicationDetails(application: string, branch?: string): Promise<Application> {","34","  return getJSON('\/api\/applications\/show', { application, branch }).then(","35","    r => r.application,","36","    throwGlobalError","37","  );","38","}"],"delete":["21","import { ApplicationPeriod } from '..\/types\/application';"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverviewRenderer-test.tsx.snap":[{"add":[],"delete":["19","          branchLike={","20","            Object {","21","              \"analysisDate\": \"2018-01-01\",","22","              \"excludedFromPurge\": true,","23","              \"isMain\": true,","24","              \"name\": \"master\",","25","            }","26","          }","246","          branchLike={","247","            Object {","248","              \"analysisDate\": \"2018-01-01\",","249","              \"excludedFromPurge\": true,","250","              \"isMain\": true,","251","              \"name\": \"master\",","252","            }","253","          }"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/QualityGatePanel.tsx":[{"add":["36","  const { component, loading, qgStatuses = [] } = props;"],"delete":["26","import { BranchLike } from '..\/..\/..\/types\/branch-like';","31","  branchLike?: BranchLike;","38","  const { branchLike, component, loading, qgStatuses = [] } = props;","109","                    branchLike={branchLike}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/QualityGatePanel-test.tsx":[{"add":[],"delete":["21","import { mockMainBranch } from '..\/..\/..\/..\/helpers\/mocks\/branch-like';","80","      branchLike={mockMainBranch()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/branches\/__tests__\/__snapshots__\/BranchOverview-test.tsx.snap":[{"add":["2","exports[`application overview should fetch correctly other branch 1`] = `","3","<Memo(BranchOverviewRenderer)","4","  analyses={","5","    Array [","6","      Object {","7","        \"date\": \"2017-03-01T09:36:01+0100\",","8","        \"events\": Array [],","9","        \"key\": \"foo\",","10","        \"projectVersion\": \"1.0\",","11","      },","12","      Object {","13","        \"date\": \"2017-03-01T09:36:01+0100\",","14","        \"events\": Array [],","15","        \"key\": \"foo\",","16","        \"projectVersion\": \"1.0\",","17","      },","18","      Object {","19","        \"date\": \"2017-03-01T09:36:01+0100\",","20","        \"events\": Array [],","21","        \"key\": \"foo\",","22","        \"projectVersion\": \"1.0\",","23","      },","24","      Object {","25","        \"date\": \"2017-03-01T09:36:01+0100\",","26","        \"events\": Array [],","27","        \"key\": \"foo\",","28","        \"projectVersion\": \"1.0\",","29","      },","30","      Object {","31","        \"date\": \"2017-03-01T09:36:01+0100\",","32","        \"events\": Array [],","33","        \"key\": \"foo\",","34","        \"projectVersion\": \"1.0\",","35","      },","36","    ]","37","  }","38","  branchLike={","39","    Object {","40","      \"analysisDate\": \"2018-01-01\",","41","      \"excludedFromPurge\": true,","42","      \"isMain\": false,","43","      \"name\": \"branch-6.7\",","44","    }","45","  }","46","  component={","47","    Object {","48","      \"breadcrumbs\": Array [","49","        Object {","50","          \"breadcrumbs\": Array [],","51","          \"key\": \"foo\",","52","          \"name\": \"MyProject\",","53","          \"organization\": \"foo\",","54","          \"qualifier\": \"APP\",","55","          \"qualityGate\": Object {","56","            \"isDefault\": true,","57","            \"key\": \"30\",","58","            \"name\": \"Sonar way\",","59","          },","60","          \"qualityProfiles\": Array [","61","            Object {","62","              \"deleted\": false,","63","              \"key\": \"my-qp\",","64","              \"language\": \"ts\",","65","              \"name\": \"Sonar way\",","66","            },","67","          ],","68","          \"tags\": Array [],","69","        },","70","      ],","71","      \"key\": \"my-project\",","72","      \"name\": \"MyProject\",","73","      \"organization\": \"foo\",","74","      \"qualifier\": \"APP\",","75","      \"qualityGate\": Object {","76","        \"isDefault\": true,","77","        \"key\": \"30\",","78","        \"name\": \"Sonar way\",","79","      },","80","      \"qualityProfiles\": Array [","81","        Object {","82","          \"deleted\": false,","83","          \"key\": \"my-qp\",","84","          \"language\": \"ts\",","85","          \"name\": \"Sonar way\",","86","        },","87","      ],","88","      \"tags\": Array [],","89","    }","90","  }","91","  graph=\"coverage\"","92","  leakPeriod={","93","    Object {","94","      \"date\": \"2017-01-05\",","95","      \"project\": \"foo\",","96","      \"projectName\": \"Foo\",","97","    }","98","  }","99","  loadingHistory={false}","100","  loadingStatus={false}","101","  measures={","102","    Array [","103","      Object {","104","        \"bestValue\": true,","105","        \"metric\": Object {","106","          \"id\": \"alert_status\",","107","          \"key\": \"alert_status\",","108","          \"name\": \"alert_status\",","109","          \"type\": \"INT\",","110","        },","111","        \"periods\": undefined,","112","        \"value\": \"1.0\",","113","      },","114","      Object {","115","        \"bestValue\": true,","116","        \"metric\": Object {","117","          \"id\": \"quality_gate_details\",","118","          \"key\": \"quality_gate_details\",","119","          \"name\": \"quality_gate_details\",","120","          \"type\": \"INT\",","121","        },","122","        \"periods\": undefined,","123","        \"value\": \"1.0\",","124","      },","125","      Object {","126","        \"bestValue\": true,","127","        \"metric\": Object {","128","          \"id\": \"bugs\",","129","          \"key\": \"bugs\",","130","          \"name\": \"bugs\",","131","          \"type\": \"INT\",","132","        },","133","        \"periods\": undefined,","134","        \"value\": \"1.0\",","135","      },","136","      Object {","137","        \"bestValue\": true,","138","        \"leak\": \"1\",","139","        \"metric\": Object {","140","          \"id\": \"new_bugs\",","141","          \"key\": \"new_bugs\",","142","          \"name\": \"new_bugs\",","143","          \"type\": \"INT\",","144","        },","145","        \"periods\": Array [","146","          Object {","147","            \"bestValue\": true,","148","            \"index\": 1,","149","            \"value\": \"1.0\",","150","          },","151","        ],","152","        \"value\": \"1.0\",","153","      },","154","      Object {","155","        \"bestValue\": true,","156","        \"metric\": Object {","157","          \"id\": \"reliability_rating\",","158","          \"key\": \"reliability_rating\",","159","          \"name\": \"reliability_rating\",","160","          \"type\": \"RATING\",","161","        },","162","        \"periods\": undefined,","163","        \"value\": \"1.0\",","164","      },","165","      Object {","166","        \"bestValue\": true,","167","        \"leak\": \"1\",","168","        \"metric\": Object {","169","          \"id\": \"new_reliability_rating\",","170","          \"key\": \"new_reliability_rating\",","171","          \"name\": \"new_reliability_rating\",","172","          \"type\": \"RATING\",","173","        },","174","        \"periods\": Array [","175","          Object {","176","            \"bestValue\": true,","177","            \"index\": 1,","178","            \"value\": \"1.0\",","179","          },","180","        ],","181","        \"value\": \"1.0\",","182","      },","183","      Object {","184","        \"bestValue\": true,","185","        \"metric\": Object {","186","          \"id\": \"vulnerabilities\",","187","          \"key\": \"vulnerabilities\",","188","          \"name\": \"vulnerabilities\",","189","          \"type\": \"INT\",","190","        },","191","        \"periods\": undefined,","192","        \"value\": \"1.0\",","193","      },","194","      Object {","195","        \"bestValue\": true,","196","        \"leak\": \"1\",","197","        \"metric\": Object {","198","          \"id\": \"new_vulnerabilities\",","199","          \"key\": \"new_vulnerabilities\",","200","          \"name\": \"new_vulnerabilities\",","201","          \"type\": \"INT\",","202","        },","203","        \"periods\": Array [","204","          Object {","205","            \"bestValue\": true,","206","            \"index\": 1,","207","            \"value\": \"1.0\",","208","          },","209","        ],","210","        \"value\": \"1.0\",","211","      },","212","      Object {","213","        \"bestValue\": true,","214","        \"metric\": Object {","215","          \"id\": \"security_rating\",","216","          \"key\": \"security_rating\",","217","          \"name\": \"security_rating\",","218","          \"type\": \"RATING\",","219","        },","220","        \"periods\": undefined,","221","        \"value\": \"1.0\",","222","      },","223","      Object {","224","        \"bestValue\": true,","225","        \"leak\": \"1\",","226","        \"metric\": Object {","227","          \"id\": \"new_security_rating\",","228","          \"key\": \"new_security_rating\",","229","          \"name\": \"new_security_rating\",","230","          \"type\": \"RATING\",","231","        },","232","        \"periods\": Array [","233","          Object {","234","            \"bestValue\": true,","235","            \"index\": 1,","236","            \"value\": \"1.0\",","237","          },","238","        ],","239","        \"value\": \"1.0\",","240","      },","241","      Object {","242","        \"bestValue\": true,","243","        \"metric\": Object {","244","          \"id\": \"security_hotspots\",","245","          \"key\": \"security_hotspots\",","246","          \"name\": \"security_hotspots\",","247","          \"type\": \"INT\",","248","        },","249","        \"periods\": undefined,","250","        \"value\": \"1.0\",","251","      },","252","      Object {","253","        \"bestValue\": true,","254","        \"leak\": \"1\",","255","        \"metric\": Object {","256","          \"id\": \"new_security_hotspots\",","257","          \"key\": \"new_security_hotspots\",","258","          \"name\": \"new_security_hotspots\",","259","          \"type\": \"INT\",","260","        },","261","        \"periods\": Array [","262","          Object {","263","            \"bestValue\": true,","264","            \"index\": 1,","265","            \"value\": \"1.0\",","266","          },","267","        ],","268","        \"value\": \"1.0\",","269","      },","270","      Object {","271","        \"bestValue\": true,","272","        \"metric\": Object {","273","          \"id\": \"security_hotspots_reviewed\",","274","          \"key\": \"security_hotspots_reviewed\",","275","          \"name\": \"security_hotspots_reviewed\",","276","          \"type\": \"INT\",","277","        },","278","        \"periods\": undefined,","279","        \"value\": \"1.0\",","280","      },","281","      Object {","282","        \"bestValue\": true,","283","        \"leak\": \"1\",","284","        \"metric\": Object {","285","          \"id\": \"new_security_hotspots_reviewed\",","286","          \"key\": \"new_security_hotspots_reviewed\",","287","          \"name\": \"new_security_hotspots_reviewed\",","288","          \"type\": \"INT\",","289","        },","290","        \"periods\": Array [","291","          Object {","292","            \"bestValue\": true,","293","            \"index\": 1,","294","            \"value\": \"1.0\",","295","          },","296","        ],","297","        \"value\": \"1.0\",","298","      },","299","      Object {","300","        \"bestValue\": true,","301","        \"metric\": Object {","302","          \"id\": \"security_review_rating\",","303","          \"key\": \"security_review_rating\",","304","          \"name\": \"security_review_rating\",","305","          \"type\": \"RATING\",","306","        },","307","        \"periods\": undefined,","308","        \"value\": \"1.0\",","309","      },","310","      Object {","311","        \"bestValue\": true,","312","        \"leak\": \"1\",","313","        \"metric\": Object {","314","          \"id\": \"new_security_review_rating\",","315","          \"key\": \"new_security_review_rating\",","316","          \"name\": \"new_security_review_rating\",","317","          \"type\": \"RATING\",","318","        },","319","        \"periods\": Array [","320","          Object {","321","            \"bestValue\": true,","322","            \"index\": 1,","323","            \"value\": \"1.0\",","324","          },","325","        ],","326","        \"value\": \"1.0\",","327","      },","328","      Object {","329","        \"bestValue\": true,","330","        \"metric\": Object {","331","          \"id\": \"code_smells\",","332","          \"key\": \"code_smells\",","333","          \"name\": \"code_smells\",","334","          \"type\": \"INT\",","335","        },","336","        \"periods\": undefined,","337","        \"value\": \"1.0\",","338","      },","339","      Object {","340","        \"bestValue\": true,","341","        \"leak\": \"1\",","342","        \"metric\": Object {","343","          \"id\": \"new_code_smells\",","344","          \"key\": \"new_code_smells\",","345","          \"name\": \"new_code_smells\",","346","          \"type\": \"INT\",","347","        },","348","        \"periods\": Array [","349","          Object {","350","            \"bestValue\": true,","351","            \"index\": 1,","352","            \"value\": \"1.0\",","353","          },","354","        ],","355","        \"value\": \"1.0\",","356","      },","357","      Object {","358","        \"bestValue\": true,","359","        \"metric\": Object {","360","          \"id\": \"sqale_rating\",","361","          \"key\": \"sqale_rating\",","362","          \"name\": \"sqale_rating\",","363","          \"type\": \"RATING\",","364","        },","365","        \"periods\": undefined,","366","        \"value\": \"1.0\",","367","      },","368","      Object {","369","        \"bestValue\": true,","370","        \"leak\": \"1\",","371","        \"metric\": Object {","372","          \"id\": \"new_maintainability_rating\",","373","          \"key\": \"new_maintainability_rating\",","374","          \"name\": \"new_maintainability_rating\",","375","          \"type\": \"RATING\",","376","        },","377","        \"periods\": Array [","378","          Object {","379","            \"bestValue\": true,","380","            \"index\": 1,","381","            \"value\": \"1.0\",","382","          },","383","        ],","384","        \"value\": \"1.0\",","385","      },","386","      Object {","387","        \"bestValue\": true,","388","        \"metric\": Object {","389","          \"id\": \"sqale_index\",","390","          \"key\": \"sqale_index\",","391","          \"name\": \"sqale_index\",","392","          \"type\": \"INT\",","393","        },","394","        \"periods\": undefined,","395","        \"value\": \"1.0\",","396","      },","397","      Object {","398","        \"bestValue\": true,","399","        \"leak\": \"1\",","400","        \"metric\": Object {","401","          \"id\": \"new_technical_debt\",","402","          \"key\": \"new_technical_debt\",","403","          \"name\": \"new_technical_debt\",","404","          \"type\": \"INT\",","405","        },","406","        \"periods\": Array [","407","          Object {","408","            \"bestValue\": true,","409","            \"index\": 1,","410","            \"value\": \"1.0\",","411","          },","412","        ],","413","        \"value\": \"1.0\",","414","      },","415","      Object {","416","        \"bestValue\": true,","417","        \"metric\": Object {","418","          \"id\": \"coverage\",","419","          \"key\": \"coverage\",","420","          \"name\": \"coverage\",","421","          \"type\": \"PERCENT\",","422","        },","423","        \"periods\": undefined,","424","        \"value\": \"1.0\",","425","      },","426","      Object {","427","        \"bestValue\": true,","428","        \"leak\": \"1\",","429","        \"metric\": Object {","430","          \"id\": \"new_coverage\",","431","          \"key\": \"new_coverage\",","432","          \"name\": \"new_coverage\",","433","          \"type\": \"PERCENT\",","434","        },","435","        \"periods\": Array [","436","          Object {","437","            \"bestValue\": true,","438","            \"index\": 1,","439","            \"value\": \"1.0\",","440","          },","441","        ],","442","        \"value\": \"1.0\",","443","      },","444","      Object {","445","        \"bestValue\": true,","446","        \"metric\": Object {","447","          \"id\": \"lines_to_cover\",","448","          \"key\": \"lines_to_cover\",","449","          \"name\": \"lines_to_cover\",","450","          \"type\": \"INT\",","451","        },","452","        \"periods\": undefined,","453","        \"value\": \"1.0\",","454","      },","455","      Object {","456","        \"bestValue\": true,","457","        \"leak\": \"1\",","458","        \"metric\": Object {","459","          \"id\": \"new_lines_to_cover\",","460","          \"key\": \"new_lines_to_cover\",","461","          \"name\": \"new_lines_to_cover\",","462","          \"type\": \"INT\",","463","        },","464","        \"periods\": Array [","465","          Object {","466","            \"bestValue\": true,","467","            \"index\": 1,","468","            \"value\": \"1.0\",","469","          },","470","        ],","471","        \"value\": \"1.0\",","472","      },","473","      Object {","474","        \"bestValue\": true,","475","        \"metric\": Object {","476","          \"id\": \"tests\",","477","          \"key\": \"tests\",","478","          \"name\": \"tests\",","479","          \"type\": \"INT\",","480","        },","481","        \"periods\": undefined,","482","        \"value\": \"1.0\",","483","      },","484","      Object {","485","        \"bestValue\": true,","486","        \"metric\": Object {","487","          \"id\": \"duplicated_lines_density\",","488","          \"key\": \"duplicated_lines_density\",","489","          \"name\": \"duplicated_lines_density\",","490","          \"type\": \"INT\",","491","        },","492","        \"periods\": undefined,","493","        \"value\": \"1.0\",","494","      },","495","      Object {","496","        \"bestValue\": true,","497","        \"leak\": \"1\",","498","        \"metric\": Object {","499","          \"id\": \"new_duplicated_lines_density\",","500","          \"key\": \"new_duplicated_lines_density\",","501","          \"name\": \"new_duplicated_lines_density\",","502","          \"type\": \"INT\",","503","        },","504","        \"periods\": Array [","505","          Object {","506","            \"bestValue\": true,","507","            \"index\": 1,","508","            \"value\": \"1.0\",","509","          },","510","        ],","511","        \"value\": \"1.0\",","512","      },","513","      Object {","514","        \"bestValue\": true,","515","        \"metric\": Object {","516","          \"id\": \"duplicated_blocks\",","517","          \"key\": \"duplicated_blocks\",","518","          \"name\": \"duplicated_blocks\",","519","          \"type\": \"INT\",","520","        },","521","        \"periods\": undefined,","522","        \"value\": \"1.0\",","523","      },","524","      Object {","525","        \"bestValue\": true,","526","        \"metric\": Object {","527","          \"id\": \"ncloc\",","528","          \"key\": \"ncloc\",","529","          \"name\": \"ncloc\",","530","          \"type\": \"INT\",","531","        },","532","        \"periods\": undefined,","533","        \"value\": \"1.0\",","534","      },","535","      Object {","536","        \"bestValue\": true,","537","        \"metric\": Object {","538","          \"id\": \"ncloc_language_distribution\",","539","          \"key\": \"ncloc_language_distribution\",","540","          \"name\": \"ncloc_language_distribution\",","541","          \"type\": \"INT\",","542","        },","543","        \"periods\": undefined,","544","        \"value\": \"1.0\",","545","      },","546","      Object {","547","        \"bestValue\": true,","548","        \"metric\": Object {","549","          \"id\": \"projects\",","550","          \"key\": \"projects\",","551","          \"name\": \"projects\",","552","          \"type\": \"INT\",","553","        },","554","        \"periods\": undefined,","555","        \"value\": \"1.0\",","556","      },","557","      Object {","558","        \"bestValue\": true,","559","        \"metric\": Object {","560","          \"id\": \"lines\",","561","          \"key\": \"lines\",","562","          \"name\": \"lines\",","563","          \"type\": \"INT\",","564","        },","565","        \"periods\": undefined,","566","        \"value\": \"1.0\",","567","      },","568","      Object {","569","        \"bestValue\": true,","570","        \"leak\": \"1\",","571","        \"metric\": Object {","572","          \"id\": \"new_lines\",","573","          \"key\": \"new_lines\",","574","          \"name\": \"new_lines\",","575","          \"type\": \"INT\",","576","        },","577","        \"periods\": Array [","578","          Object {","579","            \"bestValue\": true,","580","            \"index\": 1,","581","            \"value\": \"1.0\",","582","          },","583","        ],","584","        \"value\": \"1.0\",","585","      },","586","    ]","587","  }","588","  measuresHistory={","589","    Array [","590","      Object {","591","        \"history\": Array [","592","          Object {","593","            \"date\": \"PARSED:2019-01-05\",","594","            \"value\": \"2.0\",","595","          },","596","        ],","597","        \"metric\": \"bugs\",","598","      },","599","      Object {","600","        \"history\": Array [","601","          Object {","602","            \"date\": \"PARSED:2019-01-05\",","603","            \"value\": \"0\",","604","          },","605","        ],","606","        \"metric\": \"vulnerabilities\",","607","      },","608","      Object {","609","        \"history\": Array [","610","          Object {","611","            \"date\": \"PARSED:2019-01-01\",","612","            \"value\": \"1.0\",","613","          },","614","        ],","615","        \"metric\": \"sqale_index\",","616","      },","617","      Object {","618","        \"history\": Array [","619","          Object {","620","            \"date\": \"PARSED:2019-01-02\",","621","            \"value\": \"1.0\",","622","          },","623","        ],","624","        \"metric\": \"duplicated_lines_density\",","625","      },","626","      Object {","627","        \"history\": Array [","628","          Object {","629","            \"date\": \"PARSED:2019-01-03\",","630","            \"value\": \"10000\",","631","          },","632","        ],","633","        \"metric\": \"ncloc\",","634","      },","635","      Object {","636","        \"history\": Array [","637","          Object {","638","            \"date\": \"PARSED:2019-01-04\",","639","            \"value\": \"95.5\",","640","          },","641","        ],","642","        \"metric\": \"coverage\",","643","      },","644","    ]","645","  }","646","  metrics={","647","    Array [","648","      Object {","649","        \"id\": \"alert_status\",","650","        \"key\": \"alert_status\",","651","        \"name\": \"alert_status\",","652","        \"type\": \"INT\",","653","      },","654","      Object {","655","        \"id\": \"quality_gate_details\",","656","        \"key\": \"quality_gate_details\",","657","        \"name\": \"quality_gate_details\",","658","        \"type\": \"INT\",","659","      },","660","      Object {","661","        \"id\": \"bugs\",","662","        \"key\": \"bugs\",","663","        \"name\": \"bugs\",","664","        \"type\": \"INT\",","665","      },","666","      Object {","667","        \"id\": \"new_bugs\",","668","        \"key\": \"new_bugs\",","669","        \"name\": \"new_bugs\",","670","        \"type\": \"INT\",","671","      },","672","      Object {","673","        \"id\": \"reliability_rating\",","674","        \"key\": \"reliability_rating\",","675","        \"name\": \"reliability_rating\",","676","        \"type\": \"RATING\",","677","      },","678","      Object {","679","        \"id\": \"new_reliability_rating\",","680","        \"key\": \"new_reliability_rating\",","681","        \"name\": \"new_reliability_rating\",","682","        \"type\": \"RATING\",","683","      },","684","      Object {","685","        \"id\": \"vulnerabilities\",","686","        \"key\": \"vulnerabilities\",","687","        \"name\": \"vulnerabilities\",","688","        \"type\": \"INT\",","689","      },","690","      Object {","691","        \"id\": \"new_vulnerabilities\",","692","        \"key\": \"new_vulnerabilities\",","693","        \"name\": \"new_vulnerabilities\",","694","        \"type\": \"INT\",","695","      },","696","      Object {","697","        \"id\": \"security_rating\",","698","        \"key\": \"security_rating\",","699","        \"name\": \"security_rating\",","700","        \"type\": \"RATING\",","701","      },","702","      Object {","703","        \"id\": \"new_security_rating\",","704","        \"key\": \"new_security_rating\",","705","        \"name\": \"new_security_rating\",","706","        \"type\": \"RATING\",","707","      },","708","      Object {","709","        \"id\": \"security_hotspots\",","710","        \"key\": \"security_hotspots\",","711","        \"name\": \"security_hotspots\",","712","        \"type\": \"INT\",","713","      },","714","      Object {","715","        \"id\": \"new_security_hotspots\",","716","        \"key\": \"new_security_hotspots\",","717","        \"name\": \"new_security_hotspots\",","718","        \"type\": \"INT\",","719","      },","720","      Object {","721","        \"id\": \"security_hotspots_reviewed\",","722","        \"key\": \"security_hotspots_reviewed\",","723","        \"name\": \"security_hotspots_reviewed\",","724","        \"type\": \"INT\",","725","      },","726","      Object {","727","        \"id\": \"new_security_hotspots_reviewed\",","728","        \"key\": \"new_security_hotspots_reviewed\",","729","        \"name\": \"new_security_hotspots_reviewed\",","730","        \"type\": \"INT\",","731","      },","732","      Object {","733","        \"id\": \"security_review_rating\",","734","        \"key\": \"security_review_rating\",","735","        \"name\": \"security_review_rating\",","736","        \"type\": \"RATING\",","737","      },","738","      Object {","739","        \"id\": \"new_security_review_rating\",","740","        \"key\": \"new_security_review_rating\",","741","        \"name\": \"new_security_review_rating\",","742","        \"type\": \"RATING\",","743","      },","744","      Object {","745","        \"id\": \"code_smells\",","746","        \"key\": \"code_smells\",","747","        \"name\": \"code_smells\",","748","        \"type\": \"INT\",","749","      },","750","      Object {","751","        \"id\": \"new_code_smells\",","752","        \"key\": \"new_code_smells\",","753","        \"name\": \"new_code_smells\",","754","        \"type\": \"INT\",","755","      },","756","      Object {","757","        \"id\": \"sqale_rating\",","758","        \"key\": \"sqale_rating\",","759","        \"name\": \"sqale_rating\",","760","        \"type\": \"RATING\",","761","      },","762","      Object {","763","        \"id\": \"new_maintainability_rating\",","764","        \"key\": \"new_maintainability_rating\",","765","        \"name\": \"new_maintainability_rating\",","766","        \"type\": \"RATING\",","767","      },","768","      Object {","769","        \"id\": \"sqale_index\",","770","        \"key\": \"sqale_index\",","771","        \"name\": \"sqale_index\",","772","        \"type\": \"INT\",","773","      },","774","      Object {","775","        \"id\": \"new_technical_debt\",","776","        \"key\": \"new_technical_debt\",","777","        \"name\": \"new_technical_debt\",","778","        \"type\": \"INT\",","779","      },","780","      Object {","781","        \"id\": \"coverage\",","782","        \"key\": \"coverage\",","783","        \"name\": \"coverage\",","784","        \"type\": \"PERCENT\",","785","      },","786","      Object {","787","        \"id\": \"new_coverage\",","788","        \"key\": \"new_coverage\",","789","        \"name\": \"new_coverage\",","790","        \"type\": \"PERCENT\",","791","      },","792","      Object {","793","        \"id\": \"lines_to_cover\",","794","        \"key\": \"lines_to_cover\",","795","        \"name\": \"lines_to_cover\",","796","        \"type\": \"INT\",","797","      },","798","      Object {","799","        \"id\": \"new_lines_to_cover\",","800","        \"key\": \"new_lines_to_cover\",","801","        \"name\": \"new_lines_to_cover\",","802","        \"type\": \"INT\",","803","      },","804","      Object {","805","        \"id\": \"tests\",","806","        \"key\": \"tests\",","807","        \"name\": \"tests\",","808","        \"type\": \"INT\",","809","      },","810","      Object {","811","        \"id\": \"duplicated_lines_density\",","812","        \"key\": \"duplicated_lines_density\",","813","        \"name\": \"duplicated_lines_density\",","814","        \"type\": \"INT\",","815","      },","816","      Object {","817","        \"id\": \"new_duplicated_lines_density\",","818","        \"key\": \"new_duplicated_lines_density\",","819","        \"name\": \"new_duplicated_lines_density\",","820","        \"type\": \"INT\",","821","      },","822","      Object {","823","        \"id\": \"duplicated_blocks\",","824","        \"key\": \"duplicated_blocks\",","825","        \"name\": \"duplicated_blocks\",","826","        \"type\": \"INT\",","827","      },","828","      Object {","829","        \"id\": \"ncloc\",","830","        \"key\": \"ncloc\",","831","        \"name\": \"ncloc\",","832","        \"type\": \"INT\",","833","      },","834","      Object {","835","        \"id\": \"ncloc_language_distribution\",","836","        \"key\": \"ncloc_language_distribution\",","837","        \"name\": \"ncloc_language_distribution\",","838","        \"type\": \"INT\",","839","      },","840","      Object {","841","        \"id\": \"projects\",","842","        \"key\": \"projects\",","843","        \"name\": \"projects\",","844","        \"type\": \"INT\",","845","      },","846","      Object {","847","        \"id\": \"lines\",","848","        \"key\": \"lines\",","849","        \"name\": \"lines\",","850","        \"type\": \"INT\",","851","      },","852","      Object {","853","        \"id\": \"new_lines\",","854","        \"key\": \"new_lines\",","855","        \"name\": \"new_lines\",","856","        \"type\": \"INT\",","857","      },","858","    ]","859","  }","860","  onGraphChange={[Function]}","861","  projectIsEmpty={false}","862","  qgStatuses={","863","    Array [","864","      Object {","865","        \"branchLike\": undefined,","866","        \"failedConditions\": Array [","867","          Object {","868","            \"actual\": \"10\",","869","            \"error\": \"1.0\",","870","            \"level\": \"ERROR\",","871","            \"measure\": Object {","872","              \"bestValue\": true,","873","              \"metric\": Object {","874","                \"id\": \"coverage\",","875","                \"key\": \"coverage\",","876","                \"name\": \"coverage\",","877","                \"type\": \"PERCENT\",","878","              },","879","              \"periods\": undefined,","880","              \"value\": \"1.0\",","881","            },","882","            \"metric\": \"coverage\",","883","            \"op\": \"GT\",","884","            \"period\": undefined,","885","          },","886","          Object {","887","            \"actual\": \"5\",","888","            \"error\": \"1.0\",","889","            \"level\": \"ERROR\",","890","            \"measure\": Object {","891","              \"bestValue\": true,","892","              \"leak\": \"1\",","893","              \"metric\": Object {","894","                \"id\": \"new_bugs\",","895","                \"key\": \"new_bugs\",","896","                \"name\": \"new_bugs\",","897","                \"type\": \"INT\",","898","              },","899","              \"periods\": Array [","900","                Object {","901","                  \"bestValue\": true,","902","                  \"index\": 1,","903","                  \"value\": \"1.0\",","904","                },","905","              ],","906","              \"value\": \"1.0\",","907","            },","908","            \"metric\": \"new_bugs\",","909","            \"op\": \"GT\",","910","            \"period\": 1,","911","          },","912","        ],","913","        \"key\": \"foo\",","914","        \"name\": \"Foo\",","915","        \"status\": \"ERROR\",","916","      },","917","      Object {","918","        \"branchLike\": undefined,","919","        \"failedConditions\": Array [","920","          Object {","921","            \"actual\": \"15\",","922","            \"error\": \"5.0\",","923","            \"level\": \"ERROR\",","924","            \"measure\": Object {","925","              \"bestValue\": true,","926","              \"leak\": \"1\",","927","              \"metric\": Object {","928","                \"id\": \"new_bugs\",","929","                \"key\": \"new_bugs\",","930","                \"name\": \"new_bugs\",","931","                \"type\": \"INT\",","932","              },","933","              \"periods\": Array [","934","                Object {","935","                  \"bestValue\": true,","936","                  \"index\": 1,","937","                  \"value\": \"1.0\",","938","                },","939","              ],","940","              \"value\": \"1.0\",","941","            },","942","            \"metric\": \"new_bugs\",","943","            \"op\": \"GT\",","944","            \"period\": 1,","945","          },","946","        ],","947","        \"key\": \"bar\",","948","        \"name\": \"Bar\",","949","        \"status\": \"ERROR\",","950","      },","951","    ]","952","  }","953","\/>","954","`;","955","","1819","        \"branchLike\": undefined,","1872","        \"branchLike\": undefined,","2766","        \"branchLike\": Object {","2767","          \"analysisDate\": \"2018-01-01\",","2768","          \"excludedFromPurge\": true,","2769","          \"isMain\": true,","2770","          \"name\": \"master\",","2771","        },"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/component.ts":[{"add":["30","","31","export enum Visibility {","32","  Public = 'public',","33","  Private = 'private'","34","}"],"delete":[]}]}},"23af6b337c69be5ceef1060ac507e72a3eadf615":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/Form.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1113","project_deletion.resource_deleted=Project \"{0}\" has been successfully deleted."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/Form.tsx":[{"add":["24","import addGlobalSuccessMessage from '..\/..\/app\/utils\/addGlobalSuccessMessage';","39","        addGlobalSuccessMessage(","40","          translateWithParameters('project_deletion.resource_deleted', component.name)","41","        );"],"delete":[]}]}},"a8a990b0170b730b642f44d683376dd710b47110":{"changes":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest\/organizations_with_unique_index.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63Test.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUnique.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest\/organizations_with_non_unique_index.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest.java":"ADD","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest\/organizations_with_unique_index.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63Test.java":[{"add":["43","    verifyMigrationCount(underTest, 19);"],"delete":["43","    verifyMigrationCount(underTest, 18);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/DbVersion63.java":[{"add":["52","      .add(1518, \"Make index on ORGANIZATIONS.KEE unique\", MakeIndexOnOrganizationsKeeUnique.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUnique.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueTest\/organizations_with_non_unique_index.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/MakeIndexOnOrganizationsKeeUniqueReentranceTest.java":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["533","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1518');"],"delete":[]}]}},"80cd084762f29bce14dad599f441610c6f4fc514":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":[{"add":["125","  display: flex;","133","  flex-shrink: 0;","144","  flex-shrink: 0;","151","  flex: 1;","152","  min-width: 0;","153","  margin-left: 5px;","154","  margin-right: 5px;","157","  overflow: hidden;","163","  flex-shrink: 0;"],"delete":["125","  display: table;","126","  width: 100%;","134","  display: table-cell;","135","  vertical-align: top;","137","  width: 1px;","147","  display: table-cell;","148","  vertical-align: top;","149","  width: 1px;","156","  display: table-cell;","157","  vertical-align: top;","158","  padding-left: 5px;","159","  padding-right: 5px;","167","  display: table-cell;","168","  vertical-align: top;","169","  width: 1px;"]}]}},"e94172d9ea94c25913b422b332720324275502f1":{"changes":{"server\/sonar-webserver-core\/src\/main\/java\/org\/sonar\/server\/rule\/RegisterRules.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-core\/src\/main\/java\/org\/sonar\/server\/rule\/RegisterRules.java":[{"add":["171","    Map<RuleKey, RuleDefinitionDto> allRules = dbClient.ruleDao().selectAllDefinitions(dbSession).stream()","178","    return dbClient.ruleDao().selectAllDeprecatedRuleKeys(dbSession).stream()","230","              \"The following deprecated rule keys seem to be referencing a non-existing rule\",","640","      dto.setSystemTags(ruleDef.tags());","641","      changed = true;","642","    }","654","      dto.setSecurityStandards(ruleDef.securityStandards());","655","      changed = true;","656","    }","662","    List<RuleDefinitionDto> customRules = new ArrayList<>();","678","          recorder.updated(customRule);","741","    if (!StringUtils.equals(customRule.getRepositoryKey(), templateRule.getRepositoryKey())) {","742","      customRule.setRepositoryKey(templateRule.getRepositoryKey());","743","      changed = true;","744","    }","815","      lazyToString(() -> String.join(\"\\n\", incorrectRuleKeyMessage)));","857","    list.forEach(t -> {"],"delete":["72","import static com.google.common.collect.Lists.newArrayList;","172","    Map<RuleKey, RuleDefinitionDto> allRules = dbClient.ruleDao().selectAllDefinitions(dbSession)","173","      .stream()","180","    return dbClient.ruleDao().selectAllDeprecatedRuleKeys(dbSession)","181","      .stream()","233","            \"The following deprecated rule keys seem to be referencing a non-existing rule\",","643","        dto.setSystemTags(ruleDef.tags());","644","        \/\/ FIXME this can't be implemented easily with organization support: remove end-user tags that are now declared as system","645","        \/\/ RuleTagHelper.applyTags(dto, ImmutableSet.copyOf(dto.getTags()));","646","        changed = true;","647","      }","659","        dto.setSecurityStandards(ruleDef.securityStandards());","660","        changed = true;","661","      }","667","    List<RuleDefinitionDto> customRules = newArrayList();","815","      lazyToString(() -> incorrectRuleKeyMessage.stream().collect(Collectors.joining(\"\\n\"))));","857","    list.stream().forEach(t -> {"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":[{"add":["463","  public void update_template_rule_key_should_also_update_custom_rules() {","464","    when(system.now()).thenReturn(DATE1.getTime());","465","    execute(context -> {","466","      NewRepository repo = context.createRepository(\"squid\", \"java\");","467","      repo.createRule(\"rule\")","468","        .setName(\"Name1\")","469","        .setHtmlDescription(\"Description\")","470","        .setTemplate(true);","471","      repo.done();","472","    });","473","","474","    RuleDto rule1 = dbClient.ruleDao().selectOrFailByKey(db.getSession(), defaultOrganization, RuleKey.of(\"squid\", \"rule\"));","475","","476","    \/\/ insert custom rule","477","    dbClient.ruleDao().insert(db.getSession(), new RuleDefinitionDto()","478","      .setRuleKey(RuleKey.of(\"squid\", \"custom\"))","479","      .setLanguage(\"java\")","480","      .setScope(Scope.ALL)","481","      .setTemplateId(rule1.getId())","482","      .setName(\"custom1\"));","483","    db.commit();","484","","485","    \/\/ re-key rule","486","    execute(context -> {","487","      NewRepository repo = context.createRepository(\"java\", \"java\");","488","      repo.createRule(\"rule\")","489","        .setName(\"Name1\")","490","        .setHtmlDescription(\"Description\")","491","        .addDeprecatedRuleKey(\"squid\", \"rule\")","492","        .setTemplate(true);","493","      repo.done();","494","    });","495","","496","    \/\/ template rule and custom rule have been updated","497","    rule1 = dbClient.ruleDao().selectOrFailByKey(db.getSession(), defaultOrganization, RuleKey.of(\"java\", \"rule\"));","498","    RuleDto custom = dbClient.ruleDao().selectOrFailByKey(db.getSession(), defaultOrganization, RuleKey.of(\"java\", \"custom\"));","499","  }","500","","501","  @Test","1098","    verify(metadataIndex).setInitialized(RuleIndexDefinition.TYPE_RULE, true);","1099","    verify(metadataIndex).setInitialized(RuleIndexDefinition.TYPE_RULE_EXTENSION, true);"],"delete":["1059","    verify(metadataIndex).setInitialized(RuleIndexDefinition.TYPE_RULE,true);","1060","    verify(metadataIndex).setInitialized(RuleIndexDefinition.TYPE_RULE_EXTENSION,true);"]}]}},"61686cb47293d5d6f5da78593676de662ac94e55":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/update-center\/templates\/update-center-plugin.hbs":"MODIFY","server\/sonar-web\/src\/main\/less\/init\/type.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/update-center\/templates\/update-center-plugin.hbs":[{"add":["75","          <li class=\"little-spacer-bottom text-limited\" title=\"{{license}}\">","76","            Licensed under","77","            <span class=\"js-plugin-license\">{{license}}<\/span>","78","          <\/li>"],"delete":["75","          <li class=\"little-spacer-bottom\">Licensed under <span class=\"js-plugin-license\">{{license}}<\/span><\/li>"]}],"server\/sonar-web\/src\/main\/less\/init\/type.less":[{"add":["118",".text-limited {","119","  display: inline-block;","120","  max-width: 16vw;","121","  .text-ellipsis;","122","}","123",""],"delete":[]}]}},"818a1ed6d1a180adc065b7aac6214255c4e7576b":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":[{"add":["97","    assertThat(psParam.defaultValue()).isEqualTo(\"100\");","118","    String response = executeJsonRequest(null, 25);","226","    assertThat(response.getPaging()).extracting(Paging::getPageIndex, Paging::getPageSize, Paging::getTotal).containsOnly(1, 100, 5);"],"delete":["97","    assertThat(psParam.defaultValue()).isEqualTo(\"25\");","118","    String response = executeJsonRequest(null, null);","226","    assertThat(response.getPaging()).extracting(Paging::getPageIndex, Paging::getPageSize, Paging::getTotal).containsOnly(1, 25, 5);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":[{"add":["69","    action.addPagingParams(100);"],"delete":["69","    action.addPagingParams(25);"]}]}},"4e19fe7ccd4c5ff5ca29fb0bdb831ed03942f441":{"changes":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueMeasureTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IssueCounterTest.java":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/CoreMetrics.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/IssueCounter.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueMeasureTest.java":[{"add":["66","   * SONAR-7555","78","    \/\/ 1 is a false-positive, 1 is a won't fix, 1 is confirmed, 1 is reopened, and the remaining ones stays open","80","    adminIssueClient().doTransition(issues.get(1).key(), \"wontfix\");","81","    adminIssueClient().doTransition(issues.get(2).key(), \"confirm\");","82","    adminIssueClient().doTransition(issues.get(3).key(), \"resolve\");","83","    adminIssueClient().doTransition(issues.get(3).key(), \"reopen\");","89","      ResourceQuery.createForMetrics(SAMPLE_PROJECT_KEY, \"false_positive_issues\", \"wont_fix_issues\", \"open_issues\", \"reopened_issues\", \"confirmed_issues\"));","91","    assertThat(project.getMeasureIntValue(\"wont_fix_issues\")).isEqualTo(1);","92","    assertThat(project.getMeasureIntValue(\"open_issues\")).isEqualTo(13);"],"delete":["77","    \/\/ 1 is a false-positive, 1 is confirmed, 1 is reopened, and the remaining ones stays open","79","    adminIssueClient().doTransition(issues.get(1).key(), \"confirm\");","80","    adminIssueClient().doTransition(issues.get(2).key(), \"resolve\");","81","    adminIssueClient().doTransition(issues.get(2).key(), \"reopen\");","87","      ResourceQuery.createForMetrics(SAMPLE_PROJECT_KEY, \"false_positive_issues\", \"open_issues\", \"reopened_issues\", \"confirmed_issues\"));","89","    assertThat(project.getMeasureIntValue(\"open_issues\")).isEqualTo(14);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IssueCounterTest.java":[{"add":["45","import static org.sonar.api.issue.Issue.RESOLUTION_WONT_FIX;","66","import static org.sonar.api.measures.CoreMetrics.WONT_FIX_ISSUES_KEY;","96","  static final Metric WONT_FIX_ISSUES_METRIC = new MetricImpl(23, WONT_FIX_ISSUES_KEY, WONT_FIX_ISSUES_KEY, INT);","131","    .add(WONT_FIX_ISSUES_METRIC)","187","  public void count_issues_by_resolution() {","188","    periodsHolder.setPeriods();","189","","190","    \/\/ bottom-up traversal -> from files to project","191","    underTest.beforeComponent(FILE1);","192","    underTest.onIssue(FILE1, createIssue(null, STATUS_OPEN, BLOCKER));","193","    underTest.onIssue(FILE1, createIssue(RESOLUTION_FIXED, STATUS_CLOSED, MAJOR));","194","    underTest.onIssue(FILE1, createIssue(RESOLUTION_FALSE_POSITIVE, STATUS_RESOLVED, MAJOR));","195","    underTest.onIssue(FILE1, createIssue(RESOLUTION_WONT_FIX, STATUS_CLOSED, MAJOR));","196","    underTest.afterComponent(FILE1);","197","","198","    underTest.beforeComponent(FILE2);","199","    underTest.onIssue(FILE2, createIssue(null, STATUS_CONFIRMED, BLOCKER));","200","    underTest.onIssue(FILE2, createIssue(null, STATUS_CONFIRMED, MAJOR));","201","    underTest.onIssue(FILE2, createIssue(RESOLUTION_WONT_FIX, STATUS_CLOSED, MAJOR));","202","    underTest.afterComponent(FILE2);","203","","204","    underTest.beforeComponent(FILE3);","205","    underTest.afterComponent(FILE3);","206","","207","    underTest.beforeComponent(PROJECT);","208","    underTest.afterComponent(PROJECT);","209","","210","    assertThat(measureRepository.getRawMeasure(FILE1, ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","211","    assertThat(measureRepository.getRawMeasure(FILE1, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","212","    assertThat(measureRepository.getRawMeasure(FILE1, WONT_FIX_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","213","","214","    assertThat(measureRepository.getRawMeasure(FILE2, ISSUES_METRIC).get().getIntValue()).isEqualTo(2);","215","    assertThat(measureRepository.getRawMeasure(FILE2, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(0);","216","    assertThat(measureRepository.getRawMeasure(FILE2, WONT_FIX_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","217","","218","    assertThat(measureRepository.getRawMeasure(FILE3, ISSUES_METRIC).get().getIntValue()).isEqualTo(0);","219","","220","    assertThat(measureRepository.getRawMeasure(PROJECT, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","221","    assertThat(measureRepository.getRawMeasure(PROJECT, WONT_FIX_ISSUES_METRIC).get().getIntValue()).isEqualTo(2);","222","  }","223","","224","  @Test"],"delete":["167","    \/\/ count by status","170","    assertThat(measureRepository.getRawMeasure(FILE1, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);","175","    assertThat(measureRepository.getRawMeasure(FILE2, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(0);","182","    assertThat(measureRepository.getRawMeasure(PROJECT, FALSE_POSITIVE_ISSUES_METRIC).get().getIntValue()).isEqualTo(1);"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2733","metric.wont_fix_issues.name=Won't Fix  Issues","2734","metric.wont_fix_issues.description=Won't fix issues","2735",""],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/CoreMetrics.java":[{"add":["1541","   * @since 5.6","1542","   *\/","1543","  public static final String WONT_FIX_ISSUES_KEY = \"wont_fix_issues\";","1544","","1545","  \/**","1546","   * @since 5.6","1547","   *\/","1548","  public static final Metric<Integer> WONT_FIX_ISSUES = new Metric.Builder(WONT_FIX_ISSUES_KEY, \"Won't Fix Issues\", Metric.ValueType.INT)","1549","    .setDescription(\"Won't fix issues\")","1550","    .setDirection(Metric.DIRECTION_WORST)","1551","    .setDomain(DOMAIN_ISSUES)","1552","    .setBestValue(0.0)","1553","    .setOptimizedBestValue(true)","1554","    .create();","1555","","1556","  \/**"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":[{"add":["78","    int measuresOnTrk = 45;","79","    int measuresOnBrc = 222;","80","    int measuresOnDir = 141;","107","    int newMeasuresOnTrk = 55;","108","    int newMeasuresOnBrc = 286;"],"delete":["78","    int measuresOnTrk = 44;","79","    int measuresOnBrc = 216;","80","    int measuresOnDir = 137;","107","    int newMeasuresOnTrk = 54;","108","    int newMeasuresOnBrc = 280;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/IssueCounter.java":[{"add":["40","import static org.sonar.api.issue.Issue.RESOLUTION_FALSE_POSITIVE;","41","import static org.sonar.api.issue.Issue.RESOLUTION_WONT_FIX;","61","import static org.sonar.api.measures.CoreMetrics.WONT_FIX_ISSUES_KEY;","72"," * <li>issues per resolution (unresolved, false-positives, won't fix)<\/li>","169","    addMeasure(component, WONT_FIX_ISSUES_KEY, currentCounters.counter().wontFix);","234","    private int wontFix = 0;","244","      wontFix += counter.wontFix;","254","      } else if (RESOLUTION_FALSE_POSITIVE.equals(issue.resolution())) {","256","      } else if (RESOLUTION_WONT_FIX.equals(issue.resolution())) {","257","        wontFix++;"],"delete":["28","import org.sonar.api.issue.Issue;","69"," * <li>unresolved issues<\/li>","70"," * <li>false-positives<\/li>","71"," * <li>open issues<\/li>","251","      } else if (Issue.RESOLUTION_FALSE_POSITIVE.equals(issue.resolution())) {"]}]}},"37a018029bb7382f293d20d81e03a2d5e716dfcd":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/profile-activation-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":[{"add":["10","    <div class=\"js-modal-messages\"><\/div>"],"delete":["10","    <div class=\"alert alert-danger\"><\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/profile-activation-view.js":[{"add":["20","  'components\/common\/modal-form',","22","], function (ModalForm) {","26","  return ModalForm.extend({","29","    ui: function () {","30","      return _.extend(this._super(), {","31","        qualityProfileSelect: '#coding-rules-quality-profile-activation-select',","32","        qualityProfileSeverity: '#coding-rules-quality-profile-activation-severity',","33","        qualityProfileActivate: '#coding-rules-quality-profile-activation-activate',","34","        qualityProfileParameters: '[name]'","35","      });","39","      return _.extend(this._super(), {","45","      this._super();","97","      this.disableForm();","113","        that.close();","115","      }).fail(function (jqXHR) {","116","        that.enableForm();","117","        that.showErrors(jqXHR.responseJSON.errors, jqXHR.responseJSON.warnings);","148","      return _.extend(this._super(), {"],"delete":["20","  'components\/common\/modals',","22","], function (Modal) {","26","  return Modal.extend({","29","    ui: {","30","      qualityProfileSelect: '#coding-rules-quality-profile-activation-select',","31","      qualityProfileSeverity: '#coding-rules-quality-profile-activation-severity',","32","      qualityProfileActivate: '#coding-rules-quality-profile-activation-activate',","33","      qualityProfileParameters: '[name]'","37","      return _.extend(Modal.prototype.events.apply(this, arguments), {","43","      Modal.prototype.onRender.apply(this, arguments);","95","      this.close();","112","      }).fail(function () {","113","        that.trigger('profileActivationFailed');","144","      return _.extend(Modal.prototype.serializeData.apply(this, arguments), {"]}]}},"626d28bab60fb53ed64dc1054640d224456901e4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetailsContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MetricNotFound.js":"ADD","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetails.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetailsContainer.js":[{"add":["42","const mapDispatchToProps = { fetchMeasure };"],"delete":["42","const mapDispatchToProps = dispatch => {","43","  return {","44","    fetchMeasure: (metricKey, periodIndex) => dispatch(fetchMeasure(metricKey, periodIndex))","45","  };","46","};"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/actions.js":[{"add":["66","    return getMeasuresAndMeta("],"delete":["66","    getMeasuresAndMeta("]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MetricNotFound.js":[{"add":[],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2701","component_measures.not_found=The requested measure was not found."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetails.js":[{"add":["24","import MetricNotFound from '.\/MetricNotFound';","29","  mounted: boolean;","31","  state = {","32","    loading: true","33","  };","35","  componentDidMount () {","36","    this.mounted = true;","37","    this.loadData();","38","  }","39","","40","  componentDidUpdate (prevProps) {","41","    if (prevProps.params.metricKey !== this.props.params.metricKey) {","42","      this.loadData();","46","  componentWillUnmount () {","47","    this.mounted = false;","50","  metricExists (): boolean {","51","    const { metrics } = this.props;","52","    const { metricKey } = this.props.params;","53","    const metric = metrics.find(metric => metric.key === metricKey);","54","    return !!metric;","55","  }","56","","57","  loadData () {","58","    if (this.metricExists()) {","59","      this.setState({ loading: true });","60","      const periodIndex = this.props.location.query.period || 1;","61","      const onLoaded = () => this.mounted && this.setState({ loading: false });","62","      this.props.fetchMeasure(this.props.params.metricKey, Number(periodIndex)).then(onLoaded, onLoaded);","67","    if (!this.metricExists()) {","68","      return <MetricNotFound\/>;","69","    }","70","","71","    if (this.state.loading) {","72","      return <Spinner\/>;","73","    }","74","","77","    if (!measure) {","78","      return <MetricNotFound\/>;"],"delete":["28","  componentWillMount () {","29","    const { metrics } = this.props;","30","    const { metricKey } = this.props.params;","31","    const metric = metrics.find(metric => metric.key === metricKey);","33","    if (!metric) {","34","      const { component } = this.props;","35","      const { router } = this.context;","37","      router.replace({","38","        pathname: '\/',","39","        query: { id: component.key }","40","      });","44","  componentDidMount () {","45","    const periodIndex = this.props.location.query.period || 1;","46","    this.props.fetchMeasure(this.props.params.metricKey, Number(periodIndex));","49","  componentDidUpdate (nextProps) {","50","    if (nextProps.params.metricKey !== this.props.params.metricKey) {","51","      const periodIndex = nextProps.location.query.period || 1;","52","      this.props.fetchMeasure(nextProps.params.metricKey, Number(periodIndex));","59","    if (measure == null) {","60","      return <Spinner\/>;","109","","110","MeasureDetails.contextTypes = {","111","  router: React.PropTypes.object","112","};"]}]}},"84951661e40e8a439f0a1ed4af9a0d00fa38fc83":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.js.snap":[{"add":["27","  <div","28","    className=\"little-spacer-top\">","31","      onClick={[Function]}"],"delete":["27","  <div>"]}]}},"862238b470ddb24df3a6d267c4730e27f33c5e3e":{"changes":{"server\/sonar-web\/src\/main\/js\/main\/nav\/global\/global-nav-search.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/main\/nav\/global\/global-nav-search.js":[{"add":["54","    document.addEventListener('click', this.onClickOutside);","59","    document.removeEventListener('click', this.onClickOutside);"],"delete":["54","    window.addEventListener('click', this.onClickOutside);","59","    window.removeEventListener('click', this.onClickOutside);"]}]}},"e6203dbc6e7e1d8516dc8243afdaf3a7c41270a6":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/ws\/MeasureValueFormatter.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/MeasureValueFormatterTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/ws\/MeasureValueFormatter.java":[{"add":["42","      case MILLISEC:","67","      case MILLISEC:"],"delete":["41","      case MILLISEC:","66","      case MILLISEC:"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/MeasureValueFormatterTest.java":[{"add":["52","    assertThat(formatNumericalValue(6_000_000_000_000.0d, newMetric(MILLISEC))).isEqualTo(\"6000000000000\");","61","    assertThat(formatMeasureValue(newNumericMeasure(6_000_000_000_000.0d), newMetric(MILLISEC))).isEqualTo(\"6000000000000\");"],"delete":["59","    assertThat(formatMeasureValue(newNumericMeasure(1000d), newMetric(MILLISEC))).isEqualTo(\"1000\");"]}]}},"83194599aeb1542afe7d15dcc256d570ece21f94":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":[{"add":["261","  z-index: 100;"],"delete":[]}]}},"b007b2589ac52fad5a09bb53936aa9486fd1d8b5":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateDbTester.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/metric\/ws\/DeleteAction.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/qualityGate\/QualityGateTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/metric\/ws\/DeleteActionTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateDbTester.java":[{"add":["25","import org.sonar.db.metric.MetricDto;","29","import static org.apache.commons.lang.RandomStringUtils.randomNumeric;","73","","74","  public QualityGateConditionDto addCondition(QualityGateDto qualityGate, MetricDto metric) {","75","    QualityGateConditionDto condition = new QualityGateConditionDto().setQualityGateId(qualityGate.getId())","76","      .setMetricId(metric.getId())","77","      .setOperator(\"GT\")","78","      .setWarningThreshold(randomNumeric(10))","79","      .setErrorThreshold(randomNumeric(10));","80","    dbClient.gateConditionDao().insert(condition, dbSession);","81","    db.commit();","82","    return condition;","83","  }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/metric\/ws\/DeleteAction.java":[{"add":["70","      dbClient.gateConditionDao().deleteConditionsWithInvalidMetrics(dbSession);"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/qualityGate\/QualityGateTest.java":[{"add":["54","import static org.apache.commons.lang.RandomStringUtils.randomAlphabetic;","253","  @Test","254","  public void does_not_fail_when_condition_is_on_removed_metric() throws IOException {","255","    String customMetricKey = randomAlphabetic(10);","256","    createCustomIntMetric(orchestrator, customMetricKey);","257","    QualityGate simple = qgClient().create(\"OnCustomMetric\");","258","    qgClient().setDefault(simple.id());","259","    qgClient().createCondition(NewCondition.create(simple.id()).metricKey(customMetricKey).operator(\"GT\").warningThreshold(\"40\"));","260","    try {","261","      deleteCustomMetric(orchestrator, customMetricKey);","262","      String projectKey = newProjectKey();","263","      BuildResult buildResult = executeAnalysis(projectKey);","264","","265","      verifyQGStatusInPostTask(buildResult, projectKey, TASK_STATUS_SUCCESS, QG_STATUS_OK);","266","","267","      assertThat(getGateStatusMeasure(projectKey).getValue()).isEqualTo(\"OK\");","268","    } finally {","269","      deleteCustomMetric(orchestrator, customMetricKey);","270","      qgClient().unsetDefault();","271","      qgClient().destroy(simple.id());","272","    }","273","  }","274","","335","  private static void createCustomIntMetric(Orchestrator orchestrator, String metricKey) {","336","    newAdminWsClient(orchestrator).wsConnector().call(new PostRequest(\"api\/metrics\/create\")","337","      .setParam(\"key\", metricKey)","338","      .setParam(\"name\", metricKey)","339","      .setParam(\"type\", \"INT\"))","340","      .failIfNotSuccessful();","341","  }","342","","343","  private static void deleteCustomMetric(Orchestrator orchestrator, String metricKey) {","344","    newAdminWsClient(orchestrator).wsConnector().call(new PostRequest(\"api\/metrics\/delete\")","345","      .setParam(\"keys\", metricKey))","346","      .failIfNotSuccessful();","347","  }","348",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/metric\/ws\/DeleteActionTest.java":[{"add":["30","import org.sonar.db.qualitygate.QualityGateConditionDto;","31","import org.sonar.db.qualitygate.QualityGateDto;","108","  public void delete_associated_quality_gate_conditions() {","109","    loggedAsSystemAdministrator();","110","    MetricDto customMetric = insertCustomMetric(\"custom-key\");","111","    MetricDto nonCustomMetric = insertMetric(newMetricDto().setEnabled(true).setUserManaged(false).setKey(\"non-custom\"));","112","    QualityGateDto qualityGate1 = db.qualityGates().insertQualityGate();","113","    db.qualityGates().addCondition(qualityGate1, customMetric);","114","    QualityGateDto qualityGate2 = db.qualityGates().insertQualityGate();","115","    db.qualityGates().addCondition(qualityGate2, customMetric);","116","    db.qualityGates().addCondition(qualityGate2, nonCustomMetric);","117","","118","    newRequest().setParam(\"keys\", \"custom-key\").execute();","119","","120","    assertThat(dbClient.gateConditionDao().selectForQualityGate(db.getSession(), qualityGate1.getId())).isEmpty();","121","    assertThat(dbClient.gateConditionDao().selectForQualityGate(db.getSession(), qualityGate2.getId()))","122","      .extracting(QualityGateConditionDto::getMetricId).containsOnly(nonCustomMetric.getId().longValue());","123","  }","124","","125","  @Test","167","    return insertMetric(newCustomEnabledMetric(key));","168","  }","169","","170","  private MetricDto insertMetric(MetricDto metric) {","171","    db.getDbClient().metricDao().insert(db.getSession(), metric);","173","    return metric;"],"delete":["147","    MetricDto metricDto = newCustomEnabledMetric(key);","148","    db.getDbClient().metricDao().insert(db.getSession(), metricDto);","150","    return metricDto;"]}]}},"3adb1969a53fb22066453c36fe9d0acb6902d343":{"changes":{"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/issue\/index\/AsyncIssueIndexingImplTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/issue\/index\/Comparators.java":"ADD","server\/sonar-webserver-core\/src\/main\/java\/org\/sonar\/server\/issue\/index\/AsyncIssueIndexingImpl.java":"MODIFY"},"diff":{"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/issue\/index\/AsyncIssueIndexingImplTest.java":[{"add":["21","import java.util.ArrayList;","24","import java.util.HashMap;","27","import java.util.Map;","50","import static org.assertj.core.api.Assertions.assertThatCode;","227","  @Test","228","  public void verify_comparator_transitivity() {","229","    Map<String, SnapshotDto> map = new HashMap<>();","230","    map.put(\"A\", new SnapshotDto().setCreatedAt(1L));","231","    map.put(\"B\", new SnapshotDto().setCreatedAt(2L));","232","    map.put(\"C\", new SnapshotDto().setCreatedAt(-1L));","233","    List<String> uuids = new ArrayList<>(map.keySet());","234","    uuids.add(\"D\");","235","    Comparators.verifyTransitivity(AsyncIssueIndexingImpl.compareBySnapshot(map), uuids);","236","  }","237","","238","  @Test","239","  public void trigger_with_lot_of_not_analyzed_project_should_not_raise_exception() {","240","    for (int i = 0; i < 100; i++) {","241","      BranchDto dto = new BranchDto()","242","        .setBranchType(BRANCH)","243","        .setKey(\"branch_\" + i)","244","        .setUuid(\"branch_uuid\" + i)","245","        .setProjectUuid(\"project_uuid\" + i);","246","      dbClient.branchDao().insert(dbTester.getSession(), dto);","247","      dbTester.commit();","248","      insertSnapshot(\"analysis_\" + i, \"project_uuid\" + i, 1);","249","    }","250","","251","    for (int i = 100; i < 200; i++) {","252","      BranchDto dto = new BranchDto()","253","        .setBranchType(BRANCH)","254","        .setKey(\"branch_\" + i)","255","        .setUuid(\"branch_uuid\" + i)","256","        .setProjectUuid(\"project_uuid\" + i);","257","      dbClient.branchDao().insert(dbTester.getSession(), dto);","258","      dbTester.commit();","259","    }","260","","261","    assertThatCode(underTest::triggerOnIndexCreation).doesNotThrowAnyException();","262","  }","263",""],"delete":[]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/issue\/index\/Comparators.java":[{"add":[],"delete":[]}],"server\/sonar-webserver-core\/src\/main\/java\/org\/sonar\/server\/issue\/index\/AsyncIssueIndexingImpl.java":[{"add":["106","  static Comparator<String> compareBySnapshot(Map<String, SnapshotDto> snapshotByProjectUuid) {","110","      if (snapshot1 == null && snapshot2 == null) {","111","        return 0;","112","      }"],"delete":["106","  private static Comparator<String> compareBySnapshot(Map<String, SnapshotDto> snapshotByProjectUuid) {"]}]}},"17c1d1814e5f1274cd8c1609dc46443b1805dd50":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":[{"add":["91","      UpsertImpl update = updates.iterator().next();","92","      select.scroll(row -> callSingleHandler(handler, update, row));"],"delete":["91","      select.scroll(row -> callSingleHandler(handler, updates.iterator().next(), row));"]}]}},"d8f8e347f9bb4ff6124556e7cef766d695cbaa2a":{"changes":{"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationSerializerTest.java":"ADD","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilderTest.java":"ADD","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilder.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationSerializerTest.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilderTest.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/IssuesChangesNotificationBuilder.java":[{"add":["271","      return key.equals(that.key) && ruleType == that.ruleType && name.equals(that.name);"],"delete":["271","      return key.equals(that.key) && ruleType.equals(that.ruleType) && name.equals(that.name);"]}]}},"084e85d714534f8c22355f7744ce546ae982a7d8":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/init.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/search-navigator.less":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/page.less":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/init.js":[{"add":["63","      $('#footer').addClass('page-footer-with-sidebar');","125","    $('#footer').removeClass('page-footer-with-sidebar');"],"delete":["63","      $('#footer').addClass('search-navigator-footer');","125","    $('#footer').removeClass('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["140","      footer.classList.add('page-footer-with-sidebar');","189","      footer.classList.remove('page-footer-with-sidebar');"],"delete":["140","      footer.classList.add('search-navigator-footer');","189","      footer.classList.remove('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/less\/components\/search-navigator.less":[{"add":[],"delete":["49",".search-navigator-footer {","50","  @padding-left: @sideWidth + 10px;","51","  padding-left: @padding-left !important;","52","}","53",""]}],"server\/sonar-web\/src\/main\/less\/components\/page.less":[{"add":["125",".page-footer-with-sidebar {","126","  padding-left: ~\"calc(50vw - 370px + 10px)\" !important;","127","","128","  div {","129","    max-width: 980px;","130","  }","131","}","132","","298","","299","  .page-footer-with-sidebar {","300","    padding-left: 300px + 10px !important;","301","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":["61","      footer.classList.add('page-footer-with-sidebar');","74","      footer.classList.remove('page-footer-with-sidebar');"],"delete":["61","      footer.classList.add('search-navigator-footer');","74","      footer.classList.remove('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":[{"add":["77","      footer.classList.add('page-footer-with-sidebar');","95","      footer.classList.remove('page-footer-with-sidebar');"],"delete":["77","      footer.classList.add('search-navigator-footer');","95","      footer.classList.remove('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.js":[{"add":["61","    footer && footer.classList.add('page-footer-with-sidebar');","72","    footer && footer.classList.remove('page-footer-with-sidebar');"],"delete":["61","    footer && footer.classList.add('search-navigator-footer');","72","    footer && footer.classList.remove('search-navigator-footer');"]}]}},"61d27599390f01279a25241daa5d361fcb362803":{"changes":{"tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/ComponentBombReportAnalysisComponentProvider.java":"MODIFY","tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/ws\/BombActivatorAction.java":"MODIFY","tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/ws\/SubmitAction.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/ce\/CeWorkersTest.java":"MODIFY","tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/BombConfig.java":"MODIFY"},"diff":{"tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/ComponentBombReportAnalysisComponentProvider.java":[{"add":["38","    if (bombConfig.isOomStartBomb()) {","39","      return singletonList(OOMFailingStartComponent.class);","40","    }","41","    if (bombConfig.isIseStartBomb()) {","42","      return singletonList(ISEFailingStartComponent.class);","43","    }","54","  public static final class OOMFailingStartComponent implements Startable {","55","","56","    @Override","57","    public void start() {","58","      OOMGenerator.consumeAvailableMemory();","59","    }","60","","61","    @Override","62","    public void stop() {","63","      \/\/ nothing to do","64","    }","65","  }","66","","67","  @EagerStart","68","  public static final class ISEFailingStartComponent implements Startable {","69","","70","    @Override","71","    public void start() {","72","      throw new IllegalStateException(\"Faking an IllegalStateException thrown by a startable component in the Analysis Report processing container\");","73","    }","74","","75","    @Override","76","    public void stop() {","77","      \/\/ nothing to do","78","    }","79","  }","80","","81","  @EagerStart"],"delete":[]}],"tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/ws\/BombActivatorAction.java":[{"add":["22","import java.util.Arrays;","27","import static java.util.stream.Collectors.toList;","28","","46","      .setPossibleValues(Arrays.stream(BombType.values()).map(Enum::toString).collect(toList()));","53","    bombConfig.reset();","55","      case ISE_START:","56","        bombConfig.setIseStartBomb(true);","57","        break;","58","      case OOM_START:","59","        bombConfig.setOomStartBomb(true);","60","        break;","61","      case ISE_STOP:","64","      case OOM_STOP:","77","    NONE, OOM_START, ISE_START, OOM_STOP, ISE_STOP"],"delete":["43","      .setPossibleValues(\"OOM\", \"ISE\", \"NONE\");","50","    bombConfig.setIseStopBomb(false);","51","    bombConfig.setOomStopBomb(false);","53","      case ISE:","56","      case OOM:","69","    NONE, OOM, ISE"]}],"tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/ws\/SubmitAction.java":[{"add":["54","    ceQueue.submit(submit.build());"],"delete":["25","import org.sonar.ce.queue.CeTask;","55","    CeTask ceTask = ceQueue.submit(submit.build());"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/ce\/CeWorkersTest.java":[{"add":["40","import org.junit.After;","42","import org.junit.Before;","103","  @Before","104","  public void setup() throws Exception {","105","    unlockWorkersAndResetWorkerCount();","106","  }","107","","108","  @After","109","  public void tearDown() throws Exception {","110","    unlockWorkersAndResetWorkerCount();","111","  }","112","","113","  private void unlockWorkersAndResetWorkerCount() throws IOException {","114","    RandomAccessFile randomAccessFile = null;","115","    try {","116","      randomAccessFile = new RandomAccessFile(sharedMemory, \"rw\");","117","      MappedByteBuffer mappedByteBuffer = initMappedByteBuffer(randomAccessFile);","118","      releaseAnyAnalysisWithFakeGovernancePlugin(mappedByteBuffer);","119","      updateWorkerCount(1);","120","    } finally {","121","      close(randomAccessFile);","122","    }","123","  }","124","","175","  public void ce_worker_is_resilient_to_OOM_and_RuntimeException_when_starting_or_stopping_analysis_report_container() throws IOException {","176","    int initSuccessReportTaskCount = adminWsClient.ce().activity(new ActivityWsRequest()","177","      .setType(\"REPORT\")","178","      .setStatus(ImmutableList.of(\"SUCCESS\")))","179","      .getTasksCount();","180","    int initFailedReportTaskCount = adminWsClient.ce().activity(new ActivityWsRequest()","181","      .setType(\"REPORT\")","182","      .setStatus(ImmutableList.of(\"FAILED\")))","183","      .getTasksCount();","185","    SonarScanner sonarRunner = SonarScanner.create(ItUtils.projectDir(\"shared\/xoo-sample\"));","186","    orchestrator.executeBuild(sonarRunner, true);","188","    enableComponentBomb(\"OOM_STOP\");","190","    orchestrator.executeBuild(sonarRunner, true);","192","    enableComponentBomb(\"NONE\");","194","    orchestrator.executeBuild(sonarRunner, true);","196","    enableComponentBomb(\"ISE_START\");","198","    orchestrator.executeBuild(sonarRunner, true);","200","    enableComponentBomb(\"NONE\");","202","    orchestrator.executeBuild(sonarRunner, true);","204","    enableComponentBomb(\"ISE_STOP\");","206","    orchestrator.executeBuild(sonarRunner, true);","207","","208","    enableComponentBomb(\"NONE\");","209","","210","    orchestrator.executeBuild(sonarRunner, true);","211","","212","    enableComponentBomb(\"OOM_START\");","213","","214","    orchestrator.executeBuild(sonarRunner, true);","215","","216","    enableComponentBomb(\"NONE\");","217","","218","    orchestrator.executeBuild(sonarRunner, true);","219","","220","    \/\/ failure while starting components does fail the tasks","221","    assertThat(adminWsClient.ce().activity(new ActivityWsRequest()","222","      .setType(\"REPORT\")","223","      .setStatus(ImmutableList.of(\"FAILED\")))","224","      .getTasksCount())","225","        .isEqualTo(initFailedReportTaskCount + 2);","226","","227","    \/\/ failure while stopping components does not fail the tasks","228","    assertThat(adminWsClient.ce().activity(new ActivityWsRequest()","229","      .setType(\"REPORT\")","230","      .setStatus(ImmutableList.of(\"SUCCESS\")))","231","      .getTasksCount())","232","        .isEqualTo(initSuccessReportTaskCount + 7);","233","","382","    int delay = 200;","383","    int timeout = 5 * 10; \/\/ 10 seconds","384","    int i = 0;","387","      Thread.sleep(delay);","391","      i++;","392","    } while (i <= timeout && tasksCount > 0);","393","    assertThat(tasksCount).describedAs(\"Failed to get to an empty CE queue in a timely fashion\").isZero();"],"delete":["151","  public void ce_worker_is_resilient_to_OOM_and_RuntimeException_when_stopping_analysis_report_container() throws IOException {","153","    RandomAccessFile randomAccessFile = null;","154","    try {","155","      randomAccessFile = new RandomAccessFile(sharedMemory, \"rw\");","156","      MappedByteBuffer mappedByteBuffer = initMappedByteBuffer(randomAccessFile);","157","      releaseAnyAnalysisWithFakeGovernancePlugin(mappedByteBuffer);","159","      SonarScanner sonarRunner = SonarScanner.create(ItUtils.projectDir(\"shared\/xoo-sample\"));","160","      orchestrator.executeBuild(sonarRunner, true);","162","      enableComponentBomb(\"OOM\");","164","      orchestrator.executeBuild(sonarRunner, true);","166","      enableComponentBomb(\"NONE\");","168","      orchestrator.executeBuild(sonarRunner, true);","170","      enableComponentBomb(\"ISE\");","172","      orchestrator.executeBuild(sonarRunner, true);","174","      enableComponentBomb(\"NONE\");","176","      orchestrator.executeBuild(sonarRunner, true);","178","      assertThat(adminWsClient.ce().activity(new ActivityWsRequest()","179","        .setType(\"REPORT\")","180","        .setStatus(ImmutableList.of(\"SUCCESS\")))","181","        .getTasksCount())","182","          .isEqualTo(5);","183","    } finally {","184","      close(randomAccessFile);","185","    }","336","      Thread.sleep(100);","340","    } while (tasksCount > 0);"]}],"tests\/plugins\/fake-governance-plugin\/src\/main\/java\/ce\/BombConfig.java":[{"add":["29","  private static final String OOM_START_BOMB_KEY = \"oomStartBomb\";","30","  private static final String ISE_START_BOMB_KEY = \"iseStartBomb\";","40","  public void reset() {","41","    try (DbSession dbSession = dbClient.openSession(false)) {","42","      dbClient.internalPropertiesDao().save(dbSession, OOM_START_BOMB_KEY, String.valueOf(false));","43","      dbClient.internalPropertiesDao().save(dbSession, ISE_START_BOMB_KEY, String.valueOf(false));","44","      dbClient.internalPropertiesDao().save(dbSession, OOM_STOP_BOMB_KEY, String.valueOf(false));","45","      dbClient.internalPropertiesDao().save(dbSession, ISE_STOP_BOMB_KEY, String.valueOf(false));","46","      dbSession.commit();","47","    }","48","  }","49","","50","  public boolean isOomStartBomb() {","51","    try (DbSession dbSession = dbClient.openSession(false)) {","52","      return dbClient.internalPropertiesDao().selectByKey(dbSession, OOM_START_BOMB_KEY).map(Boolean::valueOf).orElse(false);","53","    }","54","  }","55","","56","  public void setOomStartBomb(boolean oomStartBomb) {","57","    try (DbSession dbSession = dbClient.openSession(false)) {","58","      dbClient.internalPropertiesDao().save(dbSession, OOM_START_BOMB_KEY, String.valueOf(oomStartBomb));","59","      dbSession.commit();","60","    }","61","  }","62","","63","  public boolean isIseStartBomb() {","64","    try (DbSession dbSession = dbClient.openSession(false)) {","65","      return dbClient.internalPropertiesDao().selectByKey(dbSession, ISE_START_BOMB_KEY).map(Boolean::valueOf).orElse(false);","66","    }","67","  }","68","","69","  public void setIseStartBomb(boolean iseStartBomb) {","70","    try (DbSession dbSession = dbClient.openSession(false)) {","71","      dbClient.internalPropertiesDao().save(dbSession, ISE_START_BOMB_KEY, String.valueOf(iseStartBomb));","72","      dbSession.commit();","73","    }","74","  }","75",""],"delete":[]}]}},"94a57989f8160badd5c1e7cbb66fdbceaa3bb38d":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest\/templates.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeys.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":[{"add":["36","      .add(2007, \"Update PERMISSION_TEMPLATES.KEYS \", UpdatePermissionTooLongTemplateKeys.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest\/templates.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeys.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/UpdatePermissionTooLongTemplateKeysTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":[{"add":["38","    verifyMigrationCount(underTest, 8);"],"delete":["38","    verifyMigrationCount(underTest, 7);"]}]}},"7f61d01d4fee20274e53f93c8fcbfd29f6f273be":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/metric\/MetricDtoTest.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/metric\/MetricDto.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/metric\/MetricValidator.java":"ADD"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/metric\/MetricDtoTest.java":[{"add":["111","","112","  @Test","113","  public void fail_if_domain_longer_than_64_characters() {","114","    String a65 = repeat(\"a\", 65);","115","","116","    expectedException.expect(IllegalArgumentException.class);","117","    expectedException.expectMessage(\"Metric domain length (65) is longer than the maximum authorized (64). '\" + a65 + \"' was provided.\");","118","","119","    underTest.setDomain(a65);","120","  }"],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/metric\/MetricDto.java":[{"add":["27","import static org.sonar.db.metric.MetricValidator.checkMetricDescription;","28","import static org.sonar.db.metric.MetricValidator.checkMetricDomain;","29","import static org.sonar.db.metric.MetricValidator.checkMetricKey;","30","import static org.sonar.db.metric.MetricValidator.checkMetricName;","80","    this.kee = checkMetricKey(key);","89","    this.shortName = checkMetricName(shortName);","111","    this.description = checkMetricDescription(description);","121","    this.domain = checkMetricDomain(domain);"],"delete":["27","import static org.sonar.db.metric.MetricDtoValidator.validateDescription;","28","import static org.sonar.db.metric.MetricDtoValidator.validateKey;","29","import static org.sonar.db.metric.MetricDtoValidator.validateShortName;","79","    this.kee = validateKey(key);","88","    this.shortName = validateShortName(shortName);","110","    this.description = validateDescription(description);","120","    this.domain = domain;"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/metric\/MetricValidator.java":[{"add":[],"delete":[]}]}},"364d28538c3560e555dd40874ab52e8f041c5829":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentNavigationAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentNavigationAction.java":[{"add":["232","    boolean showManualMeasures = isAdmin && !Qualifiers.DIRECTORY.equals(component.qualifier());","237","    json.prop(\"showManualMeasures\", showManualMeasures);"],"delete":["236","    json.prop(\"showManualMeasures\", isAdmin);"]}]}},"2205d5242d2d2ebb579f4a20c7c2dc1a17fbe1a8":{"changes":{"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/ModuleSettingsTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/batch\/BatchTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ModuleSettings.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/repository\/ProjectRepositories.java":"MODIFY"},"diff":{"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/ModuleSettingsTest.java":[{"add":["37","import org.sonar.batch.repository.FileData;","39","","82","    GlobalSettings globalSettings = mock(GlobalSettings.class);","83","    when(globalSettings.getDefinitions()).thenReturn(new PropertyDefinitions());","84","    when(globalSettings.getProperties()).thenReturn(ImmutableMap.of(","88","    ProjectRepositories projRepos = createSettings(\"struts-core\", ImmutableMap.of(\"on-module\", \"true\", \"overridding\", \"module\"));","92","    ModuleSettings moduleSettings = new ModuleSettings(globalSettings, module, projRepos, mode, mock(AnalysisContextReportPublisher.class));","100","  \/\/ SONAR-6386","101","  @Test","102","  public void test_loading_of_parent_module_settings_for_new_module() {","103","    GlobalSettings globalSettings = mock(GlobalSettings.class);","104","    when(globalSettings.getDefinitions()).thenReturn(new PropertyDefinitions());","105","    when(globalSettings.getProperties()).thenReturn(ImmutableMap.of(","106","      \"overridding\", \"batch\",","107","      \"on-batch\", \"true\"));","108","","109","    ProjectRepositories projRepos = createSettings(\"struts\", ImmutableMap.of(\"on-module\", \"true\", \"overridding\", \"module\"));","110","","111","    ProjectDefinition module = ProjectDefinition.create().setKey(\"struts-core\");","112","    ProjectDefinition.create().setKey(\"struts\").addSubProject(module);","113","","114","    ModuleSettings moduleSettings = new ModuleSettings(globalSettings, module, projRepos, mode, mock(AnalysisContextReportPublisher.class));","115","","116","    assertThat(moduleSettings.getString(\"overridding\")).isEqualTo(\"module\");","117","    assertThat(moduleSettings.getString(\"on-batch\")).isEqualTo(\"true\");","118","    assertThat(moduleSettings.getString(\"on-module\")).isEqualTo(\"true\");","119","  }","120","","158","        \"Access to the secured property 'sonar.foo.secured' is not possible in issues mode. The SonarQube plugin which requires this property must be deactivated in issues mode.\");"],"delete":["21","import org.sonar.batch.repository.FileData;","22","","27","","30","","84","    GlobalSettings batchSettings = mock(GlobalSettings.class);","85","    when(batchSettings.getDefinitions()).thenReturn(new PropertyDefinitions());","86","    when(batchSettings.getProperties()).thenReturn(ImmutableMap.of(","90","    ProjectRepositories projSettingsRepo = createSettings(\"struts-core\", ImmutableMap.of(\"on-module\", \"true\", \"overridding\", \"module\"));","94","    ModuleSettings moduleSettings = new ModuleSettings(batchSettings, module, projSettingsRepo, mode, mock(AnalysisContextReportPublisher.class));","139","      \"Access to the secured property 'sonar.foo.secured' is not possible in issues mode. The SonarQube plugin which requires this property must be deactivated in issues mode.\");"]}],"it\/it-tests\/src\/test\/java\/batch\/BatchTest.java":[{"add":["76","","148","  \/\/ SONAR-4680","149","  @Test","150","  public void module_should_load_settings_from_parent() {","151","    orchestrator.getServer().provisionProject(\"com.sonarsource.it.samples:multi-modules-sample\", \"Sonar :: Integration Tests :: Multi-modules Sample\");","152","","153","    Sonar sonar = orchestrator.getServer().getAdminWsClient();","154","    String propKey = \"myFakeProperty\";","155","    String rootModuleKey = \"com.sonarsource.it.samples:multi-modules-sample\";","156","    String moduleBKey = rootModuleKey + \":module_b\";","157","","158","    \/\/ Set property on provisionned project","159","    sonar.update(new PropertyUpdateQuery(propKey, \"project\", rootModuleKey));","160","    sonar.delete(new PropertyDeleteQuery(propKey, moduleBKey));","161","","162","    BuildResult result = scan(\"shared\/xoo-multi-modules-sample\", \"sonar.showSettings\", propKey);","163","","164","    assertThat(result.getLogs()).contains(rootModuleKey + \":\" + propKey + \" = project\");","165","    \/\/ Module should inherit from parent","166","    assertThat(result.getLogs()).contains(moduleBKey + \":\" + propKey + \" = project\");","167","  }","168",""],"delete":["76","  ","118","    orchestrator.getServer().associateProjectToQualityProfile(\"com.sonarsource.it.samples:multi-modules-sample\", \"xoo\", \"one-issue-per-line\");"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ModuleSettings.java":[{"add":["37","  private final ProjectRepositories projectRepos;","43","    this.projectRepos = projectSettingsRepo;","59","    ProjectDefinition def = moduleDefinition;","60","    do {","61","      if (projectRepos.moduleExists(def.getKeyWithBranch())) {","62","        addProperties(projectRepos.settings(def.getKeyWithBranch()));","63","        break;","64","      }","65","      def = def.getParent();","66","    } while (def != null);"],"delete":["37","  private final ProjectRepositories projectSettingsRepo;","43","    this.projectSettingsRepo = projectSettingsRepo;","59","    addProperties(projectSettingsRepo.settings(moduleDefinition.getKeyWithBranch()));"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/repository\/ProjectRepositories.java":[{"add":["25","import javax.annotation.CheckForNull;","26","import javax.annotation.Nullable;","61","  public boolean moduleExists(String moduleKey) {","62","    return settingsByModule.containsRow(moduleKey);","63","  }","64",""],"delete":["23","","24","import javax.annotation.CheckForNull;","25","import javax.annotation.Nullable;","26",""]}]}},"7f6004f914450d45aa6d4b3a5e60c21b3e6af53f":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/tracking\/TrackerTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizer.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/tracking\/TrackerTest.java":[{"add":["253","  \/\/ SONAR-10194","254","  @Test","255","  public void no_match_if_only_same_rulekey() {","256","    FakeInput baseInput = FakeInput.createForSourceLines(","257","      \"package aa;\",","258","      \"\",","259","      \"\/**\",","260","      \" * Hello world\",","261","      \" *\",","262","      \" *\/\",","263","      \"public class App {\",","264","      \"\",","265","      \"    public static void main(String[] args) {\",","266","      \"\",","267","      \"        int magicNumber = 42;\",","268","      \"\",","269","      \"        String s = new String(\\\"Very long line that does not meet our maximum 120 character line length criteria and should be wrapped to avoid SonarQube issues.\\\");\\r\\n\"","270","        +","271","        \"    }\",","272","      \"}\");","273","    Issue base1 = baseInput.createIssueOnLine(11, RuleKey.of(\"squid\", \"S109\"), \"Assign this magic number 42 to a well-named constant, and use the constant instead.\");","274","    Issue base2 = baseInput.createIssueOnLine(13, RuleKey.of(\"squid\", \"S00103\"), \"Split this 163 characters long line (which is greater than 120 authorized).\");","275","","276","    FakeInput rawInput = FakeInput.createForSourceLines(","277","      \"package aa;\",","278","      \"\",","279","      \"\/**\",","280","      \" * Hello world\",","281","      \" *\",","282","      \" *\/\",","283","      \"public class App {\",","284","      \"\",","285","      \"    public static void main(String[] args) {\",","286","      \"        \",","287","      \"        System.out.println(\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vel diam purus. Curabitur ut nisi lacus....\\\");\",","288","      \"        \",","289","      \"        int a = 0;\",","290","      \"        \",","291","      \"        int x = a + 123;\",","292","      \"    }\",","293","      \"}\");","294","    Issue raw1 = rawInput.createIssueOnLine(11, RuleKey.of(\"squid\", \"S00103\"), \"Split this 139 characters long line (which is greater than 120 authorized).\");","295","    Issue raw2 = rawInput.createIssueOnLine(15, RuleKey.of(\"squid\", \"S109\"), \"Assign this magic number 123 to a well-named constant, and use the constant instead.\");","296","","297","    Tracking<Issue, Issue> tracking = tracker.track(rawInput, baseInput);","298","    assertThat(tracking.baseFor(raw1)).isNull();","299","    assertThat(tracking.baseFor(raw2)).isNull();","300","    assertThat(tracking.getUnmatchedBases()).hasSize(2);","301","  }","302",""],"delete":[]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizer.java":[{"add":["86","        if (weight > 0) {","87","          possibleLinePairs.add(new LinePair(baseLine, rawLine, weight));","88","        }"],"delete":["86","        possibleLinePairs.add(new LinePair(baseLine, rawLine, weight));"]}]}},"cc10a68715444305f7a8d8e1181b39b5a79a2343":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/user\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/metric\/ws\/SearchAction.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/BulkChangeAction.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/SearchAction.java":"MODIFY","server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueQuery.java":"MODIFY","server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileRuleImplTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/measure\/custom\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":[{"add":["46","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","80","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["46","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","80","      .addPagingParams(100, MAX_LIMIT)"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersAction.java":[{"add":["54","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","88","    action.addPagingParams(50, MAX_PAGE_SIZE);"],"delete":["54","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","88","    action.addPagingParams(50, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":[{"add":["50","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","80","    wsAction.addPagingParams(50, MAX_PAGE_SIZE);"],"delete":["50","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","80","    wsAction.addPagingParams(50, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["452","    for (int i = 0; i < SearchOptions.MAX_PAGE_SIZE + 1; i++) {","1040","    expectedException.expect(IllegalArgumentException.class);","1041","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got -1)\");","1045","      .execute();"],"delete":["452","    for (int i = 0; i < SearchOptions.MAX_LIMIT + 1; i++) {","1040","    RuleDto rule = newIssueRule();","1041","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org-1\"));","1042","    ComponentDto project = db.components().insertComponent(ComponentTesting.newPublicProjectDto(organization, \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","1043","    indexPermissions();","1044","    ComponentDto file = db.components().insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","1045","    for (int i = 0; i < 12; i++) {","1046","      IssueDto issue = newDto(rule, file, project);","1047","      dbClient.issueDao().insert(session, issue);","1048","    }","1049","    session.commit();","1050","    indexIssues();","1051","","1055","      .execute()","1056","      .assertJson(this.getClass(), \"paging_with_page_size_to_minus_one.json\");"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/user\/ws\/SearchAction.java":[{"add":["102","    action.addPagingParams(50, SearchOptions.MAX_PAGE_SIZE);"],"delete":["56","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","103","    action.addPagingParams(50, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/metric\/ws\/SearchAction.java":[{"add":["36","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","63","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["36","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","63","      .addPagingParams(100, MAX_LIMIT)"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/webhook\/ws\/WebhookDeliveriesAction.java":[{"add":["50","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","94","    action.addPagingParamsSince(10, MAX_PAGE_SIZE, \"7.1\");"],"delete":["50","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","94","    action.addPagingParamsSince(10, MAX_LIMIT, \"7.1\");"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/BulkChangeAction.java":[{"add":["93","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","358","      checkArgument(issueKeys.size() <= MAX_PAGE_SIZE, \"Number of issues is limited to %s\", MAX_PAGE_SIZE);"],"delete":["93","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","358","      checkArgument(issueKeys.size() <= MAX_LIMIT, \"Number of issues is limited to %s\", MAX_LIMIT);"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":[{"add":["65","  public void fail_if_page_is_not_strictly_positive() {","66","    expectedException.expect(IllegalArgumentException.class);","67","    expectedException.expectMessage(\"Page must be greater or equal to 1 (got 0)\");","68","    new SearchOptions().setPage(0, 10);","72","  public void fail_if_ps_is_zero() {","73","    expectedException.expect(IllegalArgumentException.class);","74","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got 0)\");","75","    new SearchOptions().setPage(1, 0);","79","  public void fail_if_ps_is_negative() {","80","    expectedException.expect(IllegalArgumentException.class);","81","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got -1)\");","82","    new SearchOptions().setPage(2, -1);","83","  }","84","","85","  @Test","86","  public void fail_if_ps_is_over_limit() {","87","    expectedException.expect(IllegalArgumentException.class);","88","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got 510)\");","89","    new SearchOptions().setPage(3, SearchOptions.MAX_PAGE_SIZE + 10);","90","  }","91","","92","  @Test","93","  public void fail_if_result_after_first_10_000() {","94","    expectedException.expect(IllegalArgumentException.class);","95","    expectedException.expectMessage(\"Can return only the first 10000 results. 10500th result asked.\");","96","","97","    underTest.setPage(21, 500);","105","    expectedException.expect(IllegalArgumentException.class);","106","    expectedException.expectMessage(\"Page size must be between 1 and 500 (got 510)\");","107","    options.setLimit(SearchOptions.MAX_PAGE_SIZE + 10);"],"delete":["29","import static org.junit.Assert.fail;","66","  public void with_zero_page_size() {","67","    SearchOptions options = new SearchOptions().setPage(1, 0);","68","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","69","    assertThat(options.getOffset()).isEqualTo(0);","70","    assertThat(options.getPage()).isEqualTo(1);","74","  public void page_must_be_strictly_positive() {","75","    try {","76","      new SearchOptions().setPage(0, 10);","77","      fail();","78","    } catch (IllegalArgumentException e) {","79","      assertThat(e).hasMessage(\"Page must be greater or equal to 1 (got 0)\");","80","    }","84","  public void use_max_limit_if_negative() {","85","    SearchOptions options = new SearchOptions().setPage(2, -1);","86","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","94","    options.setLimit(SearchOptions.MAX_LIMIT + 10);","95","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","96","  }","97","","98","  @Test","99","  public void max_page_size() {","100","    SearchOptions options = new SearchOptions().setPage(3, SearchOptions.MAX_LIMIT + 10);","101","    assertThat(options.getOffset()).isEqualTo(SearchOptions.MAX_LIMIT * 2);","102","    assertThat(options.getLimit()).isEqualTo(SearchOptions.MAX_LIMIT);","115","","116","  @Test","117","  public void fail_if_result_after_first_10_000() {","118","    expectedException.expect(IllegalArgumentException.class);","119","    expectedException.expectMessage(\"Can return only the first 10000 results. 10500th result asked.\");","120","","121","    underTest.setPage(21, 500);","122","  }"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["78","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","213","    action.addPagingParams(100, MAX_PAGE_SIZE);"],"delete":["78","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","213","    action.addPagingParams(100, MAX_LIMIT);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":[{"add":["59","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","91","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["59","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","91","      .addPagingParams(100, MAX_LIMIT)"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":[],"delete":["1117","","1118","    \/\/ from 2 to 11 included","1119","    options.setOffset(2).setLimit(0);","1120","    results = underTest.search(new RuleQuery(), options);","1121","    assertThat(results.getTotal()).isEqualTo(3);","1122","    assertThat(results.getUuids()).hasSize(1);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/SearchAction.java":[{"add":["65","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","131","      .addPagingParams(100, MAX_PAGE_SIZE)","229","      context.setPage(Integer.parseInt(request.getP()), 0).setLimit(MAX_PAGE_SIZE);"],"delete":["65","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","131","      .addPagingParams(100, MAX_LIMIT)","229","      context.setPage(Integer.parseInt(request.getP()), 0).setLimit(MAX_LIMIT);"]}],"server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueQuery.java":[{"add":["33","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","502","        checkArgument(issueKeys.size() <= MAX_PAGE_SIZE, \"Number of issue keys must be less than \" + MAX_PAGE_SIZE + \" (got \" + issueKeys.size() + \")\");"],"delete":["33","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","502","        checkArgument(issueKeys.size() <= MAX_LIMIT, \"Number of issue keys must be less than \" + MAX_LIMIT + \" (got \" + issueKeys.size() + \")\");"]}],"server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":[{"add":["110","    result = underTest.search(IssueQuery.builder().build(), new SearchOptions().setOffset(2).setLimit(10));","127","    SearchResponse result = underTest.search(query.build(), new SearchOptions().setLimit(500));","128","    assertThat(result.getHits().getHits()).hasSize(SearchOptions.MAX_PAGE_SIZE);"],"delete":["110","    result = underTest.search(IssueQuery.builder().build(), new SearchOptions().setOffset(2).setLimit(0));","127","    SearchResponse result = underTest.search(query.build(), new SearchOptions().setLimit(Integer.MAX_VALUE));","128","    assertThat(result.getHits().getHits()).hasSize(SearchOptions.MAX_LIMIT);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":[{"add":["40","  public static final int MAX_PAGE_SIZE = 500;","65","   * Set offset and limit according to page approach","69","    setLimit(pageSize);","72","    setOffset(lastResultIndex - pageSize);","91","    checkArgument(limit > 0 && limit <= MAX_PAGE_SIZE, \"Page size must be between 1 and \" + MAX_PAGE_SIZE + \" (got \" + limit + \")\");","92","    this.limit = limit;"],"delete":["40","  public static final int MAX_LIMIT = 500;","65","   * Set offset and limit according to page approach. If pageSize is negative, then","66","   * {@link #MAX_LIMIT} is used.","72","    setLimit(pageSize);","73","    setOffset((page * this.limit) - this.limit);","92","    if (limit <= 0) {","93","      this.limit = MAX_LIMIT;","94","    } else {","95","      this.limit = Math.min(limit, MAX_LIMIT);","96","    }"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileRuleImplTest.java":[{"add":["709","    int bulkSize = SearchOptions.MAX_PAGE_SIZE + 10 + new Random().nextInt(100);","736","    int bulkSize = SearchOptions.MAX_PAGE_SIZE + 10 + new Random().nextInt(100);"],"delete":["709","    int bulkSize = SearchOptions.MAX_LIMIT + 10 + new Random().nextInt(100);","736","    int bulkSize = SearchOptions.MAX_LIMIT + 10 + new Random().nextInt(100);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/measure\/custom\/ws\/SearchAction.java":[{"add":["46","import static org.sonar.server.es.SearchOptions.MAX_PAGE_SIZE;","76","      .addPagingParams(100, MAX_PAGE_SIZE)"],"delete":["46","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","76","      .addPagingParams(100, MAX_LIMIT)"]}]}},"11321c380539992f43101e2690e53baa2340efa9":{"changes":{"\/dev\/null":"DELETE","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStepTest.java":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStep.java":[{"add":["99","    NewCoverageFormula() {","109","    NewBranchCoverageFormula() {","117","    NewLineCoverageFormula() {","133","    public static Iterable<Formula<NewCoverageCounter>> from(NewLinesRepository newLinesRepository, BatchReportReader reportReader) {","151","    private static int computeValueForMetric(NewCoverageCounter counter, Metric metric) {","186","    NewCoverageCounter(NewLinesRepository newLinesRepository, BatchReportReader reportReader) {"],"delete":["27","import javax.annotation.Nullable;","38","import org.sonar.ce.task.projectanalysis.formula.VariationSumFormula;","74","  @Nullable","76","  @Nullable","79","  \/**","80","   * Constructor used when processing a Report (ie. a {@link NewLinesRepository} instance is available in the container)","81","   *\/","91","  \/**","92","   * Constructor used when processing Views (ie. no {@link NewLinesRepository} instance is available in the container)","93","   *\/","94","  public NewCoverageMeasuresStep(TreeRootHolder treeRootHolder, MeasureRepository measureRepository, MetricRepository metricRepository) {","95","    this.treeRootHolder = treeRootHolder;","96","    this.metricRepository = metricRepository;","97","    this.measureRepository = measureRepository;","98","    this.newLinesRepository = null;","99","    this.reportReader = null;","100","  }","101","","117","    public NewCoverageFormula() {","127","    public NewBranchCoverageFormula() {","135","    public NewLineCoverageFormula() {","145","    private static final Iterable<Formula<?>> VIEWS_FORMULAS = variationSumFormulas();","152","    public static Iterable<Formula<?>> from(@Nullable NewLinesRepository newLinesRepository, @Nullable BatchReportReader reportReader) {","153","      if (newLinesRepository == null || reportReader == null) {","154","        return VIEWS_FORMULAS;","155","      }","159","    private static Iterable<Formula<?>> variationSumFormulas() {","160","      return ImmutableList.of(","161","        new VariationSumFormula(NEW_LINES_TO_COVER_KEY),","162","        new VariationSumFormula(NEW_UNCOVERED_LINES_KEY),","163","        new VariationSumFormula(NEW_CONDITIONS_TO_COVER_KEY),","164","        new VariationSumFormula(NEW_UNCOVERED_CONDITIONS_KEY));","165","    }","166","","181","    private int computeValueForMetric(NewCoverageCounter counter, Metric metric) {","216","    public NewCoverageCounter(NewLinesRepository newLinesRepository, BatchReportReader reportReader) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/NewCoverageMeasuresStepTest.java":[{"add":[],"delete":[]}]}},"03924a62688e3e4510ff0f81e7fa463609fb6fdb":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/request.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/request.js":[{"add":["40","  \/\/ Fetch API in Edge doesn't work with empty header,","41","  \/\/ so we ensure non-empty value","42","  const value = getCSRFTokenValue();","43","  return value ? { [getCSRFTokenName()]: value } : {};"],"delete":["40","  return { [getCSRFTokenName()]: getCSRFTokenValue() };"]}]}},"d662d0c0269e1a12da0c3ecdb8f9d33b765ccdcc":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/AbstractLogHelper.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ListDefinitionsActionTest.java":"MODIFY","server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/qualitymodel\/RatingSettingsTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/user\/SystemPasscodeImpl.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/PauseAction.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationMediumTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/platform\/ComponentContainer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/bootstrap\/GlobalConfigurationProviderTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":"MODIFY","server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/LogbackHelperTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/platform\/UrlSettingsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ResumeAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/InfoAction.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/config\/PropertyDefinitions.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/SettingFormatter.java":"MODIFY","sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/config\/internal\/MapSettings.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueInclusionPatternInitializerTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/startup\/RenameDeprecatedPropertyKeysTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/ProcessProperties.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/config\/PropertyDefinitionsTest.java":"MODIFY","server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueExclusionPatternInitializerTest.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/SettingFormatterTest.java":"MODIFY","server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/GitHubSettingsTest.java":"MODIFY","server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/IntegrationTest.java":"MODIFY","server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlIdentityProviderTest.java":"MODIFY","server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/UserIdentityFactoryImplTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImpl.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImplTest.java":"MODIFY","sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/config\/internal\/MapSettingsTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationDaemonTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogbackHelper.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SettingsUpdaterTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ChildSettingsTest.java":"MODIFY","server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlSettingsTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ResetActionTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/config\/ConfigurationProviderTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":"MODIFY","server\/sonar-auth-gitlab\/src\/test\/java\/org\/sonar\/auth\/gitlab\/GitLabSettingsTest.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogLevelConfig.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/platform\/UrlSettings.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/measure\/live\/LiveMeasureComputerImplTest.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/platform\/monitoring\/SettingsSectionTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":[{"add":["27","import org.sonar.api.config.internal.Encryption;","28","import org.sonar.api.utils.System2;","44","    PropertyDefinitions defs = new PropertyDefinitions(System2.INSTANCE, GenericCoverageSensor.properties());"],"delete":["26","import org.sonar.api.config.internal.Encryption;","43","    PropertyDefinitions defs = new PropertyDefinitions(GenericCoverageSensor.properties());"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/AbstractLogHelper.java":[{"add":[],"delete":["30","  static final String SONAR_LOG_LEVEL_PROPERTY = \"sonar.log.level\";","31","  static final String ROLLING_POLICY_PROPERTY = \"sonar.log.rollingPolicy\";","32","  static final String MAX_FILES_PROPERTY = \"sonar.log.maxFiles\";"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":[{"add":["30","import org.sonar.api.batch.sensor.internal.SensorContextTester;","32","import org.sonar.api.config.internal.Encryption;","33","import org.sonar.api.utils.System2;","60","    PropertyDefinitions defs = new PropertyDefinitions(System2.INSTANCE, GenericTestExecutionSensor.properties());"],"delete":["30","import org.sonar.api.config.internal.Encryption;","37","import org.sonar.api.batch.sensor.internal.SensorContextTester;","59","    PropertyDefinitions defs = new PropertyDefinitions(GenericTestExecutionSensor.properties());"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ListDefinitionsActionTest.java":[{"add":["87","  private PropertyDefinitions propertyDefinitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["87","  private PropertyDefinitions propertyDefinitions = new PropertyDefinitions();"]}],"server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":[{"add":["27","import static org.sonar.process.ProcessProperties.Property.WEB_HOST;","28","import static org.sonar.process.ProcessProperties.Property.WEB_HTTP_ACCEPT_COUNT;","29","import static org.sonar.process.ProcessProperties.Property.WEB_HTTP_MAX_THREADS;","30","import static org.sonar.process.ProcessProperties.Property.WEB_HTTP_MIN_THREADS;","59","    connector.setProperty(\"address\", props.value(WEB_HOST.getKey(), \"0.0.0.0\"));","81","    connector.setProperty(\"minSpareThreads\", String.valueOf(props.valueAsInt(WEB_HTTP_MIN_THREADS.getKey(), 5)));","82","    connector.setProperty(\"maxThreads\", String.valueOf(props.valueAsInt(WEB_HTTP_MAX_THREADS.getKey(), 50)));","83","    connector.setProperty(\"acceptCount\", String.valueOf(props.valueAsInt(WEB_HTTP_ACCEPT_COUNT.getKey(), 25)));"],"delete":["55","    connector.setProperty(\"address\", props.value(\"sonar.web.host\", \"0.0.0.0\"));","77","    connector.setProperty(\"minSpareThreads\", String.valueOf(props.valueAsInt(\"sonar.web.http.minThreads\", 5)));","78","    connector.setProperty(\"maxThreads\", String.valueOf(props.valueAsInt(\"sonar.web.http.maxThreads\", 50)));","79","    connector.setProperty(\"acceptCount\", String.valueOf(props.valueAsInt(\"sonar.web.http.acceptCount\", 25)));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/qualitymodel\/RatingSettingsTest.java":[{"add":["29","import org.sonar.api.utils.System2;","40","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, CorePropertyDefinitions.all()));"],"delete":["39","  private MapSettings settings = new MapSettings(new PropertyDefinitions(CorePropertyDefinitions.all()));"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":[{"add":["30","import org.sonar.process.ProcessProperties;","35","import static org.sonar.process.ProcessProperties.Property.LOG_LEVEL;","36","import static org.sonar.process.ProcessProperties.Property.LOG_MAX_FILES;","37","import static org.sonar.process.ProcessProperties.Property.LOG_ROLLING_POLICY;","76","   * <li>the file will follow the rotation policy defined in property {@link ProcessProperties.Property#LOG_ROLLING_POLICY} and","77","   * the max number of files defined in property {@link org.sonar.process.ProcessProperties.Property#LOG_MAX_FILES}<\/li>","112","    String rollingPolicy = props.value(LOG_ROLLING_POLICY.getKey(), \"time:yyyy-MM-dd\");","113","    int maxFiles = props.valueAsInt(LOG_MAX_FILES.getKey(), 7);","125","      throw new MessageException(format(\"Unsupported value for property %s: %s\", LOG_ROLLING_POLICY.getKey(), rollingPolicy));","134","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, LOG_LEVEL.getKey());"],"delete":["72","   * <li>the file will follow the rotation policy defined in property {@link #ROLLING_POLICY_PROPERTY} and","73","   * the max number of files defined in property {@link #MAX_FILES_PROPERTY}<\/li>","108","    String rollingPolicy = props.value(ROLLING_POLICY_PROPERTY, \"time:yyyy-MM-dd\");","109","    int maxFiles = props.valueAsInt(MAX_FILES_PROPERTY, 7);","121","      throw new MessageException(format(\"Unsupported value for property %s: %s\", ROLLING_POLICY_PROPERTY, rollingPolicy));","130","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, SONAR_LOG_LEVEL_PROPERTY);"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/user\/SystemPasscodeImpl.java":[{"add":["29","import static org.sonar.process.ProcessProperties.Property.WEB_SYSTEM_PASS_CODE;","30","","55","    Optional<String> passcodeOpt = configuration.get(WEB_SYSTEM_PASS_CODE.getKey())"],"delete":["33","  public static final String PASSCODE_CONF_PROPERTY = \"sonar.web.systemPasscode\";","54","    Optional<String> passcodeOpt = configuration.get(PASSCODE_CONF_PROPERTY)"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/PauseAction.java":[{"add":["25","import org.sonar.process.ProcessProperties;","46","        \"system passcode (see \" + ProcessProperties.Property.WEB_SYSTEM_PASS_CODE + \" in sonar.properties).\")"],"delete":["27","import org.sonar.server.user.SystemPasscodeImpl;","46","        \"system passcode (see \" + SystemPasscodeImpl.PASSCODE_CONF_PROPERTY + \" in sonar.properties).\")"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationMediumTest.java":[{"add":["26","import org.sonar.api.config.internal.Settings;","29","import org.sonar.api.utils.System2;","71","    MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"],"delete":["25","import org.sonar.api.config.internal.Settings;","70","    MapSettings settings = new MapSettings(new PropertyDefinitions(NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/platform\/ComponentContainer.java":[{"add":["42","import org.sonar.api.utils.System2;","91","    this(picoContainer, new PropertyDefinitions(System2.INSTANCE));"],"delete":["90","    this(picoContainer, new PropertyDefinitions());"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/bootstrap\/GlobalConfigurationProviderTest.java":[{"add":["28","import org.sonar.api.utils.System2;","55","    GlobalConfiguration globalConfig = new GlobalConfigurationProvider().provide(globalServerSettings, scannerProps, new PropertyDefinitions(System2.INSTANCE));"],"delete":["36","  public static final String SOME_VALUE = \"some_value\";","55","    GlobalConfiguration globalConfig = new GlobalConfigurationProvider().provide(globalServerSettings, scannerProps, new PropertyDefinitions());"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":[{"add":["91","  private PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["91","  private PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/LogbackHelperTest.java":[{"add":["504","    assertThat(((LogbackJsonLayout) layout).getProcessKey()).isEqualTo(\"web\");","533","  @Test","534","  public void log_to_console_setting_missing() {","535","    assertThat(underTest.isAllLogsToConsoleEnabled(new Props(new Properties()))).isFalse();","536","  }","537","","538","  @Test","539","  public void log_to_console_setting_enabled() {","540","    Properties properties = new Properties();","541","    properties.setProperty(\"sonar.log.console\", \"true\");","542","    assertThat(underTest.isAllLogsToConsoleEnabled(new Props(properties))).isTrue();","543","  }","544","","545","  @Test","546","  public void log_to_console_setting_disabled() {","547","    Properties properties = new Properties();","548","    properties.setProperty(\"sonar.log.console\", \"false\");","549","    assertThat(underTest.isAllLogsToConsoleEnabled(new Props(properties))).isFalse();","550","  }","551",""],"delete":["504","    assertThat(((LogbackJsonLayout)layout).getProcessKey()).isEqualTo(\"web\");"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/platform\/UrlSettingsTest.java":[{"add":["26","import org.sonar.api.utils.System2;","41","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, CorePropertyDefinitions.all()));"],"delete":["40","  private MapSettings settings = new MapSettings(new PropertyDefinitions(CorePropertyDefinitions.all()));"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ResumeAction.java":[{"add":["25","import org.sonar.process.ProcessProperties;","46","        \"system passcode (see \" + ProcessProperties.Property.WEB_SYSTEM_PASS_CODE + \" in sonar.properties).\")"],"delete":["27","import org.sonar.server.user.SystemPasscodeImpl;","46","        \"system passcode (see \" + SystemPasscodeImpl.PASSCODE_CONF_PROPERTY + \" in sonar.properties).\")"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/InfoAction.java":[{"add":["25","import org.sonar.process.ProcessProperties;","48","        \"system passcode (see \" + ProcessProperties.Property.WEB_SYSTEM_PASS_CODE + \" in sonar.properties).\")"],"delete":["27","import org.sonar.server.user.SystemPasscodeImpl;","48","        \"system passcode (see \" + SystemPasscodeImpl.PASSCODE_CONF_PROPERTY + \" in sonar.properties).\")"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/config\/PropertyDefinitions.java":[{"add":["25","import java.util.Locale;","27","import java.util.Optional;","35","import org.sonar.api.scanner.ScannerSide;","38","import org.sonar.api.utils.System2;","41","import static java.util.Optional.ofNullable;","54","  private final Map<String, String> propertyValueFromEnvironment = new HashMap<>();","61","  private final System2 system;","62","","63","  public PropertyDefinitions(System2 system, Object... components) {","64","    this.system = system;","68","  public PropertyDefinitions(System2 system, Collection<PropertyDefinition> components) {","69","    this.system = system;","119","      String envVar = definition.key().toUpperCase(Locale.ENGLISH).replace('.', '_').replace('-', '_');","120","      ofNullable(system.envVariable(envVar)).ifPresent(value -> propertyValueFromEnvironment.put(definition.key(), value));","137","  public Optional<String> getValueFromEnv(String key) {","138","    return ofNullable(propertyValueFromEnvironment.get(key));","139","  }","140","","141","  public Map<String, String> getAllPropertiesSetInEnv() {","142","    return new HashMap<>(propertyValueFromEnvironment);","143","  }","144",""],"delete":["32","import org.sonar.api.scanner.ScannerSide;","56","  public PropertyDefinitions(Object... components) {","60","  public PropertyDefinitions(Collection<PropertyDefinition> components) {"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/SettingFormatter.java":[{"add":["22","import org.apache.commons.lang.StringUtils;","23","","24","import static org.apache.commons.lang.StringUtils.trim;","34","","35","  \/**","36","   * Value is split and trimmed.","37","   *\/","38","  public static String[] getStringArrayBySeparator(String value, String separator) {","39","    String[] strings = StringUtils.splitByWholeSeparator(value, separator);","40","    String[] result = new String[strings.length];","41","    for (int index = 0; index < strings.length; index++) {","42","      result[index] = trim(strings[index]);","43","    }","44","    return result;","45","  }"],"delete":[]}],"sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/config\/internal\/MapSettings.java":[{"add":["26","import org.sonar.api.utils.System2;","45","    this(new PropertyDefinitions(System2.INSTANCE));"],"delete":["44","    this(new PropertyDefinitions());"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueInclusionPatternInitializerTest.java":[{"add":["25","import org.sonar.api.utils.System2;","37","    settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, IssueExclusionProperties.all()));"],"delete":["36","    settings = new MapSettings(new PropertyDefinitions(IssueExclusionProperties.all()));"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/startup\/RenameDeprecatedPropertyKeysTest.java":[{"add":["25","import org.sonar.api.utils.System2;","28","import static org.mockito.Mockito.mock;","29","import static org.mockito.Mockito.verify;","30","import static org.mockito.Mockito.verifyNoMoreInteractions;","36","    PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE, FakeExtension.class);"],"delete":["27","import static org.mockito.Mockito.*;","33","    PropertyDefinitions definitions = new PropertyDefinitions(FakeExtension.class);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":[{"add":["32","import org.sonar.api.config.internal.Encryption;","62","  public ThreadLocalSettings(PropertyDefinitions definitions, Properties props) {","63","    this(definitions, props, new NopSettingLoader());","67","  ThreadLocalSettings(PropertyDefinitions definitions, Properties props, SettingLoader settingLoader) {","98","    Optional<String> envVal = getDefinitions().getValueFromEnv(key);","99","    if (envVal.isPresent()) {","100","      return envVal;","174","    getDefinitions().getAllPropertiesSetInEnv().forEach(result::put);"],"delete":["22","import java.util.AbstractMap;","29","import java.util.stream.Collectors;","30","import java.util.stream.Stream;","34","import org.sonar.api.config.internal.Encryption;","35","import org.sonar.api.config.PropertyDefinition;","39","import org.sonar.api.utils.System2;","40","import org.sonar.core.util.SettingFormatter;","63","  private final Properties corePropsFromEnvVariables = new Properties();","68","  private System2 system2;","70","  public ThreadLocalSettings(System2 system2, PropertyDefinitions definitions, Properties props) {","71","    this(system2, definitions, props, new NopSettingLoader());","75","  ThreadLocalSettings(System2 system2, PropertyDefinitions definitions, Properties props, SettingLoader settingLoader) {","77","    this.system2 = system2;","79","","80","    resolveCorePropertiesFromEnvironment();","109","    value = corePropsFromEnvVariables.getProperty(key);","110","    if (value != null) {","111","      return Optional.of(value);","185","    corePropsFromEnvVariables.forEach((k, v) -> result.put((String) k, (String) v));","199","","200","  private void resolveCorePropertiesFromEnvironment() {","201","    corePropsFromEnvVariables.putAll(this.getDefinitions().getAll()","202","      .stream()","203","      .map(PropertyDefinition::key)","204","      .flatMap(p -> {","205","        String envVar = SettingFormatter.fromJavaPropertyToEnvVariable(p);","206","        String envVarValue = system2.envVariable(envVar);","207","        if (envVarValue != null) {","208","          return Stream.of(new AbstractMap.SimpleEntry<>(p, envVarValue));","209","        } else {","210","          return Stream.empty();","211","        }","212","      })","213","      .collect(Collectors.toMap(AbstractMap.SimpleEntry::getKey, AbstractMap.SimpleEntry::getValue)));","214","  }"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":[{"add":["25","import org.sonar.process.ProcessProperties;","31","import static org.sonar.process.ProcessProperties.Property.LOG_CONSOLE;","56","   * App's System.out. This is specified by the value of property {@link ProcessProperties.Property#LOG_CONSOLE}.","59","    return props.valueAsBoolean(LOG_CONSOLE.getKey(), false);"],"delete":["33","  private static final String ALL_LOGS_TO_CONSOLE_PROPERTY = \"sonar.log.console\";","53","","56","   * App's System.out. This is specified by the value of property {@link #ALL_LOGS_TO_CONSOLE_PROPERTY}.","59","    return props.valueAsBoolean(ALL_LOGS_TO_CONSOLE_PROPERTY, false);"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/ProcessProperties.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","65","    LOG_LEVEL(\"sonar.log.level\"),","70","    LOG_ROLLING_POLICY(\"sonar.log.rollingPolicy\"),","71","    LOG_MAX_FILES(\"sonar.log.maxFiles\"),","72","    LOG_CONSOLE(\"sonar.log.console\"),","83","    WEB_HOST(\"sonar.web.host\"),","86","    WEB_CONTEXT(\"sonar.web.context\"),","89","    WEB_HTTP_MIN_THREADS(\"sonar.web.http.minThreads\"),","90","    WEB_HTTP_MAX_THREADS(\"sonar.web.http.maxThreads\"),","91","    WEB_HTTP_ACCEPT_COUNT(\"sonar.web.http.acceptCount\"),","92","    WEB_SESSION_TIMEOUT_IN_MIN(\"sonar.web.sessionTimeoutInMinutes\"),","93","    WEB_SYSTEM_PASS_CODE(\"sonar.web.systemPasscode\"),","94","    WEB_ACCESSLOGS_ENABLE(\"sonar.web.accessLogs.enable\"),","95","    WEB_ACCESSLOGS_PATTERN(\"sonar.web.accessLogs.pattern\"),","108","    HTTP_AUTH_NTLM_DOMAIN(\"http.auth.ntlm.domain\"),","132","    LDAP_SERVERS(\"ldap.servers\"),","133","    LDAP_URL(\"ldap.url\"),","134","    LDAP_BIND_DN(\"ldap.bindDn\"),","135","    LDAP_BIND_PASSWORD(\"ldap.bindPassword\"),","136","    LDAP_AUTHENTICATION(\"ldap.authentication\"),","137","    LDAP_REALM(\"ldap.realm\"),","138","    LDAP_CONTEXT_FACTORY_CLASS(\"ldap.contextFactoryClass\"),","139","    LDAP_START_TLS(\"ldap.StartTLS\"),","140","    LDAP_FOLLOW_REFERRALS(\"ldap.followReferrals\"),","141","    LDAP_USER_BASE_DN(\"ldap.user.baseDn\"),","142","    LDAP_USER_REQUEST(\"ldap.user.request\"),","143","    LDAP_USER_REAL_NAME_ATTRIBUTE(\"ldap.user.realNameAttribute\"),","144","    LDAP_USER_EMAIL_ATTRIBUTE(\"ldap.user.emailAttribute\"),","145","    LDAP_GROUP_BASE_DN(\"ldap.group.baseDn\"),","146","    LDAP_GROUP_REQUEST(\"ldap.group.request\"),","147","    LDAP_GROUP_ID_ATTRIBUTE(\"ldap.group.idAttribute\"),","148","","169","    \/**","170","     * Properties that are defined for each LDAP server from the `ldap.servers` property","171","     *\/","172","    public static final Set<String> MULTI_SERVER_LDAP_SETTINGS = ImmutableSet.of(","173","      \"ldap.*.url\",","174","      \"ldap.*.bindDn\",","175","      \"ldap.*.bindPassword\",","176","      \"ldap.*.authentication\",","177","      \"ldap.*.realm\",","178","      \"ldap.*.contextFactoryClass\",","179","      \"ldap.*.StartTLS\",","180","      \"ldap.*.followReferrals\",","181","      \"ldap.*.user.baseDn\",","182","      \"ldap.*.user.request\",","183","      \"ldap.*.user.realNameAttribute\",","184","      \"ldap.*.user.emailAttribute\",","185","      \"ldap.*.group.baseDn\",","186","      \"ldap.*.group.request\",","187","      \"ldap.*.group.idAttribute\");","188",""],"delete":["94","    HTTP_AUTH_NLM_DOMAN(\"http.auth.ntlm.domain\"),"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/config\/PropertyDefinitionsTest.java":[{"add":["21","import com.google.common.collect.ImmutableMap;","33","import org.sonar.api.utils.System2;","37","import static org.mockito.Mockito.mock;","38","import static org.mockito.Mockito.when;","50","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, list);","57","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","67","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, new PluginWithProperty(), new PluginWithProperties());","74","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, PluginWithProperty.class, PluginWithProperties.class);","81","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","91","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, Categories.class);","99","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE);","109","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE);","117","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE);","129","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","148","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE,","161","    PropertyDefinitions def = new PropertyDefinitions(System2.INSTANCE, ByCategory.class);","182","    PropertyDefinitions underTest = new PropertyDefinitions(System2.INSTANCE);","192","    PropertyDefinitions underTest = new PropertyDefinitions(System2.INSTANCE);","205","    PropertyDefinitions underTest = new PropertyDefinitions(System2.INSTANCE, singletonList(","212","      .describedAs(\"expecting key %s being returned for get(%s)\", key, untrimmedKey)","213","      .isEqualTo(key);","222","  @Test","223","  public void get_value_from_env() {","224","    System2 system = mock(System2.class);","225","    when(system.envVariable(\"FOO\")).thenReturn(\"777\");","226","    when(system.envVariable(\"ONE\")).thenReturn(\"888\");","227","    when(system.envVariable(\"SOME_COMPLETELY_RANDOM_ENV_VAR\")).thenReturn(\"999\");","228","","229","    PropertyDefinitions underTest = new PropertyDefinitions(system, new PluginWithProperty(), new PluginWithProperties());","230","","231","    assertThat(underTest.getValueFromEnv(\"foo\")).hasValue(\"777\");","232","    assertThat(underTest.getValueFromEnv(\"one\")).hasValue(\"888\");","233","    assertThat(underTest.getValueFromEnv(\"two\")).isEmpty();","234","    assertThat(underTest.getValueFromEnv(\"some.unrecognizable.prop\")).isEmpty();","235","  }","236","","237","  @Test","238","  public void get_all_properties_set_in_env() {","239","    System2 system = mock(System2.class);","240","    when(system.envVariable(\"FOO\")).thenReturn(\"777\");","241","    when(system.envVariable(\"ONE\")).thenReturn(\"888\");","242","    when(system.envVariable(\"SOME_COMPLETELY_RANDOM_ENV_VAR\")).thenReturn(\"999\");","243","","244","    PropertyDefinitions underTest = new PropertyDefinitions(system, new PluginWithProperty(), new PluginWithProperties());","245","","246","    assertThat(underTest.getAllPropertiesSetInEnv()).containsExactlyInAnyOrderEntriesOf(ImmutableMap.of(\"foo\", \"777\", \"one\", \"888\"));","247","  }","248",""],"delete":["46","    PropertyDefinitions def = new PropertyDefinitions(list);","53","    PropertyDefinitions def = new PropertyDefinitions(","63","    PropertyDefinitions def = new PropertyDefinitions(new PluginWithProperty(), new PluginWithProperties());","70","    PropertyDefinitions def = new PropertyDefinitions(PluginWithProperty.class, PluginWithProperties.class);","77","    PropertyDefinitions def = new PropertyDefinitions(","87","    PropertyDefinitions def = new PropertyDefinitions(Categories.class);","95","    PropertyDefinitions def = new PropertyDefinitions();","105","    PropertyDefinitions def = new PropertyDefinitions();","113","    PropertyDefinitions def = new PropertyDefinitions();","125","    PropertyDefinitions def = new PropertyDefinitions(","144","    PropertyDefinitions def = new PropertyDefinitions(","157","    PropertyDefinitions def = new PropertyDefinitions(ByCategory.class);","178","    PropertyDefinitions underTest = new PropertyDefinitions();","188","    PropertyDefinitions underTest = new PropertyDefinitions();","201","    PropertyDefinitions underTest = new PropertyDefinitions(singletonList(","208","        .describedAs(\"expecting key %s being returned for get(%s)\", key, untrimmedKey)","209","        .isEqualTo(key);"]}],"server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":[{"add":["34","import static org.sonar.process.ProcessProperties.Property.WEB_CONTEXT;","69","    String context = props.value(WEB_CONTEXT.getKey(), \"\");","73","      throw MessageException.of(format(\"Value of '%s' must start with a forward slash: '%s'\", WEB_CONTEXT.getKey(), context));"],"delete":["43","","44","  private static final String PROPERTY_CONTEXT = \"sonar.web.context\";","70","    String context = props.value(PROPERTY_CONTEXT, \"\");","74","      throw MessageException.of(format(\"Value of '%s' must start with a forward slash: '%s'\", PROPERTY_CONTEXT, context));"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/issue\/ignore\/pattern\/IssueExclusionPatternInitializerTest.java":[{"add":["26","import org.sonar.api.utils.System2;","37","    settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, IssueExclusionProperties.all()));"],"delete":["36","    settings = new MapSettings(new PropertyDefinitions(IssueExclusionProperties.all()));"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/SettingFormatterTest.java":[{"add":["32","","33","  @Test","34","  public void test_getStringArrayBySeparator_on_input_with_separator() {","35","    String[] result = SettingFormatter.getStringArrayBySeparator(\" abc, DeF  , ghi\", \",\");","36","    assertThat(result).containsExactly(\"abc\", \"DeF\", \"ghi\");","37","  }","38","","39","  @Test","40","  public void test_getStringArrayBySeparator_on_input_without_separator() {","41","    String[] result = SettingFormatter.getStringArrayBySeparator(\" abc, DeF  , ghi\", \";\");","42","    assertThat(result).containsExactly(\"abc, DeF  , ghi\");","43","  }"],"delete":[]}],"server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/GitHubSettingsTest.java":[{"add":["24","import org.sonar.api.utils.System2;","30","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitHubSettings.definitions()));"],"delete":["29","  private MapSettings settings = new MapSettings(new PropertyDefinitions(GitHubSettings.definitions()));"]}],"server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/IntegrationTest.java":[{"add":["39","import org.sonar.api.utils.System2;","55","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitHubSettings.definitions()));"],"delete":["54","  private MapSettings settings = new MapSettings(new PropertyDefinitions(GitHubSettings.definitions()));"]}],"server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlIdentityProviderTest.java":[{"add":["29","import org.apache.commons.io.IOUtils;","38","import org.sonar.api.utils.System2;","51","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, SamlSettings.definitions()));"],"delete":["34","import org.apache.commons.io.IOUtils;","50","  private MapSettings settings = new MapSettings(new PropertyDefinitions(SamlSettings.definitions()));"]}],"server\/sonar-auth-github\/src\/test\/java\/org\/sonar\/auth\/github\/UserIdentityFactoryImplTest.java":[{"add":["27","import org.sonar.api.utils.System2;","36","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitHubSettings.definitions()));"],"delete":["35","  private MapSettings settings = new MapSettings(new PropertyDefinitions(GitHubSettings.definitions()));"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":[{"add":["35","import org.sonar.api.Property;","73","    underTest = create(system, Collections.emptyMap());","82","    underTest = create(system, ImmutableMap.of(\"foo\", \"bar\"));","91","    underTest = create(system, Collections.emptyMap());","104","    underTest = create(system, Collections.emptyMap());","123","    underTest = create(system, ImmutableMap.of(\"foo\", \"from_system\"));","133","    underTest = create(system, ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", secretKey.getAbsolutePath()));","140","    underTest = create(system, ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", \"unknown\/path\/to\/sonar-secret.txt\"));","145","  private ThreadLocalSettings create(System2 system, Map<String, String> systemProps) {","146","    PropertyDefinitions definitions = new PropertyDefinitions(system);","147","    definitions.addComponents(CorePropertyDefinitions.all());","148","    definitions.addComponent(new AnnotatedTestClass());","149","","152","    return new ThreadLocalSettings(definitions, p, dbSettingLoader);","157","    underTest = create(system, ImmutableMap.of(\"foo\", \"1\", \"bar\", \"2\"));","167","    when(system.envVariable(\"SONAR_ANNOTATION_TEST_PROP\")).thenReturn(\"113\");","168","    underTest = create(system, ImmutableMap.of());","171","    assertThat(underTest.get(\"sonar.annotation.test.prop\")).hasValue(\"113\");","173","    assertThat(underTest.getProperties()).containsOnly(entry(\"sonar.forceAuthentication\", \"true\"), entry(\"sonar.annotation.test.prop\", \"113\"));","179","    underTest = create(system, Collections.emptyMap());","191","    underTest = create(system, ImmutableMap.of(\"foo\", \"from system\"));","200","    underTest = create(system, ImmutableMap.of(\"system\", \"from system\"));","208","    underTest = create(system, Collections.emptyMap());","228","    underTest = create(system, Collections.emptyMap());","248","    underTest = create(system, emptyMap());","259","    underTest = create(system, Collections.emptyMap());","272","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties());","283","    underTest = create(system, Collections.emptyMap());","295","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","306","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","325","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","349","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","360","    underTest = new ThreadLocalSettings(new PropertyDefinitions(system), new Properties(), settingLoaderMock);","426","","427","  @org.sonar.api.Properties({","428","    @Property(","429","      key = \"sonar.annotation.test.prop\",","430","      defaultValue = \"60\",","431","      name = \"Test annotation property\",","432","      global = false)","433","  })","434","  class AnnotatedTestClass {","435","  }"],"delete":["72","    underTest = create(Collections.emptyMap());","81","    underTest = create(ImmutableMap.of(\"foo\", \"bar\"));","90","    underTest = create(Collections.emptyMap());","103","    underTest = create(Collections.emptyMap());","122","    underTest = create(ImmutableMap.of(\"foo\", \"from_system\"));","132","    underTest = create(ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", secretKey.getAbsolutePath()));","139","    underTest = create(ImmutableMap.of(\"foo\", \"bar\", \"sonar.secretKeyPath\", \"unknown\/path\/to\/sonar-secret.txt\"));","144","  private ThreadLocalSettings create(Map<String, String> systemProps) {","147","    return new ThreadLocalSettings(system, new PropertyDefinitions(CorePropertyDefinitions.all()), p, dbSettingLoader);","152","    underTest = create(ImmutableMap.of(\"foo\", \"1\", \"bar\", \"2\"));","162","    underTest = create(ImmutableMap.of());","166","    assertThat(underTest.getProperties()).containsOnly(entry(\"sonar.forceAuthentication\", \"true\"));","172","    underTest = create(Collections.emptyMap());","184","    underTest = create(ImmutableMap.of(\"foo\", \"from system\"));","193","    underTest = create(ImmutableMap.of(\"system\", \"from system\"));","201","    underTest = create(Collections.emptyMap());","221","    underTest = create(Collections.emptyMap());","241","    underTest = create(emptyMap());","252","    underTest = create(Collections.emptyMap());","265","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties());","276","    underTest = create(Collections.emptyMap());","288","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","299","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","318","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","342","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);","353","    underTest = new ThreadLocalSettings(system, new PropertyDefinitions(), new Properties(), settingLoaderMock);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":[{"add":["93","  private PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["93","  private PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImpl.java":[{"add":["27","import java.util.HashSet;","35","import org.sonar.core.util.SettingFormatter;","43","import static java.util.Arrays.stream;","46","import static org.sonar.process.ProcessProperties.Property.LDAP_SERVERS;","47","import static org.sonar.process.ProcessProperties.Property.MULTI_SERVER_LDAP_SETTINGS;","79","    Set<String> keysOverridableFromEnv = stream(ProcessProperties.Property.values()).map(ProcessProperties.Property::getKey)","80","      .collect(Collectors.toSet());","81","    keysOverridableFromEnv.addAll(p.stringPropertyNames());","82","","83","    \/\/ 1st pass to load static properties","84","    Props staticProps = reloadProperties(keysOverridableFromEnv, p);","85","    keysOverridableFromEnv.addAll(getDynamicPropertiesKeys(staticProps));","86","","87","    \/\/ 2nd pass to load dynamic properties like `ldap.*.url` or `ldap.*.baseDn` which keys depend on values of static","88","    \/\/ properties loaded in 1st step","89","    Props props = reloadProperties(keysOverridableFromEnv, p);","90","","91","    new ProcessProperties(serviceLoaderWrapper).completeDefaults(props);","92","    stream(consumers).forEach(c -> c.accept(props));","93","    return new AppSettingsImpl(props);","94","  }","95","","96","  private static Set<String> getDynamicPropertiesKeys(Props p) {","97","    Set<String> dynamicPropertiesKeys = new HashSet<>();","98","    String ldapServersValue = p.value(LDAP_SERVERS.getKey());","99","    if (ldapServersValue != null) {","100","      stream(SettingFormatter.getStringArrayBySeparator(ldapServersValue, \",\")).forEach(","101","        ldapServer -> MULTI_SERVER_LDAP_SETTINGS.forEach(","102","          multiLdapSetting -> dynamicPropertiesKeys.add(multiLdapSetting.replace(\"*\", ldapServer))));","103","    }","104","","105","    return dynamicPropertiesKeys;","106","  }","107","","108","  private Props reloadProperties(Set<String> keysOverridableFromEnv, Properties p) {","109","    loadPropertiesFromEnvironment(system, p, keysOverridableFromEnv);","117","    return new Props(p);","120","  private static void loadPropertiesFromEnvironment(System2 system, Properties properties, Set<String> overridableSettings) {","121","    overridableSettings.forEach(key -> {"],"delete":["27","import java.util.Arrays;","75","    fetchSettingsFromEnvironment(system, p);","83","    Props props = new Props(p);","84","    new ProcessProperties(serviceLoaderWrapper).completeDefaults(props);","85","    Arrays.stream(consumers).forEach(c -> c.accept(props));","86","","87","    return new AppSettingsImpl(props);","90","  private static void fetchSettingsFromEnvironment(System2 system, Properties properties) {","91","    Set<String> possibleSettings = Arrays.stream(ProcessProperties.Property.values()).map(ProcessProperties.Property::getKey)","92","      .collect(Collectors.toSet());","93","    possibleSettings.addAll(properties.stringPropertyNames());","94","    possibleSettings.forEach(key -> {"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/config\/AppSettingsLoaderImplTest.java":[{"add":["90","  public void load_multi_ldap_settings() throws IOException {","91","    when(system.getenv()).thenReturn(ImmutableMap.of(","92","      \"LDAP_FOO_URL\", \"url1\",","93","      \"LDAP_RANDOM_PROP\", \"5\"));","94","    when(system.getenv(\"LDAP_FOO_URL\")).thenReturn(\"url1\");","95","    when(system.getenv(\"LDAP_RANDOM_PROP\")).thenReturn(\"5\");","96","    File homeDir = temp.newFolder();","97","    File propsFile = new File(homeDir, \"conf\/sonar.properties\");","98","    FileUtils.write(propsFile, \"ldap.servers=foo,bar\\n\" +","99","      \"ldap.bar.url=url2\", UTF_8);","100","    AppSettingsLoaderImpl underTest = new AppSettingsLoaderImpl(system, new String[0], homeDir, serviceLoaderWrapper);","101","","102","    AppSettings settings = underTest.load();","103","","104","    assertThat(settings.getProps().rawProperties()).contains(","105","      entry(\"ldap.servers\", \"foo,bar\"),","106","      entry(\"ldap.foo.url\", \"url1\"),","107","      entry(\"ldap.bar.url\", \"url2\"));","108","  }","109","","110","  @Test"],"delete":[]}],"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/config\/internal\/MapSettingsTest.java":[{"add":["43","import org.sonar.api.utils.System2;","78","    definitions = new PropertyDefinitions(System2.INSTANCE);","132","    Settings underTest = new MapSettings(new PropertyDefinitions(System2.INSTANCE, singletonList(PropertyDefinition.builder(key).multiValues(true).build())));","163","    Settings underTest = new MapSettings(new PropertyDefinitions(System2.INSTANCE, singletonList(PropertyDefinition.builder(key).multiValues(true).build())));"],"delete":["77","    definitions = new PropertyDefinitions();","131","    Settings underTest = new MapSettings(new PropertyDefinitions(singletonList(PropertyDefinition.builder(key).multiValues(true).build())));","162","    Settings underTest = new MapSettings(new PropertyDefinitions(singletonList(PropertyDefinition.builder(key).multiValues(true).build())));"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationDaemonTest.java":[{"add":["30","import org.sonar.api.utils.System2;","46","    MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"],"delete":["45","    MapSettings settings = new MapSettings(new PropertyDefinitions(NotificationDaemon.class)).setProperty(\"sonar.notifications.delay\", 1L);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":[{"add":["25","import org.sonar.api.utils.System2;","46","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, PurgeProperties.all()));"],"delete":["23","import org.sonar.api.CoreProperties;","36","import static org.mockito.ArgumentMatchers.anyLong;","38","import static org.mockito.Mockito.never;","48","  private MapSettings settings = new MapSettings(new PropertyDefinitions(PurgeProperties.all()));"]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogbackHelper.java":[{"add":["49","import org.sonar.process.ProcessProperties;","54","import static org.sonar.process.ProcessProperties.Property.LOG_CONSOLE;","55","import static org.sonar.process.ProcessProperties.Property.LOG_LEVEL;","56","import static org.sonar.process.ProcessProperties.Property.LOG_MAX_FILES;","57","import static org.sonar.process.ProcessProperties.Property.LOG_ROLLING_POLICY;","124","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, LOG_LEVEL.getKey());","175","   * <li>the file will follow the rotation policy defined in property {@link ProcessProperties.Property#LOG_ROLLING_POLICY} and","176","   * the max number of files defined in property {@link org.sonar.process.ProcessProperties.Property#LOG_MAX_FILES}<\/li>","210","   * App's System.out. This is specified by the value of property {@link ProcessProperties.Property#LOG_CONSOLE}.","213","    return props.valueAsBoolean(LOG_CONSOLE.getKey(), false);","247","    String rollingPolicy = props.value(LOG_ROLLING_POLICY.getKey(), \"time:yyyy-MM-dd\");","248","    int maxFiles = props.valueAsInt(LOG_MAX_FILES.getKey(), 7);","261","      throw new MessageException(format(\"Unsupported value for property %s: %s\", LOG_ROLLING_POLICY.getKey(), rollingPolicy));"],"delete":["60","  private static final String ALL_LOGS_TO_CONSOLE_PROPERTY = \"sonar.log.console\";","120","    Level propertyValueAsLevel = getPropertyValueAsLevel(props, SONAR_LOG_LEVEL_PROPERTY);","171","   * <li>the file will follow the rotation policy defined in property {@link #ROLLING_POLICY_PROPERTY} and","172","   * the max number of files defined in property {@link #MAX_FILES_PROPERTY}<\/li>","206","   * App's System.out. This is specified by the value of property {@link #ALL_LOGS_TO_CONSOLE_PROPERTY}.","209","    return props.valueAsBoolean(ALL_LOGS_TO_CONSOLE_PROPERTY, false);","243","    String rollingPolicy = props.value(ROLLING_POLICY_PROPERTY, \"time:yyyy-MM-dd\");","244","    int maxFiles = props.valueAsInt(MAX_FILES_PROPERTY, 7);","257","      throw new MessageException(format(\"Unsupported value for property %s: %s\", ROLLING_POLICY_PROPERTY, rollingPolicy));"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SettingsUpdaterTest.java":[{"add":["61","  PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["61","  PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/setting\/ChildSettingsTest.java":[{"add":["31","import org.sonar.api.utils.System2;","49","    MapSettings parent = new MapSettings(new PropertyDefinitions(System2.INSTANCE, Collections.singletonList(multipleValues)));"],"delete":["48","    MapSettings parent = new MapSettings(new PropertyDefinitions(Collections.singletonList(multipleValues)));"]}],"server\/sonar-auth-saml\/src\/test\/java\/org\/sonar\/auth\/saml\/SamlSettingsTest.java":[{"add":["30","import org.sonar.api.utils.System2;","40","  private MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, SamlSettings.definitions()));"],"delete":["39","  private MapSettings settings = new MapSettings(new PropertyDefinitions(SamlSettings.definitions()));"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":[{"add":["29","import org.sonar.api.config.internal.Encryption;","30","import org.sonar.api.utils.System2;","34","import static java.util.Collections.singletonList;","45","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, Arrays.asList(","72","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, Arrays.asList(","91","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, Arrays.asList(","118","    assertThat(getStringArray(\"  \\\" , ,, \\\", a\\n,b\\n\")).containsExactly(\" , ,, \", \"a\", \"b\");","131","    return new DefaultConfiguration(new PropertyDefinitions(System2.INSTANCE, singletonList("],"delete":["26","import org.sonar.api.config.internal.Encryption;","43","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(Arrays.asList(","70","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(Arrays.asList(","89","    Configuration config = new DefaultConfiguration(new PropertyDefinitions(Arrays.asList(","116","    assertThat(getStringArray(\"  \\\" , ,, \\\", a\\n,b\\n\")).containsExactly(\" , ,, \", \"a\",\"b\");","129","    return new DefaultConfiguration(new PropertyDefinitions(Arrays.asList("]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ResetActionTest.java":[{"add":["83","  private PropertyDefinitions definitions = new PropertyDefinitions(System2.INSTANCE);"],"delete":["83","  private PropertyDefinitions definitions = new PropertyDefinitions();"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/config\/ConfigurationProviderTest.java":[{"add":["30","import org.sonar.api.utils.System2;","41","  private final MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE,"],"delete":["40","  private final MapSettings settings = new MapSettings(new PropertyDefinitions("]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":[{"add":["41","import static org.sonar.process.ProcessProperties.Property.HTTP_AUTH_NTLM_DOMAIN;","67","    HTTP_AUTH_NTLM_DOMAIN.getKey(),"],"delete":["41","import static org.sonar.process.ProcessProperties.Property.HTTP_AUTH_NLM_DOMAN;","67","    HTTP_AUTH_NLM_DOMAN.getKey(),"]}],"server\/sonar-auth-gitlab\/src\/test\/java\/org\/sonar\/auth\/gitlab\/GitLabSettingsTest.java":[{"add":["27","import org.sonar.api.utils.System2;","47","    settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, GitLabSettings.definitions()));"],"delete":["46","    settings = new MapSettings(new PropertyDefinitions(GitLabSettings.definitions()));","57",""]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/LogLevelConfig.java":[{"add":["34","import static org.sonar.process.ProcessProperties.Property.LOG_LEVEL;","37","  private static final String SONAR_LOG_LEVEL_PROPERTY = LOG_LEVEL.getKey();","39","  private static final String SONAR_PROCESS_LOG_LEVEL_PROPERTY = SONAR_LOG_LEVEL_PROPERTY + \".\" + PROCESS_NAME_PLACEHOLDER;"],"delete":["36","  private static final String SONAR_LOG_LEVEL_PROPERTY = \"sonar.log.level\";","38","  private static final String SONAR_PROCESS_LOG_LEVEL_PROPERTY = \"sonar.log.level.\" + PROCESS_NAME_PLACEHOLDER;"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":[{"add":["42","import static org.sonar.process.ProcessProperties.Property.WEB_SESSION_TIMEOUT_IN_MIN;","176","    int minutes = config.getInt(WEB_SESSION_TIMEOUT_IN_MIN.getKey()).orElse(SESSION_TIMEOUT_DEFAULT_VALUE_IN_MINUTES);","177","    checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s\", WEB_SESSION_TIMEOUT_IN_MIN.getKey(), minutes);","178","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES,","179","      \"Property %s must not be greater than 3 months (%s minutes). Got %s minutes\", WEB_SESSION_TIMEOUT_IN_MIN.getKey(),","180","      MAX_SESSION_TIMEOUT_IN_MINUTES, minutes);"],"delete":["47","","48","  private static final String SESSION_TIMEOUT_IN_MINUTES_PROPERTY = \"sonar.web.sessionTimeoutInMinutes\";","177","    int minutes = config.getInt(SESSION_TIMEOUT_IN_MINUTES_PROPERTY).orElse(SESSION_TIMEOUT_DEFAULT_VALUE_IN_MINUTES);","178","    checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s\", SESSION_TIMEOUT_IN_MINUTES_PROPERTY, minutes);","179","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES, \"Property %s must not be greater than 3 months (%s minutes). Got %s minutes\",","180","      SESSION_TIMEOUT_IN_MINUTES_PROPERTY, MAX_SESSION_TIMEOUT_IN_MINUTES, minutes);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/platform\/UrlSettings.java":[{"add":["29","import static org.sonar.process.ProcessProperties.Property.WEB_CONTEXT;","30","import static org.sonar.process.ProcessProperties.Property.WEB_HOST;","45","    this.contextPath = config.get(WEB_CONTEXT.getKey()).orElse(\"\")","68","    String host = config.get(WEB_HOST.getKey()).orElse(\"\");","70","    String context = config.get(WEB_CONTEXT.getKey()).orElse(\"\");"],"delete":["33","  private static final String PROPERTY_CONTEXT = \"sonar.web.context\";","34","","45","    this.contextPath = config.get(PROPERTY_CONTEXT).orElse(\"\")","68","    String host = config.get(\"sonar.web.host\").orElse(\"\");","70","    String context = config.get(PROPERTY_CONTEXT).orElse(\"\");"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/measure\/live\/LiveMeasureComputerImplTest.java":[{"add":["41","import org.sonar.api.utils.System2;","402","    MapSettings settings = new MapSettings(new PropertyDefinitions(System2.INSTANCE, CorePropertyDefinitions.all()));"],"delete":["401","    MapSettings settings = new MapSettings(new PropertyDefinitions(CorePropertyDefinitions.all()));"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/platform\/monitoring\/SettingsSectionTest.java":[{"add":["26","import org.sonar.api.config.internal.Settings;","27","import org.sonar.api.utils.System2;","39","  private PropertyDefinitions defs = new PropertyDefinitions(System2.INSTANCE, PropertyDefinition.builder(PASSWORD_PROPERTY).type(PropertyType.PASSWORD).build());"],"delete":["25","import org.sonar.api.config.internal.Settings;","38","  private PropertyDefinitions defs = new PropertyDefinitions(PropertyDefinition.builder(PASSWORD_PROPERTY).type(PropertyType.PASSWORD).build());"]}]}},"addaff54eadb44912307a5eca033437ab62be143":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/permission\/PermissionsService.java":"MODIFY","sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/permission\/PermissionsServiceTest.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/permission\/PermissionsService.java":[{"add":["107","  public void bulkApplyTemplate(BulkApplyTemplateWsRequest request) {","108","    call(new PostRequest(path(\"bulk_apply_template\"))","109","      .setParam(PARAM_TEMPLATE_ID, request.getTemplateId())","110","      .setParam(PARAM_TEMPLATE_NAME, request.getTemplateName())","111","      .setParam(\"q\", request.getQuery())","112","      .setParam(PARAM_QUALIFIER, request.getQualifier())","113","    );","114","  }","115",""],"delete":[]}],"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/permission\/PermissionsServiceTest.java":[{"add":["208","  public void bulk_apply_template() {","209","    underTest.bulkApplyTemplate(new BulkApplyTemplateWsRequest()","210","      .setTemplateId(TEMPLATE_ID_VALUE)","211","      .setTemplateName(TEMPLATE_NAME_VALUE)","212","      .setQualifier(QUALIFIER_VALUE)","213","      .setQuery(QUERY_VALUE));","214","","215","    assertThat(serviceTester.getPostParser()).isNull();","216","    PostRequest postRequest = serviceTester.getPostRequest();","217","    serviceTester.assertThat(postRequest)","218","      .hasPath(\"bulk_apply_template\")","219","      .hasParam(PARAM_TEMPLATE_ID, TEMPLATE_ID_VALUE)","220","      .hasParam(PARAM_TEMPLATE_NAME, TEMPLATE_NAME_VALUE)","221","      .hasParam(\"q\", QUERY_VALUE)","222","      .hasParam(PARAM_QUALIFIER, QUALIFIER_VALUE)","223","      .andNoOtherParam();","224","  }","225","","226","  @Test"],"delete":[]}]}},"ad082b3d7b15c604eabe253087d9c1a33464f637":{"changes":{"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2Test.java":"ADD","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMembershipMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualitygate\/QualityGateConditionMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateConditionDaoTest.java":"MODIFY","sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2Test.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMembershipMapper.xml":[{"add":["59","    ORDER BY u.login, g.name, g.created_at","74","    ORDER BY u.login, g.name, g.created_at"],"delete":["59","    ORDER BY u.login, g.name, g.id","74","    ORDER BY u.login, g.name, g.id"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualitygate\/QualityGateConditionMapper.xml":[{"add":["19","    order by created_at asc"],"delete":["19","    order by id asc"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDaoTest.java":[{"add":["58","    PermissionTemplateCharacteristicDto templatePermission3 = underTest.insert(dbSession, new PermissionTemplateCharacteristicDto()","59","      .setPermission(UserRole.USER)","60","      .setTemplateId(3L)","61","      .setWithProjectCreator(false)","62","      .setCreatedAt(1_000_000_001L)","63","      .setUpdatedAt(2_000_000_000L));","71","    List<PermissionTemplateCharacteristicDto> result = underTest.selectByTemplateIds(dbSession, newArrayList(1L, 2L, 3L));","73","      .hasSize(3)","76","      .containsExactly(templatePermission1.getId(), templatePermission2.getId(), templatePermission3.getId());"],"delete":["65","    List<PermissionTemplateCharacteristicDto> result = underTest.selectByTemplateIds(dbSession, newArrayList(1L, 2L));","67","      .hasSize(2)","70","      .containsOnly(templatePermission1.getId(), templatePermission2.getId());"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":[{"add":["37","import org.sonar.api.impl.utils.AlwaysIncreasingSystem2;","64","  private static final long INITIAL_DATE = 1_444_000L;","66","  private AlwaysIncreasingSystem2 system2 = new AlwaysIncreasingSystem2(INITIAL_DATE, 1);","510","    return new Object[][]{","568","    insertProperty(\"key1\", \"value\", null, null);","569","    insertProperty(\"key2\", \"value\", null, null);","570","    insertProperty(\"key3\", \"value\", null, null);","571","","574","      .containsExactly(key);","577","      .containsExactly(key, anotherKey);","580","      .containsExactly(key, anotherKey);","581","","582","    assertThat(underTest.selectGlobalPropertiesByKeys(session, newHashSet(\"key2\", \"key1\", \"key3\")))","583","      .extracting(\"key\")","584","      .containsExactly(\"key1\", \"key2\", \"key3\");","585","","609","      tuple(key, project.getId()),","610","      tuple(key, project2.getId()),","611","      tuple(anotherKey, project2.getId()));","635","      tuple(key, project.getId()),","636","      tuple(key, project2.getId()));","639","      tuple(key, project.getId()),","640","      tuple(key, project2.getId()),","641","      tuple(anotherKey, project2.getId()));","700","      .hasCreatedAt(INITIAL_DATE + 2);","705","      .hasCreatedAt(INITIAL_DATE + 3);","710","      .hasCreatedAt(INITIAL_DATE + 4);","715","      .hasCreatedAt(INITIAL_DATE + 5);","720","      .hasCreatedAt(INITIAL_DATE + 6);","736","      .hasCreatedAt(INITIAL_DATE + 2);","741","      .hasCreatedAt(INITIAL_DATE + 3);","746","      .hasCreatedAt(INITIAL_DATE + 4);","751","      .hasCreatedAt(INITIAL_DATE + 5);","756","      .hasCreatedAt(INITIAL_DATE + 6);","772","      .hasCreatedAt(INITIAL_DATE + 2);","777","      .hasCreatedAt(INITIAL_DATE + 3);","782","      .hasCreatedAt(INITIAL_DATE + 4);","787","      .hasCreatedAt(INITIAL_DATE + 5);","792","      .hasCreatedAt(INITIAL_DATE + 6);","797","  public void saveProperty_deletes_then_inserts_global_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) {","798","    long id = insertProperty(\"global\", oldValue, null, null);","808","      .hasCreatedAt(INITIAL_DATE + 3);","820","  public void saveProperty_deletes_then_inserts_component_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) {","822","    long id = insertProperty(\"global\", oldValue, resourceId, null);","831","      .hasCreatedAt(INITIAL_DATE + 3);","843","  public void saveProperty_deletes_then_inserts_user_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) {","845","    long id = insertProperty(\"global\", oldValue, null, userId);","855","      .hasCreatedAt(INITIAL_DATE + 3);","867","    return new Object[][]{","1098","      .hasCreatedAt(INITIAL_DATE + 2);","1103","      .hasCreatedAt(INITIAL_DATE + 3);","1108","      .hasCreatedAt(INITIAL_DATE + 4);","1113","      .hasCreatedAt(INITIAL_DATE + 5);","1118","      .hasCreatedAt(INITIAL_DATE + 6);","1122","  public void saveGlobalProperties_delete_and_insert_new_value_when_property_exists_in_db() {","1123","    long id = insertProperty(\"to_be_updated\", \"old_value\", null, null);","1134","      .hasCreatedAt(INITIAL_DATE + 3);","1148","  public void renamePropertyKey_updates_global_component_and_user_properties() {","1149","    long id1 = insertProperty(\"foo\", \"bar\", null, null);","1150","    long id2 = insertProperty(\"old_name\", \"doc1\", null, null);","1151","    long id3 = insertProperty(\"old_name\", \"doc2\", 15L, null);","1152","    long id4 = insertProperty(\"old_name\", \"doc3\", 16L, null);","1153","    long id5 = insertProperty(\"old_name\", \"doc4\", null, 100);","1154","    long id6 = insertProperty(\"old_name\", \"doc5\", null, 101);","1163","      .hasCreatedAt(INITIAL_DATE + 2);","1169","      .hasCreatedAt(INITIAL_DATE + 3);","1175","      .hasCreatedAt(INITIAL_DATE + 4);","1181","      .hasCreatedAt(INITIAL_DATE + 5);","1187","      .hasCreatedAt(INITIAL_DATE + 6);","1193","      .hasCreatedAt(INITIAL_DATE + 7);","1197","  public void rename_to_same_key_has_no_effect() {","1198","    long id = insertProperty(\"foo\", \"bar\", null, null);","1201","      .hasCreatedAt(INITIAL_DATE + 2);","1210","      .hasCreatedAt(INITIAL_DATE + 2);"],"delete":["25","import java.sql.SQLException;","38","import org.sonar.api.utils.System2;","56","import static org.mockito.Mockito.mock;","57","import static org.mockito.Mockito.when;","67","  private static final long DATE_1 = 1_555_000L;","68","  private static final long DATE_2 = 1_666_000L;","69","  private static final long DATE_3 = 1_777_000L;","70","  private static final long DATE_4 = 1_888_000L;","71","  private static final long DATE_5 = 1_999_000L;","73","  private System2 system2 = mock(System2.class);","517","    return new Object[][] {","577","      .containsOnly(key);","580","      .containsOnly(key, anotherKey);","583","      .containsOnly(key, anotherKey);","607","        tuple(key, project.getId()),","608","        tuple(key, project2.getId()),","609","        tuple(anotherKey, project2.getId()));","633","        tuple(key, project.getId()),","634","        tuple(key, project2.getId()));","637","        tuple(key, project.getId()),","638","        tuple(key, project2.getId()),","639","        tuple(anotherKey, project2.getId()));","688","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","689","","700","      .hasCreatedAt(DATE_1);","705","      .hasCreatedAt(DATE_2);","710","      .hasCreatedAt(DATE_3);","715","      .hasCreatedAt(DATE_4);","720","      .hasCreatedAt(DATE_5);","725","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","726","","738","      .hasCreatedAt(DATE_1);","743","      .hasCreatedAt(DATE_2);","748","      .hasCreatedAt(DATE_3);","753","      .hasCreatedAt(DATE_4);","758","      .hasCreatedAt(DATE_5);","763","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","764","","776","      .hasCreatedAt(DATE_1);","781","      .hasCreatedAt(DATE_2);","786","      .hasCreatedAt(DATE_3);","791","      .hasCreatedAt(DATE_4);","796","      .hasCreatedAt(DATE_5);","801","  public void saveProperty_deletes_then_inserts_global_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) throws SQLException {","802","    long id = insertProperty(\"global\", oldValue, null, null, DATE_1);","803","    when(system2.now()).thenReturn(DATE_4);","813","      .hasCreatedAt(DATE_4);","825","  public void saveProperty_deletes_then_inserts_component_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) throws SQLException {","827","    long id = insertProperty(\"global\", oldValue, resourceId, null, DATE_1);","828","    when(system2.now()).thenReturn(DATE_4);","834","","838","      .hasCreatedAt(DATE_4);","850","  public void saveProperty_deletes_then_inserts_user_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) throws SQLException {","852","    long id = insertProperty(\"global\", oldValue, null, userId, DATE_1);","853","    when(system2.now()).thenReturn(DATE_4);","863","      .hasCreatedAt(DATE_4);","875","    return new Object[][] {","1095","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","1096","","1108","      .hasCreatedAt(DATE_1);","1113","      .hasCreatedAt(DATE_2);","1118","      .hasCreatedAt(DATE_3);","1123","      .hasCreatedAt(DATE_4);","1128","      .hasCreatedAt(DATE_5);","1132","  public void saveGlobalProperties_delete_and_insert_new_value_when_property_exists_in_db() throws SQLException {","1133","    long id = insertProperty(\"to_be_updated\", \"old_value\", null, null, DATE_1);","1134","    when(system2.now()).thenReturn(DATE_3);","1145","      .hasCreatedAt(DATE_3);","1159","  public void renamePropertyKey_updates_global_component_and_user_properties() throws SQLException {","1160","    long id1 = insertProperty(\"foo\", \"bar\", null, null, DATE_1);","1161","    long id2 = insertProperty(\"old_name\", \"doc1\", null, null, DATE_1);","1162","    long id3 = insertProperty(\"old_name\", \"doc2\", 15L, null, DATE_1);","1163","    long id4 = insertProperty(\"old_name\", \"doc3\", 16L, null, DATE_1);","1164","    long id5 = insertProperty(\"old_name\", \"doc4\", null, 100, DATE_1);","1165","    long id6 = insertProperty(\"old_name\", \"doc5\", null, 101, DATE_1);","1174","      .hasCreatedAt(DATE_1);","1180","      .hasCreatedAt(DATE_1);","1186","      .hasCreatedAt(DATE_1);","1192","      .hasCreatedAt(DATE_1);","1198","      .hasCreatedAt(DATE_1);","1204","      .hasCreatedAt(DATE_1);","1208","  public void rename_to_same_key_has_no_effect() throws SQLException {","1209","    long now = 1_890_999L;","1210","    long id = insertProperty(\"foo\", \"bar\", null, null, now);","1213","      .hasCreatedAt(now);","1222","      .hasCreatedAt(now);","1253","  private long insertProperty(String key, @Nullable String value, @Nullable Long resourceId, @Nullable Integer userId, long createdAt) {","1254","    when(system2.now()).thenReturn(createdAt);","1255","    return insertProperty(key, value, resourceId, userId);","1256","  }","1257",""]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicMapper.xml":[{"add":["28","    order by ptc.created_at","37","    order by ptc.created_at"],"delete":["28","    order by id","37","    order by id"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateConditionDaoTest.java":[{"add":["21","import java.util.Collection;","22","import java.util.Comparator;","56","    int qg1Conditions = 2 + new Random().nextInt(5);","58","","62","    Collection<QualityGateConditionDto> conditions = underTest.selectForQualityGate(dbSession, qg1Id);","63","    assertThat(conditions).hasSize(qg1Conditions);","64","    assertThat(conditions)","65","      .extracting(\"id\")","66","      .containsExactly(conditions.stream()","67","        .sorted(Comparator.comparing(QualityGateConditionDto::getCreatedAt))","68","        .map(QualityGateConditionDto::getId).toArray());","69","","70","    conditions = underTest.selectForQualityGate(dbSession, qg2Id);","71","    assertThat(conditions).hasSize(qg2Conditions);","72","    assertThat(conditions)","73","      .extracting(\"id\")","74","      .containsExactly(conditions.stream()","75","        .sorted(Comparator.comparing(QualityGateConditionDto::getCreatedAt))","76","        .map(QualityGateConditionDto::getId)","77","        .toArray());","78",""],"delete":["54","    int qg1Conditions = 1 + new Random().nextInt(5);","59","    assertThat(underTest.selectForQualityGate(dbSession, qg1Id)).hasSize(qg1Conditions);","60","    assertThat(underTest.selectForQualityGate(dbSession, qg2Id)).hasSize(qg2Conditions);"]}],"sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2.java":[{"add":["34","  public TestSystem2 tick() {","35","    throwExceptionIfNowLesserOrEqualZero();","36","    this.now = this.now + 1;","37","    return this;","38","  }","39","","42","    throwExceptionIfNowLesserOrEqualZero();","43","    return now;","44","  }","45","","46","  private void throwExceptionIfNowLesserOrEqualZero() {"],"delete":["39","    return now;"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["301","    ORDER BY LOWER(p.name), p.name, p.created_at"],"delete":["301","    ORDER BY LOWER(p.name), p.name, p.id"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":[{"add":["141","    order by p.created_at"],"delete":["141","    order by p.id"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":[{"add":["64","      ca.created_at desc, id desc","77","    order by created_at desc, id desc","87","        order by ca.created_at desc, ca.id desc"],"delete":["64","      ca.id desc","77","    order by id desc","87","        order by ca.id desc"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":[{"add":["38","import org.junit.Before;","70","  private static final long INITIAL_TIME = 1_450_000_000_000L;","71","","72","  private TestSystem2 system2 = new TestSystem2().setNow(INITIAL_TIME);","80","  @Before","81","  public void setup() {","82","    system2.setNow(INITIAL_TIME);","83","  }","84","","103","    assertThat(dto.getCreatedAt()).isEqualTo(INITIAL_TIME + 1);","451","  public void test_selectByQuery_verify_order_if_same_date() {","452","    system2.setNow(INITIAL_TIME);","453","    insert(\"TASK_1\", REPORT, MAINCOMPONENT_1, SUCCESS);","454","    system2.setNow(INITIAL_TIME);","455","    insert(\"TASK_2\", REPORT, MAINCOMPONENT_1, FAILED);","456","    system2.setNow(INITIAL_TIME);","457","    insert(\"TASK_3\", REPORT, MAINCOMPONENT_2, SUCCESS);","458","    system2.setNow(INITIAL_TIME);","459","    insert(\"TASK_4\", \"views\", null, SUCCESS);","460","","461","    \/\/ no filters","462","    CeTaskQuery query = new CeTaskQuery().setStatuses(Collections.emptyList());","463","    List<CeActivityDto> dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(10));","464","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_4\", \"TASK_3\", \"TASK_2\", \"TASK_1\");","465","","466","    \/\/ select by component uuid","467","    query = new CeTaskQuery().setMainComponentUuid(MAINCOMPONENT_1);","468","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","469","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_2\", \"TASK_1\");","470","","471","    \/\/ select by status","472","    query = new CeTaskQuery().setStatuses(singletonList(SUCCESS.name()));","473","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","474","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_4\", \"TASK_3\", \"TASK_1\");","475","","476","    \/\/ select by type","477","    query = new CeTaskQuery().setType(REPORT);","478","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","479","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_3\", \"TASK_2\", \"TASK_1\");","480","    query = new CeTaskQuery().setType(\"views\");","481","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","482","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_4\");","483","","484","    \/\/ select by multiple conditions","485","    query = new CeTaskQuery().setType(REPORT).setOnlyCurrents(true).setMainComponentUuid(MAINCOMPONENT_1);","486","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","487","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_2\");","488","  }","489","","490","  @Test","756","    system2.tick();","769","    creating.setCreatedAt(system2.now());"],"delete":["69","  private TestSystem2 system2 = new TestSystem2().setNow(1_450_000_000_000L);","95","    assertThat(dto.getCreatedAt()).isEqualTo(1_450_000_000_000L);","720","    creating.setCreatedAt(1_300_000_000_000L);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["28","import java.util.Date;","46","import org.sonar.api.impl.utils.AlwaysIncreasingSystem2;","98","","99","  private System2 system2 = AlwaysIncreasingSystem2.INSTANCE;","100","","102","  public DbTester db = DbTester.create(system2);","235","    return new Object[][]{","336","      .extracting(ComponentDto::getKey, ComponentDto::getBranch)","337","      .containsExactlyInAnyOrder(","338","        tuple(projectBranch.getKey(), \"my_branch\"),","339","        tuple(applicationBranch.getKey(), \"my_branch\"));","343","      .extracting(ComponentDto::getDbKey)","344","      .isEmpty();","769","    return new Object[][]{","998","    return new Object[][]{","1178","  public void selectByQuery_verify_order() {","1179","    OrganizationDto organization = db.organizations().insert();","1180","","1181","    Date firstDate = new Date(system2.now());","1182","    Date secondDate = new Date(system2.now());","1183","    Date thirdDate = new Date(system2.now());","1184","","1185","    ComponentDto project3 = db.components().insertPrivateProject(organization, \"project3\", componentDto -> componentDto.setCreatedAt(thirdDate));","1186","    ComponentDto project1 = db.components().insertPrivateProject(organization, \"project1\", componentDto -> componentDto.setCreatedAt(firstDate));","1187","    ComponentDto project2 = db.components().insertPrivateProject(organization, \"project2\", componentDto -> componentDto.setCreatedAt(secondDate));","1188","","1189","    Supplier<ComponentQuery.Builder> query = () -> ComponentQuery.builder()","1190","      .setQualifiers(PROJECT)","1191","      .setOnProvisionedOnly(true);","1192","","1193","    List<ComponentDto> results = underTest.selectByQuery(dbSession, organization.getUuid(), query.get().build(), 0, 10);","1194","    assertThat(results)","1195","      .extracting(ComponentDto::uuid)","1196","      .containsExactly(","1197","        project1.uuid(),","1198","        project2.uuid(),","1199","        project3.uuid()","1200","      );","1201","    assertThat(results)","1202","      .extracting(ComponentDto::getCreatedAt)","1203","      .containsExactly(","1204","        firstDate,","1205","        secondDate,","1206","        thirdDate","1207","      );","1208","  }","1209","","1210","  @Test"],"delete":["97","  public DbTester db = DbTester.create(System2.INSTANCE);","230","    return new Object[][] {","331","        .extracting(ComponentDto::getKey, ComponentDto::getBranch)","332","        .containsExactlyInAnyOrder(","333","          tuple(projectBranch.getKey(), \"my_branch\"),","334","          tuple(applicationBranch.getKey(), \"my_branch\"));","338","        .extracting(ComponentDto::getDbKey)","339","        .isEmpty();","764","    return new Object[][] {","993","    return new Object[][] {"]}]}},"2c36adcf2180253e3cd6832d6fb454e580a42cd2":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/__snapshots__\/TaskComponent-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/TaskComponent-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskComponent.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/__snapshots__\/TaskComponent-test.tsx.snap":[{"add":["2","exports[`renders correctly 1`] = `","35","exports[`renders correctly 2`] = `","48","exports[`renders correctly for branches and pullrequest 1`] = `","50","  <ShortLivingBranchIcon","52","  \/>","62","        \"pathname\": \"\/project\/issues\",","64","          \"branch\": \"feature\",","66","          \"resolved\": \"false\",","94","","95","exports[`renders correctly for branches and pullrequest 2`] = `","96","<td>","97","  <LongLivingBranchIcon","98","    className=\"little-spacer-right\"","99","  \/>","100","  <Connect(Organization)","101","    organizationKey=\"org\"","102","  \/>","103","  <Link","104","    className=\"spacer-right\"","105","    onlyActiveOnIndex={false}","106","    style={Object {}}","107","    to={","108","      Object {","109","        \"pathname\": \"\/dashboard\",","110","        \"query\": Object {","111","          \"branch\": \"branch-6.7\",","112","          \"id\": \"foo\",","113","        },","114","      }","115","    }","116","  >","117","    foo","118","    <span","119","      className=\"text-limited text-text-top\"","120","      title=\"branch-6.7\"","121","    >","122","      <span","123","        style={","124","          Object {","125","            \"marginLeft\": 5,","126","            \"marginRight\": 5,","127","          }","128","        }","129","      >","130","        \/","131","      <\/span>","132","      branch-6.7","133","    <\/span>","134","  <\/Link>","135","  <TaskType","136","    type=\"REPORT\"","137","  \/>","138","<\/td>","139","`;","140","","141","exports[`renders correctly for branches and pullrequest 3`] = `","142","<td>","143","  <PullRequestIcon","144","    className=\"little-spacer-right\"","145","  \/>","146","  <Connect(Organization)","147","    organizationKey=\"org\"","148","  \/>","149","  <Link","150","    className=\"spacer-right\"","151","    onlyActiveOnIndex={false}","152","    style={Object {}}","153","    to={","154","      Object {","155","        \"pathname\": \"\/project\/issues\",","156","        \"query\": Object {","157","          \"id\": \"foo\",","158","          \"pullRequest\": \"pr-89\",","159","          \"resolved\": \"false\",","160","        },","161","      }","162","    }","163","  >","164","    foo","165","    <Tooltip>","166","      <span","167","        className=\"text-limited text-text-top\"","168","      >","169","        <span","170","          style={","171","            Object {","172","              \"marginLeft\": 5,","173","              \"marginRight\": 5,","174","            }","175","          }","176","        >","177","          \/","178","        <\/span>","179","        pr-89","180","      <\/span>","181","    <\/Tooltip>","182","  <\/Link>","183","  <TaskType","184","    type=\"REPORT\"","185","  \/>","186","<\/td>","187","`;"],"delete":["2","exports[`renders 1`] = `","35","exports[`renders 2`] = `","48","exports[`renders 3`] = `","50","  <span","52","  >","53","    <QualifierIcon","54","      qualifier=\"TRK\"","55","    \/>","56","  <\/span>","66","        \"pathname\": \"\/dashboard\","]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/TaskComponent-test.tsx":[{"add":["23","const TASK = {","24","  componentKey: 'foo',","25","  componentName: 'foo',","26","  componentQualifier: 'TRK',","27","  id: 'bar',","28","  organization: 'org',","29","  status: 'PENDING',","30","  submittedAt: '2017-01-01',","31","  type: 'REPORT'","32","};","33","","34","it('renders correctly', () => {","35","  expect(shallow(<TaskComponent task={TASK} \/>)).toMatchSnapshot();","36","  expect(shallow(<TaskComponent task={{ ...TASK, componentKey: undefined }} \/>)).toMatchSnapshot();","37","});","38","","39","it('renders correctly for branches and pullrequest', () => {","40","  expect(","41","    shallow(<TaskComponent task={{ ...TASK, branch: 'feature', branchType: 'SHORT' }} \/>)","42","  ).toMatchSnapshot();","43","  expect(","44","    shallow(<TaskComponent task={{ ...TASK, branch: 'branch-6.7', branchType: 'LONG' }} \/>)","45","  ).toMatchSnapshot();","46","  expect(shallow(<TaskComponent task={{ ...TASK, pullRequest: 'pr-89' }} \/>)).toMatchSnapshot();"],"delete":["23","it('renders', () => {","24","  const task = {","25","    componentKey: 'foo',","26","    componentName: 'foo',","27","    componentQualifier: 'TRK',","28","    id: 'bar',","29","    organization: 'org',","30","    status: 'PENDING',","31","    submittedAt: '2017-01-01',","32","    type: 'REPORT'","33","  };","34","  expect(shallow(<TaskComponent task={task} \/>)).toMatchSnapshot();","35","  expect(shallow(<TaskComponent task={{ ...task, componentKey: undefined }} \/>)).toMatchSnapshot();","36","  expect(shallow(<TaskComponent task={{ ...task, branch: 'feature' }} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskComponent.tsx":[{"add":["94","  if (task.branch) {","95","    if (task.branchType === 'SHORT') {","96","      return getShortLivingBranchUrl(componentKey, task.branch);","97","    } else if (task.branchType === 'LONG') {","98","      return getLongLivingBranchUrl(componentKey, task.branch);","99","    }","103","  return getProjectUrl(componentKey);"],"delete":["94","  if (task.branch && task.branchType === 'SHORT') {","95","    return getShortLivingBranchUrl(componentKey, task.branchType);","96","  } else if (task.branchType && task.branchType === 'LONG') {","97","    return getLongLivingBranchUrl(componentKey, task.branchType);","100","  } else {","101","    return getProjectUrl(componentKey);"]}]}},"baf8ce1ddc8136eaf3dac8424830b8960991ee21":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizerTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizer.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizerTest.java":[{"add":["43","  @Test","44","  public void isOverLimit() {","45","    assertThat(BlockRecognizer.isOverLimit(20, 40)).isFalse();","46","    assertThat(BlockRecognizer.isOverLimit(3, 100_000)).isTrue();","47","","48","    \/\/ multiplication of these two ints is higher than Integer.MAX_VALUE","49","    assertThat(BlockRecognizer.isOverLimit(50_000, 60_000)).isTrue();","50","  }","51",""],"delete":[]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/tracking\/BlockRecognizer.java":[{"add":["79","    if (isOverLimit(basesByLine.keySet().size(), rawsByLine.keySet().size())) {","99","  static boolean isOverLimit(long a, long b) {","100","    return Math.multiplyExact(a, b) >= 250_000;","101","  }","102",""],"delete":["79","    if (basesByLine.keySet().size() * rawsByLine.keySet().size() >= 250_000) {"]}]}},"3e43924e631f72a35353525e74530f8e66f22ef3":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/App.js":[{"add":["68","    if (this.state.loading) {"],"delete":["68","    const areLanguagesLoading = Object.keys(this.props.languages).length === 0;","69","    if (this.state.loading || areLanguagesLoading) {"]}]}},"93598d6f84ba12c14150f160604605c68b568272":{"changes":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1007_add_index_on_ce_queue_component_uuid.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["707","CREATE INDEX \"CE_QUEUE_COMPONENT_UUID\" ON \"CE_QUEUE\" (\"COMPONENT_UUID\");","708",""],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1007_add_index_on_ce_queue_component_uuid.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 1007;"],"delete":["31","  public static final int LAST_VERSION = 1006;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["369","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1007');"],"delete":[]}]}},"861645c8498ef6b1782fa0b3ad1537d5226f1e41":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/ComponentTreeSortTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/ws\/ComponentTreeSort.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/Metric.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/ws\/ComponentTreeSortTest.java":[{"add":["27","import org.sonar.api.measures.CoreMetrics;","29","import org.sonar.api.resources.Qualifiers;","76","    measuresByComponentUuidAndMetric = HashBasedTable.create(components.size(), 2);","140","  public void sort_by_alert_status_ascending() {","141","    components = newArrayList(","142","      newComponentWithoutSnapshotId(\"PROJECT OK 1\", Qualifiers.PROJECT, \"PROJECT_OK_PATH_1\"),","143","      newComponentWithoutSnapshotId(\"PROJECT WARN 1\", Qualifiers.PROJECT, \"PROJECT_WARN_PATH_1\"),","144","      newComponentWithoutSnapshotId(\"PROJECT ERROR 1\", Qualifiers.PROJECT, \"PROJECT_ERROR_PATH_1\"),","145","      newComponentWithoutSnapshotId(\"PROJECT OK 2\", Qualifiers.PROJECT, \"PROJECT_OK_PATH_2\"),","146","      newComponentWithoutSnapshotId(\"PROJECT WARN 2\", Qualifiers.PROJECT, \"PROJECT_WARN_PATH_2\"),","147","      newComponentWithoutSnapshotId(\"PROJECT ERROR 2\", Qualifiers.PROJECT, \"PROJECT_ERROR_PATH_2\"));","148","    metrics = singletonList(newMetricDto()","149","      .setKey(CoreMetrics.ALERT_STATUS_KEY)","150","      .setValueType(ValueType.LEVEL.name()));","151","    measuresByComponentUuidAndMetric = HashBasedTable.create();","152","    List<String> statuses = newArrayList(\"OK\", \"WARN\", \"ERROR\");","153","    for (int i = 0; i < components.size(); i++) {","154","      ComponentDtoWithSnapshotId component = components.get(i);","155","      String alertStatus = statuses.get(i % 3);","156","      measuresByComponentUuidAndMetric.put(component.uuid(), metrics.get(0), new MeasureDto().setData(alertStatus));","157","    }","158","    ComponentTreeWsRequest wsRequest = newRequest(newArrayList(METRIC_SORT, NAME_SORT), true, CoreMetrics.ALERT_STATUS_KEY);","159","","160","    List<ComponentDtoWithSnapshotId> result = sortComponents(wsRequest);","161","","162","    assertThat(result).extracting(\"name\").containsExactly(","163","      \"PROJECT ERROR 1\", \"PROJECT ERROR 2\",","164","      \"PROJECT WARN 1\", \"PROJECT WARN 2\",","165","      \"PROJECT OK 1\", \"PROJECT OK 2\");","166","  }","167","","168","  @Test"],"delete":["74","    measuresByComponentUuidAndMetric = HashBasedTable.create(components.size(), 1);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/ws\/ComponentTreeSort.java":[{"add":["32","import org.sonar.api.measures.Metric;","62","  private static final Set<ValueType> TEXTUAL_VALUE_TYPES = EnumSet.of(DATA, DISTRIB, STRING);","131","    } else if (ValueType.LEVEL.equals(ValueType.valueOf(metric.getValueType()))) {","132","      return levelMetricOrdering(isAscending, metric, measuresByComponentUuidAndMetric);","176","  private static Ordering<ComponentDtoWithSnapshotId> levelMetricOrdering(boolean isAscending, @Nullable MetricDto metric,","177","    Table<String, MetricDto, MeasureDto> measuresByComponentUuidAndMetric) {","178","    Ordering<Integer> ordering = Ordering.natural();","179","","180","    \/\/ inverse the order of org.sonar.api.measures.Metric.Level","181","    if (isAscending) {","182","      ordering = ordering.reverse();","183","    }","184","","185","    return ordering.nullsLast().onResultOf(new ComponentDtoWithSnapshotIdToLevelIndex(metric, measuresByComponentUuidAndMetric));","186","  }","187","","209","  private static class ComponentDtoWithSnapshotIdToLevelIndex implements Function<ComponentDtoWithSnapshotId, Integer> {","210","    private final MetricDto metric;","211","    private final Table<String, MetricDto, MeasureDto> measuresByComponentUuidAndMetric;","212","","213","    private ComponentDtoWithSnapshotIdToLevelIndex(@Nullable MetricDto metric,","214","      Table<String, MetricDto, MeasureDto> measuresByComponentUuidAndMetric) {","215","      this.metric = metric;","216","      this.measuresByComponentUuidAndMetric = measuresByComponentUuidAndMetric;","217","    }","218","","219","    @Override","220","    public Integer apply(@Nonnull ComponentDtoWithSnapshotId input) {","221","      MeasureDto measure = measuresByComponentUuidAndMetric.get(input.uuid(), metric);","222","      if (measure == null || measure.getData() == null) {","223","        return null;","224","      }","225","","226","      return Metric.Level.names().indexOf(measure.getData());","227","    }","228","  }","229",""],"delete":["47","import static org.sonar.api.measures.Metric.ValueType.LEVEL;","62","  private static final Set<ValueType> TEXTUAL_VALUE_TYPES = EnumSet.of(DATA, DISTRIB, LEVEL, STRING);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/Metric.java":[{"add":["107","    private static final List<String> NAMES = Lists.transform(Arrays.asList(values()), new Function<Level, String>() {","108","      @Nonnull","109","      @Override","110","      public String apply(@Nonnull Level level) {","111","        return level.name();","112","      }","113","    });","114","","126","      return NAMES;"],"delete":["118","      return Lists.transform(Arrays.asList(values()), new Function<Level, String>() {","119","        @Nonnull","120","        @Override","121","        public String apply(@Nonnull Level level) {","122","          return level.name();","123","        }","124","      });"]}]}},"629f228080b114ea57d311e41d3b4c76cb493195":{"changes":{"it\/it-tests\/src\/test\/java\/it\/projectSearch\/SearchProjectsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectsTextSearchQueryFactory.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":"ADD"},"diff":{"it\/it-tests\/src\/test\/java\/it\/projectSearch\/SearchProjectsTest.java":[{"add":["27","import org.sonarqube.ws.Common.FacetValue;","32","import static com.sonar.orchestrator.build.SonarScanner.create;","33","import static java.util.Collections.singletonList;","35","import static org.assertj.core.groups.Tuple.tuple;","57","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-sample\")));","73","  @Test","74","  public void filter_by_text_query() throws IOException {","75","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-sample\"), \"sonar.projectKey\", \"project1\", \"sonar.projectName\", \"apachee\"));","76","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-sample\"), \"sonar.projectKey\", \"project2\", \"sonar.projectName\", \"Apache\"));","77","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-multi-modules-sample\"), \"sonar.projectKey\", \"project3\", \"sonar.projectName\", \"Apache Foundation\"));","78","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-multi-modules-sample\"), \"sonar.projectKey\", \"project4\", \"sonar.projectName\", \"Windows\"));","79","","80","    \/\/ Search only by text query","81","    assertThat(searchProjects(\"query = \\\"apache\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project2\", \"project3\", \"project1\");","82","    assertThat(searchProjects(\"query = \\\"pAch\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project2\", \"project3\", \"project1\");","83","    assertThat(searchProjects(\"query = \\\"hee\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project1\");","84","    assertThat(searchProjects(\"query = \\\"project1\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project1\");","85","    assertThat(searchProjects(\"query = \\\"unknown\\\"\").getComponentsList()).isEmpty();","86","","87","    \/\/ Search by metric criteria and text query","88","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"pAch\\\" AND ncloc > 50\").build()).getComponentsList())","89","      .extracting(Component::getKey).containsExactly(\"project3\");","90","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"nd\\\" AND ncloc > 50\").build()).getComponentsList())","91","      .extracting(Component::getKey).containsExactly(\"project3\", \"project4\");","92","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"unknown\\\" AND ncloc > 50\").build()).getComponentsList()).isEmpty();;","93","","94","    \/\/ Check facets","95","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"apache\\\"\").setFacets(singletonList(\"ncloc\")).build()).getFacets().getFacets(0).getValuesList())","96","      .extracting(FacetValue::getVal, FacetValue::getCount)","97","      .containsOnly(tuple(\"*-1000.0\", 3L), tuple(\"1000.0-10000.0\", 0L), tuple(\"10000.0-100000.0\", 0L), tuple(\"100000.0-500000.0\", 0L), tuple(\"500000.0-*\", 0L));","98","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"unknown\\\"\").setFacets(singletonList(\"ncloc\")).build()).getFacets().getFacets(0)","99","      .getValuesList()).extracting(FacetValue::getVal, FacetValue::getCount)","100","      .containsOnly(tuple(\"*-1000.0\", 0L), tuple(\"1000.0-10000.0\", 0L), tuple(\"10000.0-100000.0\", 0L), tuple(\"100000.0-500000.0\", 0L), tuple(\"500000.0-*\", 0L));","101","  }"],"delete":["22","import com.sonar.orchestrator.build.SonarScanner;","54","    orchestrator.executeBuild(SonarScanner.create(projectDir(\"shared\/xoo-sample\")));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":[{"add":["279","    return Optional.of(ProjectsTextSearchQueryFactory.createQuery(queryText.get()));"],"delete":["49","import org.sonar.server.es.textsearch.ComponentTextSearchFeatureRepertoire;","50","import org.sonar.server.es.textsearch.ComponentTextSearchQueryFactory;","281","    ComponentTextSearchQueryFactory.ComponentTextSearchQuery componentTextSearchQuery = ComponentTextSearchQueryFactory.ComponentTextSearchQuery.builder()","282","      .setQueryText(queryText.get())","283","      .setFieldKey(FIELD_KEY)","284","      .setFieldName(FIELD_NAME)","285","      .build();","286","    return Optional.of(ComponentTextSearchQueryFactory.createQuery(componentTextSearchQuery, ComponentTextSearchFeatureRepertoire.values()));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectsTextSearchQueryFactory.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":[{"add":[],"delete":[]}]}},"b70f2903e70aad17ed54153f11dc0ab7e325e930":{"changes":{"it\/it-tests\/src\/test\/java\/it\/Category4Suite.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/ws\/WsTest.java":"ADD"},"diff":{"it\/it-tests\/src\/test\/java\/it\/Category4Suite.java":[{"add":["44","import it.ws.WsTest;","88","  WsLocalCallTest.class,","89","  WsTest.class"],"delete":["87","  WsLocalCallTest.class"]}],"it\/it-tests\/src\/test\/java\/it\/ws\/WsTest.java":[{"add":[],"delete":[]}]}},"e28694040e6fea5af0e083cb57f2b88adec2e6dd":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":[{"add":["216","    s: 'qualifier,name',"],"delete":[]}]}},"a280429889a21f2f258041caa42264570017c31a":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/IssuesModeTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":"MODIFY","sonar-home\/src\/main\/java\/org\/sonar\/home\/cache\/DirectoryLock.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/ProjectLockTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/filesystem\/FileIndexer.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleanerTest.java":"ADD","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectLock.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleaner.java":"ADD","sonar-home\/src\/test\/java\/org\/sonar\/home\/cache\/DirectoryLockTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/IssuesModeTest.java":[{"add":["397","    \/\/ use same working dir, because lock file is in it","398","    String workDirPath = temp.newFolder().getAbsolutePath();","399","    SonarRunner runner = configureRunner(\"shared\/xoo-sample\",","400","      \"sonar.working.directory\", workDirPath);","401","","404","    runConcurrentIssues(workDirPath);","407","  private void runConcurrentIssues(final String workDirPath) throws Exception {","419","          SonarScanner runner = configureRunnerIssues(\"shared\/xoo-sample\", homeDir,","420","            \"sonar.it.enableWaitingSensor\", \"true\",","421","            \"sonar.working.directory\", workDirPath);"],"delete":["392","  @Ignore","393","  \/\/ Disabled until SONAR-7124 is fixed","399","    SonarRunner runner = configureRunner(\"shared\/xoo-sample\");","402","    runConcurrentIssues();","405","  private void runConcurrentIssues() throws Exception {","417","          SonarScanner runner = configureRunnerIssues(\"shared\/xoo-sample\", homeDir, \"sonar.it.enableWaitingSensor\", \"true\");"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":[{"add":[],"delete":["21","import java.io.File;","22","import java.io.IOException;","25","import org.sonar.core.util.FileUtils;","33","      cleanDirectory(reactor.getRoot().getWorkDir());","37","","38","  private static void cleanDirectory(File dir) {","39","    try {","40","      FileUtils.cleanDirectory(dir);","41","    } catch (IOException e) {","42","      throw new IllegalStateException(\"Failed to recreate working directory: \" + dir.getAbsolutePath(), e);","43","    }","44","  }"]}],"sonar-home\/src\/main\/java\/org\/sonar\/home\/cache\/DirectoryLock.java":[{"add":["28","  public static final String LOCK_FILE_NAME = \".sonar_lock\";"],"delete":["22","import java.io.PrintWriter;","24","import java.io.StringWriter;","27","import java.nio.file.Files;","31","  static final String LOCK_FILE_NAME = \".sonar_lock\";","95","","96","    try {","97","      Files.delete(lockFilePath);","98","    } catch (IOException e) {","99","      \/\/ ignore, as an error happens if another process just started to acquire the same lock","100","      StringWriter errors = new StringWriter();","101","      e.printStackTrace(new PrintWriter(errors));","102","      logger.debug(\"Couldn't delete lock file: \" + lockFilePath.toString() + \" \" + errors.toString());","103","    }"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/ProjectLockTest.java":[{"add":["24","import org.sonar.home.cache.DirectoryLock;","50","","55","    when(projectDefinition.getWorkDir()).thenReturn(file);","62","    Path lockFilePath = tempFolder.getRoot().toPath().resolve(DirectoryLock.LOCK_FILE_NAME);","68","    assertThat(Files.exists(lockFilePath)).isTrue();","78","","96","","98","  public void unLockWithNoLock() {"],"delete":["28","import java.nio.file.Paths;","50","  ","55","    when(projectDefinition.getBaseDir()).thenReturn(file);","62","    Path lockFilePath = tempFolder.getRoot().toPath().resolve(ProjectLock.LOCK_FILE_NAME);","68","    assertThat(Files.exists(lockFilePath)).isFalse();","78","  ","96","  ","98","  public void errorLock() {","99","    lock = setUpTest(Paths.get(\"path\", \"that\", \"wont\", \"exist\", \"ever\").toFile());","100","    exception.expect(IllegalStateException.class);","101","    exception.expectMessage(\"Failed to create lock in\");","102","    lock.tryLock();","103","  }","104","  ","105","  @Test","106","  public void errorDeleteLock() {","107","    lock = setUpTest(Paths.get(\"path\", \"that\", \"wont\", \"exist\", \"ever\").toFile());"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":[{"add":["113","    getComponentByType(WorkDirectoryCleaner.class).execute();","142","      WorkDirectoryCleaner.class,"],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/filesystem\/FileIndexer.java":[{"add":["34","import org.sonar.home.cache.DirectoryLock;","219","      if (!Files.isHidden(file) && !DirectoryLock.LOCK_FILE_NAME.equals(file.getFileName().toString())) {"],"delete":["33","import org.sonar.batch.scan.ProjectLock;","219","      if (!Files.isHidden(file) && !ProjectLock.LOCK_FILE_NAME.equals(file.getFileName().toString())) {"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleanerTest.java":[{"add":[],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectLock.java":[{"add":["26","import java.io.IOException;","28","import java.nio.file.Files;","32","  private final DirectoryLock lock;","35","    Path directory = projectReactor.getRoot().getWorkDir().toPath();","36","    try {","37","      if (!Files.exists(directory)) {","38","        Files.createDirectories(directory);","39","      }","40","    } catch (IOException e) {","41","      throw new IllegalStateException(\"Failed to create work directory\", e);","42","    }","45","  "],"delete":["22","","31","  public static final String LOCK_FILE_NAME = \".sonar_lock\";","32","","33","  private DirectoryLock lock;","36","    Path directory = projectReactor.getRoot().getBaseDir().toPath();","39",""]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleaner.java":[{"add":[],"delete":[]}],"sonar-home\/src\/test\/java\/org\/sonar\/home\/cache\/DirectoryLockTest.java":[{"add":[],"delete":["52","    assertThat(temp.getRoot().list()).isEmpty();","61","    assertThat(temp.getRoot().list()).isEmpty();"]}]}},"d959cb81e02abbcf8a1201bd5ece9e50bc4ffa2e":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualitygate\/ProjectQgateAssociationMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualitygate\/ProjectQgateAssociationMapper.xml":[{"add":["6","    SELECT proj.id as id, proj.kee as \"key\", proj.name as name, prop.text_value as gateId"],"delete":["6","    SELECT proj.id as id, proj.kee as key, proj.name as name, prop.text_value as gateId"]}]}},"2c7c8d8b0c1575f7e2235f5a7868d70bf914f3ba":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/LicenseEditionSet-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/__snapshots__\/LicenseEditionSet-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/LicenseEditionSet.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2173","marketplace.wrong_license_type=Your license is not compatible with any existing editions. Please provide a valid license."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/LicenseEditionSet-test.tsx":[{"add":["66","  let wrapper = await testLicenseStatus('NO_INSTALL');","68","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL');","70","  wrapper = await testLicenseStatus('MANUAL_INSTALL');","71","  expect(wrapper.find('p.alert')).toMatchSnapshot();","72","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL', jest.fn(), 'bar');","73","  expect(wrapper.find('p.alert')).toMatchSnapshot();","74","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL', jest.fn(), 'bar', { edition: undefined });","109","async function testLicenseStatus(","110","  status: string,","111","  updateLicense = jest.fn(),","112","  nextEditionKey = 'foo',","113","  props = {}","114",") {","116","    Promise.resolve({ nextEditionKey, previewStatus: status })","118","  const wrapper = getWrapper({ updateLicense, ...props });"],"delete":["66","  let wrapper = await testLicenseStatus('NO_INSTALL', jest.fn());","68","  wrapper = await testLicenseStatus('AUTOMATIC_INSTALL', jest.fn());","70","  wrapper = await testLicenseStatus('MANUAL_INSTALL', jest.fn());","105","async function testLicenseStatus(status: string, updateLicense: jest.Mock<any>) {","107","    Promise.resolve({ nextEditionKey: 'foo', previewStatus: status })","109","  const wrapper = getWrapper({ updateLicense });"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/__tests__\/__snapshots__\/LicenseEditionSet-test.tsx.snap":[{"add":["26","exports[`should correctly display status message after checking license 4`] = `","27","<p","28","  className=\"alert alert-danger\"","29",">","30","  marketplace.wrong_license_type_x.Foo","31","<\/p>","32","`;","33","","34","exports[`should correctly display status message after checking license 5`] = `","35","<p","36","  className=\"alert alert-danger\"","37",">","38","  marketplace.wrong_license_type","39","<\/p>","40","`;","41",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/LicenseEditionSet.tsx":[{"add":["43","  license: string;","44","  licenseEdition?: Edition;","45","  loading: boolean;","46","  previewStatus?: string;","47","  wrongEdition: boolean;","55","    this.state = { acceptTerms: false, license: '', loading: false, wrongEdition: false };","74","          const licenseEdition = this.props.editions.find(","75","            edition => edition.key === nextEditionKey","77","          const wrongEdition = Boolean(","78","            !licenseEdition || (edition && edition.key !== nextEditionKey)","79","          );","80","          this.setLicense({ license, loading: false, licenseEdition, previewStatus, wrongEdition });","85","          this.resetLicense({ license, loading: false });","119","      this.resetLicense({});","123","  handleTermsCheck = (checked: boolean) => {","124","    this.setLicense({ acceptTerms: checked });","125","  };","127","  resetLicense<K extends keyof State>(state: Pick<State, K>) {","128","    this.setLicense(","129","      Object.assign(","130","        {","131","          license: '',","132","          licenseEdition: undefined,","133","          previewStatus: undefined,","134","          wrongEdition: false","135","        },","136","        state","137","      )","138","    );","139","  }","140","","141","  setLicense<K extends keyof State>(state: Pick<State, K>) {","142","    this.setState(state, this.updateParentLicense);","143","  }","144","","145","  updateParentLicense = () => {","146","    const { acceptTerms, license, previewStatus, wrongEdition } = this.state;","148","      previewStatus !== 'NO_INSTALL' && !acceptTerms ? undefined : license,","149","      wrongEdition ? undefined : previewStatus","154","    const { licenseEdition, previewStatus, wrongEdition } = this.state;","155","    if (!previewStatus || wrongEdition) {","160","          {wrongEdition && (","161","            <p className=\"alert alert-danger\">","162","              {edition","163","                ? translateWithParameters('marketplace.wrong_license_type_x', edition.name)","164","                : translate('marketplace.wrong_license_type')}","165","            <\/p>","166","          )}","167","          {edition && (","168","            <a href={this.getLicenseFormUrl(edition)} target=\"_blank\">","169","              {translate('marketplace.i_need_a_license')}","170","            <\/a>","171","          )}","199","                        rel=\"noopener noreferrer\"","222","              rel=\"noopener noreferrer\"","247","          id=\"set-license\"","261","          }","262","          loading={loading}>"],"delete":["39","  license: string;","40","  licenseEdition?: Edition;","41","  loading: boolean;","42","  previewStatus?: string;","54","    this.state = { acceptTerms: false, license: '', loading: false };","73","          this.updateLicense(","74","            license,","75","            this.props.editions.find(edition => edition.key === nextEditionKey),","76","            edition && edition.key !== nextEditionKey ? undefined : previewStatus","82","          this.updateLicense(license, undefined, undefined);","116","      this.updateLicense(license, undefined, undefined);","120","  handleTermsCheck = (checked: boolean) =>","121","    this.setState({ acceptTerms: checked }, () =>","122","      this.updateLicense(this.state.license, this.state.licenseEdition, this.state.previewStatus)","123","    );","125","  updateLicense = (license: string, licenseEdition?: Edition, previewStatus?: string) => {","126","    this.setState({ license, licenseEdition, loading: false, previewStatus });","128","      previewStatus !== 'NO_INSTALL' && !this.state.acceptTerms ? undefined : license,","129","      previewStatus","134","    const { licenseEdition, previewStatus } = this.state;","135","    if (!previewStatus) {","137","      if (!edition) {","138","        return undefined;","139","      }","143","          {licenseEdition !== undefined &&","144","            edition.key !== licenseEdition.key && (","145","              <p className=\"alert alert-danger\">","146","                {translateWithParameters('marketplace.wrong_license_type_x', edition.name)}","147","              <\/p>","148","            )}","149","          <a href={this.getLicenseFormUrl(edition)} target=\"_blank\">","150","            {translate('marketplace.i_need_a_license')}","151","          <\/a>","224","          id=\"set-license\"","234","          loading={loading}","240","          }>"]}]}},"b3cf89af7b9fede43d0b23739b28dc762eb3e2ad":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingListener.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingResult.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingListener.java":[{"add":["38","        throw new IllegalStateException(String.format(\"Unrecoverable indexation failures: %d errors among %d requests\", result.getFailures(), result.getTotal()));"],"delete":["38","        throw new IllegalStateException(\"Unrecoverable indexation failures\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/IndexingResult.java":[{"add":["26","  final AtomicLong total = new AtomicLong(0L);","27","  private final AtomicLong successes = new AtomicLong(0L);","31","    successes.set(0L);","40","    successes.incrementAndGet();","46","    successes.addAndGet(other.successes.get());","50","    return total.get() - successes.get();","58","    return successes.get();","62","    return total.get() == 0 ? 1.0 : ((1.0 * successes.get()) \/ total.get());","66","    return total.get() == successes.get();"],"delete":["26","  AtomicLong total = new AtomicLong(0L);","27","  private long successes = 0L;","31","    successes = 0L;","40","    successes += 1;","46","    successes += other.successes;","50","    return total.get() - successes;","58","    return successes;","62","    return total.get() == 0 ? 1.0 : ((1.0 * successes) \/ total.get());","66","    return total.get() == successes;"]}]}},"06310fbb1aff7750fa55a4eebd6fc8eada97f95a":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest\/search_profile_active_rules.json":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest.java":[{"add":["71","  DbSession dbSession;","81","    dbSession = tester.get(DbClient.class).openSession(false);","86","    dbSession.close();","100","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","101","    ruleDao.insert(dbSession, RuleTesting.newXooX2());","102","    dbSession.commit();","120","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","121","    ruleDao.insert(dbSession, RuleTesting.newXooX2());","122","    dbSession.commit();","132","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","133","    ruleDao.insert(dbSession, RuleTesting.newXooX2().setDescription(\"A *Xoo* rule\").setDescriptionFormat(RuleDto.Format.MARKDOWN));","134","    dbSession.commit();","144","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","145","    dbSession.commit();","158","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","159","    dbSession.commit();","172","    ruleDao.insert(dbSession, RuleTesting.newDto(RuleKey.of(\"other\", \"rule\"))).setLanguage(\"unknown\");","173","    dbSession.commit();","184","    insertDebtCharacteristics(dbSession);","186","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","197","    dbSession.commit();","208","    insertDebtCharacteristics(dbSession);","210","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","221","    dbSession.commit();","231","    insertDebtCharacteristics(dbSession);","233","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","244","    dbSession.commit();","254","    insertDebtCharacteristics(dbSession);","256","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","267","    dbSession.commit();","277","    insertDebtCharacteristics(dbSession);","279","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","290","    ruleDao.insert(dbSession, RuleTesting.newXooX2()","301","    ruleDao.insert(dbSession, RuleTesting.newXooX3()","312","    ruleDao.insert(dbSession, RuleTesting.newDto(RuleKey.of(\"xoo\", \"x4\")).setLanguage(\"xoo\")","323","    dbSession.commit();","336","    ruleDao.insert(dbSession, templateRule);","337","    ruleDao.insert(dbSession, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","338","    dbSession.commit();","350","    ruleDao.insert(dbSession, templateRule);","351","    ruleDao.insert(dbSession, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","352","    dbSession.commit();","364","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","367","    ruleDao.insert(dbSession, rule);","370","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","371","    dbSession.commit();","385","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","388","    tester.get(QualityProfileDao.class).insert(dbSession, profile2);","390","    dbSession.commit();","393","    ruleDao.insert(dbSession, rule);","394","","395","    RuleParamDto param = RuleParamDto.createFor(rule)","396","      .setDefaultValue(\"some value\")","397","      .setType(\"string\")","398","      .setDescription(\"My small description\")","399","      .setName(\"my_var\");","400","    ruleDao.insertRuleParam(dbSession, rule, param);","401","","402","    RuleParamDto param2 = RuleParamDto.createFor(rule)","403","      .setDefaultValue(\"other value\")","404","      .setType(\"integer\")","405","      .setDescription(\"My small description\")","406","      .setName(\"the_var\");","407","    ruleDao.insertRuleParam(dbSession, rule, param2);","408","","409","    \/\/ SONAR-7083","410","    RuleParamDto param3 = RuleParamDto.createFor(rule)","411","      .setDefaultValue(null)","412","      .setType(\"string\")","413","      .setDescription(\"Empty Param\")","414","      .setName(\"empty_var\");","415","    ruleDao.insertRuleParam(dbSession, rule, param3);","418","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","420","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule2);","422","    ActiveRuleParamDto activeRuleParam = ActiveRuleParamDto.createFor(param)","423","      .setValue(\"The VALUE\");","424","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule2, activeRuleParam);","425","","426","    ActiveRuleParamDto activeRuleParam2 = ActiveRuleParamDto.createFor(param2)","427","      .setValue(\"The Other Value\");","428","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule2, activeRuleParam2);","429","","430","    ActiveRuleParamDto activeRuleParam3 = ActiveRuleParamDto.createFor(param3)","431","      .setValue(null);","432","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule2, activeRuleParam3);","433","","434","    dbSession.commit();","455","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","458","    tester.get(QualityProfileDao.class).insert(dbSession, profile2);","460","    dbSession.commit();","463","    ruleDao.insert(dbSession, rule);","466","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","468","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule2);","470","    dbSession.commit();","484","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","486","    ruleDao.insert(dbSession, rule);","487","    dbSession.commit();","494","    ruleDao.insertRuleParam(dbSession, rule, param);","501","    ruleDao.insertRuleParam(dbSession, rule, param2);","504","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","508","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule, activeRuleParam);","512","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule, activeRuleParam2);","513","    dbSession.commit();","527","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","529","    ruleDao.insert(dbSession, rule);","530","    dbSession.commit();","540","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","543","    ruleDao.insert(dbSession, RuleTesting.newXooX2()","546","    dbSession.commit();","572","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","573","    ruleDao.insert(dbSession, RuleTesting.newXooX2().setStatus(RuleStatus.BETA));","574","    ruleDao.insert(dbSession, RuleTesting.newXooX3().setStatus(RuleStatus.DEPRECATED));","575","    dbSession.commit();","585","    ruleDao.insert(dbSession, RuleTesting.newXooX1().setName(\"Dodgy - Consider returning a zero length array rather than null \"));","586","    ruleDao.insert(dbSession, RuleTesting.newXooX2().setName(\"Bad practice - Creates an empty zip file entry\"));","587","    ruleDao.insert(dbSession, RuleTesting.newXooX3().setName(\"XPath rule\"));","588","    dbSession.commit();","612","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","613","    ruleDao.insert(dbSession, RuleTesting.newXooX2());","614","    dbSession.commit();","615","    dbSession.clearCache();"],"delete":["71","  DbSession session;","81","    session = tester.get(DbClient.class).openSession(false);","86","    session.close();","100","    ruleDao.insert(session, RuleTesting.newXooX1());","101","    ruleDao.insert(session, RuleTesting.newXooX2());","102","    session.commit();","120","    ruleDao.insert(session, RuleTesting.newXooX1());","121","    ruleDao.insert(session, RuleTesting.newXooX2());","122","    session.commit();","132","    ruleDao.insert(session, RuleTesting.newXooX1());","133","    ruleDao.insert(session, RuleTesting.newXooX2().setDescription(\"A *Xoo* rule\").setDescriptionFormat(RuleDto.Format.MARKDOWN));","134","    session.commit();","144","    ruleDao.insert(session, RuleTesting.newXooX1());","145","    session.commit();","158","    ruleDao.insert(session, RuleTesting.newXooX1());","159","    session.commit();","172","    ruleDao.insert(session, RuleTesting.newDto(RuleKey.of(\"other\", \"rule\"))).setLanguage(\"unknown\");","173","    session.commit();","184","    insertDebtCharacteristics(session);","186","    ruleDao.insert(session, RuleTesting.newXooX1()","197","    session.commit();","208","    insertDebtCharacteristics(session);","210","    ruleDao.insert(session, RuleTesting.newXooX1()","221","    session.commit();","231","    insertDebtCharacteristics(session);","233","    ruleDao.insert(session, RuleTesting.newXooX1()","244","    session.commit();","254","    insertDebtCharacteristics(session);","256","    ruleDao.insert(session, RuleTesting.newXooX1()","267","    session.commit();","277","    insertDebtCharacteristics(session);","279","    ruleDao.insert(session, RuleTesting.newXooX1()","290","    ruleDao.insert(session, RuleTesting.newXooX2()","301","    ruleDao.insert(session, RuleTesting.newXooX3()","312","    ruleDao.insert(session, RuleTesting.newDto(RuleKey.of(\"xoo\", \"x4\")).setLanguage(\"xoo\")","323","    session.commit();","336","    ruleDao.insert(session, templateRule);","337","    ruleDao.insert(session, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","338","    session.commit();","350","    ruleDao.insert(session, templateRule);","351","    ruleDao.insert(session, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","352","    session.commit();","364","    tester.get(QualityProfileDao.class).insert(session, profile);","367","    ruleDao.insert(session, rule);","370","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","371","    session.commit();","385","    tester.get(QualityProfileDao.class).insert(session, profile);","388","    tester.get(QualityProfileDao.class).insert(session, profile2);","390","    session.commit();","393","    ruleDao.insert(session, rule);","396","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","398","    tester.get(ActiveRuleDao.class).insert(session, activeRule2);","400","    session.commit();","421","    tester.get(QualityProfileDao.class).insert(session, profile);","424","    tester.get(QualityProfileDao.class).insert(session, profile2);","426","    session.commit();","429","    ruleDao.insert(session, rule);","432","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","434","    tester.get(ActiveRuleDao.class).insert(session, activeRule2);","436","    session.commit();","450","    tester.get(QualityProfileDao.class).insert(session, profile);","452","    ruleDao.insert(session, rule);","453","    session.commit();","460","    ruleDao.insertRuleParam(session, rule, param);","467","    ruleDao.insertRuleParam(session, rule, param2);","470","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","474","    tester.get(ActiveRuleDao.class).insertParam(session, activeRule, activeRuleParam);","478","    tester.get(ActiveRuleDao.class).insertParam(session, activeRule, activeRuleParam2);","479","    session.commit();","493","    tester.get(QualityProfileDao.class).insert(session, profile);","495","    ruleDao.insert(session, rule);","496","    session.commit();","506","    ruleDao.insert(session, RuleTesting.newXooX1()","509","    ruleDao.insert(session, RuleTesting.newXooX2()","512","    session.commit();","538","    ruleDao.insert(session, RuleTesting.newXooX1());","539","    ruleDao.insert(session, RuleTesting.newXooX2().setStatus(RuleStatus.BETA));","540","    ruleDao.insert(session, RuleTesting.newXooX3().setStatus(RuleStatus.DEPRECATED));","541","    session.commit();","551","    ruleDao.insert(session, RuleTesting.newXooX1().setName(\"Dodgy - Consider returning a zero length array rather than null \"));","552","    ruleDao.insert(session, RuleTesting.newXooX2().setName(\"Bad practice - Creates an empty zip file entry\"));","553","    ruleDao.insert(session, RuleTesting.newXooX3().setName(\"XPath rule\"));","554","    session.commit();","578","    ruleDao.insert(session, RuleTesting.newXooX1());","579","    ruleDao.insert(session, RuleTesting.newXooX2());","580","    session.commit();","581","    session.clearCache();"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest\/search_profile_active_rules.json":[{"add":["1","  \"total\": 1,","2","  \"p\": 1,","3","  \"ps\": 100,","15","        \"params\": [","16","          {","17","            \"key\": \"the_var\",","18","            \"value\": \"The Other Value\"","19","          },","20","          {","21","            \"key\": \"my_var\",","22","            \"value\": \"The VALUE\"","23","          },","24","          {","25","            \"key\": \"empty_var\",","26","            \"value\": \"\"","27","          }","28","        ]"],"delete":["1","  \"total\":1,","2","  \"p\":1,","3","  \"ps\":100,","15","        \"params\": []"]}]}},"20ed9553b9a1012f341c1f5d4a594221ae437600":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.js":[{"add":["22","import Select, { Creatable } from 'react-select';","370","  renderTagsField = (field \/*: string *\/, label \/*: string *\/, allowCreate \/*: boolean *\/) => {","377","    const Component = allowCreate ? Creatable : Select;","378","","379","    const options = [...this.state.tags, ...(this.state[field] || [])].map(tag => ({","380","      label: tag,","381","      value: tag","382","    }));","385","      <Component","391","        promptTextCreator={promptCreateTag}","493","          {this.renderTagsField('addTags', 'issue.add_tags', true)}","494","          {this.renderTagsField('removeTags', 'issue.remove_tags', false)}","524","","525","function promptCreateTag(label \/*: string *\/) {","526","  return `+ ${label}`;","527","}"],"delete":["22","import Select from 'react-select';","370","  renderTagsField = (field \/*: string *\/, label \/*: string *\/) => {","377","    const options = this.state.tags.map(tag => ({ label: tag, value: tag }));","380","      <Select","487","          {this.renderTagsField('addTags', 'issue.add_tags')}","488","          {this.renderTagsField('removeTags', 'issue.remove_tags')}"]}]}},"43ad639ca4a6057b0f9137eaa317d47cae649f60":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/events.html.erb":"MODIFY","server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/timeline.html.erb":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/dashboard_helper.rb":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/events.html.erb":[{"add":["0","<%","13","","79","","93","      <%= link_to_if profile_data['key'] && profile_data['from'] && profile_data['to'], h(event.name),"],"delete":["0","<% ","13","    ","79","  ","93","      <%= link_to_if profile_data['key'] && profile_data['from'] && profile_data['to'], event.name,"]}],"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/timeline.html.erb":[{"add":["163","           js_events += escape_javascript(e.name)"],"delete":["163","           js_events += json_escape(e.name)"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/dashboard_helper.rb":[{"add":["19","include ERB::Util","66","      \"<option value='#{index}' #{selected} class='#{html_class}'>&Delta; #{h(label)}<\/option>\""],"delete":["65","      \"<option value='#{index}' #{selected} class='#{html_class}'>&Delta; #{label}<\/option>\""]}]}},"7a230c2fa98532eb79d2efcd30c31d608f9fa108":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/BackgroundTasksApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/StatsContainer.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/Stats.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/__tests__\/background-tasks-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/BackgroundTasksApp.js":[{"add":["28","import StatsContainer from '..\/components\/StatsContainer';","222","        <StatsContainer"],"delete":["28","import Stats from '..\/components\/Stats';","222","        <Stats"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/StatsContainer.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/Stats.js":[{"add":["21","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","27","  isSystemAdmin?: boolean,","42","  handleCancelAllPending = (event \/*: Object *\/) => {","43","    event.preventDefault();","44","    event.currentTarget.blur();","46","  };","48","  handleShowFailing = (event \/*: Object *\/) => {","49","    event.preventDefault();","50","    event.currentTarget.blur();","52","  };","64","          {this.props.isSystemAdmin && (","65","            <Tooltip overlay={translate('background_tasks.cancel_all_tasks')}>","66","              <a","67","                className=\"js-cancel-pending icon-delete spacer-left\"","68","                href=\"#\"","69","                onClick={this.handleCancelAllPending}","70","              \/>","71","            <\/Tooltip>","72","          )}","98","          <Tooltip overlay={translate('background_tasks.failing_count')}>","99","            <a","100","              className=\"js-failures-count emphasised-measure\"","101","              href=\"#\"","102","              onClick={this.handleShowFailing}>","103","              {this.props.failingCount}","104","            <\/a>","105","          <\/Tooltip>","113","          <Tooltip overlay={translate('background_tasks.failing_count')}>","114","            <span className=\"js-failures-count emphasised-measure\">{this.props.failingCount}<\/span>","115","          <\/Tooltip>"],"delete":["40","  handleCancelAllPending(e \/*: Object *\/) {","41","    e.preventDefault();","42","    e.target.blur();","44","  }","46","  handleShowFailing(e \/*: Object *\/) {","47","    e.preventDefault();","48","    e.target.blur();","50","  }","62","          <a","63","            onClick={this.handleCancelAllPending.bind(this)}","64","            className=\"js-cancel-pending icon-delete spacer-left\"","65","            title={translate('background_tasks.cancel_all_tasks')}","66","            data-toggle=\"tooltip\"","67","            href=\"#\"","68","          \/>","94","          <a","95","            onClick={this.handleShowFailing.bind(this)}","96","            className=\"js-failures-count emphasised-measure\"","97","            data-toggle=\"tooltip\"","98","            title=\"Count of projects where processing of most recent analysis report failed\"","99","            href=\"#\">","100","            {this.props.failingCount}","101","          <\/a>","109","          <span","110","            className=\"js-failures-count emphasised-measure\"","111","            data-toggle=\"tooltip\"","112","            title=\"Count of projects where processing of most recent analysis report failed\">","113","            {this.props.failingCount}","114","          <\/span>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2215","background_tasks.failing_count=Count of projects where processing of most recent analysis report failed"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/__tests__\/background-tasks-test.js":[{"add":["104","        <Stats","105","          isSystemAdmin={true}","106","          pendingCount={5}","107","          onCancelAllPending={stub}","108","          onShowFailing={stub}","109","        \/>","117","        <Stats","118","          isSystemAdmin={true}","119","          pendingCount={5}","120","          onCancelAllPending={spy}","121","          onShowFailing={stub}","122","        \/>"],"delete":["104","        <Stats pendingCount={5} onCancelAllPending={stub} onShowFailing={stub} \/>","112","        <Stats pendingCount={5} onCancelAllPending={spy} onShowFailing={stub} \/>"]}]}},"9fbe45c366c95b7a933ee36fe8d976f3147f144a":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardMeasures.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCard.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardMeasures-test.js.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardMeasures-test.js":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardMeasures.js":[{"add":["80","                      <CoverageRating value={measures['coverage']}\/>","81","                    <\/span>","95","                {measures['duplicated_lines_density'] != null && (","96","                  <span className=\"spacer-right\">","97","                    <DuplicationsRating value={measures['duplicated_lines_density']}\/>","98","                  <\/span>","99","                )}","109","          {measures['ncloc'] != null && (","110","            <div className=\"project-card-measure\" data-key=\"ncloc\">","111","              <div className=\"project-card-measure-inner\">","112","                <div className=\"project-card-measure-number\">","113","                  <span className=\"spacer-right\">","114","                    <SizeRating value={measures['ncloc']}\/>","115","                  <\/span>","116","                  <Measure measure={{ value: measures['ncloc'] }}","117","                           metric={{ key: 'ncloc', type: 'SHORT_INT' }}\/>","118","                <\/div>","119","                <div className=\"project-card-measure-label\">","120","                  <ProjectCardLanguages distribution={measures['ncloc_language_distribution']}\/>","121","                <\/div>","124","          )}"],"delete":["80","                    <CoverageRating value={measures['coverage']}\/>","81","                  <\/span>","95","                <span className=\"spacer-right\">","96","                  <DuplicationsRating value={measures['duplicated_lines_density']}\/>","97","                <\/span>","107","          <div className=\"project-card-measure\" data-key=\"ncloc\">","108","            <div className=\"project-card-measure-inner\">","109","              <div className=\"project-card-measure-number\">","110","                <span className=\"spacer-right\">","111","                  <SizeRating value={measures['ncloc']}\/>","112","                <\/span>","113","                <Measure measure={{ value: measures['ncloc'] }}","114","                         metric={{ key: 'ncloc', type: 'SHORT_INT' }}\/>","115","              <\/div>","116","              <div className=\"project-card-measure-label\">","117","                <ProjectCardLanguages distribution={measures['ncloc_language_distribution']}\/>","120","          <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCard.js":[{"add":["40","    const isProjectAnalyzed = areProjectMeasuresLoaded &&","41","        (this.props.measures['ncloc'] != null || this.props.measures['sqale_rating'] != null);"],"delete":["40","    const isProjectAnalyzed = areProjectMeasuresLoaded && this.props.measures.ncloc != null;"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardMeasures-test.js.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardMeasures-test.js":[{"add":[],"delete":[]}]}},"eb64f5e0e1e9abcd2701ab7a02624341b3d8960d":{"changes":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","\/dev\/null":"DELETE","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest.java":"ADD","sonar-db\/src\/test\/resources\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest\/schema.sql":"ADD","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1017_increase_projects_name_columns_size.rb":"ADD","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSize.java":"ADD","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["247","  \"NAME\" VARCHAR(2000),"],"delete":["247","  \"NAME\" VARCHAR(256),"]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":[{"add":["64","import org.sonar.db.version.v54.IncreaseProjectsNameColumnsSize;","134","      RemovePreviewPermission.class,","135","      IncreaseProjectsNameColumnsSize.class"],"delete":["133","      RemovePreviewPermission.class"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest.java":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/resources\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1017_increase_projects_name_columns_size.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":[{"add":["31","    assertThat(container.size()).isEqualTo(51);"],"delete":["31","    assertThat(container.size()).isEqualTo(50);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 1017;"],"delete":["31","  public static final int LAST_VERSION = 1016;"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSize.java":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["378","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1017');"],"delete":["378","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1016');"]}]}},"34fece43c543cd2d3cd8e76a9af188f12cf69c39":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1977","projects_role.issueadmin.desc=Change the type and severity of issues, resolve issues as being \"won't fix\" or \"false-positive\" (users also need \"Browse\" permission).","1979","projects_role.user.desc=Access a project, browse its measures and issues, confirm or resolve issues as \"fixed\", change the assignee, comment on issues and change tags."],"delete":["1977","projects_role.issueadmin.desc=Perform advanced editing on issues: marking an issue False Positive \/ Won't Fix, and changing an Issue's severity. (Users will also need \"Browse\" permission)","1979","projects_role.user.desc=Access a project, browse its measures, and create\/edit issues for it."]}]}},"fecabb60a6737406700e07e274f14cd75af7fba7":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/charset\/MssqlMetadataReader.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/charset\/MssqlMetadataReader.java":[{"add":["27","class MssqlMetadataReader {","30","  MssqlMetadataReader(SqlExecutor sqlExecutor) {","34","  String getDefaultCollation(Connection connection) throws SQLException {","38","  List<ColumnDef> getColumnDefs(Connection connection) throws SQLException {","47","  List<MssqlCharsetHandler.ColumnIndex> getColumnIndices(Connection connection, ColumnDef column) throws SQLException {"],"delete":["27","public class MssqlMetadataReader {","30","  public MssqlMetadataReader(SqlExecutor sqlExecutor) {","34","  public String getDefaultCollation(Connection connection) throws SQLException {","38","  public List<ColumnDef> getColumnDefs(Connection connection) throws SQLException {","47","  public List<MssqlCharsetHandler.ColumnIndex> getColumnIndices(Connection connection, ColumnDef column) throws SQLException {"]}]}},"d2dc8046525bb4538ca4d7ba4c5bc91346e31596":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/WorstProjects.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/ProjectRow-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/Breadcrumb.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/Search.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/ComponentName.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchResult-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRow.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileProjects-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/Menu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/Search-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskComponent.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/component.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/ComponentContainer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/Breadcrumb-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/ComponentName-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/__snapshots__\/WorstProjects-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/WorstProjects.tsx":[{"add":["27","import { getComponentOverviewUrl } from '..\/..\/..\/helpers\/urls';","28","import { ComponentQualifier } from '..\/..\/..\/types\/component';","82","                  to={getComponentOverviewUrl(","83","                    component.refKey || component.key,","84","                    component.qualifier","85","                  )}>","89","              {component.qualifier === ComponentQualifier.Project"],"delete":["27","import { getProjectUrl } from '..\/..\/..\/helpers\/urls';","81","                  to={getProjectUrl(component.refKey || component.key)}>","85","              {component.qualifier === 'TRK'"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/ProjectRow-test.tsx.snap":[{"add":[],"delete":["26","            \"branch\": undefined,","219","            \"branch\": undefined,"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":[{"add":["19","import { ComponentQualifier } from '..\/..\/types\/component';","23","  getComponentOverviewUrl,","71","describe('getComponentOverviewUrl', () => {","72","  it('should return a portfolio url for a portfolio', () => {","73","    expect(getComponentOverviewUrl(SIMPLE_COMPONENT_KEY, ComponentQualifier.Portfolio)).toEqual({","74","      pathname: '\/portfolio',","75","      query: { id: SIMPLE_COMPONENT_KEY }","76","    });","77","  });","78","  it('should return a portfolio url for a subportfolio', () => {","79","    expect(getComponentOverviewUrl(SIMPLE_COMPONENT_KEY, ComponentQualifier.SubPortfolio)).toEqual({","80","      pathname: '\/portfolio',","81","      query: { id: SIMPLE_COMPONENT_KEY }","82","    });","83","  });","84","  it('should return a dashboard url for a project', () => {","85","    expect(getComponentOverviewUrl(SIMPLE_COMPONENT_KEY, ComponentQualifier.Project)).toEqual({","86","      pathname: '\/dashboard',","87","      query: { id: SIMPLE_COMPONENT_KEY }","88","    });","89","  });","90","  it('should return a dashboard url for an app', () => {","91","    expect(getComponentOverviewUrl(SIMPLE_COMPONENT_KEY, ComponentQualifier.Application)).toEqual({","92","      pathname: '\/dashboard',","93","      query: { id: SIMPLE_COMPONENT_KEY }","94","    });","95","  });","96","});","97",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/Breadcrumb.tsx":[{"add":["24","import { getComponentOverviewUrl } from '..\/..\/..\/..\/helpers\/urls';","55","                to={getComponentOverviewUrl(breadcrumbElement.key, breadcrumbElement.qualifier)}>"],"delete":["24","import { getProjectUrl } from '..\/..\/..\/..\/helpers\/urls';","55","                to={getProjectUrl(breadcrumbElement.key)}>"]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["21","import { BranchLike, BranchParameters } from '..\/types\/branch-like';","22","import { ComponentQualifier, isPortfolioLike } from '..\/types\/component';","28","export function getComponentOverviewUrl(","29","  componentKey: string,","30","  componentQualifier: ComponentQualifier | string,","31","  branchParameters?: BranchParameters","32",") {","33","  return isPortfolioLike(componentQualifier)","34","    ? getPortfolioUrl(componentKey)","35","    : getProjectQueryUrl(componentKey, branchParameters);","36","}","37","","42","export function getProjectQueryUrl(project: string, branchParameters?: BranchParameters): Location {","43","  return { pathname: '\/dashboard', query: { id: project, ...branchParameters } };","44","}","45",""],"delete":["21","import { BranchLike } from '..\/types\/branch-like';"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/Search.tsx":[{"add":["33","import { getCodeUrl, getComponentOverviewUrl } from '..\/..\/..\/helpers\/urls';","34","import { ComponentQualifier } from '..\/..\/..\/types\/component';","278","    const { results, selected } = this.state;","280","    if (!selected) {","281","      return;","282","    }","283","","284","    if (selected.startsWith('qualifier###')) {","285","      this.searchMore(selected.substr(12));","286","    } else {","287","      const file = this.findFile(selected);","288","      if (file) {","289","        this.props.router.push(getCodeUrl(file.project!, undefined, file.key));","291","        let qualifier = ComponentQualifier.Project;","292","","293","        if ((results[ComponentQualifier.Portfolio] ?? []).find(r => r.key === selected)) {","294","          qualifier = ComponentQualifier.Portfolio;","295","        } else if ((results[ComponentQualifier.SubPortfolio] ?? []).find(r => r.key === selected)) {","296","          qualifier = ComponentQualifier.SubPortfolio;","298","","299","        this.props.router.push(getComponentOverviewUrl(selected, qualifier));","301","      this.closeSearch();"],"delete":["33","import { getCodeUrl, getProjectUrl } from '..\/..\/..\/helpers\/urls';","277","    const { selected } = this.state;","279","    if (selected) {","280","      if (selected.startsWith('qualifier###')) {","281","        this.searchMore(selected.substr(12));","283","        const file = this.findFile(selected);","284","        if (file) {","285","          this.props.router.push(getCodeUrl(file.project!, undefined, file.key));","286","        } else {","287","          this.props.router.push(getProjectUrl(selected));","289","        this.closeSearch();"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/ComponentName.tsx":[{"add":["26","import { getProjectUrl } from '..\/..\/..\/helpers\/urls';","85","    const branch = rootComponent.qualifier === 'APP' ? component.branch : undefined;","87","      <Link className=\"link-with-icon\" to={getProjectUrl(component.refKey, branch)}>"],"delete":["84","    const branch = rootComponent.qualifier === 'APP' ? { branch: component.branch } : {};","86","      <Link","87","        className=\"link-with-icon\"","88","        to={{ pathname: '\/dashboard', query: { id: component.refKey, ...branch } }}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileProjects.tsx":[{"add":["26","import { getProjectUrl } from '..\/..\/..\/helpers\/urls';","144","              <Link className=\"link-with-icon\" to={getProjectUrl(project.key)}>"],"delete":["143","              <Link","144","                className=\"link-with-icon\"","145","                to={{ pathname: '\/dashboard', query: { id: project.key } }}>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchResult-test.tsx.snap":[{"add":[],"delete":["21","            \"branch\": undefined,","73","            \"branch\": undefined,","124","            \"branch\": undefined,","180","            \"branch\": undefined,","231","            \"branch\": undefined,","287","            \"branch\": undefined,","338","            \"branch\": undefined,","387","            \"branch\": undefined,"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRow.tsx":[{"add":["27","import { getComponentOverviewUrl } from '..\/..\/helpers\/urls';","54","          <Link","55","            className=\"link-with-icon\"","56","            to={getComponentOverviewUrl(project.key, project.qualifier)}>"],"delete":["27","import { getPortfolioUrl, getProjectUrl } from '..\/..\/helpers\/urls';","28","import { ComponentQualifier } from '..\/..\/types\/component';","45","  getComponentUrl(project: Project) {","46","    return project.qualifier === ComponentQualifier.Portfolio","47","      ? getPortfolioUrl(project.key)","48","      : getProjectUrl(project.key);","49","  }","50","","61","          <Link className=\"link-with-icon\" to={this.getComponentUrl(project)}>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":[{"add":["25","import { getCodeUrl, getComponentOverviewUrl } from '..\/..\/..\/helpers\/urls';","116","      : getComponentOverviewUrl(component.key, component.qualifier);"],"delete":["25","import { getCodeUrl, getProjectUrl } from '..\/..\/..\/helpers\/urls';","116","      : getProjectUrl(component.key);"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/__snapshots__\/ProfileProjects-test.tsx.snap":[{"add":["71","                \"branch\": undefined,"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/Menu.tsx":[{"add":["31","import { getPortfolioUrl, getProjectQueryUrl } from '..\/..\/..\/..\/helpers\/urls';","33","import { ComponentQualifier, isPortfolioLike } from '..\/..\/..\/..\/types\/component';","98","    return isPortfolioLike(qualifier);","113","  renderDashboardLink = ({ id, ...branchLike }: Query, isPortfolio: boolean) => {","116","        <Link","117","          activeClassName=\"active\"","118","          to={isPortfolio ? getPortfolioUrl(id) : getProjectQueryUrl(id, branchLike)}>"],"delete":["32","import { ComponentQualifier } from '..\/..\/..\/..\/types\/component';","97","    return (","98","      qualifier === ComponentQualifier.Portfolio || qualifier === ComponentQualifier.SubPortfolio","99","    );","114","  renderDashboardLink = (query: Query, isPortfolio: boolean) => {","115","    const pathname = isPortfolio ? '\/portfolio' : '\/dashboard';","118","        <Link activeClassName=\"active\" to={{ pathname, query }}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/App.tsx":[{"add":["25","import { isPortfolioLike } from '..\/..\/..\/types\/component';","42","    return isPortfolioLike(this.props.component.qualifier);"],"delete":["25","import { ComponentQualifier } from '..\/..\/..\/types\/component';","42","    return ([ComponentQualifier.Portfolio, ComponentQualifier.SubPortfolio] as string[]).includes(","43","      this.props.component.qualifier","44","    );"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/Search-test.tsx":[{"add":["22","import { mockRouter } from '..\/..\/..\/..\/helpers\/testMocks';","23","import { ComponentQualifier } from '..\/..\/..\/..\/types\/component';","33","      BRC: [component('qwe', ComponentQualifier.SubProject)]","48","it('opens selected project on enter', () => {","49","  const router = mockRouter();","50","  const form = shallowRender({ router });","51","  const selectedKey = 'project';","54","    results: { [ComponentQualifier.Project]: [component(selectedKey)] },","55","    selected: selectedKey","57","","59","  expect(router.push).toBeCalledWith({ pathname: '\/dashboard', query: { id: selectedKey } });","60","});","61","","62","it('opens selected portfolio on enter', () => {","63","  const router = mockRouter();","64","  const form = shallowRender({ router });","65","  const selectedKey = 'portfolio';","66","  form.setState({","67","    open: true,","68","    results: {","69","      [ComponentQualifier.Portfolio]: [component(selectedKey, ComponentQualifier.Portfolio)]","70","    },","71","    selected: selectedKey","72","  });","73","","74","  elementKeydown(form.find('SearchBox'), 13);","75","  expect(router.push).toBeCalledWith({ pathname: '\/portfolio', query: { id: selectedKey } });","76","});","77","","78","it('opens selected subportfolio on enter', () => {","79","  const router = mockRouter();","80","  const form = shallowRender({ router });","81","  const selectedKey = 'sbprtfl';","82","  form.setState({","83","    open: true,","84","    results: {","85","      [ComponentQualifier.SubPortfolio]: [component(selectedKey, ComponentQualifier.SubPortfolio)]","86","    },","87","    selected: selectedKey","88","  });","89","","90","  elementKeydown(form.find('SearchBox'), 13);","91","  expect(router.push).toBeCalledWith({ pathname: '\/portfolio', query: { id: selectedKey } });","113","function component(key: string, qualifier = ComponentQualifier.Project) {"],"delete":["31","      BRC: [component('qwe', 'BRC')]","46","it('opens selected on enter', () => {","47","  const form = shallowRender();","50","    results: { TRK: [component('foo')] },","51","    selected: 'foo'","53","  const openSelected = jest.fn();","54","  (form.instance() as Search).openSelected = openSelected;","56","  expect(openSelected).toBeCalled();","78","function component(key: string, qualifier = 'TRK') {"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/TaskComponent.tsx":[{"add":["31","import { isPortfolioLike } from '..\/..\/..\/types\/component';","87","  if (isPortfolioLike(task.componentQualifier)) {"],"delete":["31","import { ComponentQualifier } from '..\/..\/..\/types\/component';","87","  if (task.componentQualifier === ComponentQualifier.Portfolio) {"]}],"server\/sonar-web\/src\/main\/js\/types\/component.ts":[{"add":["19","","32","export function isPortfolioLike(componentQualifier?: string | ComponentQualifier) {","33","  return Boolean(","34","    componentQualifier &&","35","      [","36","        ComponentQualifier.Portfolio.toString(),","37","        ComponentQualifier.SubPortfolio.toString()","38","      ].includes(componentQualifier)","39","  );","40","}","41",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/ComponentContainer-test.tsx":[{"add":["29","import { ComponentQualifier } from '..\/..\/..\/types\/component';","182","  (getComponentNavigation as jest.Mock).mockRejectedValueOnce({ status: 404 });","189","  (getComponentNavigation as jest.Mock).mockRejectedValueOnce({ status: 403 });","196","it('should redirect if the component is a portfolio', async () => {","197","  const componentKey = 'comp-key';","198","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({","199","    component: { key: componentKey, breadcrumbs: [{ qualifier: ComponentQualifier.Portfolio }] }","200","  });","201","","202","  const replace = jest.fn();","203","","204","  const wrapper = shallowRender({","205","    location: mockLocation({ pathname: '\/dashboard' }),","206","    router: mockRouter({ replace })","207","  });","208","  await waitAndUpdate(wrapper);","209","  expect(replace).toBeCalledWith({ pathname: '\/portfolio', query: { id: componentKey } });","210","});","211",""],"delete":["28","import { isSonarCloud } from '..\/..\/..\/helpers\/system';","65","jest.mock('..\/..\/..\/helpers\/system', () => ({","66","  isSonarCloud: jest.fn().mockReturnValue(false)","67","}));","68","","125","it('loads organization', async () => {","126","  (isSonarCloud as jest.Mock).mockReturnValue(true);","127","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({","128","    component: { organization: 'org' }","129","  });","130","","131","  const fetchOrganization = jest.fn();","132","  shallowRender({ fetchOrganization });","133","  await new Promise(setImmediate);","134","  expect(fetchOrganization).toBeCalledWith('org');","135","});","136","","198","  (getComponentNavigation as jest.Mock).mockRejectedValue({ status: 404 });","205","  (getComponentNavigation as jest.Mock).mockRejectedValue({ status: 403 });"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/Breadcrumb-test.tsx.snap":[{"add":["21","          \"pathname\": \"\/portfolio\","],"delete":["21","          \"pathname\": \"\/dashboard\",","23","            \"branch\": undefined,"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":[{"add":["34","import { getPortfolioUrl } from '..\/..\/helpers\/urls';","41","import { isPortfolioLike } from '..\/..\/types\/component';","49","  location: Pick<Location, 'query' | 'pathname'>;","119","        \/*","120","         * There used to be a redirect from \/dashboard to \/portfolio which caused issues.","121","         * Links should be fixed to not rely on this redirect, but:","122","         * This is a fail-safe in case there are still some faulty links remaining.","123","         *\/","124","        if (","125","          this.props.location.pathname.match('dashboard') &&","126","          isPortfolioLike(componentWithQualifier.qualifier)","127","        ) {","128","          this.props.router.replace(getPortfolioUrl(component.key));","130",""],"delete":["34","import { isSonarCloud } from '..\/..\/helpers\/system';","48","  location: Pick<Location, 'query'>;","118","        if (isSonarCloud()) {","119","          this.props.fetchOrganization(componentWithQualifier.organization);"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/ComponentName-test.tsx.snap":[{"add":["189","          \"branch\": undefined,"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":[{"add":["29","import { getProjectUrl } from '..\/..\/..\/helpers\/urls';","85","        <Link to={getProjectUrl(project.key)}>{project.name}<\/Link>"],"delete":["84","        <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>"]}],"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/__snapshots__\/WorstProjects-test.tsx.snap":[{"add":["58","                \"pathname\": \"\/portfolio\","],"delete":["58","                \"pathname\": \"\/dashboard\",","60","                  \"branch\": undefined,","157","                  \"branch\": undefined,","254","                  \"branch\": undefined,"]}]}},"b4b91a8cba33b1767c4374bb32d7ce40f5c31953":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["98","  duplicatedFiles?: { [ref: string]: DuplicatedFile };","104","  issueLocationsByLine: { [line: number]: LinearIssueLocation[] };","105","  issuePopup?: { issue: string; name: string };","117","  sources?: SourceLine[];","247","                displayDuplications: false,","248","                duplicatedFiles: undefined,","249","                duplications: undefined,","250","                duplicationsByLine: {},","251","                hasSourcesAfter: sources.length > LINES,","252","                highlightedLine: undefined,","253","                highlightedSymbols: [],","254","                issueLocationsByLine: locationsByLine(issues),","257","                linePopup: undefined,","261","                openIssuesByLine: {},","262","                issuePopup: undefined,","264","                sources: this.computeCoverageStatus(finalSources),"],"delete":["100","  duplicatedFiles?: { [ref: string]: DuplicatedFile };","106","  issueLocationsByLine: { [line: number]: LinearIssueLocation[] };","114","  issuePopup?: { issue: string; name: string };","116","  sources?: SourceLine[];","249","                issueLocationsByLine: locationsByLine(issues),","253","                hasSourcesAfter: sources.length > LINES,","254","                sources: this.computeCoverageStatus(finalSources),"]}]}},"ebc43c59ac25a3c75b9ce089f90e9eaac6c74637":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notification\/NotificationService.java":"MODIFY","\/dev\/null":"DELETE","it\/it-tests\/src\/test\/java\/it\/issue\/IssueNotificationsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationDaemonTest.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notification\/NotificationDaemon.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notification\/NotificationService.java":[{"add":["32","import org.sonar.api.ce.ComputeEngineSide;","42","public class NotificationService {","49","  public NotificationService(DbClient dbClient, NotificationDispatcher[] dispatchers) {","57","  public NotificationService(DbClient dbClient) {","58","    this(dbClient, new NotificationDispatcher[0]);"],"delete":["26","import com.google.common.util.concurrent.ThreadFactoryBuilder;","32","import java.util.concurrent.Executors;","33","import java.util.concurrent.ScheduledExecutorService;","34","import java.util.concurrent.TimeUnit;","36","import org.picocontainer.Startable;","37","import org.sonar.api.Properties;","38","import org.sonar.api.Property;","39","import org.sonar.api.config.Settings;","42","import org.sonar.api.ce.ComputeEngineSide;","48","@Properties({","49","  @Property(","50","    key = NotificationService.PROPERTY_DELAY,","51","    defaultValue = \"60\",","52","    name = \"Delay of notifications, in seconds\",","53","    project = false,","54","    global = false),","55","  @Property(","56","    key = NotificationService.PROPERTY_DELAY_BEFORE_REPORTING_STATUS,","57","    defaultValue = \"600\",","58","    name = \"Delay before reporting notification status, in seconds\",","59","    project = false,","60","    global = false)","61","})","64","public class NotificationService implements Startable {","65","  private static final String THREAD_NAME_PREFIX = \"sq-notification-service-\";","69","  public static final String PROPERTY_DELAY = \"sonar.notifications.delay\";","70","  public static final String PROPERTY_DELAY_BEFORE_REPORTING_STATUS = \"sonar.notifications.runningDelayBeforeReportingStatus\";","71","","72","  private final long delayInSeconds;","73","  private final long delayBeforeReportingStatusInSeconds;","74","  private final DefaultNotificationManager manager;","78","  private ScheduledExecutorService executorService;","79","  private boolean stopping = false;","80","  private final boolean disabled;","81","","82","  public NotificationService(Settings settings, DefaultNotificationManager manager, DbClient dbClient,","83","    NotificationDispatcher[] dispatchers) {","84","    this.disabled = \"ComputeEngineSettings\".equals(settings.getClass().getSimpleName());","85","    this.delayInSeconds = settings.getLong(PROPERTY_DELAY);","86","    this.delayBeforeReportingStatusInSeconds = settings.getLong(PROPERTY_DELAY_BEFORE_REPORTING_STATUS);","87","    this.manager = manager;","95","  public NotificationService(Settings settings, DefaultNotificationManager manager, DbClient dbClient) {","96","    this(settings, manager, dbClient, new NotificationDispatcher[0]);","97","  }","98","","99","  @Override","100","  public void start() {","101","    if (!disabled) {","102","      executorService =","103","          Executors.newSingleThreadScheduledExecutor(","104","              new ThreadFactoryBuilder()","105","                  .setNameFormat(THREAD_NAME_PREFIX + \"%d\")","106","                  .setPriority(Thread.MIN_PRIORITY)","107","                  .build());","108","      executorService.scheduleWithFixedDelay(new Runnable() {","109","        @Override","110","        public void run() {","111","          try {","112","            processQueue();","113","          } catch (Exception e) {","114","            LOG.error(\"Error in NotificationService\", e);","115","          }","116","        }","117","      }, 0, delayInSeconds, TimeUnit.SECONDS);","118","      LOG.info(\"Notification service started (delay {} sec.)\", delayInSeconds);","119","    }","120","  }","121","","122","  @Override","123","  public void stop() {","124","    if (!disabled) {","125","      try {","126","        stopping = true;","127","        executorService.shutdown();","128","        executorService.awaitTermination(5, TimeUnit.SECONDS);","129","      } catch (InterruptedException e) {","130","        LOG.error(\"Error during stop of notification service\", e);","131","      }","132","      LOG.info(\"Notification service stopped\");","133","    }","134","  }","135","","136","  @VisibleForTesting","137","  synchronized void processQueue() {","138","    long start = now();","139","    long lastLog = start;","140","    long notifSentCount = 0;","141","","142","    Notification notifToSend = manager.getFromQueue();","143","    while (notifToSend != null) {","144","      deliver(notifToSend);","145","      notifSentCount++;","146","      if (stopping) {","147","        break;","148","      }","149","      long now = now();","150","      if (now - lastLog > delayBeforeReportingStatusInSeconds * 1000) {","151","        long remainingNotifCount = manager.count();","152","        lastLog = now;","153","        long spentTimeInMinutes = (now - start) \/ (60 * 1000);","154","        log(notifSentCount, remainingNotifCount, spentTimeInMinutes);","155","      }","156","      notifToSend = manager.getFromQueue();","157","    }","158","  }","159","","160","  @VisibleForTesting","161","  void log(long notifSentCount, long remainingNotifCount, long spentTimeInMinutes) {","162","    LOG.info(\"{} notifications sent during the past {} minutes and {} still waiting to be sent\",","163","      new Object[] {notifSentCount, spentTimeInMinutes, remainingNotifCount});"]}],"\/dev\/null":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/issue\/IssueNotificationsTest.java":[{"add":["200","    Thread.sleep(10_000L);"],"delete":["200","    Thread.sleep(10000);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":[{"add":["137","import org.sonar.server.notification.NotificationDaemon;","581","      NotificationDaemon.class,"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/notification\/NotificationDaemonTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notification\/NotificationDaemon.java":[{"add":[],"delete":[]}]}},"9d6442856e3b66df0c02831c8108780d4d738bfe":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/user\/GroupDaoTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest\/customers.json":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupMapper.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupDao.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMapper.xml":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/SearchAction.java":[{"add":["96","      dbClient.closeSession(dbSession);"],"delete":["38","import org.sonar.db.MyBatis;","97","      MyBatis.closeQuietly(dbSession);"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/user\/GroupDaoTest.java":[{"add":["22","import java.util.List;","28","import org.sonar.db.DbClient;","36","import static org.sonar.db.user.GroupTesting.newGroupDto;","42","  public DbTester db = DbTester.create(System2.INSTANCE);","44","  DbSession dbSession = db.getSession();","45","  DbClient dbClient = db.getDbClient();","46","  System2 system2 = mock(System2.class);","48","  GroupDao underTest = new GroupDao(system2);","52","    db.prepareDbUnit(getClass(), \"select_by_key.xml\");","54","    GroupDto group = underTest.selectOrFailByName(dbSession, \"sonar-users\");","55","","66","    db.prepareDbUnit(getClass(), \"select_by_key.xml\");","68","    GroupDto group = underTest.selectOrFailById(dbSession, 1L);","69","","80","    db.prepareDbUnit(getClass(), \"find_by_user_login.xml\");","82","    assertThat(underTest.selectByUserLogin(dbSession, \"john\")).hasSize(2);","83","    assertThat(underTest.selectByUserLogin(dbSession, \"max\")).isEmpty();","89","    db.prepareDbUnit(getClass(), \"empty.xml\");","95","    underTest.insert(dbSession, dto);","96","    dbSession.commit();","98","    db.assertDbUnit(getClass(), \"insert-result.xml\", \"groups\");","104","    db.prepareDbUnit(getClass(), \"update.xml\");","110","    underTest.update(dbSession, dto);","111","    dbSession.commit();","113","    db.assertDbUnit(getClass(), \"update-result.xml\", \"groups\");","118","    db.prepareDbUnit(getClass(), \"select_by_query.xml\");","125","    assertThat(underTest.selectByQuery(dbSession, null, 0, 10))","130","    assertThat(underTest.selectByQuery(dbSession, \"\", 0, 10))","135","    assertThat(underTest.selectByQuery(dbSession, \"sonar\", 0, 10))","140","    assertThat(underTest.selectByQuery(dbSession, null, 0, 3))","142","    assertThat(underTest.selectByQuery(dbSession, null, 3, 3))","144","    assertThat(underTest.selectByQuery(dbSession, null, 6, 3)).isEmpty();","145","    assertThat(underTest.selectByQuery(dbSession, null, 0, 5))","147","    assertThat(underTest.selectByQuery(dbSession, null, 5, 5)).isEmpty();","148","  }","149","","150","  @Test","151","  public void select_by_query_with_special_characters() {","152","    String groupNameWithSpecialCharacters = \"group%_%\/name\";","153","    underTest.insert(dbSession, newGroupDto().setName(groupNameWithSpecialCharacters));","154","    db.commit();","155","","156","    List<GroupDto> result = underTest.selectByQuery(dbSession, \"roup%_%\/nam\", 0, 10);","157","    int resultCount = underTest.countByQuery(dbSession, \"roup%_%\/nam\");","158","","159","    assertThat(result).hasSize(1);","160","    assertThat(result.get(0).getName()).isEqualTo(groupNameWithSpecialCharacters);","161","    assertThat(resultCount).isEqualTo(1);","166","    db.prepareDbUnit(getClass(), \"select_by_query.xml\");","169","    assertThat(underTest.countByQuery(dbSession, null)).isEqualTo(5);","172","    assertThat(underTest.countByQuery(dbSession, \"\")).isEqualTo(5);","175","    assertThat(underTest.countByQuery(dbSession, \"sonar\")).isEqualTo(2);","180","    db.prepareDbUnit(getClass(), \"select_by_key.xml\");","182","    GroupDao groupDao = underTest;","183","    groupDao.deleteById(dbSession, 1L);","184","    dbSession.commit();","186","    assertThat(groupDao.countByQuery(dbSession, null)).isZero();"],"delete":["22","import org.junit.After;","23","import org.junit.Before;","41","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","43","  GroupDao dao;","44","  DbSession session;","45","  System2 system2;","47","  @Before","48","  public void setUp() {","49","    dbTester.truncateTables();","50","    this.session = dbTester.myBatis().openSession(false);","51","    this.system2 = mock(System2.class);","52","    this.dao = new GroupDao(system2);","53","  }","54","","55","  @After","56","  public void tearDown() {","57","    session.close();","58","  }","62","    dbTester.prepareDbUnit(getClass(), \"select_by_key.xml\");","64","    GroupDto group = new GroupDao(system2).selectOrFailByName(session, \"sonar-users\");","75","    dbTester.prepareDbUnit(getClass(), \"select_by_key.xml\");","77","    GroupDto group = new GroupDao(system2).selectOrFailById(session, 1L);","88","    dbTester.prepareDbUnit(getClass(), \"find_by_user_login.xml\");","90","    assertThat(dao.selectByUserLogin(session, \"john\")).hasSize(2);","91","    assertThat(dao.selectByUserLogin(session, \"max\")).isEmpty();","97","","98","    dbTester.prepareDbUnit(getClass(), \"empty.xml\");","99","","105","    dao.insert(session, dto);","106","    session.commit();","108","    dbTester.assertDbUnit(getClass(), \"insert-result.xml\", \"groups\");","114","","115","    dbTester.prepareDbUnit(getClass(), \"update.xml\");","116","","122","    dao.update(session, dto);","123","    session.commit();","125","    dbTester.assertDbUnit(getClass(), \"update-result.xml\", \"groups\");","130","    dbTester.prepareDbUnit(getClass(), \"select_by_query.xml\");","137","    assertThat(new GroupDao(system2).selectByQuery(session, null, 0, 10))","142","    assertThat(new GroupDao(system2).selectByQuery(session, \"\", 0, 10))","147","    assertThat(new GroupDao(system2).selectByQuery(session, \"sonar\", 0, 10))","152","    assertThat(new GroupDao(system2).selectByQuery(session, null, 0, 3))","154","    assertThat(new GroupDao(system2).selectByQuery(session, null, 3, 3))","156","    assertThat(new GroupDao(system2).selectByQuery(session, null, 6, 3)).isEmpty();","157","    assertThat(new GroupDao(system2).selectByQuery(session, null, 0, 5))","159","    assertThat(new GroupDao(system2).selectByQuery(session, null, 5, 5)).isEmpty();","164","    dbTester.prepareDbUnit(getClass(), \"select_by_query.xml\");","167","    assertThat(new GroupDao(system2).countByQuery(session, null)).isEqualTo(5);","170","    assertThat(new GroupDao(system2).countByQuery(session, \"\")).isEqualTo(5);","173","    assertThat(new GroupDao(system2).countByQuery(session, \"sonar\")).isEqualTo(2);","178","    dbTester.prepareDbUnit(getClass(), \"select_by_key.xml\");","180","    GroupDao groupDao = new GroupDao(system2);","181","    groupDao.deleteById(session, 1L);","182","    session.commit();","184","    assertThat(groupDao.countByQuery(session, null)).isZero();"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest\/customers.json":[{"add":["5","    {\"name\": \"customer%_%\/1\", \"description\": \"Customer%_%\/1\", \"membersCount\": 0},","6","    {\"name\": \"customer%_%\/2\", \"description\": \"Customer%_%\/2\", \"membersCount\": 0},","7","    {\"name\": \"customer%_%\/3\", \"description\": \"Customer%_%\/3\", \"membersCount\": 0}"],"delete":["5","    {\"name\": \"customer1\", \"description\": \"Customer1\", \"membersCount\": 0},","6","    {\"name\": \"customer2\", \"description\": \"Customer2\", \"membersCount\": 0},","7","    {\"name\": \"customer3\", \"description\": \"Customer3\", \"membersCount\": 0}"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupMapper.java":[{"add":["24","import org.apache.ibatis.annotations.Param;","41","  List<GroupDto> selectByQuery(@Param(\"query\") String query, RowBounds rowBounds);","43","  int countByQuery(@Param(\"query\") String query);"],"delete":["40","  List<GroupDto> selectByQuery(String query, RowBounds rowBounds);","42","  int countByQuery(String query);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/GroupDao.java":[{"add":["24","import java.util.Locale;","31","import org.sonar.db.DatabaseUtils;","34","import org.sonar.db.WildcardPosition;","97","  public List<GroupDto> selectByUserLogin(DbSession session, String login) {","101","  @CheckForNull","102","  private static String groupSearchToSql(@Nullable String query) {","103","    if (query == null) {","104","      return null;","106","","107","    String upperCasedNameQuery = StringUtils.upperCase(query, Locale.ENGLISH);","108","    return DatabaseUtils.buildLikeValue(upperCasedNameQuery, WildcardPosition.BEFORE_AND_AFTER);"],"delete":["94","  public List<GroupDto> selectByUserLogin(DbSession session, String login){","98","  private String groupSearchToSql(@Nullable String query) {","99","    String sql = SQL_WILDCARD;","100","    if (query != null) {","101","      sql = StringUtils.replace(StringUtils.upperCase(query), SQL_WILDCARD, \"\/%\");","102","      sql = StringUtils.replace(sql, \"_\", \"\/_\");","103","      sql = SQL_WILDCARD + sql + SQL_WILDCARD;","105","    return sql;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMapper.xml":[{"add":["67","    <where>","68","      <if test=\"query!=null\">","69","        UPPER(g.name) LIKE #{query} ESCAPE '\/'","70","      <\/if>","71","    <\/where>","78","    <where>","79","      <if test=\"query!=null\">","80","        UPPER(g.name) LIKE #{query} ESCAPE '\/'","81","      <\/if>","82","    <\/where>"],"delete":["67","    WHERE UPPER(g.name) LIKE #{query}","74","    WHERE UPPER(g.name) LIKE #{query}"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/SearchActionTest.java":[{"add":["40","import static org.sonar.db.user.GroupTesting.newGroupDto;","92","    insertGroups(\"users\", \"admins\", \"customer%_%\/1\", \"customer%_%\/2\", \"customer%_%\/3\");","95","    newRequest().setParam(Param.TEXT_QUERY, \"tomer%_%\/\").execute().assertJson(getClass(), \"customers.json\");","153","      groupDao.insert(dbSession, newGroupDto()"],"delete":["33","import org.sonar.db.user.GroupDto;","92","    insertGroups(\"users\", \"admins\", \"customer1\", \"customer2\", \"customer3\");","95","    newRequest().setParam(Param.TEXT_QUERY, \"custom\").execute().assertJson(getClass(), \"customers.json\");","153","      groupDao.insert(dbSession, new GroupDto()"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":[],"delete":["83","  \/**","84","   * ","85","   *\/"]}]}},"29cdfd46a27145d44d14e5862be245aa9baf61b2":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentDeletePopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentDeletePopup-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":[{"add":["3","<DropdownOverlay","4","  placement=\"bottom-right\"","5",">"],"delete":["3","<DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":[{"add":["26","import { PopupPlacement } from '..\/..\/ui\/popups';","107","                    placement={PopupPlacement.BottomRight}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.tsx.snap":[{"add":["69","            placement=\"bottom-right\"","194","            placement=\"bottom-right\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentDeletePopup.tsx":[{"add":["23","import { PopupPlacement } from '..\/..\/ui\/popups';","31","    <DropdownOverlay placement={PopupPlacement.BottomRight}>"],"delete":["30","    <DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentDeletePopup-test.tsx.snap":[{"add":["3","<DropdownOverlay","4","  placement=\"bottom-right\"","5",">"],"delete":["3","<DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":[{"add":["24","import { PopupPlacement } from '..\/..\/ui\/popups';","31","  placement?: PopupPlacement;","73","      <DropdownOverlay placement={this.props.placement}>"],"delete":["30","  popupPosition?: {};","72","      <DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":[{"add":["26","import { PopupPlacement } from '..\/..\/ui\/popups';","74","      <DropdownOverlay placement={PopupPlacement.BottomRight}>"],"delete":["73","      <DropdownOverlay>"]}]}},"434c61ad74dc6ddeeb21477a8754064db95b4b5c":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/LocalizationContainer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/LocalizationContainer.tsx":[{"add":["49","    \/\/ No need to load english (default) bundle, it's coming with react-intl","50","    if (langToLoad !== DEFAULT_LANGUAGE) {","52","        intlBundle => this.updateLang(langToLoad, intlBundle),","53","        this.setDefaultLang","56","      this.setDefaultLang();","57","    }","58","  };","59","","60","  setDefaultLang = () => {","61","    if (this.mounted) {","62","      this.setState({ loading: false, lang: DEFAULT_LANGUAGE });"],"delete":["49","","50","    \/\/ No need to load english bundle, it's coming wiht react-intl, use english if it fails","51","    if (langToLoad !== 'en') {","53","        i => this.updateLang(langToLoad, i),","54","        () => {}","57","      this.setState({ loading: false, lang: langToLoad });"]}]}},"fceb5ee46cf3abbf80eb8e40f96422c262953540":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/MeasuresOverlay-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/MeasuresOverlay.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeader-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/styles.css":[{"add":["134",".measures-viewer {","135","  display: flex;","136","  margin: 0 calc(-1 * var(--gridSize));","137","}","138","","139",".measures-viewer + .measures-viewer {","140","  margin-top: var(--gridSize);","141","}","142","","143",".measures-viewer-header {","144","  font-size: var(--smallFontSize);","145","}","146","","147",".measures-viewer-secondary .measures-viewer-card {","148","  background-color: var(--barBackgroundColor);","149","}","150","","151",".measures-viewer-section {","152","  flex: 1;","153","}","154","","155",".measures-viewer-section-limited {","156","  max-width: 25%;","157","}","158","","159",".measures-viewer-card {","160","  margin: calc(2 * var(--gridSize)) var(--gridSize);","161","  padding: var(--gridSize);","162","  border: 1px solid var(--barBorderColor);","163","  background-color: #fff;","164","}","165","","167","  margin-top: calc(2 * var(--gridSize));","168","  padding-top: calc(2 * var(--gridSize));","175","  width: calc(var(--gridSize) * 10);","176","  margin-right: calc(var(--gridSize) * 3);","180",".measure {","181","  line-height: 1.34;","184",".measure-one-line {","185","  display: flex;","186","  justify-content: space-between;","187","}","188","","189",".measure-one-line .measure-name {","190","  display: inline;","210","  margin-top: calc(var(--gridSize) \/ 2);","211","  margin-bottom: var(--gridSize);","212","  font-size: var(--bigFontSize);","215",".measure-big .measure-value,","217","  font-size: var(--hugeFontSize);","221","  margin-left: calc(var(--gridSize) * 3);"],"delete":["41",".source-viewer-header:before,","42",".source-viewer-header:after {","43","  display: table;","44","  content: '';","45","  line-height: 0;","46","}","47","","48",".source-viewer-header:after {","49","  clear: both;","50","}","51","","52",".source-viewer-header-bar + .source-viewer-header-bar {","53","  border-top: 1px solid var(--barBorderColor);","54","}","55","","56",".source-viewer-header-component {","57","  padding-top: 4px;","58","}","59","","60",".source-viewer-header-component-project {","61","  font-size: var(--smallFontSize);","62","}","63","","64",".source-viewer-header-component-name {","65","  font-size: var(--smallFontSize);","66","}","67","","68",".source-viewer-header-favorite {","69","  position: relative;","70","  top: -2px;","71","  margin-left: 4px;","72","  border-bottom: none;","73","}","74","","75",".source-viewer-header-measures-scope {","76","  position: relative;","77","  float: left;","78","}","79","","140",".source-viewer-measures-overlay {","141","  width: 1100px;","142","  left: 50%;","143","  right: auto;","144","  margin-left: -550px;","145","  padding: 20px 10px;","146","  background-color: var(--barBackgroundColor);","147","}","148","","149",".source-viewer-measures-overlay .modal-foot {","150","  width: 1100px;","151","  left: 50%;","152","  right: auto;","153","  margin-left: -550px;","154","}","155","","156",".source-viewer-measures-component {","157","  float: none;","158","  margin: 0 10px 30px;","159","}","160","","161",".source-viewer-measures-modal {","162","  background-color: var(--barBackgroundColor);","163","}","164","","165",".source-viewer-measures {","166","  margin: 0 -10px;","167","  background-color: var(--barBackgroundColor);","168","}","169","","170",".source-viewer-measures:before,","171",".source-viewer-measures:after {","172","  display: table;","173","  content: '';","174","  line-height: 0;","175","}","176","","177",".source-viewer-measures:after {","178","  clear: both;","179","}","180","","181",".source-viewer-measures + .source-viewer-measures {","182","  margin-top: 40px;","183","}","184","","185",".source-viewer-measures-secondary .source-viewer-measures-card {","186","  background-color: rgba(255, 255, 255, 0.6);","187","}","188","","189",".source-viewer-measures-section {","190","  float: left;","191","  width: 25%;","192","  margin: -20px 0;","193","}","194","","195",".source-viewer-measures-section-big {","196","  width: 50%;","197","}","198","","199",".source-viewer-measures-section-full {","200","  width: 100%;","201","}","202","","203",".source-viewer-measures-section + .source-viewer-measures-section-full {","204","  margin-top: 20px;","205","}","206","","207",".source-viewer-measures-card {","208","  margin: 20px 10px;","209","  padding: 10px;","210","  border: 1px solid var(--barBorderColor);","211","  background-color: #fff;","212","}","213","","214",".source-viewer-measures-card-overflow {","215","  overflow: auto;","216","}","217","","218",".source-viewer-measures-card-fixed-height {","219","  max-height: 36vh;","220","  overflow-y: scroll;","221","}","222","","223",".source-viewer-tests-list {","224","  width: 100%;","225","  font-size: var(--baseFontSize);","226","}","227","","228",".source-viewer-test-status,","229",".source-viewer-test-duration,","230",".source-viewer-test-covered-lines {","231","  width: 1px;","232","}","233","","234",".source-viewer-test-status,","235",".source-viewer-test-duration,","236",".source-viewer-test-covered-lines,","237",".source-viewer-test-covered-name {","238","  vertical-align: middle;","239","  padding: 3px;","240","}","241","","242",".source-viewer-test-name {","243","  padding-left: 10px;","244","  word-break: break-all;","245","}","246","","247",".source-viewer-test-covered-lines {","248","  text-align: right;","249","}","250","","251",".source-viewer-issue-location {","252","  max-width: 200px;","253","  margin-right: 10px;","254","  overflow: hidden;","255","  text-overflow: ellipsis;","256","  white-space: nowrap;","257","}","258","","259",".source-viewer-flow-location + .source-viewer-flow-location {","260","  z-index: 504;","261","}","262","","263",".source-line-issue-locations {","264","  float: right;","265","  margin-right: -10px;","266","}","267","","268",".source-line-issue-locations:empty {","269","  display: none;","270","}","271","","306","  margin-top: 15px;","307","  padding-top: 15px;","314","  width: 70px;","315","  margin-right: 20px;","319",".measures-chart .rating {","320","  font-size: 32px;","323",".measure {","324","  line-height: 1.3333333333333;","344","  margin-top: 2px;","345","  font-size: 15px;","346","  font-weight: 400;","349",".measure-big .measure-value {","350","  font-size: 22px;","351","}","352","","354","  font-size: 22px;","358","  margin-left: 20px;","359","}","360","","361",".measure-one-line:before,","362",".measure-one-line:after {","363","  display: table;","364","  content: '';","365","  line-height: 0;","366","}","367","","368",".measure-one-line:after {","369","  clear: both;","370","}","371","","372",".measure-one-line .measure-name {","373","  float: left;","374","}","375","","376",".measure-one-line .measure-value {","377","  float: right;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/MeasuresOverlay-test.tsx.snap":[{"add":["4","  contentLabel=\"component_viewer.file_measures\"","9","    className=\"modal-head\"","10","  >","11","    <h2>","12","      component_viewer.file_measures","13","    <\/h2>","14","  <\/div>","15","  <div","16","    className=\"modal-body modal-container\"","19","      className=\"measures-viewer-header big-spacer-bottom\"","21","      <div>","48","        className=\"display-flex-center little-spacer-top\"","58","      className=\"measures-viewer\"","61","        className=\"measures-viewer-section\"","64","          className=\"measures-viewer-card\"","69","            <MeasuresOverlayMeasure","70","              key=\"lines\"","71","              measure={","72","                Object {","73","                  \"metric\": Object {","74","                    \"domain\": \"Size\",","75","                    \"key\": \"lines\",","76","                    \"type\": \"INT\",","77","                  },","78","                  \"value\": \"18\",","80","              }","81","            \/>","82","            <MeasuresOverlayMeasure","83","              key=\"ncloc\"","84","              measure={","85","                Object {","86","                  \"metric\": Object {","87","                    \"domain\": \"Size\",","88","                    \"key\": \"ncloc\",","89","                    \"type\": \"INT\",","90","                  },","91","                  \"value\": \"8\",","93","              }","94","            \/>","95","            <MeasuresOverlayMeasure","96","              key=\"comment_lines\"","97","              measure={","98","                Object {","99","                  \"metric\": Object {","100","                    \"domain\": \"Size\",","101","                    \"key\": \"comment_lines\",","102","                    \"type\": \"INT\",","103","                  },","104","                  \"value\": \"2\",","106","              }","107","            \/>","108","            <MeasuresOverlayMeasure","109","              key=\"comment_lines_density\"","110","              measure={","111","                Object {","112","                  \"metric\": Object {","113","                    \"domain\": \"Size\",","114","                    \"key\": \"comment_lines_density\",","115","                    \"type\": \"PERCENT\",","116","                  },","117","                  \"value\": \"20.0\",","119","              }","120","            \/>","125","            <MeasuresOverlayMeasure","126","              key=\"cognitive_complexity\"","127","              measure={","128","                Object {","129","                  \"metric\": Object {","130","                    \"domain\": \"Complexity\",","131","                    \"key\": \"cognitive_complexity\",","132","                    \"type\": \"INT\",","133","                  },","134","                  \"value\": \"0\",","136","              }","137","            \/>","138","            <MeasuresOverlayMeasure","139","              key=\"complexity\"","140","              measure={","141","                Object {","142","                  \"metric\": Object {","143","                    \"domain\": \"Complexity\",","144","                    \"key\": \"complexity\",","145","                    \"type\": \"INT\",","146","                  },","147","                  \"value\": \"1\",","149","              }","150","            \/>","155","        className=\"measures-viewer-section\"","158","          className=\"measures-viewer-card\"","206","              className=\"measure measure-one-line\"","207","              key=\"BUG\"","209","              <span","210","                className=\"measure-name\"","212","                <IssueTypeIcon","213","                  className=\"little-spacer-right\"","214","                  query=\"BUG\"","215","                \/>","216","                issue.type.BUG","217","              <\/span>","218","              <span","219","                className=\"measure-value\"","221","                1","222","              <\/span>","223","            <\/div>","224","            <div","225","              className=\"measure measure-one-line\"","226","              key=\"VULNERABILITY\"","227","            >","228","              <span","229","                className=\"measure-name\"","231","                <IssueTypeIcon","232","                  className=\"little-spacer-right\"","233","                  query=\"VULNERABILITY\"","234","                \/>","235","                issue.type.VULNERABILITY","236","              <\/span>","237","              <span","238","                className=\"measure-value\"","239","              >","240","                0","241","              <\/span>","242","            <\/div>","243","            <div","244","              className=\"measure measure-one-line\"","245","              key=\"CODE_SMELL\"","246","            >","247","              <span","248","                className=\"measure-name\"","249","              >","250","                <IssueTypeIcon","251","                  className=\"little-spacer-right\"","252","                  query=\"CODE_SMELL\"","253","                \/>","254","                issue.type.CODE_SMELL","255","              <\/span>","256","              <span","257","                className=\"measure-value\"","258","              >","259","                2","260","              <\/span>","267","              className=\"measure measure-one-line\"","268","              key=\"BLOCKER\"","270","              <span","271","                className=\"measure-name\"","273","                <SeverityHelper","274","                  severity=\"BLOCKER\"","275","                \/>","276","              <\/span>","277","              <span","278","                className=\"measure-value\"","280","                5","281","              <\/span>","282","            <\/div>","283","            <div","284","              className=\"measure measure-one-line\"","285","              key=\"CRITICAL\"","286","            >","287","              <span","288","                className=\"measure-name\"","290","                <SeverityHelper","291","                  severity=\"CRITICAL\"","292","                \/>","293","              <\/span>","294","              <span","295","                className=\"measure-value\"","297","                4","298","              <\/span>","299","            <\/div>","300","            <div","301","              className=\"measure measure-one-line\"","302","              key=\"MAJOR\"","303","            >","304","              <span","305","                className=\"measure-name\"","307","                <SeverityHelper","308","                  severity=\"MAJOR\"","309","                \/>","310","              <\/span>","311","              <span","312","                className=\"measure-value\"","313","              >","314","                1","315","              <\/span>","316","            <\/div>","317","            <div","318","              className=\"measure measure-one-line\"","319","              key=\"MINOR\"","320","            >","321","              <span","322","                className=\"measure-name\"","323","              >","324","                <SeverityHelper","325","                  severity=\"MINOR\"","326","                \/>","327","              <\/span>","328","              <span","329","                className=\"measure-value\"","330","              >","331","                3","332","              <\/span>","333","            <\/div>","334","            <div","335","              className=\"measure measure-one-line\"","336","              key=\"INFO\"","337","            >","338","              <span","339","                className=\"measure-name\"","340","              >","341","                <SeverityHelper","342","                  severity=\"INFO\"","343","                \/>","344","              <\/span>","345","              <span","346","                className=\"measure-value\"","347","              >","348","                2","349","              <\/span>","356","              className=\"measure measure-one-line\"","357","              key=\"bad-practice\"","359","              <span","360","                className=\"measure-name\"","362","                <TagsIcon","363","                  className=\"little-spacer-right\"","364","                \/>","365","                bad-practice","366","              <\/span>","367","              <span","368","                className=\"measure-value\"","370","                1","371","              <\/span>","372","            <\/div>","373","            <div","374","              className=\"measure measure-one-line\"","375","              key=\"cert\"","376","            >","377","              <span","378","                className=\"measure-name\"","380","                <TagsIcon","381","                  className=\"little-spacer-right\"","382","                \/>","383","                cert","384","              <\/span>","385","              <span","386","                className=\"measure-value\"","387","              >","388","                3","389","              <\/span>","390","            <\/div>","391","            <div","392","              className=\"measure measure-one-line\"","393","              key=\"design\"","394","            >","395","              <span","396","                className=\"measure-name\"","397","              >","398","                <TagsIcon","399","                  className=\"little-spacer-right\"","400","                \/>","401","                design","402","              <\/span>","403","              <span","404","                className=\"measure-value\"","405","              >","406","                1","407","              <\/span>","413","        className=\"measures-viewer-section\"","416","          className=\"measures-viewer-card\"","452","            <MeasuresOverlayMeasure","453","              key=\"uncovered_lines\"","454","              measure={","455","                Object {","456","                  \"metric\": Object {","457","                    \"domain\": \"Coverage\",","458","                    \"key\": \"uncovered_lines\",","459","                    \"type\": \"INT\",","460","                  },","461","                  \"value\": \"1\",","463","              }","464","            \/>","465","            <MeasuresOverlayMeasure","466","              key=\"lines_to_cover\"","467","              measure={","468","                Object {","469","                  \"metric\": Object {","470","                    \"domain\": \"Coverage\",","471","                    \"key\": \"lines_to_cover\",","472","                    \"type\": \"INT\",","473","                  },","474","                  \"value\": \"4\",","476","              }","477","            \/>","482","        className=\"measures-viewer-section\"","485","          className=\"measures-viewer-card\"","522","            <MeasuresOverlayMeasure","523","              key=\"duplicated_blocks\"","524","              measure={","525","                Object {","526","                  \"metric\": Object {","527","                    \"domain\": \"Duplications\",","528","                    \"key\": \"duplicated_blocks\",","529","                    \"type\": \"INT\",","530","                  },","531","                  \"value\": \"3\",","533","              }","534","            \/>","535","            <MeasuresOverlayMeasure","536","              key=\"duplicated_lines\"","537","              measure={","538","                Object {","539","                  \"metric\": Object {","540","                    \"domain\": \"Duplications\",","541","                    \"key\": \"duplicated_lines\",","542","                    \"type\": \"INT\",","543","                  },","544","                  \"value\": \"0\",","546","              }","547","            \/>","578","  contentLabel=\"component_viewer.file_measures\"","583","    className=\"modal-head\"","584","  >","585","    <h2>","586","      component_viewer.file_measures","587","    <\/h2>","588","  <\/div>","589","  <div","590","    className=\"modal-body modal-container\"","593","      className=\"measures-viewer-header big-spacer-bottom\"","595","      <div>","622","        className=\"display-flex-center little-spacer-top\"","632","      className=\"measures-viewer\"","635","        className=\"measures-viewer-section\"","638","          className=\"measures-viewer-card\"","643","            <MeasuresOverlayMeasure","644","              key=\"lines\"","645","              measure={","646","                Object {","647","                  \"metric\": Object {","648","                    \"domain\": \"Size\",","649","                    \"key\": \"lines\",","650","                    \"type\": \"INT\",","651","                  },","652","                  \"value\": \"18\",","654","              }","655","            \/>","656","            <MeasuresOverlayMeasure","657","              key=\"ncloc\"","658","              measure={","659","                Object {","660","                  \"metric\": Object {","661","                    \"domain\": \"Size\",","662","                    \"key\": \"ncloc\",","663","                    \"type\": \"INT\",","664","                  },","665","                  \"value\": \"8\",","667","              }","668","            \/>","669","            <MeasuresOverlayMeasure","670","              key=\"comment_lines\"","671","              measure={","672","                Object {","673","                  \"metric\": Object {","674","                    \"domain\": \"Size\",","675","                    \"key\": \"comment_lines\",","676","                    \"type\": \"INT\",","677","                  },","678","                  \"value\": \"2\",","680","              }","681","            \/>","682","            <MeasuresOverlayMeasure","683","              key=\"comment_lines_density\"","684","              measure={","685","                Object {","686","                  \"metric\": Object {","687","                    \"domain\": \"Size\",","688","                    \"key\": \"comment_lines_density\",","689","                    \"type\": \"PERCENT\",","690","                  },","691","                  \"value\": \"20.0\",","693","              }","694","            \/>","699","            <MeasuresOverlayMeasure","700","              key=\"cognitive_complexity\"","701","              measure={","702","                Object {","703","                  \"metric\": Object {","704","                    \"domain\": \"Complexity\",","705","                    \"key\": \"cognitive_complexity\",","706","                    \"type\": \"INT\",","707","                  },","708","                  \"value\": \"0\",","710","              }","711","            \/>","712","            <MeasuresOverlayMeasure","713","              key=\"complexity\"","714","              measure={","715","                Object {","716","                  \"metric\": Object {","717","                    \"domain\": \"Complexity\",","718","                    \"key\": \"complexity\",","719","                    \"type\": \"INT\",","720","                  },","721","                  \"value\": \"1\",","723","              }","724","            \/>","729","        className=\"measures-viewer-section\"","732","          className=\"measures-viewer-card\"","780","              className=\"measure measure-one-line\"","781","              key=\"BUG\"","783","              <span","784","                className=\"measure-name\"","786","                <IssueTypeIcon","787","                  className=\"little-spacer-right\"","788","                  query=\"BUG\"","789","                \/>","790","                issue.type.BUG","791","              <\/span>","792","              <span","793","                className=\"measure-value\"","795","                1","796","              <\/span>","797","            <\/div>","798","            <div","799","              className=\"measure measure-one-line\"","800","              key=\"VULNERABILITY\"","801","            >","802","              <span","803","                className=\"measure-name\"","805","                <IssueTypeIcon","806","                  className=\"little-spacer-right\"","807","                  query=\"VULNERABILITY\"","808","                \/>","809","                issue.type.VULNERABILITY","810","              <\/span>","811","              <span","812","                className=\"measure-value\"","813","              >","814","                0","815","              <\/span>","816","            <\/div>","817","            <div","818","              className=\"measure measure-one-line\"","819","              key=\"CODE_SMELL\"","820","            >","821","              <span","822","                className=\"measure-name\"","823","              >","824","                <IssueTypeIcon","825","                  className=\"little-spacer-right\"","826","                  query=\"CODE_SMELL\"","827","                \/>","828","                issue.type.CODE_SMELL","829","              <\/span>","830","              <span","831","                className=\"measure-value\"","832","              >","833","                2","834","              <\/span>","841","              className=\"measure measure-one-line\"","842","              key=\"BLOCKER\"","844","              <span","845","                className=\"measure-name\"","847","                <SeverityHelper","848","                  severity=\"BLOCKER\"","849","                \/>","850","              <\/span>","851","              <span","852","                className=\"measure-value\"","854","                5","855","              <\/span>","856","            <\/div>","857","            <div","858","              className=\"measure measure-one-line\"","859","              key=\"CRITICAL\"","860","            >","861","              <span","862","                className=\"measure-name\"","864","                <SeverityHelper","865","                  severity=\"CRITICAL\"","866","                \/>","867","              <\/span>","868","              <span","869","                className=\"measure-value\"","871","                4","872","              <\/span>","873","            <\/div>","874","            <div","875","              className=\"measure measure-one-line\"","876","              key=\"MAJOR\"","877","            >","878","              <span","879","                className=\"measure-name\"","881","                <SeverityHelper","882","                  severity=\"MAJOR\"","883","                \/>","884","              <\/span>","885","              <span","886","                className=\"measure-value\"","887","              >","888","                1","889","              <\/span>","890","            <\/div>","891","            <div","892","              className=\"measure measure-one-line\"","893","              key=\"MINOR\"","894","            >","895","              <span","896","                className=\"measure-name\"","897","              >","898","                <SeverityHelper","899","                  severity=\"MINOR\"","900","                \/>","901","              <\/span>","902","              <span","903","                className=\"measure-value\"","904","              >","905","                3","906","              <\/span>","907","            <\/div>","908","            <div","909","              className=\"measure measure-one-line\"","910","              key=\"INFO\"","911","            >","912","              <span","913","                className=\"measure-name\"","914","              >","915","                <SeverityHelper","916","                  severity=\"INFO\"","917","                \/>","918","              <\/span>","919","              <span","920","                className=\"measure-value\"","921","              >","922","                2","923","              <\/span>","930","              className=\"measure measure-one-line\"","931","              key=\"bad-practice\"","933","              <span","934","                className=\"measure-name\"","936","                <TagsIcon","937","                  className=\"little-spacer-right\"","938","                \/>","939","                bad-practice","940","              <\/span>","941","              <span","942","                className=\"measure-value\"","944","                1","945","              <\/span>","946","            <\/div>","947","            <div","948","              className=\"measure measure-one-line\"","949","              key=\"cert\"","950","            >","951","              <span","952","                className=\"measure-name\"","954","                <TagsIcon","955","                  className=\"little-spacer-right\"","956","                \/>","957","                cert","958","              <\/span>","959","              <span","960","                className=\"measure-value\"","961","              >","962","                3","963","              <\/span>","964","            <\/div>","965","            <div","966","              className=\"measure measure-one-line\"","967","              key=\"design\"","968","            >","969","              <span","970","                className=\"measure-name\"","971","              >","972","                <TagsIcon","973","                  className=\"little-spacer-right\"","974","                \/>","975","                design","976","              <\/span>","977","              <span","978","                className=\"measure-value\"","979","              >","980","                1","981","              <\/span>","987","        className=\"measures-viewer-section\"","990","          className=\"measures-viewer-card\"","1026","            <MeasuresOverlayMeasure","1027","              key=\"uncovered_lines\"","1028","              measure={","1029","                Object {","1030","                  \"metric\": Object {","1031","                    \"domain\": \"Coverage\",","1032","                    \"key\": \"uncovered_lines\",","1033","                    \"type\": \"INT\",","1034","                  },","1035","                  \"value\": \"1\",","1037","              }","1038","            \/>","1039","            <MeasuresOverlayMeasure","1040","              key=\"lines_to_cover\"","1041","              measure={","1042","                Object {","1043","                  \"metric\": Object {","1044","                    \"domain\": \"Coverage\",","1045","                    \"key\": \"lines_to_cover\",","1046","                    \"type\": \"INT\",","1047","                  },","1048","                  \"value\": \"4\",","1050","              }","1051","            \/>","1056","        className=\"measures-viewer-section\"","1059","          className=\"measures-viewer-card\"","1096","            <MeasuresOverlayMeasure","1097","              key=\"duplicated_blocks\"","1098","              measure={","1099","                Object {","1100","                  \"metric\": Object {","1101","                    \"domain\": \"Duplications\",","1102","                    \"key\": \"duplicated_blocks\",","1103","                    \"type\": \"INT\",","1104","                  },","1105","                  \"value\": \"3\",","1106","                }","1107","              }","1108","            \/>","1109","            <MeasuresOverlayMeasure","1110","              key=\"duplicated_lines\"","1111","              measure={","1112","                Object {","1113","                  \"metric\": Object {","1114","                    \"domain\": \"Duplications\",","1115","                    \"key\": \"duplicated_lines\",","1116","                    \"type\": \"INT\",","1117","                  },","1118","                  \"value\": \"0\",","1119","                }","1120","              }","1121","            \/>","1122","          <\/div>","1123","        <\/div>","1124","      <\/div>","1125","    <\/div>","1126","    <div","1127","      className=\"spacer-top\"","1128","    >","1129","      <div","1130","        className=\"measures-viewer measures-viewer-secondary\"","1131","      >","1132","        <div","1133","          className=\"measures-viewer-section\"","1134","        >","1135","          <div","1136","            className=\"measures-viewer-card\"","1137","            key=\"Complexity\"","1138","          >","1140","              className=\"measures\"","1142","              <div","1143","                className=\"measure measure-big\"","1144","              >","1145","                <span","1146","                  className=\"measure-name\"","1147","                >","1148","                  Complexity","1149","                <\/span>","1150","              <\/div>","1151","              <MeasuresOverlayMeasure","1152","                key=\"cognitive_complexity\"","1153","                measure={","1154","                  Object {","1155","                    \"metric\": Object {","1156","                      \"domain\": \"Complexity\",","1157","                      \"key\": \"cognitive_complexity\",","1158","                      \"type\": \"INT\",","1159","                    },","1160","                    \"value\": \"0\",","1161","                  }","1162","                }","1163","              \/>","1164","              <MeasuresOverlayMeasure","1165","                key=\"complexity\"","1166","                measure={","1167","                  Object {","1168","                    \"metric\": Object {","1169","                      \"domain\": \"Complexity\",","1170","                      \"key\": \"complexity\",","1171","                      \"type\": \"INT\",","1172","                    },","1173","                    \"value\": \"1\",","1174","                  }","1175","                }","1176","              \/>","1177","            <\/div>","1178","          <\/div>","1179","          <div","1180","            className=\"measures-viewer-card\"","1181","            key=\"Size\"","1182","          >","1183","            <div","1184","              className=\"measures\"","1185","            >","1186","              <div","1187","                className=\"measure measure-big\"","1188","              >","1189","                <span","1190","                  className=\"measure-name\"","1191","                >","1192","                  Size","1193","                <\/span>","1194","              <\/div>","1195","              <MeasuresOverlayMeasure","1196","                key=\"classes\"","1197","                measure={","1198","                  Object {","1199","                    \"metric\": Object {","1200","                      \"domain\": \"Size\",","1201","                      \"key\": \"classes\",","1202","                      \"type\": \"INT\",","1203","                    },","1204","                    \"value\": \"1\",","1205","                  }","1206","                }","1207","              \/>","1208","              <MeasuresOverlayMeasure","1209","                key=\"comment_lines\"","1210","                measure={","1211","                  Object {","1212","                    \"metric\": Object {","1213","                      \"domain\": \"Size\",","1214","                      \"key\": \"comment_lines\",","1215","                      \"type\": \"INT\",","1216","                    },","1217","                    \"value\": \"2\",","1218","                  }","1219","                }","1220","              \/>","1221","              <MeasuresOverlayMeasure","1222","                key=\"comment_lines_density\"","1223","                measure={","1224","                  Object {","1225","                    \"metric\": Object {","1226","                      \"domain\": \"Size\",","1227","                      \"key\": \"comment_lines_density\",","1228","                      \"type\": \"PERCENT\",","1229","                    },","1230","                    \"value\": \"20.0\",","1231","                  }","1232","                }","1233","              \/>","1234","              <MeasuresOverlayMeasure","1235","                key=\"files\"","1236","                measure={","1237","                  Object {","1238","                    \"metric\": Object {","1239","                      \"domain\": \"Size\",","1240","                      \"key\": \"files\",","1241","                      \"type\": \"INT\",","1242","                    },","1243","                    \"value\": \"1\",","1244","                  }","1245","                }","1246","              \/>","1247","              <MeasuresOverlayMeasure","1248","                key=\"functions\"","1249","                measure={","1250","                  Object {","1251","                    \"metric\": Object {","1252","                      \"domain\": \"Size\",","1253","                      \"key\": \"functions\",","1254","                      \"type\": \"INT\",","1255","                    },","1256","                    \"value\": \"1\",","1257","                  }","1258","                }","1259","              \/>","1260","              <MeasuresOverlayMeasure","1261","                key=\"lines\"","1262","                measure={","1263","                  Object {","1264","                    \"metric\": Object {","1265","                      \"domain\": \"Size\",","1266","                      \"key\": \"lines\",","1267","                      \"type\": \"INT\",","1268","                    },","1269","                    \"value\": \"18\",","1270","                  }","1271","                }","1272","              \/>","1273","              <MeasuresOverlayMeasure","1274","                key=\"ncloc\"","1275","                measure={","1276","                  Object {","1277","                    \"metric\": Object {","1278","                      \"domain\": \"Size\",","1279","                      \"key\": \"ncloc\",","1280","                      \"type\": \"INT\",","1281","                    },","1282","                    \"value\": \"8\",","1283","                  }","1284","                }","1285","              \/>","1286","              <MeasuresOverlayMeasure","1287","                key=\"statements\"","1288","                measure={","1289","                  Object {","1290","                    \"metric\": Object {","1291","                      \"domain\": \"Size\",","1292","                      \"key\": \"statements\",","1293","                      \"type\": \"INT\",","1294","                    },","1295","                    \"value\": \"3\",","1296","                  }","1297","                }","1298","              \/>","1299","            <\/div>","1300","          <\/div>","1301","          <div","1302","            className=\"measures-viewer-card\"","1303","            key=\"Coverage\"","1304","          >","1305","            <div","1306","              className=\"measures\"","1307","            >","1308","              <div","1309","                className=\"measure measure-big\"","1310","              >","1311","                <span","1312","                  className=\"measure-name\"","1313","                >","1314","                  Coverage","1315","                <\/span>","1316","              <\/div>","1317","              <MeasuresOverlayMeasure","1318","                key=\"coverage\"","1319","                measure={","1320","                  Object {","1321","                    \"metric\": Object {","1322","                      \"domain\": \"Coverage\",","1323","                      \"key\": \"coverage\",","1324","                      \"type\": \"PERCENT\",","1325","                    },","1326","                    \"value\": \"75.0\",","1327","                  }","1328","                }","1329","              \/>","1330","              <MeasuresOverlayMeasure","1331","                key=\"line_coverage\"","1332","                measure={","1333","                  Object {","1334","                    \"metric\": Object {","1335","                      \"domain\": \"Coverage\",","1336","                      \"key\": \"line_coverage\",","1337","                      \"type\": \"PERCENT\",","1338","                    },","1339","                    \"value\": \"75.0\",","1340","                  }","1341","                }","1342","              \/>","1343","              <MeasuresOverlayMeasure","1344","                key=\"lines_to_cover\"","1345","                measure={","1346","                  Object {","1347","                    \"metric\": Object {","1348","                      \"domain\": \"Coverage\",","1349","                      \"key\": \"lines_to_cover\",","1350","                      \"type\": \"INT\",","1351","                    },","1352","                    \"value\": \"4\",","1353","                  }","1354","                }","1355","              \/>","1356","              <MeasuresOverlayMeasure","1357","                key=\"uncovered_lines\"","1358","                measure={","1359","                  Object {","1360","                    \"metric\": Object {","1361","                      \"domain\": \"Coverage\",","1362","                      \"key\": \"uncovered_lines\",","1363","                      \"type\": \"INT\",","1364","                    },","1365","                    \"value\": \"1\",","1366","                  }","1367","                }","1368","              \/>","1369","            <\/div>","1370","          <\/div>","1371","          <div","1372","            className=\"measures-viewer-card\"","1373","            key=\"Reliability\"","1374","          >","1375","            <div","1376","              className=\"measures\"","1377","            >","1378","              <div","1379","                className=\"measure measure-big\"","1380","              >","1381","                <span","1382","                  className=\"measure-name\"","1383","                >","1384","                  Reliability","1385","                <\/span>","1386","              <\/div>","1387","              <MeasuresOverlayMeasure","1388","                key=\"bugs\"","1389","                measure={","1390","                  Object {","1391","                    \"metric\": Object {","1392","                      \"domain\": \"Reliability\",","1393","                      \"key\": \"bugs\",","1394","                      \"type\": \"INT\",","1395","                    },","1396","                    \"value\": \"0\",","1397","                  }","1398","                }","1399","              \/>","1400","              <MeasuresOverlayMeasure","1401","                key=\"reliability_rating\"","1402","                measure={","1403","                  Object {","1404","                    \"metric\": Object {","1405","                      \"domain\": \"Reliability\",","1406","                      \"key\": \"reliability_rating\",","1407","                      \"type\": \"RATING\",","1408","                    },","1409","                    \"value\": \"1.0\",","1410","                  }","1411","                }","1412","              \/>","1413","            <\/div>","1414","          <\/div>","1415","        <\/div>","1416","        <div","1417","          className=\"measures-viewer-section\"","1418","        >","1419","          <div","1420","            className=\"measures-viewer-card\"","1421","            key=\"Security\"","1422","          >","1423","            <div","1424","              className=\"measures\"","1425","            >","1426","              <div","1427","                className=\"measure measure-big\"","1428","              >","1429","                <span","1430","                  className=\"measure-name\"","1431","                >","1432","                  Security","1433","                <\/span>","1434","              <\/div>","1435","              <MeasuresOverlayMeasure","1436","                key=\"security_rating\"","1437","                measure={","1438","                  Object {","1439","                    \"metric\": Object {","1440","                      \"domain\": \"Security\",","1441","                      \"key\": \"security_rating\",","1442","                      \"type\": \"RATING\",","1443","                    },","1444","                    \"value\": \"1.0\",","1445","                  }","1446","                }","1447","              \/>","1448","              <MeasuresOverlayMeasure","1449","                key=\"vulnerabilities\"","1450","                measure={","1451","                  Object {","1452","                    \"metric\": Object {","1453","                      \"domain\": \"Security\",","1454","                      \"key\": \"vulnerabilities\",","1455","                      \"type\": \"INT\",","1456","                    },","1457","                    \"value\": \"0\",","1458","                  }","1459","                }","1460","              \/>","1461","            <\/div>","1462","          <\/div>","1463","          <div","1464","            className=\"measures-viewer-card\"","1465","            key=\"Tests\"","1466","          >","1467","            <div","1468","              className=\"measures\"","1469","            >","1470","              <div","1471","                className=\"measure measure-big\"","1472","              >","1473","                <span","1474","                  className=\"measure-name\"","1475","                >","1476","                  Tests","1477","                <\/span>","1478","              <\/div>","1479","              <MeasuresOverlayMeasure","1480","                key=\"skipped_tests\"","1481","                measure={","1482","                  Object {","1483","                    \"metric\": Object {","1484","                      \"domain\": \"Tests\",","1485","                      \"key\": \"skipped_tests\",","1486","                      \"type\": \"INT\",","1487","                    },","1488","                    \"value\": \"0\",","1489","                  }","1490","                }","1491","              \/>","1492","              <MeasuresOverlayMeasure","1493","                key=\"test_errors\"","1494","                measure={","1495","                  Object {","1496","                    \"metric\": Object {","1497","                      \"domain\": \"Tests\",","1498","                      \"key\": \"test_errors\",","1499","                      \"type\": \"INT\",","1500","                    },","1501","                    \"value\": \"1\",","1502","                  }","1503","                }","1504","              \/>","1505","              <MeasuresOverlayMeasure","1506","                key=\"test_failures\"","1507","                measure={","1508","                  Object {","1509","                    \"metric\": Object {","1510","                      \"domain\": \"Tests\",","1511","                      \"key\": \"test_failures\",","1512","                      \"type\": \"INT\",","1513","                    },","1514","                    \"value\": \"0\",","1515","                  }","1516","                }","1517","              \/>","1518","              <MeasuresOverlayMeasure","1519","                key=\"test_success_density\"","1520","                measure={","1521","                  Object {","1522","                    \"metric\": Object {","1523","                      \"domain\": \"Tests\",","1524","                      \"key\": \"test_success_density\",","1525","                      \"type\": \"PERCENT\",","1526","                    },","1527","                    \"value\": \"100.0\",","1528","                  }","1529","                }","1530","              \/>","1531","            <\/div>","1532","          <\/div>","1533","          <div","1534","            className=\"measures-viewer-card\"","1535","            key=\"Issues\"","1536","          >","1537","            <div","1538","              className=\"measures\"","1539","            >","1540","              <div","1541","                className=\"measure measure-big\"","1542","              >","1543","                <span","1544","                  className=\"measure-name\"","1545","                >","1546","                  Issues","1547","                <\/span>","1548","              <\/div>","1549","              <MeasuresOverlayMeasure","1550","                key=\"false_positive_issues\"","1551","                measure={","1552","                  Object {","1553","                    \"metric\": Object {","1554","                      \"domain\": \"Issues\",","1555","                      \"key\": \"false_positive_issues\",","1556","                      \"type\": \"INT\",","1557","                    },","1558","                    \"value\": \"0\",","1559","                  }","1560","                }","1561","              \/>","1562","              <MeasuresOverlayMeasure","1563","                key=\"violations\"","1564","                measure={","1565","                  Object {","1566","                    \"metric\": Object {","1567","                      \"domain\": \"Issues\",","1568","                      \"key\": \"violations\",","1569","                      \"type\": \"INT\",","1570","                    },","1571","                    \"value\": \"1\",","1572","                  }","1573","                }","1574","              \/>","1575","              <MeasuresOverlayMeasure","1576","                key=\"wont_fix_issues\"","1577","                measure={","1578","                  Object {","1579","                    \"metric\": Object {","1580","                      \"domain\": \"Issues\",","1581","                      \"key\": \"wont_fix_issues\",","1582","                      \"type\": \"INT\",","1583","                    },","1584","                    \"value\": \"0\",","1585","                  }","1586","                }","1587","              \/>","1588","            <\/div>","1589","          <\/div>","1590","          <div","1591","            className=\"measures-viewer-card\"","1592","            key=\"Duplications\"","1593","          >","1594","            <div","1595","              className=\"measures\"","1596","            >","1597","              <div","1598","                className=\"measure measure-big\"","1599","              >","1600","                <span","1601","                  className=\"measure-name\"","1602","                >","1603","                  Duplications","1604","                <\/span>","1605","              <\/div>","1620","                key=\"duplicated_files\"","1621","                measure={","1622","                  Object {","1623","                    \"metric\": Object {","1624","                      \"domain\": \"Duplications\",","1625","                      \"key\": \"duplicated_files\",","1626","                      \"type\": \"INT\",","1627","                    },","1628","                    \"value\": \"1\",","1629","                  }","1630","                }","1631","              \/>","1632","              <MeasuresOverlayMeasure","1645","              <MeasuresOverlayMeasure","1646","                key=\"duplicated_lines_density\"","1647","                measure={","1648","                  Object {","1649","                    \"metric\": Object {","1650","                      \"domain\": \"Duplications\",","1651","                      \"key\": \"duplicated_lines_density\",","1652","                      \"type\": \"PERCENT\",","1653","                    },","1654","                    \"value\": \"0.0\",","1656","                }","1657","              \/>","1661","            className=\"measures-viewer-card\"","1668","                className=\"measure measure-big\"","1670","                <span","1671","                  className=\"measure-name\"","1673","                  Maintainability","1674","                <\/span>","1676","              <MeasuresOverlayMeasure","1677","                key=\"code_smells\"","1678","                measure={","1679","                  Object {","1680","                    \"metric\": Object {","1681","                      \"domain\": \"Maintainability\",","1682","                      \"key\": \"code_smells\",","1683","                      \"type\": \"INT\",","1684","                    },","1685","                    \"value\": \"2\",","1686","                  }","1687","                }","1688","              \/>","1689","              <MeasuresOverlayMeasure","1690","                key=\"sqale_debt_ratio\"","1691","                measure={","1692","                  Object {","1693","                    \"metric\": Object {","1694","                      \"domain\": \"Maintainability\",","1695","                      \"key\": \"sqale_debt_ratio\",","1696","                      \"type\": \"PERCENT\",","1697","                    },","1698","                    \"value\": \"16.7\",","1699","                  }","1700","                }","1701","              \/>","1702","              <MeasuresOverlayMeasure","1703","                key=\"sqale_index\"","1704","                measure={","1705","                  Object {","1706","                    \"metric\": Object {","1707","                      \"domain\": \"Maintainability\",","1708","                      \"key\": \"sqale_index\",","1709","                      \"type\": \"WORK_DUR\",","1710","                    },","1711","                    \"value\": \"40\",","1712","                  }","1713","                }","1714","              \/>","1735","  contentLabel=\"component_viewer.file_measures\"","1740","    className=\"modal-head\"","1741","  >","1742","    <h2>","1743","      component_viewer.file_measures","1744","    <\/h2>","1745","  <\/div>","1746","  <div","1747","    className=\"modal-body modal-container\"","1750","      className=\"measures-viewer-header big-spacer-bottom\"","1752","      <div>","1779","        className=\"display-flex-center little-spacer-top\"","1789","      className=\"measures-viewer\"","1792","        className=\"measures-viewer-section measures-viewer-section-limited\"","1795","          className=\"measures-viewer-card\"","1800","            <MeasuresOverlayMeasure","1801","              key=\"test_success_density\"","1802","              measure={","1803","                Object {","1804","                  \"metric\": Object {","1805","                    \"domain\": \"Tests\",","1806","                    \"key\": \"test_success_density\",","1807","                    \"type\": \"PERCENT\",","1808","                  },","1809","                  \"value\": \"100.0\",","1811","              }","1812","            \/>","1813","            <MeasuresOverlayMeasure","1814","              key=\"test_failures\"","1815","              measure={","1816","                Object {","1817","                  \"metric\": Object {","1818","                    \"domain\": \"Tests\",","1819","                    \"key\": \"test_failures\",","1820","                    \"type\": \"INT\",","1821","                  },","1822","                  \"value\": \"0\",","1824","              }","1825","            \/>","1826","            <MeasuresOverlayMeasure","1827","              key=\"test_errors\"","1828","              measure={","1829","                Object {","1830","                  \"metric\": Object {","1831","                    \"domain\": \"Tests\",","1832","                    \"key\": \"test_errors\",","1833","                    \"type\": \"INT\",","1834","                  },","1835","                  \"value\": \"1\",","1837","              }","1838","            \/>","1839","            <MeasuresOverlayMeasure","1840","              key=\"skipped_tests\"","1841","              measure={","1842","                Object {","1843","                  \"metric\": Object {","1844","                    \"domain\": \"Tests\",","1845","                    \"key\": \"skipped_tests\",","1846","                    \"type\": \"INT\",","1847","                  },","1848","                  \"value\": \"0\",","1850","              }","1851","            \/>"],"delete":["4","  contentLabel=\"\"","9","    className=\"modal-container source-viewer-measures-modal\"","12","      className=\"source-viewer-header-component source-viewer-measures-component\"","14","      <div","15","        className=\"source-viewer-header-component-project\"","16","      >","43","        className=\"source-viewer-header-component-name display-flex-center little-spacer-top\"","53","      className=\"source-viewer-measures\"","56","        className=\"source-viewer-measures-section\"","59","          className=\"source-viewer-measures-card\"","64","            <div","65","              className=\"measures-list\"","66","            >","67","              <MeasuresOverlayMeasure","68","                key=\"lines\"","69","                measure={","70","                  Object {","71","                    \"metric\": Object {","72","                      \"domain\": \"Size\",","73","                      \"key\": \"lines\",","74","                      \"type\": \"INT\",","75","                    },","76","                    \"value\": \"18\",","77","                  }","79","              \/>","80","              <MeasuresOverlayMeasure","81","                key=\"ncloc\"","82","                measure={","83","                  Object {","84","                    \"metric\": Object {","85","                      \"domain\": \"Size\",","86","                      \"key\": \"ncloc\",","87","                      \"type\": \"INT\",","88","                    },","89","                    \"value\": \"8\",","90","                  }","92","              \/>","93","              <MeasuresOverlayMeasure","94","                key=\"comment_lines\"","95","                measure={","96","                  Object {","97","                    \"metric\": Object {","98","                      \"domain\": \"Size\",","99","                      \"key\": \"comment_lines\",","100","                      \"type\": \"INT\",","101","                    },","102","                    \"value\": \"2\",","103","                  }","105","              \/>","106","              <MeasuresOverlayMeasure","107","                key=\"comment_lines_density\"","108","                measure={","109","                  Object {","110","                    \"metric\": Object {","111","                      \"domain\": \"Size\",","112","                      \"key\": \"comment_lines_density\",","113","                      \"type\": \"PERCENT\",","114","                    },","115","                    \"value\": \"20.0\",","116","                  }","118","              \/>","119","            <\/div>","124","            <div","125","              className=\"measures-list\"","126","            >","127","              <MeasuresOverlayMeasure","128","                key=\"cognitive_complexity\"","129","                measure={","130","                  Object {","131","                    \"metric\": Object {","132","                      \"domain\": \"Complexity\",","133","                      \"key\": \"cognitive_complexity\",","134","                      \"type\": \"INT\",","135","                    },","136","                    \"value\": \"0\",","137","                  }","139","              \/>","140","              <MeasuresOverlayMeasure","141","                key=\"complexity\"","142","                measure={","143","                  Object {","144","                    \"metric\": Object {","145","                      \"domain\": \"Complexity\",","146","                      \"key\": \"complexity\",","147","                      \"type\": \"INT\",","148","                    },","149","                    \"value\": \"1\",","150","                  }","152","              \/>","153","            <\/div>","158","        className=\"source-viewer-measures-section\"","161","          className=\"source-viewer-measures-card\"","209","              className=\"measures-list\"","211","              <div","212","                className=\"measure measure-one-line\"","213","                key=\"BUG\"","215","                <span","216","                  className=\"measure-name\"","217","                >","218","                  <IssueTypeIcon","219","                    className=\"little-spacer-right\"","220","                    query=\"BUG\"","221","                  \/>","222","                  issue.type.BUG","223","                <\/span>","224","                <span","225","                  className=\"measure-value\"","226","                >","227","                  1","228","                <\/span>","229","              <\/div>","230","              <div","231","                className=\"measure measure-one-line\"","232","                key=\"VULNERABILITY\"","234","                <span","235","                  className=\"measure-name\"","236","                >","237","                  <IssueTypeIcon","238","                    className=\"little-spacer-right\"","239","                    query=\"VULNERABILITY\"","240","                  \/>","241","                  issue.type.VULNERABILITY","242","                <\/span>","243","                <span","244","                  className=\"measure-value\"","245","                >","246","                  0","247","                <\/span>","248","              <\/div>","249","              <div","250","                className=\"measure measure-one-line\"","251","                key=\"CODE_SMELL\"","253","                <span","254","                  className=\"measure-name\"","255","                >","256","                  <IssueTypeIcon","257","                    className=\"little-spacer-right\"","258","                    query=\"CODE_SMELL\"","259","                  \/>","260","                  issue.type.CODE_SMELL","261","                <\/span>","262","                <span","263","                  className=\"measure-value\"","264","                >","265","                  2","266","                <\/span>","267","              <\/div>","274","              className=\"measures-list\"","276","              <div","277","                className=\"measure measure-one-line\"","278","                key=\"BLOCKER\"","280","                <span","281","                  className=\"measure-name\"","282","                >","283","                  <SeverityHelper","284","                    severity=\"BLOCKER\"","285","                  \/>","286","                <\/span>","287","                <span","288","                  className=\"measure-value\"","289","                >","290","                  5","291","                <\/span>","292","              <\/div>","293","              <div","294","                className=\"measure measure-one-line\"","295","                key=\"CRITICAL\"","297","                <span","298","                  className=\"measure-name\"","299","                >","300","                  <SeverityHelper","301","                    severity=\"CRITICAL\"","302","                  \/>","303","                <\/span>","304","                <span","305","                  className=\"measure-value\"","306","                >","307","                  4","308","                <\/span>","309","              <\/div>","310","              <div","311","                className=\"measure measure-one-line\"","312","                key=\"MAJOR\"","314","                <span","315","                  className=\"measure-name\"","316","                >","317","                  <SeverityHelper","318","                    severity=\"MAJOR\"","319","                  \/>","320","                <\/span>","321","                <span","322","                  className=\"measure-value\"","323","                >","324","                  1","325","                <\/span>","326","              <\/div>","327","              <div","328","                className=\"measure measure-one-line\"","329","                key=\"MINOR\"","331","                <span","332","                  className=\"measure-name\"","333","                >","334","                  <SeverityHelper","335","                    severity=\"MINOR\"","336","                  \/>","337","                <\/span>","338","                <span","339","                  className=\"measure-value\"","340","                >","341","                  3","342","                <\/span>","343","              <\/div>","344","              <div","345","                className=\"measure measure-one-line\"","346","                key=\"INFO\"","348","                <span","349","                  className=\"measure-name\"","350","                >","351","                  <SeverityHelper","352","                    severity=\"INFO\"","353","                  \/>","354","                <\/span>","355","                <span","356","                  className=\"measure-value\"","357","                >","358","                  2","359","                <\/span>","360","              <\/div>","367","              className=\"measures-list\"","369","              <div","370","                className=\"measure measure-one-line\"","371","                key=\"bad-practice\"","373","                <span","374","                  className=\"measure-name\"","375","                >","376","                  <TagsIcon","377","                    className=\"little-spacer-right\"","378","                  \/>","379","                  bad-practice","380","                <\/span>","381","                <span","382","                  className=\"measure-value\"","383","                >","384","                  1","385","                <\/span>","386","              <\/div>","387","              <div","388","                className=\"measure measure-one-line\"","389","                key=\"cert\"","391","                <span","392","                  className=\"measure-name\"","393","                >","394","                  <TagsIcon","395","                    className=\"little-spacer-right\"","396","                  \/>","397","                  cert","398","                <\/span>","399","                <span","400","                  className=\"measure-value\"","401","                >","402","                  3","403","                <\/span>","404","              <\/div>","405","              <div","406","                className=\"measure measure-one-line\"","407","                key=\"design\"","409","                <span","410","                  className=\"measure-name\"","411","                >","412","                  <TagsIcon","413","                    className=\"little-spacer-right\"","414","                  \/>","415","                  design","416","                <\/span>","417","                <span","418","                  className=\"measure-value\"","419","                >","420","                  1","421","                <\/span>","422","              <\/div>","428","        className=\"source-viewer-measures-section\"","431","          className=\"source-viewer-measures-card\"","467","            <div","468","              className=\"measures-list\"","469","            >","470","              <MeasuresOverlayMeasure","471","                key=\"uncovered_lines\"","472","                measure={","473","                  Object {","474","                    \"metric\": Object {","475","                      \"domain\": \"Coverage\",","476","                      \"key\": \"uncovered_lines\",","477","                      \"type\": \"INT\",","478","                    },","479","                    \"value\": \"1\",","480","                  }","482","              \/>","483","              <MeasuresOverlayMeasure","484","                key=\"lines_to_cover\"","485","                measure={","486","                  Object {","487","                    \"metric\": Object {","488","                      \"domain\": \"Coverage\",","489","                      \"key\": \"lines_to_cover\",","490","                      \"type\": \"INT\",","491","                    },","492","                    \"value\": \"4\",","493","                  }","495","              \/>","496","            <\/div>","501","        className=\"source-viewer-measures-section\"","504","          className=\"source-viewer-measures-card\"","541","            <div","542","              className=\"measures-list\"","543","            >","544","              <MeasuresOverlayMeasure","545","                key=\"duplicated_blocks\"","546","                measure={","547","                  Object {","548","                    \"metric\": Object {","549","                      \"domain\": \"Duplications\",","550","                      \"key\": \"duplicated_blocks\",","551","                      \"type\": \"INT\",","552","                    },","553","                    \"value\": \"3\",","554","                  }","556","              \/>","557","              <MeasuresOverlayMeasure","558","                key=\"duplicated_lines\"","559","                measure={","560","                  Object {","561","                    \"metric\": Object {","562","                      \"domain\": \"Duplications\",","563","                      \"key\": \"duplicated_lines\",","564","                      \"type\": \"INT\",","565","                    },","566","                    \"value\": \"0\",","567","                  }","569","              \/>","570","            <\/div>","601","  contentLabel=\"\"","606","    className=\"modal-container source-viewer-measures-modal\"","609","      className=\"source-viewer-header-component source-viewer-measures-component\"","611","      <div","612","        className=\"source-viewer-header-component-project\"","613","      >","640","        className=\"source-viewer-header-component-name display-flex-center little-spacer-top\"","650","      className=\"source-viewer-measures\"","653","        className=\"source-viewer-measures-section\"","656","          className=\"source-viewer-measures-card\"","661","            <div","662","              className=\"measures-list\"","663","            >","664","              <MeasuresOverlayMeasure","665","                key=\"lines\"","666","                measure={","667","                  Object {","668","                    \"metric\": Object {","669","                      \"domain\": \"Size\",","670","                      \"key\": \"lines\",","671","                      \"type\": \"INT\",","672","                    },","673","                    \"value\": \"18\",","674","                  }","676","              \/>","677","              <MeasuresOverlayMeasure","678","                key=\"ncloc\"","679","                measure={","680","                  Object {","681","                    \"metric\": Object {","682","                      \"domain\": \"Size\",","683","                      \"key\": \"ncloc\",","684","                      \"type\": \"INT\",","685","                    },","686","                    \"value\": \"8\",","687","                  }","689","              \/>","690","              <MeasuresOverlayMeasure","691","                key=\"comment_lines\"","692","                measure={","693","                  Object {","694","                    \"metric\": Object {","695","                      \"domain\": \"Size\",","696","                      \"key\": \"comment_lines\",","697","                      \"type\": \"INT\",","698","                    },","699","                    \"value\": \"2\",","700","                  }","702","              \/>","703","              <MeasuresOverlayMeasure","704","                key=\"comment_lines_density\"","705","                measure={","706","                  Object {","707","                    \"metric\": Object {","708","                      \"domain\": \"Size\",","709","                      \"key\": \"comment_lines_density\",","710","                      \"type\": \"PERCENT\",","711","                    },","712","                    \"value\": \"20.0\",","713","                  }","715","              \/>","716","            <\/div>","721","            <div","722","              className=\"measures-list\"","723","            >","724","              <MeasuresOverlayMeasure","725","                key=\"cognitive_complexity\"","726","                measure={","727","                  Object {","728","                    \"metric\": Object {","729","                      \"domain\": \"Complexity\",","730","                      \"key\": \"cognitive_complexity\",","731","                      \"type\": \"INT\",","732","                    },","733","                    \"value\": \"0\",","734","                  }","736","              \/>","737","              <MeasuresOverlayMeasure","738","                key=\"complexity\"","739","                measure={","740","                  Object {","741","                    \"metric\": Object {","742","                      \"domain\": \"Complexity\",","743","                      \"key\": \"complexity\",","744","                      \"type\": \"INT\",","745","                    },","746","                    \"value\": \"1\",","747","                  }","749","              \/>","750","            <\/div>","755","        className=\"source-viewer-measures-section\"","758","          className=\"source-viewer-measures-card\"","806","              className=\"measures-list\"","808","              <div","809","                className=\"measure measure-one-line\"","810","                key=\"BUG\"","812","                <span","813","                  className=\"measure-name\"","814","                >","815","                  <IssueTypeIcon","816","                    className=\"little-spacer-right\"","817","                    query=\"BUG\"","818","                  \/>","819","                  issue.type.BUG","820","                <\/span>","821","                <span","822","                  className=\"measure-value\"","823","                >","824","                  1","825","                <\/span>","826","              <\/div>","827","              <div","828","                className=\"measure measure-one-line\"","829","                key=\"VULNERABILITY\"","831","                <span","832","                  className=\"measure-name\"","833","                >","834","                  <IssueTypeIcon","835","                    className=\"little-spacer-right\"","836","                    query=\"VULNERABILITY\"","837","                  \/>","838","                  issue.type.VULNERABILITY","839","                <\/span>","840","                <span","841","                  className=\"measure-value\"","842","                >","843","                  0","844","                <\/span>","845","              <\/div>","846","              <div","847","                className=\"measure measure-one-line\"","848","                key=\"CODE_SMELL\"","850","                <span","851","                  className=\"measure-name\"","852","                >","853","                  <IssueTypeIcon","854","                    className=\"little-spacer-right\"","855","                    query=\"CODE_SMELL\"","856","                  \/>","857","                  issue.type.CODE_SMELL","858","                <\/span>","859","                <span","860","                  className=\"measure-value\"","861","                >","862","                  2","863","                <\/span>","864","              <\/div>","871","              className=\"measures-list\"","873","              <div","874","                className=\"measure measure-one-line\"","875","                key=\"BLOCKER\"","877","                <span","878","                  className=\"measure-name\"","879","                >","880","                  <SeverityHelper","881","                    severity=\"BLOCKER\"","882","                  \/>","883","                <\/span>","884","                <span","885","                  className=\"measure-value\"","886","                >","887","                  5","888","                <\/span>","889","              <\/div>","890","              <div","891","                className=\"measure measure-one-line\"","892","                key=\"CRITICAL\"","894","                <span","895","                  className=\"measure-name\"","896","                >","897","                  <SeverityHelper","898","                    severity=\"CRITICAL\"","899","                  \/>","900","                <\/span>","901","                <span","902","                  className=\"measure-value\"","903","                >","904","                  4","905","                <\/span>","906","              <\/div>","907","              <div","908","                className=\"measure measure-one-line\"","909","                key=\"MAJOR\"","911","                <span","912","                  className=\"measure-name\"","913","                >","914","                  <SeverityHelper","915","                    severity=\"MAJOR\"","916","                  \/>","917","                <\/span>","918","                <span","919","                  className=\"measure-value\"","920","                >","921","                  1","922","                <\/span>","923","              <\/div>","924","              <div","925","                className=\"measure measure-one-line\"","926","                key=\"MINOR\"","928","                <span","929","                  className=\"measure-name\"","930","                >","931","                  <SeverityHelper","932","                    severity=\"MINOR\"","933","                  \/>","934","                <\/span>","935","                <span","936","                  className=\"measure-value\"","937","                >","938","                  3","939","                <\/span>","940","              <\/div>","941","              <div","942","                className=\"measure measure-one-line\"","943","                key=\"INFO\"","945","                <span","946","                  className=\"measure-name\"","947","                >","948","                  <SeverityHelper","949","                    severity=\"INFO\"","950","                  \/>","951","                <\/span>","952","                <span","953","                  className=\"measure-value\"","954","                >","955","                  2","956","                <\/span>","957","              <\/div>","964","              className=\"measures-list\"","966","              <div","967","                className=\"measure measure-one-line\"","968","                key=\"bad-practice\"","970","                <span","971","                  className=\"measure-name\"","972","                >","973","                  <TagsIcon","974","                    className=\"little-spacer-right\"","975","                  \/>","976","                  bad-practice","977","                <\/span>","978","                <span","979","                  className=\"measure-value\"","980","                >","981","                  1","982","                <\/span>","983","              <\/div>","984","              <div","985","                className=\"measure measure-one-line\"","986","                key=\"cert\"","988","                <span","989","                  className=\"measure-name\"","990","                >","991","                  <TagsIcon","992","                    className=\"little-spacer-right\"","993","                  \/>","994","                  cert","995","                <\/span>","996","                <span","997","                  className=\"measure-value\"","998","                >","999","                  3","1000","                <\/span>","1001","              <\/div>","1002","              <div","1003","                className=\"measure measure-one-line\"","1004","                key=\"design\"","1006","                <span","1007","                  className=\"measure-name\"","1008","                >","1009","                  <TagsIcon","1010","                    className=\"little-spacer-right\"","1011","                  \/>","1012","                  design","1013","                <\/span>","1014","                <span","1015","                  className=\"measure-value\"","1016","                >","1017","                  1","1018","                <\/span>","1019","              <\/div>","1025","        className=\"source-viewer-measures-section\"","1028","          className=\"source-viewer-measures-card\"","1064","            <div","1065","              className=\"measures-list\"","1066","            >","1067","              <MeasuresOverlayMeasure","1068","                key=\"uncovered_lines\"","1069","                measure={","1070","                  Object {","1071","                    \"metric\": Object {","1072","                      \"domain\": \"Coverage\",","1073","                      \"key\": \"uncovered_lines\",","1074","                      \"type\": \"INT\",","1075","                    },","1076","                    \"value\": \"1\",","1077","                  }","1079","              \/>","1080","              <MeasuresOverlayMeasure","1081","                key=\"lines_to_cover\"","1082","                measure={","1083","                  Object {","1084","                    \"metric\": Object {","1085","                      \"domain\": \"Coverage\",","1086","                      \"key\": \"lines_to_cover\",","1087","                      \"type\": \"INT\",","1088","                    },","1089","                    \"value\": \"4\",","1090","                  }","1092","              \/>","1093","            <\/div>","1098","        className=\"source-viewer-measures-section\"","1101","          className=\"source-viewer-measures-card\"","1139","              className=\"measures-list\"","1167","            <\/div>","1168","          <\/div>","1169","        <\/div>","1170","      <\/div>","1171","    <\/div>","1172","    <div","1173","      className=\"spacer-top\"","1174","    >","1175","      <div","1176","        className=\"source-viewer-measures source-viewer-measures-secondary js-all-measures\"","1177","      >","1178","        <div","1179","          className=\"source-viewer-measures-section source-viewer-measures-section-big\"","1180","        >","1181","          <div","1182","            className=\"source-viewer-measures-card\"","1183","            key=\"Complexity\"","1184","          >","1185","            <div","1186","              className=\"measures\"","1187","            >","1188","              <div","1189","                className=\"measures-list\"","1190","              >","1191","                <div","1192","                  className=\"measure measure-one-line measure-big\"","1193","                >","1194","                  <span","1195","                    className=\"measure-name\"","1196","                  >","1197","                    Complexity","1198","                  <\/span>","1199","                <\/div>","1200","                <MeasuresOverlayMeasure","1201","                  key=\"cognitive_complexity\"","1202","                  measure={","1203","                    Object {","1204","                      \"metric\": Object {","1205","                        \"domain\": \"Complexity\",","1206","                        \"key\": \"cognitive_complexity\",","1207","                        \"type\": \"INT\",","1208","                      },","1209","                      \"value\": \"0\",","1210","                    }","1212","                \/>","1213","                <MeasuresOverlayMeasure","1214","                  key=\"complexity\"","1215","                  measure={","1216","                    Object {","1217","                      \"metric\": Object {","1218","                        \"domain\": \"Complexity\",","1219","                        \"key\": \"complexity\",","1220","                        \"type\": \"INT\",","1221","                      },","1222","                      \"value\": \"1\",","1223","                    }","1224","                  }","1225","                \/>","1226","              <\/div>","1230","            className=\"source-viewer-measures-card\"","1231","            key=\"Size\"","1232","          >","1233","            <div","1234","              className=\"measures\"","1235","            >","1236","              <div","1237","                className=\"measures-list\"","1238","              >","1239","                <div","1240","                  className=\"measure measure-one-line measure-big\"","1241","                >","1242","                  <span","1243","                    className=\"measure-name\"","1244","                  >","1245","                    Size","1246","                  <\/span>","1247","                <\/div>","1248","                <MeasuresOverlayMeasure","1249","                  key=\"classes\"","1250","                  measure={","1251","                    Object {","1252","                      \"metric\": Object {","1253","                        \"domain\": \"Size\",","1254","                        \"key\": \"classes\",","1255","                        \"type\": \"INT\",","1256","                      },","1257","                      \"value\": \"1\",","1258","                    }","1259","                  }","1260","                \/>","1261","                <MeasuresOverlayMeasure","1262","                  key=\"comment_lines\"","1263","                  measure={","1264","                    Object {","1265","                      \"metric\": Object {","1266","                        \"domain\": \"Size\",","1267","                        \"key\": \"comment_lines\",","1268","                        \"type\": \"INT\",","1269","                      },","1270","                      \"value\": \"2\",","1271","                    }","1272","                  }","1273","                \/>","1274","                <MeasuresOverlayMeasure","1275","                  key=\"comment_lines_density\"","1276","                  measure={","1277","                    Object {","1278","                      \"metric\": Object {","1279","                        \"domain\": \"Size\",","1280","                        \"key\": \"comment_lines_density\",","1281","                        \"type\": \"PERCENT\",","1282","                      },","1283","                      \"value\": \"20.0\",","1284","                    }","1285","                  }","1286","                \/>","1287","                <MeasuresOverlayMeasure","1288","                  key=\"files\"","1289","                  measure={","1290","                    Object {","1291","                      \"metric\": Object {","1292","                        \"domain\": \"Size\",","1293","                        \"key\": \"files\",","1294","                        \"type\": \"INT\",","1295","                      },","1296","                      \"value\": \"1\",","1297","                    }","1298","                  }","1299","                \/>","1300","                <MeasuresOverlayMeasure","1301","                  key=\"functions\"","1302","                  measure={","1303","                    Object {","1304","                      \"metric\": Object {","1305","                        \"domain\": \"Size\",","1306","                        \"key\": \"functions\",","1307","                        \"type\": \"INT\",","1308","                      },","1309","                      \"value\": \"1\",","1310","                    }","1311","                  }","1312","                \/>","1313","                <MeasuresOverlayMeasure","1314","                  key=\"lines\"","1315","                  measure={","1316","                    Object {","1317","                      \"metric\": Object {","1318","                        \"domain\": \"Size\",","1319","                        \"key\": \"lines\",","1320","                        \"type\": \"INT\",","1321","                      },","1322","                      \"value\": \"18\",","1323","                    }","1324","                  }","1325","                \/>","1326","                <MeasuresOverlayMeasure","1327","                  key=\"ncloc\"","1328","                  measure={","1329","                    Object {","1330","                      \"metric\": Object {","1331","                        \"domain\": \"Size\",","1332","                        \"key\": \"ncloc\",","1333","                        \"type\": \"INT\",","1334","                      },","1335","                      \"value\": \"8\",","1336","                    }","1337","                  }","1338","                \/>","1339","                <MeasuresOverlayMeasure","1340","                  key=\"statements\"","1341","                  measure={","1342","                    Object {","1343","                      \"metric\": Object {","1344","                        \"domain\": \"Size\",","1345","                        \"key\": \"statements\",","1346","                        \"type\": \"INT\",","1347","                      },","1348","                      \"value\": \"3\",","1349","                    }","1350","                  }","1351","                \/>","1352","              <\/div>","1353","            <\/div>","1354","          <\/div>","1355","          <div","1356","            className=\"source-viewer-measures-card\"","1357","            key=\"Coverage\"","1358","          >","1359","            <div","1360","              className=\"measures\"","1361","            >","1362","              <div","1363","                className=\"measures-list\"","1364","              >","1365","                <div","1366","                  className=\"measure measure-one-line measure-big\"","1367","                >","1368","                  <span","1369","                    className=\"measure-name\"","1370","                  >","1371","                    Coverage","1372","                  <\/span>","1373","                <\/div>","1374","                <MeasuresOverlayMeasure","1375","                  key=\"coverage\"","1376","                  measure={","1377","                    Object {","1378","                      \"metric\": Object {","1379","                        \"domain\": \"Coverage\",","1380","                        \"key\": \"coverage\",","1381","                        \"type\": \"PERCENT\",","1382","                      },","1383","                      \"value\": \"75.0\",","1384","                    }","1385","                  }","1386","                \/>","1387","                <MeasuresOverlayMeasure","1388","                  key=\"line_coverage\"","1389","                  measure={","1390","                    Object {","1391","                      \"metric\": Object {","1392","                        \"domain\": \"Coverage\",","1393","                        \"key\": \"line_coverage\",","1394","                        \"type\": \"PERCENT\",","1395","                      },","1396","                      \"value\": \"75.0\",","1397","                    }","1398","                  }","1399","                \/>","1400","                <MeasuresOverlayMeasure","1401","                  key=\"lines_to_cover\"","1402","                  measure={","1403","                    Object {","1404","                      \"metric\": Object {","1405","                        \"domain\": \"Coverage\",","1406","                        \"key\": \"lines_to_cover\",","1407","                        \"type\": \"INT\",","1408","                      },","1409","                      \"value\": \"4\",","1410","                    }","1411","                  }","1412","                \/>","1413","                <MeasuresOverlayMeasure","1414","                  key=\"uncovered_lines\"","1415","                  measure={","1416","                    Object {","1417","                      \"metric\": Object {","1418","                        \"domain\": \"Coverage\",","1419","                        \"key\": \"uncovered_lines\",","1420","                        \"type\": \"INT\",","1421","                      },","1422","                      \"value\": \"1\",","1423","                    }","1424","                  }","1425","                \/>","1426","              <\/div>","1427","            <\/div>","1428","          <\/div>","1429","          <div","1430","            className=\"source-viewer-measures-card\"","1431","            key=\"Reliability\"","1432","          >","1433","            <div","1434","              className=\"measures\"","1435","            >","1436","              <div","1437","                className=\"measures-list\"","1438","              >","1439","                <div","1440","                  className=\"measure measure-one-line measure-big\"","1441","                >","1442","                  <span","1443","                    className=\"measure-name\"","1444","                  >","1445","                    Reliability","1446","                  <\/span>","1447","                <\/div>","1448","                <MeasuresOverlayMeasure","1449","                  key=\"bugs\"","1450","                  measure={","1451","                    Object {","1452","                      \"metric\": Object {","1453","                        \"domain\": \"Reliability\",","1454","                        \"key\": \"bugs\",","1455","                        \"type\": \"INT\",","1456","                      },","1457","                      \"value\": \"0\",","1458","                    }","1459","                  }","1460","                \/>","1461","                <MeasuresOverlayMeasure","1462","                  key=\"reliability_rating\"","1463","                  measure={","1464","                    Object {","1465","                      \"metric\": Object {","1466","                        \"domain\": \"Reliability\",","1467","                        \"key\": \"reliability_rating\",","1468","                        \"type\": \"RATING\",","1469","                      },","1470","                      \"value\": \"1.0\",","1471","                    }","1472","                  }","1473","                \/>","1474","              <\/div>","1475","            <\/div>","1476","          <\/div>","1477","        <\/div>","1478","        <div","1479","          className=\"source-viewer-measures-section source-viewer-measures-section-big\"","1480","        >","1481","          <div","1482","            className=\"source-viewer-measures-card\"","1483","            key=\"Security\"","1484","          >","1485","            <div","1486","              className=\"measures\"","1487","            >","1488","              <div","1489","                className=\"measures-list\"","1490","              >","1491","                <div","1492","                  className=\"measure measure-one-line measure-big\"","1493","                >","1494","                  <span","1495","                    className=\"measure-name\"","1496","                  >","1497","                    Security","1498","                  <\/span>","1499","                <\/div>","1500","                <MeasuresOverlayMeasure","1501","                  key=\"security_rating\"","1502","                  measure={","1503","                    Object {","1504","                      \"metric\": Object {","1505","                        \"domain\": \"Security\",","1506","                        \"key\": \"security_rating\",","1507","                        \"type\": \"RATING\",","1508","                      },","1509","                      \"value\": \"1.0\",","1510","                    }","1511","                  }","1512","                \/>","1513","                <MeasuresOverlayMeasure","1514","                  key=\"vulnerabilities\"","1515","                  measure={","1516","                    Object {","1517","                      \"metric\": Object {","1518","                        \"domain\": \"Security\",","1519","                        \"key\": \"vulnerabilities\",","1520","                        \"type\": \"INT\",","1521","                      },","1522","                      \"value\": \"0\",","1523","                    }","1524","                  }","1525","                \/>","1526","              <\/div>","1527","            <\/div>","1528","          <\/div>","1529","          <div","1530","            className=\"source-viewer-measures-card\"","1531","            key=\"Tests\"","1532","          >","1533","            <div","1534","              className=\"measures\"","1535","            >","1536","              <div","1537","                className=\"measures-list\"","1538","              >","1539","                <div","1540","                  className=\"measure measure-one-line measure-big\"","1541","                >","1542","                  <span","1543","                    className=\"measure-name\"","1544","                  >","1545","                    Tests","1546","                  <\/span>","1547","                <\/div>","1548","                <MeasuresOverlayMeasure","1549","                  key=\"skipped_tests\"","1550","                  measure={","1551","                    Object {","1552","                      \"metric\": Object {","1553","                        \"domain\": \"Tests\",","1554","                        \"key\": \"skipped_tests\",","1555","                        \"type\": \"INT\",","1556","                      },","1557","                      \"value\": \"0\",","1558","                    }","1559","                  }","1560","                \/>","1561","                <MeasuresOverlayMeasure","1562","                  key=\"test_errors\"","1563","                  measure={","1564","                    Object {","1565","                      \"metric\": Object {","1566","                        \"domain\": \"Tests\",","1567","                        \"key\": \"test_errors\",","1568","                        \"type\": \"INT\",","1569","                      },","1570","                      \"value\": \"1\",","1571","                    }","1572","                  }","1573","                \/>","1574","                <MeasuresOverlayMeasure","1575","                  key=\"test_failures\"","1576","                  measure={","1577","                    Object {","1578","                      \"metric\": Object {","1579","                        \"domain\": \"Tests\",","1580","                        \"key\": \"test_failures\",","1581","                        \"type\": \"INT\",","1582","                      },","1583","                      \"value\": \"0\",","1584","                    }","1585","                  }","1586","                \/>","1587","                <MeasuresOverlayMeasure","1588","                  key=\"test_success_density\"","1589","                  measure={","1590","                    Object {","1591","                      \"metric\": Object {","1592","                        \"domain\": \"Tests\",","1593","                        \"key\": \"test_success_density\",","1594","                        \"type\": \"PERCENT\",","1595","                      },","1596","                      \"value\": \"100.0\",","1597","                    }","1598","                  }","1599","                \/>","1600","              <\/div>","1601","            <\/div>","1602","          <\/div>","1603","          <div","1604","            className=\"source-viewer-measures-card\"","1605","            key=\"Issues\"","1606","          >","1607","            <div","1608","              className=\"measures\"","1609","            >","1610","              <div","1611","                className=\"measures-list\"","1612","              >","1613","                <div","1614","                  className=\"measure measure-one-line measure-big\"","1615","                >","1616","                  <span","1617","                    className=\"measure-name\"","1618","                  >","1619","                    Issues","1620","                  <\/span>","1621","                <\/div>","1622","                <MeasuresOverlayMeasure","1623","                  key=\"false_positive_issues\"","1624","                  measure={","1625","                    Object {","1626","                      \"metric\": Object {","1627","                        \"domain\": \"Issues\",","1628","                        \"key\": \"false_positive_issues\",","1629","                        \"type\": \"INT\",","1630","                      },","1631","                      \"value\": \"0\",","1632","                    }","1633","                  }","1634","                \/>","1635","                <MeasuresOverlayMeasure","1636","                  key=\"violations\"","1637","                  measure={","1638","                    Object {","1639","                      \"metric\": Object {","1640","                        \"domain\": \"Issues\",","1641","                        \"key\": \"violations\",","1642","                        \"type\": \"INT\",","1643","                      },","1644","                      \"value\": \"1\",","1645","                    }","1646","                  }","1647","                \/>","1648","                <MeasuresOverlayMeasure","1649","                  key=\"wont_fix_issues\"","1650","                  measure={","1651","                    Object {","1652","                      \"metric\": Object {","1653","                        \"domain\": \"Issues\",","1654","                        \"key\": \"wont_fix_issues\",","1655","                        \"type\": \"INT\",","1656","                      },","1657","                      \"value\": \"0\",","1658","                    }","1659","                  }","1660","                \/>","1661","              <\/div>","1662","            <\/div>","1663","          <\/div>","1664","          <div","1665","            className=\"source-viewer-measures-card\"","1666","            key=\"Duplications\"","1667","          >","1668","            <div","1669","              className=\"measures\"","1670","            >","1671","              <div","1672","                className=\"measures-list\"","1673","              >","1674","                <div","1675","                  className=\"measure measure-one-line measure-big\"","1676","                >","1677","                  <span","1678","                    className=\"measure-name\"","1679","                  >","1680","                    Duplications","1681","                  <\/span>","1682","                <\/div>","1683","                <MeasuresOverlayMeasure","1684","                  key=\"duplicated_blocks\"","1685","                  measure={","1686","                    Object {","1687","                      \"metric\": Object {","1688","                        \"domain\": \"Duplications\",","1689","                        \"key\": \"duplicated_blocks\",","1690","                        \"type\": \"INT\",","1691","                      },","1692","                      \"value\": \"3\",","1693","                    }","1694","                  }","1695","                \/>","1696","                <MeasuresOverlayMeasure","1697","                  key=\"duplicated_files\"","1698","                  measure={","1699","                    Object {","1700","                      \"metric\": Object {","1701","                        \"domain\": \"Duplications\",","1702","                        \"key\": \"duplicated_files\",","1703","                        \"type\": \"INT\",","1704","                      },","1705","                      \"value\": \"1\",","1706","                    }","1707","                  }","1708","                \/>","1709","                <MeasuresOverlayMeasure","1710","                  key=\"duplicated_lines\"","1711","                  measure={","1712","                    Object {","1713","                      \"metric\": Object {","1714","                        \"domain\": \"Duplications\",","1715","                        \"key\": \"duplicated_lines\",","1716","                        \"type\": \"INT\",","1717","                      },","1718","                      \"value\": \"0\",","1719","                    }","1720","                  }","1721","                \/>","1722","                <MeasuresOverlayMeasure","1723","                  key=\"duplicated_lines_density\"","1724","                  measure={","1725","                    Object {","1726","                      \"metric\": Object {","1727","                        \"domain\": \"Duplications\",","1728","                        \"key\": \"duplicated_lines_density\",","1729","                        \"type\": \"PERCENT\",","1730","                      },","1731","                      \"value\": \"0.0\",","1732","                    }","1733","                  }","1734","                \/>","1735","              <\/div>","1736","            <\/div>","1737","          <\/div>","1738","          <div","1739","            className=\"source-viewer-measures-card\"","1746","                className=\"measures-list\"","1748","                <div","1749","                  className=\"measure measure-one-line measure-big\"","1751","                  <span","1752","                    className=\"measure-name\"","1753","                  >","1754","                    Maintainability","1755","                  <\/span>","1756","                <\/div>","1757","                <MeasuresOverlayMeasure","1758","                  key=\"code_smells\"","1759","                  measure={","1760","                    Object {","1761","                      \"metric\": Object {","1762","                        \"domain\": \"Maintainability\",","1763","                        \"key\": \"code_smells\",","1764","                        \"type\": \"INT\",","1765","                      },","1766","                      \"value\": \"2\",","1767","                    }","1768","                  }","1769","                \/>","1770","                <MeasuresOverlayMeasure","1771","                  key=\"sqale_debt_ratio\"","1772","                  measure={","1773","                    Object {","1774","                      \"metric\": Object {","1775","                        \"domain\": \"Maintainability\",","1776","                        \"key\": \"sqale_debt_ratio\",","1777","                        \"type\": \"PERCENT\",","1778","                      },","1779","                      \"value\": \"16.7\",","1780","                    }","1781","                  }","1782","                \/>","1783","                <MeasuresOverlayMeasure","1784","                  key=\"sqale_index\"","1785","                  measure={","1786","                    Object {","1787","                      \"metric\": Object {","1788","                        \"domain\": \"Maintainability\",","1789","                        \"key\": \"sqale_index\",","1790","                        \"type\": \"WORK_DUR\",","1791","                      },","1792","                      \"value\": \"40\",","1793","                    }","1794","                  }","1795","                \/>","1817","  contentLabel=\"\"","1822","    className=\"modal-container source-viewer-measures-modal\"","1825","      className=\"source-viewer-header-component source-viewer-measures-component\"","1827","      <div","1828","        className=\"source-viewer-header-component-project\"","1829","      >","1856","        className=\"source-viewer-header-component-name display-flex-center little-spacer-top\"","1866","      className=\"source-viewer-measures\"","1869","        className=\"source-viewer-measures-section\"","1872","          className=\"source-viewer-measures-card\"","1877","            <div","1878","              className=\"measures-list\"","1879","            >","1880","              <MeasuresOverlayMeasure","1881","                key=\"test_success_density\"","1882","                measure={","1883","                  Object {","1884","                    \"metric\": Object {","1885","                      \"domain\": \"Tests\",","1886","                      \"key\": \"test_success_density\",","1887","                      \"type\": \"PERCENT\",","1888","                    },","1889","                    \"value\": \"100.0\",","1890","                  }","1892","              \/>","1893","              <MeasuresOverlayMeasure","1894","                key=\"test_failures\"","1895","                measure={","1896","                  Object {","1897","                    \"metric\": Object {","1898","                      \"domain\": \"Tests\",","1899","                      \"key\": \"test_failures\",","1900","                      \"type\": \"INT\",","1901","                    },","1902","                    \"value\": \"0\",","1903","                  }","1905","              \/>","1906","              <MeasuresOverlayMeasure","1907","                key=\"test_errors\"","1908","                measure={","1909","                  Object {","1910","                    \"metric\": Object {","1911","                      \"domain\": \"Tests\",","1912","                      \"key\": \"test_errors\",","1913","                      \"type\": \"INT\",","1914","                    },","1915","                    \"value\": \"1\",","1916","                  }","1918","              \/>","1919","              <MeasuresOverlayMeasure","1920","                key=\"skipped_tests\"","1921","                measure={","1922","                  Object {","1923","                    \"metric\": Object {","1924","                      \"domain\": \"Tests\",","1925","                      \"key\": \"skipped_tests\",","1926","                      \"type\": \"INT\",","1927","                    },","1928","                    \"value\": \"0\",","1929","                  }","1931","              \/>","1932","            <\/div>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2272","component_viewer.file_measures=File measures"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/MeasuresOverlay.tsx":[{"add":["141","      <div className=\"measures-viewer-section\">","142","        <div className=\"measures-viewer-card\">","144","            {this.renderMeasure(measures.lines)}","145","            {this.renderMeasure(measures.ncloc)}","146","            {this.renderMeasure(measures.comment_lines)}","147","            {this.renderMeasure(measures.comment_lines_density)}","151","            {this.renderMeasure(measures.cognitive_complexity)}","152","            {this.renderMeasure(measures.complexity)}","153","            {this.renderMeasure(measures.function_complexity)}","178","      <div className=\"measures-viewer-section\">","179","        <div className=\"measures-viewer-card\">","188","                  {sortBy(typesFacet, f => ISSUE_TYPES.indexOf(f.val)).map(f => (","189","                    <div className=\"measure measure-one-line\" key={f.val}>","190","                      <span className=\"measure-name\">","191","                        <IssueTypeIcon className=\"little-spacer-right\" query={f.val} \/>","192","                        {translate('issue.type', f.val)}","193","                      <\/span>","194","                      <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","195","                    <\/div>","196","                  ))}","201","                  {sortBy(severitiesFacet, f => SEVERITIES.indexOf(f.val)).map(f => (","202","                    <div className=\"measure measure-one-line\" key={f.val}>","203","                      <span className=\"measure-name\">","204","                        <SeverityHelper severity={f.val} \/>","205","                      <\/span>","206","                      <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","207","                    <\/div>","208","                  ))}","213","                  {tagsFacet.map(f => (","214","                    <div className=\"measure measure-one-line\" key={f.val}>","215","                      <span className=\"measure-name\">","216","                        <TagsIcon className=\"little-spacer-right\" \/>","217","                        {f.val}","218","                      <\/span>","219","                      <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","220","                    <\/div>","221","                  ))}","237","      <div className=\"measures-viewer-section\">","238","        <div className=\"measures-viewer-card\">","256","            {this.renderMeasure(this.state.measures.uncovered_lines)}","257","            {this.renderMeasure(this.state.measures.lines_to_cover)}","258","            {this.renderMeasure(this.state.measures.uncovered_conditions)}","259","            {this.renderMeasure(this.state.measures.conditions_to_cover)}","272","      <div className=\"measures-viewer-section\">","273","        <div className=\"measures-viewer-card\">","297","            {this.renderMeasure(this.state.measures.duplicated_blocks)}","298","            {this.renderMeasure(this.state.measures.duplicated_lines)}","308","      <div className=\"measures-viewer\">","309","        <div className=\"measures-viewer-section measures-viewer-section-limited\">","310","          <div className=\"measures-viewer-card\">","312","              {this.renderMeasure(measures.tests)}","313","              {this.renderMeasure(measures.test_success_density)}","314","              {this.renderMeasure(measures.test_failures)}","315","              {this.renderMeasure(measures.test_errors)}","316","              {this.renderMeasure(measures.skipped_tests)}","317","              {this.renderMeasure(measures.test_execution_time)}","327","      <div className=\"measures-viewer-card\" key={domain}>","329","          <div className=\"measure measure-big\">","330","            <span className=\"measure-name\">{domain}<\/span>","332","          {sortBy(measures.filter(measure => measure.value !== undefined), measure =>","333","            getLocalizedMetricName(measure.metric)","334","          ).map(measure => this.renderMeasure(measure))}","346","      <div className=\"measures-viewer measures-viewer-secondary\">","347","        <div className=\"measures-viewer-section\">","350","        <div className=\"measures-viewer-section\">","361","    const header = translate('component_viewer.file_measures');","363","      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"large\">","364","        <div className=\"modal-head\">","365","          <h2>{header}<\/h2>","366","        <\/div>","367","        <div className=\"modal-body modal-container\">","368","          <div className=\"measures-viewer-header big-spacer-bottom\">","369","            <div>","383","            <div className=\"display-flex-center little-spacer-top\">","396","                <div className=\"measures-viewer\">"],"delete":["141","      <div className=\"source-viewer-measures-section\">","142","        <div className=\"source-viewer-measures-card\">","144","            <div className=\"measures-list\">","145","              {this.renderMeasure(measures.lines)}","146","              {this.renderMeasure(measures.ncloc)}","147","              {this.renderMeasure(measures.comment_lines)}","148","              {this.renderMeasure(measures.comment_lines_density)}","149","            <\/div>","153","            <div className=\"measures-list\">","154","              {this.renderMeasure(measures.cognitive_complexity)}","155","              {this.renderMeasure(measures.complexity)}","156","              {this.renderMeasure(measures.function_complexity)}","157","            <\/div>","182","      <div className=\"source-viewer-measures-section\">","183","        <div className=\"source-viewer-measures-card\">","192","                  <div className=\"measures-list\">","193","                    {sortBy(typesFacet, f => ISSUE_TYPES.indexOf(f.val)).map(f => (","194","                      <div className=\"measure measure-one-line\" key={f.val}>","195","                        <span className=\"measure-name\">","196","                          <IssueTypeIcon className=\"little-spacer-right\" query={f.val} \/>","197","                          {translate('issue.type', f.val)}","198","                        <\/span>","199","                        <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","200","                      <\/div>","201","                    ))}","202","                  <\/div>","207","                  <div className=\"measures-list\">","208","                    {sortBy(severitiesFacet, f => SEVERITIES.indexOf(f.val)).map(f => (","209","                      <div className=\"measure measure-one-line\" key={f.val}>","210","                        <span className=\"measure-name\">","211","                          <SeverityHelper severity={f.val} \/>","212","                        <\/span>","213","                        <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","214","                      <\/div>","215","                    ))}","216","                  <\/div>","221","                  <div className=\"measures-list\">","222","                    {tagsFacet.map(f => (","223","                      <div className=\"measure measure-one-line\" key={f.val}>","224","                        <span className=\"measure-name\">","225","                          <TagsIcon className=\"little-spacer-right\" \/>","226","                          {f.val}","227","                        <\/span>","228","                        <span className=\"measure-value\">{formatMeasure(f.count, 'SHORT_INT')}<\/span>","229","                      <\/div>","230","                    ))}","231","                  <\/div>","247","      <div className=\"source-viewer-measures-section\">","248","        <div className=\"source-viewer-measures-card\">","266","            <div className=\"measures-list\">","267","              {this.renderMeasure(this.state.measures.uncovered_lines)}","268","              {this.renderMeasure(this.state.measures.lines_to_cover)}","269","              {this.renderMeasure(this.state.measures.uncovered_conditions)}","270","              {this.renderMeasure(this.state.measures.conditions_to_cover)}","271","            <\/div>","284","      <div className=\"source-viewer-measures-section\">","285","        <div className=\"source-viewer-measures-card\">","309","            <div className=\"measures-list\">","310","              {this.renderMeasure(this.state.measures.duplicated_blocks)}","311","              {this.renderMeasure(this.state.measures.duplicated_lines)}","312","            <\/div>","322","      <div className=\"source-viewer-measures\">","323","        <div className=\"source-viewer-measures-section\">","324","          <div className=\"source-viewer-measures-card\">","326","              <div className=\"measures-list\">","327","                {this.renderMeasure(measures.tests)}","328","                {this.renderMeasure(measures.test_success_density)}","329","                {this.renderMeasure(measures.test_failures)}","330","                {this.renderMeasure(measures.test_errors)}","331","                {this.renderMeasure(measures.skipped_tests)}","332","                {this.renderMeasure(measures.test_execution_time)}","333","              <\/div>","343","      <div className=\"source-viewer-measures-card\" key={domain}>","345","          <div className=\"measures-list\">","346","            <div className=\"measure measure-one-line measure-big\">","347","              <span className=\"measure-name\">{domain}<\/span>","348","            <\/div>","349","            {sortBy(measures.filter(measure => measure.value !== undefined), measure =>","350","              getLocalizedMetricName(measure.metric)","351","            ).map(measure => this.renderMeasure(measure))}","364","      <div className=\"source-viewer-measures source-viewer-measures-secondary js-all-measures\">","365","        <div className=\"source-viewer-measures-section source-viewer-measures-section-big\">","368","        <div className=\"source-viewer-measures-section source-viewer-measures-section-big\">","380","      <Modal contentLabel=\"\" onRequestClose={this.props.onClose} size=\"large\">","381","        <div className=\"modal-container source-viewer-measures-modal\">","382","          <div className=\"source-viewer-header-component source-viewer-measures-component\">","383","            <div className=\"source-viewer-header-component-project\">","397","            <div className=\"source-viewer-header-component-name display-flex-center little-spacer-top\">","410","                <div className=\"source-viewer-measures\">"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/__tests__\/__snapshots__\/SourceViewerHeader-test.tsx.snap":[{"add":["7","    className=\"flex-1 little-spacer-top\"","127","    className=\"flex-1 little-spacer-top\"","265","    className=\"flex-1 little-spacer-top\""],"delete":["7","    className=\"source-viewer-header-component flex-1\"","127","    className=\"source-viewer-header-component flex-1\"","265","    className=\"source-viewer-header-component flex-1\""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.tsx":[{"add":["126","        <div className=\"flex-1 little-spacer-top\">"],"delete":["126","        <div className=\"source-viewer-header-component flex-1\">"]}]}},"818b95efd106fe8149821d3507c8a59c00d74688":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":[{"add":["91","    window.clearTimeout(this.watchStatusTimer);"],"delete":[]}]}},"fe77597e418fb06ce2e10fe786f9dfd667aa2c19":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/shared\/avatar.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/shared\/avatar.js":[{"add":["33","    const emailHash = md5.md5((this.props.email || '').toLowerCase()).trim();"],"delete":["33","    const emailHash = md5.md5(this.props.email || '').trim();"]}]}},"2ce4dce9c220bdde53d7d22278f24b36490deffc":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","162","  public void add_does_not_count_component_if_null_neither_globally_nor_per_assignee() {","170","        assertThat(distribution.getTotal()).isEqualTo(0);","171","        assertThat(distribution.getForLabel(null).isPresent()).isFalse();","207","  public void add_does_not_count_ruleKey_if_null_neither_globally_nor_per_assignee() {","402","  @Test","403","  public void verify_toString() {","404","    String componentUuid = randomAlphanumeric(2);","405","    String tag = randomAlphanumeric(3);","406","    String assignee = randomAlphanumeric(4);","407","    int effort = 10 + new Random().nextInt(5);","408","    RuleKey ruleKey = RuleKey.of(randomAlphanumeric(5), randomAlphanumeric(6));","409","    underTest.add(new DefaultIssue()","410","      .setSeverity(Severity.BLOCKER)","411","      .setComponentUuid(componentUuid)","412","      .setTags(ImmutableSet.of(tag))","413","      .setAssignee(assignee)","414","      .setRuleKey(ruleKey)","415","      .setEffort(Duration.create(effort)));","416","","417","    assertThat(underTest.toString())","418","      .isEqualTo(\"NewIssuesStatistics{\" +","419","        \"assigneesStatistics={\" + assignee + \"=\" +","420","        \"Stats{distributions={\" +","421","        \"SEVERITY=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","422","        \"statsPerLabel={\" + Severity.BLOCKER + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","423","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","424","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","425","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","426","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","427","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","428","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","429","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","430","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","431","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}, \" +","432","        \"globalStatistics=Stats{distributions={\" +","433","        \"SEVERITY=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","434","        \"statsPerLabel={\" + Severity.BLOCKER + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","435","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","436","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","437","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","438","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","439","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","440","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","441","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","442","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","443","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}\");","444","  }","445","","455","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onLeak, int offLeak, int total) {","456","    Optional<MetricStatsInt> statsOption = distribution.getForLabel(label);","457","    assertThat(statsOption.isPresent()).describedAs(\"distribution for label %s not found\", label).isTrue();","458","    MetricStatsInt stats = statsOption.get();","459","    assertThat(stats.getOnLeak()).isEqualTo(onLeak);","460","    assertThat(stats.getOffLeak()).isEqualTo(offLeak);","461","    assertThat(stats.getTotal()).isEqualTo(total);"],"delete":["161","  public void add_counts_component_if_null_globally_and_per_assignee_as_it_should_not_be_null() {","169","        assertThat(distribution.getTotal()).isEqualTo(1);","170","        assertThat(distribution.getForLabel(null).isPresent()).isTrue();","206","  public void add_does_not_count_ruleKey_if_neither_neither_globally_nor_per_assignee() {","378","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onLeak, int offLeak, int total) {","379","    Optional<MetricStatsInt> statsOption = distribution.getForLabel(label);","380","    assertThat(statsOption.isPresent()).describedAs(\"distribution for label %s not found\", label).isTrue();","381","    MetricStatsInt stats = statsOption.get();","382","    assertThat(stats.getOnLeak()).isEqualTo(onLeak);","383","    assertThat(stats.getOffLeak()).isEqualTo(offLeak);","384","    assertThat(stats.getTotal()).isEqualTo(total);","385","  }","386","","419","  @CheckForNull","420","  private Integer countDistributionOnLeak(Metric metric, String label) {","421","    return underTest.globalStatistics()","422","      .getDistributedMetricStats(metric)","423","      .getForLabel(label)","424","      .map(MetricStatsInt::getOnLeak)","425","      .orElse(null);","428","  @CheckForNull","429","  private Integer countDistributionOffLeak(Metric metric, String label) {","430","    return underTest.globalStatistics()","431","      .getDistributedMetricStats(metric)","432","      .getForLabel(label)","433","      .map(MetricStatsInt::getOffLeak)","434","      .orElse(null);","435","  }","436","","437","  private DefaultIssue defaultIssue() {","438","    return new DefaultIssue()","439","      .setAssignee(\"maynard\")","440","      .setComponentUuid(\"file-uuid\")","441","      .setNew(true)","442","      .setSeverity(Severity.INFO)","443","      .setRuleKey(RuleKey.of(\"SonarQube\", \"rule-the-world\"))","444","      .setTags(Lists.newArrayList(\"bug\", \"owasp\"))","445","      .setEffort(Duration.create(5L));","446","  }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":[{"add":["21","import com.google.common.collect.ImmutableMap;","26","import java.util.Optional;","27","import java.util.Set;","39","import org.sonar.db.RowNotFoundException;","40","import org.sonar.db.component.ComponentDto;","107","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","108","    Set<RuleKey> ruleKeys = fiveBiggest","109","      .stream()","110","      .map(Map.Entry::getKey)","111","      .map(RuleKey::parse)","112","      .collect(MoreCollectors.toSet(fiveBiggest.size()));","113","    ImmutableMap<String, RuleDefinitionDto> ruleByRuleKey = dbClient.ruleDao().selectDefinitionByKeys(dbSession, ruleKeys)","114","      .stream()","115","      .collect(MoreCollectors.uniqueIndex(s -> s.getKey().toString()));","117","    for (Map.Entry<String, MetricStatsInt> ruleStats : fiveBiggest) {","119","      RuleDefinitionDto rule = Optional.ofNullable(ruleByRuleKey.get(ruleKey))","120","        .orElseThrow(() -> new RowNotFoundException(String.format(\"Rule with key '%s' does not exist\", ruleKey)));","131","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","132","    Set<String> componentUuids = fiveBiggest","133","      .stream()","134","      .map(Map.Entry::getKey)","135","      .collect(MoreCollectors.toSet(fiveBiggest.size()));","136","    Map<String, ComponentDto> componentDtosByUuid = dbClient.componentDao().selectByUuids(dbSession, componentUuids)","137","      .stream()","138","      .collect(MoreCollectors.uniqueIndex(ComponentDto::uuid));","139","    for (Map.Entry<String, MetricStatsInt> componentStats : fiveBiggest) {","141","      String componentName = Optional.ofNullable(componentDtosByUuid.get(uuid))","142","        .map(ComponentDto::name)","143","        .orElseThrow(() -> new RowNotFoundException(String.format(\"Component with uuid '%s' not found\", uuid)));"],"delete":["103","    for (Map.Entry<String, MetricStatsInt> ruleStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak)) {","105","      RuleDefinitionDto rule = dbClient.ruleDao().selectOrFailDefinitionByKey(dbSession, RuleKey.parse(ruleKey));","116","    for (Map.Entry<String, MetricStatsInt> componentStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak)) {","118","      String componentName = dbClient.componentDao().selectOrFailByUuid(dbSession, uuid).name();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":[{"add":["21","import com.google.common.collect.ImmutableList;","22","import com.google.common.collect.ImmutableSet;","24","import java.util.Arrays;","25","import java.util.Collections;","27","import java.util.Random;","28","import java.util.stream.Collectors;","29","import java.util.stream.IntStream;","30","import org.junit.Before;","38","import org.sonar.core.util.stream.MoreCollectors;","41","import org.sonar.db.component.ComponentDao;","42","import org.sonar.db.component.ComponentDto;","43","import org.sonar.db.rule.RuleDao;","47","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","50","import static org.mockito.Matchers.anyBoolean;","51","import static org.mockito.Matchers.anyCollection;","52","import static org.mockito.Matchers.same;","64","  private NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","65","  private UserIndex userIndex = mock(UserIndex.class);","66","  private DbClient dbClient = mock(DbClient.class);","67","  private DbSession dbSession = mock(DbSession.class);","68","  private ComponentDao componentDao = mock(ComponentDao.class);","69","  private RuleDao ruleDao = mock(RuleDao.class);","70","  private Durations durations = mock(Durations.class);","71","  private NewIssuesNotification underTest = new NewIssuesNotification(userIndex, dbClient, durations);","72","","73","  @Before","74","  public void setUp() throws Exception {","75","    when(dbClient.openSession(anyBoolean())).thenReturn(dbSession);","76","    when(dbClient.componentDao()).thenReturn(componentDao);","77","    when(dbClient.ruleDao()).thenReturn(ruleDao);","78","    when(componentDao.selectByUuids(same(dbSession), anyCollection())).thenReturn(Collections.emptyList());","79","  }","114","    when(componentDao.selectByUuids(dbSession, ImmutableSet.of(\"file-uuid\", \"directory-uuid\")))","115","      .thenReturn(Arrays.asList(","116","        new ComponentDto().setUuid(\"file-uuid\").setName(\"file-name\"),","117","        new ComponentDto().setUuid(\"directory-uuid\").setName(\"directory-name\")));","118","    RuleKey rule1 = RuleKey.of(\"SonarQube\", \"rule-the-world\");","119","    RuleKey rule2 = RuleKey.of(\"SonarQube\", \"rule-the-universe\");","120","    when(ruleDao.selectDefinitionByKeys(dbSession, ImmutableSet.of(rule1, rule2)))","121","      .thenReturn(","122","        ImmutableList.of(newRule(rule1, \"Rule the World\", \"Java\"), newRule(rule2, \"Rule the Universe\", \"Clojure\")));","148","  public void add_only_5_assignees_with_biggest_issue_counts() {","149","    Random random = new Random();","150","    String[] assignees = IntStream.range(0, 6 + random.nextInt(10)).mapToObj(s -> \"assignee\" + s).toArray(String[]::new);","151","    NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","152","    int i = assignees.length;","153","    for (String assignee : assignees) {","154","      IntStream.range(0, i).mapToObj(j -> new DefaultIssue().setAssignee(assignee)).forEach(stats::add);","155","      i--;","156","    }","157","","158","    underTest.setStatistics(randomAlphanumeric(20), stats);","159","","160","    for (int j = 0; j < 5; j++) {","161","      String fieldBase = ASSIGNEE + \".\" + (j + 1);","162","      assertThat(underTest.getFieldValue(fieldBase + \".label\")).as(\"label of %s\", fieldBase).isEqualTo(assignees[j]);","163","      assertThat(underTest.getFieldValue(fieldBase + \".count\")).as(\"count of %s\", fieldBase).isEqualTo(String.valueOf(assignees.length - j));","164","    }","165","    assertThat(underTest.getFieldValue(ASSIGNEE + \".6.label\")).isNull();","166","    assertThat(underTest.getFieldValue(ASSIGNEE + \".6.count\")).isNull();","167","  }","168","","169","  @Test","170","  public void add_only_5_components_with_biggest_issue_counts() {","171","    Random random = new Random();","172","    String[] componentUuids = IntStream.range(0, 6 + random.nextInt(10)).mapToObj(s -> \"component_uuid_\" + s).toArray(String[]::new);","173","    NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","174","    int i = componentUuids.length;","175","    for (String component : componentUuids) {","176","      IntStream.range(0, i).mapToObj(j -> new DefaultIssue().setComponentUuid(component)).forEach(stats::add);","177","      i--;","178","    }","179","    when(componentDao.selectByUuids(dbSession, Arrays.stream(componentUuids).limit(5).collect(Collectors.toSet())))","180","      .thenReturn(","181","        Arrays.stream(componentUuids).map(uuid -> new ComponentDto().setUuid(uuid).setName(\"name_\" + uuid)).collect(MoreCollectors.toList()));","182","","183","    underTest.setStatistics(randomAlphanumeric(20), stats);","184","","185","    for (int j = 0; j < 5; j++) {","186","      String fieldBase = COMPONENT + \".\" + (j + 1);","187","      assertThat(underTest.getFieldValue(fieldBase + \".label\")).as(\"label of %s\", fieldBase).isEqualTo(\"name_\" + componentUuids[j]);","188","      assertThat(underTest.getFieldValue(fieldBase + \".count\")).as(\"count of %s\", fieldBase).isEqualTo(String.valueOf(componentUuids.length - j));","189","    }","190","    assertThat(underTest.getFieldValue(COMPONENT + \".6.label\")).isNull();","191","    assertThat(underTest.getFieldValue(COMPONENT + \".6.count\")).isNull();","192","  }","193","","194","  @Test","195","  public void add_only_5_rules_with_biggest_issue_counts() {","196","    Random random = new Random();","197","    String repository = randomAlphanumeric(4);","198","    String[] ruleKeys = IntStream.range(0, 6 + random.nextInt(10)).mapToObj(s -> \"rule_\" + s).toArray(String[]::new);","199","    NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","200","    int i = ruleKeys.length;","201","    for (String ruleKey : ruleKeys) {","202","      IntStream.range(0, i).mapToObj(j -> new DefaultIssue().setRuleKey(RuleKey.of(repository, ruleKey))).forEach(stats::add);","203","      i--;","204","    }","205","    when(ruleDao.selectDefinitionByKeys(dbSession, Arrays.stream(ruleKeys).limit(5).map(s -> RuleKey.of(repository, s)).collect(MoreCollectors.toSet(5))))","206","      .thenReturn(","207","        Arrays.stream(ruleKeys).limit(5).map(ruleKey -> new RuleDefinitionDto()","208","          .setRuleKey(RuleKey.of(repository, ruleKey))","209","          .setName(\"name_\" + ruleKey)","210","          .setLanguage(\"language_\" + ruleKey))","211","          .collect(MoreCollectors.toList(5)));","212","","213","    underTest.setStatistics(randomAlphanumeric(20), stats);","214","","215","    for (int j = 0; j < 5; j++) {","216","      String fieldBase = RULE + \".\" + (j + 1);","217","      assertThat(underTest.getFieldValue(fieldBase + \".label\")).as(\"label of %s\", fieldBase).isEqualTo(\"name_\" + ruleKeys[j] + \" (language_\" + ruleKeys[j] + \")\");","218","      assertThat(underTest.getFieldValue(fieldBase + \".count\")).as(\"count of %s\", fieldBase).isEqualTo(String.valueOf(ruleKeys.length - j));","219","    }","220","    assertThat(underTest.getFieldValue(RULE + \".6.label\")).isNull();","221","    assertThat(underTest.getFieldValue(RULE + \".6.count\")).isNull();","222","  }","223","","224","  @Test","259","  private RuleDefinitionDto newRule(RuleKey ruleKey, String name, String language) {","261","      .setRuleKey(ruleKey)"],"delete":["24","import org.mockito.Mockito;","38","import static org.mockito.Matchers.eq;","50","  NewIssuesStatistics.Stats stats = new NewIssuesStatistics.Stats(i -> true);","51","  UserIndex userIndex = mock(UserIndex.class);","52","  DbClient dbClient = mock(DbClient.class, Mockito.RETURNS_DEEP_STUBS);","53","  Durations durations = mock(Durations.class);","54","  NewIssuesNotification underTest = new NewIssuesNotification(userIndex, dbClient, durations);","89","    when(dbClient.componentDao().selectOrFailByUuid(any(DbSession.class), eq(\"file-uuid\")).name()).thenReturn(\"file-name\");","90","    when(dbClient.componentDao().selectOrFailByUuid(any(DbSession.class), eq(\"directory-uuid\")).name()).thenReturn(\"directory-name\");","91","    when(dbClient.ruleDao().selectOrFailDefinitionByKey(any(DbSession.class), eq(RuleKey.of(\"SonarQube\", \"rule-the-world\")))).thenReturn(newRule(\"Rule the World\", \"Java\"));","92","    when(dbClient.ruleDao().selectOrFailDefinitionByKey(any(DbSession.class), eq(RuleKey.of(\"SonarQube\", \"rule-the-universe\")))).thenReturn(newRule(\"Rule the Universe\", \"Clojure\"));","152","  private RuleDefinitionDto newRule(String name, String language) {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":[{"add":["56","  @Override","57","  public String toString() {","58","    return \"DistributedMetricStatsInt{\" +","59","      \"globalStats=\" + globalStats +","60","      \", statsPerLabel=\" + statsPerLabel +","61","      '}';","62","  }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":[{"add":["46","  @Override","47","  public String toString() {","48","    return \"MetricStatsInt{\" +","49","      \"onLeak=\" + onLeak +","50","      \", offLeak=\" + offLeak +","51","      '}';","52","  }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":[{"add":["86","  @Override","87","  public String toString() {","88","    return \"NewIssuesStatistics{\" +","89","      \"assigneesStatistics=\" + assigneesStatistics +","90","      \", globalStatistics=\" + globalStatistics +","91","      '}';","92","  }","93","","111","      String componentUuid = issue.componentUuid();","112","      if (componentUuid != null) {","113","        distributions.get(COMPONENT).increment(componentUuid, isOnLeak);","114","      }","152","    @Override","153","    public String toString() {","154","      return \"Stats{\" +","155","        \"distributions=\" + distributions +","156","        \", effortStats=\" + effortStats +","157","        '}';","158","    }"],"delete":["103","      distributions.get(COMPONENT).increment(issue.componentUuid(), isOnLeak);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":[{"add":["46","  @Override","47","  public String toString() {","48","    return \"MetricStatsLong{\" +","49","      \"onLeak=\" + onLeak +","50","      \", offLeak=\" + offLeak +","51","      '}';","52","  }"],"delete":[]}]}},"2715a0716e230a7cf92d6d4414af99ad98d7830c":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/l10n.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Conditions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/tag-facet.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/templates\/quality-gates-condition-delete.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetailsHeader.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/drilldown\/ComponentsList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/views\/gate-conditions-delete-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/history\/MeasureHistory.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SelectList\/templates\/list.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/HomeMeasuresList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/reducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-intro.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/treemap\/MeasureTreemap.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/AddConditionForm.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/project-facet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/templates\/issue-assign-form.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/templates\/issue-tags-form.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/AllMeasuresDomain.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/language-facet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/bubbleChart\/BubbleChart.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/MeasuresList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profile-comparison.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Condition.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/templates\/facets\/issues-mode-facet.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/Home.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/author-facet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/select-list\/controls.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/custom-values-facet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Search.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/templates\/issues-workspace-home.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/rule-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/l10n.js":[{"add":["97","","98","export function getLocalizedMetricName (metric) {","99","  const bundleKey = `metric.${metric.key}.name`;","100","  const fromBundle = translate(bundleKey);","101","  return fromBundle !== bundleKey ? fromBundle : metric.name;","102","}","103","","104","export function getLocalizedMetricDomain (domainName) {","105","  const bundleKey = `metric_domain.${domainName}`;","106","  const fromBundle = translate(bundleKey);","107","  return fromBundle !== bundleKey ? fromBundle : domainName;","108","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Conditions.js":[{"add":["26","import { translate, getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","109","                      <li>{getLocalizedMetricName(d.metric)}<\/li>"],"delete":["26","import { translate } from '..\/..\/..\/helpers\/l10n';","109","                      <li>{d.metric.name}<\/li>"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/tag-facet.js":[{"add":["31","      placeholder: translate('search_verb'),"],"delete":["31","      placeholder: 'Search...',"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["184","with=With","731","issues.home.new_search=New Search","840","issues.facet.mode.issues=Issues","841","issues.facet.mode.effort=Effort","1757","quality_profiles.intro1=Quality Profiles are collections of rules to apply during an analysis.","1758","quality_profiles.intro2=For each language there is a default profile. All projects not explicitly assigned to some other profile will be analyzed with the default.","2210","metric_domain.Issues=Issues","2211","metric_domain.Duplications=Duplications","2212","metric_domain.Coverage=Coverage","3187","component_measures.no_history=There is no historical data."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/templates\/quality-gates-condition-delete.hbs":[{"add":["6","    {{tp 'quality_gates.delete_condition.confirm.message' localizedMetricName}}"],"delete":["6","    {{tp 'quality_gates.delete_condition.confirm.message' metric.name}}"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/MeasureDetailsHeader.js":[{"add":["27","import { getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","33","          {getLocalizedMetricName(metric)}"],"delete":["32","          {metric.name}"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/drilldown\/ComponentsList.js":[{"add":["24","import { getLocalizedMetricName } from '..\/..\/..\/..\/helpers\/l10n';","42","                  <span className=\"small\">{getLocalizedMetricName(metric)}<\/span>","46","                      <span className=\"small\">{getLocalizedMetricName(metric)}<\/span>"],"delete":["41","                  <span className=\"small\">{metric.name}<\/span>","45","                      <span className=\"small\">{metric.name}<\/span>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/views\/gate-conditions-delete-view.js":[{"add":["22","import { getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","43","      metric: this.options.metric,","44","      localizedMetricName: getLocalizedMetricName(this.options.metric)"],"delete":["42","      metric: this.options.metric"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/history\/MeasureHistory.js":[{"add":["28","import { translate } from '..\/..\/..\/..\/helpers\/l10n';","165","              {translate('component_measures.no_history')}"],"delete":["164","              There is no historical data."]}],"server\/sonar-web\/src\/main\/js\/components\/SelectList\/templates\/list.hbs":[{"add":["8","        <input class=\"search-box-input\" type=\"search\" name=\"q\" placeholder=\"{{t 'search_verb'}}\" maxlength=\"100\" autocomplete=\"off\">"],"delete":["8","        <input class=\"search-box-input\" type=\"search\" name=\"q\" placeholder=\"Search\" maxlength=\"100\" autocomplete=\"off\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/HomeMeasuresList.js":[{"add":["25","import { getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","31","    ...sortBy(unknown, measure => getLocalizedMetricName(measure.metric))"],"delete":["30","    ...sortBy(unknown, measure => measure.metric.name)"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/reducer.js":[{"add":["25","import { getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","39","    const sortedMeasures = sortBy(measures, measure => getLocalizedMetricName(measure.metric));"],"delete":["38","    const sortedMeasures = sortBy(measures, measure => measure.metric.name);"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-intro.hbs":[{"add":["1","  <p>{{t 'quality_profiles.intro1'}}<\/p>","2","  <p>{{t 'quality_profiles.intro2'}}<\/p>"],"delete":["1","  <p>Quality Profiles are collections of rules to apply during an analysis.<\/p>","2","  <p>For each language there is a default profile. All projects not explicitly assigned to some other profile will be","3","    analyzed with the default.<\/p>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Search.js":[{"add":["55","                placeholder={translate('search_verb')}"],"delete":["55","                placeholder=\"Search...\""]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/treemap\/MeasureTreemap.js":[{"add":["26","import { translate, translateWithParameters, getLocalizedMetricName } from '..\/..\/..\/..\/helpers\/l10n';","95","    inner.push(`${getLocalizedMetricName(metric)}: ${formatted}`);","215","              {translateWithParameters('component_measures.legend.color_x', getLocalizedMetricName(metric))}"],"delete":["26","import { translate, translateWithParameters } from '..\/..\/..\/..\/helpers\/l10n';","95","    inner.push(`${metric.name}: ${formatted}`);","215","              {translateWithParameters('component_measures.legend.color_x', metric.name)}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/AddConditionForm.js":[{"add":["23","import { translate, getLocalizedMetricName, getLocalizedMetricDomain } from '..\/..\/..\/helpers\/l10n';","38","      label: getLocalizedMetricName(metric),","50","        label: getLocalizedMetricDomain(option.domain),"],"delete":["23","import { translate } from '..\/..\/..\/helpers\/l10n';","38","      label: metric.name,","50","        label: option.domain,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/project-facet.js":[{"add":["46","      placeholder: translate('search_verb'),"],"delete":["46","      placeholder: 'Search...',"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/templates\/issue-assign-form.hbs":[{"add":["4","  <input class=\"search-box-input\" type=\"search\" placeholder=\"{{t 'search_verb'}}\" value=\"{{query}}\">"],"delete":["4","  <input class=\"search-box-input\" type=\"search\" placeholder=\"Search\" value=\"{{query}}\">"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/templates\/issue-tags-form.hbs":[{"add":["4","  <input class=\"search-box-input\" type=\"search\" placeholder=\"{{t 'search_verb'}}\" value=\"{{query}}\">"],"delete":["4","  <input class=\"search-box-input\" type=\"search\" placeholder=\"Search\" value=\"{{query}}\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/AllMeasuresDomain.js":[{"add":["22","import { getLocalizedMetricDomain } from '..\/..\/..\/helpers\/l10n';","32","                <h3 className=\"page-title\">","33","                  {getLocalizedMetricDomain(domain.name)}","34","                <\/h3>"],"delete":["31","                <h3 className=\"page-title\">{domain.name}<\/h3>"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/language-facet.js":[{"add":["30","      placeholder: translate('search_verb'),"],"delete":["30","      placeholder: 'Search...',"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/bubbleChart\/BubbleChart.js":[{"add":["28","import { getLocalizedMetricName, translateWithParameters } from '..\/..\/..\/..\/helpers\/l10n';","171","          <div className=\"measure-details-bubble-chart-axis x\">","172","            {getLocalizedMetricName(this.xMetric)}","173","          <\/div>","174","          <div className=\"measure-details-bubble-chart-axis y\">","175","            {getLocalizedMetricName(this.yMetric)}","176","          <\/div>","177","          <div className=\"measure-details-bubble-chart-axis size\">","178","            {translateWithParameters('component_measures.legend.size_x', getLocalizedMetricName(this.sizeMetric))}","179","          <\/div>"],"delete":["170","          <div className=\"measure-details-bubble-chart-axis x\">{this.xMetric.name}<\/div>","171","          <div className=\"measure-details-bubble-chart-axis y\">{this.yMetric.name}<\/div>","172","          <div className=\"measure-details-bubble-chart-axis size\">Size: {this.sizeMetric.name}<\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/MeasuresList.js":[{"add":["23","import { getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","35","                      {getLocalizedMetricName(measure.metric)}"],"delete":["34","                      {measure.metric.name}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profile-comparison.hbs":[{"add":["8","    <label class=\"text-middle\" for=\"quality-profile-comparison-with-key\">{{t 'with'}}<\/label>"],"delete":["8","    <label class=\"text-middle\" for=\"quality-profile-comparison-with-key\">With<\/label>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Condition.js":[{"add":["25","import { translate, getLocalizedMetricName } from '..\/..\/..\/helpers\/l10n';","164","            {getLocalizedMetricName(metric)}"],"delete":["25","import { translate } from '..\/..\/..\/helpers\/l10n';","164","            {metric.name}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/templates\/facets\/issues-mode-facet.hbs":[{"add":["5","      <label for=\"issues-page-mode-count\">{{t 'issues.facet.mode.issues'}}<\/label>","10","      <label for=\"issues-page-mode-effort\">{{t 'issues.facet.mode.effort'}}<\/label>"],"delete":["5","      <label for=\"issues-page-mode-count\">Issues<\/label>","10","      <label for=\"issues-page-mode-effort\">Effort<\/label>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/home\/Home.js":[{"add":["24","import { translate, getLocalizedMetricDomain } from '..\/..\/..\/helpers\/l10n';","63","                        {getLocalizedMetricDomain(domain.name)}"],"delete":["24","import { translate } from '..\/..\/..\/helpers\/l10n';","63","                        {domain.name}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/author-facet.js":[{"add":["29","      placeholder: translate('search_verb'),"],"delete":["29","      placeholder: 'Search...',"]}],"server\/sonar-web\/src\/main\/js\/components\/select-list\/controls.js":[{"add":["22","import { translate } from '..\/..\/helpers\/l10n';","71","                placeholder={translate('search_verb')}"],"delete":["70","                placeholder=\"Search\""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/custom-values-facet.js":[{"add":["44","      placeholder: translate('search_verb'),"],"delete":["44","      placeholder: 'Search...',"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Search.js":[{"add":["24","import { translate, translateWithParameters } from '..\/..\/..\/helpers\/l10n';","80","              placeholder={translate('search_verb')}"],"delete":["24","import { translateWithParameters } from '..\/..\/..\/helpers\/l10n';","80","              placeholder=\"Search\""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/templates\/issues-workspace-home.hbs":[{"add":["23","    <a href=\"#resolved=false\" class=\"button spacer-left\">{{t 'issues.home.new_search'}}<\/a>"],"delete":["23","    <a href=\"#resolved=false\" class=\"button spacer-left\">New Search<\/a>"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/rule-facet.js":[{"add":["31","      placeholder: translate('search_verb'),"],"delete":["31","      placeholder: 'Search...',"]}]}},"5493e3f33006b780fbc55a64cb58727245ab953b":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutor.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutorTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutor.java":[{"add":["34","import org.sonar.api.utils.log.Logger;","35","import org.sonar.api.utils.log.Loggers;","57","  private static final Logger LOG = Loggers.get(PostProjectAnalysisTasksExecutor.class);","58","","99","      executeTask(projectAnalysis, postProjectAnalysisTask);","100","    }","101","  }","102","","103","  private static void executeTask(ProjectAnalysis projectAnalysis, PostProjectAnalysisTask postProjectAnalysisTask) {","104","    try {","106","    } catch (Exception e) {","107","      LOG.error(\"Execution of task \" + postProjectAnalysisTask.getClass() + \" failed\", e);"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/api\/posttask\/PostProjectAnalysisTasksExecutorTest.java":[{"add":["52","import static org.mockito.Matchers.any;","53","import static org.mockito.Mockito.doThrow;","238","  @Test","239","  @UseDataProvider(\"booleanValues\")","240","  public void finished_does_not_fail_if_listener_throws_exception_and_execute_subsequent_listeners(boolean allStepsExecuted) {","241","    PostProjectAnalysisTask postProjectAnalysisTask1 = mock(PostProjectAnalysisTask.class);","242","    PostProjectAnalysisTask postProjectAnalysisTask2 = mock(PostProjectAnalysisTask.class);","243","    PostProjectAnalysisTask postProjectAnalysisTask3 = mock(PostProjectAnalysisTask.class);","244","    InOrder inOrder = inOrder(postProjectAnalysisTask1, postProjectAnalysisTask2, postProjectAnalysisTask3);","245","","246","    doThrow(new RuntimeException(\"Faking a listener throws an exception\"))","247","        .when(postProjectAnalysisTask2)","248","        .finished(any(PostProjectAnalysisTask.ProjectAnalysis.class));","249","","250","    new PostProjectAnalysisTasksExecutor(","251","        ceTask, analysisMetadataHolder, qualityGateHolder, qualityGateStatusHolder, reportReader,","252","        system2, new PostProjectAnalysisTask[] {postProjectAnalysisTask1, postProjectAnalysisTask2, postProjectAnalysisTask3})","253","        .finished(allStepsExecuted);","254","","255","    inOrder.verify(postProjectAnalysisTask1).finished(projectAnalysisArgumentCaptor.capture());","256","    inOrder.verify(postProjectAnalysisTask2).finished(projectAnalysisArgumentCaptor.capture());","257","    inOrder.verify(postProjectAnalysisTask3).finished(projectAnalysisArgumentCaptor.capture());","258","    inOrder.verifyNoMoreInteractions();","259","  }","260",""],"delete":[]}]}},"bf79ed11bd311395aaf01a0d17f72a835ef0d7fb":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/source-viewer\/app.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/source-viewer\/app.js":[{"add":["30","","32","    viewer.open(options.file.uuid, { aroundLine: options.file.line });","38","  } else {","39","    viewer.open(options.file.uuid);"],"delete":["30","  viewer.open(options.file.uuid);"]}],"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":[{"add":["138","      that.requestSource(opts.aroundLine)","173","  linesLimit (aroundLine) {","174","    if (aroundLine) {","175","      return {","176","        from: Math.max(1, aroundLine - this.LINES_AROUND),","177","        to: aroundLine + this.LINES_LIMIT","178","      };","179","    }","180","    return { from: 1, to: this.LINES_LIMIT };","211","  requestSource (aroundLine) {","214","    const options = _.extend({ uuid: this.model.id }, this.linesLimit(aroundLine));","629","      from: Math.max(1, firstLine - this.LINES_AROUND),"],"delete":["138","      that.requestSource()","173","  linesLimit () {","174","    return {","175","      from: 1,","176","      to: this.LINES_LIMIT","177","    };","208","  requestSource () {","211","    const options = _.extend({ uuid: this.model.id }, this.linesLimit());","626","      from: firstLine - this.LINES_AROUND,"]}]}},"f9bb435740391633129ceee0732c531942e48115":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/actions.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/actions-test.ts":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/actions.ts":[{"add":["102","    return { locationsNavigator: true, selectedFlowIndex: nextIndex, selectedLocationIndex: 0 };"],"delete":["102","    return { selectedFlowIndex: nextIndex, selectedLocationIndex: 0 };"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/actions-test.ts":[{"add":[],"delete":[]}]}},"f6d3dfaa4195fba63a1e07cfe2764ff33a912403":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/__tests__\/alm-integration-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/__tests__\/alm-integration-test.ts":[{"add":["44","    const error = { status: 401 };","50","    (getJSON as jest.Mock).mockRejectedValue({ status: 404 });"],"delete":["44","    const error = { response: { status: 401 } };","50","    (getJSON as jest.Mock).mockRejectedValue({ response: { status: 404 } });"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["265","    const onFailLoadComponent = (response: Response) => {","356","      const onFailLoadSources = (response: Response) => {"],"delete":["265","    const onFailLoadComponent = ({ response }: { response: Response }) => {","356","      const onFailLoadSources = ({ response }: { response: Response }) => {"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":[{"add":["102","    const onError = (response?: Response) => {"],"delete":["102","    const onError = (param?: any) => {","104","        let response: Response;","105","","106","        if (param && param.response) {","107","          response = param.response;","108","        } else {","109","          response = param;","110","        }","111",""]}]}},"ec384a1e6926c801dc5167807f26b1f2ef6baf84":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentService.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStepTest.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/component\/ComponentKeysTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/component\/ComponentKeys.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidatorTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkUpdateKeyActionTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidator.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentService.java":[{"add":["43","import static org.sonar.core.component.ComponentKeys.checkProjectKey;","61","    checkProjectKey(newKey);"],"delete":["43","import static org.sonar.core.component.ComponentKeys.isValidProjectKey;","44","import static org.sonar.server.exceptions.BadRequestException.checkRequest;","62","    checkProjectKeyFormat(newKey);","96","  private static void checkProjectKeyFormat(String key) {","97","    checkRequest(isValidProjectKey(key), \"Malformed key for '%s'. It cannot be empty nor contain whitespaces.\", key);","98","  }","99",""]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStep.java":[{"add":["29","import org.sonar.api.utils.System2;","30","import org.sonar.ce.task.log.CeTaskMessages;","49","import static org.sonar.core.component.ComponentKeys.ALLOWED_CHARACTERS_MESSAGE;","50","import static org.sonar.core.component.ComponentKeys.isValidProjectKey;","59","  private final CeTaskMessages taskMessages;","60","  private final System2 system2;","62","  public ValidateProjectStep(DbClient dbClient, TreeRootHolder treeRootHolder, AnalysisMetadataHolder analysisMetadataHolder, CeTaskMessages taskMessages, System2 system2) {","66","    this.taskMessages = taskMessages;","67","    this.system2 = system2;","75","      \/\/ FIXME if module have really be dropped, no more need to load them","122","      Optional<ComponentDto> baseProjectOpt = loadBaseComponent(rawProjectKey);","123","      validateAnalysisDate(baseProjectOpt);","124","      if (!baseProjectOpt.isPresent()) {","125","        return;","126","      }","127","      if (!isValidProjectKey(baseProjectOpt.get().getKey())) {","128","        ComponentDto baseProject = baseProjectOpt.get();","129","        \/\/ As it was possible in the past to use project key with a format that is no more compatible, we need to display a warning to the user in","130","        \/\/ order for him to update his project key.","131","        \/\/ SONAR-13191 This warning should be removed in 9.0, and instead the analysis should fail","132","        taskMessages.add(new CeTaskMessages.Message(","133","          format(\"The project key \u2018%s\u2019 contains invalid characters. %s. You should update the project key with the expected format.\", baseProject.getKey(),","134","            ALLOWED_CHARACTERS_MESSAGE),","135","          system2.now()));","136","      }","146","            \"Latest analysis: \\\"%s\\\". It's only possible to rebuild the past in a chronological order.\","],"delete":["48","\/**","49"," * Validate project and modules. It will fail in the following cases :","50"," * <ol>","51"," * <li>module key is not valid<\/li>","52"," * <li>module key already exists in another project (same module key cannot exists in different projects)<\/li>","53"," * <li>module key is already used as a project key<\/li>","54"," * <li>date of the analysis is before last analysis<\/li>","55"," * <li>PR targets a branch that still contains modules<\/li>","56"," * <\/ol>","57"," *\/","66","  public ValidateProjectStep(DbClient dbClient, TreeRootHolder treeRootHolder, AnalysisMetadataHolder analysisMetadataHolder) {","123","      Optional<ComponentDto> baseProject = loadBaseComponent(rawProjectKey);","124","      validateAnalysisDate(baseProject);","134","              \"Latest analysis: \\\"%s\\\". It's only possible to rebuild the past in a chronological order.\","]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ValidateProjectStepTest.java":[{"add":["26","import org.sonar.api.impl.utils.TestSystem2;","30","import org.sonar.ce.task.log.CeTaskMessages;","46","import static org.mockito.Mockito.times;","47","import static org.mockito.Mockito.verify;","48","import static org.mockito.Mockito.verifyNoInteractions;","53","  static long PAST_ANALYSIS_TIME = 1_420_088_400_000L; \/\/ 2015-01-01","54","  static long DEFAULT_ANALYSIS_TIME = 1_433_131_200_000L; \/\/ 2015-06-01","55","  static long NOW = 1_500_000_000_000L;","56","","61","  public DbTester db = DbTester.create(System2.INSTANCE);","70","  private System2 system2 = new TestSystem2().setNow(NOW);","72","  private CeTaskMessages taskMessages = mock(CeTaskMessages.class);","73","  private DbClient dbClient = db.getDbClient();","74","","75","  private ValidateProjectStep underTest = new ValidateProjectStep(dbClient, treeRootHolder, analysisMetadataHolder, taskMessages, system2);","76","","77","  @Test","78","  public void dont_fail_for_long_forked_from_master_with_modules() {","79","    ComponentDto masterProject = db.components().insertPublicProject();","80","    dbClient.componentDao().insert(db.getSession(), ComponentTesting.newModuleDto(masterProject));","81","    setBranch(BranchType.BRANCH, masterProject.uuid());","82","    db.getSession().commit();","83","","84","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"DEFG\")","85","      .setKey(\"branch\")","86","      .build());","87","","88","    underTest.execute(new TestComputationStepContext());","89","    verifyNoInteractions(taskMessages);","90","  }","91","","92","  @Test","93","  public void not_fail_if_analysis_date_is_after_last_analysis() {","94","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","95","    dbClient.componentDao().insert(db.getSession(), project);","96","    dbClient.snapshotDao().insert(db.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(PAST_ANALYSIS_TIME));","97","    db.getSession().commit();","98","","99","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"ABCD\").setKey(PROJECT_KEY).build());","100","","101","    underTest.execute(new TestComputationStepContext());","102","  }","106","    ComponentDto masterProject = db.components().insertPublicProject();","107","    ComponentDto mergeBranch = db.components().insertProjectBranch(masterProject, b -> b.setKey(\"mergeBranch\"));","108","    dbClient.componentDao().insert(db.getSession(), ComponentTesting.newModuleDto(mergeBranch));","110","    db.getSession().commit();","125","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","126","    dbClient.componentDao().insert(db.getSession(), project);","127","    dbClient.snapshotDao().insert(db.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(1433131200000L)); \/\/ 2015-06-01","128","    db.getSession().commit();","140","  @Test","141","  public void add_warning_when_project_key_is_invalid() {","142","    ComponentDto project = db.components().insertPrivateProject(p -> p.setDbKey(\"inv$lid!\"));","143","    db.components().insertSnapshot(project, a -> a.setCreatedAt(PAST_ANALYSIS_TIME));","144","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1)","145","      .setUuid(project.uuid())","146","      .setKey(project.getKey())","147","      .build());","148","","149","    underTest.execute(new TestComputationStepContext());","150","","151","    verify(taskMessages, times(1))","152","      .add(new CeTaskMessages.Message(","153","        \"The project key \u2018inv$lid!\u2019 contains invalid characters. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit. \" +","154","          \"You should update the project key with the expected format.\",","155","        NOW));","156","  }","157","","158","  private void setBranch(BranchType type, @Nullable String mergeBranchUuid) {","159","    Branch branch = mock(Branch.class);","160","    when(branch.getType()).thenReturn(type);","161","    when(branch.getReferenceBranchUuid()).thenReturn(mergeBranchUuid);","162","    analysisMetadataHolder.setBranch(branch);","163","  }"],"delete":["48","  static long DEFAULT_ANALYSIS_TIME = 1433131200000L; \/\/ 2015-06-01","53","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","54","","57","","60","","66","  private DbClient dbClient = dbTester.getDbClient();","67","  private ValidateProjectStep underTest = new ValidateProjectStep(dbClient, treeRootHolder, analysisMetadataHolder);","71","    ComponentDto masterProject = dbTester.components().insertPublicProject();","72","    ComponentDto mergeBranch = dbTester.components().insertProjectBranch(masterProject, b -> b.setKey(\"mergeBranch\"));","73","    dbClient.componentDao().insert(dbTester.getSession(), ComponentTesting.newModuleDto(mergeBranch));","75","    dbTester.getSession().commit();","87","  public void dont_fail_for_long_forked_from_master_with_modules() {","88","    ComponentDto masterProject = dbTester.components().insertPublicProject();","89","    dbClient.componentDao().insert(dbTester.getSession(), ComponentTesting.newModuleDto(masterProject));","90","    setBranch(BranchType.BRANCH, masterProject.uuid());","91","    dbTester.getSession().commit();","92","","93","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"DEFG\")","94","      .setKey(\"branch\")","95","      .build());","96","","97","    underTest.execute(new TestComputationStepContext());","98","  }","99","","100","  private void setBranch(BranchType type, @Nullable String mergeBranchUuid) {","101","    Branch branch = mock(Branch.class);","102","    when(branch.getType()).thenReturn(type);","103","    when(branch.getReferenceBranchUuid()).thenReturn(mergeBranchUuid);","104","    analysisMetadataHolder.setBranch(branch);","105","  }","106","","107","  @Test","108","  public void not_fail_if_analysis_date_is_after_last_analysis() {","109","    ComponentDto project = ComponentTesting.newPrivateProjectDto(dbTester.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","110","    dbClient.componentDao().insert(dbTester.getSession(), project);","111","    dbClient.snapshotDao().insert(dbTester.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(1420088400000L)); \/\/ 2015-01-01","112","    dbTester.getSession().commit();","113","","114","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(\"ABCD\").setKey(PROJECT_KEY).build());","115","","116","    underTest.execute(new TestComputationStepContext());","117","  }","118","","119","  @Test","123","    ComponentDto project = ComponentTesting.newPrivateProjectDto(dbTester.organizations().insert(), \"ABCD\").setDbKey(PROJECT_KEY);","124","    dbClient.componentDao().insert(dbTester.getSession(), project);","125","    dbClient.snapshotDao().insert(dbTester.getSession(), SnapshotTesting.newAnalysis(project).setCreatedAt(1433131200000L)); \/\/ 2015-06-01","126","    dbTester.getSession().commit();"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/component\/ComponentKeysTest.java":[{"add":["39","  public void valid_project_key() {","42","  }","43","","44","  @Test","45","  public void invalid_project_key() {","46","    assertThat(ComponentKeys.isValidProjectKey(\"0123\")).isFalse();","47","","48","    assertThat(ComponentKeys.isValidProjectKey(\"ab\/12\")).isFalse();","49","    assertThat(ComponentKeys.isValidProjectKey(\"코드품질\")).isFalse();","50","","77","","78","  @Test","79","  public void checkProjectKey_fail_if_only_digit() {","80","    expectedException.expect(IllegalArgumentException.class);","81","    expectedException.expectMessage(\"Malformed key for '0123'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","82","","83","    ComponentKeys.checkProjectKey(\"0123\");","84","  }","85","","86","  @Test","87","  public void checkProjectKey_fail_if_special_characters_not_allowed() {","88","    expectedException.expect(IllegalArgumentException.class);","89","","90","    ComponentKeys.checkProjectKey(\"ab\/12\");","91","  }"],"delete":["39","  public void isValidProjectKey() {","41","    assertThat(ComponentKeys.isValidProjectKey(\"0123\")).isTrue();","43","    assertThat(ComponentKeys.isValidProjectKey(\"ab\/12\")).isTrue();","44","    assertThat(ComponentKeys.isValidProjectKey(\"코드품질\")).isTrue();"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":[{"add":["45","import static org.sonar.core.component.ComponentKeys.ALLOWED_CHARACTERS_MESSAGE;","172","    checkRequest(isValidProjectKey(key), \"Malformed key for %s: '%s'. %s.\", getQualifierToDisplay(qualifier), key, ALLOWED_CHARACTERS_MESSAGE);"],"delete":["44","import static org.sonar.api.resources.Qualifiers.APP;","172","    checkRequest(isValidProjectKey(key), \"Malformed key for %s: '%s'. It cannot be empty nor contain whitespaces.\", getQualifierToDisplay(qualifier), key);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["275","  public void fail_when_invalid_project_key() {","279","    expectedException.expectMessage(\"Malformed key for Project: 'project%Key'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","282","      .setProjectKey(\"project%Key\")"],"delete":["275","  public void properly_fail_when_invalid_project_key() {","279","    expectedException.expectMessage(\"Malformed key for Project: 'project Key'. It cannot be empty nor contain whitespaces.\");","282","      .setProjectKey(\"project Key\")"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":[{"add":["292","    expectedException.expectMessage(\"Malformed key for Project: '1234'\");","296","        .setKey(\"1234\")","304","  public void fail_when_key_contains_percent_character() {","306","    expectedException.expectMessage(\"Malformed key for Project: 'roject%Key'\");","310","        .setKey(\"roject%Key\")"],"delete":["292","    expectedException.expectMessage(\"Malformed key for Project: '  '\");","296","        .setKey(\"  \")","304","  public void properly_fail_when_key_contains_percent_character() {","306","    expectedException.expectMessage(\"Malformed key for Project: '  '\");","310","        .setKey(\"  \")"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/component\/ComponentKeys.java":[{"add":["21","import java.util.regex.Pattern;","31","  public static final String ALLOWED_CHARACTERS_MESSAGE = \"Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit\";","33","  public static final String MALFORMED_KEY_MESSAGE = \"Malformed key for '%s'. %s.\";","34","","35","  \/**","36","   * Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit","38","  private static final Pattern VALID_PROJECT_KEY_REGEXP = Pattern.compile(\"[\\\\p{Alnum}\\\\-_.:]*[\\\\p{Alpha}\\\\-_.:]+[\\\\p{Alnum}\\\\-_.:]*\");","56","    return VALID_PROJECT_KEY_REGEXP.matcher(keyCandidate).matches();","65","    checkArgument(isValidProjectKey(keyCandidate), MALFORMED_KEY_MESSAGE, keyCandidate, ALLOWED_CHARACTERS_MESSAGE);"],"delete":["30","  \/*","31","   * Must not be blank or empty","32","   *\/","33","  private static final String VALID_PROJECT_KEY_REGEXP = \"[^\\\\p{javaWhitespace}]+\";","35","  \/*","36","   * Allowed characters are alphanumeric, '-', '_', '.' and '\/'","38","  private static final String VALID_BRANCH_REGEXP = \"[\\\\p{Alnum}\\\\-_.\/]*\";","55","  \/**","56","   * Test if given parameter is valid for a project. A key is valid if it doesn't contain whitespaces.","57","   *","58","   * @return <code>true<\/code> if <code>keyCandidate<\/code> can be used for a project","59","   *\/","61","    return keyCandidate.matches(VALID_PROJECT_KEY_REGEXP);","70","    checkArgument(isValidProjectKey(keyCandidate), \"Malformed key for '%s'. %s\", keyCandidate, \"Project key cannot be empty nor contain whitespaces.\");"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidatorTest.java":[{"add":["36","import org.sonar.api.utils.log.LogAndArguments;","37","import org.sonar.api.utils.log.LogTester;","38","import org.sonar.api.utils.log.LoggerLevel;","44","import static org.assertj.core.api.Assertions.assertThat;","56","  @Rule","57","  public LogTester logTester = new LogTester();","58","","95","  public void log_warning_when_invalid_key() {","96","    ProjectReactor reactor = createProjectReactor(\"foo$bar\");","99","","100","    assertThat(logTester.getLogs(LoggerLevel.WARN))","101","      .extracting(LogAndArguments::getFormattedMsg)","102","      .containsOnly(\"\\\"foo$bar\\\" is not a valid project or module key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","103","  }","104","","105","  @Test","106","  public void log_warning_when_only_digits() {","107","    ProjectReactor reactor = createProjectReactor(\"12345\");","108","","109","    underTest.validate(reactor);","110","","111","    assertThat(logTester.getLogs(LoggerLevel.WARN))","112","      .extracting(LogAndArguments::getFormattedMsg)","113","      .containsOnly(\"\\\"12345\\\" is not a valid project or module key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","114","  }","115","","116","  @Test","117","  public void log_warning_when_backslash_in_key() {","118","    ProjectReactor reactor = createProjectReactor(\"foo\\\\bar\");","119","","120","    underTest.validate(reactor);","121","","122","    assertThat(logTester.getLogs(LoggerLevel.WARN))","123","      .extracting(LogAndArguments::getFormattedMsg)","124","      .containsOnly(\"\\\"foo\\\\bar\\\" is not a valid project or module key. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");"],"delete":["88","  public void fail_with_invalid_key() {","89","    ProjectReactor reactor = createProjectReactor(\"  \");","91","    thrown.expect(MessageException.class);","92","    thrown.expectMessage(\"\\\"  \\\" is not a valid project or module key\");"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":[{"add":["49",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":[{"add":["369","    thrown.expectMessage(\"Malformed key for 'my?project?key'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","371","    underTest.bulkUpdateKey(dbSession, project.uuid(), project.getDbKey(), \"my?project?key\", doNotReturnAnyRekeyedResource());","432","    underTest.simulateBulkUpdateKey(dbSession, \"A\", \"project\", \"project?\");"],"delete":["22","import java.util.Collections;","370","    thrown.expectMessage(\"Malformed key for '  '. Project key cannot be empty nor contain whitespaces.\");","372","    underTest.bulkUpdateKey(dbSession, project.uuid(), project.getDbKey(), \"  \", doNotReturnAnyRekeyedResource());","433","    underTest.simulateBulkUpdateKey(dbSession, \"A\", \"project\", \"  \");"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":[{"add":["133","    expectedException.expect(IllegalArgumentException.class);","134","    expectedException.expectMessage(\"Malformed key for ''. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","140","  public void fail_if_new_key_is_not_formatted_correctly() {","144","    expectedException.expect(IllegalArgumentException.class);","145","    expectedException.expectMessage(\"Malformed key for 'sample?root'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","147","    underTest.updateKey(dbSession, componentDb.getProjectDto(project), \"sample?root\");"],"delete":["35","import org.sonar.server.exceptions.BadRequestException;","134","    expectedException.expect(BadRequestException.class);","135","    expectedException.expectMessage(\"Malformed key for ''. It cannot be empty nor contain whitespaces.\");","141","  public void fail_if_new_key_is_invalid() {","145","    expectedException.expect(BadRequestException.class);","146","    expectedException.expectMessage(\"Malformed key for 'sample root'. It cannot be empty nor contain whitespaces.\");","148","    underTest.updateKey(dbSession, componentDb.getProjectDto(project), \"sample root\");"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkUpdateKeyActionTest.java":[{"add":["62","","172","    expectedException.expectMessage(\"Malformed key for 'my?project'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","174","    callByKey(MY_PROJECT_KEY, FROM, \"my?\");","182","    expectedException.expectMessage(\"Malformed key for 'my?project'. Allowed characters are alphanumeric, '-', '_', '.' and ':', with at least one non-digit.\");","184","    callDryRunByKey(MY_PROJECT_KEY, FROM, \"my?\");"],"delete":["171","    expectedException.expectMessage(\"Malformed key for 'my aproject'. Project key cannot be empty nor contain whitespaces.\");","173","    callByKey(MY_PROJECT_KEY, FROM, \"my a\");","181","    expectedException.expectMessage(\"Malformed key for 'my aproject'. Project key cannot be empty nor contain whitespaces.\");","183","    callDryRunByKey(MY_PROJECT_KEY, FROM, \"my a\");"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidator.java":[{"add":["28","import org.sonar.api.utils.log.Logger;","29","import org.sonar.api.utils.log.Loggers;","35","import static java.util.Collections.singletonList;","38","import static org.sonar.core.component.ComponentKeys.ALLOWED_CHARACTERS_MESSAGE;","51","","52","  private static final Logger LOG = Loggers.get(ProjectReactorValidator.class);","53","","73","      validateModule(moduleDef);","90","    for (String param : singletonList(BRANCH_NAME)) {","105","  private static void validateModule(ProjectDefinition moduleDef) {","107","      \/\/ As it was possible in the past to use project key with a format that is no more compatible, we need to display a warning to the user in","108","      \/\/ order for him to update his project key.","109","      \/\/ SONAR-13191 This warning should be removed in 9.0","110","      LOG.warn(\"\\\"{}\\\" is not a valid project or module key. {}.\", moduleDef.getKey(), ALLOWED_CHARACTERS_MESSAGE);"],"delete":["22","import java.util.Arrays;","67","      validateModule(moduleDef, validationMessages);","84","    for (String param : Arrays.asList(BRANCH_NAME)) {","99","  private static void validateModule(ProjectDefinition moduleDef, List<String> validationMessages) {","101","      validationMessages.add(format(\"\\\"%s\\\" is not a valid project or module key. It cannot be empty nor contain whitespaces.\", moduleDef.getKey()));"]}]}},"f3825b2d261787f0fee266d32fe2efb5426dd438":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/styles.css":[{"add":["74",".source-line-filtered.source-line-highlighted .source-line-code,","75",".source-line-filtered.source-line-highlighted:hover .source-line-code {","76","  background-color: #cdd9c4 !important;","77","}","78",""],"delete":[]}]}},"0a1dc2146dd4b142d044c0f85634869410666ed3":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/SupportPrivateProjectInDefaultPermissionTemplateTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/SupportPrivateProjectInDefaultPermissionTemplate.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/SupportPrivateProjectInDefaultPermissionTemplateTest.java":[{"add":["36","import static org.assertj.core.api.Assertions.tuple;","50","  private SupportPrivateProjectInDefaultPermissionTemplate underTest = new SupportPrivateProjectInDefaultPermissionTemplate(db.database(),","51","    new DefaultOrganizationUuidProviderImpl());","111","  public void execute_ignores_default_permission_template_for_view_of_default_organization_if_it_does_not_exist_and_removes_the_reference() throws SQLException {","113","    IdAndUuid projectDefPermTemplate = insertPermissionTemplate(DEFAULT_ORGANIZATION_UUID);","114","    setupDefaultOrganization(groupId, projectDefPermTemplate.uuid, \"fooBar\");","117","","118","    assertThat(","119","      db.select(\"select default_perm_template_project as \\\"project\\\", default_perm_template_view as \\\"view\\\" from organizations where uuid='\" + DEFAULT_ORGANIZATION_UUID + \"'\"))","120","        .extracting((row) -> row.get(\"project\"), (row) -> row.get(\"view\"))","121","        .containsOnly(tuple(projectDefPermTemplate.uuid, null));"],"delete":["49","  private SupportPrivateProjectInDefaultPermissionTemplate underTest = new SupportPrivateProjectInDefaultPermissionTemplate(db.database(), new DefaultOrganizationUuidProviderImpl());","109","  public void execute_fails_with_ISE_when_default_permission_template_for_projects_of_default_organization_does_not_exist() throws SQLException {","111","    setupDefaultOrganization(groupId, \"foBar2000\", \"pt2\");","112","","113","    expectedException.expect(IllegalStateException.class);","114","    expectedException.expectMessage(\"Permission template with uuid foBar2000 not found\");"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/SupportPrivateProjectInDefaultPermissionTemplate.java":[{"add":["27","import org.sonar.api.utils.log.Loggers;","101","    Integer projectTemplateId = getPermTemplateId(context, rawProperties.projectUuid);","102","    Integer viewTemplateId = getViewTemplateIdOrClearReference(context, rawProperties.viewUuid, defaultOrganizationUuid);","105","      projectTemplateId,","106","      viewTemplateId);","114","    List<Integer> ids = getTemplateIds(context, permissionTemplateUuid);","120","  @CheckForNull","121","  private static Integer getViewTemplateIdOrClearReference(Context context, @Nullable String permissionTemplateUuid,","122","    String defaultOrganizationUuid) throws SQLException {","123","    if (permissionTemplateUuid == null) {","124","      return null;","125","    }","126","    List<Integer> ids = getTemplateIds(context, permissionTemplateUuid);","127","    if (ids.isEmpty()) {","128","      clearViewTemplateReference(context, defaultOrganizationUuid);","129","      return null;","130","    }","131","    checkState(ids.size() == 1, \"Multiple permission templates found with uuid %s\", permissionTemplateUuid);","132","    return ids.iterator().next();","133","  }","134","","135","  private static void clearViewTemplateReference(Context context, String defaultOrganizationUuid) throws SQLException {","136","    context.prepareUpsert(\"update organizations set default_perm_template_view = null where uuid=?\")","137","      .setString(1, defaultOrganizationUuid)","138","      .execute()","139","      .commit();","140","    Loggers.get(SupportPrivateProjectInDefaultPermissionTemplate.class)","141","      .info(\"Permission template with uuid %s referenced as default permission template for view does not exist. Reference cleared.\");","142","  }","143","","144","  private static List<Integer> getTemplateIds(Context context, @Nullable String permissionTemplateUuid) throws SQLException {","145","    return context.prepareSelect(\"select id from permission_templates where kee=?\")","146","      .setString(1, permissionTemplateUuid)","147","      .list(row -> row.getInt(1));","148","  }","149",""],"delete":["102","      getPermTemplateId(context, rawProperties.projectUuid),","103","      getPermTemplateId(context, rawProperties.viewUuid));","111","    List<Integer> ids = context.prepareSelect(\"select id from permission_templates where kee=?\")","112","      .setString(1, permissionTemplateUuid)","113","      .list(row -> row.getInt(1));"]}]}},"803f745e23dc4ffc4bb232da4ed05c5401c3bd86":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/controller.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profiles-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-rule-profile.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/controller.js":[{"add":["181","  },","182","","183","  updateActivation(rule, actives) {","184","    const selectedProfile = this.options.app.state.get('query').qprofile;","185","    if (selectedProfile) {","186","      const profile = (actives || []).find(activation => activation.qProfile === selectedProfile);","187","      const listRule = this.app.list.get(rule.id);","188","      if (profile && listRule) {","189","        listRule.set('activation', {","190","          ...listRule.get('activation'),","191","          inherit: profile.inherit,","192","          severity: profile.severity","193","        });","194","      }","195","    }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profiles-view.js":[{"add":["83","      this.options.app.controller.updateActivation(this.model, data.actives);"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-rule-profile.hbs":[{"add":["13","        <i class=\"icon-inheritance icon-inheritance-overridden\" title=\"{{tp 'coding_rules.overrides' name parent.name}}\"><\/i>"],"delete":["13","        <i class=\"icon-inheritance\" title=\"{{tp 'coding_rules.overrides' name parent.name}}\"><\/i>"]}]}},"b226884e6334d06b73005852500a16074e2b3495":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/CoveredFilesActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/index\/UserIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/AddMemberActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/RemoveMemberActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexDebtTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/index\/ComponentIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ShowActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleCreatorTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/telemetry\/TelemetryDaemonTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/TagsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/InheritanceActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projecttag\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangeParentActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchResult.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/DeleteActionTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/internal\/TestSystem2.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/ScmAccountToUserLoaderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/DeactivateActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileComparisonTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/Facets.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexSearchTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/test\/index\/TestIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionComponentsTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/ListActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchIdResult.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/OrganizationCreationImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/index\/TestIndexTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["44","import org.sonar.api.utils.System2;","120","  private final System2 system2;","123","    SearchResponseLoader searchResponseLoader, SearchResponseFormat searchResponseFormat, System2 system2) {","129","    this.system2 = system2;","339","      facets = new Facets(result, system2.getDefaultTimeZone());","376","  private Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {","387","    return new Facets(orderedFacets, system2.getDefaultTimeZone());"],"delete":["121","    SearchResponseLoader searchResponseLoader, SearchResponseFormat searchResponseFormat) {","336","      facets = new Facets(result);","373","  private static Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {","384","    return new Facets(orderedFacets);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/CoveredFilesActionTest.java":[{"add":["26","import org.sonar.api.utils.System2;","61","  private TestIndex testIndex = new TestIndex(es.client(), System2.INSTANCE);"],"delete":["60","  private TestIndex testIndex = new TestIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/index\/UserIndexTest.java":[{"add":["28","import org.sonar.api.utils.System2;","54","    underTest = new UserIndex(esTester.client(), System2.INSTANCE);"],"delete":["53","    underTest = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/AddMemberActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","71","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["70","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/RemoveMemberActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","83","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["82","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":[{"add":["108","  private RuleIndex ruleIndex = new RuleIndex(es.client() ,system2);"],"delete":["108","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexDebtTest.java":[{"add":["33","import org.sonar.api.utils.internal.TestSystem2;","59","  private System2 system2 = new TestSystem2().setNow(1_500_000_000_000L).setDefaultTimeZone(TimeZone.getTimeZone(\"GMT-01:00\"));","74","    underTest = new IssueIndex(es.client(), system2, userSessionRule, new AuthorizationTypeSupport(userSessionRule));","194","    return new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(additionalFacet))), system2.getDefaultTimeZone());","208","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"assignees\"))), system2.getDefaultTimeZone());","225","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"authors\"))), system2.getDefaultTimeZone());","236","    Map<String, Long> createdAt = new Facets(underTest.search(query.build(), searchOptions), system2.getDefaultTimeZone()).get(\"createdAt\");","257","      new SearchOptions().addFacets(asList(\"projectUuids\"))), system2.getDefaultTimeZone());"],"delete":["52","import static org.mockito.Mockito.mock;","53","import static org.mockito.Mockito.when;","60","  private System2 system2 = System2.INSTANCE;","75","    System2 system = mock(System2.class);","76","    when(system.getDefaultTimeZone()).thenReturn(TimeZone.getTimeZone(\"+01:00\"));","77","    when(system.now()).thenReturn(System.currentTimeMillis());","78","    underTest = new IssueIndex(es.client(), system, userSessionRule, new AuthorizationTypeSupport(userSessionRule));","198","    return new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(additionalFacet))));","212","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"assignees\"))));","229","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"authors\"))));","240","    Map<String, Long> createdAt = new Facets(underTest.search(query.build(), searchOptions)).get(\"createdAt\");","261","      new SearchOptions().addFacets(asList(\"projectUuids\"))));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":[{"add":["100","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSessionRule), System2.INSTANCE);"],"delete":["100","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSessionRule));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTest.java":[{"add":["37","import org.sonar.api.utils.System2;","114","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["113","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/index\/ComponentIndex.java":[{"add":["45","import org.sonar.api.utils.System2;","74","  private final System2 system2;","76","  public ComponentIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport, System2 system2) {","79","    this.system2 = system2;","105","    return new SearchIdResult<>(requestBuilder.get(), id -> id, system2.getDefaultTimeZone());"],"delete":["74","  public ComponentIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport) {","102","    return new SearchIdResult<>(requestBuilder.get(), id -> id);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersActionTest.java":[{"add":["29","import org.sonar.api.utils.System2;","73","  private WsActionTester ws = new WsActionTester(new SearchMembersAction(dbClient, new UserIndex(es.client(), System2.INSTANCE), organizationProvider, userSession, new AvatarResolverImpl()));"],"delete":["72","  private WsActionTester ws = new WsActionTester(new SearchMembersAction(dbClient, new UserIndex(es.client()), organizationProvider, userSession, new AvatarResolverImpl()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexTest.java":[{"add":["62","  protected ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["62","  protected ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["106","    underTest = new RuleIndex(es.client(), system2);"],"delete":["106","    underTest = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/SearchActionTest.java":[{"add":["68","  private UserIndex index = new UserIndex(esTester.client(), system2);"],"delete":["68","  private UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndex.java":[{"add":["37","import org.sonar.api.utils.System2;","60","  private final System2 system2;","62","  public UserIndex(EsClient esClient, System2 system2) {","64","    this.system2 = system2;","128","    return new SearchResult<>(request.get(), UserDoc::new, system2.getDefaultTimeZone());"],"delete":["60","  public UserIndex(EsClient esClient) {","125","    return new SearchResult<>(request.get(), UserDoc::new);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ShowActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","76","  private RuleIndex ruleIndex = new RuleIndex(es.client(), System2.INSTANCE);"],"delete":["75","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleCreatorTest.java":[{"add":["70","  private RuleIndex ruleIndex = new RuleIndex(es.client(), system2);"],"delete":["70","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleUpdaterTest.java":[{"add":["81","  private RuleIndex ruleIndex = new RuleIndex(es.client(), system2);"],"delete":["81","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/CreateActionTest.java":[{"add":["100","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["100","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":[{"add":["103","    ruleIndex = new RuleIndex(esTester.client(), system);"],"delete":["103","    ruleIndex = new RuleIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/telemetry\/TelemetryDaemonTest.java":[{"add":["101","  private TelemetryDaemon underTest = new TelemetryDaemon(new TelemetryDataLoader(server, db.getDbClient(), pluginRepository, new UserIndex(es.client(), system2),","102","    new ProjectMeasuresIndex(es.client(), null, system2)), client, settings.asConfig(), internalProperties, system2);"],"delete":["101","  private TelemetryDaemon underTest = new TelemetryDaemon(new TelemetryDataLoader(server, db.getDbClient(), pluginRepository, new UserIndex(es.client()),","102","    new ProjectMeasuresIndex(es.client(), null)), client, settings.asConfig(), internalProperties, system2);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":[{"add":["130","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["130","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":[{"add":["52","import org.sonar.api.utils.System2;","159","  private final System2 system2;","161","  public ProjectMeasuresIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport, System2 system2) {","164","    this.system2 = system2;","181","    return new SearchIdResult<>(requestBuilder.get(), id -> id, system2.getDefaultTimeZone());"],"delete":["159","  public ProjectMeasuresIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport) {","178","    return new SearchIdResult<>(requestBuilder.get(), id -> id);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/TagsActionTest.java":[{"add":["27","import org.sonar.api.utils.System2;","57","  private RuleIndex ruleIndex = new RuleIndex(esClient, System2.INSTANCE);"],"delete":["56","  private RuleIndex ruleIndex = new RuleIndex(esClient);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/InheritanceActionTest.java":[{"add":["103","      new RuleIndex(esClient, System2.INSTANCE),"],"delete":["103","      new RuleIndex(esClient),"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorTest.java":[{"add":["85","  private RuleIndex ruleIndex = new RuleIndex(es.client(), system2);"],"delete":["85","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/CreateActionTest.java":[{"add":["79","  private UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);"],"delete":["79","  private UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projecttag\/ws\/SearchActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","68","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["67","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangeParentActionTest.java":[{"add":["106","    ruleIndex = new RuleIndex(esClient, System2.INSTANCE);"],"delete":["106","    ruleIndex = new RuleIndex(esClient);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["104","  private WsActionTester ws = new WsActionTester(new SearchAction(userSessionRule, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat, System2.INSTANCE));"],"delete":["104","  private WsActionTester ws = new WsActionTester(new SearchAction(userSessionRule, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchResult.java":[{"add":["23","import java.util.TimeZone;","34","  public SearchResult(SearchResponse response, Function<Map<String, Object>, DOC> converter, TimeZone timeZone) {","35","    this.facets = new Facets(response, timeZone);"],"delete":["33","  public SearchResult(SearchResponse response, Function<Map<String, Object>, DOC> converter) {","34","    this.facets = new Facets(response);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/DeleteActionTest.java":[{"add":["87","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["87","  private UserIndex userIndex = new UserIndex(es.client());"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/internal\/TestSystem2.java":[{"add":["21","import java.util.TimeZone;","27","  private TimeZone defaultTimeZone = getDefaultTimeZone();","41","","42","  public TestSystem2 setDefaultTimeZone(TimeZone defaultTimeZone) {","43","    this.defaultTimeZone = defaultTimeZone;","44","    return this;","45","  }","46","","47","  @Override","48","  public TimeZone getDefaultTimeZone() {","49","    return defaultTimeZone;","50","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/ScmAccountToUserLoaderTest.java":[{"add":["24","import org.sonar.api.utils.System2;","54","    UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);","78","    UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);","87","    UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);"],"delete":["53","    UserIndex index = new UserIndex(esTester.client());","77","    UserIndex index = new UserIndex(esTester.client());","86","    UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["57","import org.sonar.api.utils.System2;","134","  private final System2 system2;","136","  public RuleIndex(EsClient client, System2 system2) {","138","    this.system2 = system2;","163","    return new SearchIdResult<>(esSearch.get(), RuleKey::parse, system2.getDefaultTimeZone());"],"delete":["134","  public RuleIndex(EsClient client) {","160","    return new SearchIdResult<>(esSearch.get(), RuleKey::parse);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/DeactivateActionTest.java":[{"add":["85","  private UserIndex index = new UserIndex(esTester.client(), system2);"],"delete":["85","  private UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImpl.java":[{"add":["33","import org.sonar.api.utils.System2;","74","  private final System2 system2;","77","    WebhookPayloadFactory webhookPayloadFactory, IssueIndex issueIndex, System2 system2) {","83","    this.system2 = system2;","172","  private QualityGate createQualityGate(ComponentDto branch, IssueIndex issueIndex) {","181","    LinkedHashMap<String, Long> typeFacet = new Facets(searchResponse, system2.getDefaultTimeZone())"],"delete":["75","    WebhookPayloadFactory webhookPayloadFactory, IssueIndex issueIndex) {","169","  private static QualityGate createQualityGate(ComponentDto branch, IssueIndex issueIndex) {","178","    LinkedHashMap<String, Long> typeFacet = new Facets(searchResponse)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImplTest.java":[{"add":["147","  private IssueChangeWebhookImpl underTest = new IssueChangeWebhookImpl(spiedOnDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, issueIndex, System2.INSTANCE);","150","  private IssueChangeWebhookImpl mockedUnderTest = new IssueChangeWebhookImpl(mockedDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, spiedOnIssueIndex, System2.INSTANCE);"],"delete":["147","  private IssueChangeWebhookImpl underTest = new IssueChangeWebhookImpl(spiedOnDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, issueIndex);","150","  private IssueChangeWebhookImpl mockedUnderTest = new IssueChangeWebhookImpl(mockedDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, spiedOnIssueIndex);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileComparisonTest.java":[{"add":["76","      new RuleIndex(esTester.client(), System2.INSTANCE),"],"delete":["76","      new RuleIndex(esTester.client()),"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":[{"add":["44","import org.sonar.api.utils.internal.TestSystem2;","101","  private System2 system2 = new TestSystem2().setNow(1_500_000_000_000L).setDefaultTimeZone(TimeZone.getTimeZone(\"GMT-01:00\"));","779","    Map<String, Long> buckets = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","799","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","815","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","833","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","851","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","864","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","883","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","897","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","1416","    Facets facets = new Facets(result, system2.getDefaultTimeZone());","1423","    Facets facets = new Facets(result, system2.getDefaultTimeZone());"],"delete":["36","import org.junit.Before;","73","import static org.mockito.Mockito.mock;","74","import static org.mockito.Mockito.when;","103","  private System2 system2 = mock(System2.class);","113","  @Before","114","  public void setUp() {","115","    when(system2.getDefaultTimeZone()).thenReturn(TimeZone.getTimeZone(\"GMT-1:00\"));","116","    when(system2.now()).thenReturn(System.currentTimeMillis());","117","  }","118","","787","    Map<String, Long> buckets = new Facets(result).get(\"createdAt\");","807","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","823","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","841","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","859","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","872","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","891","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","905","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","1424","    Facets facets = new Facets(result);","1431","    Facets facets = new Facets(result);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/Facets.java":[{"add":["22","import java.util.Date;","27","import java.util.TimeZone;","51","  private final TimeZone timeZone;","53","  public Facets(LinkedHashMap<String, LinkedHashMap<String, Long>> facetsByName, TimeZone timeZone) {","55","    this.timeZone = timeZone;","58","  public Facets(SearchResponse response, TimeZone timeZone) {","60","    this.timeZone = timeZone;","136","      String day = dateTimeToDate(value.getKeyAsString(), timeZone);","145","  private static String dateTimeToDate(String timestamp, TimeZone timeZone) {","146","    Date date = parseDateTime(timestamp);","147","    return date.toInstant().atZone(timeZone.toZoneId()).toLocalDate().toString();","148","  }","149",""],"delete":["40","import static org.sonar.api.utils.DateUtils.formatDate;","51","  public Facets(LinkedHashMap<String, LinkedHashMap<String, Long>> facetsByName) {","55","  public Facets(SearchResponse response) {","132","      String day = formatDate(parseDateTime(value.getKeyAsString()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexSearchTest.java":[{"add":["60","  private ComponentIndex underTest = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["60","  private ComponentIndex underTest = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":[{"add":["98","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["98","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/test\/index\/TestIndex.java":[{"add":["27","import org.sonar.api.utils.System2;","44","  private final System2 system2;","46","  public TestIndex(EsClient client, System2 system2) {","48","    this.system2 = system2;","70","    return new SearchResult<>(searchRequest.get(), TestDoc::new, system2.getDefaultTimeZone());","84","    return new SearchResult<>(searchRequest.get(), TestDoc::new, system2.getDefaultTimeZone());","113","    return new SearchResult<>(searchRequest.get(), TestDoc::new, system2.getDefaultTimeZone());"],"delete":["44","  public TestIndex(EsClient client) {","67","    return new SearchResult<>(searchRequest.get(), TestDoc::new);","81","    return new SearchResult<>(searchRequest.get(), TestDoc::new);","110","    return new SearchResult<>(searchRequest.get(), TestDoc::new);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":[{"add":["92","  private RuleIndex ruleIndex = new RuleIndex(es.client(), System2.INSTANCE);"],"delete":["92","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionComponentsTest.java":[{"add":["106","  private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat, System2.INSTANCE));"],"delete":["106","  private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":[{"add":["29","import org.sonar.api.utils.System2;","69","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["68","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/ListActionTest.java":[{"add":["27","import org.sonar.api.utils.System2;","77","  private TestIndex testIndex = new TestIndex(es.client(), System2.INSTANCE);"],"delete":["76","  private TestIndex testIndex = new TestIndex(es.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchIdResult.java":[{"add":["24","import java.util.TimeZone;","36","  public SearchIdResult(SearchResponse response, Function<String, ID> converter, TimeZone timeZone) {","37","    this.facets = new Facets(response, timeZone);"],"delete":["35","  public SearchIdResult(SearchResponse response, Function<String, ID> converter) {","36","    this.facets = new Facets(response);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/OrganizationCreationImplTest.java":[{"add":["106","  private UserIndex userIndex = new UserIndex(es.client(), system2);"],"delete":["106","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":[{"add":["70","  private RuleIndex ruleIndex = new RuleIndex(esTester.client(), System2.INSTANCE);"],"delete":["70","  private RuleIndex ruleIndex = new RuleIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest.java":[{"add":["86","  private RuleIndex ruleIndex = new RuleIndex(esTester.client(), System2.INSTANCE);"],"delete":["86","  private RuleIndex ruleIndex = new RuleIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/index\/TestIndexTest.java":[{"add":["26","import org.sonar.api.utils.System2;","39","  TestIndex underTest = new TestIndex(es.client(), System2.INSTANCE);"],"delete":["38","  TestIndex underTest = new TestIndex(es.client());"]}]}},"867894b876c520c1342a60e36a2e421a2a291b71":{"changes":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_profile_admin.json":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.js":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_gate_admin.json":"ADD"},"diff":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_profile_admin.json":[{"add":["4","    \"showQualityGates\": false,"],"delete":["4","    \"showQualityGates\": true,"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.js":[{"add":["280","    if (!this.props.conf.showSettings) {","281","      return null;","282","    }","283",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["66","import static org.sonar.core.permission.GlobalPermissions.QUALITY_GATE_ADMIN;","319","  public void return_configuration_for_quality_gate_admin() throws Exception {","320","    init();","321","    componentDbTester.insertComponent(project);","322","    userSessionRule.logIn()","323","      .addProjectUuidPermissions(UserRole.USER, project.uuid())","324","      .addOrganizationPermission(project.getOrganizationUuid(), QUALITY_GATE_ADMIN);","325","","326","    executeAndVerify(project.key(), \"return_configuration_for_quality_gate_admin.json\");","327","  }","328","","329","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["61","import static org.sonar.core.permission.GlobalPermissions.QUALITY_GATE_ADMIN;","142","      if (userSession.hasComponentPermission(ADMIN, component) ||","143","        userSession.hasOrganizationPermission(org.getUuid(), QUALITY_PROFILE_ADMIN) ||","144","        userSession.hasOrganizationPermission(org.getUuid(), QUALITY_GATE_ADMIN)) {","230","    boolean isQualityProfileAdmin = userSession.hasOrganizationPermission(component.getOrganizationUuid(), QUALITY_PROFILE_ADMIN);","231","    boolean isQualityGateAdmin = userSession.hasOrganizationPermission(component.getOrganizationUuid(), QUALITY_GATE_ADMIN);","234","    json.prop(\"showQualityProfiles\", isProject && (isAdmin || isQualityProfileAdmin));","235","    json.prop(\"showQualityGates\", isProject && (isAdmin || isQualityGateAdmin));"],"delete":["141","      if (userSession.hasComponentPermission(ADMIN, component) || userSession.hasOrganizationPermission(org.getUuid(), QUALITY_PROFILE_ADMIN)) {","229","    json.prop(\"showQualityProfiles\", isProject);","230","    json.prop(\"showQualityGates\", isProject);"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/ui\/ws\/ComponentActionTest\/return_configuration_for_quality_gate_admin.json":[{"add":[],"delete":[]}]}},"a26c8cf3d00955a807ade179d24e68b66aaf669f":{"changes":{"\/dev\/null":"DELETE","it\/it-projects\/scm\/xoo-sample-with-scm\/sonar-project.properties":"ADD","it\/it-projects\/scm\/xoo-sample-with-scm\/src\/main\/xoo\/sample\/Sample.xoo":"ADD","plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/scm\/XooBlameCommand.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/Category2Suite.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/scm\/ScmTest.java":"ADD","it\/it-projects\/scm\/xoo-sample-with-scm\/src\/main\/xoo\/sample\/Sample.xoo.scm":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"it\/it-projects\/scm\/xoo-sample-with-scm\/sonar-project.properties":[{"add":[],"delete":[]}],"it\/it-projects\/scm\/xoo-sample-with-scm\/src\/main\/xoo\/sample\/Sample.xoo":[{"add":[],"delete":[]}],"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/scm\/XooBlameCommand.java":[{"add":["26","import java.util.Date;","71","            Date dateTime = DateUtils.parseDateTimeQuietly(dateStr);","72","            if (dateTime != null) {","73","              blameLine.date(dateTime);","74","            } else {","75","              \/\/ Will throw an exception, when date is not in format \"yyyy-MM-dd\"","76","              blameLine.date(DateUtils.parseDate(dateStr));","77","            }"],"delete":["69","          \/\/ Will throw an exception, when date is not in format \"yyyy-MM-dd\"","71","            blameLine.date(DateUtils.parseDate(dateStr));"]}],"it\/it-tests\/src\/test\/java\/it\/Category2Suite.java":[{"add":["46","import it.scm.ScmTest;","65","  \/\/ scm","66","  ScmTest.class,"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/scm\/ScmTest.java":[{"add":[],"delete":[]}],"it\/it-projects\/scm\/xoo-sample-with-scm\/src\/main\/xoo\/sample\/Sample.xoo.scm":[{"add":[],"delete":[]}]}},"09c5d20c6c86d544c5a5a2448fe553b95f3cba2d":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/TempFolderProviderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/TempFolderProvider.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/TempFolderProviderTest.java":[{"add":["21","import org.apache.commons.io.FileUtils;","43","  TempFolderProvider sut = new TempFolderProvider();","44","","46","  public void existing_temp_dir() throws Exception {","48","    File tmpDir = temp.newFolder();","49","    when(fs.getTempDir()).thenReturn(tmpDir);","50","","51","    TempFolder folder = sut.provide(fs);","52","    assertThat(folder).isNotNull();","53","    File newDir = folder.newDir();","54","    assertThat(newDir).exists().isDirectory();","55","    assertThat(newDir.getParentFile().getCanonicalPath()).startsWith(tmpDir.getCanonicalPath());","56","  }","57","","58","  @Test","59","  public void create_temp_dir_if_missing() throws Exception {","60","    ServerFileSystem fs = mock(ServerFileSystem.class);","61","    File tmpDir = temp.newFolder();","62","    when(fs.getTempDir()).thenReturn(tmpDir);","63","    FileUtils.forceDelete(tmpDir);","64","","65","    TempFolder folder = sut.provide(fs);","66","    assertThat(folder).isNotNull();","67","    File newDir = folder.newDir();","68","    assertThat(newDir).exists().isDirectory();","69","    assertThat(newDir.getParentFile().getCanonicalPath()).startsWith(tmpDir.getCanonicalPath());"],"delete":["43","  public void createTempFolder() throws Exception {","45","    File serverTempFolder = temp.newFolder();","46","    when(fs.getTempDir()).thenReturn(serverTempFolder);","47","    TempFolderProvider tempFolderProvider = new TempFolderProvider(); ","48","    TempFolder tempUtils = tempFolderProvider.provide(fs);","49","    tempUtils.newDir();","50","    tempUtils.newFile();","51","    assertThat(new File(serverTempFolder, \"tmp\")).exists();","52","    assertThat(new File(serverTempFolder, \"tmp\").list()).hasSize(2);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/TempFolderProvider.java":[{"add":["40","        throw new IllegalStateException(\"Unable to create temp directory \" + tempDir, e);"],"delete":["40","        throw new IllegalStateException(\"Unable to create root temp directory \" + tempDir, e);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":[{"add":["101","    \/\/ Tomcat is started by app process with correct java.io.tmpdir","102","    return FileUtils.getTempDirectory();"],"delete":["101","    return new File(homeDir, \"temp\");"]}]}},"d87f9c38b93c4078a4d43689e7decca87e527a86":{"changes":{"server\/sonar-web\/src\/main\/less\/components\/page.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/less\/components\/page.less":[{"add":["12","  min-width: 1080px;"],"delete":["0","\/*","1"," * SonarQube, open source software quality management tool.","2"," * Copyright (C) 2008-2014 SonarSource","3"," * mailto:contact AT sonarsource DOT com","4"," *","5"," * SonarQube is free software; you can redistribute it and\/or","6"," * modify it under the terms of the GNU Lesser General Public","7"," * License as published by the Free Software Foundation; either","8"," * version 3 of the License, or (at your option) any later version.","9"," *","10"," * SonarQube is distributed in the hope that it will be useful,","11"," * but WITHOUT ANY WARRANTY; without even the implied warranty of","12"," * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU","13"," * Lesser General Public License for more details.","14"," *","15"," * You should have received a copy of the GNU Lesser General Public License","16"," * along with this program; if not, write to the Free Software Foundation,","17"," * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.","18"," *\/","31","  min-width: 980px;"]}]}},"0e5d51d8b22f08bc83953e039e762c3d69ae34cc":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/common\/LocationIndex.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/common\/LocationIndex.css":[{"add":["43",".location-index.is-leading:first-child {","44","  margin-left: 0;","45","}","46","","47",".location-index.is-leading:not(:first-child) {","49","  margin-left: -4px;","53",".location-index.is-leading + .is-leading {","54","  position: relative;","55","  transform: none;","56","}","57",""],"delete":["43",".location-index.is-leading {","45","  margin: 1px 0 0 -4px !important;"]}]}},"2022f77214c6456941f10591e435db8ebead08c0":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoaderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/NopSettingLoader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/SettingLoader.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/NopSettingLoaderTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":[{"add":["37","import static java.util.Collections.unmodifiableMap;","41"," * Merge of system settings (including conf\/sonar.properties) and the global properties stored","42"," * in the db table \"properties\". These settings do not contain the settings specific to a project.","169","    Map<String, String> result = new HashMap<>();","170","    loadAll(result);","171","    systemProps.forEach((key, value) -> result.put((String) key, (String) value));","172","    return unmodifiableMap(result);","175","  private void loadAll(Map<String, String> appendTo) {","177","      Map<String, String> cache = settingLoader.loadAll();","178","      appendTo.putAll(cache);","181","      appendTo.putAll(getPropertiesDbFailureCache);"],"delete":["22","import com.google.common.collect.ImmutableMap;","41"," * Merge of {@link SystemSettings} and the global properties stored in the db table \"properties\". These","42"," * settings do not contain the settings specific to a project.","169","    ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();","170","    loadAll(builder);","171","    systemProps.forEach((key, value) -> builder.put((String) key, (String) value));","172","    return builder.build();","175","  private void loadAll(ImmutableMap.Builder<String, String> builder) {","177","      ImmutableMap.Builder<String, String> cacheBuilder = ImmutableMap.builder();","178","      settingLoader.loadAll(cacheBuilder);","179","      Map<String, String> cache = cacheBuilder.build();","180","      builder.putAll(cache);","183","      builder.putAll(getPropertiesDbFailureCache);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoaderTest.java":[{"add":["21","import java.util.Map;","51","","63","    Map<String, String> map = underTest.loadAll();","64","    assertThat(map).isEmpty();","67","  @Test","68","  public void test_loadAll() {","69","    insertPropertyIntoDb(\"foo\", \"1\");","70","    insertPropertyIntoDb(\"bar\", \"2\");","71","","72","    Map<String, String> map = underTest.loadAll();","73","","74","    assertThat(map).containsOnly(entry(\"foo\", \"1\"), entry(\"bar\", \"2\"));","75","  }"],"delete":["21","import com.google.common.collect.ImmutableMap;","62","    ImmutableMap.Builder<String, String> map = ImmutableMap.builder();","63","    underTest.loadAll(map);","64","   assertThat(map.build().isEmpty()).isTrue();","67"," @Test","68"," public void test_loadAll() {","69","  insertPropertyIntoDb(\"foo\", \"1\");","70","  insertPropertyIntoDb(\"bar\", \"2\");","71","  ImmutableMap.Builder<String, String> map = ImmutableMap.builder();","72","  underTest.loadAll(map);","73","  assertThat(map.build()).containsOnly(entry(\"foo\", \"1\"), entry(\"bar\", \"2\"));","74"," }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoader.java":[{"add":["21","import java.util.Map;","22","import org.sonar.core.util.stream.MoreCollectors;","47","  public Map<String, String> loadAll() {","49","      return dbClient.propertiesDao().selectGlobalProperties(dbSession)","50","        .stream()","51","        .collect(MoreCollectors.uniqueIndex(PropertyDto::getKey, p -> defaultString(p.getValue())));"],"delete":["21","import com.google.common.collect.ImmutableMap;","46","  public void loadAll(ImmutableMap.Builder<String, String> appendTo) {","48","      dbClient.propertiesDao().selectGlobalProperties(dbSession)","49","        .forEach(p -> appendTo.put(p.getKey(), defaultString(p.getValue())));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/NopSettingLoader.java":[{"add":["21","import java.util.Collections;","22","import java.util.Map;","31","  public Map<String, String> loadAll() {","32","    return Collections.emptyMap();"],"delete":["21","import com.google.common.collect.ImmutableMap;","30","  public void loadAll(ImmutableMap.Builder<String, String> appendTo) {","31","    \/\/ nothing to load"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/SettingLoader.java":[{"add":["21","import java.util.Map;","29","  Map<String,String> loadAll();"],"delete":["21","import com.google.common.collect.ImmutableMap;","29","  void loadAll(ImmutableMap.Builder<String, String> appendTo);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/NopSettingLoaderTest.java":[{"add":["33","    assertThat(underTest.loadAll()).isEmpty();"],"delete":["21","import com.google.common.collect.ImmutableMap;","23","import org.sonar.server.setting.NopSettingLoader;","35","    ImmutableMap.Builder<String,String> map = ImmutableMap.builder();","36","    underTest.loadAll(map);","37","    assertThat(map.build()).isEmpty();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":[{"add":["37","import static java.util.Collections.unmodifiableMap;","111","  \/**","112","   * SONAR-8216 System info page fails when a setting is defined both in sonar.properties and in DB","113","   *\/","114","  @Test","115","  public void getProperties_does_not_fail_on_duplicated_key() {","116","    insertPropertyIntoDb(\"foo\", \"from_db\");","117","    underTest = create(ImmutableMap.of(\"foo\", \"from_system\"));","118","","119","    assertThat(underTest.get(\"foo\")).hasValue(\"from_system\");","120","    assertThat(underTest.getProperties().get(\"foo\")).isEqualTo(\"from_system\");","121","  }","122","","273","    doThrow(toBeThrown).when(settingLoaderMock).loadAll();","284","    doThrow(toBeThrown).when(settingLoaderMock).loadAll();","299","    doAnswer(invocationOnMock -> ImmutableMap.of(key, value1))","300","      .doThrow(toBeThrown)","301","      .doAnswer(invocationOnMock -> ImmutableMap.of(key, value2))","303","      .loadAll();","401","    public Map<String, String> loadAll() {","402","      return unmodifiableMap(map);"],"delete":["41","import static org.mockito.Matchers.any;","261","    doThrow(toBeThrown).when(settingLoaderMock).loadAll(any(ImmutableMap.Builder.class));","272","    doThrow(toBeThrown).when(settingLoaderMock).loadAll(any(ImmutableMap.Builder.class));","287","    doAnswer(invocationOnMock -> {","288","      ImmutableMap.Builder<String, String> builder = (ImmutableMap.Builder<String, String>) invocationOnMock.getArguments()[0];","289","      builder.put(key, value1);","290","      return null;","291","    }).doThrow(toBeThrown)","292","      .doAnswer(invocationOnMock -> {","293","        ImmutableMap.Builder<String, String> builder = (ImmutableMap.Builder<String, String>) invocationOnMock.getArguments()[0];","294","        builder.put(key, value2);","295","        return null;","296","      })","298","      .loadAll(any(ImmutableMap.Builder.class));","396","    public void loadAll(ImmutableMap.Builder<String, String> appendTo) {","397","      appendTo.putAll(map);"]}]}},"a9d2422b125b9d89cd8efeef69b43439d41d0bf5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["252","              notExist: false,"],"delete":[]}]}},"c2cd8b4fccf2665d25db30a372c6385da29152f2":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.js":[{"add":["24","import { fetchLanguages, fetchAppState } from '..\/..\/store\/rootActions';","45","      .then(() => Promise.all([this.props.fetchAppState(), this.props.fetchLanguages()]))","71","  fetchLanguages"],"delete":["24","import { fetchLanguages, fetchAppState, fetchOrganizations } from '..\/..\/store\/rootActions';","33","    fetchOrganizations: React.PropTypes.func.isRequired,","46","      .then(() =>","47","        Promise.all([","48","          this.props.fetchAppState(),","49","          this.props.fetchOrganizations(),","50","          this.props.fetchLanguages()","51","        ])","52","      )","78","  fetchLanguages,","79","  fetchOrganizations"]}]}},"13213988a1e5a88833cb70c2dedba51e70de154f":{"changes":{"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/platform\/UrlSettingsTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/config\/EmailSettings.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/platform\/UrlSettings.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/platform\/Server.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/config\/EmailSettingsTest.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/platform\/UrlSettingsTest.java":[{"add":["60","  public void remove_trailing_slash() {","61","    settings.setProperty(\"sonar.core.serverBaseURL\", \"http:\/\/mydomain.com\/\");","62","","63","    assertThat(underTest().getBaseUrl()).isEqualTo(\"http:\/\/mydomain.com\");","64","  }","65","","66","  @Test"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/config\/EmailSettings.java":[{"add":["22","import org.apache.commons.lang.StringUtils;","97","    return config.get(SERVER_BASE_URL)","98","      .map(t -> StringUtils.removeEnd(t, \"\/\"))","99","      .orElse(SERVER_BASE_URL_DEFAULT_VALUE);"],"delete":["96","    return get(SERVER_BASE_URL, SERVER_BASE_URL_DEFAULT_VALUE);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/platform\/UrlSettings.java":[{"add":["21","import org.apache.commons.lang.StringUtils;","55","    \/\/ Remove trailing slashes","56","    return StringUtils.removeEnd(url, \"\/\");"],"delete":["54","    return url;"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/platform\/Server.java":[{"add":["88","   * Return the public root url, without trailing slash, for instance : https:\/\/nemo.sonarqube.org."],"delete":["88","   * Return the public root url, for instance : https:\/\/nemo.sonarqube.org."]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/config\/EmailSettingsTest.java":[{"add":["21","import org.apache.commons.lang.RandomStringUtils;","27","import static org.sonar.api.CoreProperties.SERVER_BASE_URL;","31","  private MapSettings settings = new MapSettings();","32","  private EmailSettings underTest = new EmailSettings(settings.asConfig());","48","  public void getServerBaseUrl_returns_property_value() {","49","    String expected = RandomStringUtils.randomAlphabetic(15);","50","    settings.setProperty(SERVER_BASE_URL, expected);","51","","52","    assertThat(underTest.getServerBaseURL()).isEqualTo(expected);","53","  }","54","","55","  @Test","56","  public void getServerBaseUrl_removes_trailing_slash_from_property_value() {","57","    settings.setProperty(SERVER_BASE_URL, \"http:\/\/www.acme.com\/\");","58","","59","    assertThat(underTest.getServerBaseURL()).isEqualTo(\"http:\/\/www.acme.com\");","60","  }","61","","62","  @Test"],"delete":["29","  private EmailSettings underTest = new EmailSettings(new MapSettings().asConfig());"]}]}},"77ac9136fa46b471bac80420680e661343fcb495":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/SensorStrategy.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/SensorStrategy.java":[{"add":["21","import org.sonar.api.batch.fs.InputFile;","22","","24"," * A shared, mutable object in the project container.","27"," * It is also injected into each InputFile to change the behavior of {@link InputFile#relativePath()}"],"delete":["22"," * A shared, mutable object in the module container."]}]}},"f1ba685b86d6435ae21960ee6962b83c447dd3da":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/App-test.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/App-test.tsx":[{"add":["306","  const mockDone = (_: T.Issue[], paging: T.Paging) =>"],"delete":["306","  const mockDone = (_lastIssue: T.Issue, paging: T.Paging) =>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["669","issues.cannot_open_issue_max_initial_X_fetched=Cannot open selected issue, as it's not part of the initial {0} loaded issues."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":[{"add":["108","export function getOpen(query: T.RawQuery): string | undefined {"],"delete":["108","export function getOpen(query: T.RawQuery): string {"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["118","  cannotShowOpenIssue?: boolean;","145","const MAX_INITAL_FETCH = 1000;","463","    const openIssueKey = getOpen(this.props.location.query);","464","    let fetchPromise;","465","","467","    if (openIssueKey !== undefined) {","468","      fetchPromise = this.fetchIssuesUntil(1, (pageIssues: T.Issue[], paging: T.Paging) => {","469","        if (","470","          paging.total <= paging.pageIndex * paging.pageSize ||","471","          paging.pageIndex * paging.pageSize >= MAX_INITAL_FETCH","472","        ) {","473","          return true;","474","        }","475","        return pageIssues.some(issue => issue.key === openIssueKey);","476","      });","477","    } else {","478","      fetchPromise = this.fetchIssues({}, true);","479","    }","480","","481","    return fetchPromise.then(","490","            cannotShowOpenIssue: Boolean(openIssueKey && !openIssue),","524","    done: (pageIssues: T.Issue[], paging: T.Paging) => boolean","525","  ): Promise<FetchIssuesPromise> => {","526","    const recursiveFetch = (p: number, prevIssues: T.Issue[]): Promise<FetchIssuesPromise> => {","527","      return this.fetchIssuesPage(p).then(({ issues: pageIssues, paging, ...other }) => {","528","        const issues = [...prevIssues, ...pageIssues];","529","        return done(pageIssues, paging)","530","          ? { issues, paging, ...other }","531","          : recursiveFetch(p + 1, issues);","532","      });","575","    const done = (pageIssues: T.Issue[], paging: T.Paging) => {","576","      const lastIssue = pageIssues[pageIssues.length - 1];","586","    if (done(issues, paging)) {","834","      (issues: T.Issue[]) => {","1121","    const { cannotShowOpenIssue, checkAll, issues, loading, openIssue, paging } = this.state;","1148","            {cannotShowOpenIssue && (","1149","              <Alert className=\"big-spacer-bottom\" variant=\"warning\">","1150","                {translateWithParameters(","1151","                  'issues.cannot_open_issue_max_initial_X_fetched',","1152","                  MAX_INITAL_FETCH","1153","                )}","1154","              <\/Alert>","1155","            )}"],"delete":["462","    return this.fetchIssues({}, true).then(","504","    done: (lastIssue: T.Issue, paging: T.Paging) => boolean","505","  ): Promise<{ issues: T.Issue[]; paging: T.Paging }> => {","506","    const recursiveFetch = (","507","      p: number,","508","      issues: T.Issue[]","509","    ): Promise<{ issues: T.Issue[]; paging: T.Paging }> => {","510","      return this.fetchIssuesPage(p)","511","        .then(response => {","512","          return {","513","            issues: [...issues, ...response.issues],","514","            paging: response.paging","515","          };","516","        })","517","        .then(({ issues, paging }) => {","518","          return done(issues[issues.length - 1], paging)","519","            ? { issues, paging }","520","            : recursiveFetch(p + 1, issues);","521","        });","564","    const done = (lastIssue: T.Issue, paging: T.Paging) => {","574","    if (done(issues[issues.length - 1], paging)) {","822","      issues => {","1109","    const { checkAll, issues, loading, openIssue, paging } = this.state;"]}]}},"0928b5632fd08edb53614a125bc52b3f5bee2b7d":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Tooltip-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Tooltip-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/Tooltip.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Tooltip-test.tsx.snap":[{"add":[],"delete":["14","exports[`should open & close 1`] = `","15","<React.Fragment>","16","  <div","17","    id=\"tooltip\"","18","    onMouseEnter={[Function]}","19","    onMouseLeave={[Function]}","20","  \/>","21","  <TooltipPortal>","22","    <ScreenPositionFixer","23","      ready={false}","24","    \/>","25","  <\/TooltipPortal>","26","<\/React.Fragment>","27","`;","28","","29","exports[`should open & close 2`] = `","30","<React.Fragment>","31","  <div","32","    id=\"tooltip\"","33","    onMouseEnter={[Function]}","34","    onMouseLeave={[Function]}","35","  \/>","36","<\/React.Fragment>","37","`;","38",""]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Tooltip-test.tsx":[{"add":["54","  expect(wrapper.find('TooltipPortal').exists()).toBe(true);","60","  expect(wrapper.find('TooltipPortal').exists()).toBe(false);","64","it('should not open when mouse goes away quickly', () => {","65","  const onShow = jest.fn();","66","  const onHide = jest.fn();","67","  const wrapper = shallow(","68","    <TooltipInner onHide={onHide} onShow={onShow} overlay={<span id=\"overlay\" \/>}>","69","      <div id=\"tooltip\" \/>","70","    <\/TooltipInner>","71","  );","72","","73","  wrapper.find('#tooltip').simulate('mouseenter');","74","  wrapper.find('#tooltip').simulate('mouseleave');","75","  jest.runOnlyPendingTimers();","76","  wrapper.update();","77","","78","  expect(wrapper.find('TooltipPortal').exists()).toBe(false);","79","});","80",""],"delete":["54","  expect(wrapper).toMatchSnapshot();","60","  expect(wrapper).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/Tooltip.tsx":[{"add":["69","  mouseEnterTimeout?: number;","70","  mouseLeaveTimeout?: number;","120","    this.clearTimeouts();","133","  clearTimeouts = () => {","134","    window.clearTimeout(this.mouseEnterTimeout);","135","    window.clearTimeout(this.mouseLeaveTimeout);","208","    this.mouseEnterTimeout = window.setTimeout(() => {","210","        \/\/ for some reason even after the `this.mouseEnterTimeout` is cleared, it still triggers","211","        \/\/ to workaround this issue, check that its value is not `undefined`","212","        \/\/ (if it's `undefined`, it means the timer has been reset)","213","        if (this.props.visible === undefined && this.mouseEnterTimeout !== undefined) {","225","    if (this.mouseEnterTimeout !== undefined) {","226","      window.clearTimeout(this.mouseEnterTimeout);","227","      this.mouseEnterTimeout = undefined;","231","      this.mouseLeaveTimeout = window.setTimeout(() => {"],"delete":["69","  mouseEnterInterval?: number;","70","  mouseLeaveInterval?: number;","120","    this.clearIntervals();","133","  clearIntervals = () => {","134","    window.clearInterval(this.mouseEnterInterval);","135","    window.clearInterval(this.mouseLeaveInterval);","208","    this.mouseEnterInterval = window.setTimeout(() => {","210","        if (this.props.visible === undefined) {","222","    if (this.mouseEnterInterval !== undefined) {","223","      window.clearInterval(this.mouseEnterInterval);","224","      this.mouseEnterInterval = undefined;","228","      this.mouseLeaveInterval = window.setTimeout(() => {"]}]}},"1ead4d114275621e5c4902c2b905bb1332321d5e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["208","            token"],"delete":["208","            StringUtils.left(token, DefaultIndexSettings.MAXIMUM_NGRAM_LENGTH)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["220","    RuleDefinitionDto rule5 = createRule(rule -> rule.setRuleKey(\"405\")","221","      .setDescription(\"internationalization missunderstandings alsdkjfnadklsjfnadkdfnsksdjfn\"));","251","","252","    \/\/ long words","253","    assertThat(underTest.search(new RuleQuery().setQueryText(\"missunderstand\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","254","    assertThat(underTest.search(new RuleQuery().setQueryText(\"missunderstandings\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","255","    assertThat(underTest.search(new RuleQuery().setQueryText(\"alsdkjfnadklsjfnadkdfnsksdjfn\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","256","    assertThat(underTest.search(new RuleQuery().setQueryText(\"internationalization\"), new SearchOptions()).getIds()).containsExactlyInAnyOrder(rule5.getKey());","257","    assertThat(underTest.search(new RuleQuery().setQueryText(\"internationalizationBlaBla\"), new SearchOptions()).getIds()).isEmpty();"],"delete":["244","    \/\/ stopwords","245","    assertThat(underTest.search(new RuleQuery().setQueryText(\"and\"), new SearchOptions()).getIds()).isEmpty();","246","    assertThat(underTest.search(new RuleQuery().setQueryText(\"great and shiny\"), new SearchOptions()).getIds()).isEmpty();","247",""]}]}},"e22000509bf6734f602c21af925ed372ab7b8b8f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginChangeLogItem.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/SettingsEditionsNotif.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/__tests__\/__snapshots__\/SettingsEditionsNotif-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginUpdateItem.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginChangeLogItem.tsx":[{"add":["23","import { translate } from '..\/..\/..\/helpers\/l10n';","39","          <Tooltip overlay={translate('marketplace.update_status', update.status)}>"],"delete":["23","import { translate, translateWithParameters } from '..\/..\/..\/helpers\/l10n';","39","          <Tooltip overlay={translateWithParameters('marketplace.status', update.status)}>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2142","marketplace.update_status.COMPATIBLE=Compatible","2143","marketplace.update_status.INCOMPATIBLE=Incompatible","2144","marketplace.update_status.REQUIRES_SYSTEM_UPGRADE=Requires system update","2145","marketplace.update_status.DEPS_REQUIRE_SYSTEM_UPGRADE=Some of dependencies requires system update","2156","marketplace.edition_status.AUTOMATIC_IN_PROGRESS=Installing your new Commercial Edition... Please wait...","2157","marketplace.edition_status.AUTOMATIC_READY=Commercial Edition successfully installed. Please restart the server to activate your new edition.","2158","marketplace.edition_status.UNINSTALL_IN_PROGRESS=Commercial Edition successfully downgraded. Please restart the server to remove the features.","2159","marketplace.edition_status.MANUAL_IN_PROGRESS=Commercial Edition can't automatically be installed because of internet access issues. Please manually install the package.","2160","marketplace.edition_status_x.AUTOMATIC_IN_PROGRESS=Installing your new {0}... Please wait...","2161","marketplace.edition_status_x.AUTOMATIC_READY={0} successfully installed. Please restart the server to activate your new edition.","2162","marketplace.edition_status_x.UNINSTALL_IN_PROGRESS=Successfully downgraded to {0}. Please restart the server to remove the features.","2163","marketplace.edition_status_x.MANUAL_IN_PROGRESS={0} can't automatically be installed because of internet access issues. Please manually install the package."],"delete":["2142","marketplace.status.COMPATIBLE=Compatible","2143","marketplace.status.INCOMPATIBLE=Incompatible","2144","marketplace.status.REQUIRES_SYSTEM_UPGRADE=Requires system update","2145","marketplace.status.DEPS_REQUIRE_SYSTEM_UPGRADE=Some of dependencies requires system update","2157","marketplace.status.AUTOMATIC_IN_PROGRESS=Installing your new Commercial Edition. Please wait...","2158","marketplace.status.AUTOMATIC_READY=Commercial Edition successfully installed. Please restart the server to activate your new edition.","2159","marketplace.status.UNINSTALL_IN_PROGRESS=Commercial Edition successfully downgraded. Please restart the server to remove the features.","2160","marketplace.status.MANUAL_IN_PROGRESS=Commercial Edition can't automatically be installed because of internet access issues. Please manually install the package.","2161","marketplace.status_x.AUTOMATIC_IN_PROGRESS=Installing your new {0}. Please wait...","2162","marketplace.status_x.AUTOMATIC_READY={0} successfully installed. Please restart the server to activate your new edition.","2163","marketplace.status_x.UNINSTALL_IN_PROGRESS=Successfully downgraded to {0}. Please restart the server to remove the features.","2164","marketplace.status_x.MANUAL_IN_PROGRESS={0} can't automatically be installed because of internet access issues. Please manually install the package."]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/SettingsEditionsNotif.tsx":[{"add":["57","                'marketplace.edition_status_x.' + editionStatus.installationStatus,","60","            : translate('marketplace.edition_status', editionStatus.installationStatus)}","73","                'marketplace.edition_status_x.' + editionStatus.installationStatus,","76","            : translate('marketplace.edition_status', editionStatus.installationStatus)}","97","          <button className=\"js-restart spacer-left\" onClick={this.handleOpenRestart} type=\"button\">","113","              'marketplace.edition_status_x.' + editionStatus.installationStatus,","116","          : translate('marketplace.edition_status', editionStatus.installationStatus)}"],"delete":["57","                'marketplace.status_x.' + editionStatus.installationStatus,","60","            : translate('marketplace.status', editionStatus.installationStatus)}","73","                'marketplace.status_x.' + editionStatus.installationStatus,","76","            : translate('marketplace.status', editionStatus.installationStatus)}","97","          <button className=\"js-restart spacer-left\" onClick={this.handleOpenRestart}>","113","              'marketplace.status_x.' + editionStatus.installationStatus,","116","          : translate('marketplace.status', editionStatus.installationStatus)}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/settings\/__tests__\/__snapshots__\/SettingsEditionsNotif-test.tsx.snap":[{"add":["6","  marketplace.edition_status_x.MANUAL_IN_PROGRESS.Foo","30","    marketplace.edition_status.AUTOMATIC_READY","35","    type=\"button\"","50","    marketplace.edition_status.AUTOMATIC_IN_PROGRESS"],"delete":["6","  marketplace.status_x.MANUAL_IN_PROGRESS.Foo","30","    marketplace.status.AUTOMATIC_READY","49","    marketplace.status.AUTOMATIC_IN_PROGRESS"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/components\/PluginUpdateItem.tsx":[{"add":["59","            <Tooltip overlay={translate('marketplace.update_status', update.status)}>"],"delete":["59","            <Tooltip overlay={translate('marketplace.status', update.status)}>"]}]}},"3e73b2b43c26a74d0722ba2acc9adfc62b0b33c2":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStep.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStepTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStep.java":[{"add":["28","import static java.util.Collections.singleton;","29","","51","          \/\/ in case the task was restarted, the context might have been already persisted","52","          \/\/ for total reliability, we rather delete the existing row as we don't want to assume the content","53","          \/\/ consistent with the report","54","          dbClient.ceScannerContextDao().deleteByUuids(dbSession, singleton(ceTask.getUuid()));"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/PersistScannerContextStepTest.java":[{"add":["21","import java.util.Arrays;","27","import org.sonar.core.util.CloseableIterator;","82","  \/**","83","   * @see SONAR-8306","84","   *\/","85","  @Test","86","  public void execute_does_not_fail_if_scanner_context_has_already_been_persisted() {","87","    dbClient.ceScannerContextDao().insert(dbTester.getSession(), ANALYSIS_UUID, CloseableIterator.from(Arrays.asList(\"a\", \"b\", \"c\").iterator()));","88","    dbTester.commit();","89","    reportReader.setScannerLogs(asList(\"1\", \"2\", \"3\"));","90","    when(ceTask.getUuid()).thenReturn(ANALYSIS_UUID);","91","","92","    underTest.execute();","93","","94","    assertThat(dbClient.ceScannerContextDao().selectScannerContext(dbTester.getSession(), ANALYSIS_UUID))","95","      .contains(\"1\" + '\\n' + \"2\" + '\\n' + \"3\");","96","  }"],"delete":[]}]}},"87f55940473777bd4080595a8369a7cf958745c4":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["254","              notAccessible: false,","273","      if (this.mounted) {","274","        if (response.status === 403) {","275","          this.setState({ loading: false, notAccessible: true });","276","        } else if (response.status === 404) {","277","          this.setState({ loading: false, notExist: true });","278","        }","669","    if (notAccessible) {","670","      return (","671","        <div className=\"alert alert-warning spacer-top\">","672","          {translate('code_viewer.no_source_code_displayed_due_to_security')}","673","        <\/div>","674","      );","675","    }","676",""],"delete":["272","      if (this.mounted && response.status === 404) {","273","        this.setState({ loading: false, notExist: true });","681","        {notAccessible && (","682","          <div className=\"alert alert-warning spacer-top\">","683","            {translate('code_viewer.no_source_code_displayed_due_to_security')}","684","          <\/div>","685","        )}"]}]}},"446a27fd0bb4c449db017760dc11ec92da35cb3c":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/PopulateDeprecatedRuleKeysRuleUuidColumn.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/PopulateActiveRulesRuleUuidColumn.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/PopulateGroupsUsersUserUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/PopulateQProfileEditUsersUserUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/PopulateActiveRuleParametersActiveRuleUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/util\/OrphanData.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/organizations\/PopulateOrganizationsDefaultGroupUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/PopulateOrganizationMembersUserUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/PopulateQProfileEditGroupsGroupUuid.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/PopulateDeprecatedRuleKeysRuleUuidColumn.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","49","    OrphanData.delete(context, \"deprecated_rule_keys\", \"rule_uuid\");"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select uuid from deprecated_rule_keys where rule_uuid is null\");","51","    massUpdate.update(\"delete from deprecated_rule_keys where uuid = ?\");","52","","53","    massUpdate.execute((row, update) -> {","54","      update.setString(1, row.getString(1));","55","      return true;","56","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/PopulateActiveRulesRuleUuidColumn.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","49","    OrphanData.delete(context, \"active_rules\", \"rule_uuid\");"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select uuid from active_rules where rule_uuid is null\");","51","    massUpdate.update(\"delete from active_rules where uuid = ?\");","52","","53","    massUpdate.execute((row, update) -> {","54","      update.setString(1, row.getString(1));","55","      return true;","56","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/PopulateGroupsUsersUserUuid.java":[{"add":["52","    remoteOrphanEntries(context);","53","  }","54","","55","  private static void remoteOrphanEntries(Context context) throws SQLException {","56","    MassUpdate massUpdate = context.prepareMassUpdate();"],"delete":["52","    massUpdate = context.prepareMassUpdate();","60",""]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/PopulateQProfileEditUsersUserUuid.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","52","    OrphanData.delete(context, \"qprofile_edit_users\", \"user_uuid\");"],"delete":["51","    massUpdate = context.prepareMassUpdate();","52","","53","    massUpdate.select(\"select uuid from qprofile_edit_users where user_uuid is null\");","54","    massUpdate.update(\"delete from qprofile_edit_users where uuid = ?\");","55","","56","    massUpdate.execute((row, update) -> {","57","      update.setString(1, row.getString(1));","58","      return true;","59","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/PopulateActiveRuleParametersActiveRuleUuid.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","48","    OrphanData.delete(context, \"active_rule_parameters\", \"active_rule_uuid\");"],"delete":["47","    massUpdate = context.prepareMassUpdate();","48","","49","    massUpdate.select(\"select uuid from active_rule_parameters where active_rule_uuid is null\");","50","    massUpdate.update(\"delete from active_rule_parameters where uuid = ?\");","51","","52","    massUpdate.execute((row, update) -> {","53","      update.setString(1, row.getString(1));","54","      return true;","55","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/util\/OrphanData.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/organizations\/PopulateOrganizationsDefaultGroupUuid.java":[{"add":["32","  private static void removeOrphans(Context context) throws SQLException {","33","    MassUpdate massUpdate = context.prepareMassUpdate();","34","","35","    massUpdate.select(\"select o.uuid, g.uuid from organizations o join groups g on o.default_group_id = g.id\");","36","    massUpdate.update(\"update organizations set default_group_uuid = ? where uuid = ?\");","37","","38","    massUpdate.execute((row, update) -> {","39","      update.setString(1, row.getString(2));","40","      update.setString(2, row.getString(1));","41","      return true;","42","    });","43","  }","44","","61","    removeOrphans(context);"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select o.uuid, g.uuid \" +","51","      \"from organizations o \" +","52","      \"join groups g on o.default_group_id = g.id\");","53","","54","    massUpdate.update(\"update organizations set default_group_uuid = ? where uuid = ?\");","55","","56","    massUpdate.execute((row, update) -> {","57","      update.setString(1, row.getString(2));","58","      update.setString(2, row.getString(1));","59","      return true;","60","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/PopulateOrganizationMembersUserUuid.java":[{"add":["53","    MassUpdate.Handler removeOrphanHandler = (row, update) -> {","54","      update.setString(1, row.getString(1));","55","      update.setLong(2, row.getLong(2));","56","","57","      return true;","58","    };","64","    massUpdate.execute(removeOrphanHandler);"],"delete":["58","    massUpdate.execute((row, update) -> {","59","      update.setString(1, row.getString(1));","60","      update.setLong(2, row.getLong(2));","61","","62","      return true;","63","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/PopulateQProfileEditGroupsGroupUuid.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","49","    OrphanData.delete(context, \"qprofile_edit_groups\", \"group_uuid\");"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select qeg.uuid from qprofile_edit_groups qeg where qeg.group_uuid is null\");","51","","52","    massUpdate.update(\"delete from qprofile_edit_groups where uuid = ?\");","53","","54","    massUpdate.execute((row, update) -> {","55","      update.setString(1, row.getString(1));","56","      return true;","57","    });"]}]}},"dd51ac2553e1613e7ea3cd5e8c41cce2803f488c":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/measures.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/measures.js":[{"add":["183","  return value === 100 ? '100%' : numeral(value \/ 100).format('0,0.0%');"],"delete":["183","  return numeral(value \/ 100).format('0,0.0%');"]}]}},"d686c696d9cebbb533e609551c959d6f4eb8cba9":{"changes":{"\/dev\/null":"DELETE","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteAction.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/ProjectsWsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteActionTest.java":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteAction.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/ProjectsWsTest.java":[{"add":["42","      new BulkDeleteAction(mock(ComponentCleanerService.class), mock(DbClient.class), mock(UserSession.class)),"],"delete":["42","      new DeleteAction(mock(ComponentCleanerService.class), mock(DbClient.class), mock(UserSession.class)),"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":[{"add":["209","import org.sonar.server.project.ws.BulkDeleteAction;","581","      BulkDeleteAction.class,"],"delete":["580","      org.sonar.server.project.ws.DeleteAction.class,"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteActionTest.java":[{"add":[],"delete":[]}]}},"5a0253f2dea14767fc9db008b6ffc4bb77a8c273":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/notification\/DefaultNotificationManager.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":[{"add":["192","      DefaultNotificationManager.class,"],"delete":["125","      DefaultNotificationManager.class,"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/notification\/DefaultNotificationManager.java":[{"add":["27","import java.io.IOException;","28","import java.io.InvalidClassException;","29","import java.util.Arrays;","30","import java.util.List;","31","import javax.annotation.Nullable;","34","import org.sonar.api.batch.RequiresDB;","47","@RequiresDB"],"delete":["38","import javax.annotation.Nullable;","39","","40","import java.io.IOException;","41","import java.io.InvalidClassException;","42","import java.util.Arrays;","43","import java.util.List;","44",""]}]}},"8f24ad80368cc005c78eb9fc83e4f23823048e16":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ActivityActionTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/component\/ComponentTreeQuery.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/ce\/CeTaskQuery.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ActivityActionTest.java":[{"add":[],"delete":["151","    System.out.println(EXECUTED_AT + \" - \" + today);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/component\/ComponentTreeQuery.java":[{"add":["23","import java.util.ArrayList;","34","import static com.google.common.collect.Lists.newArrayList;","42","  \/\/ SONAR-7681 a public implementation of List must be used in MyBatis - potential concurrency exceptions otherwise","44","  private final ArrayList<String> qualifiers;","56","    this.qualifiers = builder.qualifiers == null ? null : newArrayList(builder.qualifiers);"],"delete":["41","  private final Collection<String> qualifiers;","53","    this.qualifiers = builder.qualifiers;"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/ce\/CeTaskQuery.java":[{"add":["21","import java.util.ArrayList;","27","import static com.google.common.collect.Lists.newArrayList;","37","  \/\/ SONAR-7681 a public implementation of List must be used in MyBatis - potential concurrency exceptions otherwise","38","  private ArrayList<String> componentUuids;","39","  private ArrayList<String> statuses;","50","    this.componentUuids = l == null ? null : newArrayList(l);","62","      this.componentUuids = newArrayList(s);","82","    this.statuses = statuses == null ? null : newArrayList(statuses);"],"delete":["26","import static java.util.Collections.singletonList;","36","  private List<String> componentUuids;","37","  private List<String> statuses;","48","    this.componentUuids = l;","60","      this.componentUuids = singletonList(s);","80","    this.statuses = statuses;"]}]}},"b64932e6d07560db391a4fe3c849529fd223eb75":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImplTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeCommandsTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolder.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImpl.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableDisabledComponentsHolder.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":[{"add":["21","import java.util.Set;","55","  public ProjectCleaner purge(DbSession session, String rootUuid, String projectUuid, Configuration projectConfig, Set<String> disabledComponentUuids) {"],"delete":["21","import java.util.Collection;","55","  public ProjectCleaner purge(DbSession session, String rootUuid, String projectUuid, Configuration projectConfig, Collection<String> disabledComponentUuids) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImplTest.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","37","    underTest.setUuids(ImmutableSet.of(\"U1\", \"U2\"));","44","    underTest.setUuids(ImmutableSet.of(\"U1\", \"U2\"));","48","    underTest.setUuids(ImmutableSet.of(\"U1\", \"U2\"));"],"delete":["25","import static java.util.Arrays.asList;","37","    underTest.setUuids(asList(\"U1\", \"U2\"));","44","    underTest.setUuids(asList(\"U1\", \"U2\"));","48","    underTest.setUuids(asList(\"U1\", \"U2\"));"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeCommandsTest.java":[{"add":["26","import org.sonar.api.utils.internal.AlwaysIncreasingSystem2;","44","  private AlwaysIncreasingSystem2 system2 = new AlwaysIncreasingSystem2();","60","    new PurgeCommands(dbTester.getSession(), profiler, system2).deleteAnalyses(getHugeNumberOfIdUuidPairs());","71","    new PurgeCommands(dbTester.getSession(), profiler, system2).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","80","    new PurgeCommands(dbTester.getSession(), profiler, system2).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","90","    new PurgeCommands(dbTester.getSession(), profiler, system2).purgeAnalyses(getHugeNumberOfIdUuidPairs());","98","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","113","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","129","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","145","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","158","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);","171","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler, system2);"],"delete":["58","    new PurgeCommands(dbTester.getSession(), profiler).deleteAnalyses(getHugeNumberOfIdUuidPairs());","69","    new PurgeCommands(dbTester.getSession(), profiler).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","78","    new PurgeCommands(dbTester.getSession(), profiler).purgeAnalyses(singletonList(new IdUuidPair(1, \"u1\")));","88","    new PurgeCommands(dbTester.getSession(), profiler).purgeAnalyses(getHugeNumberOfIdUuidPairs());","96","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","111","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","127","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","143","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","156","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);","169","    PurgeCommands purgeCommands = new PurgeCommands(dbTester.getSession(), profiler);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["22","import java.util.Set;","36","  Set<String> selectDisabledComponentsWithFileSource(@Param(\"projectUuid\") String projectUuid);","37","","38","  Set<String> selectDisabledComponentsWithUnresolvedIssues(@Param(\"projectUuid\") String projectUuid);","39","","40","  Set<String> selectDisabledComponentsWithLiveMeasures(@Param(\"projectUuid\") String projectUuid);","41",""],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolder.java":[{"add":["21","import java.util.Set;","25","  Set<String> getUuids();"],"delete":["21","import java.util.Collection;","25","  Collection<String> getUuids();"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/DisabledComponentsHolderImpl.java":[{"add":["21","import java.util.Set;","27","  private Set<String> uuids;","30","  public Set<String> getUuids() {","36","  public void setUuids(Set<String> uuids) {"],"delete":["21","import java.util.Collection;","27","  private Collection<String> uuids;","30","  public Collection<String> getUuids() {","36","  public void setUuids(Collection<String> uuids) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableDisabledComponentsHolder.java":[{"add":["21","import java.util.Set;","25","  void setUuids(Set<String> uuids);"],"delete":["21","import java.util.Collection;","25","  void setUuids(Collection<String> uuids);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["65","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler, system2);","70","    purgeDisabledComponents(commands, conf, listener);","104","  private static void purgeDisabledComponents(PurgeCommands commands, PurgeConfiguration conf, PurgeListener listener) {","105","    String rootUuid = conf.rootUuid();","106","    listener.onComponentsDisabling(rootUuid, conf.getDisabledComponentUuids());","107","    commands.purgeDisabledComponents(rootUuid, conf.getDisabledComponentUuids(), listener);","108","  }","109","","174","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler, system2);","185","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler, system2);","221","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler, system2);","228","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler, system2);","276","    PurgeCommands purgeCommands = new PurgeCommands(dbSession, profiler, system2);","304","    new PurgeCommands(session, profiler, system2).deleteAnalyses(analysisIdUuids);"],"delete":["65","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","70","    purgeDisabledComponents(session, mapper, conf, listener);","150","  private void purgeDisabledComponents(DbSession session, PurgeMapper mapper, PurgeConfiguration conf, PurgeListener listener) {","151","    executeLargeInputs(conf.getDisabledComponentUuids(),","152","      input -> {","153","        mapper.deleteFileSourcesByFileUuid(input);","154","        mapper.resolveComponentIssuesNotAlreadyResolved(input, system2.now());","155","        mapper.deleteLiveMeasuresByComponentUuids(input);","156","        return emptyList();","157","      });","158","","159","    listener.onComponentsDisabling(conf.rootUuid(), conf.getDisabledComponentUuids());","160","","161","    session.commit();","162","  }","163","","182","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","193","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","202","","230","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler);","237","    PurgeCommands purgeCommands = new PurgeCommands(session, profiler);","285","    PurgeCommands purgeCommands = new PurgeCommands(dbSession, profiler);","313","    new PurgeCommands(session, profiler).deleteAnalyses(analysisIdUuids);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["24","import java.util.Collection;","25","import java.util.HashSet;","27","import java.util.Set;","30","import org.sonar.api.utils.System2;","33","import static org.sonar.db.DatabaseUtils.executeLargeInputs;","34","","43","  private final System2 system2;","45","  PurgeCommands(DbSession session, PurgeMapper purgeMapper, PurgeProfiler profiler, System2 system2) {","49","    this.system2 = system2;","53","  PurgeCommands(DbSession session, PurgeProfiler profiler, System2 system2) {","54","    this(session, session.getMapper(PurgeMapper.class), profiler, system2);","157","  void purgeDisabledComponents(String rootComponentUuid, Collection<String> disabledComponentUuids, PurgeListener listener) {","158","    Set<String> missedDisabledComponentUuids = new HashSet<>();","159","","160","    profiler.start(\"purgeDisabledComponents (file_sources)\");","161","    missedDisabledComponentUuids.addAll(","162","      executeLargeInputs(","163","        purgeMapper.selectDisabledComponentsWithFileSource(rootComponentUuid),","164","        input -> {","165","          purgeMapper.deleteFileSourcesByFileUuid(input);","166","          return input;","167","        }));","168","    profiler.stop();","169","","170","    profiler.start(\"purgeDisabledComponents (unresolved_issues)\");","171","    missedDisabledComponentUuids.addAll(","172","      executeLargeInputs(","173","        purgeMapper.selectDisabledComponentsWithUnresolvedIssues(rootComponentUuid),","174","        input -> {","175","          purgeMapper.resolveComponentIssuesNotAlreadyResolved(input, system2.now());","176","          return input;","177","        }));","178","    profiler.stop();","179","","180","    profiler.start(\"purgeDisabledComponents (live_measures)\");","181","    missedDisabledComponentUuids.addAll(","182","      executeLargeInputs(","183","        purgeMapper.selectDisabledComponentsWithLiveMeasures(rootComponentUuid),","184","        input -> {","185","          purgeMapper.deleteLiveMeasuresByComponentUuids(input);","186","          return input;","187","        }));","188","    profiler.stop();","189","","190","    session.commit();","191","","192","    \/\/ notify listener for any disabled component we found child data for which isn't part of the disabled components","193","    \/\/ provided","194","    missedDisabledComponentUuids.removeAll(disabledComponentUuids);","195","    if (!missedDisabledComponentUuids.isEmpty()) {","196","      listener.onComponentsDisabling(rootComponentUuid, missedDisabledComponentUuids);","197","    }","198","  }","199",""],"delete":["38","  PurgeCommands(DbSession session, PurgeMapper purgeMapper, PurgeProfiler profiler) {","45","  PurgeCommands(DbSession session, PurgeProfiler profiler) {","46","    this(session, session.getMapper(PurgeMapper.class), profiler);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["85","  <select id=\"selectDisabledComponentsWithFileSource\" parameterType=\"map\" resultType=\"String\">","86","    select","87","      file_uuid","88","    from file_sources fs","89","    inner join projects p on","90","      p.uuid = fs.file_uuid","91","      and p.enabled = ${_false}","92","      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}","93","  <\/select>","94","","95","  <select id=\"selectDisabledComponentsWithUnresolvedIssues\" parameterType=\"map\" resultType=\"String\">","96","    select","97","      i.component_uuid","98","    from issues i","99","    inner join projects p on","100","      p.uuid = i.component_uuid","101","      and p.enabled = ${_false}","102","      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}","103","    where","104","      resolution is null","105","  <\/select>","106","","107","  <select id=\"selectDisabledComponentsWithLiveMeasures\" parameterType=\"map\" resultType=\"String\">","108","    select","109","      lm.component_uuid","110","    from live_measures lm","111","    inner join projects p on","112","      p.uuid = lm.component_uuid","113","      and p.enabled = ${_false}","114","      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}","115","  <\/select>","116",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":[{"add":["32","import static java.util.Collections.emptySet;","38","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 0, Optional.empty(), System2.INSTANCE, emptySet());","41","    conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), -1, Optional.empty(), System2.INSTANCE, emptySet());","49","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 30, Optional.empty(), System2.INSTANCE, emptySet());","59","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 30, Optional.of(10), System2.INSTANCE, emptySet());","67","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptySet(), 30, Optional.empty(), System2.INSTANCE, emptySet());","77","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), \"root\", \"project\", emptySet());"],"delete":["32","import static java.util.Collections.emptyList;","38","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 0, Optional.empty(), System2.INSTANCE, emptyList());","41","    conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), -1, Optional.empty(), System2.INSTANCE, emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.of(10), System2.INSTANCE, emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(\"root\", \"project\", emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","77","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), \"root\", \"project\", emptyList());"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":[{"add":["26","import java.util.Set;","42","  private final Set<String> disabledComponentUuids;","45","    Optional<Integer> maxAgeInDaysOfInactiveShortLivingBranches, System2 system2, Set<String> disabledComponentUuids) {","55","  public static PurgeConfiguration newDefaultPurgeConfiguration(Configuration config, String rootUuid, String projectUuid, Set<String> disabledComponentUuids) {","80","  public Set<String> getDisabledComponentUuids() {"],"delete":["41","  private final Collection<String> disabledComponentUuids;","44","    Optional<Integer> maxAgeInDaysOfInactiveShortLivingBranches, System2 system2, Collection<String> disabledComponentUuids) {","54","  public static PurgeConfiguration newDefaultPurgeConfiguration(Configuration config, String rootUuid, String projectUuid, Collection<String> disabledComponentUuids) {","79","  public Collection<String> getDisabledComponentUuids() {"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["32","import java.util.Set;","84","import static java.util.Collections.emptySet;","89","import static org.mockito.Mockito.verify;","217","      30, Optional.of(30), System2.INSTANCE, emptySet());","237","    ComponentDto enabledFile = db.components().insertComponent(newFileDto(module, dir).setEnabled(true));","242","    IssueDto openOnEnabledComponent = db.issues().insert(rule, project, enabledFile, issue -> issue.setStatus(\"OPEN\"));","243","    IssueDto confirmOnEnabledComponent = db.issues().insert(rule, project, enabledFile, issue -> issue.setStatus(\"CONFIRM\"));","251","    FileSourceDto nonSelectedFileSource = db.fileSources().insertFileSource(enabledFile);","262","    LiveMeasureDto liveMeasureMetric1OnNonSelected = db.measures().insertLiveMeasure(enabledFile, metric1);","263","    LiveMeasureDto liveMeasureMetric2OnNonSelected = db.measures().insertLiveMeasure(enabledFile, metric2);","265","    PurgeListener purgeListener = mock(PurgeListener.class);","268","    Set<String> selectedComponentUuids = ImmutableSet.of(module.uuid(), srcFile.uuid(), testFile.uuid());","269","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid(), selectedComponentUuids),","270","      purgeListener, new PurgeProfiler());","273","    verify(purgeListener).onComponentsDisabling(project.uuid(), selectedComponentUuids);","274","    verify(purgeListener).onComponentsDisabling(project.uuid(), ImmutableSet.of(dir.uuid()));","275","","286","    for (IssueDto issue : Arrays.asList(openOnEnabledComponent, confirmOnEnabledComponent)) {","299","      .selectByComponentUuidsAndMetricIds(dbSession, ImmutableSet.of(srcFile.uuid(), dir.uuid(), project.uuid(), enabledFile.uuid()),","303","      .containsOnly(enabledFile.uuid(), project.uuid());","1029","    PurgeListener purgeListener = mock(PurgeListener.class);","1031","    Set<String> disabledComponentUuids = ImmutableSet.of(disabledFileWithIssues.uuid(), disabledFileWithoutIssues.uuid());","1033","      newConfigurationWith30Days(System2.INSTANCE, project.uuid(), project.uuid(), disabledComponentUuids),","1034","      purgeListener, new PurgeProfiler());","1040","    verify(purgeListener).onComponentsDisabling(project.uuid(), disabledComponentUuids);","1085","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse(); \/\/ because more than 4 weeks old","1672","    return new PurgeConfiguration(PROJECT_UUID, PROJECT_UUID, emptyList(), 30, Optional.of(30), System2.INSTANCE, emptySet());","1675","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid) {","1676","    return newConfigurationWith30Days(system2, rootUuid, projectUuid, Collections.emptySet());","1677","  }","1678","","1679","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid, Set<String> disabledComponentUuids) {","1680","    return new PurgeConfiguration(rootUuid, projectUuid, emptyList(), 30, Optional.of(30), system2, disabledComponentUuids);"],"delete":["214","      30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","234","    ComponentDto nonSelectedFile = db.components().insertComponent(newFileDto(module, dir).setEnabled(false));","239","    IssueDto openOnNonSelected = db.issues().insert(rule, project, nonSelectedFile, issue -> issue.setStatus(\"OPEN\"));","240","    IssueDto confirmOnNonSelected = db.issues().insert(rule, project, nonSelectedFile, issue -> issue.setStatus(\"CONFIRM\"));","248","    FileSourceDto nonSelectedFileSource = db.fileSources().insertFileSource(nonSelectedFile);","259","    LiveMeasureDto liveMeasureMetric1OnNonSelected = db.measures().insertLiveMeasure(nonSelectedFile, metric1);","260","    LiveMeasureDto liveMeasureMetric2OnNonSelected = db.measures().insertLiveMeasure(nonSelectedFile, metric2);","264","    underTest.purge(dbSession, newConfigurationWith30Days(system2, project.uuid(), project.uuid(), module.uuid(), dir.uuid(), srcFile.uuid(), testFile.uuid()), PurgeListener.EMPTY,","265","      new PurgeProfiler());","278","    for (IssueDto issue : Arrays.asList(openOnNonSelected, confirmOnNonSelected)) {","291","      .selectByComponentUuidsAndMetricIds(dbSession, ImmutableSet.of(srcFile.uuid(), dir.uuid(), project.uuid(), nonSelectedFile.uuid()),","295","      .containsOnly(nonSelectedFile.uuid(), project.uuid());","1023","      newConfigurationWith30Days(System2.INSTANCE, project.uuid(), disabledFileWithIssues.uuid(), disabledFileWithoutIssues.uuid()),","1024","      PurgeListener.EMPTY, new PurgeProfiler());","1074","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse();  \/\/ because more than 4 weeks old","1661","    return new PurgeConfiguration(PROJECT_UUID, PROJECT_UUID, emptyList(), 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","1664","  private static PurgeConfiguration newConfigurationWith30Days(System2 system2, String rootUuid, String projectUuid, String... disabledComponentUuids) {","1665","    return new PurgeConfiguration(rootUuid, projectUuid, emptyList(), 30, Optional.of(30), system2, asList(disabledComponentUuids));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":[{"add":["34","import static java.util.Collections.emptySet;","59","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());","68","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());","77","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());"],"delete":["34","import static java.util.Collections.emptyList;","59","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());","68","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());","77","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptyList());"]}]}},"e4535bb930c1dc1e2383c3815fa34aceec2f1e02":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":[{"add":["154","          <div className=\"settings-definition-state\">","155","            {loading &&","156","              <span className=\"text-info\">","157","                <i className=\"spinner spacer-right\" \/>","158","                {translate('settings.state.saving')}","159","              <\/span>}","160","","161","            {!loading &&","162","              this.props.validationMessage != null &&","163","              <span className=\"text-danger\">","164","                <i className=\"icon-alert-error spacer-right\" \/>","165","                <span>","166","                  {translateWithParameters(","167","                    'settings.state.validation_failed',","168","                    this.props.validationMessage","169","                  )}","170","                <\/span>","171","              <\/span>}","172","","173","            {!loading &&","174","              this.state.success &&","175","              <span className=\"text-success\">","176","                <i className=\"icon-check spacer-right\" \/>","177","                {translate('settings.state.saved')}","178","              <\/span>}","179","          <\/div>","180",""],"delete":["168","","169","          <div className=\"settings-definition-state\">","170","            {loading &&","171","              <span className=\"text-info\">","172","                <span className=\"settings-definition-state-icon\">","173","                  <i className=\"spinner\" \/>","174","                <\/span>","175","                {translate('settings.state.saving')}","176","              <\/span>}","177","","178","            {!loading &&","179","              this.props.validationMessage != null &&","180","              <span className=\"text-danger\">","181","                <span className=\"settings-definition-state-icon\">","182","                  <i className=\"icon-alert-error\" \/>","183","                <\/span>","184","                {translateWithParameters(","185","                  'settings.state.validation_failed',","186","                  this.props.validationMessage","187","                )}","188","              <\/span>}","189","","190","            {!loading &&","191","              this.state.success &&","192","              <span className=\"text-success\">","193","                <span className=\"settings-definition-state-icon\">","194","                  <i className=\"icon-check\" \/>","195","                <\/span>","196","                {translate('settings.state.saved')}","197","              <\/span>}","198","          <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/styles.css":[{"add":["49","  min-height: 32px;","50","  padding-bottom: 4px;","53",".settings-definition-state > span {","54","  display: flex;"],"delete":["30","  padding-top: 35px;","50","  position: absolute;","51","  top: 0;","52","  left: 0;","53","  right: 0;","54","  line-height: 24px;","55","  overflow: hidden;","56","  text-overflow: ellipsis;","57","  white-space: nowrap;","60",".settings-definition-state-icon {","61","  display: inline-block;","62","  vertical-align: middle;","63","  width: 24px;","64","  height: 24px;","65","  margin-right: 8px;","66","  text-align: center;","67","}","68","","69",".settings-definition-state-icon > .icon-alert-error,","70",".settings-definition-state-icon > .spinner {","71","  position: relative;","72","  top: -2px;"]}]}},"436296b4cdf93e71a6195ab116853504202cab08":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/Statistics-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/measures-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/Statistics.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/measures.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/__snapshots__\/Statistics-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/Statistics-test.tsx":[{"add":["20","import { shallow, ShallowWrapper } from 'enzyme';","23","const STATISTICS = { icon: 'stat-icon', text: 'my stat', value: 26666 };","30","  expect(shallowRender()).toMatchSnapshot();","32","","33","it('should render big numbers correctly', () => {","34","  function checkCountUp(wrapper: ShallowWrapper, end: number, suffix: string) {","35","    expect(wrapper.find('CountUp').prop('end')).toBe(end);","36","    expect(wrapper.find('CountUp').prop('suffix')).toBe(suffix);","37","  }","38","","39","  checkCountUp(","40","    shallowRender({ statistic: { ...STATISTICS, value: 999003632 } }),","41","    999,","42","    'short_number_suffix.m'","43","  );","44","  checkCountUp(","45","    shallowRender({ statistic: { ...STATISTICS, value: 999861538 } }),","46","    999,","47","    'short_number_suffix.m'","48","  );","49","  checkCountUp(shallowRender({ statistic: { ...STATISTICS, value: 1100021731 } }), 1.1, ' billion');","50","});","51","","52","function shallowRender(props: Partial<StatisticCard['props']> = {}) {","53","  const wrapper = shallow(<StatisticCard statistic={STATISTICS} {...props} \/>);","54","  wrapper.setState({ viewable: true });","55","  return wrapper;","56","}"],"delete":["20","import { shallow } from 'enzyme';","23","const STATISTICS = {","24","  icon: 'stat-icon',","25","  text: 'my stat',","26","  value: 26666","27","};","34","  expect(shallow(<StatisticCard statistic={STATISTICS} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/measures-test.ts":[{"add":["62","    expect(formatMeasure(9467890, 'SHORT_INT')).toBe('9.5M');","63","    expect(formatMeasure(994567890, 'SHORT_INT')).toBe('995M');","64","    expect(formatMeasure(999000001, 'SHORT_INT')).toBe('999M');","65","    expect(formatMeasure(999567890, 'SHORT_INT')).toBe('1G');","66","    expect(formatMeasure(1234567890, 'SHORT_INT')).toBe('1.2G');","67","    expect(formatMeasure(11234567890, 'SHORT_INT')).toBe('11G');","137","    expect(formatMeasure(1234567 * ONE_DAY, 'SHORT_WORK_DUR')).toBe('1.2Md');","138","    expect(formatMeasure(12345670 * ONE_DAY + 4 * ONE_HOUR, 'SHORT_WORK_DUR')).toBe('12Md');"],"delete":["62","    expect(formatMeasure(1234567890, 'SHORT_INT')).toBe('1G');","132","    expect(formatMeasure(1234567 * ONE_DAY, 'SHORT_WORK_DUR')).toBe('1Md');","133","    expect(formatMeasure(1234567 * ONE_DAY + 2 * ONE_HOUR, 'SHORT_WORK_DUR')).toBe('1Md');"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/Statistics.tsx":[{"add":["23","import { translate } from '..\/..\/..\/..\/helpers\/l10n';","86","    const formattedString = formatMeasure(statistic.value, 'SHORT_INT', {","87","      roundingFunc: Math.floor","88","    });","89","    const value = parseFloat(formattedString);","90","    let suffix = formattedString.replace(value.toString(), '');","91","    if (suffix === translate('short_number_suffix.g')) {","92","      suffix = ' ' + translate('billion');","93","    }"],"delete":["85","    const formattedString = formatMeasure(statistic.value, 'SHORT_INT');","86","    const value = parseFloat(formattedString.slice(0, -1));","87","    const suffix = formattedString.substr(-1);"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["20","billion=Billion"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/measures.ts":[{"add":["132","const shortIntFormats = [","133","  { unit: 1e10, formatUnit: 1e9, fraction: 0, suffix: 'short_number_suffix.g' },","134","  { unit: 1e9, formatUnit: 1e9, fraction: 1, suffix: 'short_number_suffix.g' },","135","  { unit: 1e7, formatUnit: 1e6, fraction: 0, suffix: 'short_number_suffix.m' },","136","  { unit: 1e6, formatUnit: 1e6, fraction: 1, suffix: 'short_number_suffix.m' },","137","  { unit: 1e4, formatUnit: 1e3, fraction: 0, suffix: 'short_number_suffix.k' },","138","  { unit: 1e3, formatUnit: 1e3, fraction: 1, suffix: 'short_number_suffix.k' }","139","];","140","","141","function shortIntFormatter(","142","  value: number,","143","  option?: { roundingFunc?: (x: number) => number }","144","): string {","145","  const roundingFunc = (option && option.roundingFunc) || undefined;","146","  for (let i = 0; i < shortIntFormats.length; i++) {","147","    const { unit, formatUnit, fraction, suffix } = shortIntFormats[i];","148","    const nextFraction = unit \/ (shortIntFormats[i + 1] ? shortIntFormats[i + 1].unit \/ 10 : 1);","149","    const roundedValue = numberRound(value \/ unit, nextFraction, roundingFunc);","150","    if (roundedValue >= 1) {","151","      return (","152","        numberFormatter(","153","          numberRound(value \/ formatUnit, Math.pow(10, fraction), roundingFunc),","154","          0,","155","          fraction","156","        ) + translate(suffix)","157","      );","158","    }","160","","161","  return numberFormatter(value);","162","}","163","","164","function numberRound(","165","  value: number,","166","  fraction: number = 1000,","167","  roundingFunc: (x: number) => number = Math.round","168",") {","169","  return roundingFunc(value * fraction) \/ fraction;"],"delete":["132","function shortIntFormatter(value: number): string {","133","  if (value >= 1e9) {","134","    return numberFormatter(value \/ 1e9) + translate('short_number_suffix.g');","135","  } else if (value >= 1e6) {","136","    return numberFormatter(value \/ 1e6) + translate('short_number_suffix.m');","137","  } else if (value >= 1e4) {","138","    return numberFormatter(value \/ 1e3) + translate('short_number_suffix.k');","139","  } else if (value >= 1e3) {","140","    return numberFormatter(value \/ 1e3, 0, 1) + translate('short_number_suffix.k');","141","  } else {","142","    return numberFormatter(value);"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/components\/__tests__\/__snapshots__\/Statistics-test.tsx.snap":[{"add":["35","    <CountUp","36","      delay={0}","37","      duration={4}","38","      end={26}","39","      suffix=\"short_number_suffix.k\"","40","    >","41","      <Component \/>","42","    <\/CountUp>"],"delete":[]}]}},"c0a188703aa8ae849998dcfec016dd1d64d32107":{"changes":{"server\/sonar-web\/src\/main\/js\/source-viewer\/viewer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/source-viewer\/viewer.js":[{"add":["459","          var line = $(e.currentTarget).data('line-number'),","460","              issuesList = $(e.currentTarget).parent().find('.issue-list'),","461","              areIssuesRendered = issuesList.find('.issue-inner').length > 0;","462","          if (issuesList.is('.hidden')) {","463","            if (areIssuesRendered) {","464","              issuesList.removeClass('hidden');","465","            } else {","466","              this.showIssuesForLine(line);","467","            }","469","            issuesList.addClass('hidden');"],"delete":["459","          var line = $(e.currentTarget).data('line-number');","460","          if ($(e.currentTarget).parent().find('.issue-list').is('.hidden')) {","461","            this.showIssuesForLine(line);","463","            $(e.currentTarget).parent().find('.issue-list').addClass('hidden');"]}]}},"fedee0f1c5984f069ba09c71db442d2aa44b8105":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DropDefaultPermTemplateViewFromOrganizationsTest.java":"ADD","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/organization\/OrganizationDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DropDefaultPermTemplateViewFromOrganizations.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74Test.java":"MODIFY","server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DropDefaultPermTemplateViewFromOrganizationsTest\/organizations.sql":"ADD"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DropDefaultPermTemplateViewFromOrganizationsTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/organization\/OrganizationDaoTest.java":[{"add":["1223","          \"      default_perm_template_app,\" +","1224","          \"      default_perm_template_port,\" +","1244","          \"      ?,\" +","1252","      preparedStatement.setString(6, view);","1254","      preparedStatement.setBoolean(8, false);","1255","      preparedStatement.setString(9, \"1\");","1256","      preparedStatement.setString(10, FREE.name());","1257","      preparedStatement.setLong(11, 1000L);","1258","      preparedStatement.setLong(12, 2000L);"],"delete":["1223","          \"      default_perm_template_view,\" +","1250","      preparedStatement.setBoolean(6, false);","1252","      preparedStatement.setString(8, \"1\");","1253","      preparedStatement.setString(9, FREE.name());","1254","      preparedStatement.setLong(10, 1000L);","1255","      preparedStatement.setLong(11, 2000L);","1304","      \" default_perm_template_view as \\\"viewDefaultPermTemplate\\\",\" +"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DropDefaultPermTemplateViewFromOrganizations.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74Test.java":[{"add":["37","    verifyMigrationCount(underTest, 23);"],"delete":["37","    verifyMigrationCount(underTest, 22);"]}],"server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":[],"delete":["9","  \"DEFAULT_PERM_TEMPLATE_VIEW\" VARCHAR(40),"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74.java":[{"add":["51","      .add(2329, \"Drop column DEFAULT_PERM_TEMPLATE_VIEW on organizations\", DropDefaultPermTemplateViewFromOrganizations.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DropDefaultPermTemplateViewFromOrganizationsTest\/organizations.sql":[{"add":[],"delete":[]}]}},"5025dd99bfcf1233844199e978e4fea8117b4fde":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/styles.css":[{"add":["104","  min-width: 80px;","107","  white-space: nowrap;","108","  overflow: hidden;","109","  text-overflow: ellipsis;"],"delete":["104","  width: 80px;"]}]}},"a7b91a1668a2ef9b99b35ddfaa1eae35118b4f5d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/history\/MeasureHistory.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/details\/history\/MeasureHistory.js":[{"add":["114","        y: metric.type === 'LEVEL' ? snapshot.value : Number(snapshot.value)"],"delete":["114","        y: Number(snapshot.value)"]}]}},"dd207a8d9aba5a03af76dbc67bc451ece2afc35b":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/PermissionsWsParametersBuilder.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveGroupAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/UsersAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveUserAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/GroupsAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddGroupAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/ApplyTemplateAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddUserAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/PermissionsWsParametersBuilder.java":[{"add":["83","  public static void createProjectParameters(NewAction action) {"],"delete":["83","  public static void createProjectParameter(NewAction action) {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveGroupAction.java":[{"add":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","72","    createProjectParameters(action);"],"delete":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","72","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/UsersAction.java":[{"add":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","85","    createProjectParameters(action);"],"delete":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","85","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveUserAction.java":[{"add":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","67","    createProjectParameters(action);"],"delete":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","67","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/GroupsAction.java":[{"add":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","84","    createProjectParameters(action);"],"delete":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","84","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddGroupAction.java":[{"add":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","70","    createProjectParameters(action);"],"delete":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","70","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsAction.java":[{"add":["44","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","82","    createProjectParameters(action);"],"delete":["44","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","82","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/ApplyTemplateAction.java":[{"add":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","66","    createProjectParameters(action);"],"delete":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","66","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddUserAction.java":[{"add":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","67","    createProjectParameters(action);"],"delete":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","67","    createProjectParameter(action);"]}]}},"75ce835beb9f2140bb0fe14b8cb88452520a6946":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/common\/SelectList.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/issues.less":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/SimilarIssuesPopup.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/common\/SelectList.js":[{"add":["23","import classNames from 'classnames';","29","  className?: string,","135","  renderChild = (child \/*: Object *\/) => {","136","    if (child == null) {","137","      return null;","138","    }","139","    \/\/ do not pass extra props to children like `<li className=\"divider\" \/>`","140","    if (child.type !== SelectListItem) {","141","      return child;","142","    }","143","    return React.cloneElement(child, {","144","      active: this.state.active,","145","      onHover: this.handleHover,","146","      onSelect: this.handleSelect","147","    });","148","  };","149","","154","      <ul className={classNames('menu', this.props.className)}>","155","        {hasChildren && React.Children.map(children, this.renderChild)}"],"delete":["137","      <ul className=\"menu\">","138","        {hasChildren &&","139","          React.Children.map(","140","            children,","141","            child =>","142","              child != null &&","143","              React.cloneElement(child, {","144","                active: this.state.active,","145","                onHover: this.handleHover,","146","                onSelect: this.handleSelect","147","              })","148","          )}"]}],"server\/sonar-web\/src\/main\/less\/components\/issues.less":[{"add":["384",".issue .menu:not(.issues-similar-issues-menu) {"],"delete":["384",".issue .menu {"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/SimilarIssuesPopup.js":[{"add":["73","        <SelectList","74","          className=\"issues-similar-issues-menu\"","75","          currentItem={items[0]}","76","          items={items}","77","          onSelect={this.handleSelect}>","116","          <li className=\"divider\" \/>","117","","128","          <li className=\"divider\" \/>","129",""],"delete":["73","        <SelectList currentItem={items[0]} items={items} onSelect={this.handleSelect}>"]}]}},"371a6747cde5bcc9d21a70588b7035a99d6d7e9c":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueTitleBar-test.tsx.snap":[{"add":["94","                \"types\": undefined,","192","                \"types\": undefined,"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.tsx":[{"add":["93","","94","it('should have a correct permalink for security hotspots', () => {","95","  const wrapper = shallow(","96","    <IssueTitleBar issue={{ ...issue, type: 'SECURITY_HOTSPOT' }} togglePopup={jest.fn()} \/>","97","  );","98","  expect(wrapper.find('.js-issue-permalink').prop('to')).toEqual({","99","    pathname: '\/project\/issues',","100","    query: {","101","      id: 'myproject',","102","      issues: 'AVsae-CQS-9G3txfbFN2',","103","      open: 'AVsae-CQS-9G3txfbFN2',","104","      types: 'SECURITY_HOTSPOT'","105","    }","106","  });","107","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.tsx":[{"add":["65","    open: issue.key,","66","    types: issue.type === 'SECURITY_HOTSPOT' ? issue.type : undefined"],"delete":["65","    open: issue.key"]}]}},"6a75aa3940a17341042dcd031af70eec5dd85dde":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ActivityAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ActivityAction.java":[{"add":["76","  private static final List<String> POSSIBLE_QUALIFIERS = ImmutableList.of(Qualifiers.PROJECT, Qualifiers.VIEW, \"DEV\", Qualifiers.MODULE);"],"delete":["76","  private static final List<String> POSSIBLE_QUALIFIERS = ImmutableList.of(Qualifiers.PROJECT, Qualifiers.VIEW, \"DEV\");"]}]}},"4e44847179780459b438cebb27c5425df1920a69":{"changes":{"\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/__snapshots__\/DocMarkdownBlock-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/docs\/plugins\/remark-only-toc.js":"MODIFY","server\/sonar-web\/src\/main\/js\/@types\/rehype-slug.d.ts":"ADD","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/docs\/DocMarkdownBlock.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/DocMarkdownBlock-test.tsx":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/__snapshots__\/DocMarkdownBlock-test.tsx.snap":[{"add":["14","          id=\"lorem-ipsum\"","29","          id=\"sit-amet\"","37","          id=\"maecenas-diam\"","52","          id=\"integer\"","67","          id=\"nam-blandit\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/docs\/plugins\/remark-only-toc.js":[{"add":[],"delete":["20","import slug from 'remark-slug';","21","","27","  this.use(slug);","28",""]}],"server\/sonar-web\/src\/main\/js\/@types\/rehype-slug.d.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/package.json":[{"add":["37","    \"rehype-slug\": \"3.0.0\","],"delete":["39","    \"remark-slug\": \"5.1.2\","]}],"server\/sonar-web\/src\/main\/js\/components\/docs\/DocMarkdownBlock.tsx":[{"add":["23","import rehypeSlug from 'rehype-slug';","75","      .use(rehypeSlug)","91","      });"],"delete":["26","import slug from 'remark-slug';","90","      })","91","      .use(slug);"]}],"server\/sonar-web\/yarn.lock":[{"add":["5225","github-slugger@^1.1.1, github-slugger@^1.2.1:","5514","hast-util-has-property@^1.0.0:","5515","  version \"1.0.4\"","5516","  resolved \"https:\/\/registry.yarnpkg.com\/hast-util-has-property\/-\/hast-util-has-property-1.0.4.tgz#9f137565fad6082524b382c1e7d7d33ca5059f36\"","5517","  integrity sha512-ghHup2voGfgFoHMGnaLHOjbYFACKrRh9KFttdCzMCbFoBMJXiNi2+XTrPP8+q6cDJM\/RSqlCfVWrjp1H201rZg==","5518","","5519","hast-util-is-element@^1.0.0:","5520","  version \"1.0.4\"","5521","  resolved \"https:\/\/registry.yarnpkg.com\/hast-util-is-element\/-\/hast-util-is-element-1.0.4.tgz#059090a05cc02e275df1ad02caf8cb422fcd2e02\"","5522","  integrity sha512-NFR6ljJRvDcyPP5SbV7MyPBgF47X3BsskLnmw1U34yL+X6YC0MoBx9EyMg8Jtx4FzGH95jw8+c1VPLHaRA0wDQ==","5523","","5561","hast-util-to-string@^1.0.0:","5562","  version \"1.0.3\"","5563","  resolved \"https:\/\/registry.yarnpkg.com\/hast-util-to-string\/-\/hast-util-to-string-1.0.3.tgz#897d4bbd0dc7a9b0765a943a82fa38136277de1f\"","5564","  integrity sha512-3lDgDE5OdpTfP3aFeKRWEwdIZ4vprztvp+AoD+RhF7uGOBs1yBDWZFadxnjcUV4KCoI3vB9A7gdFO98hEXA90w==","5565","","9783","rehype-slug@3.0.0:","9784","  version \"3.0.0\"","9785","  resolved \"https:\/\/registry.yarnpkg.com\/rehype-slug\/-\/rehype-slug-3.0.0.tgz#8416257df9665981894a1f0cd42b13c407bbcc8e\"","9786","  integrity sha512-zFnj5BCEJXV6+URwaz8yW+9BdjDwO5iVzlQui3+7cCJ9MXlIEL0IY8VefcT\/03Gw+2Hutdrx+zXnS7bnOrepZg==","9787","  dependencies:","9788","    github-slugger \"^1.1.1\"","9789","    hast-util-has-property \"^1.0.0\"","9790","    hast-util-is-element \"^1.0.0\"","9791","    hast-util-to-string \"^1.0.0\"","9792","    unist-util-visit \"^2.0.0\"","9793",""],"delete":["5225","github-slugger@^1.0.0:","5226","  version \"1.2.1\"","5227","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/github-slugger\/-\/github-slugger-1.2.1.tgz#47e904e70bf2dccd0014748142d31126cfd49508\"","5228","  integrity sha1-R+kE5wvy3M0AFHSBQtMRJs\/UlQg=","5229","  dependencies:","5230","    emoji-regex \">=6.0.0 <=6.1.1\"","5231","","5232","github-slugger@^1.2.1:","7481","mdast-util-to-string@^1.0.0:","7482","  version \"1.0.6\"","7483","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/mdast-util-to-string\/-\/mdast-util-to-string-1.0.6.tgz#7d85421021343b33de1552fc71cb8e5b4ae7536d\"","7484","  integrity sha1-fYVCECE0OzPeFVL8ccuOW0rnU20=","7485","","9830","remark-slug@5.1.2:","9831","  version \"5.1.2\"","9832","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/remark-slug\/-\/remark-slug-5.1.2.tgz#715ecdef8df1226786204b1887d31ab16aa24609\"","9833","  integrity sha1-cV7N743xImeGIEsYh9MasWqiRgk=","9834","  dependencies:","9835","    github-slugger \"^1.0.0\"","9836","    mdast-util-to-string \"^1.0.0\"","9837","    unist-util-visit \"^1.0.0\"","9838",""]}],"server\/sonar-web\/src\/main\/js\/components\/docs\/__tests__\/DocMarkdownBlock-test.tsx":[{"add":["49","jest.mock('rehype-slug', () => ({ default: jest.requireActual('rehype-slug') }));"],"delete":["49","jest.mock('remark-slug', () => ({ default: jest.requireActual('remark-slug') }));"]}]}},"2e79ddbc769ea669173acbafcacf93eb4a088cc4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.js":[{"add":["93","    page: r.paging.pageIndex,","94","    baseComponent: r.baseComponent","127","function retrieveComponentBase (componentKey, isView) {","146","export function retrieveComponentChildren (componentKey, isView) {"],"delete":["93","    page: r.paging.pageIndex","126","export function retrieveComponentBase (componentKey, isView) {","145","function retrieveComponentChildren (componentKey, isView) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.js":[{"add":["27","import { retrieveComponentChildren, retrieveComponent, loadMoreChildren, parseError } from '..\/utils';","28","import { addComponent, addComponentBreadcrumbs } from '..\/bucket';","70","    retrieveComponentChildren(component.key, isView).then(r => {","71","      addComponent(r.baseComponent);","72","      const prefix = selectCoverageMetric(r.baseComponent.measures);"],"delete":["27","import { retrieveComponentBase, retrieveComponent, loadMoreChildren, parseError } from '..\/utils';","28","import { addComponentBreadcrumbs } from '..\/bucket';","70","    retrieveComponentBase(component.key, isView).then(component => {","71","      const prefix = selectCoverageMetric(component.measures);"]}]}},"fd961a51b94ebcc2811e833a683ca2a538cace02":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2317","overview.project.no_lines_of_code=This project as no lines of code.","2318","overview.project.empty=This project is empty.","2319",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.tsx":[{"add":["176","    const { component } = this.props;","177","    const isProject = component.qualifier === 'TRK';","183","            ? translate(isProject ? 'overview.project.empty' : 'portfolio.app.empty')","184","            : translate(","185","                isProject ? 'overview.project.no_lines_of_code' : 'portfolio.app.no_lines_of_code'","186","              )}"],"delete":["181","            ? translate('portfolio.app.empty')","182","            : translate('portfolio.app.no_lines_of_code')}"]}]}},"652bcc1cd8f6cb2d6281694a74300ef3b24fbc11":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQueryFactory.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["153","  \/\/SONAR-10217","154","  @Test","155","  public void empty_search_with_unknown_branch() throws Exception {","156","    TestResponse result = ws.newRequest()","157","      .setParam(\"onComponentOnly\", \"true\")","158","      .setParam(\"componentKeys\", \"foo\")","159","      .setParam(\"branch\", \"bar\")","160","      .execute();","161","","162","    assertThat(result).isNotNull();","163","    result.assertJson(this.getClass(), \"empty_result.json\");","164","  }","165",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQueryFactory.java":[{"add":["396","    builder.mainBranch(branch == null || component.equals(UNKNOWN_COMPONENT) || !branch.equals(component.getBranch()));"],"delete":["396","    builder.mainBranch(branch == null || !branch.equals(component.getBranch()));"]}]}},"b727216b31e7e06559e5f38ccfab41c50245c6d4":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoaderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoader.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoaderTest.java":[{"add":["26","import java.net.HttpURLConnection;","41","import static org.mockito.ArgumentMatchers.anyInt;","62","  public void continueOnHttp404Exception() {","63","    when(wsClient.call(any(WsRequest.class))).thenThrow(new HttpException(\"\/batch\/project.protobuf?key=foo%3F\", HttpURLConnection.HTTP_NOT_FOUND, \"\"));","64","    ProjectRepositories proj = loader.load(PROJECT_KEY, null);","65","    assertThat(proj.exists()).isEqualTo(false);","66","  }","67","","68","  @Test(expected = IllegalStateException.class)","69","  public void failOnNonHttp404Exception() {","75","  @Test(expected = IllegalStateException.class)","78","    when(is.read(any(byte[].class), anyInt(), anyInt())).thenThrow(IOException.class);"],"delete":["60","  public void continueOnError() {","66","  @Test","69","    when(is.read()).thenThrow(IOException.class);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/DefaultProjectRepositoriesLoader.java":[{"add":["78","      if (t instanceof HttpException && ((HttpException) t).code() == HttpURLConnection.HTTP_NOT_FOUND) {","79","        return false;","83","    return true;"],"delete":["30","import org.sonar.api.utils.MessageException;","79","      if (t instanceof HttpException) {","80","        HttpException http = (HttpException) t;","81","        return http.code() != HttpURLConnection.HTTP_NOT_FOUND;","82","      }","83","      if (t instanceof MessageException) {","84","        return true;","88","    return false;"]}]}},"7a090f7a951b839d94f4d1af2b53ee9a1453e399":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/ce.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBgTaskNotif.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBgTaskNotif-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBgTaskNotif-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/ProjectWatcher.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/ce.ts":[{"add":["92","): Promise<{ queue: PendingTask[]; current: Task }> {","93","  return getJSON('\/api\/ce\/component', { componentKey }).catch(throwGlobalError);"],"delete":["92","): Promise<{","93","  queue: PendingTask[];","94","  current: Task;","95","}> {","96","  return getJSON('\/api\/ce\/component', { componentKey });"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavBgTaskNotif.tsx":[{"add":["43","  renderMessage(messageKey: string, status?: string) {","46","      component.configuration && component.configuration.showBackgroundTasks;","47","    const bgTaskUrl = getComponentBackgroundTaskUrl(component.key, status);","78","          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}"],"delete":["43","  renderMessage(messageKey: string) {","46","      component.configuration !== undefined && component.configuration.showBackgroundTasks;","47","    const bgTaskUrl = getComponentBackgroundTaskUrl(component.key);","78","          {this.renderMessage('component_navigation.status.pending')}"]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["66","export function getComponentBackgroundTaskUrl(componentKey: string, status?: string): Location {","67","  return { pathname: '\/project\/background_tasks', query: { id: componentKey, status } };"],"delete":["66","export function getComponentBackgroundTaskUrl(componentKey: string): Location {","67","  return { pathname: '\/project\/background_tasks', query: { id: componentKey } };"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.tsx":[{"add":["77","      },","78","      () => {}"],"delete":["77","      }"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavBgTaskNotif-test.tsx":[{"add":["49","it('renders background task pending info correctly for admin', () => {","50","  expect(","51","    getWrapper({","52","      component: { ...component, configuration: { showBackgroundTasks: true } },","53","      isPending: true","54","    })","55","  ).toMatchSnapshot();","56","});","57",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavBgTaskNotif-test.tsx.snap":[{"add":["56","","57","exports[`renders background task pending info correctly for admin 1`] = `","58","<NavBarNotif","59","  className=\"alert alert-info\"","60",">","61","  <PendingIcon","62","    className=\"spacer-right\"","63","  \/>","64","  <FormattedMessage","65","    defaultMessage=\"component_navigation.status.pending.admin\"","66","    id=\"component_navigation.status.pending.admin\"","67","    values={","68","      Object {","69","        \"url\": <Link","70","          onlyActiveOnIndex={false}","71","          style={Object {}}","72","          to={","73","            Object {","74","              \"pathname\": \"\/project\/background_tasks\",","75","              \"query\": Object {","76","                \"id\": \"foo\",","77","                \"status\": \"__ALL__\",","78","              },","79","            }","80","          }","81","        >","82","          background_tasks.page","83","        <\/Link>,","84","      }","85","    }","86","  \/>","87","<\/NavBarNotif>","88","`;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/ProjectWatcher.js":[{"add":["69","    getTasksForComponent(projectKey).then(","70","      response => {","71","        if (response.queue.length > 0) {","72","          this.setState({ inQueue: true });","73","        }","75","        if (response.current != null) {","76","          const { status } = response.current;","77","          this.setState({ status });","78","          if (status === STATUSES.SUCCESS) {","79","            this.props.onFinish();","80","          } else if (status === STATUSES.PENDING || status === STATUSES.IN_PROGRESS) {","81","            this.watch();","82","          }","83","        } else {","86","      },","87","      () => {}","88","    );"],"delete":["69","    getTasksForComponent(projectKey).then(response => {","70","      if (response.queue.length > 0) {","71","        this.setState({ inQueue: true });","72","      }","74","      if (response.current != null) {","75","        const { status } = response.current;","76","        this.setState({ status });","77","        if (status === STATUSES.SUCCESS) {","78","          this.props.onFinish();","79","        } else if (status === STATUSES.PENDING || status === STATUSES.IN_PROGRESS) {","82","      } else {","83","        this.watch();","84","      }","85","    });"]}]}},"437bf3bf7259b5f6f1f914c3fc0dcd2c2cc0b6df":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/scm\/DefaultBlameOutput.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/scm\/ScmSensor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/report\/ReportPublisher.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/scm\/DefaultBlameOutput.java":[{"add":["42","import org.sonar.scanner.protocol.output.ScannerReportWriter;","136","  public void finish(boolean success) {","138","    if (success && !allFilesToBlame.isEmpty()) {"],"delete":["41","import org.sonar.scanner.protocol.output.ScannerReportWriter;","136","  public void finish() {","138","    if (!allFilesToBlame.isEmpty()) {"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/scm\/ScmSensor.java":[{"add":["83","      } catch (Exception e) {","84","        output.finish(false);","85","        throw e;","87","      output.finish(true);"],"delete":["83","      } finally {","84","        output.finish();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":[{"add":["110","    ProjectLock lock = getComponentByType(ProjectLock.class);"],"delete":["101","  private ProjectLock lock;","111","    lock = getComponentByType(ProjectLock.class);","124","  @Override","125","  public ComponentContainer startComponents() {","126","    try {","127","      return super.startComponents();","128","    } catch (Exception e) {","129","      \/\/ ensure that lock is released","130","      if (lock != null) {","131","        lock.stop();","132","      }","133","      throw e;","134","    }","135","  }","136",""]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/report\/ReportPublisher.java":[{"add":["104","    if (!shouldKeepReport()) {","122","      if (shouldKeepReport()) {","123","        LOG.info(\"Analysis report generated in \" + reportDir);","124","      }","132","  private boolean shouldKeepReport() {","133","    return settings.getBoolean(KEEP_REPORT_PROP_KEY) || settings.getBoolean(VERBOSE_KEY);","134","  }","135",""],"delete":["104","    if (!settings.getBoolean(KEEP_REPORT_PROP_KEY) && !settings.getBoolean(VERBOSE_KEY)) {","106","    } else {","107","      LOG.info(\"Analysis report generated in \" + reportDir);"]}]}},"b61f2e843c6e1e72a7f1a987b53bd9921eaa69cf":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavMenu-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMenu-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavMenu-test.js":[{"add":["26","    qualifier: 'TRK',","27","    extensions: [{ key: 'component-foo', name: 'ComponentFoo' }]","33","  expect(shallow(<ComponentNavMenu component={component} conf={conf} \/>)).toMatchSnapshot();","34","});","35","","36","it('should work with multiple extensions', () => {","37","  const component = {","38","    key: 'foo',","39","    qualifier: 'TRK',","40","    extensions: [","41","      { key: 'component-foo', name: 'ComponentFoo' },","42","      { key: 'component-bar', name: 'ComponentBar' }","43","    ]","44","  };","45","  const conf = {","46","    showSettings: true,","47","    extensions: [{ key: 'foo', name: 'Foo' }, { key: 'bar', name: 'Bar' }]","48","  };","49","  expect(shallow(<ComponentNavMenu component={component} conf={conf} \/>)).toMatchSnapshot();"],"delete":["26","    qualifier: 'TRK'","32","  const wrapper = shallow(<ComponentNavMenu component={component} conf={conf} \/>);","33","  expect(wrapper).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.js":[{"add":["304","  renderExtension = ({ key, name }, isAdmin) => {","338","          {withoutGovernance.map(e => this.renderExtension(e, false))}"],"delete":["304","  renderExtension = ({ key, name }, isAdmin = false) => {","338","          {withoutGovernance.map(this.renderExtension)}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavMenu-test.js.snap":[{"add":["165","  <li","166","    className=\"dropdown\"","167","  >","168","    <a","169","      className=\"dropdown-toggle\"","170","      data-toggle=\"dropdown\"","171","      href=\"#\"","172","      id=\"component-navigation-more\"","173","    >","174","      more","175","       ","176","      <i","177","        className=\"icon-dropdown\"","178","      \/>","179","    <\/a>","180","    <ul","181","      className=\"dropdown-menu\"","182","    >","183","      <li>","184","        <Link","185","          activeClassName=\"active\"","186","          onlyActiveOnIndex={false}","187","          style={Object {}}","188","          to={","189","            Object {","190","              \"pathname\": \"\/project\/extension\/component-foo\",","191","              \"query\": Object {","192","                \"id\": \"foo\",","193","              },","194","            }","195","          }","196","        >","197","          ComponentFoo","198","        <\/Link>","199","      <\/li>","200","    <\/ul>","201","  <\/li>","202","<\/ul>","203","`;","204","","205","exports[`should work with multiple extensions 1`] = `","206","<ul","207","  className=\"nav navbar-nav nav-tabs\"","208",">","209","  <li>","210","    <Link","211","      activeClassName=\"active\"","212","      onlyActiveOnIndex={false}","213","      style={Object {}}","214","      to={","215","        Object {","216","          \"pathname\": \"\/dashboard\",","217","          \"query\": Object {","218","            \"id\": \"foo\",","219","          },","220","        }","221","      }","222","    >","223","      <i","224","        className=\"icon-home\"","225","      \/>","226","    <\/Link>","227","  <\/li>","228","  <li>","229","    <Link","230","      activeClassName=\"active\"","231","      onlyActiveOnIndex={false}","232","      style={Object {}}","233","      to={","234","        Object {","235","          \"pathname\": \"\/project\/issues\",","236","          \"query\": Object {","237","            \"id\": \"foo\",","238","            \"resolved\": \"false\",","239","          },","240","        }","241","      }","242","    >","243","      issues.page","244","    <\/Link>","245","  <\/li>","246","  <li>","247","    <Link","248","      activeClassName=\"active\"","249","      onlyActiveOnIndex={false}","250","      style={Object {}}","251","      to={","252","        Object {","253","          \"pathname\": \"\/component_measures\",","254","          \"query\": Object {","255","            \"id\": \"foo\",","256","          },","257","        }","258","      }","259","    >","260","      layout.measures","261","    <\/Link>","262","  <\/li>","263","  <li>","264","    <Link","265","      activeClassName=\"active\"","266","      onlyActiveOnIndex={false}","267","      style={Object {}}","268","      to={","269","        Object {","270","          \"pathname\": \"\/code\",","271","          \"query\": Object {","272","            \"id\": \"foo\",","273","          },","274","        }","275","      }","276","    >","277","      code.page","278","    <\/Link>","279","  <\/li>","280","  <li>","281","    <Link","282","      activeClassName=\"active\"","283","      onlyActiveOnIndex={false}","284","      style={Object {}}","285","      to={","286","        Object {","287","          \"pathname\": \"\/project\/activity\",","288","          \"query\": Object {","289","            \"id\": \"foo\",","290","          },","291","        }","292","      }","293","    >","294","      project_activity.page","295","    <\/Link>","296","  <\/li>","297","  <li","298","    className=\"dropdown\"","299","  >","300","    <a","301","      className=\"dropdown-toggle navbar-admin-link\"","302","      data-toggle=\"dropdown\"","303","      href=\"#\"","304","      id=\"component-navigation-admin\"","305","    >","306","      layout.settings","307","       ","308","      <i","309","        className=\"icon-dropdown\"","310","      \/>","311","    <\/a>","312","    <ul","313","      className=\"dropdown-menu\"","314","    >","315","      <li>","316","        <Link","317","          activeClassName=\"active\"","318","          onlyActiveOnIndex={false}","319","          style={Object {}}","320","          to={","321","            Object {","322","              \"pathname\": \"\/project\/settings\",","323","              \"query\": Object {","324","                \"id\": \"foo\",","325","              },","326","            }","327","          }","328","        >","329","          project_settings.page","330","        <\/Link>","331","      <\/li>","332","      <li>","333","        <Link","334","          activeClassName=\"active\"","335","          onlyActiveOnIndex={false}","336","          style={Object {}}","337","          to={","338","            Object {","339","              \"pathname\": \"\/project\/admin\/extension\/foo\",","340","              \"query\": Object {","341","                \"id\": \"foo\",","342","              },","343","            }","344","          }","345","        >","346","          Foo","347","        <\/Link>","348","      <\/li>","349","      <li>","350","        <Link","351","          activeClassName=\"active\"","352","          onlyActiveOnIndex={false}","353","          style={Object {}}","354","          to={","355","            Object {","356","              \"pathname\": \"\/project\/admin\/extension\/bar\",","357","              \"query\": Object {","358","                \"id\": \"foo\",","359","              },","360","            }","361","          }","362","        >","363","          Bar","364","        <\/Link>","365","      <\/li>","366","      <li>","367","        <Link","368","          activeClassName=\"active\"","369","          onlyActiveOnIndex={false}","370","          style={Object {}}","371","          to={","372","            Object {","373","              \"pathname\": \"\/project\/deletion\",","374","              \"query\": Object {","375","                \"id\": \"foo\",","376","              },","377","            }","378","          }","379","        >","380","          deletion.page","381","        <\/Link>","382","      <\/li>","383","    <\/ul>","384","  <\/li>","385","  <li","386","    className=\"dropdown\"","387","  >","388","    <a","389","      className=\"dropdown-toggle\"","390","      data-toggle=\"dropdown\"","391","      href=\"#\"","392","      id=\"component-navigation-more\"","393","    >","394","      more","395","       ","396","      <i","397","        className=\"icon-dropdown\"","398","      \/>","399","    <\/a>","400","    <ul","401","      className=\"dropdown-menu\"","402","    >","403","      <li>","404","        <Link","405","          activeClassName=\"active\"","406","          onlyActiveOnIndex={false}","407","          style={Object {}}","408","          to={","409","            Object {","410","              \"pathname\": \"\/project\/extension\/component-foo\",","411","              \"query\": Object {","412","                \"id\": \"foo\",","413","              },","414","            }","415","          }","416","        >","417","          ComponentFoo","418","        <\/Link>","419","      <\/li>","420","      <li>","421","        <Link","422","          activeClassName=\"active\"","423","          onlyActiveOnIndex={false}","424","          style={Object {}}","425","          to={","426","            Object {","427","              \"pathname\": \"\/project\/extension\/component-bar\",","428","              \"query\": Object {","429","                \"id\": \"foo\",","430","              },","431","            }","432","          }","433","        >","434","          ComponentBar","435","        <\/Link>","436","      <\/li>","437","    <\/ul>","438","  <\/li>"],"delete":[]}]}},"bb7e74da6d8a3fdd27317af2e92c4ec106e92956":{"changes":{"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/telemetry\/TelemetryDaemonTest.java":"MODIFY","server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel1.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/InternalPropertiesDaoTest.java":"MODIFY","server\/sonar-webserver-api\/src\/main\/java\/org\/sonar\/server\/util\/GlobalLockManager.java":"MODIFY","server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ProjectsInWarningDaemonTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/InternalPropertiesDao.java":"MODIFY","server\/sonar-webserver-api\/src\/main\/java\/org\/sonar\/server\/util\/GlobalLockManagerImpl.java":"ADD","server\/sonar-webserver-api\/src\/testFixtures\/java\/org\/sonar\/server\/util\/GlobalLockManagerRule.java":"ADD","server\/sonar-webserver-api\/build.gradle":"MODIFY","server\/sonar-webserver-api\/src\/test\/java\/org\/sonar\/server\/util\/GlobalLockManagerImplTest.java":"ADD"},"diff":{"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/telemetry\/TelemetryDaemonTest.java":[{"add":["53","import org.sonar.server.util.GlobalLockManagerImpl;","99","  private final GlobalLockManager lockManager = mock(GlobalLockManagerImpl.class);"],"delete":["98","  private final GlobalLockManager lockManager = mock(GlobalLockManager.class);"]}],"server\/sonar-webserver\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel1.java":[{"add":["31","import org.sonar.server.util.GlobalLockManagerImpl;","131","      GlobalLockManagerImpl.class,"],"delete":["63","import org.sonar.server.util.GlobalLockManager;","131","      GlobalLockManager.class,"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/InternalPropertiesDaoTest.java":[{"add":["409","    assertThat(underTest.selectByKey(dbSession, propertyKeyOf(A_KEY))).contains(String.valueOf(now));","424","    assertThat(underTest.selectByKey(dbSession, propertyKeyOf(A_KEY))).contains(String.valueOf(now));","434","    assertThat(underTest.selectByKey(dbSession, propertyKeyOf(A_KEY))).contains(String.valueOf(now));","440","    String propertyKey = propertyKeyOf(name);","449","    when(mapperMock.selectAsText(ImmutableList.of(propertyKey)))","451","    doThrow(RuntimeException.class).when(mapperMock).insertAsText(eq(propertyKey), anyString(), anyLong());","455","    assertThat(underTest.selectByKey(dbSession, propertyKey)).contains(String.valueOf(now));","462","    String propertyKey = propertyKeyOf(name);","464","    long now = new Random().nextInt(4_889_989);","474","    dto.setKey(propertyKey);","476","    when(mapperMock.selectAsText(ImmutableList.of(propertyKey)))","481","    assertThat(underTest.selectByKey(dbSession, propertyKey)).contains(String.valueOf(oldTimestamp));","485","  public void tryLock_throws_IAE_if_lock_name_is_empty() {","486","    expectedException.expect(IllegalArgumentException.class);","487","    expectedException.expectMessage(\"lock name can't be empty\");","488","","489","    underTest.tryLock(dbSession, \"\", 60);","490","  }","491","","492","  @Test","493","  public void tryLock_throws_IAE_if_lock_name_length_is_16_or_more() {","494","    String tooLongName = randomAlphabetic(16 + new Random().nextInt(30));","498","","502","  private static String propertyKeyOf(String lockName) {","503","    return \"lock.\" + lockName;"],"delete":["56","import static org.sonar.db.property.InternalPropertiesDao.KEY_MAX_LENGTH;","57","import static org.sonar.db.property.InternalPropertiesDao.LOCK_PREFIX;","411","    assertThat(underTest.selectByKey(dbSession, key(A_KEY))).contains(String.valueOf(now));","426","    assertThat(underTest.selectByKey(dbSession, key(A_KEY))).contains(String.valueOf(now));","436","    assertThat(underTest.selectByKey(dbSession, key(A_KEY))).contains(String.valueOf(now));","442","    String key = key(name);","451","    when(mapperMock.selectAsText(ImmutableList.of(key)))","453","    doThrow(RuntimeException.class).when(mapperMock).insertAsText(eq(key), anyString(), anyLong());","457","    assertThat(underTest.selectByKey(dbSession, key)).contains(String.valueOf(now));","464","    String key = key(name);","466","    long now = 123456;\/\/new Random().nextInt();","476","    dto.setKey(key);","478","    when(mapperMock.selectAsText(ImmutableList.of(key)))","483","    assertThat(underTest.selectByKey(dbSession, key)).contains(String.valueOf(oldTimestamp));","487","  public void tryLock_throws_if_lock_name_would_produce_too_long_key() {","488","    String tooLongName = randomAlphabetic(KEY_MAX_LENGTH - LOCK_PREFIX.length());","495","  private String key(String name) {","496","    return LOCK_PREFIX + '.' + name;"]}],"server\/sonar-webserver-api\/src\/main\/java\/org\/sonar\/server\/util\/GlobalLockManager.java":[{"add":["21","import org.sonar.db.property.InternalPropertiesDao;","23","public interface GlobalLockManager {","25","  int LOCK_NAME_MAX_LENGTH = InternalPropertiesDao.LOCK_NAME_MAX_LENGTH;","26","  int DEFAULT_LOCK_DURATION_SECONDS = 180;","29","   * Try to acquire a lock on the given name for the {@link #DEFAULT_LOCK_DURATION_SECONDS default duration},","31","   *","32","   * @throws IllegalArgumentException if name's length is > {@link #LOCK_NAME_MAX_LENGTH} or empty","34","  boolean tryLock(String name);","36","  \/**","37","   * Try to acquire a lock on the given name for the specified duration,","38","   * using the generic locking mechanism of {@see org.sonar.db.property.InternalPropertiesDao}.","39","   *","40","   * @throws IllegalArgumentException if name's length is > {@link #LOCK_NAME_MAX_LENGTH} or empty","41","   *\/","42","  boolean tryLock(String name, int durationSecond);"],"delete":["21","import org.sonar.api.ce.ComputeEngineSide;","22","import org.sonar.api.server.ServerSide;","23","import org.sonar.db.DbClient;","24","import org.sonar.db.DbSession;","26","\/**","27"," * Provide a simple mechanism to manage global locks across multiple nodes running in a cluster.","28"," * In the target use case multiple nodes try to execute something at around the same time,","29"," * and only the first should succeed, and the rest do nothing.","30"," *\/","31","@ComputeEngineSide","32","@ServerSide","33","public class GlobalLockManager {","35","  static final int DEFAULT_LOCK_DURATION_SECONDS = 180;","36","","37","  private final DbClient dbClient;","38","","39","  public GlobalLockManager(DbClient dbClient) {","40","    this.dbClient = dbClient;","41","  }","44","   * Try to acquire a lock on the given name in the default namespace,","47","  public boolean tryLock(String name) {","48","    return tryLock(name, DEFAULT_LOCK_DURATION_SECONDS);","49","  }","51","  public boolean tryLock(String name, int durationSecond) {","52","    try (DbSession dbSession = dbClient.openSession(false)) {","53","      boolean success = dbClient.internalPropertiesDao().tryLock(dbSession, name, durationSecond);","54","      dbSession.commit();","55","      return success;","56","    }","57","  }"]}],"server\/sonar-webserver-core\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ProjectsInWarningDaemonTest.java":[{"add":["41","import org.sonar.server.util.GlobalLockManagerImpl;","68","  private GlobalLockManager lockManager = mock(GlobalLockManagerImpl.class);"],"delete":["67","  private GlobalLockManager lockManager = mock(GlobalLockManager.class);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/InternalPropertiesDao.java":[{"add":["48","  private static final String LOCK_PREFIX = \"lock.\";","50","  private static final int KEY_MAX_LENGTH = 20;","51","  public static final int LOCK_NAME_MAX_LENGTH = KEY_MAX_LENGTH - LOCK_PREFIX.length();","52","","194","   *","195","   * @throws IllegalArgumentException if name's length is > {@link #LOCK_NAME_MAX_LENGTH}","196","   * @throws IllegalArgumentException if maxAgeInSeconds is <= 0","199","    if (name.isEmpty()) {","200","      throw new IllegalArgumentException(\"lock name can't be empty\");","201","    }","202","    if (name.length() > LOCK_NAME_MAX_LENGTH) {","205","    if (maxAgeInSeconds <= 0) {","206","      throw new IllegalArgumentException(\"maxAgeInSeconds must be > 0\");","207","    }","209","    String key = LOCK_PREFIX + name;"],"delete":["48","  public static final String LOCK_PREFIX = \"lock.\";","50","  static final int KEY_MAX_LENGTH = 20;","194","    String key = LOCK_PREFIX + '.' + name;","195","    if (key.length() > KEY_MAX_LENGTH) {"]}],"server\/sonar-webserver-api\/src\/main\/java\/org\/sonar\/server\/util\/GlobalLockManagerImpl.java":[{"add":[],"delete":[]}],"server\/sonar-webserver-api\/src\/testFixtures\/java\/org\/sonar\/server\/util\/GlobalLockManagerRule.java":[{"add":[],"delete":[]}],"server\/sonar-webserver-api\/build.gradle":[{"add":["39","","40","  testFixturesApi 'junit:junit'","41","","42","  testFixturesCompileOnly 'com.google.code.findbugs:jsr305'"],"delete":[]}],"server\/sonar-webserver-api\/src\/test\/java\/org\/sonar\/server\/util\/GlobalLockManagerImplTest.java":[{"add":[],"delete":[]}]}},"a0b8503e9504a4e149ec076d34ea82dfb6b91f86":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-restore-built-in-profiles.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-restore-built-in-profiles.hbs":[{"add":["2","    <h2>{{t 'quality_profiles.restore_built_in_profiles'}}<\/h2>"],"delete":["2","    <h2>{{t 'quality_profiles.new_profile'}}<\/h2>"]}]}},"a7575340afac655b86e8897258546fc9f55d6341":{"changes":{"server\/sonar-web\/src\/main\/js\/main\/processes.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/main\/processes.js":[{"add":["163","    failBackgroundProcess(jqXHR.processId, message ? escapeHtml(message) : null);"],"delete":["163","    failBackgroundProcess(jqXHR.processId, escapeHtml(message));"]}]}},"a19ab13f452c7e745cd5bbf2179f24b1076c7096":{"changes":{"build.gradle":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":"MODIFY"},"diff":{"build.gradle":[{"add":["166","      dependencySet(group: 'org.apache.tomcat.embed', version: '8.5.38') {"],"delete":["166","      dependencySet(group: 'org.apache.tomcat.embed', version: '8.5.37') {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":[{"add":["57","    \/\/ see https:\/\/tomcat.apache.org\/tomcat-8.5-doc\/config\/http.html","58","    connector.setProperty(\"relaxedQueryChars\", \"\\\"<>[\\\\]^`{|}\");"],"delete":[]}]}},"a1e8a7d90fc41f3174b5b28405a3fa8bdeebe247":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":[{"add":["32","  z-index: var(--normalZIndex);","260","  position: relative;","261","  z-index: var(--normalZIndex);","313","  position: relative;","314","  z-index: var(--aboveNormalZIndex);"],"delete":[]}]}},"23ee784e6d44f8462c8d160c7a113a64424bfb67":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndexDefinition.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/EsClient.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexDefinitionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/DefaultIndexSettings.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndexDefinition.java":[{"add":["23","import com.google.common.collect.ImmutableSortedMap;","97","    ruleMapping.setProperty(FIELD_RULE_HTML_DESCRIPTION, ImmutableSortedMap.of(","98","      \"type\", \"string\",","99","      \"index\", \"analyzed\",","100","      \"doc_values\", \"false\",","101","      \"index_analyzer\", \"html_analyzer\",","102","      \"search_analyzer\", \"html_analyzer\"","103","      ));"],"delete":["96","    ruleMapping.stringFieldBuilder(FIELD_RULE_HTML_DESCRIPTION).enableWordSearch().build();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/EsClient.java":[{"add":["235","  public Client nativeClient() {"],"delete":["235","  protected Client nativeClient() {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["182","      .field(FIELD_RULE_HTML_DESCRIPTION, 3f)"],"delete":["182","      .field(FIELD_RULE_HTML_DESCRIPTION + \".\" + SEARCH_WORDS_SUFFIX, 3f)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexDefinitionTest.java":[{"add":["21","import com.google.common.collect.ImmutableMap;","22","import java.util.List;","23","import org.apache.commons.lang.StringUtils;","24","import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse;","25","import org.junit.Rule;","28","import org.sonar.process.ProcessProperties;","29","import org.sonar.server.es.EsTester;","34","import static org.sonar.server.rule.index.RuleIndexDefinition.FIELD_RULE_HTML_DESCRIPTION;","35","import static org.sonar.server.rule.index.RuleIndexDefinition.FIELD_RULE_KEY;","36","import static org.sonar.server.rule.index.RuleIndexDefinition.FIELD_RULE_REPOSITORY;","37","import static org.sonar.server.rule.index.RuleIndexDefinition.INDEX;","41","  Settings settings = new Settings();","42","  RuleIndexDefinition underTest = new RuleIndexDefinition(settings);","43","","44","  @Rule","45","  public EsTester tester = new EsTester().addDefinitions(underTest);","48","  public void test_definition_of_index() {","49","    IndexDefinition.IndexDefinitionContext context = new IndexDefinition.IndexDefinitionContext();","50","    underTest.define(context);","52","    assertThat(context.getIndices()).hasSize(1);","53","    NewIndex ruleIndex = context.getIndices().get(\"rules\");","62","  @Test","63","  public void enable_replica_if_clustering_is_enabled() {","64","    settings.setProperty(ProcessProperties.CLUSTER_ACTIVATE, true);","65","    IndexDefinition.IndexDefinitionContext context = new IndexDefinition.IndexDefinitionContext();","66","    underTest.define(context);","67","","68","    NewIndex ruleIndex = context.getIndices().get(\"rules\");","69","    assertThat(ruleIndex.getSettings().get(\"index.number_of_replicas\")).isEqualTo(\"1\");","70","  }","71","","72","  @Test","73","  public void support_long_html_description() throws Exception {","74","    String longText = StringUtils.repeat(\"hello  \", 10_000);","75","    \/\/ the following method fails if PUT fails","76","    tester.putDocuments(INDEX, RuleIndexDefinition.TYPE_RULE, ImmutableMap.<String, Object>of(","77","      FIELD_RULE_HTML_DESCRIPTION, longText,","78","      FIELD_RULE_REPOSITORY, \"squid\",","79","      FIELD_RULE_KEY, \"S001\"));","80","    assertThat(tester.countDocuments(INDEX, RuleIndexDefinition.TYPE_RULE)).isEqualTo(1);","81","","82","    List<AnalyzeResponse.AnalyzeToken> tokens = analyzeIndexedTokens(longText);","83","    for (AnalyzeResponse.AnalyzeToken token : tokens) {","84","      assertThat(token.getTerm().length()).isEqualTo(\"hello\".length());","85","    }","86","  }","87","","88","  @Test","89","  public void remove_html_characters_of_html_description() {","90","    String text = \"<p>html <i>line<\/i><\/p>\";","91","    List<AnalyzeResponse.AnalyzeToken> tokens = analyzeIndexedTokens(text);","92","","93","    assertThat(tokens).extracting(\"term\").containsOnly(\"html\", \"line\");","94","  }","95","","96","  @Test","97","  public void sanitize_html_description_as_it_is_english() {","98","    String text = \"this is a small list of words\";","99","    \/\/ \"this\", \"is\", \"a\" and \"of\" are not indexed.","100","    \/\/ Plural \"words\" is converted to singular \"word\"","101","    List<AnalyzeResponse.AnalyzeToken> tokens = analyzeIndexedTokens(text);","102","    assertThat(tokens).extracting(\"term\").containsOnly(\"small\", \"list\", \"word\");","103","  }","104","","105","  private List<AnalyzeResponse.AnalyzeToken> analyzeIndexedTokens(String text) {","106","    return tester.client().nativeClient().admin().indices().prepareAnalyze(INDEX,","107","      text)","108","      .setField(FIELD_RULE_HTML_DESCRIPTION)","109","      .execute().actionGet().getTokens();","110","  }"],"delete":["30","  IndexDefinition.IndexDefinitionContext underTest = new IndexDefinition.IndexDefinitionContext();","33","  public void define() {","34","    RuleIndexDefinition def = new RuleIndexDefinition(new Settings());","35","    def.define(underTest);","37","    assertThat(underTest.getIndices()).hasSize(1);","38","    NewIndex ruleIndex = underTest.getIndices().get(\"rules\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/DefaultIndexSettings.java":[{"add":["64","      \/\/ English HTML analyzer","65","      .put(\"index.analysis.analyzer.html_analyzer.type\", \"custom\")","66","      .put(\"index.analysis.analyzer.html_analyzer.tokenizer\", \"standard\")","67","      .putArray(\"index.analysis.analyzer.html_analyzer.filter\",","68","        \"standard\", \"lowercase\", \"stop\", \"asciifolding\", \"porter_stem\")","69","      .putArray(\"index.analysis.analyzer.html_analyzer.char_filter\", \"html_strip\")","70",""],"delete":[]}]}},"6c9938e19c97a44e8cec9a33fa6f9b0acbc7609a":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/ProjectFileIndexer.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/ProjectFileIndexer.java":[{"add":["41","import org.sonar.api.batch.fs.internal.DefaultInputModule;","165","      for (Iterator<Path> it = paths.iterator(); it.hasNext();) {","284","      return excludedByPatternsCount.get();","288","      excludedByScmCount.incrementAndGet();"],"delete":["47","import org.sonar.api.batch.fs.internal.DefaultInputModule;","165","      for (Iterator<Path> it = paths.iterator(); it.hasNext(); ) {","284","      return excludedByScmCount.get();","288","      excludedByPatternsCount.incrementAndGet();"]}]}},"9a62922f872af2d3dbbe514cd9c47137d66acded":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializerTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializer.java":[{"add":["21","import org.sonar.api.platform.Server;","22","import org.sonar.api.platform.ServerStartHandler;","35","public class CeQueueInitializer implements ServerStartHandler {","41","  private boolean done = false;","51","  public void onServerStart(Server server) {","52","    if (!done) {","53","      initCe();","54","      this.done = true;","55","    }","56","  }","57","","58","  private void initCe() {"],"delete":["21","import org.picocontainer.Startable;","34","public class CeQueueInitializer implements Startable {","49","  public void start() {","61","  @Override","62","  public void stop() {","63","    \/\/ nothing to do","64","  }","65",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":[{"add":["715","      \/\/ Compute engine (must be after Views and Developer Cockpit)","716","      CeModule.class,","717","      CeQueueModule.class,","718","      CeTaskProcessorModule.class,","719","      CeWsModule.class,","720","      ReportProcessingModule.class,","721",""],"delete":["707","      \/\/ Compute engine","708","      CeModule.class,","709","      CeQueueModule.class,","710","      CeTaskProcessorModule.class,","711","      CeWsModule.class,","712","      ReportProcessingModule.class,","713",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializerTest.java":[{"add":["28","import org.sonar.api.platform.Server;","36","import org.sonar.server.computation.queue.report.ReportFiles;","42","import static org.mockito.Mockito.reset;","43","import static org.mockito.Mockito.verifyZeroInteractions;","54","  Server server = mock(Server.class);","68","    underTest.onServerStart(server);","75","    underTest.onServerStart(server);","84","    underTest.onServerStart(server);","90","  @Test","91","  public void onServerStart_has_no_effect_if_called_twice_to_support_medium_test_doing_startup_tasks_multiple_times() {","92","","93","    underTest.onServerStart(server);","94","","95","    reset(cleaner, scheduler);","96","","97","    underTest.onServerStart(server);","98","","99","    verifyZeroInteractions(cleaner, scheduler);","100","","101","  }","102",""],"delete":["33","import org.sonar.server.computation.queue.report.ReportFiles;","64","    underTest.start();","71","    underTest.start();","80","    underTest.start();"]}]}},"d4380ccc8fe7783b1b04148c3707e0e93b3bb98e":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/ce\/CeTempDirTest.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category4Suite.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/ce\/CeTempDirTest.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category4Suite.java":[{"add":["27","import org.sonarqube.tests.ce.CeTempDirTest;","103","  CeWsTest.class,","104","  CeTempDirTest.class"],"delete":["102","  CeWsTest.class"]}]}},"5b5488398259fcd6c1db21e5bd26bf005c7731a5":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderRule.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/PersistFileSourcesStepTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolderRule.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolder.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolder.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderRule.java":[{"add":["32","  public TreeRootHolderRule setRoot(Component root) {","33","    return setRoots(root, root);","34","  }","35","","36","  public TreeRootHolderRule setRoots(Component root, Component reportRoot) {","38","    delegate.setRoots(root, reportRoot);","43","  public boolean isEmpty() {","44","    return delegate.isEmpty();","45","  }","46","","47","  @Override"],"delete":["32","  public TreeRootHolderRule setRoot(Component newRoot) {","34","    delegate.setRoot(newRoot);","35","    delegate.setReportTreeRoot(newRoot);","64",""]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":[{"add":["41","  public boolean isEmpty() {","42","    return this.root == null;","43","  }","44","","45","  @Override","46","  public MutableTreeRootHolder setRoots(Component root, Component reportRoot) {","49","    this.extendedTreeRoot = requireNonNull(reportRoot, \"extended tree root can not be null\");"],"delete":["41","  public MutableTreeRootHolder setRoot(Component root) {","54","  public MutableTreeRootHolder setReportTreeRoot(Component root) {","55","    checkState(this.extendedTreeRoot == null, \"extended tree root can not be set twice in holder\");","56","    this.extendedTreeRoot = requireNonNull(root, \"extended tree root can not be null\");","57","    return this;","58","  }","59","","60","  @Override"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/source\/PersistFileSourcesStepTest.java":[{"add":["450","    ReportComponent root = ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(PROJECT_UUID).setKey(PROJECT_KEY).addChildren(","455","      .build();","456","    treeRootHolder.setRoots(root, root);"],"delete":["450","    treeRootHolder.setRoot(ReportComponent.builder(Component.Type.PROJECT, 1).setUuid(PROJECT_UUID).setKey(PROJECT_KEY).addChildren(","455","      .build());"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStep.java":[{"add":["91","        treeRootHolder.setRoots(changedComponentTreeRoot, reportTreeRoot);","93","        treeRootHolder.setRoots(reportTreeRoot, reportTreeRoot);"],"delete":["88","      treeRootHolder.setReportTreeRoot(reportTreeRoot);","92","        treeRootHolder.setRoot(changedComponentTreeRoot);","94","        treeRootHolder.setRoot(reportTreeRoot);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":[{"add":["58","  public void setRoots_throws_NPE_if_root_is_null() {","62","    underTest.setRoots(null, DUMB_PROJECT);","63","  }","64","","65","  @Test","66","  public void setRoots_throws_NPE_if_reportRoot_is_null() {","67","    expectedException.expect(NullPointerException.class);","68","    expectedException.expectMessage(\"root can not be null\");","69","","70","    underTest.setRoots(DUMB_PROJECT, null);","75","    underTest.setRoots(DUMB_PROJECT, DUMB_PROJECT);","80","    underTest.setRoots(null, DUMB_PROJECT);","99","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","108","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","117","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","127","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","134","    underTest.setRoots(SOME_VIEWS_COMPONENT_TREE, DUMB_PROJECT);","143","  public void verify_setRoots_getRoot() {","144","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","145","    assertThat(underTest.getRoot()).isSameAs(SOME_REPORT_COMPONENT_TREE);","146","  }","147","","148","  @Test","149","  public void verify_setRoots_getReportRoot() {","150","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);","151","    assertThat(underTest.getReportTreeRoot()).isSameAs(DUMB_PROJECT);","163","    underTest.setRoots(SOME_REPORT_COMPONENT_TREE, DUMB_PROJECT);"],"delete":["58","  public void setRoot_throws_NPE_if_arg_is_null() {","62","    underTest.setRoot(null);","67","    underTest.setRoot(DUMB_PROJECT);","72","    underTest.setRoot(DUMB_PROJECT);","91","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","100","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","109","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","119","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","126","    underTest.setRoot(SOME_VIEWS_COMPONENT_TREE);","135","  public void verify_setRoot_getRoot() {","136","    underTest.setRoot(DUMB_PROJECT);","137","    assertThat(underTest.getRoot()).isSameAs(DUMB_PROJECT);","149","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolderRule.java":[{"add":["23","  public MutableTreeRootHolderRule setRoots(Component root, Component reportRoot) {","24","    delegate.setRoots(root, reportRoot);"],"delete":["23","  public MutableTreeRootHolderRule setRoot(Component newRoot) {","24","    delegate.setRoot(newRoot);","25","    return this;","26","  }","27","","28","  @Override","29","  public MutableTreeRootHolder setReportTreeRoot(Component newRoot) {","30","    delegate.setReportTreeRoot(newRoot);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/TreeRootHolder.java":[{"add":["28","   * @return true if the holder is empty","29","   *\/","30","  boolean isEmpty();","31","","32","  \/**"],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/MutableTreeRootHolder.java":[{"add":["29","  MutableTreeRootHolder setRoots(Component root, Component reportRoot);"],"delete":["29","  MutableTreeRootHolder setRoot(Component newRoot);","31","  \/**","32","   * Sets the root of the components that were in the scanner report in the TreeRootHolder.","33","   *","34","   * @throws NullPointerException if {@code newRoot} is {@code null}","35","   * @throws IllegalStateException if extended tree root {@link Component} has already been set","36","   *\/","37","  MutableTreeRootHolder setReportTreeRoot(Component newRoot);"]}]}},"d61b51aaa96a8990ddec641ac4f3e37f4ea73947":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profile-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profile-view.js":[{"add":["137","  enhanceParameters(parent) {","145","        return { ...p, original: parentParam.value };","167","      parameters: this.enhanceParameters(parent),"],"delete":["137","  enhanceParameters() {","138","    const parent = this.getParent();","146","        return { ...p, original: parentParam };","168","      parameters: this.enhanceParameters(),"]}]}},"13728b3b2196021e1cc7fa1d4cdec05a204273c6":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/analysis\/AnalysisMetadataHolder.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/analysis\/AnalysisMetadataHolder.java":[{"add":["98","   * Branch being analyzed. Can be of any type: long or short, main or not.","99","   *","100","   * @throws IllegalStateException if branch has not been set","107","   * @throws IllegalStateException if pull request key has not been set"],"delete":["98","   * Branch being analyzed. Can be of any type: long or short, main or not. ","105","   * @throws IllegalStateException if current analysis is not a pull request"]}]}},"ca42beccae145e371dd465cf5db2e34f1469b46c":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ServerUserSessionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ServerUserSession.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ServerUserSessionTest.java":[{"add":["42","import static java.util.Arrays.asList;","451","  public void keepAuthorizedComponents_on_branches() {","452","    user = db.users().insertUser();","453","    db.users().insertProjectPermissionOnUser(user, UserRole.ADMIN, privateProject);","454","    ComponentDto privateBranchProject = db.components().insertProjectBranch(privateProject);","455","    UserSession underTest = newUserSession(user);","456","","457","    assertThat(underTest.keepAuthorizedComponents(UserRole.ADMIN, asList(privateProject, privateBranchProject)))","458","      .containsExactlyInAnyOrder(privateProject, privateBranchProject);","459","  }","460","","461","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ServerUserSession.java":[{"add":["190","        .map(c -> defaultIfEmpty(c.getMainBranchProjectUuid(), c.projectUuid()))","195","        .filter(c -> authorizedProjectUuids.contains(c.projectUuid()) || authorizedProjectUuids.contains(c.getMainBranchProjectUuid()))"],"delete":["190","        .map(ComponentDto::projectUuid)","195","        .filter(c -> authorizedProjectUuids.contains(c.projectUuid()))"]}]}},"5a5a4877386e11a465fc61abfc59bee4759b5861":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/Timeline-test.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/Timeline.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/Timeline-test.js.snap":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/Timeline-test.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/Timeline.js":[{"add":["52","    const domain = [0, max(this.props.history, d => parseFloat(d.value))];"],"delete":["52","","53","    const domain = [0, max(this.props.history, d => d.value)];","54",""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/Timeline-test.js.snap":[{"add":[],"delete":[]}]}},"266070dc7726da6f7fe4491adcd651a0eff34b7a":{"changes":{"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/index.js":"MODIFY","server\/sonar-docs\/src\/templates\/page.tsx":"MODIFY"},"diff":{"server\/sonar-docs\/plugins\/sonarsource-source-filesystem\/index.js":[{"add":["31","  newContent = replaceInstanceTag(newContent);","79","function replaceInstanceTag(content) {","80","  return content.replace(\/{instance}\/gi, 'SonarQube');","81","}","82",""],"delete":[]}],"server\/sonar-docs\/src\/templates\/page.tsx":[{"add":[],"delete":["73","    htmlPageContent = replaceInstanceTag(htmlPageContent);","128","function replaceInstanceTag(content: string) {","129","  return content.replace(\/{instance}\/gi, 'SonarQube');","130","}","131",""]}]}},"0a2f324b94e66acc9183cfd98ede1802667d525f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/controller.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/controller.js":[{"add":["28","  ruleFields: [","29","    'name',","30","    'lang',","31","    'langName',","32","    'sysTags',","33","    'tags',","34","    'status',","35","    'severity',","36","    'isTemplate',","37","    'templateKey'","38","  ],"],"delete":["28","  ruleFields: ['name', 'lang', 'langName', 'sysTags', 'tags', 'status', 'severity', 'isTemplate'],"]}]}},"6cedf507a95545611c31813a427f43291beeadfc":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilder.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/FileSystemMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/AbstractPhaseExecutor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/deprecated\/test\/TestPlanBuilder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/internal\/SensorContextTester.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/coverage\/internal\/DefaultCoverage.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorContext.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ModuleScanContainer.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilderTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/IssuesPhaseExecutor.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/report\/JSONReportTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/PublishPhaseExecutor.java":"MODIFY","\/dev\/null":"DELETE","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/phases\/CoverageExclusionsTest.java":"ADD","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputComponentStore.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/source\/ZeroCoverageSensor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ComponentsPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorageTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/CoverageExclusions.java":"ADD","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilder.java":[{"add":["200","    inputFile.setPublished(publish);"],"delete":["200","    inputFile.setPublish(publish);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/FileSystemMediumTest.java":[{"add":["120","    assertThat(file.isPublished()).isTrue();","377","    assertThat(file.isPublished()).isTrue();","412","    assertThat(unknownInputFile.isPublished()).isFalse();"],"delete":["120","    assertThat(file.publish()).isTrue();","377","    assertThat(file.publish()).isTrue();","412","    assertThat(unknownInputFile.publish()).isFalse();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/AbstractPhaseExecutor.java":[{"add":["23","import org.sonar.api.batch.fs.internal.DefaultInputFile;","26","import org.sonar.api.utils.log.Logger;","27","import org.sonar.api.utils.log.Loggers;","37","  private static final Logger LOG = Loggers.get(AbstractPhaseExecutor.class);","38","","49","  private final CoverageExclusions coverageExclusions;","53","    IssueExclusionsLoader issueExclusionsLoader, FileIndexer fileIndexer, CoverageExclusions coverageExclusions) {","64","    this.coverageExclusions = coverageExclusions;","75","    \/\/ Index the filesystem","84","    \/\/ Initialize coverage exclusions","85","    initCoverageExclusions();","86","","98","  private void initCoverageExclusions() {","99","    if (coverageExclusions.shouldExecute()) {","100","      String stepName = \"Init coverage exclusions\";","101","      eventBus.fireEvent(new BatchStepEvent(stepName, true));","102","      coverageExclusions.log();","103","","104","      for (InputFile inputFile : fs.inputFiles(fs.predicates().all())) {","105","        boolean excluded = coverageExclusions.isExcluded(inputFile);","106","        if (excluded) {","107","          ((DefaultInputFile) inputFile).setExcludedForCoverage(true);","108","          LOG.debug(\"File {} excluded for coverage\", inputFile.relativePath());","109","        }","110","      }","111","","112","      eventBus.fireEvent(new BatchStepEvent(stepName, false));","113","    }","114","","115","  }","116",""],"delete":["47","    IssueExclusionsLoader issueExclusionsLoader, FileIndexer fileIndexer) {","68","    \/\/ Index and lock the filesystem"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/deprecated\/test\/TestPlanBuilder.java":[{"add":["45","        inputFile.setPublished(true);"],"delete":["45","        inputFile.setPublish(true);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/internal\/SensorContextTester.java":[{"add":["354","    file.setPublished(true);"],"delete":["354","    file.setPublish(true);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilder.java":[{"add":["70","      inputFile.setPublished(true);"],"delete":["70","      inputFile.setPublish(true);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/coverage\/internal\/DefaultCoverage.java":[{"add":["26","import org.sonar.api.batch.fs.internal.DefaultInputFile;","77","    if (isExcluded()) {","78","      return this;","79","    }","103","    if (isExcluded()) {","104","      return this;","105","    }","148","    if (!isExcluded()) {","149","      storage.store(this);","150","    }","151","  }","152","","153","  private boolean isExcluded() {","154","    return ((DefaultInputFile) inputFile).isExcludedForCoverage();"],"delete":["141","    storage.store(this);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmPublisher.java":[{"add":["97","      if (!inputFile.isPublished()) {"],"delete":["97","      if (!inputFile.publish()) {"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":[{"add":["205","  \/\/ SONAR-9557","206","  @Test","207","  public void exclusionsAndForceToZeroOnModules() throws IOException {","208","","209","    File baseDir = temp.getRoot();","210","    File srcDir = new File(baseDir, \"module1\/src\");","211","    srcDir.mkdir();","212","","213","    File xooFile1 = new File(srcDir, \"sample1.xoo\");","214","    File measuresFile1 = new File(srcDir, \"sample1.xoo.measures\");","215","    FileUtils.write(xooFile1, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","216","    FileUtils.write(measuresFile1, \"executable_lines_data:2=1;3=1;4=0\");","217","","218","    File xooFile2 = new File(srcDir, \"sample2.xoo\");","219","    File measuresFile2 = new File(srcDir, \"sample2.xoo.measures\");","220","    FileUtils.write(xooFile2, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","221","    FileUtils.write(measuresFile2, \"executable_lines_data:2=1;3=1;4=0\");","222","","223","    TaskResult result = tester.newTask()","224","      .properties(ImmutableMap.<String, String>builder()","225","        .put(\"sonar.task\", \"scan\")","226","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","227","        .put(\"sonar.projectKey\", \"com.foo.project\")","228","        .put(\"sonar.modules\", \"module1\")","229","        .put(\"sonar.sources\", \"src\")","230","        .put(\"sonar.coverage.exclusions\", \"**\/sample2.xoo\")","231","        .build())","232","      .execute();","233","","234","    InputFile file1 = result.inputFile(\"src\/sample1.xoo\");","235","    assertThat(result.coverageFor(file1, 1)).isNull();","236","","237","    assertThat(result.coverageFor(file1, 2).getHits()).isFalse();","238","    assertThat(result.coverageFor(file1, 2).getConditions()).isEqualTo(0);","239","    assertThat(result.coverageFor(file1, 2).getCoveredConditions()).isEqualTo(0);","240","","241","    assertThat(result.coverageFor(file1, 3).getHits()).isFalse();","242","    assertThat(result.coverageFor(file1, 4)).isNull();","243","","244","    InputFile file2 = result.inputFile(\"src\/sample2.xoo\");","245","    assertThat(result.coverageFor(file2, 1)).isNull();","246","    assertThat(result.coverageFor(file2, 2)).isNull();","247","    assertThat(result.coverageFor(file2, 3)).isNull();","248","    assertThat(result.coverageFor(file2, 4)).isNull();","249","","250","    Map<String, List<org.sonar.scanner.protocol.output.ScannerReport.Measure>> allMeasures = result.allMeasures();","251","","252","    assertThat(allMeasures.get(\"com.foo.project:module1:src\/sample1.xoo\")).extracting(\"metricKey\", \"intValue.value\")","253","      .contains(tuple(CoreMetrics.LINES_TO_COVER_KEY, 2),","254","        tuple(CoreMetrics.UNCOVERED_LINES_KEY, 2));","255","","256","    assertThat(allMeasures.get(\"com.foo.project:module1:src\/sample1.xoo\")).extracting(\"metricKey\").doesNotContain(CoreMetrics.CONDITIONS_TO_COVER_KEY,","257","      CoreMetrics.UNCOVERED_CONDITIONS_KEY);","258","","259","    assertThat(allMeasures.get(\"com.foo.project:module1:src\/sample2.xoo\")).extracting(\"metricKey\").doesNotContain(CoreMetrics.LINES_TO_COVER_KEY,","260","      CoreMetrics.CONDITIONS_TO_COVER_KEY,","261","      CoreMetrics.UNCOVERED_CONDITIONS_KEY, CoreMetrics.UNCOVERED_LINES_KEY);","262","  }","263",""],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorContext.java":[{"add":["177","    file.setPublished(true);"],"delete":["177","    file.setPublish(true);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":[{"add":["56","  private boolean published;","57","  private boolean excludedForCoverage;","69","    this.published = false;","70","    this.excludedForCoverage = false;","104","  public DefaultInputFile setPublished(boolean published) {","105","    this.published = published;","109","  public boolean isPublished() {","110","    return published;","111","  }","112","","113","  public DefaultInputFile setExcludedForCoverage(boolean excludedForCoverage) {","114","    this.excludedForCoverage = excludedForCoverage;","115","    return this;","116","  }","117","","118","  public boolean isExcludedForCoverage() {","119","    return excludedForCoverage;"],"delete":["56","  private boolean publish;","68","    this.publish = false;","102","  \/**","103","   * @since 6.3","104","   *\/","105","  public DefaultInputFile setPublish(boolean publish) {","106","    this.publish = publish;","110","  \/**","111","   * @since 6.3","112","   *\/","113","  public boolean publish() {","114","    return publish;"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ModuleScanContainer.java":[{"add":["49","import org.sonar.scanner.phases.CoverageExclusions;"],"delete":["72","import org.sonar.scanner.sensor.coverage.CoverageExclusions;"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilderTest.java":[{"add":["57","    assertThat(file.isPublished()).isTrue();"],"delete":["57","    assertThat(file.publish()).isTrue();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilderTest.java":[{"add":["72","    assertThat(inputFile.isPublished()).isFalse();"],"delete":["72","    assertThat(inputFile.publish()).isFalse();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/IssuesPhaseExecutor.java":[{"add":["44","    IssueExclusionsLoader issueExclusionsLoader, IssueTransition localIssueTracking, InputModuleHierarchy moduleHierarchy, FileIndexer fileIndexer,","45","    CoverageExclusions coverageExclusions) {","46","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, moduleHierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer,","47","      coverageExclusions);"],"delete":["44","    IssueExclusionsLoader issueExclusionsLoader, IssueTransition localIssueTracking, InputModuleHierarchy moduleHierarchy, FileIndexer fileIndexer) {","45","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, moduleHierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/report\/JSONReportTest.java":[{"add":["97","    inputFile.setPublished(true);"],"delete":["97","    inputFile.setPublish(true);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/PublishPhaseExecutor.java":[{"add":["42","    IssueExclusionsLoader issueExclusionsLoader, CpdExecutor cpdExecutor, ScmPublisher scm, InputModuleHierarchy hierarchy, FileIndexer fileIndexer,","43","    CoverageExclusions coverageExclusions) {","44","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, hierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer, coverageExclusions);"],"delete":["42","    IssueExclusionsLoader issueExclusionsLoader, CpdExecutor cpdExecutor, ScmPublisher scm, InputModuleHierarchy hierarchy, FileIndexer fileIndexer) {","43","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, hierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer);"]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/phases\/CoverageExclusionsTest.java":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputComponentStore.java":[{"add":["80","      .filter(DefaultInputFile::isPublished)::iterator;"],"delete":["80","      .filter(DefaultInputFile::publish)::iterator;"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/source\/ZeroCoverageSensor.java":[{"add":["30","import org.sonar.api.batch.fs.internal.DefaultInputFile;","62","  public ZeroCoverageSensor(MeasureCache measureCache) {","76","      if (((DefaultInputFile) f).isExcludedForCoverage()) {"],"delete":["41","import org.sonar.scanner.sensor.coverage.CoverageExclusions;","61","  private final CoverageExclusions coverageExclusions;","63","  public ZeroCoverageSensor(MeasureCache measureCache, CoverageExclusions exclusions) {","65","    this.coverageExclusions = exclusions;","78","      if (coverageExclusions.isExcluded(f)) {"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ComponentsPublisher.java":[{"add":["142","      return !inputFile.isPublished();"],"delete":["142","      return !inputFile.publish();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorageTest.java":[{"add":["80","      moduleIssues, settings.asConfig(), reportPublisher, measureCache,"],"delete":["48","import org.sonar.scanner.sensor.coverage.CoverageExclusions;","52","import static org.mockito.Matchers.any;","79","    CoverageExclusions coverageExclusions = mock(CoverageExclusions.class);","80","    when(coverageExclusions.isExcluded(any(InputFile.class))).thenReturn(false);","84","      moduleIssues, settings.asConfig(), coverageExclusions, reportPublisher, measureCache,"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/CoverageExclusions.java":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":[{"add":["21","import com.google.common.annotations.VisibleForTesting;","22","import java.util.Arrays;","23","import java.util.Collection;","24","import java.util.HashMap;","25","import java.util.HashSet;","26","import java.util.List;","27","import java.util.Map;","28","import java.util.Set;","29","import java.util.TreeMap;","30","import java.util.stream.Collectors;","31","import java.util.stream.Stream;","32","import org.sonar.api.batch.fs.InputComponent;","33","import org.sonar.api.batch.fs.InputFile;","34","import org.sonar.api.batch.fs.TextRange;","35","import org.sonar.api.batch.fs.internal.DefaultInputFile;","36","import org.sonar.api.batch.measure.Metric;","37","import org.sonar.api.batch.measure.MetricFinder;","38","import org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage;","39","import org.sonar.api.batch.sensor.cpd.internal.DefaultCpdTokens;","40","import org.sonar.api.batch.sensor.error.AnalysisError;","41","import org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting;","42","import org.sonar.api.batch.sensor.internal.SensorStorage;","43","import org.sonar.api.batch.sensor.issue.Issue;","44","import org.sonar.api.batch.sensor.measure.Measure;","45","import org.sonar.api.batch.sensor.measure.internal.DefaultMeasure;","46","import org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable;","47","import org.sonar.api.config.Configuration;","48","import org.sonar.api.measures.CoreMetrics;","49","import org.sonar.api.utils.KeyValueFormat;","50","import org.sonar.api.utils.log.Logger;","51","import org.sonar.api.utils.log.Loggers;","52","import org.sonar.core.metric.ScannerMetrics;","53","import org.sonar.duplications.block.Block;","54","import org.sonar.duplications.internal.pmd.PmdBlockChunker;","55","import org.sonar.scanner.cpd.deprecated.DefaultCpdBlockIndexer;","56","import org.sonar.scanner.cpd.index.SonarCpdBlockIndex;","57","import org.sonar.scanner.issue.ModuleIssues;","58","import org.sonar.scanner.protocol.output.FileStructure;","59","import org.sonar.scanner.protocol.output.ScannerReport;","60","import org.sonar.scanner.protocol.output.ScannerReportWriter;","61","import org.sonar.scanner.report.ReportPublisher;","62","import org.sonar.scanner.report.ScannerReportUtils;","63","import org.sonar.scanner.repository.ContextPropertiesCache;","64","import org.sonar.scanner.scan.measure.MeasureCache;","65","","153","  public DefaultSensorStorage(MetricFinder metricFinder, ModuleIssues moduleIssues, Configuration settings,","202","      ((DefaultInputFile) newMeasure.inputComponent()).setPublished(true);","218","      ((DefaultInputFile) component).setPublished(true);","253","      if (((DefaultInputFile) component).isExcludedForCoverage()) {","354","      ((DefaultInputFile) issue.primaryLocation().inputComponent()).setPublished(true);","363","    inputFile.setPublished(true);","388","    inputFile.setPublished(true);","420","    inputFile.setPublished(true);","443","    inputFile.setPublished(true);","456","    ((DefaultInputFile) analysisError.inputFile()).setPublished(true);"],"delete":["68","import java.util.Arrays;","69","import java.util.Collection;","70","import java.util.HashMap;","71","import java.util.HashSet;","72","import java.util.List;","73","import java.util.Map;","74","import java.util.Set;","75","import java.util.TreeMap;","76","import java.util.stream.Collectors;","77","import java.util.stream.Stream;","78","","79","import org.sonar.api.batch.fs.InputComponent;","80","import org.sonar.api.batch.fs.InputFile;","81","import org.sonar.api.batch.fs.TextRange;","82","import org.sonar.api.batch.fs.internal.DefaultInputFile;","83","import org.sonar.api.batch.measure.Metric;","84","import org.sonar.api.batch.measure.MetricFinder;","85","import org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage;","86","import org.sonar.api.batch.sensor.cpd.internal.DefaultCpdTokens;","87","import org.sonar.api.batch.sensor.error.AnalysisError;","88","import org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting;","89","import org.sonar.api.batch.sensor.internal.SensorStorage;","90","import org.sonar.api.batch.sensor.issue.Issue;","91","import org.sonar.api.batch.sensor.measure.Measure;","92","import org.sonar.api.batch.sensor.measure.internal.DefaultMeasure;","93","import org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable;","94","import org.sonar.api.config.Configuration;","95","import org.sonar.api.measures.CoreMetrics;","96","import org.sonar.api.utils.KeyValueFormat;","97","import org.sonar.api.utils.log.Logger;","98","import org.sonar.api.utils.log.Loggers;","99","import org.sonar.core.metric.ScannerMetrics;","100","import org.sonar.duplications.block.Block;","101","import org.sonar.duplications.internal.pmd.PmdBlockChunker;","102","import org.sonar.scanner.cpd.deprecated.DefaultCpdBlockIndexer;","103","import org.sonar.scanner.cpd.index.SonarCpdBlockIndex;","104","import org.sonar.scanner.issue.ModuleIssues;","105","import org.sonar.scanner.protocol.output.FileStructure;","106","import org.sonar.scanner.protocol.output.ScannerReport;","107","import org.sonar.scanner.protocol.output.ScannerReportWriter;","108","import org.sonar.scanner.report.ReportPublisher;","109","import org.sonar.scanner.report.ScannerReportUtils;","110","import org.sonar.scanner.repository.ContextPropertiesCache;","111","import org.sonar.scanner.scan.measure.MeasureCache;","112","import org.sonar.scanner.sensor.coverage.CoverageExclusions;","113","","114","import com.google.common.annotations.VisibleForTesting;","115","","145","  private final CoverageExclusions coverageExclusions;","157","  public DefaultSensorStorage(MetricFinder metricFinder, ModuleIssues moduleIssues, Configuration settings, CoverageExclusions coverageExclusions,","163","    this.coverageExclusions = coverageExclusions;","207","      ((DefaultInputFile) newMeasure.inputComponent()).setPublish(true);","223","      ((DefaultInputFile) component).setPublish(true);","258","      if (coverageExclusions.isExcluded((InputFile) component)) {","359","      ((DefaultInputFile) issue.primaryLocation().inputComponent()).setPublish(true);","368","    inputFile.setPublish(true);","393","    inputFile.setPublish(true);","425","    inputFile.setPublish(true);","426","    if (coverageExclusions.isExcluded(inputFile)) {","427","      return;","428","    }","451","    inputFile.setPublish(true);","464","    ((DefaultInputFile) analysisError.inputFile()).setPublish(true);"]}]}},"d7173668ad32a0f19a59f8b9612112c43852c2aa":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/utils-test.ts":[{"add":["28","    expect(groupLocationsByComponent(mockIssue(), [], {})).toEqual([]);","33","      mockIssue(),","53","      mockIssue(),"],"delete":["28","    expect(groupLocationsByComponent([], {})).toEqual([]);"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":[{"add":["56","        component: issue.component,","60","        component: issue.component,","64","    ...mockSnippetsByComponent(issue.component, [","65","      ...range(2, 17),","66","      ...range(29, 39),","67","      ...range(69, 79)","68","    ])","77","it('should render correctly with flows', () => {","78","  \/\/ issue with flows but no secondary locations","79","  const issue = mockIssue(true, {","80","    secondaryLocations: [],","81","    textRange: { startLine: 7, endLine: 7, startOffset: 5, endOffset: 10 }","82","  });","83","","84","  const snippetGroup: T.SnippetGroup = {","85","    locations: [","86","      mockFlowLocation({","87","        component: issue.component,","88","        textRange: { startLine: 34, endLine: 34, startOffset: 0, endOffset: 0 }","89","      }),","90","      mockFlowLocation({","91","        component: issue.component,","92","        textRange: { startLine: 74, endLine: 74, startOffset: 0, endOffset: 0 }","93","      })","94","    ],","95","    ...mockSnippetsByComponent(issue.component, [","96","      ...range(2, 17),","97","      ...range(29, 39),","98","      ...range(69, 79)","99","    ])","100","  };","101","  const wrapper = shallowRender({ issue, snippetGroup });","102","  expect(wrapper.state('snippets')).toHaveLength(2);","103","  expect(wrapper.state('snippets')[0]).toEqual({ index: 0, start: 29, end: 39 });","104","  expect(wrapper.state('snippets')[1]).toEqual({ index: 1, start: 69, end: 79 });","105","});","106",""],"delete":["56","        component: 'a',","60","        component: 'a',","64","    ...mockSnippetsByComponent('a', [...range(2, 17), ...range(29, 39), ...range(69, 79)])"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetViewer.tsx":[{"add":["90","    const { issue, snippetGroup } = this.props;","91","","93","      locations: snippetGroup.locations,","94","      issue,","95","      addIssueLocation:","96","        issue.secondaryLocations.length > 0 && snippetGroup.component.key === issue.component","359","    const locations =","360","      issue.component === snippetGroup.component.key ? locationsByLine([issue]) : {};","373","    const isFlow = issue.secondaryLocations.length === 0;","374","    const includeIssueLocation = (index: number) =>","375","      isFlow ? last && index === snippets.length - 1 : index === 0;","376","","395","              issuesByLine,","396","              locationsByLine: includeIssueLocation(index) ? locations : {},"],"delete":["91","      locations: this.props.snippetGroup.locations,","92","      issue: this.props.issue,","93","      addIssueLocation: this.props.issue.secondaryLocations.length > 0","356","    const locations = locationsByLine([issue]);","387","              issuesByLine: last ? issuesByLine : {},","388","              locationsByLine: last && index === snippets.length - 1 ? locations : {},"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":[{"add":["33","  duplicationsByLine as getDuplicationsByLine,","101","            duplicationsByLine: getDuplicationsByLine(r.duplications),","225","    const { issue, locations } = this.props;","228","    const locationsByComponent = groupLocationsByComponent(issue, locations, components);","243","              \/\/ eslint-disable-next-line react\/no-array-index-key","244","              key={`${issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}","249","                issue={issue}"],"delete":["33","  duplicationsByLine,","101","            duplicationsByLine: duplicationsByLine(r.duplications),","227","    const locationsByComponent = groupLocationsByComponent(this.props.locations, components);","242","              key={`${this.props.issue.key}-${this.props.selectedFlowIndex || 0}-${i}`}","247","                issue={this.props.issue}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/utils.ts":[{"add":["44","export function getPrimaryLocation(issue: T.Issue): T.FlowLocation {","130","  issue: T.Issue,","138","  const addGroup = (loc: T.FlowLocation) => {","139","    currentGroup = {","140","      ...(components[loc.component] || unknownComponent(loc.component)),","141","      locations: []","142","    };","143","    groups.push(currentGroup);","144","    currentComponent = loc.component;","145","  };","146","","147","  if (","148","    issue.secondaryLocations.length > 0 &&","149","    locations.every(loc => loc.component !== issue.component)","150","  ) {","151","    addGroup(getPrimaryLocation(issue));","152","  }","153","","156","      addGroup(loc);"],"delete":["44","function getPrimaryLocation(issue: T.Issue): T.FlowLocation {","139","      currentGroup = {","140","        ...(components[loc.component] || unknownComponent(loc.component)),","141","        locations: []","142","      };","143","      groups.push(currentGroup);","144","      currentComponent = loc.component;"]}]}},"0d76849de3972733bf0105eda59870cb16560dc5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SelectList\/SelectList.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SelectList\/SelectList.tsx":[{"add":["77","    this.setState({ loading: true, query }, () => {","78","      this.props.onSearch(query, this.getFilter()).then(this.stopLoading, this.stopLoading);","79","    });"],"delete":["77","    this.setState({ loading: true, query });","78","    this.props.onSearch(query, this.getFilter()).then(this.stopLoading, this.stopLoading);"]}]}},"89562bc1246dd24f82e624ed6a319e5f42169980":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/buckets-test.tsx":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.ts":[{"add":["45","  const previous = getComponentChildren(componentKey);","46","  if (previous) {","47","    children = [...previous.children, ...children];","48","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/buckets-test.tsx":[{"add":[],"delete":[]}]}},"c26ae42214c23da0ced318d2a8bb9ce6589c72ff":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/Form-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/Form.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/Form-test.tsx":[{"add":["59","","60","it('should create new domain', () => {","61","  const wrapper = shallow(","62","    <Form","63","      confirmButtonText=\"confirmButtonText\"","64","      domains={['Coverage', 'Issues']}","65","      header=\"header\"","66","      onClose={jest.fn()}","67","      onSubmit={jest.fn()}","68","      types={['INT', 'STRING']}","69","    \/>","70","  );","71","","72","  const optionsBefore = [","73","    { label: 'Coverage', value: 'Coverage' },","74","    { label: 'Issues', value: 'Issues' }","75","  ];","76","  expect(getSelect().prop('options')).toEqual(optionsBefore);","77","","78","  getSelect().prop<Function>('onChange')({ value: 'Another' });","79","  wrapper.update();","80","","81","  expect(getSelect().prop('options')).toEqual([","82","    ...optionsBefore,","83","    { label: 'Another', value: 'Another' }","84","  ]);","85","","86","  function getSelect() {","87","    return wrapper.dive().find('Creatable');","88","  }","89","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/Form.tsx":[{"add":["92","    const domains = [...this.props.domains];","93","    if (this.state.domain) {","94","      domains.push(this.state.domain);","95","    }","96","","153","                  options={domains.map(domain => ({ label: domain, value: domain }))}"],"delete":["148","                  options={this.props.domains.map(domain => ({ label: domain, value: domain }))}"]}]}},"a56e60d168802ff9dc23ffec978bb412fd501f97":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/AddProjectActionTest.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileProjectOperations.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDao.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/AddProjectActionTest.java":[{"add":["105","  @Test","106","  public void change_project_association_when_project_is_linked_on_many_profiles() throws Exception {","107","    setUserAsQualityProfileAdmin();","108","    QualityProfileDto profile1Language1 = newQProfileDto(QProfileName.createFor(LANGUAGE_1, \"profile1\"), \"Profile 1\");","109","    QualityProfileDto profile2Language2 = newQProfileDto(QProfileName.createFor(LANGUAGE_2, \"profile2\"), \"Profile 2\");","110","    QualityProfileDto profile3Language1 = newQProfileDto(QProfileName.createFor(LANGUAGE_1, \"profile3\"), \"Profile 3\");","111","    qualityProfileDbTester.insertQualityProfiles(profile1Language1, profile2Language2, profile3Language1);","112","    qualityProfileDbTester.associateProjectWithQualityProfile(project, profile1Language1, profile2Language2);","113","    session.commit();","114","","115","    executeRequest(project, profile3Language1);","116","","117","    assertProjectIsAssociatedToProfile(project.key(), LANGUAGE_1, profile3Language1.getKey());","118","    assertProjectIsAssociatedToProfile(project.key(), LANGUAGE_2, profile2Language2.getKey());","119","  }","120",""],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":[{"add":["28","import org.sonar.db.DbSession;","30","import org.sonar.db.component.ComponentDbTester;","31","import org.sonar.db.component.ComponentDto;","32","import org.sonar.db.component.ComponentTesting;","39","import static org.sonar.db.qualityprofile.QualityProfileDto.createFor;","48","  DbSession dbSession = dbTester.getSession();","49","","50","  ComponentDbTester componentDb = new ComponentDbTester(dbTester);","51","  QualityProfileDbTester qualityProfileDbTester = new QualityProfileDbTester(dbTester);","52","","53","  QualityProfileDao underTest = dbTester.getDbClient().qualityProfileDao();","56","  public void initNow() {","64","    QualityProfileDto dto = createFor(\"abcde\")","68","    underTest.insert(dto);","70","    dbTester.assertDbUnit(getClass(), \"insert-result.xml\", new String[] {\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","84","    underTest.update(dto);","86","    dbTester.assertDbUnit(getClass(), \"update-result.xml\", new String[] {\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","93","    underTest.delete(1);","102","    List<QualityProfileDto> dtos = underTest.selectAll(dbTester.getSession());","123","    List<QualityProfileDto> dtos = underTest.selectAll();","135","    QualityProfileDto java = underTest.selectDefaultProfile(\"java\");","139","    assertThat(underTest.selectDefaultProfile(\"js\")).isNull();","146","    List<QualityProfileDto> java = underTest.selectDefaultProfiles(dbTester.getSession(), singletonList(\"java\"));","149","    assertThat(underTest.selectDefaultProfiles(dbTester.getSession(), singletonList(\"js\"))).isEmpty();","150","    assertThat(underTest.selectDefaultProfiles(dbTester.getSession(), of(\"java\", \"js\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","151","    assertThat(underTest.selectDefaultProfiles(dbTester.getSession(), of(\"js\", \"java\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","158","    QualityProfileDto dto = underTest.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession());","164","    assertThat(underTest.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession())).isNotNull();","165","    assertThat(underTest.selectByNameAndLanguage(\"Sonar Way\", \"unknown\", dbTester.getSession())).isNull();","172","    List<QualityProfileDto> dtos = underTest.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"java\"), dbTester.getSession());","180","    assertThat(underTest.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"unknown\"), dbTester.getSession())).isEmpty();","181","    assertThat(underTest.selectByNameAndLanguages(\"Sonar Way\", of(\"java\", \"unknown\"), dbTester.getSession())).extracting(\"id\").containsOnly(1);","188","    List<QualityProfileDto> result = underTest.selectByLanguage(\"java\");","198","    QualityProfileDto dto = underTest.selectById(1);","204","    assertThat(underTest.selectById(555)).isNull();","211","    QualityProfileDto dto = underTest.selectParentById(1);","219","    List<QualityProfileDto> dtos = underTest.selectChildren(dbTester.getSession(), \"java_parent\");","240","    assertThat(underTest.selectProjects(\"Sonar Way\", \"java\")).hasSize(2);","247","    assertThat(underTest.countProjects(\"Sonar Way\", \"java\")).isEqualTo(2);","254","    assertThat(underTest.countProjectsByProfileKey()).containsOnly(","263","    QualityProfileDto dto = underTest.selectByProjectAndLanguage(1L, \"java\");","271","    QualityProfileDto dto = underTest.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"java\");","274","    assertThat(underTest.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"unkown\")).isNull();","275","    assertThat(underTest.selectByProjectAndLanguage(dbTester.getSession(), \"unknown\", \"java\")).isNull();","282","    List<QualityProfileDto> dto = underTest.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"java\"));","285","    assertThat(underTest.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"unkown\"))).isEmpty();","286","    assertThat(underTest.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", of(\"java\", \"unkown\"))).extracting(\"id\").containsOnly(1);","287","    assertThat(underTest.selectByProjectAndLanguages(dbTester.getSession(), \"unknown\", singletonList(\"java\"))).isEmpty();","288","  }","289","","290","  @Test","291","  public void update_project_profile_association() {","292","    ComponentDto project = componentDb.insertComponent(ComponentTesting.newProjectDto());","293","    QualityProfileDto profile1Language1 = insertQualityProfileDto(\"profile1\", \"Profile 1\", \"xoo\");","294","    QualityProfileDto profile2Language2 = insertQualityProfileDto(\"profile2\", \"Profile 2\", \"xoo2\");","295","    QualityProfileDto profile3Language1 = insertQualityProfileDto(\"profile3\", \"Profile 3\", \"xoo\");","296","    qualityProfileDbTester.associateProjectWithQualityProfile(project, profile1Language1, profile2Language2);","297","","298","    underTest.updateProjectProfileAssociation(project.uuid(), profile3Language1.getKey(), profile1Language1.getKey(), dbSession);","299","","300","    assertThat(underTest.selectByProjectAndLanguage(dbSession, project.getKey(), \"xoo\").getKey()).isEqualTo(profile3Language1.getKey());","301","    assertThat(underTest.selectByProjectAndLanguage(dbSession, project.getKey(), \"xoo2\").getKey()).isEqualTo(profile2Language2.getKey());","302","  }","303","","304","  private QualityProfileDto insertQualityProfileDto(String key, String name, String language) {","305","    QualityProfileDto dto = QualityProfileDto.createFor(key).setName(name).setLanguage(language);","306","    underTest.insert(dbSession, dto);","307","    return dto;"],"delete":["35","","44","  QualityProfileDao dao = dbTester.getDbClient().qualityProfileDao();","47","  public void createDao() {","55","    QualityProfileDto dto = QualityProfileDto.createFor(\"abcde\")","59","    dao.insert(dto);","61","    dbTester.assertDbUnit(getClass(), \"insert-result.xml\", new String[]{\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","75","    dao.update(dto);","77","    dbTester.assertDbUnit(getClass(), \"update-result.xml\", new String[]{\"created_at\", \"updated_at\", \"rules_updated_at\"}, \"rules_profiles\");","84","    dao.delete(1);","93","    List<QualityProfileDto> dtos = dao.selectAll(dbTester.getSession());","114","    List<QualityProfileDto> dtos = dao.selectAll();","126","    QualityProfileDto java = dao.selectDefaultProfile(\"java\");","130","    assertThat(dao.selectDefaultProfile(\"js\")).isNull();","137","    List<QualityProfileDto> java = dao.selectDefaultProfiles(dbTester.getSession(), singletonList(\"java\"));","140","    assertThat(dao.selectDefaultProfiles(dbTester.getSession(), singletonList(\"js\"))).isEmpty();","141","    assertThat(dao.selectDefaultProfiles(dbTester.getSession(), of(\"java\", \"js\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","142","    assertThat(dao.selectDefaultProfiles(dbTester.getSession(), of(\"js\", \"java\"))).extracting(\"key\").containsOnly(\"java_sonar_way\");","149","    QualityProfileDto dto = dao.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession());","155","    assertThat(dao.selectByNameAndLanguage(\"Sonar Way\", \"java\", dbTester.getSession())).isNotNull();","156","    assertThat(dao.selectByNameAndLanguage(\"Sonar Way\", \"unknown\", dbTester.getSession())).isNull();","163","    List<QualityProfileDto> dtos = dao.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"java\"), dbTester.getSession());","171","    assertThat(dao.selectByNameAndLanguages(\"Sonar Way\", singletonList(\"unknown\"), dbTester.getSession())).isEmpty();","172","    assertThat(dao.selectByNameAndLanguages(\"Sonar Way\", of(\"java\", \"unknown\"), dbTester.getSession())).extracting(\"id\").containsOnly(1);","179","    List<QualityProfileDto> result = dao.selectByLanguage(\"java\");","189","    QualityProfileDto dto = dao.selectById(1);","195","    assertThat(dao.selectById(555)).isNull();","202","    QualityProfileDto dto = dao.selectParentById(1);","210","    List<QualityProfileDto> dtos = dao.selectChildren(dbTester.getSession(), \"java_parent\");","231","    assertThat(dao.selectProjects(\"Sonar Way\", \"java\")).hasSize(2);","238","    assertThat(dao.countProjects(\"Sonar Way\", \"java\")).isEqualTo(2);","245","    assertThat(dao.countProjectsByProfileKey()).containsOnly(","254","    QualityProfileDto dto = dao.selectByProjectAndLanguage(1L, \"java\");","262","    QualityProfileDto dto = dao.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"java\");","265","    assertThat(dao.selectByProjectAndLanguage(dbTester.getSession(), \"org.codehaus.sonar:sonar\", \"unkown\")).isNull();","266","    assertThat(dao.selectByProjectAndLanguage(dbTester.getSession(), \"unknown\", \"java\")).isNull();","273","    List<QualityProfileDto> dto = dao.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"java\"));","276","    assertThat(dao.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", singletonList(\"unkown\"))).isEmpty();","277","    assertThat(dao.selectByProjectAndLanguages(dbTester.getSession(), \"org.codehaus.sonar:sonar\", of(\"java\", \"unkown\"))).extracting(\"id\").containsOnly(1);","278","    assertThat(dao.selectByProjectAndLanguages(dbTester.getSession(), \"unknown\", singletonList(\"java\"))).isEmpty();"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":[{"add":["237","    UPDATE project_qprofiles SET profile_key=#{profileKey} WHERE project_uuid=#{projectUuid} AND profile_key=#{oldProfileKey}"],"delete":["237","    UPDATE project_qprofiles SET profile_key=#{profileKey} WHERE project_uuid=#{projectUuid}"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileProjectOperations.java":[{"add":["69","      db.qualityProfileDao().updateProjectProfileAssociation(projectUuid, profileKey, currentProfile.getKey(), session);"],"delete":["69","      db.qualityProfileDao().updateProjectProfileAssociation(projectUuid, profileKey, session);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDao.java":[{"add":["353","  public void updateProjectProfileAssociation(String projectUuid, String newProfileKey, String oldProfileKey, DbSession session) {","354","    mapper(session).updateProjectProfileAssociation(projectUuid, newProfileKey, oldProfileKey);"],"delete":["353","  public void updateProjectProfileAssociation(String projectUuid, String profileKey, DbSession session) {","354","    mapper(session).updateProjectProfileAssociation(projectUuid, profileKey);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.java":[{"add":["80","  void updateProjectProfileAssociation(@Param(\"projectUuid\") String projectUuid, @Param(\"profileKey\") String profileKey, @Param(\"oldProfileKey\") String oldProfileKey);"],"delete":["80","  void updateProjectProfileAssociation(@Param(\"projectUuid\") String projectUuid, @Param(\"profileKey\") String profileKey);"]}]}},"08d2dc1e42e32e67c0f8d3932c118b2cb3ed4e17":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/store\/appState.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":[{"add":["99","    edition: EditionKey | undefined;"],"delete":["99","    edition: EditionKey;"]}],"server\/sonar-web\/src\/main\/js\/store\/appState.ts":[{"add":["48","  edition: undefined,"],"delete":["19","import { EditionKey } from '..\/apps\/marketplace\/utils';","49","  edition: EditionKey.community,"]}]}},"4c358f8ee89cddc977c8f1d9329c5ae22a0475c9":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/profile-activation-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/workspace-list-item-view.js":"MODIFY","server\/sonar-web\/test\/medium\/coding-rules.spec.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/profile-activation-view.js":[{"add":["114","        that.trigger('profileActivated', severity, params, profileKey);"],"delete":["114","        that.trigger('profileActivated', severity, params);"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/workspace-list-item-view.js":[{"add":["64","      activationView.on('profileActivated', function (severity, params, profile) {","67","          inherit: 'NONE',","68","          params: params,","69","          qProfile: profile"],"delete":["64","      activationView.on('profileActivated', function (severity) {","67","          inherit: 'NONE'"]}],"server\/sonar-web\/test\/medium\/coding-rules.spec.js":[{"add":["922","","923","    bdd.it('should deactivate just activated rule', function () {","924","      return this.remote","925","          .open()","926","          .mockFromString('\/api\/l10n\/index', '{}')","927","          .mockFromFile('\/api\/rules\/app', 'coding-rules-spec\/app.json')","928","          .mockFromFile('\/api\/rules\/search', 'coding-rules-spec\/search-inactive.json',","929","          { data: { activation: 'false' } })","930","          .mockFromFile('\/api\/rules\/search', 'coding-rules-spec\/search.json')","931","          .mockFromString('\/api\/qualityprofiles\/activate_rule', '{}',","932","          {","933","            data: {","934","              profile_key: 'java-default-with-mojo-conventions-49307',","935","              rule_key: 'common-java:FailedUnitTests'","936","            }","937","          })","938","          .mockFromString('\/api\/qualityprofiles\/deactivate_rule', '{}',","939","          {","940","            data: {","941","              profile_key: 'java-default-with-mojo-conventions-49307',","942","              rule_key: 'common-java:FailedUnitTests'","943","            }","944","          })","945","          .startApp('coding-rules')","946","          .checkElementExist('.coding-rule')","947","          .clickElement('[data-property=\"qprofile\"] .js-facet-toggle')","948","          .checkElementExist('.js-facet[data-value=\"java-default-with-mojo-conventions-49307\"]')","949","          .clickElement('.js-facet[data-value=\"java-default-with-mojo-conventions-49307\"]')","950","","951","          .clickElement('.js-facet[data-value=\"java-default-with-mojo-conventions-49307\"] .js-inactive')","952","          .checkElementNotExist('.coding-rule-activation .icon-severity-major')","953","          .checkElementExist('.coding-rules-detail-quality-profile-activate')","954","","955","          .clickElement('.coding-rules-detail-quality-profile-activate')","956","          .checkElementExist('.modal')","957","          .checkElementExist('#coding-rules-quality-profile-activation-select')","958","          .checkElementCount('#coding-rules-quality-profile-activation-select option', 1)","959","          .checkElementExist('#coding-rules-quality-profile-activation-severity')","960","          .clickElement('#coding-rules-quality-profile-activation-activate')","961","          .checkElementExist('.coding-rule-activation .icon-severity-major')","962","          .checkElementExist('.coding-rule-activation .icon-severity-major')","963","          .checkElementNotExist('.coding-rules-detail-quality-profile-activate')","964","          .checkElementExist('.coding-rules-detail-quality-profile-deactivate')","965","","966","          .clickElement('.coding-rules-detail-quality-profile-deactivate')","967","          .clickElement('[data-confirm=\"yes\"]')","968","          .checkElementNotExist('.coding-rule-activation .icon-severity-major')","969","          .checkElementNotExist('.coding-rule-activation .icon-severity-major')","970","          .checkElementExist('.coding-rules-detail-quality-profile-activate')","971","          .checkElementNotExist('.coding-rules-detail-quality-profile-deactivate');","972","    });"],"delete":[]}]}},"f5b953bccffd20a4d65b61d13f5f86e5ccbd5072":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/component_issues\/index.html.erb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/component_issues\/index.html.erb":[{"add":["8","    resource: '<%= escape_javascript @resource.uuid -%>',","9","    resourceQualifier: '<%= escape_javascript @resource.qualifier -%>',","10","    resourceName: '<%= escape_javascript @resource.name -%>',","11","    periodDate: <% if @period %>'<%= escape_javascript @snapshot.period_datetime(@period) -%>'<% else %>null<% end %>"],"delete":["8","    resource: '<%= @resource.uuid -%>',","9","    resourceQualifier: '<%= @resource.qualifier -%>',","10","    resourceName: '<%= @resource.name -%>',","11","    periodDate: <% if @period %>'<%= @snapshot.period_datetime(@period) -%>'<% else %>null<% end %>"]}]}},"3e9c3f32a1cddd69533815255e0b66f9325a4352":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/JwtHttpHandlerTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/JwtHttpHandlerTest.java":[{"add":["36","import org.sonar.api.config.Settings;","155","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got 0\");","165","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got -10\");","175","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must not be greater than 3 months (129600 minutes). Got 172800 minutes\");"],"delete":["35","import org.sonar.api.config.Settings;","155","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got 0.\");","165","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got -10.\");","175","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must not be greater than 129600. Got 172800.\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":[{"add":["182","      checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s\", SESSION_TIMEOUT_IN_MINUTES_PROPERTY, minutes);","186","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES, \"Property %s must not be greater than 3 months (%s minutes). Got %s minutes\","],"delete":["182","      checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s.\", SESSION_TIMEOUT_IN_MINUTES_PROPERTY, minutes);","186","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES, \"Property %s must not be greater than %s. Got %s.\","]}]}},"5d3d62b840255f41ecb079271f6c3df3187da468":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/measures\/app.js":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["569","# MEASURES & MEASURE FILTERS","572","measures.select_components=Please select \"Components\", \"Components of\" or \"Favorites only\" filter to see results."],"delete":["569","# MEASURE FILTERS"]}],"server\/sonar-web\/src\/main\/js\/apps\/measures\/app.js":[{"add":["84","const showAlert = text => {","85","  const alert = document.createElement('div');","86","  alert.classList.add('alert', 'alert-warning');","87","  alert.textContent = text;","88","","89","  const container = document.querySelector('.navigator-details');","90","  container.insertBefore(alert, container.firstChild);","91","};","92","","180","","181","  if (window.queryParams) {","182","    const qualifiersFilter = window.queryParams.find(p => p.key === 'qualifiers[]');","183","    const noQualifiers = !qualifiersFilter || !qualifiersFilter.value || !qualifiersFilter.value.length;","184","","185","    const baseFilter = window.queryParams.find(p => p.key === 'base');","186","    const noBase = !baseFilter || !baseFilter.value || !baseFilter.value.length;","187","","188","    const favoritesFilter = window.queryParams.find(p => p.key === 'onFavourites');","189","    const noFavorites = !favoritesFilter || !favoritesFilter.value;","190","","191","    if (noQualifiers && noBase && noFavorites) {","192","      showAlert(translate('measures.select_components'));","193","    }","194","  }"],"delete":[]}]}},"ac411892a8fd09a4a422218efafb6f9f233a7f90":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateModule.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGates.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionActionTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGatesTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGateModuleTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsSupport.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateModule.java":[{"add":["33","import org.sonar.server.qualitygate.ws.QualityGatesWsSupport;","52","      QualityGatesWsSupport.class,"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGates.java":[{"add":[],"delete":["172","  public void deleteCondition(Long condId) {","173","    checkIsSystemAdministrator();","174","    try (DbSession dbSession = dbClient.openSession(false)) {","175","      conditionDao.delete(getNonNullCondition(dbSession, condId), dbSession);","176","      dbSession.commit();","177","    }","178","  }","179","","222","  private QualityGateConditionDto getNonNullCondition(DbSession dbSession, long id) {","223","    QualityGateConditionDto condition = conditionDao.selectById(id, dbSession);","224","    if (condition == null) {","225","      throw new NotFoundException(\"There is no condition with id=\" + id);","226","    }","227","    return condition;","228","  }","229",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionAction.java":[{"add":["24","import org.sonar.db.DbClient;","25","import org.sonar.db.DbSession;","26","import org.sonar.db.organization.OrganizationDto;","27","import org.sonar.server.user.UserSession;","28","","29","import static org.sonar.db.permission.OrganizationPermission.ADMINISTER_QUALITY_GATES;","30","import static org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters.PARAM_ID;","34","  private final DbClient dbClient;","35","  private final UserSession userSession;","36","  private final QualityGatesWsSupport wsSupport;","38","  public DeleteConditionAction(UserSession userSession, DbClient dbClient, QualityGatesWsSupport wsSupport) {","39","    this.userSession = userSession;","40","    this.dbClient = dbClient;","41","    this.wsSupport = wsSupport;","47","      .setDescription(\"Delete a condition from a quality gate.<br>\" +","48","        \"Requires the 'Administer Quality Gates' permission\")","54","      .createParam(PARAM_ID)","62","    long conditionId = request.mandatoryParamAsLong(PARAM_ID);","63","    try (DbSession dbSession = dbClient.openSession(false)) {","64","      OrganizationDto organization = wsSupport.getOrganization(dbSession);","65","      userSession.checkPermission(ADMINISTER_QUALITY_GATES, organization);","66","      dbClient.gateConditionDao().delete(wsSupport.getCondition(dbSession, conditionId), dbSession);","67","      dbSession.commit();","68","      response.noContent();","69","    }"],"delete":["24","import org.sonar.server.qualitygate.QualityGates;","25","import org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters;","29","  private final QualityGates qualityGates;","31","  public DeleteConditionAction(QualityGates qualityGates) {","32","    this.qualityGates = qualityGates;","38","      .setDescription(\"Delete a condition from a quality gate. Require Administer Quality Gates permission\")","44","      .createParam(QualityGatesWsParameters.PARAM_ID)","52","    qualityGates.deleteCondition(QualityGatesWs.parseId(request, QualityGatesWsParameters.PARAM_ID));","53","    response.noContent();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionActionTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGatesTest.java":[{"add":[],"delete":["287","  public void should_delete_condition() {","288","    long idToDelete = QUALITY_GATE_ID;","289","    QualityGateConditionDto toDelete = new QualityGateConditionDto().setId(idToDelete);","290","    when(conditionDao.selectById(idToDelete, dbSession)).thenReturn(toDelete);","291","    underTest.deleteCondition(idToDelete);","292","    verify(conditionDao).selectById(idToDelete, dbSession);","293","    verify(conditionDao).delete(toDelete, dbSession);","294","  }","295","","296","  @Test(expected = NotFoundException.class)","297","  public void should_fail_delete_condition() {","298","    underTest.deleteCondition(QUALITY_GATE_ID);","299","  }","300","","301","  @Test"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/QualityGateModuleTest.java":[{"add":["31","    assertThat(container.size()).isEqualTo(24 + 2);"],"delete":["31","    assertThat(container.size()).isEqualTo(23 + 2);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsTest.java":[{"add":["80","      new DeleteConditionAction(null, null, null),"],"delete":["80","      new DeleteConditionAction(qGates),","184","    Action deleteCondition = controller.action(\"delete_condition\");","185","    assertThat(deleteCondition).isNotNull();","186","    assertThat(deleteCondition.handler()).isNotNull();","187","    assertThat(deleteCondition.since()).isEqualTo(\"4.3\");","188","    assertThat(deleteCondition.isPost()).isTrue();","189","    assertThat(deleteCondition.param(\"id\")).isNotNull();","190","    assertThat(deleteCondition.isInternal()).isFalse();","191","","316","  public void delete_condition_nominal() throws Exception {","317","    long condId = 12345L;","318","    tester.newPostRequest(\"api\/qualitygates\", \"delete_condition\")","319","      .setParam(\"id\", Long.toString(condId))","320","      .execute()","321","      .assertNoContent();","322","  }","323","","324","  @Test"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/QualityGatesWsSupport.java":[{"add":[],"delete":[]}]}},"38218bf026f2ca74dbdddb30ddc85d6d9e2f2502":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactoryTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactory.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolder.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderRule.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImpl.java":[{"add":["23","import java.util.Optional;","54","    return getOptionalComponentByRef(ref)","55","      .orElseThrow(() -> new IllegalArgumentException(String.format(\"Component with ref '%s' can't be found\", ref)));","56","  }","57","","58","  @Override","59","  public Optional<Component> getOptionalComponentByRef(int ref) {","62","    return Optional.ofNullable(componentsByRef.get(ref));"],"delete":["25","import static com.google.common.base.Preconditions.checkArgument;","56","    Component component = componentsByRef.get(ref);","57","    checkArgument(component != null, \"Component with ref '%s' can't be found\", ref);","58","    return component;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactoryTest.java":[{"add":["32","import org.sonar.db.protobuf.DbIssues;","58","  private static final String FILE_UUID = \"fake_uuid\";","59","  private static final String ANOTHER_FILE_UUID = \"another_fake_uuid\";","61","  private static int NOT_IN_REPORT_FILE_REF = 3;","62","  private static int ANOTHER_FILE_REF = 4;","64","  private static ReportComponent FILE = ReportComponent.builder(Component.Type.FILE, FILE_REF).setUuid(FILE_UUID).build();","65","  private static ReportComponent ANOTHER_FILE = ReportComponent.builder(Component.Type.FILE, ANOTHER_FILE_REF).setUuid(ANOTHER_FILE_UUID).build();","66","  private static ReportComponent PROJECT = ReportComponent.builder(Component.Type.PROJECT, 1).addChildren(FILE, ANOTHER_FILE).build();","141","  \/\/ SONAR-10781","142","  @Test","143","  public void load_issues_from_report_missing_secondary_location_component() {","144","    RuleKey ruleKey = RuleKey.of(\"java\", \"S001\");","145","    markRuleAsActive(ruleKey);","146","    when(issueFilter.accept(any(), eq(FILE))).thenReturn(true);","147","","148","    when(sourceLinesHash.getLineHashesMatchingDBVersion(FILE)).thenReturn(Collections.singletonList(\"line\"));","149","    ScannerReport.Issue reportIssue = ScannerReport.Issue.newBuilder()","150","      .setTextRange(TextRange.newBuilder().setStartLine(2).build())","151","      .setMsg(\"the message\")","152","      .setRuleRepository(ruleKey.repository())","153","      .setRuleKey(ruleKey.rule())","154","      .setSeverity(Constants.Severity.BLOCKER)","155","      .setGap(3.14)","156","      .addFlow(ScannerReport.Flow.newBuilder()","157","        .addLocation(ScannerReport.IssueLocation.newBuilder()","158","          .setComponentRef(FILE_REF)","159","          .setMsg(\"Secondary location in same file\")","160","          .setTextRange(TextRange.newBuilder().setStartLine(2).build()))","161","        .addLocation(ScannerReport.IssueLocation.newBuilder()","162","          .setComponentRef(NOT_IN_REPORT_FILE_REF)","163","          .setMsg(\"Secondary location in a missing file\")","164","          .setTextRange(TextRange.newBuilder().setStartLine(3).build()))","165","        .addLocation(ScannerReport.IssueLocation.newBuilder()","166","          .setComponentRef(ANOTHER_FILE_REF)","167","          .setMsg(\"Secondary location in another file\")","168","          .setTextRange(TextRange.newBuilder().setStartLine(3).build()))","169","        .build())","170","      .build();","171","    reportReader.putIssues(FILE.getReportAttributes().getRef(), singletonList(reportIssue));","172","    Input<DefaultIssue> input = underTest.create(FILE);","173","","174","    Collection<DefaultIssue> issues = input.getIssues();","175","    assertThat(issues).hasSize(1);","176","    DefaultIssue issue = Iterators.getOnlyElement(issues.iterator());","177","","178","    DbIssues.Locations locations = issue.getLocations();","179","    \/\/ fields set by analysis report","180","    assertThat(locations.getFlowList()).hasSize(1);","181","    assertThat(locations.getFlow(0).getLocationList()).hasSize(2);","182","    \/\/ Not component id if location is in the same file","183","    assertThat(locations.getFlow(0).getLocation(0).getComponentId()).isEmpty();","184","    assertThat(locations.getFlow(0).getLocation(1).getComponentId()).isEqualTo(ANOTHER_FILE_UUID);","185","  }","186",""],"delete":["59","  private static ReportComponent PROJECT = ReportComponent.builder(Component.Type.PROJECT, 1).build();","60","  private static ReportComponent FILE = ReportComponent.builder(Component.Type.FILE, FILE_REF).build();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderImplTest.java":[{"add":["102","  public void getOptionalComponentByRef_returns_any_report_component_in_the_tree() {","103","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","104","","105","    for (int i = 1; i <= 4; i++) {","106","      assertThat(underTest.getOptionalComponentByRef(i).get().getReportAttributes().getRef()).isEqualTo(i);","107","    }","108","  }","109","","110","  @Test","121","  public void getOptionalComponentByRef_returns_empty_if_holder_does_not_contain_specified_component() {","122","    underTest.setRoot(SOME_REPORT_COMPONENT_TREE);","123","","124","    assertThat(underTest.getOptionalComponentByRef(6)).isEmpty();","125","  }","126","","127","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/TrackerRawInputFactory.java":[{"add":["24","import java.util.Optional;","172","            convertLocation(location).ifPresent(dbFlowBuilder::addLocation);","209","            convertLocation(location).ifPresent(dbFlowBuilder::addLocation);","254","    private Optional<DbIssues.Location> convertLocation(ScannerReport.IssueLocation source) {","257","        \/\/ SONAR-10781 Component might not exist because on short living branch and PR, only changed components are included in the report","258","        Optional<Component> optionalComponent = treeRootHolder.getOptionalComponentByRef(source.getComponentRef());","259","        if (!optionalComponent.isPresent()) {","260","          return Optional.empty();","261","        }","262","        target.setComponentId(optionalComponent.get().getUuid());","272","      return Optional.of(target.build());"],"delete":["171","            dbFlowBuilder.addLocation(convertLocation(location));","208","            dbFlowBuilder.addLocation(convertLocation(location));","253","    private DbIssues.Location convertLocation(ScannerReport.IssueLocation source) {","256","        target.setComponentId(treeRootHolder.getComponentByRef(source.getComponentRef()).getUuid());","266","      return target.build();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolder.java":[{"add":["21","import java.util.Optional;","22","","43","","44","  \/**","45","   * Return a component by its batch reference. Returns {@link Optional#empty()} if there's","46","   * no {@link Component} with the specified reference","47","   *","48","   * @throws IllegalStateException if the holder is empty (ie. there is no root yet)","49","   * @deprecated This method was introduced as a quick fix for SONAR-10781. Ultimately one should never manipulate component","50","   * ref that doesn't exists in the scanner report","51","   *\/","52","  @Deprecated","53","  Optional<Component> getOptionalComponentByRef(int ref);","54",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/TreeRootHolderRule.java":[{"add":["21","import java.util.Optional;","47","","48","  @Override","49","  public Optional<Component> getOptionalComponentByRef(int ref) {","50","    return delegate.getOptionalComponentByRef(ref);","51","  }"],"delete":[]}]}},"9d783bdcacbca512660880509fb092a181a54cf4":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/LeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/LeakPeriodLegend.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/LeakPeriodLegend-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/LeakPeriodLegend.js":[{"add":["21","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","25","export default function LeakPeriodLegend({ period }) {","26","  const label = (","27","    <div className=\"measures-domains-leak-header\">","28","      {translateWithParameters('overview.leak_period_x', getPeriodLabel(period))}","29","    <\/div>","30","  );","31","","32","  if (period.mode === 'days') {","33","    return label;","34","  }","35","","39","  return <Tooltip placement=\"bottom\" overlay={tooltip}>{label}<\/Tooltip>;","40","}"],"delete":["21","import { TooltipsContainer } from '..\/..\/..\/components\/mixins\/tooltips-mixin';","25","const LeakPeriodLegend = ({ period }) => {","27","  const label = getPeriodLabel(period);","30","","31","  return (","32","    <TooltipsContainer>","33","      <div className=\"measures-domains-leak-header\">","34","        <div title={tooltip} data-toggle=\"tooltip\">","35","          {translateWithParameters('overview.leak_period_x', label)}","36","        <\/div>","37","      <\/div>","38","    <\/TooltipsContainer>","39","  );","40","};","41","","42","export default LeakPeriodLegend;"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/LeakPeriodLegend.js":[{"add":["22","import Tooltip from '..\/..\/..\/components\/controls\/Tooltip';","61","export default function LeakPeriodLegend({ period }: { period: Period }) {","64","  if (period.mode === 'days') {","65","    return (","66","      <div className=\"overview-legend overview-legend-spaced-line\">","67","        {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}","68","      <\/div>","69","    );","70","  }","71","","72","  const leakPeriodDate = getPeriodDate(period);","75","  const note = ['date'].includes(period.mode)","78","  const tooltip = ['date'].includes(period.mode)","83","    <Tooltip overlay={tooltip} placement=\"bottom\">","84","      <div className=\"overview-legend\">","85","        {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}","86","        <br \/>","87","        <span className=\"note\">{note}<\/span>","88","      <\/div>","89","    <\/Tooltip>"],"delete":["60","export default function LeakPeriodLegend(props: { period: Period }) {","61","  const { period } = props;","63","  const leakPeriodDate = getPeriodDate(period);","67","  const note = ['date', 'days'].includes(period.mode)","70","  const tooltip = ['date', 'days'].includes(period.mode)","75","    <div className=\"overview-legend\" title={tooltip} data-toggle=\"tooltip\">","76","      {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}","77","      <br \/>","78","      <span className=\"note\">{note}<\/span>","79","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/LeakPeriodLegend-test.js":[{"add":["30","    expect(shallow(<LeakPeriodLegend period={period} \/>)).toMatchSnapshot();"],"delete":["30","    expect(shallow(<LeakPeriodLegend period={period} \/>).find('.note')).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":[{"add":["368",".overview-legend-spaced-line {","369","  padding: 14px 0 10px;","370","}","371",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/LeakPeriodLegend-test.js.snap":[{"add":["3","<div","4","  className=\"overview-legend overview-legend-spaced-line\"","6","  overview.leak_period_x.overview.period.days.10","7","<\/div>"],"delete":["3","<span","4","  className=\"note\"","6","  overview.last_analysis_x.4 years ago","7","<\/span>"]}]}},"62c010110229b99c4125a961453deadbd45d6814":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ScannerSettingsTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesDao.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ws\/ScannerSettings.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ws\/ValuesAction.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesMapper.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ScannerSettingsTest.java":[{"add":["21","import org.junit.Rule;","25","import org.sonar.api.utils.System2;","26","import org.sonar.db.DbTester;","31","import static org.sonar.db.property.PropertyTesting.newGlobalPropertyDto;","35","  @Rule","36","  public DbTester db = DbTester.create(System2.INSTANCE);","38","  private PropertyDefinitions definitions = new PropertyDefinitions();","39","","40","  private ScannerSettings underTest = new ScannerSettings(db.getDbClient(), definitions);","48","    assertThat(underTest.getScannerSettingKeys(db.getSession())).contains(\"myplugin.license.secured\");","53","    db.properties().insertProperty(newGlobalPropertyDto(\"sonar.myplugin.licenseHash.secured\", \"hash\"));","55","    assertThat(underTest.getScannerSettingKeys(db.getSession())).contains(\"sonar.myplugin.licenseHash.secured\");","64","    assertThat(underTest.getScannerSettingKeys(db.getSession())).contains(\"sonar.server_id\", \"sonar.core.id\", \"sonar.core.startTime\");"],"delete":["24","import org.sonar.core.platform.PluginInfo;","25","import org.sonar.core.platform.PluginRepository;","28","import static java.util.Collections.singletonList;","30","import static org.mockito.Mockito.mock;","31","import static org.mockito.Mockito.when;","36","  private PropertyDefinitions definitions = new PropertyDefinitions();","37","  private PluginRepository repository = mock(PluginRepository.class);","39","  private ScannerSettings underTest = new ScannerSettings(definitions, repository);","46","    underTest.start();","48","    assertThat(underTest.getScannerSettingKeys()).contains(\"myplugin.license.secured\");","53","    PluginInfo pluginInfo = mock(PluginInfo.class);","54","    when(pluginInfo.getKey()).thenReturn(\"myplugin\");","55","    when(repository.getPluginInfos()).thenReturn(singletonList(pluginInfo));","56","    underTest.start();","58","    assertThat(underTest.getScannerSettingKeys()).contains(\"sonar.myplugin.licenseHash.secured\");","66","    underTest.start();","68","    assertThat(underTest.getScannerSettingKeys()).contains(\"sonar.server_id\", \"sonar.core.id\", \"sonar.core.startTime\");"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesDao.java":[{"add":["38","import org.sonar.db.WildcardPosition;","41","import static org.sonar.db.DatabaseUtils.buildLikeValue;","174","  public List<PropertyDto> selectGlobalPropertiesByKeyQuery(DbSession session, String keyQuery) {","175","    return getMapper(session).selectGlobalPropertiesByKeyQuery(buildLikeValue(keyQuery, WildcardPosition.BEFORE_AND_AFTER));","176","  }","177",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ws\/ScannerSettings.java":[{"add":["26","import org.sonar.db.DbClient;","27","import org.sonar.db.DbSession;","28","import org.sonar.db.property.PropertyDto;","41","public class ScannerSettings {","45","  private final DbClient dbClient;","48","  public ScannerSettings(DbClient dbClient, PropertyDefinitions propertyDefinitions) {","49","    this.dbClient = dbClient;","53","  Set<String> getScannerSettingKeys(DbSession dbSession) {","54","    return concat(concat(loadLicenseKeys(), loadLicenseHashKeys(dbSession)),","58","  private Stream<String> loadLicenseHashKeys(DbSession dbSession) {","59","    return dbClient.propertiesDao().selectGlobalPropertiesByKeyQuery(dbSession, LICENSE_HASH_SUFFIX).stream().map(PropertyDto::getKey);"],"delete":["24","import org.sonar.api.Startable;","27","import org.sonar.core.platform.PluginInfo;","28","import org.sonar.core.platform.PluginRepository;","41","public class ScannerSettings implements Startable {","43","  private static final String SONAR_PREFIX = \"sonar.\";","47","  private final PluginRepository pluginRepository;","49","  private Set<String> scannerSettingKeys;","50","","51","  public ScannerSettings(PropertyDefinitions propertyDefinitions, PluginRepository pluginRepository) {","53","    this.pluginRepository = pluginRepository;","56","  @Override","57","  public void start() {","58","    this.scannerSettingKeys = concat(concat(loadLicenseKeys(), loadLicenseHashKeys()),","62","  private Stream<String> loadLicenseHashKeys() {","63","    return pluginRepository.getPluginInfos().stream()","64","      .map(PluginInfo::getKey)","65","      .map(key -> SONAR_PREFIX + key + LICENSE_HASH_SUFFIX);","75","  Set<String> getScannerSettingKeys() {","76","    return scannerSettingKeys;","77","  }","78","","79","  @Override","80","  public void stop() {","81","    \/\/ nothing to do","82","  }"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":[{"add":["90","  private ScannerSettings scannerSettings = new ScannerSettings(db.getDbClient(), definitions);"],"delete":["36","import org.sonar.core.platform.PluginInfo;","37","import org.sonar.core.platform.PluginRepository;","57","import static java.util.Collections.singletonList;","60","import static org.mockito.Mockito.mock;","61","import static org.mockito.Mockito.when;","95","  private PluginRepository repository = mock(PluginRepository.class);","96","  private ScannerSettings scannerSettings = new ScannerSettings(definitions, repository);","106","    PluginInfo pluginInfo = mock(PluginInfo.class);","107","    when(pluginInfo.getKey()).thenReturn(\"plugin\");","108","    when(repository.getPluginInfos()).thenReturn(singletonList(pluginInfo));","109","    scannerSettings.start();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ws\/ValuesAction.java":[{"add":["71","    SettingsWsSupport settingsWsSupport, ScannerSettings scannerSettings) {","115","      Set<String> keys = loadKeys(dbSession, valuesRequest);","131","  private Set<String> loadKeys(DbSession dbSession, ValuesRequest valuesRequest) {","133","    if (keys.isEmpty()) {","134","      return concat(propertyDefinitions.getAll().stream().map(PropertyDefinition::key), scannerSettings.getScannerSettingKeys(dbSession).stream()).collect(Collectors.toSet());","136","    return new HashSet<>(keys);"],"delete":["71","                      SettingsWsSupport settingsWsSupport, ScannerSettings scannerSettings) {","115","      Set<String> keys = loadKeys(valuesRequest);","131","  private Set<String> loadKeys(ValuesRequest valuesRequest) {","133","    if (!keys.isEmpty()) {","134","      return new HashSet<>(keys);","136","    return concat(propertyDefinitions.getAll().stream().map(PropertyDefinition::key), scannerSettings.getScannerSettingKeys().stream()).collect(Collectors.toSet());"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesMapper.java":[{"add":["48","  List<PropertyDto> selectGlobalPropertiesByKeyQuery(@Param(\"textQuery\") String textQuery);","49",""],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":[{"add":["446","        tuple(anotherKey, project2.getId()));","486","  public void select_global_properties_by_key_query() throws SQLException {","487","    \/\/ global","488","    insertProperty(\"sonar.plugin1.licenseHash.secured\", \"one\", null, null);","489","    insertProperty(\"sonar.plugin2.licenseHash.secured\", \"two\", null, null);","490","    \/\/ on component and user","491","    insertProperty(\"sonar.plugin1.licenseHash.secure\", \"one\", 10L, null);","492","    insertProperty(\"sonar.plugin1.licenseHash.secure\", \"two\", 10L, 100L);","493","","494","    assertThat(underTest.selectGlobalPropertiesByKeyQuery(dbTester.getSession(), \".licenseHash.secured\")).extracting(PropertyDto::getKey, PropertyDto::getValue)","495","      .containsOnly(tuple(\"sonar.plugin1.licenseHash.secured\", \"one\"), tuple(\"sonar.plugin2.licenseHash.secured\", \"two\"));","496","    assertThat(underTest.selectGlobalPropertiesByKeyQuery(dbTester.getSession(), \"plugin1.licenseHash.secured\")).extracting(PropertyDto::getKey, PropertyDto::getValue)","497","      .containsOnly(tuple(\"sonar.plugin1.licenseHash.secured\", \"one\"));","498","    assertThat(underTest.selectGlobalPropertiesByKeyQuery(dbTester.getSession(), \"plugin1\")).extracting(PropertyDto::getKey, PropertyDto::getValue)","499","      .containsOnly(tuple(\"sonar.plugin1.licenseHash.secured\", \"one\"));","500","    assertThat(underTest.selectGlobalPropertiesByKeyQuery(dbTester.getSession(), \"unknown\")).isEmpty();","501","  }","502","","503","  @Test"],"delete":["446","        tuple(anotherKey, project2.getId())","447","      );"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":[{"add":["183","  <select id=\"selectGlobalPropertiesByKeyQuery\" resultType=\"ScrapProperty\">","184","    select","185","    <include refid=\"columnsToScrapPropertyDto\"\/>","186","    from","187","    properties p","188","    where","189","    p.resource_id is null","190","    and p.user_id is null","191","    and p.prop_key like #{textQuery,jdbcType=VARCHAR}","192","  <\/select>","193",""],"delete":[]}]}},"c345192e089434be630c4b52579388a6e517c9b9":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/TreeAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponentTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ShowAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponent.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/tree-example.json":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/TreeAction.java":[{"add":["31","import java.util.Optional;","60","import static java.util.Optional.ofNullable;","245","      Optional<ProjectDto> parentProject = dbClient.projectDao().selectByUuid(dbSession,","246","        ofNullable(component.getMainBranchProjectUuid()).orElse(component.projectUuid()));","247","      wsComponent = componentDtoToWsComponent(component, parentProject.orElse(null), organizationDto, null);"],"delete":["243","      wsComponent = componentDtoToWsComponent(component, organizationDto, null);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponentTest.java":[{"add":["24","import org.sonar.db.component.BranchType;","29","import org.sonar.db.project.ProjectDto;","32","import static org.sonar.server.component.ws.ComponentDtoToWsComponent.projectOrAppToWsComponent;","42","","43","    ProjectDto parentProjectDto = ComponentTesting.createPrivateProjectDto(organizationDto1);","44","    ComponentDto componentDto = ComponentTesting.newBranchComponent(parentProjectDto,","45","      ComponentTesting.newBranchDto(parentProjectDto.getUuid(), BranchType.BRANCH));","51","    componentDtoToWsComponent(componentDto, parentProjectDto, organizationDto2, null);","52","  }","53","","54","  @Test","55","  public void projectOrAppToWsComponent_throws_IAE_if_organization_uuid_of_component_does_not_match_organizationDto_uuid() {","56","    OrganizationDto organizationDto1 = OrganizationTesting.newOrganizationDto();","57","    OrganizationDto organizationDto2 = OrganizationTesting.newOrganizationDto();","58","    ProjectDto projectDto = ComponentTesting.createPrivateProjectDto(organizationDto1);","59","","60","    expectedException.expect(IllegalArgumentException.class);","61","    expectedException.expectMessage(\"OrganizationUuid (\" + organizationDto1.getUuid() + \") of ComponentDto to convert \" +","62","      \"to Ws Component is not the same as the one (\" + organizationDto2.getUuid() + \") of the specified OrganizationDto\");","63","","64","    projectOrAppToWsComponent(projectDto, organizationDto2, null);"],"delete":["21","import java.util.Optional;","40","    ComponentDto componentDto = ComponentTesting.newPrivateProjectDto(organizationDto1);","46","    componentDtoToWsComponent(componentDto, organizationDto2, null);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ShowAction.java":[{"add":["44","import static java.util.Optional.ofNullable;","150","      Optional<ProjectDto> parentProject = dbClient.projectDao().selectByUuid(dbSession,","151","        ofNullable(component.getMainBranchProjectUuid()).orElse(component.projectUuid()));","152","      return componentDtoToWsComponent(component, parentProject.orElse(null), organizationDto, lastAnalysis);"],"delete":["149","      return componentDtoToWsComponent(component, organizationDto, lastAnalysis);"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentDtoToWsComponent.java":[{"add":["79","  static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, @Nullable ProjectDto parentProjectDto, OrganizationDto organizationDto,","80","    @Nullable SnapshotDto lastAnalysis) {","85","    return componentDtoToWsComponent(dto, parentProjectDto, organizationDto.getKey(), lastAnalysis);","88","  private static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, @Nullable ProjectDto parentProjectDto, String organizationDtoKey,","89","    @Nullable SnapshotDto lastAnalysis) {","108","      if (Qualifiers.PROJECT.equals(dto.qualifier()) && dto.getBranch() != null && parentProjectDto != null) {","109","        wsComponent.getTagsBuilder().addAllTags(parentProjectDto.getTags());","110","      }"],"delete":["79","  static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, OrganizationDto organizationDto, @Nullable SnapshotDto lastAnalysis) {","84","    return componentDtoToWsComponent(dto, organizationDto.getKey(), lastAnalysis);","87","  private static Components.Component.Builder componentDtoToWsComponent(ComponentDto dto, String organizationDtoKey, @Nullable SnapshotDto lastAnalysis) {"]}],"server\/sonar-webserver-webapi\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/tree-example.json":[{"add":["9","    \"description\": \"MY_PROJECT_DESCRIPTION\",","11","    \"tags\": [","12","      \"abc\",","13","      \"def\"","14","    ],"],"delete":["9","    \"description\": \"DESCRIPTION_MY_PROJECT_ID\",","11","    \"tags\": [],"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":[{"add":["58","import static org.mockito.Mockito.mock;","90","  private WsActionTester ws = new WsActionTester(new TreeAction(dbClient, new ComponentFinder(dbClient, resourceTypes), resourceTypes, userSession,","91","    mock(I18n.class)));","165","    db.components().insertProjectAndSnapshot(project);","532","    ComponentDto project = db.components().insertPrivateProject(organizationDto,","533","      c -> c.setUuid(\"MY_PROJECT_ID\")","534","        .setDescription(\"MY_PROJECT_DESCRIPTION\")","535","        .setDbKey(\"MY_PROJECT_KEY\")","536","        .setName(\"Project Name\")","537","        .setProjectUuid(\"MY_PROJECT_ID\"),","538","      p -> p.setTagsString(\"abc,def\"));","539","    db.components().insertSnapshot(project);","540",""],"delete":["33","import org.mockito.Mockito;","45","import org.sonar.db.component.SnapshotDto;","91","  private WsActionTester ws = new WsActionTester(new TreeAction(dbClient, new ComponentFinder(dbClient, resourceTypes), resourceTypes, userSession, Mockito.mock(I18n.class)));","165","    SnapshotDto projectSnapshot = db.components().insertProjectAndSnapshot(project);","532","    ComponentDto project = newPrivateProjectDto(organizationDto, \"MY_PROJECT_ID\")","533","      .setDbKey(\"MY_PROJECT_KEY\")","534","      .setName(\"Project Name\");","535","    db.components().insertProjectAndSnapshot(project);"]}]}},"88883041bd25b9772873612bd3a84cbbcde0a2c6":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/bulk-change-modal-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/bulk-change-modal-view.js":[{"add":["68","    const url = `\/api\/qualityprofiles\/${this.options.action}_rules`;"],"delete":["68","    const url = `${window.baseUrl}\/api\/qualityprofiles\/${this.options.action}_rules`;"]}]}},"8557587c5a9622113071e2e968ef6dd3e8c279e6":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesService.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/issue\/IssueSearchTest.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/issue\/IssuesService.java":[{"add":["58","import static org.sonarqube.ws.client.issue.IssueFilterParameters.TYPES;","104","        .setParam(TAGS, inlineMultipleParamValue(request.getTags()))","105","        .setParam(TYPES, inlineMultipleParamValue(request.getTypes())),"],"delete":["103","        .setParam(TAGS, inlineMultipleParamValue(request.getTags())),"]}],"it\/it-tests\/src\/test\/java\/it\/issue\/IssueSearchTest.java":[{"add":["41","import org.sonarqube.ws.client.issue.SearchWsRequest;","43","import static java.util.Arrays.asList;","44","import static java.util.Collections.singletonList;","47","import static org.sonarqube.ws.Issues.SearchWsResponse;","305","  @Test","306","  public void search_issues_by_types() throws IOException {","307","    assertThat(searchIssues(new SearchWsRequest().setTypes(singletonList(\"CODE_SMELL\"))).getPaging().getTotal()).isEqualTo(142);","308","    assertThat(searchIssues(new SearchWsRequest().setTypes(singletonList(\"BUG\"))).getPaging().getTotal()).isEqualTo(122);","309","    assertThat(searchIssues(new SearchWsRequest().setTypes(singletonList(\"VULNERABILITY\"))).getPaging().getTotal()).isEqualTo(8);","310","  }","311","","313","    return searchIssues(new SearchWsRequest().setRules(asList(ruleKey))).getIssuesList();","314","  }","315","","316","  private SearchWsResponse searchIssues(SearchWsRequest request) throws IOException {","317","    return newAdminWsClient(ORCHESTRATOR).issues().search(request);","321","    return Iterables.find(components, input -> key.equals(input.key()));"],"delete":["21","import com.google.common.base.Joiner;","22","import com.google.common.base.Predicate;","23","import com.google.common.collect.ImmutableMap;","44","import org.sonarqube.ws.MediaTypes;","45","import org.sonarqube.ws.client.GetRequest;","46","import org.sonarqube.ws.client.WsResponse;","308","    WsResponse response = newAdminWsClient(ORCHESTRATOR)","309","      .wsConnector()","310","      .call(new GetRequest(\"api\/issues\/search\")","311","        .setParam(\"rules\", Joiner.on(\",\").join(ruleKey))","312","        .setMediaType(MediaTypes.PROTOBUF));","313","    org.sonarqube.ws.Issues.SearchWsResponse searchWsResponse = org.sonarqube.ws.Issues.SearchWsResponse.parseFrom(response.contentStream());","314","    return searchWsResponse.getIssuesList();","318","    return Iterables.find(components, new Predicate<Component>() {","319","      @Override","320","      public boolean apply(Component input) {","321","        return key.equals(input.key());","322","      }","323","    });","324","  }","325","","326","  private static void createManualRule() {","327","    ORCHESTRATOR.getServer().adminWsClient().post(\"\/api\/rules\/create\", ImmutableMap.<String, Object>of(","328","      \"manual_key\", \"invalidclassname\",","329","      \"name\", \"InvalidClassName\",","330","      \"markdown_description\", \"Invalid class name\"));"]}]}},"5bf3e8320b4a341c2b47406dd1ca4772aa046b72":{"changes":{"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/HttpConnectorTest.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":"MODIFY"},"diff":{"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/HttpConnectorTest.java":[{"add":["27","import javax.net.ssl.SSLSocketFactory;","284","    assertThat(underTest.okHttpClient().getSslSocketFactory()).isInstanceOf(SSLSocketFactory.getDefault().getClass());"],"delete":["283","    \/\/ do not override the default TLS context provided by java 8","284","    assertThat(underTest.okHttpClient().getSslSocketFactory()).isNull();"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":[{"add":["99","    this.okHttpClient.setSslSocketFactory(createSslSocketFactory(javaVersion));","100","  }","101","","102","  private static SSLSocketFactory createSslSocketFactory(JavaVersion javaVersion) {","103","    try {","104","      SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();","105","      return enableTls12InJava7(sslSocketFactory, javaVersion);","106","    } catch (Exception e) {","107","      throw new IllegalStateException(\"Fail to init TLS context\", e);","108","    }","109","  }","110","","111","  private static SSLSocketFactory enableTls12InJava7(SSLSocketFactory sslSocketFactory, JavaVersion javaVersion) {","119","      return new Tls12Java7SocketFactory(sslSocketFactory);","121","    return sslSocketFactory;"],"delete":["106","      try {","107","        this.okHttpClient.setSslSocketFactory(new Tls12Java7SocketFactory((SSLSocketFactory) SSLSocketFactory.getDefault()));","108","      } catch (Exception e) {","109","        throw new IllegalStateException(\"Fail to init TLS context\", e);","110","      }"]}]}},"77547b4944e0e86dfe27cd98e1811e18d770da9c":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/dashboard\/configure.html.erb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/dashboard\/configure.html.erb":[{"add":["83","    { id:\"<%= widget_id -%>\", c:\"<%= escape_javascript widget_title.gsub(\/\\r\\n?\/, \" \") -%> <%= escape_javascript widget_description.gsub(\/\\r\\n?\/, \" \") -%>\" } <%= \",\" unless index==number_of_widgets-1 -%>"],"delete":["83","    { id:\"<%= widget_id -%>\", c:\"<%= widget_title.gsub(\/\\r\\n?\/, \" \") -%> <%= widget_description.gsub(\/\\r\\n?\/, \" \") -%>\" } <%= \",\" unless index==number_of_widgets-1 -%>"]}]}},"d5302c2e5cf81f2794294ae49c1996538b38e8d4":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/CeModule.java":"ADD","\/dev\/null":"DELETE","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/CeQueueModule.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/container\/ReportProcessingModule.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/CeModule.java":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/CeQueueModule.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/container\/ReportProcessingModule.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":[{"add":["63","import org.sonar.server.computation.CeModule;","64","import org.sonar.server.computation.container.ReportProcessingModule;","65","import org.sonar.server.computation.queue.CeQueueModule;","703","      CeModule.class,","704","      CeQueueModule.class,","706","      ReportProcessingModule.class,","707",""],"delete":["40","import org.sonar.db.purge.period.DefaultPeriodCleaner;","64","import org.sonar.server.computation.queue.CeQueueImpl;","65","import org.sonar.server.computation.queue.CeQueueCleaner;","66","import org.sonar.server.computation.queue.CeQueueInitializer;","67","import org.sonar.server.computation.queue.report.CleanReportQueueListener;","68","import org.sonar.server.computation.ComputeEngineProcessingModule;","69","import org.sonar.server.computation.queue.report.ReportFiles;","70","import org.sonar.server.computation.queue.report.ReportSubmitter;","71","import org.sonar.server.computation.dbcleaner.IndexPurgeListener;","72","import org.sonar.server.computation.dbcleaner.ProjectCleaner;","73","import org.sonar.server.computation.log.CeLogging;","74","import org.sonar.server.computation.monitoring.CEQueueStatusImpl;","75","import org.sonar.server.computation.monitoring.ComputeEngineQueueMonitor;","211","import org.sonar.server.properties.ProjectSettingsFactory;","714","      CEQueueStatusImpl.class,","715","      ComputeEngineQueueMonitor.class,","716","      CeQueueImpl.class,","717","      CleanReportQueueListener.class,","718","      ReportFiles.class,","719","      ComputeEngineProcessingModule.class,","721","      CeLogging.class,","722","      DefaultPeriodCleaner.class,","723","      ProjectCleaner.class,","724","      ProjectSettingsFactory.class,","725","      IndexPurgeListener.class,","726","      ReportSubmitter.class,","727","      CeQueueCleaner.class,","728","      CeQueueInitializer.class,"]}]}},"f91cf3ea0050655c715dc20465118a0568d4ec83":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/SimilarRulesFilter.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/RuleFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionRules.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/types.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/SimilarRulesFilter.tsx":[{"add":["38","    if (this.props.rule.lang) {","39","      this.props.onFilterChange({ languages: [this.props.rule.lang] });","40","    }"],"delete":["38","    this.props.onFilterChange({ languages: [this.props.rule.lang] });"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/RuleFacet.tsx":[{"add":["64","  getRuleName = (ruleKey: string) => {","65","    const rule = this.props.referencedRules[ruleKey];","66","    return rule ? this.formatRuleName(rule.name, rule.langName) : ruleKey;","67","  };","68","","69","  formatRuleName = (name: string, langName: string | undefined) => {","70","    \/\/ external rules don't have a language associated","71","    \/\/ see https:\/\/jira.sonarsource.com\/browse\/MMF-1407","72","    return langName ? `(${langName}) ${name}` : name;","76","    return this.formatRuleName(rule.name, rule.langName);"],"delete":["64","  getRuleName = (rule: string) => {","65","    const { referencedRules } = this.props;","66","    return referencedRules[rule]","67","      ? `(${referencedRules[rule].langName}) ${referencedRules[rule].name}`","68","      : rule;","72","    return `(${rule.langName}) ${rule.name}`;"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionRules.tsx":[{"add":["124","                        rule.langName!,","129","                        rule.langName!"],"delete":["124","                        rule.langName,","129","                        rule.langName"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":[{"add":["204","  langName?: string;"],"delete":["204","  langName: string;"]}],"server\/sonar-web\/src\/main\/js\/app\/types.ts":[{"add":["524","  lang?: string;","525","  langName?: string;"],"delete":["524","  lang: string;","525","  langName: string;"]}]}},"3df08566ce8ae085a6d785bf47b411f27247f55c":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/main-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/maintenance-main.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/system.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/_maintenance-status-offline.hbs":"ADD"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2643","maintenance.sonarqube_is_offline=SonarQube is offline","2644","maintenance.sonarqube_is_offline.text=The connection to SonarQube is lost. Please contact your system administrator."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/main-view.js":[{"add":["21","import { getSystemStatus, getMigrationStatus, migrateDatabase } from '..\/..\/api\/system';","22","import { getBaseUrl } from '..\/..\/helpers\/urls';","38","  getStatus() {","39","    return this.options.setup ? getMigrationStatus() : getSystemStatus();","40","  },","41","","43","    return this.getStatus().then(","44","      r => {","45","        if (r.status === 'STARTING') {","46","          this.wasStarting = true;","47","        }","48","        \/\/ unset `status` in case if was `OFFLINE` previously","49","        this.model.set({ status: undefined, ...r });","50","        this.render();","51","        if (this.model.get('status') === 'UP' || this.model.get('state') === 'NO_MIGRATION') {","52","          this.stopPolling();","53","        }","54","        if (this.model.get('status') === 'UP' && this.wasStarting) {","55","          this.loadPreviousPage();","56","        }","57","        if (this.model.get('state') === 'MIGRATION_SUCCEEDED') {","58","          this.loadPreviousPage();","59","        }","60","      },","61","      () => {","62","        this.model.set({ status: 'OFFLINE' });","63","        this.render();","65","    );","73","    migrateDatabase().then(","74","      r => {","75","        this.model.set(r);","76","        this.render();","77","      },","78","      () => {}","79","    );","83","    document","84","      .querySelector('.page-simple')","85","      .classList.toggle('panel-warning', this.model.get('state') === 'MIGRATION_REQUIRED');","90","      window.location = this.options.returnTo || getBaseUrl();"],"delete":["19","import $ from 'jquery';","20","import Backbone from 'backbone';","32","    this.requestOptions = {","33","      type: 'GET',","34","      url: window.baseUrl + '\/api\/system\/' + (this.options.setup ? 'db_migration_status' : 'status')","35","    };","43","    return Backbone.ajax(this.requestOptions).done(r => {","44","      if (r.status === 'STARTING') {","45","        this.wasStarting = true;","47","      this.model.set(r);","48","      this.render();","49","      if (this.model.get('status') === 'UP' || this.model.get('state') === 'NO_MIGRATION') {","50","        this.stopPolling();","51","      }","52","      if (this.model.get('status') === 'UP' && this.wasStarting) {","53","        this.loadPreviousPage();","54","      }","55","      if (this.model.get('state') === 'MIGRATION_SUCCEEDED') {","56","        this.loadPreviousPage();","57","      }","58","    });","66","    Backbone.ajax({","67","      url: window.baseUrl + '\/api\/system\/migrate_db',","68","      type: 'POST'","69","    }).done(r => {","70","      this.model.set(r);","71","      this.render();","72","    });","76","    $('.page-simple').toggleClass(","77","      'panel-warning',","78","      this.model.get('state') === 'MIGRATION_REQUIRED'","79","    );","84","      window.location = this.options.returnTo || window.baseUrl;"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/maintenance-main.hbs":[{"add":["0","{{#eq status 'OFFLINE'}}","2","  {{> '_maintenance-status-offline'}}","6","  {{#unless setup}}","8","    {{#eq status 'UP'}}{{> '_maintenance-status-up'}}{{\/eq}}","9","    {{#eq status 'STARTING'}}{{> '_maintenance-status-starting'}}{{\/eq}}","10","    {{#eq status 'DOWN'}}{{> '_maintenance-status-down'}}{{\/eq}}","11","    {{#eq status 'DB_MIGRATION_NEEDED'}}{{> '_maintenance-status-migration'}}{{\/eq}}","12","    {{#eq status 'DB_MIGRATION_RUNNING'}}{{> '_maintenance-status-migration'}}{{\/eq}}","13","","14","  {{else}}","15","","16","    {{#eq state 'NO_MIGRATION'}}{{> '_maintenance-state-no-migration'}}{{\/eq}}","17","    {{#eq state 'MIGRATION_REQUIRED'}}{{> '_maintenance-state-migration-required'}}{{\/eq}}","18","    {{#eq state 'NOT_SUPPORTED'}}{{> '_maintenance-state-migration-not-supported'}}{{\/eq}}","19","    {{#eq state 'MIGRATION_RUNNING'}}{{> '_maintenance-state-migration-running'}}{{\/eq}}","20","    {{#eq state 'MIGRATION_SUCCEEDED'}}{{> '_maintenance-state-migration-succeeded'}}{{\/eq}}","21","    {{#eq state 'MIGRATION_FAILED'}}{{> '_maintenance-state-migration-failed'}}{{\/eq}}","22","","23","  {{\/unless}}","24","","25","{{\/eq}}"],"delete":["0","{{#unless setup}}","2","  {{#eq status 'UP'}}{{> '_maintenance-status-up'}}{{\/eq}}","3","  {{#eq status 'STARTING'}}{{> '_maintenance-status-starting'}}{{\/eq}}","4","  {{#eq status 'DOWN'}}{{> '_maintenance-status-down'}}{{\/eq}}","5","  {{#eq status 'DB_MIGRATION_NEEDED'}}{{> '_maintenance-status-migration'}}{{\/eq}}","6","  {{#eq status 'DB_MIGRATION_RUNNING'}}{{> '_maintenance-status-migration'}}{{\/eq}}","10","  {{#eq state 'NO_MIGRATION'}}{{> '_maintenance-state-no-migration'}}{{\/eq}}","11","  {{#eq state 'MIGRATION_REQUIRED'}}{{> '_maintenance-state-migration-required'}}{{\/eq}}","12","  {{#eq state 'NOT_SUPPORTED'}}{{> '_maintenance-state-migration-not-supported'}}{{\/eq}}","13","  {{#eq state 'MIGRATION_RUNNING'}}{{> '_maintenance-state-migration-running'}}{{\/eq}}","14","  {{#eq state 'MIGRATION_SUCCEEDED'}}{{> '_maintenance-state-migration-succeeded'}}{{\/eq}}","15","  {{#eq state 'MIGRATION_FAILED'}}{{> '_maintenance-state-migration-failed'}}{{\/eq}}","17","{{\/unless}}"]}],"server\/sonar-web\/src\/main\/js\/api\/system.ts":[{"add":["19","import { getJSON, post, postJSON } from '..\/helpers\/request';","72","export function getMigrationStatus(): Promise<any> {","73","  return getJSON('\/api\/system\/db_migration_status');","74","}","75","","76","export function migrateDatabase() {","77","  return postJSON('\/api\/system\/migrate_db');","78","}","79",""],"delete":["19","import { getJSON, post } from '..\/helpers\/request';"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/_maintenance-status-offline.hbs":[{"add":[],"delete":[]}]}},"464e95be6c8d4ed4e83dd4811b332047ec6dfee5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/ProjectFacet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/store\/utils.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.js":[{"add":["23","import { uniq } from 'lodash';","27","import { getOrganizations } from '..\/..\/..\/api\/organizations';","28","import { receiveOrganizations } from '..\/..\/..\/store\/organizations\/duck';","41","const fetchIssueOrganizations = issues => dispatch => {","42","  if (!issues.length) {","43","    return Promise.resolve();","44","  }","45","","46","  const organizationKeys = uniq(issues.map(issue => issue.organization));","47","  return getOrganizations(organizationKeys).then(","48","    response => dispatch(receiveOrganizations(response.organizations)),","49","    onFail(dispatch)","50","  );","51","};","52","","53","const fetchIssues = (query: Query) => dispatch =>","54","  searchIssues({ ...query, additionalFields: '_all' })","55","    .then(response => {","56","      const parsedIssues = response.issues.map(issue =>","57","        parseIssueFromResponse(issue, response.components, response.users, response.rules)","58","      );","59","      return { ...response, issues: parsedIssues };","60","    })","61","    .then(response => dispatch(fetchIssueOrganizations(response.issues)).then(() => response))","62","    .catch(onFail(dispatch));"],"delete":["38","const fetchIssues = (query: Query) => (dispatch: Dispatch<*>) =>","39","  searchIssues({ ...query, additionalFields: '_all' }).then(response => {","40","    const parsedIssues = response.issues.map(issue =>","41","      parseIssueFromResponse(issue, response.components, response.users, response.rules)","42","    );","43","    return { ...response, issues: parsedIssues };","44","  }, onFail(dispatch));"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/ProjectFacet.js":[{"add":["30","import { searchProjects, getTree } from '..\/..\/..\/api\/components';","80","      : searchProjects({","81","          ps: 50,","82","          filter: query ? `query = \"${query}\"` : ''","83","        }).then(response =>"],"delete":["30","import { searchComponents, getTree } from '..\/..\/..\/api\/components';","80","      : searchComponents({ ps: 50, q: query, qualifiers: 'TRK' }).then(response =>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/store\/utils.js":[{"add":["163","export const convertToFilter = (query, isFavorite) => {"],"delete":["163","const convertToFilter = (query, isFavorite) => {"]}]}},"e5f5ca562f10727eead9e0de8fe1a090dea8399d":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatusImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatus.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatusImplConcurrentTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatusImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/CeQueueImplTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatusImplTest.java":[{"add":["31","  private static final long INITIAL_PENDING_COUNT = 996L;","57","    expectedException.expect(IllegalStateException.class);","58","    expectedException.expectMessage(\"Method initPendingCount must be used before any other method and can not be called twice\");","65","  public void addReceived_throws_ISE_if_called_before_initPendingCount() {","66","    expectedException.expect(IllegalStateException.class);","67","    expectedException.expectMessage(\"Method initPendingCount must be used before addReceived can be called\");","74","    underTest.initPendingCount(INITIAL_PENDING_COUNT);","75","","79","    assertThat(underTest.getPendingCount()).isEqualTo(INITIAL_PENDING_COUNT + 1);","84","    underTest.initPendingCount(INITIAL_PENDING_COUNT);","85","","92","    assertThat(underTest.getPendingCount()).isEqualTo(INITIAL_PENDING_COUNT + calls);","93","  }","94","","95","  @Test","96","  public void addInProgress_throws_ISE_if_called_before_initPendingCount() {","97","    expectedException.expect(IllegalStateException.class);","98","    expectedException.expectMessage(\"Method initPendingCount must be used before addInProgress can be called\");","99","","100","    underTest.addInProgress();","105","    underTest.initPendingCount(INITIAL_PENDING_COUNT);","106","","110","    assertThat(underTest.getPendingCount()).isEqualTo(INITIAL_PENDING_COUNT - 1);","119","    underTest.initPendingCount(INITIAL_PENDING_COUNT);","120","","127","    assertThat(underTest.getPendingCount()).isEqualTo(INITIAL_PENDING_COUNT - calls);"],"delete":["29","  private static final String ISE_initPendingCount_CALL_MSG = \"Method initPendingCount must be used before any other method and can not be called twice\";","57","    expectISEForIllegalCallToInitPendingCount();","64","  public void initPendingCount_throws_ISE_if_called_after_getPendingCount() {","65","    expectISEForIllegalCallToInitPendingCount();","66","","67","    underTest.getPendingCount();","68","    underTest.initPendingCount(10);","69","  }","70","","71","  @Test","72","  public void initPendingCount_throws_ISE_if_called_after_addReceived() {","73","    expectISEForIllegalCallToInitPendingCount();","76","    underTest.initPendingCount(10);","77","  }","78","","79","  @Test","80","  public void initPendingCount_throws_ISE_if_called_after_addInProgress() {","81","    expectISEForIllegalCallToInitPendingCount();","82","","83","    underTest.addInProgress();","84","    underTest.initPendingCount(10);","85","  }","86","","87","  private void expectISEForIllegalCallToInitPendingCount() {","88","    expectedException.expect(IllegalStateException.class);","89","    expectedException.expectMessage(ISE_initPendingCount_CALL_MSG);","97","    assertThat(underTest.getPendingCount()).isEqualTo(1);","108","    assertThat(underTest.getPendingCount()).isEqualTo(calls);","116","    assertThat(underTest.getPendingCount()).isEqualTo(-1);","131","    assertThat(underTest.getPendingCount()).isEqualTo(-calls);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatus.java":[{"add":["36","   * Adds 1 to the count of received batch reports and 1 to the count of batch reports waiting for processing.","37","   *","38","   * @return the new count of received batch reports","39","   *","40","   * @see #getReceivedCount()","41","   * @see #getPendingCount()","42","   *","43","   * @throws IllegalStateException if {@link #initPendingCount(long)} has not been called yet","45","  long addReceived();","55","   *","56","   * @throws IllegalStateException if {@link #initPendingCount(long)} has not been called yet","61","   * Adds 1 to the count of batch reports which processing ended successfully and removes 1 from the count of batch","62","   * reports under processing. Adds the specified time to the processing time counter.","63","   *","64","   * @param processingTime duration of processing in ms","65","   *","66","   * @return the new count of batch reports which processing ended successfully","67","   *","68","   * @see #getSuccessCount()","69","   * @see #getInProgressCount()","70","   *","71","   * @throws IllegalArgumentException if processingTime is < 0","73","  long addSuccess(long processingTime);","91","   * Count of received batch reports since instance startup","92","   *\/","93","  long getReceivedCount();","94","","95","  \/**","96","   * Count of batch reports waiting for processing since startup, including reports received before instance startup.","97","   *\/","98","  long getPendingCount();","99","","100","  \/**","101","   * Count of batch reports under processing.","102","   *\/","103","  long getInProgressCount();","104","","105","  \/**"],"delete":["24","   * Adds 1 to the count of received batch reports and 1 to the count of batch reports waiting for processing.","25","   *","26","   * @return the new count of received batch reports","27","   *","28","   * @see #getReceivedCount()","29","   * @see #getPendingCount()","30","   *\/","31","  long addReceived();","32","","33","  \/**","34","   * Count of received batch reports since instance startup","35","   *\/","36","  long getReceivedCount();","37","","38","  \/**","51","   * Count of batch reports waiting for processing since startup, including reports received before instance startup.","53","  long getPendingCount();","67","   * Count of batch reports under processing.","69","  long getInProgressCount();","92","   * Adds 1 to the count of batch reports which processing ended successfully and removes 1 from the count of batch","93","   * reports under processing. Adds the specified time to the processing time counter.","94","   *","95","   * @param processingTime duration of processing in ms","96","   *","97","   * @return the new count of batch reports which processing ended successfully","98","   *","99","   * @see #getSuccessCount()","100","   * @see #getInProgressCount()","101","   *","102","   * @throws IllegalArgumentException if processingTime is < 0","103","   *\/","104","  long addSuccess(long processingTime);","105","","106","  \/**"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatusImplConcurrentTest.java":[{"add":["51","    long initialPendingCount = 9963L;","52","    underTest.initPendingCount(initialPendingCount);","53","","61","    assertThat(underTest.getPendingCount()).isEqualTo(initialPendingCount + 2);"],"delete":["58","    assertThat(underTest.getPendingCount()).isEqualTo(2);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CEQueueStatusImpl.java":[{"add":["24","import static com.google.common.base.Preconditions.checkState;","39","    checkState(","40","      pending.compareAndSet(PENDING_INITIAL_VALUE, initialPendingCount),","41","      \"Method initPendingCount must be used before any other method and can not be called twice\");","46","  public long addReceived() {","47","    ensurePendingInitialized(\"addReceived\");","49","    pending.incrementAndGet();","50","    return received.incrementAndGet();","55","    ensurePendingInitialized(\"addInProgress\");","61","  private void ensurePendingInitialized(String methodName) {","62","    checkState(pending.get() != PENDING_INITIAL_VALUE, \"Method initPendingCount must be used before %s can be called\", methodName);","85","  public long getReceivedCount() {","86","    return received.get();","87","  }","88","","89","  @Override","90","  public long getPendingCount() {","91","    long currentValue = pending.get();","92","    return currentValue == PENDING_INITIAL_VALUE ? 0 : currentValue;","93","  }","94","","95","  @Override","96","  public long getInProgressCount() {","97","    return inProgress.get();","98","  }","99","","100","  @Override","101","  public long getErrorCount() {","102","    return error.get();","103","  }","104","","105","  @Override"],"delete":["36","  public long addReceived() {","37","    \/\/ initPendingCount might not have been called yet","38","    if (!pending.compareAndSet(PENDING_INITIAL_VALUE, 1)) {","39","      pending.incrementAndGet();","40","    }","41","    return received.incrementAndGet();","42","  }","43","","44","  @Override","45","  public long getReceivedCount() {","46","    return received.get();","47","  }","48","","49","  @Override","52","    if (!pending.compareAndSet(PENDING_INITIAL_VALUE, initialPendingCount)) {","53","      throw new IllegalStateException(\"Method initPendingCount must be used before any other method and can not be called twice\");","54","    }","59","  public long getPendingCount() {","60","    ensurePendingIsInitialized();","62","    return pending.get();","67","    ensurePendingIsInitialized();","73","  private void ensurePendingIsInitialized() {","74","    pending.compareAndSet(PENDING_INITIAL_VALUE, 0);","75","  }","76","","77","  @Override","78","  public long getInProgressCount() {","79","    return inProgress.get();","90","  public long getErrorCount() {","91","    return error.get();","92","  }","93","","94","  @Override"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/CeQueueImplTest.java":[{"add":["22","import org.junit.Before;","61","  @Before","62","  public void setUp() throws Exception {","63","    queueStatus.initPendingCount(0);","64","  }","65",""],"delete":[]}]}},"7d034a6d0d9991c251757eb9ab72bd37ac97b6ab":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/rootReducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/measures.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/DefaultHelmetContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/OnboardingContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/Avatar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/reducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavBranding.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/store\/rootReducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/update-center\/components\/UpdateCenterAppContainer.js":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/CategoryDefinitionsList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooterContainer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/rootReducer.js":[{"add":["27","\/*:: import type { State as GlobalMessagesState } from '..\/..\/..\/store\/globalMessages\/duck'; *\/","28","\/*:: import type { State as ValuesState } from '.\/values\/reducer'; *\/","37","  values: ValuesState","61","export const getValue = (state \/*: State *\/, key \/*: string *\/, componentKey \/*: ?string *\/) =>","62","  fromValues.getValue(state.values, key, componentKey);","64","export const getSettingsForCategory = (","65","  state \/*: State *\/,","66","  category \/*: string *\/,","67","  componentKey \/*: ?string *\/","68",") =>","70","    ...getValue(state, definition.key, componentKey),"],"delete":["26","\/*:: import type { State as GlobalMessagesState } from '..\/..\/..\/store\/globalMessages\/duck'; *\/","36","  values: {}","60","export const getValue = (state \/*: State *\/, key \/*: string *\/) =>","61","  fromValues.getValue(state.values, key);","63","export const getSettingsForCategory = (state \/*: State *\/, category \/*: string *\/) =>","65","    ...getValue(state, definition.key),"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/actions.js":[{"add":["29","export const receiveValues = (settings \/*: SettingValue[] *\/, componentKey \/*: ?string *\/) => ({","31","  settings,","32","  componentKey"],"delete":["29","export const receiveValues = (settings \/*: SettingValue[] *\/) => ({","31","  settings"]}],"server\/sonar-web\/src\/main\/js\/helpers\/measures.js":[{"add":["353","  const { getGlobalSettingValue } = require('..\/store\/rootReducer');","356","  const settingValue = getGlobalSettingValue(store.getState(), 'sonar.technicalDebt.ratingGrid');"],"delete":["353","  const { getSettingValue } = require('..\/store\/rootReducer');","356","  const settingValue = getSettingValue(store.getState(), 'sonar.technicalDebt.ratingGrid');"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/DefaultHelmetContainer.js":[{"add":["22","import { getGlobalSettingValue } from '..\/..\/store\/rootReducer';","38","  sonarqubeDotCom: getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"],"delete":["22","import { getSettingValue } from '..\/..\/store\/rootReducer';","38","  sonarqubeDotCom: getSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.js":[{"add":["21","import { fetchSettings } from '..\/store\/actions';","22","import { getComponent, getSettingsAppDefaultCategory } from '..\/..\/..\/store\/rootReducer';","27","    : undefined,","28","  defaultCategory: getSettingsAppDefaultCategory(state)","31","const mapdispatchToProps = { fetchSettings };","32","","33","export default connect(mapStateToProps, mapdispatchToProps)(App);"],"delete":["21","import { getComponent } from '..\/..\/..\/store\/rootReducer';","26","    : undefined","29","export default connect(mapStateToProps)(App);"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/OnboardingContainer.js":[{"add":["25","  getGlobalSettingValue","29","  const sonarCloudSetting = getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"],"delete":["25","  getSettingValue","29","  const sonarCloudSetting = getSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":[{"add":["31","import { getCurrentUser, getAppState, getGlobalSettingValue } from '..\/..\/..\/..\/store\/rootReducer';","142","  const sonarCloudSetting = getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"],"delete":["31","import { getCurrentUser, getAppState, getSettingValue } from '..\/..\/..\/..\/store\/rootReducer';","142","  const sonarCloudSetting = getSettingValue(state, 'sonar.lf.sonarqube.com.enabled');"]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/Avatar.js":[{"add":["24","import { getGlobalSettingValue } from '..\/..\/store\/rootReducer';","116","  enableGravatar: (getGlobalSettingValue(state, 'sonar.lf.enableGravatar') || {}).value === 'true',","117","  gravatarServerUrl: (getGlobalSettingValue(state, 'sonar.lf.gravatarServerUrl') || {}).value"],"delete":["24","import { getSettingValue } from '..\/..\/store\/rootReducer';","116","  enableGravatar: (getSettingValue(state, 'sonar.lf.enableGravatar') || {}).value === 'true',","117","  gravatarServerUrl: (getSettingValue(state, 'sonar.lf.gravatarServerUrl') || {}).value"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/values\/reducer.js":[{"add":["20","import { combineReducers } from 'redux';","25","type SettingsState = { [key: string]: {} };","26","type ComponentsState = { [key: string]: SettingsState };","27","export type State = { components: ComponentsState, global: SettingsState };","30","const componentsSettings = (state \/*: ComponentsState *\/ = {}, action \/*: Object *\/) => {","31","  if (!action.componentKey) {","32","    return state;","33","  }","34","","35","  const key = action.componentKey;","36","  if (action.type === RECEIVE_VALUES) {","37","    const settingsByKey = keyBy(action.settings, 'key');","38","    return { ...state, [key]: { ...(state[key] || {}), ...settingsByKey } };","39","  }","40","","41","  return state;","42","};","43","","44","const globalSettings = (state \/*: SettingsState *\/ = {}, action \/*: Object *\/) => {","45","  if (action.componentKey) {","46","    return state;","47","  }","48","","65","export default combineReducers({ components: componentsSettings, global: globalSettings });","67","export const getValue = (state \/*: State *\/, key \/*: string *\/, componentKey \/*: ?string *\/) => {","68","  let settings = state.global;","69","  if (componentKey) {","70","    settings = state.components[componentKey];","71","  }","72","  return settings && settings[key];","73","};"],"delete":["24","type State = { [key: string]: {} };","27","const reducer = (state \/*: State *\/ = {}, action \/*: Object *\/) => {","44","export default reducer;","46","export const getValue = (state \/*: State *\/, key \/*: string *\/) => state[key];"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavBranding.js":[{"add":["23","import { getGlobalSettingValue, getCurrentUser } from '..\/..\/..\/..\/store\/rootReducer';","54","  customLogoUrl: (getGlobalSettingValue(state, 'sonar.lf.logoUrl') || {}).value,","55","  customLogoWidth: (getGlobalSettingValue(state, 'sonar.lf.logoWidthPx') || {}).value"],"delete":["23","import { getSettingValue, getCurrentUser } from '..\/..\/..\/..\/store\/rootReducer';","54","  customLogoUrl: (getSettingValue(state, 'sonar.lf.logoUrl') || {}).value,","55","  customLogoWidth: (getSettingValue(state, 'sonar.lf.logoWidthPx') || {}).value"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":[{"add":["35","import { getAppState, getCurrentUser, getGlobalSettingValue } from '..\/..\/..\/store\/rootReducer';","204","  customText: getGlobalSettingValue(state, 'sonar.lf.aboutText'),","205","  sonarqubeDotCom: getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"],"delete":["35","import { getAppState, getCurrentUser, getSettingValue } from '..\/..\/..\/store\/rootReducer';","204","  customText: getSettingValue(state, 'sonar.lf.aboutText'),","205","  sonarqubeDotCom: getSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/store\/actions.js":[{"add":["45","      dispatch(receiveValues(settings, componentKey));","67","      dispatch(receiveValues(values, componentKey));","86","        dispatch(receiveValues(values, componentKey));","88","        dispatch(receiveValues([{ key }], componentKey));"],"delete":["45","      dispatch(receiveValues(settings));","67","      dispatch(receiveValues(values));","86","        dispatch(receiveValues(values));","88","        dispatch(receiveValues([{ key }]));"]}],"server\/sonar-web\/src\/main\/js\/store\/rootReducer.js":[{"add":["155","export const getGlobalSettingValue = (state, key) =>","156","  fromSettingsApp.getValue(state.settingsApp, key);","167","export const getSettingsAppSettingsForCategory = (state, category, componentKey) =>","168","  fromSettingsApp.getSettingsForCategory(state.settingsApp, category, componentKey);"],"delete":["155","export const getSettingValue = (state, key) => fromSettingsApp.getValue(state.settingsApp, key);","166","export const getSettingsAppSettingsForCategory = (state, category) =>","167","  fromSettingsApp.getSettingsForCategory(state.settingsApp, category);"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.js":[{"add":["27","import { getAppState, getMyOrganizations, getGlobalSettingValue } from '..\/..\/..\/store\/rootReducer';","103","  anyoneCanCreate: getGlobalSettingValue(state, 'sonar.organizations.anyoneCanCreate'),"],"delete":["27","import { getAppState, getMyOrganizations, getSettingValue } from '..\/..\/..\/store\/rootReducer';","103","  anyoneCanCreate: getSettingValue(state, 'sonar.organizations.anyoneCanCreate'),"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":[{"add":["103","    const componentKey = this.props.component ? this.props.component.key : null;","104","    this.props.cancelChange(this.props.setting.definition.key, componentKey);"],"delete":["103","    this.props.cancelChange(this.props.setting.definition.key);"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/App.js":[{"add":["31","  component?: { key: string },","44","export default class App extends React.PureComponent {","54","    this.props.fetchSettings(componentKey).then(() => this.setState({ loaded: true }));","57","  componentDidUpdate(prevProps \/*: Props*\/) {"],"delete":["22","import { connect } from 'react-redux';","27","import { fetchSettings } from '..\/store\/actions';","28","import { getSettingsAppDefaultCategory } from '..\/..\/..\/store\/rootReducer';","34","  component: { key: string },","47","class App extends React.PureComponent {","57","    this.props.fetchSettings(componentKey).then(() => {","58","      this.setState({ loaded: true });","59","    });","62","  componentDidUpdate(prevProps) {","107","","108","const mapStateToProps = state => ({","109","  defaultCategory: getSettingsAppDefaultCategory(state)","110","});","111","","112","export default connect(mapStateToProps, { fetchSettings })(App);"]}],"server\/sonar-web\/src\/main\/js\/apps\/update-center\/components\/UpdateCenterAppContainer.js":[{"add":["23","import { getGlobalSettingValue } from '..\/..\/..\/store\/rootReducer';","50","  updateCenterActive: (getGlobalSettingValue(state, 'sonar.updatecenter.activate') || {}).value"],"delete":["23","import { getSettingValue } from '..\/..\/..\/store\/rootReducer';","50","  updateCenterActive: (getSettingValue(state, 'sonar.updatecenter.activate') || {}).value"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":[{"add":["23","import org.openqa.selenium.By;","50","import static com.codeborne.selenide.Selenide.$;","197","  public void display_correct_global_setting () throws UnsupportedEncodingException {","198","    scanSample(null, null);","199","    SettingsPage page = nav.logIn().submitCredentials(adminUser).openSettings(\"sample\")","200","      .openCategory(\"Analysis Scope\")","201","      .assertSettingDisplayed(\"sonar.coverage.exclusions\")","202","      .setStringValue(\"sonar.coverage.exclusions\", \"foo\")","203","      .assertStringSettingValue(\"sonar.coverage.exclusions\", \"foo\");","204","","205","    $(\".global-navbar-menu \").$(By.linkText(\"Administration\")).click();","206","    page","207","      .openCategory(\"Analysis Scope\")","208","      .assertSettingDisplayed(\"sonar.coverage.exclusions\")","209","      .assertStringSettingValue(\"sonar.coverage.exclusions\", \"\");","210","  }","211","","212","  @Test"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/CategoryDefinitionsList.js":[{"add":["30","  settings: getSettingsAppSettingsForCategory(","31","    state,","32","    ownProps.category,","33","    ownProps.component ? ownProps.component.key : null","34","  )"],"delete":["30","  settings: getSettingsAppSettingsForCategory(state, ownProps.category)"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooterContainer.js":[{"add":["21","import { getAppState, getGlobalSettingValue } from '..\/..\/store\/rootReducer';","27","  sonarqubeDotCom: getGlobalSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"],"delete":["21","import { getAppState, getSettingValue } from '..\/..\/store\/rootReducer';","27","  sonarqubeDotCom: getSettingValue(state, 'sonar.lf.sonarqube.com.enabled')"]}]}},"8bdb9fde4be635c666ce0b09a851789a5ecfc870":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/issue\/Issue.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/DefaultIssueTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":[{"add":["21","import org.apache.commons.lang.StringUtils;","35","  private static final int ISSUE_MESSAGE_MAX_LENGTH = 1_333;","79","","80","  \/**","81","   * SONAR-7493","82","   *\/","83","  @Test","84","  public void issue_message_should_support_1_333_utf8_characters_encoded_on_3_bytes() {","85","    String longMessage = StringUtils.repeat(\"を\", ISSUE_MESSAGE_MAX_LENGTH);","86","","87","    assertThat(generateIssueWithMessage(longMessage)).isEqualTo(longMessage);","88","  }","89","","90","  \/**","91","   * Test the maximum size of DB column issues.message, when all characters","92","   * are encoded on 3-bytes","93","   *","94","   * SONAR-7493","95","   *\/","96","  @Test","97","  public void issue_message_should_be_abbreviated_if_longer_than_1333_utf8_characters_encoded_on_3_bytes() {","98","    String character = \"を\";","99","    String message = generateIssueWithMessage(StringUtils.repeat(character, 10_000));","100","","101","    String abbreviatedMessage = StringUtils.repeat(character, ISSUE_MESSAGE_MAX_LENGTH - 3) + \"...\";","102","    assertThat(message).isEqualTo(abbreviatedMessage);","103","  }","104","","105","  private String generateIssueWithMessage(String longMessage) {","106","    ORCHESTRATOR.getServer().provisionProject(SAMPLE_PROJECT_KEY, SAMPLE_PROJECT_KEY);","107","    ItUtils.restoreProfile(ORCHESTRATOR, getClass().getResource(\"\/issue\/IssueCreationTest\/with-custom-message.xml\"));","108","    ORCHESTRATOR.getServer().associateProjectToQualityProfile(SAMPLE_PROJECT_KEY, \"xoo\", \"with-custom-message\");","109","","110","    runProjectAnalysis(ORCHESTRATOR, \"shared\/xoo-sample\", \"sonar.customMessage.message\", longMessage);","111","","112","    Issue issue = issueClient().find(IssueQuery.create()).list().get(0);","113","    return issue.message();","114","  }"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/issue\/Issue.java":[{"add":["40","   * In theory it should be 4_000 UTF-8 characters but unfortunately","41","   * Oracle DB does not support more than 4_000 bytes, even if column","42","   * issues.message is created with type VARCHAR2(4000 CHAR).","43","   * In order to have the same behavior on all databases, message","44","   * is truncated to 4_000 \/ 3 (maximum bytes per UTF-8 character)","45","   * = 1_333 characters.","47","  int MESSAGE_MAX_SIZE = 1_333;"],"delete":["41","  int MESSAGE_MAX_SIZE = 4000;"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/DefaultIssueTest.java":[{"add":["38","  private DefaultIssue issue = new DefaultIssue();","154","    issue.setMessage(StringUtils.repeat(\"a\", 5_000));","155","    assertThat(issue.message()).hasSize(1_333);"],"delete":["38","  DefaultIssue issue = new DefaultIssue();","154","    issue.setMessage(StringUtils.repeat(\"a\", 5000));","155","    assertThat(issue.message()).hasSize(4000);"]}]}},"1904c96a996c1cba54e2fe7540447fcb031e00d3":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/__tests__\/App-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/__tests__\/App-test.tsx":[{"add":["68","  mount(<App component={{ ...component, configuration: undefined }} \/>);","74","  mount(<App component={component} \/>);","84","  const wrapper = mount(<App component={component} \/>);"],"delete":["68","  mount(<App component={{ ...component, configuration: undefined }} customOrganizations={false} \/>);","74","  mount(<App component={component} customOrganizations={false} \/>);","75","  expect(searchQualityProfiles.mock.calls).toHaveLength(2);","76","  expect(searchQualityProfiles).toBeCalledWith({ organization: undefined });","77","  expect(searchQualityProfiles).toBeCalledWith({ organization: undefined, project: 'foo' });","78","});","79","","80","it('fetches profiles with organization', () => {","81","  searchQualityProfiles.mockClear();","82","  mount(<App component={component} customOrganizations={true} \/>);","92","  const wrapper = mount(<App component={component} customOrganizations={false} \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/App.tsx":[{"add":["62","    Promise.all([getExporters(), this.fetchProfiles()]).then(","63","      responses => {","64","        if (this.mounted) {","65","          const [exporters, profilesResponse] = responses;","66","          this.setState({","67","            actions: profilesResponse.actions,","68","            exporters,","69","            profiles: sortProfiles(profilesResponse.profiles),","70","            loading: false","71","          });","72","        }","73","      },","74","      () => {","75","        if (this.mounted) {","76","          this.setState({ loading: false });","77","        }","79","    );"],"delete":["62","    Promise.all([getExporters(), this.fetchProfiles()]).then(responses => {","63","      if (this.mounted) {","64","        const [exporters, profilesResponse] = responses;","65","        this.setState({","66","          actions: profilesResponse.actions,","67","          exporters,","68","          profiles: sortProfiles(profilesResponse.profiles),","69","          loading: false","70","        });","72","    });"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/App.tsx":[{"add":["68","    const { key, organization } = this.props.component;","71","      searchQualityProfiles({ organization, project: key }).then(r => r.profiles)"],"delete":["36","  customOrganizations: boolean;","69","    const { component } = this.props;","70","    const organization = this.props.customOrganizations ? component.organization : undefined;","73","      searchQualityProfiles({ organization, project: component.key }).then(r => r.profiles)"]}],"server\/sonar-web\/src\/main\/js\/api\/quality-profiles.ts":[{"add":["99","  return getJSON('\/api\/qualityprofiles\/search', parameters).catch(throwGlobalError);"],"delete":["99","  return getJSON('\/api\/qualityprofiles\/search', parameters);"]}]}},"9caa226fd480041bd57a3db46d8be4a81a55840d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ComponentAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ComponentAction.java":[{"add":["62","        \"Requires the following permission: 'Browse' on the project of the specified component.<br>\" +"],"delete":["62","        \"Requires one of the following permissions:\" +","63","        \"<ul>\" +","64","        \"<li>'Administer System'<\/li>\" +","65","        \"<li>'Administer' rights on the specified component<\/li>\" +","66","        \"<\/ul>\" +"]}]}},"585f3438a50dc49a31f05948451d1dd333268cbe":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/PermissionCell.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/shared\/components\/UserHolder.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2146","permission_templates.project_creators=Creators","2147","permission_templates.project_creators.explanation=When a new project, portfolio or application is created, the user who creates it will receive these permissions.","2148","permission_templates.project_creators.explanation.sonarcloud=When a new project is created, the user who creates it will receive these permissions."],"delete":["2146","permission_templates.project_creators=Project\/Portfolio\/Application Creators","2147","permission_templates.project_creators.explanation=When a new project \/ portfolio \/ application is created, the user who creates it will receive these permissions on the it."]}],"server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/PermissionCell.js":[{"add":["21","import HelpTooltip from '..\/..\/..\/components\/controls\/HelpTooltip';","23","import { isSonarCloud } from '..\/..\/..\/helpers\/system';","38","              <li className=\"little-spacer-bottom display-flex-center\">","40","                <HelpTooltip","41","                  className=\"little-spacer-left\"","42","                  overlay={translate(","43","                    isSonarCloud()","44","                      ? 'permission_templates.project_creators.explanation.sonarcloud'","45","                      : 'permission_templates.project_creators.explanation'","46","                  )}","47","                \/>"],"delete":["36","              <li className=\"little-spacer-bottom\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/shared\/components\/UserHolder.tsx":[{"add":["25","import { isSonarCloud } from '..\/..\/..\/..\/helpers\/system';","87","                {translate(","88","                  isSonarCloud()","89","                    ? 'permission_templates.project_creators.explanation.sonarcloud'","90","                    : 'permission_templates.project_creators.explanation'","91","                )}"],"delete":["86","                {translate('permission_templates.project_creators.explanation')}"]}]}},"014f2053e5360baa98762f163f11e88843eed9a8":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/l10n.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/l10n.js":[{"add":["56","function checkCachedBundle () {","57","  const cached = localStorage.getItem('l10n.bundle');","58","","59","  if (!cached) {","60","    return false;","61","  }","62","","63","  try {","64","    const parsed = JSON.parse(cached);","65","    return parsed != null && typeof parsed === 'object';","66","  } catch (e) {","67","    return false;","68","  }","69","}","70","","81","  if (bundleTimestamp !== null && checkCachedBundle()) {","86","    try {","87","      const currentTimestamp = moment().format('YYYY-MM-DDTHH:mm:ssZZ');","88","      localStorage.setItem('l10n.timestamp', currentTimestamp);","89","      localStorage.setItem('l10n.locale', currentLocale);","90","      localStorage.setItem('l10n.bundle', JSON.stringify(bundle));","91","    } catch (e) {","92","      \/\/ do nothing","93","    }","94",""],"delete":["66","  if (bundleTimestamp !== null) {","71","    const currentTimestamp = moment().format('YYYY-MM-DDTHH:mm:ssZZ');","72","    localStorage.setItem('l10n.timestamp', currentTimestamp);","73","    localStorage.setItem('l10n.locale', currentLocale);","74","    localStorage.setItem('l10n.bundle', JSON.stringify(bundle));"]}]}},"bba83de69a5b421c0f31e7c9bf08401dcecc8581":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/drilldown\/measures.html.erb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/drilldown\/measures.html.erb":[{"add":["4","        <form method=\"GET\" action=\"<%= ApplicationController.root_context -%>\/drilldown\/measures\" style=\"display: inline\">","5","          <input type=\"hidden\" name=\"id\" value=\"<%= h @snapshot.project.key -%>\"\/>","6","          <input type=\"hidden\" name=\"metric\" value=\"<%= h params[:metric] -%>\"\/>","7","          <% if params[:highlight] %>","8","            <input type=\"hidden\" name=\"highlight\" value=\"<%= h params[:highlight] -%>\"\/>","9","          <% end -%>"],"delete":["4","        <form method=\"GET\" action=\"<%= url_for :action => 'measures' -%>\" style=\"display: inline\">","5","          <input type=\"hidden\" name=\"metric\" value=\"<%= params[:metric] -%>\"\/>"]}]}},"d17f0721a3a82e2f2b0fb424c8076159f9331bf0":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":[{"add":["151","  public void test_updateLastUsedDate_if_never_been_set_yet() {","152","    QProfileDto initial = QualityProfileTesting.newQualityProfileDto()","153","      .setLastUsed(null);","154","    underTest.insert(dbSession, initial);","155","","156","    int count = underTest.updateLastUsedDate(dbSession, initial, 15_000L);","157","","158","    assertThat(count).isEqualTo(1);","159","    QProfileDto reloaded = underTest.selectByUuid(dbSession, initial.getKee());","160","    assertThat(reloaded.getLastUsed()).isEqualTo(15_000L);","161","  }","162","","163","  @Test","164","  public void test_updateLastUsedDate_if_more_recent() {"],"delete":["151","  public void test_updateLastUsedDate() {"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":[{"add":["100","      and (last_used is null or last_used &lt; #{lastUsedDate, jdbcType=BIGINT})"],"delete":["100","      and last_used &lt; #{lastUsedDate, jdbcType=BIGINT}"]}]}},"5f81649d5f7f9eb7f620d2ac49ed4b82d8ae3991":{"changes":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":"MODIFY"},"diff":{"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":[{"add":["134","        bodyBuilder.addFormDataPart(","135","          param.getKey(),","136","          part.getFile().getName(),","248",""],"delete":["27","","31","import okhttp3.Headers;","136","        bodyBuilder.addPart(","137","          Headers.of(\"Content-Disposition\", format(\"form-data; name=\\\"%s\\\"\", param.getKey())),","249","    "]}]}},"64fa9230e6346dd4bacb1855705630e877fd9f17":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/BatchTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/BatchTest.java":[{"add":["163","    assertThat(project.getMeasureIntValue(\"directories\")).isEqualTo(2);"],"delete":["163","    assertThat(project.getMeasureIntValue(\"directories\")).isEqualTo(3);"]}]}},"62d76a285dc86c756fddeb63a0b073f11ee46f25":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotList-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":[{"add":["21","    total={0}","44","    total={0}","68","    total={0}","336","    total={5}","351","    hotspots.list_title.TO_REVIEW.7"],"delete":["347","    hotspots.list_title.TO_REVIEW.5"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotList-test.tsx":[{"add":["55","  expect(shallowRender({ hotspots, hotspotsTotal: hotspots.length })).toMatchSnapshot(","56","    'no pagination'","57","  );","85","      hotspotsTotal={0}"],"delete":["55","  expect(shallowRender({ hotspots })).toMatchSnapshot('no pagination');"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":[{"add":["57","  hotspotsTotal: number;","78","      hotspotsTotal: 0,"],"delete":["57","  hotspotsTotal?: number;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":[{"add":["43","  hotspotsTotal={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":[{"add":["129","      hotspotsTotal={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":[{"add":["32","  hotspotsTotal: number;","114","            hotspotsTotal"],"delete":["32","  hotspotsTotal?: number;","114","            hotspots.length"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":[{"add":["42","  hotspotsTotal: number;"],"delete":["42","  hotspotsTotal?: number;"]}]}},"9eebecd84d86c76ea513afc0e50573516c6731b8":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueChangelog.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueChangelog.java":[{"add":["53","      if (diffs.containsKey(IssueUpdater.TECHNICAL_DEBT)) {","54","        FieldDiffs.Diff value = diffs.get(IssueUpdater.TECHNICAL_DEBT);","55","        diffs.remove(IssueUpdater.TECHNICAL_DEBT);","56","        diffs.put(\"effort\", value);"],"delete":["53","      for (Map.Entry<String, FieldDiffs.Diff> entry : diffs.entrySet()) {","54","        \/\/ As \"technicalDebt\" couldn't been updated to \"effort\" in db, we need to convert it here to correctly display \"effort\" in WS\/UI","55","        if (entry.getKey().equals(IssueUpdater.TECHNICAL_DEBT)) {","56","          diffs.put(\"effort\", entry.getValue());","57","          diffs.remove(entry.getKey());","58","        }"]}]}},"6225c854d869db28adc7c74f0b18e0dfdefebff6":{"changes":{"server\/sonar-web\/src\/main\/js\/widgets\/issue-filter\/widget.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/widgets\/issue-filter\/widget.js":[{"add":["304","          facetMode: facetMode,","305","          additionalFields: '_all'"],"delete":["304","          facetMode: facetMode"]}]}},"bba4533a8756e66a65656861507720b4c535194b":{"changes":{"\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/handleRequiredAuthentication-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/app\/utils\/throwGlobalError.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/throwGlobalError-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/api\/components.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/ComponentContainer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/handleRequiredAuthentication-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/throwGlobalError.ts":[{"add":["27","  parseError(error).then(","28","    message => {","30","    },","31","    () => {}","32","  );"],"delete":["27","  parseError(error)","28","    .then(message => {","30","    })","31","    .catch(() => {});","32",""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["721","  ]).then(([sourceViewerComponent, { component }]) => ({","722","    ...sourceViewerComponent,","723","    leakPeriodDate: component.leakPeriodDate"],"delete":["721","  ]).then(([component, data]) => ({","722","    ...component,","723","    leakPeriodDate: data.leakPeriodDate"]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/__tests__\/throwGlobalError-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/components.ts":[{"add":["124","): Promise<{ component: T.ComponentMeasure }> {","125","  return getJSON('\/api\/measures\/component', data);","153","export function getComponentData(data: { component: string } & T.BranchParameters): Promise<any> {","154","  return getJSON('\/api\/components\/show', data);","155","}","156","","160","  return getComponentData(data).then(({ component }) => component !== undefined, () => false);","164","  return getComponentData(data).catch(throwGlobalError);"],"delete":["124","): Promise<any> {","125","  return getJSON('\/api\/measures\/component', data).then(r => r.component, throwGlobalError);","156","  return getJSON('\/api\/components\/show', data).then(","157","    ({ component }) => component !== undefined,","158","    () => false","159","  );","163","  return getJSON('\/api\/components\/show', data).catch(throwGlobalError);","177","export function getComponentData(data: { component: string } & T.BranchParameters): Promise<any> {","178","  return getComponentShow(data).then(r => r.component);","179","}","180",""]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":[{"add":["125","  }).then(({ component }) => {"],"delete":["125","  }).then(component => {"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/ComponentContainer-test.tsx":[{"add":["60","  getComponentData: jest.fn().mockResolvedValue({ component: { analysisDate: '2018-07-30' } })","132","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({","133","    component: { organization: 'org' }","134","  });","143","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({","144","    component: { organization: 'org' }","145","  });"],"delete":["60","  getComponentData: jest.fn().mockResolvedValue({ analysisDate: '2018-07-30' })","132","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({ organization: 'org' });","141","  (getComponentData as jest.Mock<any>).mockResolvedValueOnce({ organization: 'org' });"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainer.tsx":[{"add":["116","      .then(([nav, { component }]) => {","117","        const componentWithQualifier = this.addQualifier({ ...nav, ...component });","120","          this.props.fetchOrganization(componentWithQualifier.organization);","122","        return componentWithQualifier;","123","      }, onError)","125","      .then(","126","        ({ branchLike, branchLikes, component }) => {","127","          if (this.mounted) {","128","            this.setState({","129","              branchLike,","130","              branchLikes,","131","              component,","132","              loading: false","133","            });","134","            this.fetchStatus(component);","135","            this.fetchWarnings(component, branchLike);","136","          }","137","        },","138","        () => {}","139","      );"],"delete":["116","      .then(([nav, data]) => {","117","        const component = this.addQualifier({ ...nav, ...data });","120","          this.props.fetchOrganization(component.organization);","122","        return component;","123","      })","125","      .then(({ branchLike, branchLikes, component }) => {","126","        if (this.mounted) {","127","          this.setState({","128","            branchLike,","129","            branchLikes,","130","            component,","131","            loading: false","132","          });","133","          this.fetchStatus(component);","134","          this.fetchWarnings(component, branchLike);","135","        }","136","      })","137","      .catch(onError);"]}]}},"d5d5fbb4cd90b6c6419bd2940281fd1fd6e29d93":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest\/ce_tables.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphans.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71.java":[{"add":["35","      .add(2006, \"Clean orphans in Compute Engine child tables\", CleanCeChildTablesOrphans.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest\/ce_tables.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphans.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/CleanCeChildTablesOrphansTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v71\/DbVersion71Test.java":[{"add":["38","    verifyMigrationCount(underTest, 7);"],"delete":["38","    verifyMigrationCount(underTest, 6);"]}]}},"d414e4e2c2daed9fcb3d6f6eef35dd538e752d76":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/modals.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":[{"add":["9","  <div class=\"modal-body modal-container\">"],"delete":["9","  <div class=\"modal-body modal-body-select2\">"]}],"server\/sonar-web\/src\/main\/less\/components\/modals.less":[{"add":["115","  width: 120px;","119","  padding-left: 10px;"],"delete":["115","  width: 130px;"]}]}},"eb17d0d2279c9d125f494525bfa4c4ab3692a0e1":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/FavoriteBase.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/FavoriteBase.tsx":[{"add":["50","    if (nextProps.favorite !== this.props.favorite || nextProps.favorite !== this.state.favorite) {"],"delete":["50","    if (nextProps.favorite !== this.props.favorite && nextProps.favorite !== this.state.favorite) {"]}]}},"ff20b3c6df653a9e57b80735c7084b8f38373d7d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQuery.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["293","    SearchOptions options = createSearchOptionsFromRequest(request);","329","  private static SearchOptions createSearchOptionsFromRequest(SearchWsRequest request) {","330","    SearchOptions options = new SearchOptions();","331","    options.setPage(request.getPage(), request.getPageSize());","332","    options.addFacets(request.getFacets());","333","","334","    return options;","335","  }","336","","337","  private static Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {"],"delete":["293","    SearchOptions options = new SearchOptions();","294","    options.setPage(request.getPage(), request.getPageSize());","295","    options.addFacets(request.getFacets());","331","  private Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/es\/SearchOptionsTest.java":[{"add":["21","import java.io.StringWriter;","22","import org.junit.Rule;","24","import org.junit.rules.ExpectedException;","34","  @Rule","35","  public ExpectedException expectedException = ExpectedException.none();","36","","37","  private SearchOptions underTest = new SearchOptions();","38","","161","","162","  @Test","163","  public void fail_if_result_after_first_10_000() {","164","    expectedException.expect(IllegalArgumentException.class);","165","    expectedException.expectMessage(\"Can return only the first 10000 results. 10500th result asked.\");","166","","167","    underTest.setPage(21, 500);","168","  }"],"delete":["26","import java.io.StringWriter;","27",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQuery.java":[{"add":["33","import static com.google.common.base.Preconditions.checkArgument;","477","        checkArgument(issueKeys.size() <= QueryContext.MAX_LIMIT, \"Number of issue keys must be less than \" + QueryContext.MAX_LIMIT + \" (got \" + issueKeys.size() + \")\");"],"delete":["21","import com.google.common.base.Preconditions;","477","        Preconditions.checkArgument(issueKeys.size() <= QueryContext.MAX_LIMIT, \"Number of issue keys must be less than \" + QueryContext.MAX_LIMIT + \" (got \" + issueKeys.size()","478","          + \")\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchOptions.java":[{"add":["27","import javax.annotation.Nullable;","28","import org.apache.commons.lang.StringUtils;","29","import org.sonar.api.server.ws.WebService;","30","import org.sonar.api.utils.text.JsonWriter;","31","","32","import static com.google.common.base.Preconditions.checkArgument;","42","  private static final int MAX_RETURNABLE_RESULTS = 10_000;","60","    checkArgument(offset >= 0, \"Offset must be positive\");","70","    checkArgument(page >= 1, \"Page must be greater or equal to 1 (got \" + page + \")\");","71","    int lastResultIndex = page * pageSize;","72","    checkArgument(lastResultIndex <= MAX_RETURNABLE_RESULTS, \"Can return only the first %s results. %sth result asked.\", MAX_RETURNABLE_RESULTS, lastResultIndex);"],"delete":["21","import com.google.common.base.Preconditions;","22","import org.apache.commons.lang.StringUtils;","23","import org.sonar.api.server.ws.WebService;","24","import org.sonar.api.utils.text.JsonWriter;","25","","26","import javax.annotation.Nullable;","27","","60","    Preconditions.checkArgument(offset >= 0, \"Offset must be positive\");","70","    Preconditions.checkArgument(page >= 1, \"Page must be greater or equal to 1 (got \" + page + \")\");"]}]}},"3f20a128d9068f85965a63f4e5e28f0b6f17c230":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/941_alter_issues_char_columns_on_mssql.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/941_alter_issues_char_columns_on_mssql.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 941;"],"delete":["31","  public static final int LAST_VERSION = 940;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["361","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('941');"],"delete":[]}]}},"72f20e1066197e64b7e5d348d9f1bc2466073f2e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["258","        .forEach(q::should);"],"delete":["258","        .forEach(q::filter);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":[{"add":["225","  public void when_searching_for_several_tags_combine_them_with_OR() throws IOException {","226","    OrganizationDto organization = dbTester.organizations().insert();","227","    RuleDefinitionDto bothTagsRule = createJavaRule();","228","    insertMetadata(organization, bothTagsRule, setTags(\"tag1\", \"tag2\"));","229","    RuleDefinitionDto oneTagRule = createJavaRule();","230","    insertMetadata(organization, oneTagRule, setTags(\"tag1\"));","231","    RuleDefinitionDto otherTagRule = createJavaRule();","232","    insertMetadata(organization, otherTagRule, setTags(\"tag2\"));","233","    RuleDefinitionDto noTagRule = createJavaRule();","234","    insertMetadata(organization, noTagRule, setTags());","235","    indexRules();","236","","237","    Consumer<TestRequest> request = r -> r","238","      .setParam(\"f\", \"repo,name\")","239","      .setParam(\"tags\", \"tag1,tag2\")","240","      .setParam(\"organization\", organization.getKey());","241","    verify(request, bothTagsRule, oneTagRule, otherTagRule);","242","  }","243","","244","  @Test","302","  public void should_not_return_tags_of_foreign_organization() throws IOException {","303","    OrganizationDto organizationWithSpecificTags = dbTester.organizations().insert();","304","    OrganizationDto myOrganization = dbTester.organizations().insert();","305","    RuleDefinitionDto rule = dbTester.rules().insert(setSystemTags(\"system1\", \"system2\"));","306","    insertMetadata(organizationWithSpecificTags, rule, setTags(\"tag1\", \"tag2\"));","307","    indexRules();","308","","309","    SearchResponse result = ws.newRequest()","310","      .setParam(\"facets\", \"tags\")","311","      .setParam(\"f\", \"tags\")","312","      .setParam(\"organization\", myOrganization.getKey())","313","      .executeProtobuf(SearchResponse.class);","314","","315","    assertThat(result.getRulesList()).extracting(Rule::getKey).containsExactly(rule.getKey().toString());","316","    assertThat(result.getFacets().getFacets(0).getValuesList())","317","      .extracting(v -> tuple(v.getVal(), v.getCount()))","318","      .containsExactly(","319","        tuple(\"system1\", 1L),","320","        tuple(\"system2\", 1L)","321","      );","322","  }","323","","324","  @Test"],"delete":[]}]}},"0bf9da7268b7512812490cc4c2562afd84d443d7":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/CreateFormShim.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/CreateFormShim-test.tsx":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/CreateFormShim.tsx":[{"add":["20","import * as theme from '..\/..\/..\/app\/theme';","30","    const { createFormBuilder } = (window as any).SonarGovernance;","31","    return createFormBuilder(this.props, theme);"],"delete":["29","    const { CreateForm } = (window as any).SonarGovernance;","30","    return <CreateForm {...this.props} \/>;"]}],"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/CreateFormShim-test.tsx":[{"add":[],"delete":[]}]}},"3ee7baceba601526f60ea2a78decfc0b6c8feb8e":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccountInput.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccounts.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/users.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccountInput.tsx":[{"add":["37","      <div className=\"js-scm-account\">"],"delete":["37","      <div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserScmAccounts.tsx":[{"add":["44","      <ul className=\"js-scm-accounts\">"],"delete":["44","      <ul>"]}],"server\/sonar-web\/src\/main\/js\/api\/users.ts":[{"add":["90","  scmAccount: string[];","92","  return postJSON('\/api\/users\/update', {","93","    ...data,","94","    scmAccount: data.scmAccount.length > 0 ? data.scmAccount : ''","95","  });"],"delete":["90","  scmAccount?: string;","92","  return postJSON('\/api\/users\/update', data);"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":[{"add":["126","      scmAccount: uniq(this.state.scmAccounts)","251","                <Button className=\"js-scm-account-add\" onClick={this.handleAddScmAccount}>"],"delete":["126","      scmAccount: uniq(this.state.scmAccounts).join(',')","251","                <Button onClick={this.handleAddScmAccount} type=\"reset\">"]}]}},"4ce3f21921ceda09e54d4c43e7b09169ab375df9":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventActionTest.java":[{"add":["158","    assertThat(definition.param(PARAM_NAME).isRequired()).isTrue();","188","    expectedException.expect(IllegalArgumentException.class);","189","    expectedException.expectMessage(\"The 'name' parameter is missing\");"],"delete":["187","    expectedException.expect(NullPointerException.class);","188",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventAction.java":[{"add":["88","      .setExampleValue(\"5.6\")","89","      .setRequired(true);"],"delete":["88","      .setExampleValue(\"5.6\");"]}]}},"e6fea33be6dd9333abdd82444317a708804d2f85":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/measure\/MeasureMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":"MODIFY","server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentTreeQuery.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/measure\/MeasureMapper.xml":[{"add":["123","    and p.enabled = ${_true}","124","    <if test=\"query.qualifiers != null\">","125","      and p.qualifier in","126","      <foreach collection=\"query.qualifiers\" item=\"qualifier\" open=\"(\" close=\")\" separator=\",\">","127","        #{qualifier,jdbcType=VARCHAR}","128","      <\/foreach>","129","    <\/if>","130","    <if test=\"query.nameOrKeyQuery != null\">","131","      and (","132","      p.kee = #{query.nameOrKeyQuery,jdbcType=VARCHAR}","133","      or","134","      upper(p.name) like #{query.nameOrKeyUpperLikeQuery,jdbcType=VARCHAR} escape '\/'","135","      )","136","    <\/if>"],"delete":["123","    <include refid=\"org.sonar.db.component.ComponentMapper.selectDescendantsFilters\"\/>"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":[{"add":["32","import static java.util.Collections.emptyList;","38","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 0, Optional.empty(), System2.INSTANCE, emptyList());","41","    conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), -1, Optional.empty(), System2.INSTANCE, emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.of(10), System2.INSTANCE, emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","72","  public void delete_files_but_not_directories_by_default() {","78","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), emptyList());","80","    assertThat(underTest.getScopesWithoutHistoricalData())","81","      .containsExactlyInAnyOrder(Scopes.FILE);","86","  public void delete_directory_if_enabled_in_settings() {","90","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), emptyList());","92","    assertThat(underTest.getScopesWithoutHistoricalData())","93","      .containsExactlyInAnyOrder(Scopes.DIRECTORY, Scopes.FILE);"],"delete":["21","import java.util.Collections;","38","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 0, Optional.empty(), System2.INSTANCE, Collections.emptyList());","41","    conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], -1, Optional.empty(), System2.INSTANCE, Collections.emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 30, Optional.empty(), System2.INSTANCE, Collections.emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 30, Optional.of(10), System2.INSTANCE, Collections.emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 30, Optional.empty(), System2.INSTANCE, Collections.emptyList());","72","  public void do_not_delete_directory_by_default() {","78","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), Collections.emptyList());","80","    assertThat(underTest.scopesWithoutHistoricalData()).contains(Scopes.FILE)","81","      .doesNotContain(Scopes.DIRECTORY);","86","  public void delete_directory_if_in_settings() {","90","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), Collections.emptyList());","92","    assertThat(underTest.scopesWithoutHistoricalData()).contains(Scopes.DIRECTORY, Scopes.FILE);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":[{"add":["32","import static java.util.Arrays.asList;","33","import static java.util.Collections.singletonList;","34","","38","  private final Collection<String> scopesWithoutHistoricalData;","44","  public PurgeConfiguration(IdUuidPair rootProjectId, Collection<String> scopesWithoutHistoricalData, int maxAgeInDaysOfClosedIssues,","55","    Collection<String> scopesWithoutHistoricalData = singletonList(Scopes.FILE);","57","      scopesWithoutHistoricalData = asList(Scopes.FILE, Scopes.DIRECTORY);","59","    return new PurgeConfiguration(idUuidPair, scopesWithoutHistoricalData, config.getInt(PurgeConstants.DAYS_BEFORE_DELETING_CLOSED_ISSUES).get(),","67","  public Collection<String> getScopesWithoutHistoricalData() {"],"delete":["35","  private final String[] scopesWithoutHistoricalData;","41","  public PurgeConfiguration(IdUuidPair rootProjectId, String[] scopesWithoutHistoricalData, int maxAgeInDaysOfClosedIssues,","52","    String[] scopes = new String[] {Scopes.FILE};","54","      scopes = new String[] {Scopes.DIRECTORY, Scopes.FILE};","56","    return new PurgeConfiguration(idUuidPair, scopes, config.getInt(PurgeConstants.DAYS_BEFORE_DELETING_CLOSED_ISSUES).get(),","64","  public String[] scopesWithoutHistoricalData() {"]}],"server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml":[{"add":["4","            uuid=\"PROJECT_UUID\"","6","            project_uuid=\"PROJECT_UUID\"","26","            root_uuid=\"PROJECT_UUID\"","27","            tags=\"[null]\"","44","            uuid=\"DIR_UUID\"","45","            uuid_path=\".PROJECT_UUID.\"","46","            project_uuid=\"PROJECT_UUID\"","47","            module_uuid=\"PROJECT_UUID\"","66","            root_uuid=\"PROJECT_UUID\"","67","            tags=\"[null]\"","84","            uuid=\"FILE_UUID\"","85","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","86","            project_uuid=\"PROJECT_UUID\"","87","            module_uuid=\"PROJECT_UUID\"","88","            module_uuid_path=\".PROJECT_UUID.\"","106","            root_uuid=\"PROJECT_UUID\"","107","            tags=\"[null]\"","108","            b_changed=\"[false]\"","109","            b_copy_component_uuid=\"[null]\"","110","            b_description=\"[null]\"","111","            b_enabled=\"[false]\"","112","            b_uuid_path=\"[null]\"","113","            b_language=\"[null]\"","114","            b_long_name=\"[null]\"","115","            b_module_uuid=\"[null]\"","116","            b_module_uuid_path=\"[null]\"","117","            b_name=\"[null]\"","118","            b_path=\"[null]\"","119","            b_qualifier=\"[null]\"","120","  \/>","121","","122","  <!-- unit test file -->","123","  <projects organization_uuid=\"org1\"","124","            uuid=\"TEST_FILE_UUID\"","125","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","126","            project_uuid=\"PROJECT_UUID\"","127","            module_uuid=\"PROJECT_UUID\"","128","            module_uuid_path=\".PROJECT_UUID.\"","129","            main_branch_project_uuid=\"[null]\"","130","            created_at=\"[null]\"","131","            long_name=\"[null]\"","132","            scope=\"FIL\"","133","            qualifier=\"UTS\"","134","            kee=\"project:my\/dir\/FileTest.java\"","135","            name=\"my\/dir\/FileTest.java\"","136","            description=\"[null]\"","137","            private=\"[false]\"","138","            language=\"java\"","139","            copy_component_uuid=\"[null]\"","140","            developer_uuid=\"[null]\"","141","            path=\"[null]\"","142","            deprecated_kee=\"[null]\"","143","            authorization_updated_at=\"[null]\"","144","            id=\"4\"","145","            enabled=\"[true]\"","146","            root_uuid=\"PROJECT_UUID\"","147","            tags=\"[null]\"","165","             component_uuid=\"PROJECT_UUID\"","189","  <project_measures id=\"1\"","190","                    analysis_uuid=\"u1\"","191","                    metric_id=\"10\"","192","                    value=\"[null]\"","193","                    text_value=\"[null]\"","194","                    measure_data=\"[null]\"","195","                    variation_value_1=\"[null]\"","196","                    variation_value_2=\"[null]\"","197","                    variation_value_3=\"[null]\"","198","                    variation_value_4=\"[null]\"","199","                    variation_value_5=\"[null]\"","200","                    alert_status=\"[null]\"","201","                    alert_text=\"[null]\"","202","                    person_id=\"[null]\"","203","                    description=\"[null]\"","204","                    component_uuid=\"PROJECT_UUID\"\/>","205","  <project_measures id=\"2\"","206","                    analysis_uuid=\"u1\"","207","                    metric_id=\"10\"","208","                    value=\"[null]\"","209","                    text_value=\"[null]\"","210","                    measure_data=\"[null]\"","211","                    variation_value_1=\"[null]\"","212","                    variation_value_2=\"[null]\"","213","                    variation_value_3=\"[null]\"","214","                    variation_value_4=\"[null]\"","215","                    variation_value_5=\"[null]\"","216","                    alert_status=\"[null]\"","217","                    alert_text=\"[null]\"","218","                    person_id=\"[null]\"","219","                    description=\"[null]\"","220","                    component_uuid=\"DIR_UUID\"\/>","221","  <project_measures id=\"3\"","222","                    analysis_uuid=\"u1\"","223","                    metric_id=\"10\"","224","                    value=\"[null]\"","225","                    text_value=\"[null]\"","226","                    measure_data=\"[null]\"","227","                    variation_value_1=\"[null]\"","228","                    variation_value_2=\"[null]\"","229","                    variation_value_3=\"[null]\"","230","                    variation_value_4=\"[null]\"","231","                    variation_value_5=\"[null]\"","232","                    alert_status=\"[null]\"","233","                    alert_text=\"[null]\"","234","                    person_id=\"[null]\"","235","                    description=\"[null]\"","236","                    component_uuid=\"FILE_UUID\"\/>","237","  <project_measures id=\"4\"","238","                    analysis_uuid=\"u1\"","239","                    metric_id=\"10\"","240","                    value=\"[null]\"","241","                    text_value=\"[null]\"","242","                    measure_data=\"[null]\"","243","                    variation_value_1=\"[null]\"","244","                    variation_value_2=\"[null]\"","245","                    variation_value_3=\"[null]\"","246","                    variation_value_4=\"[null]\"","247","                    variation_value_5=\"[null]\"","248","                    alert_status=\"[null]\"","249","                    alert_text=\"[null]\"","250","                    person_id=\"[null]\"","251","                    description=\"[null]\"","252","                    component_uuid=\"TEST_FILE_UUID\"\/>","253","","256","             uuid=\"u2\"","257","             component_uuid=\"PROJECT_UUID\"","281","  <project_measures id=\"5\"","282","                    analysis_uuid=\"u2\"","283","                    metric_id=\"10\"","284","                    value=\"[null]\"","285","                    text_value=\"[null]\"","286","                    measure_data=\"[null]\"","287","                    variation_value_1=\"[null]\"","288","                    variation_value_2=\"[null]\"","289","                    variation_value_3=\"[null]\"","290","                    variation_value_4=\"[null]\"","291","                    variation_value_5=\"[null]\"","292","                    alert_status=\"[null]\"","293","                    alert_text=\"[null]\"","294","                    person_id=\"[null]\"","295","                    description=\"[null]\"","296","                    component_uuid=\"PROJECT_UUID\"\/>","297","  <!--<project_measures id=\"6\"-->","298","                    <!--analysis_uuid=\"u2\"-->","299","                    <!--metric_id=\"10\"-->","300","                    <!--value=\"[null]\"-->","301","                    <!--text_value=\"[null]\"-->","302","                    <!--measure_data=\"[null]\"-->","303","                    <!--variation_value_1=\"[null]\"-->","304","                    <!--variation_value_2=\"[null]\"-->","305","                    <!--variation_value_3=\"[null]\"-->","306","                    <!--variation_value_4=\"[null]\"-->","307","                    <!--variation_value_5=\"[null]\"-->","308","                    <!--alert_status=\"[null]\"-->","309","                    <!--alert_text=\"[null]\"-->","310","                    <!--person_id=\"[null]\"-->","311","                    <!--description=\"[null]\"-->","312","                    <!--component_uuid=\"DIR_UUID\"\/>-->","313","  <!--<project_measures id=\"7\"-->","314","                    <!--analysis_uuid=\"u2\"-->","315","                    <!--metric_id=\"10\"-->","316","                    <!--value=\"[null]\"-->","317","                    <!--text_value=\"[null]\"-->","318","                    <!--measure_data=\"[null]\"-->","319","                    <!--variation_value_1=\"[null]\"-->","320","                    <!--variation_value_2=\"[null]\"-->","321","                    <!--variation_value_3=\"[null]\"-->","322","                    <!--variation_value_4=\"[null]\"-->","323","                    <!--variation_value_5=\"[null]\"-->","324","                    <!--alert_status=\"[null]\"-->","325","                    <!--alert_text=\"[null]\"-->","326","                    <!--person_id=\"[null]\"-->","327","                    <!--description=\"[null]\"-->","328","                    <!--component_uuid=\"FILE_UUID\"\/>-->","329","  <!--<project_measures id=\"8\"-->","330","                    <!--analysis_uuid=\"u2\"-->","331","                    <!--metric_id=\"10\"-->","332","                    <!--value=\"[null]\"-->","333","                    <!--text_value=\"[null]\"-->","334","                    <!--measure_data=\"[null]\"-->","335","                    <!--variation_value_1=\"[null]\"-->","336","                    <!--variation_value_2=\"[null]\"-->","337","                    <!--variation_value_3=\"[null]\"-->","338","                    <!--variation_value_4=\"[null]\"-->","339","                    <!--variation_value_5=\"[null]\"-->","340","                    <!--alert_status=\"[null]\"-->","341","                    <!--alert_text=\"[null]\"-->","342","                    <!--person_id=\"[null]\"-->","343","                    <!--description=\"[null]\"-->","344","                    <!--component_uuid=\"TEST_FILE_UUID\"\/>-->","345",""],"delete":["0","<!--","1","","2","What has been changed : purge_status=1 on snapshot 4 (PRJ) and snapshots 5 and 6 (DIR\/FIL) are deleted","3","","4","-->","5","","10","            uuid=\"ABCD\"","12","            project_uuid=\"ABCD\"","24","            tags=\"[null]\"","33","            root_uuid=\"ABCD\"","50","            uuid=\"EFGH\"","51","            uuid_path=\".ABCD.\"","52","            project_uuid=\"ABCD\"","53","            module_uuid=\"ABCD\"","64","            tags=\"[null]\"","73","            root_uuid=\"ABCD\"","90","            uuid=\"GHIJ\"","91","            uuid_path=\".ABCD.EFGH.\"","92","            project_uuid=\"ABCD\"","93","            module_uuid=\"ABCD\"","94","            module_uuid_path=\".ABCD.\"","104","            tags=\"[null]\"","113","            root_uuid=\"ABCD\"","131","             component_uuid=\"ABCD\"","157","             uuid=\"u4\"","158","             component_uuid=\"ABCD\""]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["376","    <if test=\"query.scopes != null\">","377","      and p.scope in","378","      <foreach collection=\"query.scopes\" item=\"scope\" open=\"(\" close=\")\" separator=\",\">","379","        #{scope,jdbcType=VARCHAR}","380","      <\/foreach>","381","    <\/if>"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentTreeQuery.java":[{"add":["44","  @CheckForNull","45","  private final ArrayList<String> scopes;","52","    this.scopes = builder.scopes == null ? null : newArrayList(builder.scopes);","63","  public Collection<String> getScopes() {","64","    return scopes;","65","  }","66","","67","  @CheckForNull","108","    @CheckForNull","109","    private Collection<String> scopes;","132","    public Builder setScopes(Collection<String> scopes) {","133","      this.scopes = scopes;","134","      return this;","135","    }","136",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["56","import static java.util.Collections.emptyList;","135","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"PROJECT_UUID\"), asList(Scopes.DIRECTORY, Scopes.FILE),","141","    dbTester.assertDbUnit(getClass(), \"shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml\", \"projects\", \"snapshots\", \"project_measures\");","360","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"1\"), emptyList(),","630","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, THE_PROJECT_UUID), emptyList(), 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","634","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, rootProjectUuid), emptyList(), 30, Optional.of(30), system2, asList(disabledComponentUuids));"],"delete":["134","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"ABCD\"), new String[] {Scopes.DIRECTORY, Scopes.FILE},","140","    dbTester.assertDbUnit(getClass(), \"shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml\", \"projects\", \"snapshots\");","359","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"1\"), new String[0],","629","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, THE_PROJECT_UUID), new String[0], 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","633","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, rootProjectUuid), new String[0], 30, Optional.of(30), system2, asList(disabledComponentUuids));"]}],"server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles.xml":[{"add":["4","            uuid=\"PROJECT_UUID\"","6","            project_uuid=\"PROJECT_UUID\"","26","            root_uuid=\"PROJECT_UUID\"","27","            tags=\"[null]\"","29","            b_copy_component_uuid=\"[null]\"","44","            uuid=\"DIR_UUID\"","45","            uuid_path=\".PROJECT_UUID.\"","46","            project_uuid=\"PROJECT_UUID\"","47","            module_uuid=\"PROJECT_UUID\"","66","            root_uuid=\"PROJECT_UUID\"","67","            tags=\"[null]\"","69","            b_copy_component_uuid=\"[null]\"","84","            uuid=\"FILE_UUID\"","85","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","86","            project_uuid=\"PROJECT_UUID\"","87","            module_uuid=\"PROJECT_UUID\"","88","            module_uuid_path=\".PROJECT_UUID.\"","106","            root_uuid=\"PROJECT_UUID\"","107","            tags=\"[null]\"","109","            b_copy_component_uuid=\"[null]\"","110","            b_description=\"[null]\"","111","            b_enabled=\"[false]\"","112","            b_uuid_path=\"[null]\"","113","            b_language=\"[null]\"","114","            b_long_name=\"[null]\"","115","            b_module_uuid=\"[null]\"","116","            b_module_uuid_path=\"[null]\"","117","            b_name=\"[null]\"","118","            b_path=\"[null]\"","119","            b_qualifier=\"[null]\"","120","  \/>","121","","122","  <!-- unit test file -->","123","  <projects organization_uuid=\"org1\"","124","            uuid=\"TEST_FILE_UUID\"","125","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","126","            project_uuid=\"PROJECT_UUID\"","127","            module_uuid=\"PROJECT_UUID\"","128","            module_uuid_path=\".PROJECT_UUID.\"","129","            main_branch_project_uuid=\"[null]\"","130","            created_at=\"[null]\"","131","            long_name=\"[null]\"","132","            scope=\"FIL\"","133","            qualifier=\"UTS\"","134","            kee=\"project:my\/dir\/FileTest.java\"","135","            name=\"my\/dir\/FileTest.java\"","136","            description=\"[null]\"","137","            private=\"[false]\"","138","            language=\"java\"","139","            copy_component_uuid=\"[null]\"","140","            developer_uuid=\"[null]\"","141","            path=\"[null]\"","142","            deprecated_kee=\"[null]\"","143","            authorization_updated_at=\"[null]\"","144","            id=\"4\"","145","            enabled=\"[true]\"","146","            root_uuid=\"PROJECT_UUID\"","147","            tags=\"[null]\"","148","            b_changed=\"[false]\"","149","            b_copy_component_uuid=\"[null]\"","165","             component_uuid=\"PROJECT_UUID\"","189","  <project_measures id=\"1\"","190","                    analysis_uuid=\"u1\"","191","                    metric_id=\"10\"","192","                    value=\"[null]\"","193","                    text_value=\"[null]\"","194","                    measure_data=\"[null]\"","195","                    variation_value_1=\"[null]\"","196","                    variation_value_2=\"[null]\"","197","                    variation_value_3=\"[null]\"","198","                    variation_value_4=\"[null]\"","199","                    variation_value_5=\"[null]\"","200","                    alert_status=\"[null]\"","201","                    alert_text=\"[null]\"","202","                    person_id=\"[null]\"","203","                    description=\"[null]\"","204","                    component_uuid=\"PROJECT_UUID\"\/>","205","  <project_measures id=\"2\"","206","                    analysis_uuid=\"u1\"","207","                    metric_id=\"10\"","208","                    value=\"[null]\"","209","                    text_value=\"[null]\"","210","                    measure_data=\"[null]\"","211","                    variation_value_1=\"[null]\"","212","                    variation_value_2=\"[null]\"","213","                    variation_value_3=\"[null]\"","214","                    variation_value_4=\"[null]\"","215","                    variation_value_5=\"[null]\"","216","                    alert_status=\"[null]\"","217","                    alert_text=\"[null]\"","218","                    person_id=\"[null]\"","219","                    description=\"[null]\"","220","                    component_uuid=\"DIR_UUID\"\/>","221","  <project_measures id=\"3\"","222","                    analysis_uuid=\"u1\"","223","                    metric_id=\"10\"","224","                    value=\"[null]\"","225","                    text_value=\"[null]\"","226","                    measure_data=\"[null]\"","227","                    variation_value_1=\"[null]\"","228","                    variation_value_2=\"[null]\"","229","                    variation_value_3=\"[null]\"","230","                    variation_value_4=\"[null]\"","231","                    variation_value_5=\"[null]\"","232","                    alert_status=\"[null]\"","233","                    alert_text=\"[null]\"","234","                    person_id=\"[null]\"","235","                    description=\"[null]\"","236","                    component_uuid=\"FILE_UUID\"\/>","237","  <project_measures id=\"4\"","238","                    analysis_uuid=\"u1\"","239","                    metric_id=\"10\"","240","                    value=\"[null]\"","241","                    text_value=\"[null]\"","242","                    measure_data=\"[null]\"","243","                    variation_value_1=\"[null]\"","244","                    variation_value_2=\"[null]\"","245","                    variation_value_3=\"[null]\"","246","                    variation_value_4=\"[null]\"","247","                    variation_value_5=\"[null]\"","248","                    alert_status=\"[null]\"","249","                    alert_text=\"[null]\"","250","                    person_id=\"[null]\"","251","                    description=\"[null]\"","252","                    component_uuid=\"TEST_FILE_UUID\"\/>","253","","256","             uuid=\"u2\"","257","             component_uuid=\"PROJECT_UUID\"","281","  <project_measures id=\"5\"","282","                    analysis_uuid=\"u2\"","283","                    metric_id=\"10\"","284","                    value=\"[null]\"","285","                    text_value=\"[null]\"","286","                    measure_data=\"[null]\"","287","                    variation_value_1=\"[null]\"","288","                    variation_value_2=\"[null]\"","289","                    variation_value_3=\"[null]\"","290","                    variation_value_4=\"[null]\"","291","                    variation_value_5=\"[null]\"","292","                    alert_status=\"[null]\"","293","                    alert_text=\"[null]\"","294","                    person_id=\"[null]\"","295","                    description=\"[null]\"","296","                    component_uuid=\"PROJECT_UUID\"\/>","297","  <project_measures id=\"6\"","298","                    analysis_uuid=\"u2\"","299","                    metric_id=\"10\"","300","                    value=\"[null]\"","301","                    text_value=\"[null]\"","302","                    measure_data=\"[null]\"","303","                    variation_value_1=\"[null]\"","304","                    variation_value_2=\"[null]\"","305","                    variation_value_3=\"[null]\"","306","                    variation_value_4=\"[null]\"","307","                    variation_value_5=\"[null]\"","308","                    alert_status=\"[null]\"","309","                    alert_text=\"[null]\"","310","                    person_id=\"[null]\"","311","                    description=\"[null]\"","312","                    component_uuid=\"DIR_UUID\"\/>","313","  <project_measures id=\"7\"","314","                    analysis_uuid=\"u2\"","315","                    metric_id=\"10\"","316","                    value=\"[null]\"","317","                    text_value=\"[null]\"","318","                    measure_data=\"[null]\"","319","                    variation_value_1=\"[null]\"","320","                    variation_value_2=\"[null]\"","321","                    variation_value_3=\"[null]\"","322","                    variation_value_4=\"[null]\"","323","                    variation_value_5=\"[null]\"","324","                    alert_status=\"[null]\"","325","                    alert_text=\"[null]\"","326","                    person_id=\"[null]\"","327","                    description=\"[null]\"","328","                    component_uuid=\"FILE_UUID\"\/>","329","  <project_measures id=\"8\"","330","                    analysis_uuid=\"u2\"","331","                    metric_id=\"10\"","332","                    value=\"[null]\"","333","                    text_value=\"[null]\"","334","                    measure_data=\"[null]\"","335","                    variation_value_1=\"[null]\"","336","                    variation_value_2=\"[null]\"","337","                    variation_value_3=\"[null]\"","338","                    variation_value_4=\"[null]\"","339","                    variation_value_5=\"[null]\"","340","                    alert_status=\"[null]\"","341","                    alert_text=\"[null]\"","342","                    person_id=\"[null]\"","343","                    description=\"[null]\"","344","                    component_uuid=\"TEST_FILE_UUID\"\/>","345",""],"delete":["4","            uuid=\"ABCD\"","6","            project_uuid=\"ABCD\"","26","            root_uuid=\"ABCD\"","42","            uuid=\"EFGH\"","43","            uuid_path=\".ABCD.\"","44","            project_uuid=\"ABCD\"","45","            module_uuid=\"ABCD\"","64","            root_uuid=\"ABCD\"","80","            uuid=\"GHIJ\"","81","            uuid_path=\".ABCD.EFGH.\"","82","            project_uuid=\"ABCD\"","83","            module_uuid=\"ABCD\"","84","            module_uuid_path=\".ABCD.\"","102","            root_uuid=\"ABCD\"","119","             component_uuid=\"ABCD\"","145","             uuid=\"u4\"","146","             component_uuid=\"ABCD\""]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["65","    deleteDataOfComponentsWithoutHistoricalData(session, rootUuid, conf.getScopesWithoutHistoricalData(), commands);","120","  private void deleteDataOfComponentsWithoutHistoricalData(DbSession dbSession, String rootUuid, Collection<String> scopesWithoutHistoricalData, PurgeCommands purgeCommands) {","121","    if (scopesWithoutHistoricalData.isEmpty()) {","135","          .setScopes(scopesWithoutHistoricalData)"],"delete":["23","import java.util.Arrays;","66","    deleteDataOfComponentsWithoutHistoricalData(session, rootUuid, conf.scopesWithoutHistoricalData(), commands);","121","  private void deleteDataOfComponentsWithoutHistoricalData(DbSession dbSession, String rootUuid, String[] scopesWithoutHistoricalData, PurgeCommands purgeCommands) {","122","    if (scopesWithoutHistoricalData.length == 0) {","136","          .setQualifiers(Arrays.asList(scopesWithoutHistoricalData))"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["36","import org.sonar.api.resources.Scopes;","1284","  public void select_descendants_with_children_strategy() {","1290","    ComponentDto fileInProject = newFileDto(project, null, FILE_1_UUID).setDbKey(\"file-key-1\").setName(\"File One\");","1291","    db.components().insertComponent(fileInProject);","1292","    ComponentDto file1InModule = newFileDto(module, null, FILE_2_UUID).setDbKey(\"file-key-2\").setName(\"File Two\");","1293","    db.components().insertComponent(file1InModule);","1294","    ComponentDto file2InModule = newFileDto(module, null, FILE_3_UUID).setDbKey(\"file-key-3\").setName(\"File Three\");","1295","    db.components().insertComponent(file2InModule);","1347","","1348","    \/\/ test filtering by scope","1349","    query = newTreeQuery(project.uuid()).setScopes(asList(Scopes.FILE)).build();","1350","    assertThat(underTest.selectDescendants(dbSession, query))","1351","      .extracting(ComponentDto::uuid)","1352","      .containsExactlyInAnyOrder(fileInProject.uuid());","1353","    query = newTreeQuery(project.uuid()).setScopes(asList(Scopes.PROJECT)).build();","1354","    assertThat(underTest.selectDescendants(dbSession, query))","1355","      .extracting(ComponentDto::uuid)","1356","      .containsExactlyInAnyOrder(module.uuid());"],"delete":["1283","  public void select_descendants_with_children_stragegy() {","1289","    ComponentDto file1 = newFileDto(project, null, FILE_1_UUID).setDbKey(\"file-key-1\").setName(\"File One\");","1290","    db.components().insertComponent(file1);","1291","    ComponentDto file2 = newFileDto(module, null, FILE_2_UUID).setDbKey(\"file-key-2\").setName(\"File Two\");","1292","    db.components().insertComponent(file2);","1293","    ComponentDto file3 = newFileDto(module, null, FILE_3_UUID).setDbKey(\"file-key-3\").setName(\"File Three\");","1294","    db.components().insertComponent(file3);"]}]}},"492942631b3c2612fd8ed9b03bd7db3261a38e58":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceTest.java":"MODIFY","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/ProjectTester.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentKeyUpdaterMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectKeyUpdateTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":[{"add":["78","    assertThat(db.getDbClient().componentDao().selectByKey(dbSession, \"sample2:root:src\/InactiveFile.xoo\")).isNotNull();","80","    assertThat(dbClient.componentDao().selectByKey(dbSession, inactiveFile.getDbKey())).isAbsent();","188","    assertComponentKeyUpdated(inactiveModule.getDbKey(), \"your_project:root:inactive_module\");","189","    assertComponentKeyUpdated(inactiveFile.getDbKey(), \"your_project:root:module:src\/InactiveFile.xoo\");"],"delete":["79","    assertThat(dbClient.componentDao().selectByKey(dbSession, inactiveFile.getDbKey())).isPresent();","187","    assertComponentKeyNotUpdated(inactiveModule.getDbKey());","188","    assertComponentKeyNotUpdated(inactiveFile.getDbKey());","196","  private void assertComponentKeyNotUpdated(String key) {","197","    assertThat(dbClient.componentDao().selectByKey(dbSession, key)).isPresent();","198","  }","199",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceTest.java":[{"add":["67","    assertComponentKeyUpdated(inactiveModule.getDbKey(), \"your_project:root:inactive_module\");","68","    assertComponentKeyUpdated(inactiveFile.getDbKey(), \"your_project:root:module:src\/InactiveFile.xoo\");"],"delete":["67","    assertComponentKeyNotUpdated(inactiveModule.getDbKey());","68","    assertComponentKeyNotUpdated(inactiveFile.getDbKey());"]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/ProjectTester.java":[{"add":["24","import org.sonarqube.ws.Components;","27","import org.sonarqube.ws.client.HttpException;","28","import org.sonarqube.ws.client.components.ShowRequest;","69","","70","  public boolean exists(String projectKey) {","71","    try {","72","      Components.ShowWsResponse response = session.wsClient().components().show(new ShowRequest().setComponent(projectKey));","73","      return response.getComponent() != null;","74","    } catch (HttpException e) {","75","      if (e.code() == 404) {","76","        return false;","77","      }","78","      throw new IllegalStateException(e);","79","    }","80","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentKeyUpdaterMapper.xml":[{"add":[],"delete":["31","    and enabled = ${_true}","40","    and enabled = ${_true}"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDao.java":[{"add":["85","    return collectAllModules(projectUuid, stringToReplace, mapper(dbSession), false)","111","    Set<ResourceDto> modules = collectAllModules(projectUuid, stringToReplace, mapper, true);","120","        Set<ResourceDto> branchModules = collectAllModules(branch.getUuid(), stringToReplace, mapper, true);","167","  private static Set<ResourceDto> collectAllModules(String projectUuid, String stringToReplace, ComponentKeyUpdaterMapper mapper, boolean includeDisabled) {","170","    if (project.getKey().contains(stringToReplace) && (project.isEnabled() || includeDisabled)) {","174","      modules.addAll(collectAllModules(submodule.getUuid(), stringToReplace, mapper, includeDisabled));"],"delete":["85","    return collectAllModules(projectUuid, stringToReplace, mapper(dbSession))","111","    Set<ResourceDto> modules = collectAllModules(projectUuid, stringToReplace, mapper);","120","        Set<ResourceDto> branchModules = collectAllModules(branch.getUuid(), stringToReplace, mapper);","167","  private static Set<ResourceDto> collectAllModules(String projectUuid, String stringToReplace, ComponentKeyUpdaterMapper mapper) {","170","    if (project.getKey().contains(stringToReplace)) {","174","      modules.addAll(collectAllModules(submodule.getUuid(), stringToReplace, mapper));"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectKeyUpdateTest.java":[{"add":["23","import java.io.File;","24","import java.io.IOException;","25","import java.io.OutputStream;","26","import java.util.ArrayList;","30","import java.util.Properties;","33","import org.apache.commons.io.FileUtils;","34","import org.apache.commons.lang.StringUtils;","40","import org.junit.rules.TemporaryFolder;","47","import org.sonarqube.ws.Projects.BulkUpdateKeyWsResponse.Key;","52","import org.sonarqube.ws.client.components.TreeRequest;","53","import org.sonarqube.ws.client.projects.BulkUpdateKeyRequest;","57","import static java.util.Arrays.asList;","59","import static org.assertj.core.groups.Tuple.tuple;","71","  @Rule","72","  public TemporaryFolder temp = new TemporaryFolder();","82","  public void update_key() throws IOException {","83","    Organizations.Organization organization = tester.organizations().generate();","84","    File projectDir = new XooProjectBuilder(PROJECT_KEY)","85","      .build(temp.newFolder());","86","    analyze(organization, projectDir);","87","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","89","    String newProjectKey = \"renamed\";","90","    updateProjectKey(PROJECT_KEY, newProjectKey, false);","92","    assertThat(tester.projects().exists(PROJECT_KEY)).isFalse();","93","    assertThat(tester.projects().exists(newProjectKey)).isTrue();","101","    updateProjectKey(project.getKey(), \"two\", false);","118","    updateProjectKey(project.getKey(), \"two\", false);","158","    updateModuleKey(initialKey, newKey);","184","    updateModuleKey(initialKey, newKey);","209","  }","211","  \/**","212","   * SONAR-10511","213","   *\/","214","  @Test","215","  public void update_key_of_disabled_files() throws Exception {","216","    Organizations.Organization organization = tester.organizations().generate();","217","","218","    \/\/ first analysis","219","    File projectWith2Files = new XooProjectBuilder(PROJECT_KEY)","220","      .setFilesPerModule(2)","221","      .build(temp.newFolder());","222","    analyze(organization, projectWith2Files);","223","    assertThat(countFilesInProject()).isEqualTo(2);","224","","225","    \/\/ second analysis emulates a deletion of file","226","    File projectWith1File = new XooProjectBuilder(PROJECT_KEY)","227","      .setFilesPerModule(1)","228","      .build(temp.newFolder());","229","    analyze(organization, projectWith1File);","230","    assertThat(countFilesInProject()).isEqualTo(1);","231","","232","    \/\/ update the project key","233","    updateProjectKey(PROJECT_KEY, \"renamed\", false);","234","    ItUtils.expectNotFoundError(() -> tester.wsClient().components().show(new ShowRequest().setComponent(PROJECT_KEY)));","235","","236","    \/\/ first analysis of the new project, which re-enables the deleted file","237","    analyze(organization, projectWith2Files);","238","    assertThat(countFilesInProject()).isEqualTo(2);","239","  }","240","","241","  \/**","242","   * SONAR-10511","243","   *\/","244","  @Test","245","  public void update_of_project_key_includes_disabled_modules() throws Exception {","246","    Organizations.Organization organization = tester.organizations().generate();","247","","248","    \/\/ first analysis","249","    File projectWithModulesAB = new XooProjectBuilder(PROJECT_KEY)","250","      .addModules(\"module_a\", \"module_b\")","251","      .build(temp.newFolder());","252","    analyze(organization, projectWithModulesAB);","253","    assertThat(countFilesInProject()).isEqualTo(3);","254","","255","    \/\/ second analysis emulates deletion of module_b","256","    File projectWithModuleA = new XooProjectBuilder(PROJECT_KEY)","257","      .addModules(\"module_a\")","258","      .build(temp.newFolder());","259","    analyze(organization, projectWithModuleA);","260","    assertThat(countFilesInProject()).isEqualTo(2);","261","","262","    \/\/ update the project key","263","    updateProjectKey(PROJECT_KEY, \"renamed\", false);","264","    assertThat(tester.projects().exists(PROJECT_KEY)).isFalse();","265","","266","    \/\/ analysis of new project, re-enabling the deleted module","267","    File projectWithModulesBC = new XooProjectBuilder(PROJECT_KEY)","268","      .addModules(\"module_b\", \"module_c\")","269","      .build(temp.newFolder());","270","    analyze(organization, projectWithModulesBC);","271","    assertThat(countFilesInProject()).isEqualTo(3);","272","  }","273","","274","  @Test","275","  public void simulate_update_key_of_modules() throws Exception {","276","    Organizations.Organization organization = tester.organizations().generate();","277","","278","    File project = new XooProjectBuilder(PROJECT_KEY)","279","      .addModules(\"module_a\", \"module_b\")","280","      .build(temp.newFolder());","281","    analyze(organization, project);","282","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","283","","284","    \/\/ simulate update of project key","285","    Projects.BulkUpdateKeyWsResponse response = updateProjectKey(PROJECT_KEY, \"renamed\", true);","286","","287","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","288","    assertThat(tester.projects().exists(\"renamed\")).isFalse();","289","    assertThat(response.getKeysList())","290","      .extracting(Key::getKey, Key::getNewKey)","291","      .containsExactlyInAnyOrder(","292","        tuple(PROJECT_KEY, \"renamed\"),","293","        tuple(PROJECT_KEY + \":module_a\", \"renamed:module_a\"),","294","        tuple(PROJECT_KEY + \":module_b\", \"renamed:module_b\"));","295","  }","296","","297","  @Test","298","  public void simulate_update_key_of_disabled_modules() throws Exception {","299","    Organizations.Organization organization = tester.organizations().generate();","300","","301","    \/\/ first analysis","302","    File projectWithModulesAB = new XooProjectBuilder(PROJECT_KEY)","303","      .addModules(\"module_a\", \"module_b\")","304","      .build(temp.newFolder());","305","    analyze(organization, projectWithModulesAB);","306","    assertThat(countFilesInProject()).isEqualTo(3);","307","","308","    \/\/ second analysis emulates deletion of module_b","309","    File projectWithModuleA = new XooProjectBuilder(PROJECT_KEY)","310","      .addModules(\"module_a\")","311","      .build(temp.newFolder());","312","    analyze(organization, projectWithModuleA);","313","    assertThat(countFilesInProject()).isEqualTo(2);","314","","315","    \/\/ update the project key","316","    Projects.BulkUpdateKeyWsResponse response = updateProjectKey(PROJECT_KEY, \"renamed\", true);","317","","318","    assertThat(tester.projects().exists(PROJECT_KEY)).isTrue();","319","    assertThat(tester.projects().exists(\"renamed\")).isFalse();","320","    assertThat(response.getKeysList())","321","      .extracting(Key::getKey, Key::getNewKey)","322","      .containsExactlyInAnyOrder(","323","        tuple(PROJECT_KEY, \"renamed\"),","324","        tuple(PROJECT_KEY + \":module_a\", \"renamed:module_a\"));","325","  }","326","","327","  private int countFilesInProject() {","328","    TreeRequest request = new TreeRequest().setComponent(PROJECT_KEY).setQualifiers(asList(\"FIL\"));","329","    return tester.wsClient().components().tree(request).getComponentsCount();","330","  }","331","","332","  private void analyze(Organizations.Organization organization, File projectDir) {","333","    orchestrator.executeBuild(SonarScanner.create(projectDir,","334","      \"sonar.organization\", organization.getKey(),","335","      \"sonar.login\", \"admin\", \"sonar.password\", \"admin\"));","348","  private void updateModuleKey(String initialKey, String newKey) {","352","  private Projects.BulkUpdateKeyWsResponse updateProjectKey(String initialKey, String newKey, boolean dryRun) {","353","    return tester.wsClient().projects().bulkUpdateKey(new BulkUpdateKeyRequest()","354","      .setProject(initialKey)","355","      .setFrom(initialKey)","356","      .setTo(newKey)","357","      .setDryRun(String.valueOf(dryRun)));","358","  }","359","","361","    return tester.projects().provision(organization, r -> r.setProject(key).setName(name));","400","  private static class XooProjectBuilder {","401","    private final String key;","402","    private final List<String> moduleKeys = new ArrayList<>();","403","    private int filesPerModule = 1;","404","","405","    XooProjectBuilder(String projectKey) {","406","      this.key = projectKey;","407","    }","408","","409","    XooProjectBuilder addModules(String key, String... otherKeys) {","410","      this.moduleKeys.add(key);","411","      this.moduleKeys.addAll(asList(otherKeys));","412","      return this;","413","    }","414","","415","    XooProjectBuilder setFilesPerModule(int i) {","416","      this.filesPerModule = i;","417","      return this;","418","    }","419","","420","    File build(File dir) {","421","      for (String moduleKey : moduleKeys) {","422","        generateModule(moduleKey, new File(dir, moduleKey), new Properties());","423","      }","424","      Properties additionalProps = new Properties();","425","      additionalProps.setProperty(\"sonar.modules\", StringUtils.join(moduleKeys, \",\"));","426","      generateModule(key, dir, additionalProps);","427","      return dir;","428","    }","429","","430","    private void generateModule(String key, File dir, Properties additionalProps) {","431","      try {","432","        File sourceDir = new File(dir, \"src\");","433","        FileUtils.forceMkdir(sourceDir);","434","        for (int i = 0; i < filesPerModule; i++) {","435","          File sourceFile = new File(sourceDir, \"File\" + i + \".xoo\");","436","          FileUtils.write(sourceFile, \"content of \" + sourceFile.getName());","437","        }","438","        Properties props = new Properties();","439","        props.setProperty(\"sonar.projectKey\", key);","440","        props.setProperty(\"sonar.projectName\", key);","441","        props.setProperty(\"sonar.projectVersion\", \"1.0\");","442","        props.setProperty(\"sonar.sources\", sourceDir.getName());","443","        props.putAll(additionalProps);","444","        File propsFile = new File(dir, \"sonar-project.properties\");","445","        try (OutputStream output = FileUtils.openOutputStream(propsFile)) {","446","          props.store(output, \"generated\");","447","        }","448","      } catch (IOException e) {","449","        throw new IllegalStateException(e);","450","      }","451","    }","453",""],"delete":["44","import org.sonarqube.ws.client.projects.CreateRequest;","59","","69","  public void update_key() {","70","    analyzeXooSample();","71","    String newProjectKey = \"another_project_key\";","72","    Components.Component project = tester.wsClient().components().show(new ShowRequest().setComponent(PROJECT_KEY)).getComponent();","73","    assertThat(project.getKey()).isEqualTo(PROJECT_KEY);","75","    tester.wsClient().projects().updateKey(new UpdateKeyRequest()","76","      .setFrom(PROJECT_KEY)","77","      .setTo(newProjectKey));","79","    assertThat(tester.wsClient().components().show(new ShowRequest().setComponentId(project.getId())).getComponent().getKey()).isEqualTo(newProjectKey);","87","    updateKey(project, \"two\");","104","    updateKey(project, \"two\");","144","    updateKey(initialKey, newKey);","170","    updateKey(initialKey, newKey);","208","  private void updateKey(Projects.CreateWsResponse.Project project, String newKey) {","209","    tester.wsClient().projects().updateKey(new UpdateKeyRequest().setFrom(project.getKey()).setTo(newKey));","210","  }","211","","212","  private void updateKey(String initialKey, String newKey) {","217","    CreateRequest createRequest = new CreateRequest().setProject(key).setName(name).setOrganization(organization.getKey());","218","    return tester.wsClient().projects().create(createRequest).getProject();","257","  private void analyzeXooSample() {","258","    SonarScanner build = SonarScanner.create(projectDir(\"shared\/xoo-sample\"));","259","    orchestrator.executeBuild(build);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentKeyUpdaterDaoTest.java":[{"add":["65","  public void updateKey_updates_disabled_components() {","77","    assertThat(result)","78","      .hasSize(5)","79","      .extracting(ComponentDto::getDbKey)","80","      .containsOnlyOnce(\"your_project\", \"your_project:directory\", \"your_project:directory\/file\", \"your_project:inactive_directory\", \"your_project:inactive_directory\/file\");","220","  public void bulk_update_key_updates_disabled_components() {","228","    assertThat(result)","229","      .hasSize(3)","230","      .extracting(ComponentDto::getDbKey)","231","      .containsOnlyOnce(\"your_project\", \"your_project:module\", \"your_project:inactive_module\");","334","  public void simulate_bulk_update_key_does_not_return_disable_components() {","338","    db.components().insertComponent(newPrivateProjectDto(db.getDefaultOrganization(), \"D\").setDbKey(\"other-project\"));","342","    assertThat(result).containsOnly(","343","      entry(\"project\", \"new-project\"),","344","      entry(\"project:enabled-module\", \"new-project:enabled-module\"));"],"delete":["65","  public void updateKey_does_not_update_inactive_components() {","77","    assertThat(result).hasSize(5).extracting(ComponentDto::getDbKey)","78","      .containsOnlyOnce(\"your_project\", \"your_project:directory\", \"your_project:directory\/file\", \"my_project:inactive_directory\", \"my_project:inactive_directory\/file\");","218","  public void bulk_update_key_does_not_update_inactive_components() {","226","    assertThat(result).hasSize(3).extracting(ComponentDto::getDbKey)","227","      .containsOnlyOnce(\"your_project\", \"your_project:module\", \"my_project:inactive_module\");","330","  public void simulate_bulk_update_key_do_not_return_disable_components() {","337","    assertThat(result)","338","      .hasSize(2)","339","      .containsOnly(entry(\"project\", \"new-project\"), entry(\"project:enabled-module\", \"new-project:enabled-module\"));"]}]}},"84d384a1dcf882eee912033382831968f6949cce":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/text\/MacroInterpreterTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/text\/RuleMacro.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/text\/MacroInterpreterTest.java":[{"add":["50","    \/\/ key of repository and rule can contain alphanumeric latin characters, dashes, underscores and dots","51","    String ruleKey = \"Some_Repo-Key.1:Some_Rule-Key.1\";","54","    \/\/ colon should be escaped","55","    assertThat(result).isEqualTo(\"See <a href='\" + path + \"\/coding_rules#rule_key=Some_Repo-Key.1%3ASome_Rule-Key.1'>Some_Rule-Key.1<\/a> for detail.\");"],"delete":["50","    String ruleKey = \"repo:key\";","53","    assertThat(result).isEqualTo(\"See <a href='\" + path + \"\/coding_rules#rule_key=\" + ruleKey + \"'>key<\/a> for detail.\");","56","  @Test","57","  public void should_replace_rule_macro_containing_digit_and_dash() {","58","    String ruleKey = \"my-repo1:my-key1\";","59","    String origin = \"See {rule:\" + ruleKey + \"} for detail.\";","60","    String result = interpreter.interpret(origin);","61","    assertThat(result).isEqualTo(\"See <a href='\" + path + \"\/coding_rules#rule_key=\" + ruleKey + \"'>my-key1<\/a> for detail.\");","62","  }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/text\/RuleMacro.java":[{"add":["23","  private static final String COLON = \"%3A\";","40","    return \"<a href='\" + contextPath + \"\/coding_rules#rule_key=$1\" + COLON + \"$2'>$2<\/a>\";"],"delete":["39","    return \"<a href='\" + contextPath + \"\/coding_rules#rule_key=$1:$2'>$2<\/a>\";"]}]}},"4ecd4bdcbc24f97a2d77aafb6273ce805976baaf":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreator.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreatorTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreator.java":[{"add":["36","import static org.apache.commons.lang.StringUtils.substring;","42","  private static final int MAX_LENGTH_AD_HOC_NAME = 200;","43","  private static final int MAX_LENGTH_AD_HOC_DESC = 16_777_215;","87","        metadata.setAdHocName(substring(adHoc.getName(), 0, MAX_LENGTH_AD_HOC_NAME));","91","        metadata.setAdHocDescription(substring(adHoc.getDescription(), 0, MAX_LENGTH_AD_HOC_DESC));"],"delete":["84","        metadata.setAdHocName(adHoc.getName());","88","        metadata.setAdHocDescription(adHoc.getDescription());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreatorTest.java":[{"add":["37","import static org.apache.commons.lang.StringUtils.repeat;","103","  public void truncate_metadata_name_and_desc_if_longer_than_max_value() {","104","    OrganizationDto organization = db.organizations().insert();","105","    NewAdHocRule addHocRule = new NewAdHocRule(ScannerReport.AdHocRule.newBuilder()","106","      .setEngineId(\"eslint\")","107","      .setRuleId(\"no-cond-assign\")","108","      .setName(repeat(\"a\", 201))","109","      .setDescription(repeat(\"a\", 16_777_216))","110","      .setSeverity(Constants.Severity.BLOCKER)","111","      .setType(ScannerReport.IssueType.BUG)","112","      .build());","113","","114","    RuleDto rule = underTest.persistAndIndex(dbSession, addHocRule, organization);","115","","116","    assertThat(rule.getMetadata().getAdHocName()).isEqualTo(repeat(\"a\", 200));","117","    assertThat(rule.getMetadata().getAdHocDescription()).isEqualTo(repeat(\"a\", 16_777_215));","118","  }","119","","120","  @Test"],"delete":[]}]}},"a80e6c126c0a99b7cb13bf2ce6672c936c69b172":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/NewSizeMeasuresStepTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportNewCoverageMeasuresStepTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/measureHistory\/DifferentialPeriodsTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/NewCoverageMeasuresStep.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/NewSizeMeasuresStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/NewSizeMeasuresStepTest.java":[{"add":["128","    assertNoRawMeasure(FILE_3_REF, NEW_LINES_KEY);","131","    assertNoRawMeasure(DIRECTORY_2_REF, NEW_LINES_KEY);","139","  public void does_not_compute_new_lines_when_no_changeset() {","142","    assertNoRawMeasures(NEW_LINES_KEY);","230","    assertNoRawMeasure(DIRECTORY_2_REF, NEW_DUPLICATED_LINES_KEY);"],"delete":["128","    assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(FILE_3_REF, NEW_LINES_KEY, 0);","131","    assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(DIRECTORY_2_REF, NEW_LINES_KEY, 0);","139","  public void compute_new_lines_with_no_changeset() {","142","    assertComputedAndAggregatedToZeroInt(NEW_LINES_KEY);","143","  }","144","","145","  @Test","146","  public void compute_new_lines_with_no_ncloc_data() {","147","    underTest.execute();","148","","149","    assertComputedAndAggregatedToZeroInt(NEW_LINES_KEY);","237","    assertRawMeasureValueOnPeriod2AndZeroOnPeriod5(DIRECTORY_2_REF, NEW_DUPLICATED_LINES_KEY, 0d);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportNewCoverageMeasuresStepTest.java":[{"add":["29","import org.sonar.server.computation.task.projectanalysis.component.TreeRootHolderRule;","47","import static org.sonar.api.measures.CoreMetrics.NEW_IT_CONDITIONS_TO_COVER_KEY;","48","import static org.sonar.api.measures.CoreMetrics.NEW_IT_LINES_TO_COVER_KEY;","49","import static org.sonar.api.measures.CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS_KEY;","50","import static org.sonar.api.measures.CoreMetrics.NEW_IT_UNCOVERED_LINES_KEY;","52","import static org.sonar.api.measures.CoreMetrics.NEW_OVERALL_CONDITIONS_TO_COVER_KEY;","53","import static org.sonar.api.measures.CoreMetrics.NEW_OVERALL_LINES_TO_COVER_KEY;","54","import static org.sonar.api.measures.CoreMetrics.NEW_OVERALL_UNCOVERED_CONDITIONS_KEY;","55","import static org.sonar.api.measures.CoreMetrics.NEW_OVERALL_UNCOVERED_LINES_KEY;","88","                  builder(FILE, FILE_1_REF).build())","89","                .build(),","93","                  builder(FILE, FILE_3_REF).build())","94","                .build())","95","            .build())","96","        .build())","97","    .build();","199","  public void zero_measures_when_nothing_has_changed() {","206","      Changeset.newChangesetBuilder().setDate(parseDate(\"2008-08-02\").getTime()).setRevision(\"rev-1\").build());","214","    verify_only_zero_measures_on_new_lines_and_conditions_measures(FILE_COMPONENT);","218","  public void zero_measures_for_FILE_component_without_CoverageData() {","219","    treeRootHolder.setRoot(FILE_COMPONENT);","222","      Changeset.newChangesetBuilder().setDate(parseDate(\"2008-05-18\").getTime()).setRevision(\"rev-1\").build());","226","    verify_only_zero_measures_on_new_lines_and_conditions_measures(FILE_COMPONENT);","244","    String newLinesToCover = NEW_IT_LINES_TO_COVER_KEY;","245","    String newUncoveredLines = NEW_IT_UNCOVERED_LINES_KEY;","246","    String newConditionsToCover = NEW_IT_CONDITIONS_TO_COVER_KEY;","247","    String newUncoveredConditions = NEW_IT_UNCOVERED_CONDITIONS_KEY;","256","    String newLinesToCover = NEW_OVERALL_LINES_TO_COVER_KEY;","257","    String newUncoveredLines = NEW_OVERALL_UNCOVERED_LINES_KEY;","258","    String newConditionsToCover = NEW_OVERALL_CONDITIONS_TO_COVER_KEY;","259","    String newUncoveredConditions = NEW_OVERALL_UNCOVERED_CONDITIONS_KEY;","272","      Changeset.newChangesetBuilder().setDate(parseDate(\"2011-01-01\").getTime()).setRevision(\"rev-1\").build());","279","      entryOf(newLinesToCover, createMeasure(2d, 0d)),","280","      entryOf(newUncoveredLines, createMeasure(1d, 0d)),","281","      entryOf(newConditionsToCover, createMeasure(0d, 0d)),","282","      entryOf(newUncoveredConditions, createMeasure(0d, 0d)));","304","    String newLinesToCover = NEW_IT_LINES_TO_COVER_KEY;","305","    String newUncoveredLines = NEW_IT_UNCOVERED_LINES_KEY;","306","    String newConditionsToCover = NEW_IT_CONDITIONS_TO_COVER_KEY;","307","    String newUncoveredConditions = NEW_IT_UNCOVERED_CONDITIONS_KEY;","318","    String newLinesToCover = NEW_OVERALL_LINES_TO_COVER_KEY;","319","    String newUncoveredLines = NEW_OVERALL_UNCOVERED_LINES_KEY;","320","    String newConditionsToCover = NEW_OVERALL_CONDITIONS_TO_COVER_KEY;","321","    String newUncoveredConditions = NEW_OVERALL_UNCOVERED_CONDITIONS_KEY;","332","    String newLinesToCover = NEW_IT_LINES_TO_COVER_KEY;","333","    String newUncoveredLines = NEW_IT_UNCOVERED_LINES_KEY;","334","    String newConditionsToCover = NEW_IT_CONDITIONS_TO_COVER_KEY;","335","    String newUncoveredConditions = NEW_IT_UNCOVERED_CONDITIONS_KEY;","352","      entryOf(metricKeys.newUncoveredConditions, createMeasure(4d, 1d)));","357","      entryOf(metricKeys.newUncoveredConditions, createMeasure(14d, 6d)));","362","      entryOf(metricKeys.newUncoveredConditions, createMeasure(9d, 6d)));","368","      entryOf(metricKeys.newUncoveredConditions, createMeasure(4d, 1d)));","373","      entryOf(metricKeys.newUncoveredConditions, createMeasure(23d, 12d)));","390","      CoreMetrics.NEW_UNCOVERED_LINES_KEY, CoreMetrics.NEW_UNCOVERED_CONDITIONS_KEY);","401","      NEW_IT_LINES_TO_COVER_KEY, NEW_IT_CONDITIONS_TO_COVER_KEY,","402","      NEW_IT_UNCOVERED_LINES_KEY, NEW_IT_UNCOVERED_CONDITIONS_KEY);","413","      NEW_OVERALL_LINES_TO_COVER_KEY, NEW_OVERALL_CONDITIONS_TO_COVER_KEY,","414","      NEW_OVERALL_UNCOVERED_LINES_KEY, NEW_OVERALL_UNCOVERED_CONDITIONS_KEY);","440","      entryOf(branchCoverageKey, createMeasure(97d, 96d)));","444","      entryOf(branchCoverageKey, createMeasure(96d, 97d)));","450","      entryOf(branchCoverageKey, createMeasure(97d, 96d)));","455","      entryOf(branchCoverageKey, createMeasure(96d, 97d)));","468","  private void verify_only_zero_measures_on_new_lines_and_conditions_measures(Component component) {","469","    assertThat(toEntries(measureRepository.getAddedRawMeasures(component.getReportAttributes().getRef()))).containsOnly(","470","      entryOf(NEW_LINES_TO_COVER_KEY, createMeasure(0d, 0d)),","471","      entryOf(NEW_UNCOVERED_LINES_KEY, createMeasure(0d, 0d)),","472","      entryOf(NEW_CONDITIONS_TO_COVER_KEY, createMeasure(0d, 0d)),","473","      entryOf(NEW_UNCOVERED_CONDITIONS_KEY, createMeasure(0d, 0d)),","474","","475","      entryOf(NEW_IT_LINES_TO_COVER_KEY, createMeasure(0d, 0d)),","476","      entryOf(NEW_IT_UNCOVERED_LINES_KEY, createMeasure(0d, 0d)),","477","      entryOf(NEW_IT_CONDITIONS_TO_COVER_KEY, createMeasure(0d, 0d)),","478","      entryOf(NEW_IT_UNCOVERED_CONDITIONS_KEY, createMeasure(0d, 0d)),","479","","480","      entryOf(NEW_OVERALL_LINES_TO_COVER_KEY, createMeasure(0d, 0d)),","481","      entryOf(NEW_OVERALL_UNCOVERED_LINES_KEY, createMeasure(0d, 0d)),","482","      entryOf(NEW_OVERALL_CONDITIONS_TO_COVER_KEY, createMeasure(0d, 0d)),","483","      entryOf(NEW_OVERALL_UNCOVERED_CONDITIONS_KEY, createMeasure(0d, 0d)));","484","  }","485","","494","      Changeset.newChangesetBuilder().setDate(parseDate(\"2012-02-23\").getTime()).setRevision(\"rev-3\").build());","545","      entryOf(metricKeys.newUncoveredConditions, createMeasure(4d, 1d)));"],"delete":["26","import org.sonar.server.computation.task.projectanalysis.component.TreeRootHolderRule;","80","                  builder(FILE, FILE_1_REF).build()","81","                ).build(),","85","                  builder(FILE, FILE_3_REF).build()","86","                ).build()","87","            )","88","            .build()","89","        ).build()","90","    ).build();","192","  public void verify_measure_of_condition_not_computed_if_there_is_none() {","193","    treeRootHolder.setRoot(FILE_COMPONENT);","194","    scmInfoRepository.setScmInfo(FILE_1_REF,","195","      Changeset.newChangesetBuilder().setDate(parseDate(\"2007-01-15\").getTime()).setRevision(\"rev-1\").build(),","196","      Changeset.newChangesetBuilder().setDate(parseDate(\"2007-01-15\").getTime()).setRevision(\"rev-1\").build(),","197","      Changeset.newChangesetBuilder().setDate(parseDate(\"2011-01-01\").getTime()).setRevision(\"rev-2\").build()","198","      );","199","","200","    underTest.execute();","201","","202","    assertThat(measureRepository.isEmpty()).isTrue();","203","  }","204","","205","  @Test","206","  public void verify_no_measure_when_nothing_has_changed() {","213","      Changeset.newChangesetBuilder().setDate(parseDate(\"2008-08-02\").getTime()).setRevision(\"rev-1\").build()","214","      );","222","    assertThat(measureRepository.getAddedRawMeasures(FILE_COMPONENT.getReportAttributes().getRef())).isEmpty();","226","  public void no_measures_for_FILE_component_without_CoverageData() {","227","    ReportComponent fileComponent = ReportComponent.builder(Component.Type.FILE, FILE_1_REF).setFileAttributes(new FileAttributes(false, null)).build();","228","","229","    treeRootHolder.setRoot(fileComponent);","232","      Changeset.newChangesetBuilder().setDate(parseDate(\"2008-05-18\").getTime()).setRevision(\"rev-1\").build()","233","      );","237","    assertThat(measureRepository.isEmpty()).isTrue();","255","    String newLinesToCover = CoreMetrics.NEW_IT_LINES_TO_COVER_KEY;","256","    String newUncoveredLines = CoreMetrics.NEW_IT_UNCOVERED_LINES_KEY;","257","    String newConditionsToCover = CoreMetrics.NEW_IT_CONDITIONS_TO_COVER_KEY;","258","    String newUncoveredConditions = CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS_KEY;","267","    String newLinesToCover = CoreMetrics.NEW_OVERALL_LINES_TO_COVER_KEY;","268","    String newUncoveredLines = CoreMetrics.NEW_OVERALL_UNCOVERED_LINES_KEY;","269","    String newConditionsToCover = CoreMetrics.NEW_OVERALL_CONDITIONS_TO_COVER_KEY;","270","    String newUncoveredConditions = CoreMetrics.NEW_OVERALL_UNCOVERED_CONDITIONS_KEY;","283","      Changeset.newChangesetBuilder().setDate(parseDate(\"2011-01-01\").getTime()).setRevision(\"rev-1\").build()","284","      );","291","      entryOf(newLinesToCover, createMeasure(2d, null)),","292","      entryOf(newUncoveredLines, createMeasure(1d, null)),","293","      entryOf(newConditionsToCover, createMeasure(0d, null)),","294","      entryOf(newUncoveredConditions, createMeasure(0d, null))","295","      );","317","    String newLinesToCover = CoreMetrics.NEW_IT_LINES_TO_COVER_KEY;","318","    String newUncoveredLines = CoreMetrics.NEW_IT_UNCOVERED_LINES_KEY;","319","    String newConditionsToCover = CoreMetrics.NEW_IT_CONDITIONS_TO_COVER_KEY;","320","    String newUncoveredConditions = CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS_KEY;","331","    String newLinesToCover = CoreMetrics.NEW_OVERALL_LINES_TO_COVER_KEY;","332","    String newUncoveredLines = CoreMetrics.NEW_OVERALL_UNCOVERED_LINES_KEY;","333","    String newConditionsToCover = CoreMetrics.NEW_OVERALL_CONDITIONS_TO_COVER_KEY;","334","    String newUncoveredConditions = CoreMetrics.NEW_OVERALL_UNCOVERED_CONDITIONS_KEY;","345","    String newLinesToCover = CoreMetrics.NEW_IT_LINES_TO_COVER_KEY;","346","    String newUncoveredLines = CoreMetrics.NEW_IT_UNCOVERED_LINES_KEY;","347","    String newConditionsToCover = CoreMetrics.NEW_IT_CONDITIONS_TO_COVER_KEY;","348","    String newUncoveredConditions = CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS_KEY;","365","      entryOf(metricKeys.newUncoveredConditions, createMeasure(4d, 1d))","366","      );","371","      entryOf(metricKeys.newUncoveredConditions, createMeasure(14d, 6d))","372","      );","377","      entryOf(metricKeys.newUncoveredConditions, createMeasure(9d, 6d))","378","      );","384","      entryOf(metricKeys.newUncoveredConditions, createMeasure(4d, 1d))","385","      );","390","      entryOf(metricKeys.newUncoveredConditions, createMeasure(23d, 12d))","391","      );","408","      CoreMetrics.NEW_UNCOVERED_LINES_KEY, CoreMetrics.NEW_UNCOVERED_CONDITIONS_KEY","409","      );","420","      CoreMetrics.NEW_IT_LINES_TO_COVER_KEY, CoreMetrics.NEW_IT_CONDITIONS_TO_COVER_KEY,","421","      CoreMetrics.NEW_IT_UNCOVERED_LINES_KEY, CoreMetrics.NEW_IT_UNCOVERED_CONDITIONS_KEY","422","      );","433","      CoreMetrics.NEW_OVERALL_LINES_TO_COVER_KEY, CoreMetrics.NEW_OVERALL_CONDITIONS_TO_COVER_KEY,","434","      CoreMetrics.NEW_OVERALL_UNCOVERED_LINES_KEY, CoreMetrics.NEW_OVERALL_UNCOVERED_CONDITIONS_KEY","435","      );","461","      entryOf(branchCoverageKey, createMeasure(97d, 96d))","462","      );","466","      entryOf(branchCoverageKey, createMeasure(96d, 97d))","467","      );","473","      entryOf(branchCoverageKey, createMeasure(97d, 96d))","474","      );","479","      entryOf(branchCoverageKey, createMeasure(96d, 97d))","480","      );","501","      Changeset.newChangesetBuilder().setDate(parseDate(\"2012-02-23\").getTime()).setRevision(\"rev-3\").build()","502","      );","553","      entryOf(metricKeys.newUncoveredConditions, createMeasure(4d, 1d))","554","      );"]}],"it\/it-tests\/src\/test\/java\/it\/measureHistory\/DifferentialPeriodsTest.java":[{"add":["21","import com.google.common.collect.ImmutableMap;","25","import java.util.ArrayList;","28","import java.util.Map;","29","import java.util.stream.Collectors;","32","import org.junit.BeforeClass;","38","import org.sonarqube.ws.WsMeasures;","39","import org.sonarqube.ws.client.WsClient;","40","import org.sonarqube.ws.client.measure.ComponentWsRequest;","43","import static java.util.Arrays.asList;","44","import static java.util.Collections.singletonList;","48","import static util.ItUtils.newAdminWsClient;","49","import static util.ItUtils.resetPeriods;","58","  static WsClient CLIENT;","59","","63","  @BeforeClass","64","  public static void createWsClient() throws Exception {","65","    CLIENT = newAdminWsClient(orchestrator);","66","  }","67","","74","  public void reset() throws Exception {","75","    resetPeriods(orchestrator);","84","    setServerProperty(orchestrator, \"sonar.timemachine.period1\", \"previous_analysis\");","85","    setServerProperty(orchestrator, \"sonar.timemachine.period2\", \"previous_analysis\");","86","    setServerProperty(orchestrator, \"sonar.timemachine.period3\", \"previous_analysis\");","111","      ResourceQuery.createForMetrics(\"sample:src\/main\/xoo\/sample\/Sample.xoo\", \"new_technical_debt\").setIncludeTrends(true));","163","      \"sonar.modules\", \"module_a\");","170","      \"sonar.modules\", \"module_a,module_b\");","179","  @Test","180","  public void compute_no_new_lines_measures_when_changes_but_no_scm() throws Exception {","181","    orchestrator.getServer().provisionProject(MULTI_MODULE_PROJECT_KEY, MULTI_MODULE_PROJECT_KEY);","182","    setServerProperty(orchestrator, MULTI_MODULE_PROJECT_KEY, \"sonar.timemachine.period1\", \"previous_analysis\");","183","","184","    \/\/ Execute an analysis 60 days ago without module b","185","    orchestrator.getServer().associateProjectToQualityProfile(MULTI_MODULE_PROJECT_KEY, \"xoo\", \"empty\");","186","    runProjectAnalysis(orchestrator, \"shared\/xoo-multi-modules-sample\",","187","      \"sonar.projectDate\", formatDate(addDays(new Date(), -60)),","188","      \"sonar.modules\", \"module_a\");","189","","190","    \/\/ Second analysis, 20 days ago","191","    orchestrator.getServer().restoreProfile(FileLocation.ofClasspath(\"\/measureHistory\/one-issue-per-line-profile.xml\"));","192","    orchestrator.getServer().associateProjectToQualityProfile(MULTI_MODULE_PROJECT_KEY, \"xoo\", \"one-issue-per-line\");","193","    runProjectAnalysis(orchestrator, \"shared\/xoo-multi-modules-sample\",","194","      \"sonar.projectDate\", formatDate(addDays(new Date(), -20)),","195","      \"sonar.modules\", \"module_a,module_b\");","196","","197","    \/\/ No new lines measure","198","    assertNoMeasures(MULTI_MODULE_PROJECT_KEY, \"new_lines\", \"new_lines_to_cover\");","199","  }","200","","201","  @Test","202","  public void compute_zero_new_lines_measures_when_no_changes_and_scm_available() throws Exception {","203","    String projectKey = \"sample-scm\";","204","    orchestrator.getServer().provisionProject(projectKey, projectKey);","205","    setServerProperty(orchestrator, projectKey, \"sonar.timemachine.period1\", \"previous_analysis\");","206","","207","    \/\/ Execute an analysis 60 days ago","208","    runProjectAnalysis(orchestrator, \"scm\/xoo-sample-with-scm\", \"sonar.projectDate\", formatDate(addDays(new Date(), -60)),","209","      \"sonar.scm.provider\", \"xoo\", \"sonar.scm.disabled\", \"false\");","210","","211","    \/\/ Second analysis, 20 days ago","212","    runProjectAnalysis(orchestrator, \"scm\/xoo-sample-with-scm\", \"sonar.projectDate\", formatDate(addDays(new Date(), -20)),","213","      \"sonar.scm.provider\", \"xoo\", \"sonar.scm.disabled\", \"false\");","214","","215","    \/\/ New lines measures is zero","216","    assertMeasures(projectKey, ImmutableMap.of(\"new_lines\", 0, \"new_lines_to_cover\", 0));","217","  }","218","","219","  private void assertMeasures(String projectKey, Map<String, Integer> expectedMeasures) {","220","    WsMeasures.ComponentWsResponse response = CLIENT.measures().component(new ComponentWsRequest()","221","      .setComponentKey(projectKey)","222","      .setMetricKeys(new ArrayList<>(expectedMeasures.keySet()))","223","      .setAdditionalFields(singletonList(\"periods\")));","224","    Map<String, Integer> measures = response.getComponent().getMeasuresList().stream()","225","      .collect(Collectors.toMap(WsMeasures.Measure::getMetric, m -> Integer.parseInt(m.getPeriods().getPeriodsValue(0).getValue())));","226","    assertThat(measures).isEqualTo(expectedMeasures);","227","  }","228","","229","  private void assertNoMeasures(String projectKey, String... metrics) {","230","    WsMeasures.ComponentWsResponse response = CLIENT.measures().component(new ComponentWsRequest()","231","      .setComponentKey(projectKey)","232","      .setMetricKeys(asList(metrics))","233","      .setAdditionalFields(singletonList(\"periods\")));","234","    assertThat(response.getComponent().getMeasuresList()).isEmpty();","235","  }","236",""],"delete":["34","import util.ItUtils;","55","  @Before","56","  public void initPeriods() throws Exception {","57","    setServerProperty(orchestrator, \"sonar.timemachine.period1\", \"previous_analysis\");","58","    setServerProperty(orchestrator, \"sonar.timemachine.period2\", \"previous_analysis\");","59","    setServerProperty(orchestrator, \"sonar.timemachine.period3\", \"previous_analysis\");","60","  }","61","","63","  public void resetPeriods() throws Exception {","64","    ItUtils.resetPeriods(orchestrator);","97","      ResourceQuery.createForMetrics(\"sample:src\/main\/xoo\/sample\/Sample.xoo\", \"new_technical_debt\").setIncludeTrends(true)","98","      );","150","      \"sonar.modules\", \"module_a\"","151","    );","158","      \"sonar.modules\", \"module_a,module_b\"","159","    );"]}],"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":[{"add":["117","    int newMeasuresOnTrk = 55;","118","    int newMeasuresOnBrc = 286;","119","    int newMeasuresOnDir = 44;","120","    int newMeasuresOnFil = 0;","131","      equalTo(121));"],"delete":["117","    int newMeasuresOnTrk = 56;","118","    int newMeasuresOnBrc = 292;","119","    int newMeasuresOnDir = 48;","120","    int newMeasuresOnFil = 4;","131","      equalTo(136));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/NewCoverageMeasuresStep.java":[{"add":["377","      context.getPeriods().forEach(period -> {","378","        newLines.increment(period, 0);","379","        newCoveredLines.increment(period, 0);","380","        newConditions.increment(period, 0);","381","        newCoveredConditions.increment(period, 0);","382","      });","384","      Optional<Measure> hitsByLineMeasure = context.getMeasure(metricKeys.getCoverageLineHitsData());"],"delete":["377","      Optional<Measure> hitsByLineMeasure = context.getMeasure(metricKeys.getCoverageLineHitsData());","378","      if (!hitsByLineMeasure.isPresent() || hitsByLineMeasure.get().getValueType() == Measure.ValueType.NO_VALUE) {","379","        return;","380","      }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/NewSizeMeasuresStep.java":[{"add":["125","      Optional<ScmInfo> scmInfo = scmInfoRepository.getScmInfo(leaf);","126","      if (!scmInfo.isPresent()) {","127","        return;","128","      }","129",""],"delete":["133","      Optional<ScmInfo> scmInfo = scmInfoRepository.getScmInfo(leaf);","134","      if (!scmInfo.isPresent()) {","135","        return;","136","      }"]}]}},"72f64c95fdef18ec950d341c1a9093f30087e1c1":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/DefaultRuleFinder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/rules\/Rule.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/CachingRuleFinder.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/DefaultRuleFinderTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/rule\/RuleDbTester.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/CachingRuleFinderTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/DefaultRuleFinder.java":[{"add":["147","      .setSystemTags(rule.getSystemTags().toArray(new String[rule.getSystemTags().size()]))"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/rules\/Rule.java":[{"add":["402","  public Rule setSystemTags(String[] tags) {","403","    this.systemTags = tags == null ? null : StringUtils.join(tags, ',');","404","    return this;","405","  }","406",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/CachingRuleFinder.java":[{"add":["165","    String[] systemTags = ruleDefinition.getSystemTags().toArray(new String[ruleDefinition.getSystemTags().size()]);","177","      .setSystemTags(systemTags)","178","      \/\/ FIXME tags should contain user defined tags and we can't provide them without organization => tags should return []","179","      .setTags(systemTags)"],"delete":["176","      .setTags(ruleDefinition.getSystemTags().toArray(new String[ruleDefinition.getSystemTags().size()]))"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/DefaultRuleFinderTest.java":[{"add":["21","import com.google.common.collect.ImmutableSet;","31","import org.sonar.db.organization.OrganizationDto;","32","import org.sonar.db.rule.RuleDefinitionDto;","37","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","139","  @Test","140","  public void findById_populates_system_tags_but_not_tags() {","141","    RuleDefinitionDto ruleDefinition = dbTester.rules()","142","      .insert(t -> t.setSystemTags(ImmutableSet.of(randomAlphanumeric(5), randomAlphanumeric(6))));","143","    OrganizationDto organization = dbTester.organizations().insert();","144","    dbTester.rules().insertRule(organization);","145","","146","    Rule rule = underTest.findById(ruleDefinition.getId());","147","    assertThat(rule.getSystemTags())","148","      .containsOnlyElementsOf(ruleDefinition.getSystemTags());","149","    assertThat(rule.getTags()).isEmpty();","150","  }","151","","152","  @Test","153","  public void findByKey_populates_system_tags_but_not_tags() {","154","    RuleDefinitionDto ruleDefinition = dbTester.rules()","155","      .insert(t -> t.setSystemTags(ImmutableSet.of(randomAlphanumeric(5), randomAlphanumeric(6))));","156","    OrganizationDto organization = dbTester.organizations().insert();","157","    dbTester.rules().insertRule(organization);","158","","159","    Rule rule = underTest.findByKey(ruleDefinition.getKey());","160","    assertThat(rule.getSystemTags())","161","      .containsOnlyElementsOf(ruleDefinition.getSystemTags());","162","    assertThat(rule.getTags()).isEmpty();","163","","164","    rule = underTest.findByKey(ruleDefinition.getRepositoryKey(), ruleDefinition.getRuleKey());","165","    assertThat(rule.getSystemTags())","166","      .containsOnlyElementsOf(ruleDefinition.getSystemTags());","167","    assertThat(rule.getTags()).isEmpty();","168","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/rule\/RuleDbTester.java":[{"add":["148","","149","  public RuleDto insertRule(RuleDefinitionDto ruleDefinition, RuleMetadataDto ruleMetadata) {","150","    db.getDbClient().ruleDao().insertOrUpdate(db.getSession(), ruleMetadata.setRuleId(ruleDefinition.getId()));","151","    db.commit();","152","    return new RuleDto(ruleDefinition, ruleMetadata);","153","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/CachingRuleFinderTest.java":[{"add":["410","    String[] systemTags = ruleDefinition.getSystemTags().stream().toArray(String[]::new);","411","    assertThat(rule.getSystemTags()).isEqualTo(systemTags);","412","    assertThat(rule.getTags()).isEqualTo(systemTags);"],"delete":["410","    assertThat(rule.getTags()).isEqualTo(ruleDefinition.getSystemTags().stream().toArray(String[]::new));"]}]}},"51fe1d71e419026cf331f6f0ddac3cfac2f6b0cb":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilterTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePatternTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactoryTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/package-info.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/container\/ReportComputeEngineContainerPopulator.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactory.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePattern.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IntegrateIssuesVisitorTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilter.java":"ADD"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilterTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePatternTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactoryTest.java":[{"add":["38","import org.sonar.server.computation.issue.filter.IssueFilter;","44","import static org.mockito.Matchers.any;","45","import static org.mockito.Matchers.eq;","67","  IssueFilter issueFilter = mock(IssueFilter.class);","68","","69","  TrackerRawInputFactory underTest = new TrackerRawInputFactory(treeRootHolder, reportReader, fileSourceRepository, commonRuleEngine, issueFilter);","93","  public void load_issues_from_report() throws Exception {","94","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(true);","126","  public void ignore_issue_from_report() throws Exception {","127","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(false);","128","    fileSourceRepository.addLines(FILE_REF, \"line 1;\", \"line 2;\");","129","    ScannerReport.Issue reportIssue = ScannerReport.Issue.newBuilder()","130","      .setTextRange(TextRange.newBuilder().setStartLine(2).build())","131","      .setMsg(\"the message\")","132","      .setRuleRepository(\"java\")","133","      .setRuleKey(\"S001\")","134","      .setSeverity(Constants.Severity.BLOCKER)","135","      .setGap(3.14)","136","      .build();","137","    reportReader.putIssues(FILE.getReportAttributes().getRef(), asList(reportIssue));","138","    Input<DefaultIssue> input = underTest.create(FILE);","139","","140","    Collection<DefaultIssue> issues = input.getIssues();","141","    assertThat(issues).isEmpty();","142","  }","143","","144","  @Test","162","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(true);","176","  @Test","177","  public void ignore_issue_from_common_rule() throws Exception {","178","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(false);","179","    fileSourceRepository.addLines(FILE_REF, \"line 1;\", \"line 2;\");","180","    DefaultIssue ceIssue = new DefaultIssue()","181","      .setRuleKey(RuleKey.of(CommonRuleKeys.commonRepositoryForLang(\"java\"), \"InsufficientCoverage\"))","182","      .setMessage(\"not enough coverage\")","183","      .setGap(10.0);","184","    when(commonRuleEngine.process(FILE)).thenReturn(asList(ceIssue));","185","","186","    Input<DefaultIssue> input = underTest.create(FILE);","187","","188","    assertThat(input.getIssues()).isEmpty();","189","  }","190",""],"delete":["64","  TrackerRawInputFactory underTest = new TrackerRawInputFactory(treeRootHolder, reportReader, fileSourceRepository, commonRuleEngine);","88","  public void load_issues() throws Exception {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/package-info.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/container\/ReportComputeEngineContainerPopulator.java":[{"add":["72","import org.sonar.server.computation.issue.filter.IssueFilter;","175","      IssueFilter.class,"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactory.java":[{"add":["40","import org.sonar.server.computation.issue.filter.IssueFilter;","53","  private final IssueFilter issueFilter;","56","    SourceLinesRepository sourceLinesRepository, CommonRuleEngine commonRuleEngine, IssueFilter issueFilter) {","61","    this.issueFilter = issueFilter;","91","        if (issueFilter.accept(commonRuleIssue, component)) {","92","          result.add(init(commonRuleIssue));","93","        }","102","            if (issueFilter.accept(issue, component)) {","103","              result.add(issue);","104","            }"],"delete":["54","    SourceLinesRepository sourceLinesRepository, CommonRuleEngine commonRuleEngine) {","88","        result.add(init(commonRuleIssue));","97","            result.add(issue);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePattern.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IntegrateIssuesVisitorTest.java":[{"add":["47","import org.sonar.server.computation.issue.filter.IssueFilter;","56","import static org.mockito.Matchers.any;","60","import static org.mockito.Mockito.when;","108","  IssueFilter issueFilter = mock(IssueFilter.class);","109","","112","    fileSourceRepository, new CommonRuleEngineImpl(), issueFilter), new Tracker<DefaultIssue, DefaultIssue>());","126","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(true);"],"delete":["107","    fileSourceRepository, new CommonRuleEngineImpl()), new Tracker<DefaultIssue, DefaultIssue>());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilter.java":[{"add":[],"delete":[]}]}},"d9a11f3443c8d9a464f6f605630c12c9562dad3b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureContent.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/MeasureHeader-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/TreeMapView.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureHeader.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/MeasureHeader-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureContent.js":[{"add":["326","        {metric != null && (","327","          <div className=\"layout-page-main-inner measure-details-content\">","328","            <MeasureHeader","329","              branchLike={branchLike}","330","              component={component}","331","              components={this.state.components}","332","              leakPeriod={this.props.leakPeriod}","333","              \/\/ fall back to `undefined` to be compatible with typescript files where we compare with `=== undefined`","334","              measure={measure || undefined}","335","              metric={metric}","336","              secondaryMeasure={this.props.secondaryMeasure}","337","            \/>","338","            {isFileType(component) ? this.renderCode() : this.renderMeasure()}","339","          <\/div>","340","        )}"],"delete":["326","        {metric != null &&","327","          measure != null && (","328","            <div className=\"layout-page-main-inner measure-details-content\">","329","              <MeasureHeader","330","                branchLike={branchLike}","331","                component={component}","332","                components={this.state.components}","333","                leakPeriod={this.props.leakPeriod}","334","                measure={measure}","335","                secondaryMeasure={this.props.secondaryMeasure}","336","              \/>","337","              {isFileType(component) ? this.renderCode() : this.renderMeasure()}","338","            <\/div>","339","          )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/MeasureHeader-test.js":[{"add":["23","const METRIC = {","24","  key: 'reliability_rating',","25","  type: 'RATING',","26","  name: 'Reliability Rating'","27","};","28","","32","  metric: METRIC,","36","const LEAK_METRIC = {","37","  key: 'new_reliability_rating',","38","  type: 'RATING',","39","  name: 'Reliability Rating on New Code'","40","};","41","","44","  metric: LEAK_METRIC,","69","  metric: METRIC,","80","  expect(","81","    shallow(<MeasureHeader {...PROPS} measure={LEAK_MEASURE} metric={LEAK_METRIC} \/>)","82","  ).toMatchSnapshot();","110","","111","it('should work with measure without value', () => {","112","  expect(shallow(<MeasureHeader {...PROPS} measure={undefined} \/>)).toMatchSnapshot();","113","});"],"delete":["26","  metric: {","27","    key: 'reliability_rating',","28","    type: 'RATING',","29","    name: 'Reliability Rating'","30","  },","36","  metric: {","37","    key: 'new_reliability_rating',","38","    type: 'RATING',","39","    name: 'Reliability Rating on New Code'","40","  },","75","  expect(shallow(<MeasureHeader {...PROPS} measure={LEAK_MEASURE} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/TreeMapView.js":[{"add":["72","        if (sizeMeasure == null) {","75","        const colorValue =","76","          colorMeasure && (isDiffMetric(metric.key) ? colorMeasure.leak : colorMeasure.value);","90","            metric,"],"delete":["72","        if (colorMeasure == null || sizeMeasure == null) {","75","        const colorValue = isDiffMetric(colorMeasure.metric.key)","76","          ? colorMeasure.leak","77","          : colorMeasure.value;","91","            colorMeasure.metric,"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/MeasureHeader.js":[{"add":["33","\/*:: import type { Metric } from '..\/..\/..\/store\/metrics\/actions'; *\/","40","  measure?: MeasureEnhanced,","41","  metric: Metric,","46","  const { branchLike, component, leakPeriod, measure, metric, secondaryMeasure } = props;","52","          <IssueTypeIcon className=\"little-spacer-right text-text-bottom\" query={metric.key} \/>","61","                  value={measure && measure.leak}","64","                <Measure","65","                  metricKey={metric.key}","66","                  metricType={metric.type}","67","                  value={measure && measure.value}","68","                \/>","74","              overlay={translate('component_measures.show_metric_history')}","75","              placement=\"right\">"],"delete":["39","  measure: MeasureEnhanced,","44","  const { branchLike, component, leakPeriod, measure, secondaryMeasure } = props;","45","  const { metric } = measure;","51","          <IssueTypeIcon query={metric.key} className=\"little-spacer-right text-text-bottom\" \/>","58","                  value={measure.leak}","63","                <Measure value={measure.value} metricKey={metric.key} metricType={metric.type} \/>","69","              placement=\"right\"","70","              overlay={translate('component_measures.show_metric_history')}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/MeasureHeader-test.js.snap":[{"add":["197","","198","exports[`should work with measure without value 1`] = `","199","<div","200","  className=\"measure-details-header big-spacer-bottom\"","201",">","202","  <div","203","    className=\"measure-details-primary\"","204","  >","205","    <div","206","      className=\"measure-details-metric\"","207","    >","208","      <IssueTypeIcon","209","        className=\"little-spacer-right text-text-bottom\"","210","        query=\"reliability_rating\"","211","      \/>","212","      Reliability Rating","213","      <span","214","        className=\"measure-details-value spacer-left\"","215","      >","216","        <strong>","217","          <Measure","218","            metricKey=\"reliability_rating\"","219","            metricType=\"RATING\"","220","          \/>","221","        <\/strong>","222","      <\/span>","223","      <Tooltip","224","        overlay=\"component_measures.show_metric_history\"","225","        placement=\"right\"","226","      >","227","        <Link","228","          className=\"js-show-history spacer-left button button-small\"","229","          onlyActiveOnIndex={false}","230","          style={Object {}}","231","          to={","232","            Object {","233","              \"pathname\": \"\/project\/activity\",","234","              \"query\": Object {","235","                \"custom_metrics\": \"reliability_rating\",","236","                \"graph\": \"custom\",","237","                \"id\": \"foo\",","238","              },","239","            }","240","          }","241","        >","242","          <IconHistory \/>","243","        <\/Link>","244","      <\/Tooltip>","245","    <\/div>","246","    <div","247","      className=\"measure-details-primary-actions\"","248","    >","249","      <LeakPeriodLegend","250","        className=\"spacer-left\"","251","        component={","252","          Object {","253","            \"key\": \"foo\",","254","            \"qualifier\": \"TRK\",","255","          }","256","        }","257","        period={","258","          Object {","259","            \"date\": \"2017-05-16T13:50:02+0200\",","260","            \"index\": 1,","261","            \"mode\": \"previous_version\",","262","            \"parameter\": \"6,4\",","263","          }","264","        }","265","      \/>","266","    <\/div>","267","  <\/div>","268","<\/div>","269","`;"],"delete":[]}]}},"2e95a6d9729ad591ef16c950453529a704d534db":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest\/schema.sql":"ADD","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentViewerJsonWriter.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromProperties.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest.java":"ADD"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":[{"add":["362","      .filter(Objects::nonNull)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":[{"add":["33","      .add(4005, \"Drop orphan favorites from 'properties' table\", DropOrphanFavoritesFromProperties.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":[{"add":["32","import javax.annotation.Nullable;","631","  public void does_not_fail_on_orphan_favorite() {","632","    userSession.logIn();","633","    OrganizationDto organization = db.organizations().insert();","634","    ComponentDto javaProject = insertProject(organization);","635","    ComponentDto markDownProject = insertProject(organization);","636","    ComponentDto sonarQubeProject = insertProject(organization);","637","    Stream.of(javaProject, markDownProject).forEach(this::addFavourite);","638","","639","    addFavourite((String) null);","640","","641","    SearchProjectsWsResponse result = call(request.setFilter(\"isFavorite\"));","642","","643","    assertThat(result.getComponentsCount()).isEqualTo(2);","644","    assertThat(result.getComponentsList()).extracting(Component::getKey).containsExactly(javaProject.getDbKey(), markDownProject.getDbKey());","645","  }","646","","647","  @Test","1431","    addFavourite(project.uuid());","1432","  }","1433","","1434","  private void addFavourite(@Nullable String componentUuid) {","1435","    dbClient.propertiesDao().saveProperty(dbSession, new PropertyDto().setKey(\"favourite\").setComponentUuid(componentUuid).setUserUuid(userSession.getUuid()));"],"delete":["1413","    dbClient.propertiesDao().saveProperty(dbSession, new PropertyDto().setKey(\"favourite\").setComponentUuid(project.uuid()).setUserUuid(userSession.getUuid()));"]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/component\/ws\/ComponentViewerJsonWriter.java":[{"add":["100","      .setKey(\"favourite\")","101","      .setComponentUuid(component.uuid())","103","      .build(),"],"delete":["100","        .setKey(\"favourite\")","101","        .setComponentUuid(component.uuid())","103","        .build(),"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromProperties.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DropOrphanFavoritesFromPropertiesTest.java":[{"add":[],"delete":[]}]}},"417280ac3f309cc5ac019849a616c34ac042ccd4":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SuggestionsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":[{"add":["395","  public void should_not_return_suggestion_on_non_existing_project() {","396","    ComponentDto project = db.components().insertComponent(newPrivateProjectDto(organization));","397","","398","    componentIndexer.indexOnStartup(null);","399","    authorizationIndexerTester.allowOnlyAnyone(project);","400","","401","    db.getDbClient().componentDao().delete(db.getSession(), project.getId());","402","    db.commit();","403","","404","    SuggestionsWsResponse response = ws.newRequest()","405","      .setMethod(\"POST\")","406","      .setParam(PARAM_QUERY, project.getDbKey())","407","      .executeProtobuf(SuggestionsWsResponse.class);","408","","409","    \/\/ assert match in qualifier \"TRK\"","410","    assertThat(response.getResultsList())","411","      .filteredOn(q -> q.getItemsCount() > 0)","412","      .isEmpty();","413","  }","414","","415","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SuggestionsAction.java":[{"add":["338","      || (QUALIFIERS_FOR_WHICH_TO_RETURN_PROJECT.contains(result.qualifier()) && projectsByUuids.get(result.projectUuid()) == null)","339","    ) {","351","    if (QUALIFIERS_FOR_WHICH_TO_RETURN_PROJECT.contains(result.qualifier())) {"],"delete":["336","    boolean returnProject = QUALIFIERS_FOR_WHICH_TO_RETURN_PROJECT.contains(result.qualifier());","339","      || (returnProject && projectsByUuids.get(result.projectUuid()) == null)) {","351","    if (returnProject) {"]}]}},"0546704b7a152de911c3f0000418c14013392d6e":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/ParsingUtils.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/textsearch\/ComponentTextSearchFeatureRepertoire.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectsTextSearchQueryFactory.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/ParsingUtils.java":[{"add":["55","    return parseNumber(number, Locale.ENGLISH);"],"delete":["55","    return parseNumber(number, Locale.getDefault());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/textsearch\/ComponentTextSearchFeatureRepertoire.java":[{"add":["73","      List<String> lowerCaseTokens = tokens.stream().map(t -> t.toLowerCase(Locale.ENGLISH)).collect(MoreCollectors.toList());"],"delete":["73","      List<String> lowerCaseTokens = tokens.stream().map(t -> t.toLowerCase(Locale.getDefault())).collect(MoreCollectors.toList());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectsTextSearchQueryFactory.java":[{"add":["75","        String lowerCaseQueryText = queryText.toLowerCase(Locale.ENGLISH);"],"delete":["75","        String lowerCaseQueryText = queryText.toLowerCase(Locale.getDefault());"]}]}},"16ef824afc30f2d8e9578abe8ba7422a69de28e2":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/EmptyOverview.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/EmptyOverview-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/EmptyOverview.tsx":[{"add":["28","import { ComponentQualifier } from '..\/..\/..\/types\/component';","42","  if (component.qualifier === ComponentQualifier.Application) {","43","    return (","44","      <div className=\"page page-limited\">","45","        <Alert variant=\"warning\">{translate('provisioning.no_analysis.application')}<\/Alert>","46","      <\/div>","47","    );","48","  } else if (!isBranch(branchLike)) {","58","  const showTutorial = isMainBranch(branchLike) && !hasBranches && !hasAnalyses;"],"delete":["41","  if (!isBranch(branchLike)) {","51","  const showTutorial =","52","    isMainBranch(branchLike) && !hasBranches && !hasAnalyses && component.qualifier !== 'APP';"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1770","provisioning.no_analysis.application=No analysis has been performed since creation. Analyze a project to see information here."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/EmptyOverview-test.tsx.snap":[{"add":["73",">","74","  <Alert","75","    variant=\"warning\"","76","  >","77","    provisioning.no_analysis.application","78","  <\/Alert>","79","<\/div>"],"delete":["73","\/>"]}]}},"a7945437d456d5c1d0bfe58f38a53f4239f109e1":{"changes":{"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":[{"add":["48","  public void start_does_not_reset_in_progress_tasks_to_pending() throws IOException {","54","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.PENDING)).isEqualTo(1);","55","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.IN_PROGRESS)).isEqualTo(1);"],"delete":["48","  public void start_resets_in_progress_tasks_to_pending() throws IOException {","54","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.PENDING)).isEqualTo(2);","55","    assertThat(dbTester.getDbClient().ceQueueDao().countByStatus(dbTester.getSession(), CeQueueDto.Status.IN_PROGRESS)).isEqualTo(0);"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":[{"add":[],"delete":["68","    \/\/ server is not being upgraded","69","    dbClient.ceQueueDao().resetAllToPendingStatus(dbSession);","70","    dbSession.commit();","71",""]}]}},"2962e43c138995b6c8d61a333cb2448932333d1c":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/ComponentCell.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-issues-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":[{"add":["22","  getPathUrlAsString,","23","  getProjectUrl,","43","describe('#getPathUrlAsString', () => {","45","    expect(getPathUrlAsString(getProjectUrl(SIMPLE_COMPONENT_KEY, 'branch:7.0'))).toBe(","46","      '\/dashboard?id=' + SIMPLE_COMPONENT_KEY + '&branch=branch%3A7.0'","47","    );","51","    expect(getPathUrlAsString(getProjectUrl(COMPLEX_COMPONENT_KEY))).toBe(","58","    expect(getPathUrlAsString(getProjectUrl(COMPLEX_COMPONENT_KEY))).toBe("],"delete":["20","  getComponentUrl,","42","describe('#getComponentUrl', () => {","44","    expect(getComponentUrl(SIMPLE_COMPONENT_KEY)).toBe('\/dashboard?id=' + SIMPLE_COMPONENT_KEY);","48","    expect(getComponentUrl(COMPLEX_COMPONENT_KEY)).toBe(","55","    expect(getComponentUrl(COMPLEX_COMPONENT_KEY)).toBe("]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["19","import { omitBy, isNil } from 'lodash';","38","export function getPathUrlAsString(path: Location): string {","39","  return `${getBaseUrl()}${path.pathname}?${stringify(omitBy(path.query, isNil))}`;"],"delete":["37","\/**","38"," * Generate URL for a component's home page","39"," * Deprecated : use getProjectUrl","40"," *\/","41","export function getComponentUrl(componentKey: string, branch?: string): string {","42","  const branchQuery = branch ? `&branch=${encodeURIComponent(branch)}` : '';","43","  return getBaseUrl() + '\/dashboard?id=' + encodeURIComponent(componentKey) + branchQuery;","81","export function getComponentIssuesUrlAsString(componentKey: string, query?: Query): string {","82","  const path = getComponentIssuesUrl(componentKey, query);","83","  return `${getBaseUrl()}${path.pathname}?${stringify(path.query)}`;","84","}","85",""]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/drilldown\/ComponentCell.js":[{"add":["23","import { getPathUrlAsString, getProjectUrl } from '..\/..\/..\/helpers\/urls';","74","              href={getPathUrlAsString(getProjectUrl(component.key, branch))}","82","              href={getPathUrlAsString(getProjectUrl(component.refKey, branch))}>"],"delete":["23","import { getComponentUrl } from '..\/..\/..\/helpers\/urls';","74","              href={getComponentUrl(component.key, branch)}","82","              href={getComponentUrl(component.refKey, branch)}>"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerHeader.js":[{"add":["23","import { getPathUrlAsString, getProjectUrl, getComponentIssuesUrl } from '..\/..\/helpers\/urls';","91","              <a","92","                href={getPathUrlAsString(getProjectUrl(project, this.props.branch))}","93","                className=\"link-with-icon\">","95","              <\/a>","100","                <a","101","                  href={getPathUrlAsString(getProjectUrl(subProject, this.props.branch))}","102","                  className=\"link-with-icon\">","104","                <\/a>","131","              <a","134","                href={getPathUrlAsString({","137","                })}>","139","              <\/a>","181","              <a","182","                href={getPathUrlAsString(","183","                  getComponentIssuesUrl(project, {","184","                    resolved: 'false',","185","                    fileUuids: uuid,","186","                    branch: this.props.branch","187","                  })","188","                )}","193","              <\/a>"],"delete":["21","import { Link } from 'react-router';","24","import { getProjectUrl, getComponentIssuesUrl } from '..\/..\/helpers\/urls';","79","    \/\/ TODO check if source viewer is displayed inside workspace","93","              <Link to={getProjectUrl(project, this.props.branch)} className=\"link-with-icon\">","95","              <\/Link>","100","                <Link to={getProjectUrl(subProject, this.props.branch)} className=\"link-with-icon\">","102","                <\/Link>","129","              <Link","132","                to={{","135","                }}>","137","              <\/Link>","179","              <Link","180","                to={getComponentIssuesUrl(project, {","181","                  resolved: 'false',","182","                  fileUuids: uuid,","183","                  branch: this.props.branch","184","                })}","189","              <\/Link>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-issues-view.js":[{"add":["22","import { getPathUrlAsString, getComponentIssuesUrl, getBaseUrl } from '..\/..\/..\/helpers\/urls';","70","            getPathUrlAsString(","71","              getComponentIssuesUrl(projectBase.key, {","72","                resolved: 'false',","73","                rules: this.model.id","74","              })","75","            )"],"delete":["22","import { getComponentIssuesUrlAsString, getBaseUrl } from '..\/..\/..\/helpers\/urls';","70","            getComponentIssuesUrlAsString(projectBase.key, {","71","              resolved: 'false',","72","              rules: this.model.id","73","            })"]}]}},"ec0c9c265fed27964480ce51edc8a191b5234be7":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/DefaultHttpDownloaderTest.java":"MODIFY","sonar-application\/src\/main\/assembly\/conf\/sonar.properties":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/DefaultHttpDownloaderTest.java":[{"add":["59","import static org.mockito.Matchers.anyString;","61","import static org.mockito.Matchers.eq;","277","  public void https_defaults_are_http_properties() {","278","    DefaultHttpDownloader.SystemFacade system = mock(DefaultHttpDownloader.SystemFacade.class);","279","    Settings settings = new Settings();","280","    settings.setProperty(\"http.proxyHost\", \"1.2.3.4\");","281","    settings.setProperty(\"http.proxyPort\", \"80\");","282","","283","    new DefaultHttpDownloader.BaseHttpDownloader(system, settings, null);","284","","285","    verify(system).setProperty(\"http.proxyHost\", \"1.2.3.4\");","286","    verify(system).setProperty(\"http.proxyPort\", \"80\");","287","    verify(system).setProperty(\"https.proxyHost\", \"1.2.3.4\");","288","    verify(system).setProperty(\"https.proxyPort\", \"80\");","289","  }","290","","291","  @Test","316","  @Test","317","  public void no_http_proxy_settings_by_default() {","318","    DefaultHttpDownloader.SystemFacade system = mock(DefaultHttpDownloader.SystemFacade.class);","319","    Settings settings = new Settings();","320","    new DefaultHttpDownloader.BaseHttpDownloader(system, settings, null);","321","","322","    verify(system, never()).setProperty(eq(\"http.proxyHost\"), anyString());","323","    verify(system, never()).setProperty(eq(\"https.proxyHost\"), anyString());","324","    verify(system, never()).setProperty(eq(\"http.proxyPort\"), anyString());","325","    verify(system, never()).setProperty(eq(\"https.proxyPort\"), anyString());","326","    verify(system, never()).setDefaultAuthenticator(any(Authenticator.class));","327","  }","328",""],"delete":[]}],"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":[{"add":["190","# HTTPS proxy (defaults are values of http.proxyHost and http.proxyPort)"],"delete":["190","","191","# HTTPS proxy (default none)"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":[{"add":["179","    private static final String HTTP_PROXY_HOST = \"http.proxyHost\";","180","    private static final String HTTPS_PROXY_HOST = \"https.proxyHost\";","181","    private static final String HTTP_PROXY_PORT = \"http.proxyPort\";","182","    private static final String HTTPS_PROXY_PORT = \"https.proxyPort\";","185","      HTTP_PROXY_HOST, HTTP_PROXY_PORT, \"http.nonProxyHosts\",","186","      HTTPS_PROXY_HOST, HTTPS_PROXY_PORT,","203","      \/\/ defaults of HTTPS properties are the values of HTTP properties","204","      setSystemPropertyToDefaultIfNotSet(system, settings, HTTPS_PROXY_HOST, HTTP_PROXY_HOST);","205","      setSystemPropertyToDefaultIfNotSet(system, settings, HTTPS_PROXY_PORT, HTTP_PROXY_PORT);","206","","214","    private static void setSystemPropertyToDefaultIfNotSet(SystemFacade system, Settings settings, String httpsProperty, String httpProperty) {","215","      if (!settings.hasKey(httpsProperty) && settings.hasKey(httpProperty)) {","216","        system.setProperty(httpsProperty, settings.getString(httpProperty));","217","      }","218","    }","219",""],"delete":["181","      \"http.proxyHost\", \"http.proxyPort\", \"http.nonProxyHosts\",","182","      \"https.proxyHost\", \"https.proxyPort\","]}]}},"011a9f5a8775fad7400e476577fa4527c234e15a":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/SSLTest.java":"ADD","it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/README":"ADD","it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/clienttruststore.jks":"ADD","it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/serverkeystore.jks":"ADD","it\/it-tests\/src\/test\/java\/it\/Category3Suite.java":"MODIFY","it\/it-tests\/pom.xml":"MODIFY","it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/clientkeystore.jks":"ADD","it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/servertruststore.jks":"ADD","it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/openssl.cnf":"ADD","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/SSLTest.java":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/README":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/clienttruststore.jks":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/serverkeystore.jks":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/Category3Suite.java":[{"add":["32","import it.analysis.SSLTest;","58","  SSLTest.class,"],"delete":[]}],"it\/it-tests\/pom.xml":[{"add":["16","    <jetty.version>9.3.11.v20160721<\/jetty.version>","117","    ","118","    <!-- SSL tests -->","119","    <dependency>","120","      <groupId>org.eclipse.jetty<\/groupId>","121","      <artifactId>jetty-server<\/artifactId>","122","      <version>${jetty.version}<\/version>","123","    <\/dependency>","124","    <dependency>","125","      <groupId>org.eclipse.jetty<\/groupId>","126","      <artifactId>jetty-servlet<\/artifactId>","127","      <version>${jetty.version}<\/version>","128","    <\/dependency>","129","    <dependency>","130","      <groupId>org.eclipse.jetty<\/groupId>","131","      <artifactId>jetty-proxy<\/artifactId>","132","      <version>${jetty.version}<\/version>","133","    <\/dependency>","134","    <dependency>","135","      <groupId>org.sonarsource.scanner.cli<\/groupId>","136","      <artifactId>sonar-scanner-cli<\/artifactId>","137","      <version>2.7<\/version>","138","      <type>zip<\/type>","139","    <\/dependency>"],"delete":[]}],"it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/clientkeystore.jks":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/servertruststore.jks":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/resources\/analysis\/SSLTest\/openssl.cnf":[{"add":[],"delete":[]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":[{"add":["21","import java.io.FileInputStream;","24","import java.security.GeneralSecurityException;","25","import java.security.KeyStore;","26","import java.util.Arrays;","31","import javax.net.ssl.KeyManager;","32","import javax.net.ssl.KeyManagerFactory;","33","import javax.net.ssl.SSLContext;","34","import javax.net.ssl.SSLSocketFactory;","35","import javax.net.ssl.TrustManager;","36","import javax.net.ssl.TrustManagerFactory;","37","import javax.net.ssl.X509TrustManager;","65","  private static final String NONE = \"NONE\";","66","  private static final String P11KEYSTORE = \"PKCS11\";","115","    X509TrustManager systemDefaultTrustManager = systemDefaultTrustManager();","116","    okHttpClientBuilder.sslSocketFactory(systemDefaultSslSocketFactory(systemDefaultTrustManager), systemDefaultTrustManager);","121","  private static X509TrustManager systemDefaultTrustManager() {","122","    try {","123","      TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());","124","      trustManagerFactory.init((KeyStore) null);","125","      TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();","126","      if (trustManagers.length != 1 || !(trustManagers[0] instanceof X509TrustManager)) {","127","        throw new IllegalStateException(\"Unexpected default trust managers:\" + Arrays.toString(trustManagers));","128","      }","129","      return (X509TrustManager) trustManagers[0];","130","    } catch (GeneralSecurityException e) {","131","      \/\/ The system has no TLS. Just give up.","132","      throw new AssertionError(e);","133","    }","134","  }","135","","136","  private static SSLSocketFactory systemDefaultSslSocketFactory(X509TrustManager trustManager) {","137","    KeyManager[] defaultKeyManager;","138","    try {","139","      defaultKeyManager = getDefaultKeyManager();","140","    } catch (Exception e) {","141","      throw new IllegalStateException(\"Unable to get default key manager\", e);","142","    }","143","    try {","144","      SSLContext sslContext = SSLContext.getInstance(\"TLS\");","145","      sslContext.init(defaultKeyManager, new TrustManager[] {trustManager}, null);","146","      return sslContext.getSocketFactory();","147","    } catch (GeneralSecurityException e) {","148","      \/\/ The system has no TLS. Just give up.","149","      throw new AssertionError(e);","150","    }","151","  }","152","","153","  private static void logDebug(String msg) {","154","    boolean debugEnabled = \"all\".equals(System.getProperty(\"javax.net.debug\"));","155","    if (debugEnabled) {","156","      System.out.println(msg);","157","    }","158","  }","159","","160","  \/**","161","   * Inspired from sun.security.ssl.SSLContextImpl#getDefaultKeyManager()","162","   *\/","163","  private static synchronized KeyManager[] getDefaultKeyManager() throws Exception {","164","","165","    final String defaultKeyStore = System.getProperty(\"javax.net.ssl.keyStore\", \"\");","166","    String defaultKeyStoreType = System.getProperty(\"javax.net.ssl.keyStoreType\", KeyStore.getDefaultType());","167","    String defaultKeyStoreProvider = System.getProperty(\"javax.net.ssl.keyStoreProvider\", \"\");","168","","169","    logDebug(\"keyStore is : \" + defaultKeyStore);","170","    logDebug(\"keyStore type is : \" + defaultKeyStoreType);","171","    logDebug(\"keyStore provider is : \" + defaultKeyStoreProvider);","172","","173","    if (P11KEYSTORE.equals(defaultKeyStoreType) && !NONE.equals(defaultKeyStore)) {","174","      throw new IllegalArgumentException(\"if keyStoreType is \" + P11KEYSTORE + \", then keyStore must be \" + NONE);","175","    }","176","","177","    KeyStore ks = null;","178","    String defaultKeyStorePassword = System.getProperty(\"javax.net.ssl.keyStorePassword\", \"\");","179","    char[] passwd = defaultKeyStorePassword.isEmpty() ? null : defaultKeyStorePassword.toCharArray();","180","","181","    \/**","182","     * Try to initialize key store.","183","     *\/","184","    if (!defaultKeyStoreType.isEmpty()) {","185","      logDebug(\"init keystore\");","186","      if (defaultKeyStoreProvider.isEmpty()) {","187","        ks = KeyStore.getInstance(defaultKeyStoreType);","188","      } else {","189","        ks = KeyStore.getInstance(defaultKeyStoreType, defaultKeyStoreProvider);","190","      }","191","      if (!defaultKeyStore.isEmpty() && !NONE.equals(defaultKeyStore)) {","192","        try (FileInputStream fs = new FileInputStream(defaultKeyStore)) {","193","          ks.load(fs, passwd);","194","        }","195","      } else {","196","        ks.load(null, passwd);","197","      }","198","    }","199","","200","    \/*","201","     * Try to initialize key manager.","202","     *\/","203","    logDebug(\"init keymanager of type \" + KeyManagerFactory.getDefaultAlgorithm());","204","    KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());","205","","206","    if (P11KEYSTORE.equals(defaultKeyStoreType)) {","207","      \/\/ do not pass key passwd if using token","208","      kmf.init(ks, null);","209","    } else {","210","      kmf.init(ks, passwd);","211","    }","212","","213","    return kmf.getKeyManagers();","214","  }","215",""],"delete":[]}]}},"cefae4aca32d702db0effe3779dfd0a1e976f8cb":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/EmptyInstance.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/EmptyInstance-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/EmptyInstance.tsx":[{"add":["23","import { Organization, CurrentUser, isLoggedIn, hasGlobalPermission } from '..\/..\/..\/app\/types';","46","      : isLoggedIn(currentUser) && hasGlobalPermission(currentUser, 'provisioning');"],"delete":["23","import { Organization, CurrentUser, isLoggedIn } from '..\/..\/..\/app\/types';","46","      : isLoggedIn(currentUser);"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/EmptyInstance-test.tsx":[{"add":["34","    shallow(","35","      <EmptyInstance","36","        currentUser={{ isLoggedIn: true, permissions: { global: ['provisioning'] } }}","37","        organization={undefined}","38","      \/>","39","    )"],"delete":["34","    shallow(<EmptyInstance currentUser={{ isLoggedIn: true }} organization={undefined} \/>)"]}]}},"d98c3ab5b4bc3615b10ca984681b809e98556450":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerController.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/monitoring\/CeTasksMBeanImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClient.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeHttpModule.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientTest.java":"MODIFY"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":[{"add":[],"delete":["24","   * Requests {@link CeConfiguration} to refresh its state, if it has any.","25","   *\/","26","  void refresh();","27","","28","  \/**"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":[{"add":["22","import javax.annotation.Nullable;","56","    this(configuration, null);","59","  public CeConfigurationImpl(Configuration configuration, @Nullable WorkerCountProvider workerCountProvider) {","62","    if (workerCountProvider == null) {","63","      this.workerCount = DEFAULT_WORKER_COUNT;","64","      this.workerThreadCount = DEFAULT_WORKER_THREAD_COUNT;","65","    } else {","66","      this.workerCount = readWorkerCount(workerCountProvider);","67","      this.workerThreadCount = MAX_WORKER_THREAD_COUNT;","68","    }","71","  private static synchronized int readWorkerCount(WorkerCountProvider workerCountProvider) {","81","      \"Worker count '%s' is invalid. It must be an integer strictly greater than 0 and less or equal to 10\",","82","      value));","87","    \/\/ nothing to do","102","    if (workerCountProvider != null) {","103","      workerCount = readWorkerCount(workerCountProvider);","104","    }"],"delete":["55","    this.workerCountProvider = null;","56","    this.workerThreadCount = DEFAULT_WORKER_THREAD_COUNT;","57","    this.workerCount = DEFAULT_WORKER_COUNT;","58","    this.gracefultStopTimeoutInMs = configuration.getInt(SONAR_CE_GRACEFUL_STOP_TIME_OUT_IN_MS).orElse(GRACEFUL_STOP_TIMEOUT);","61","  public CeConfigurationImpl(Configuration configuration, WorkerCountProvider workerCountProvider) {","63","    this.workerThreadCount = MAX_WORKER_THREAD_COUNT;","64","    this.workerCount = readWorkerCount(workerCountProvider);","68","  private static int readWorkerCount(WorkerCountProvider workerCountProvider) {","78","        \"Worker count '%s' is invalid. It must an integer strictly greater than 0 and less or equal to 10\",","79","        value));","84","    \/\/","93","  public void refresh() {","94","    if (workerCountProvider != null) {","95","      this.workerCount = readWorkerCount(workerCountProvider);","96","    }","97","  }","98","","99","  @Override"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":[{"add":["97","      \"It must be an integer strictly greater than 0 and less or equal to 10\");"],"delete":["22","import java.util.stream.IntStream;","98","      \"It must an integer strictly greater than 0 and less or equal to 10\");","119","  @Test","120","  public void refresh_does_not_change_any_value_when_there_is_no_WorkerCountProvider() {","121","    CeConfigurationImpl underTest = new CeConfigurationImpl(EMPTY_CONFIGURATION);","122","    long cleanCeTasksInitialDelay = underTest.getCleanCeTasksInitialDelay();","123","    long cleanCeTasksDelay = underTest.getCleanCeTasksDelay();","124","    long queuePollingDelay = underTest.getQueuePollingDelay();","125","    int workerThreadCount = underTest.getWorkerMaxCount();","126","    int workerCount = underTest.getWorkerCount();","127","","128","    IntStream.range(0, 1 + abs(new Random().nextInt(10)))","129","      .forEach(ignored -> {","130","        underTest.refresh();","131","        assertThat(underTest.getCleanCeTasksInitialDelay()).isEqualTo(cleanCeTasksInitialDelay);","132","        assertThat(underTest.getCleanCeTasksDelay()).isEqualTo(cleanCeTasksDelay);","133","        assertThat(underTest.getQueuePollingDelay()).isEqualTo(queuePollingDelay);","134","        assertThat(underTest.getWorkerMaxCount()).isEqualTo(workerThreadCount);","135","        assertThat(underTest.getWorkerCount()).isEqualTo(workerCount);","136","      });","137","  }","138","","139","  @Test","140","  public void refresh_updates_only_workerCount_from_WorkerCountProvider_when_there_WorkerCountProvider_is_present() {","141","    workerCountProvider.set(randomValidWorkerCount());","142","    CeConfigurationImpl underTest = new CeConfigurationImpl(EMPTY_CONFIGURATION, workerCountProvider);","143","    long cleanCeTasksInitialDelay = underTest.getCleanCeTasksInitialDelay();","144","    long cleanCeTasksDelay = underTest.getCleanCeTasksDelay();","145","    long queuePollingDelay = underTest.getQueuePollingDelay();","146","    int workerThreadCount = underTest.getWorkerMaxCount();","147","","148","    IntStream.range(0, 1 + abs(new Random().nextInt(10)))","149","      .forEach(ignored -> {","150","        int newWorkerCount = randomValidWorkerCount();","151","        workerCountProvider.set(newWorkerCount);","152","","153","        underTest.refresh();","154","","155","        assertThat(underTest.getCleanCeTasksInitialDelay()).isEqualTo(cleanCeTasksInitialDelay);","156","        assertThat(underTest.getCleanCeTasksDelay()).isEqualTo(cleanCeTasksDelay);","157","        assertThat(underTest.getQueuePollingDelay()).isEqualTo(queuePollingDelay);","158","        assertThat(underTest.getWorkerMaxCount()).isEqualTo(workerThreadCount);","159","        assertThat(underTest.getWorkerCount()).isEqualTo(newWorkerCount);","160","      });","161","  }","162",""]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":[{"add":[],"delete":["21","import java.util.function.Consumer;","35","  private Consumer<CeConfigurationRule> refreshCallHook;","36","","37","  @Override","38","  public void refresh() {","39","    if (this.refreshCallHook != null) {","40","      this.refreshCallHook.accept(this);","41","    }","42","  }","43","","44","  public void setRefreshCallHook(Consumer<CeConfigurationRule> refreshCallHook) {","45","    this.refreshCallHook = refreshCallHook;","46","  }"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImplTest.java":[{"add":["95","  public void workerCount_is_always_reloaded() {","96","    when(ceWorker.getOrdinal()).thenReturn(1);","97","","98","    ceConfigurationRule.setWorkerCount(1);","101","    ceConfigurationRule.setWorkerCount(2);"],"delete":["95","  public void workerCount_is_loaded_in_constructor() {","96","    when(ceWorker.getOrdinal()).thenReturn(randomWorkerCount);","99","    ceConfigurationRule.setWorkerCount(randomWorkerCount + 1);","100","    assertThat(underTest.isEnabled(ceWorker)).isFalse();","101","  }","102","","103","  @Test","104","  public void refresh_reloads_workerCount() {","105","    when(ceWorker.getOrdinal()).thenReturn(randomWorkerCount);","106","    assertThat(underTest.isEnabled(ceWorker)).isFalse();","107","    ceConfigurationRule.setRefreshCallHook((rule) -> rule.setWorkerCount(randomWorkerCount + 1));","108","","109","    underTest.refresh();","110","","114","  @Test","115","  public void refresh_writes_info_log_if_workerCount_is_greater_than_1() {","116","    logTester.clear();","117","    int newWorkerCount = randomWorkerCount + 1;","118","    ceConfigurationRule.setRefreshCallHook((rule) -> rule.setWorkerCount(newWorkerCount));","119","","120","    underTest.refresh();","121","","122","    verifyInfoLog(newWorkerCount);","123","  }","124","","125","  @Test","126","  public void refresh_writes_no_info_log_if_workerCount_is_1() {","127","    logTester.clear();","128","    ceConfigurationRule.setRefreshCallHook((rule) -> rule.setWorkerCount(1));","129","","130","    underTest.refresh();","131","","132","    assertThat(logTester.logs()).isEmpty();","133","  }","134",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientImpl.java":[{"add":[],"delete":["125","  @Override","126","  public void refreshCeWorkerCount() {","127","    call(RefreshCeWorkerCountActionClient.INSTANCE);","128","  }","129","","130","  private enum RefreshCeWorkerCountActionClient implements ActionClient<Void> {","131","    INSTANCE;","132","","133","    @Override","134","    public String getPath() {","135","      return \"refreshWorkerCount\";","136","    }","137","","138","    @Override","139","    public Void getDefault() {","140","      return null;","141","    }","142","","143","    @Override","144","    public Void call(String url) throws Exception {","145","      okhttp3.Request request = new okhttp3.Request.Builder()","146","        .post(RequestBody.create(null, new byte[0]))","147","        .url(url)","148","        .build();","149","      try (okhttp3.Response response = new OkHttpClient().newCall(request).execute()) {","150","        if (response.code() != 200) {","151","          throw new IOException(","152","            String.format(","153","              \"Failed to trigger refresh of CE Worker count. Code was '%s' and response was '%s' for url '%s'\",","154","              response.code(),","155","              response.body().string(),","156","              url));","157","        }","158","        return null;","159","      }","160","    }","161","  }","162",""]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerController.java":[{"add":[],"delete":["30","   * Requests the {@link EnabledCeWorkerController} to refresh its state, if it has any.","31","   *\/","32","  void refresh();","33","","34","  \/**"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/monitoring\/CeTasksMBeanImplTest.java":[{"add":[],"delete":["147","    public void refresh() {","148","      throw new UnsupportedOperationException(\"Refresh is not implemented\");","149","    }","150","","151","    @Override"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/http\/CeHttpClient.java":[{"add":[],"delete":["29","","30","  void refreshCeWorkerCount();"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/EnabledCeWorkerControllerImpl.java":[{"add":["39","    int workerCount = ceConfiguration.getWorkerCount();","40","    if (workerCount > 1) {","41","      Loggers.get(EnabledCeWorkerController.class).info(\"Compute Engine will use {} concurrent workers to process tasks\", workerCount);","63","    return ceWorker.getOrdinal() < ceConfiguration.getWorkerCount();"],"delete":["22","import java.util.concurrent.atomic.AtomicInteger;","29","  private final AtomicInteger workerCount;","37","    this.workerCount = new AtomicInteger(ceConfiguration.getWorkerCount());","42","    if (workerCount.get() > 1) {","43","      Loggers.get(EnabledCeWorkerController.class).info(\"Compute Engine will use {} concurrent workers to process tasks\", this.workerCount);","48","  public void refresh() {","49","    ceConfiguration.refresh();","50","    this.workerCount.set(ceConfiguration.getWorkerCount());","51","    logEnabledWorkerCount();","52","  }","53","","54","  @Override","72","    return ceWorker.getOrdinal() < workerCount.get();"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeHttpModule.java":[{"add":["32","      ChangeLogLevelHttpAction.class);"],"delete":["24","import org.sonar.ce.taskprocessor.RefreshWorkerCountAction;","33","      ChangeLogLevelHttpAction.class,","34","      RefreshWorkerCountAction.class);"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImplTest.java":[{"add":["102","            + 3 \/\/ content of CeHttpModule"],"delete":["102","            + 4 \/\/ content of CeHttpModule"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/http\/CeHttpClientTest.java":[{"add":[],"delete":["135","  @Test","136","  public void refreshCeWorkerCount_throws_ISE_if_http_error() {","137","    String message = \"blah\";","138","    server.enqueue(new MockResponse().setResponseCode(500).setBody(message));","139","    \/\/ initialize registration of process","140","    setUpWithHttpUrl(ProcessId.COMPUTE_ENGINE);","141","","142","    expectedException.expect(IllegalStateException.class);","143","    expectedException.expectMessage(\"Failed to call HTTP server of process \" + ProcessId.COMPUTE_ENGINE);","144","    expectedException.expectCause(hasType(IOException.class)","145","        .andMessage(format(\"Failed to trigger refresh of CE Worker count. Code was '500' and response was 'blah' for url \" +","146","            \"'http:\/\/%s:%s\/refreshWorkerCount'\", server.getHostName(), server.getPort())));","147","","148","    underTest.refreshCeWorkerCount();","149","  }","150","","151","  @Test","152","  public void refreshCeWorkerCount_does_not_fail_when_http_code_is_200() {","153","    server.enqueue(new MockResponse().setResponseCode(200));","154","","155","    setUpWithHttpUrl(ProcessId.COMPUTE_ENGINE);","156","","157","    underTest.refreshCeWorkerCount();","158","  }","159",""]}]}},"d8e27d0f4c166e5baea63c06d4bd2e19f5ceca70":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/source-viewer\/templates\/source-viewer.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":[{"add":["73","      'mouseleave .source-line-filtered .source-line-filtered-container': 'hideFilteredTooltip',","74","      'click @ui.sourceBeforeSpinner': 'loadSourceBefore',","75","      'click @ui.sourceAfterSpinner': 'loadSourceAfter'","547","    \/\/ no op","551","    \/\/ no op","555","    \/\/ no op","602","  loadSourceBefore (e) {","603","    e.preventDefault();","605","    this.$('.js-component-viewer-loading-before').removeClass('hidden');","606","    this.$('.js-component-viewer-source-before').addClass('hidden');","651","  loadSourceAfter (e) {","652","    e.preventDefault();","654","    this.$('.js-component-viewer-loading-after').removeClass('hidden');","655","    this.$('.js-component-viewer-source-after').addClass('hidden');"],"delete":["73","      'mouseleave .source-line-filtered .source-line-filtered-container': 'hideFilteredTooltip'","85","    this.loadSourceBeforeThrottled = _.throttle(this.loadSourceBefore, 1000);","86","    this.loadSourceAfterThrottled = _.throttle(this.loadSourceAfter, 1000);","547","    const that = this;","548","    let p = this.$el.scrollParent();","549","    if (p.is(document) || p.is('body')) {","550","      p = $(window);","551","    }","552","    p.on('scroll.source-viewer', function () {","553","      that.onScroll();","554","    });","558","    let p = this.$el.scrollParent();","559","    if (p.is(document) || p.is('body')) {","560","      p = $(window);","561","    }","562","    p.off('scroll.source-viewer');","566","    let p = this.$el.scrollParent();","567","    if (p.is(document) || p.is('body')) {","568","      p = $(window);","569","    }","570","    const pTopOffset = p.offset() != null ? p.offset().top : 0;","571","    const pPosition = p.scrollTop() + pTopOffset;","572","    if (this.model.get('hasSourceBefore') && (pPosition <= this.ui.sourceBeforeSpinner.offset().top)) {","573","      this.loadSourceBeforeThrottled();","574","    }","575","    if (this.model.get('hasSourceAfter') && (pPosition + p.height() >= this.ui.sourceAfterSpinner.offset().top)) {","576","      return this.loadSourceAfterThrottled();","577","    }","624","  loadSourceBefore () {","670","  loadSourceAfter () {"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2987","source_viewer.load_more_code=Load More Code"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/templates\/source-viewer.hbs":[{"add":["8","        <button class=\"js-component-viewer-source-before\">","9","          {{t 'source_viewer.load_more_code'}}","10","        <\/button>","11","        <div class=\"js-component-viewer-loading-before hidden\">","12","          <i class=\"spinner\"><\/i>","13","          <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>","14","        <\/div>","97","        <button class=\"js-component-viewer-source-after\">","98","          {{t 'source_viewer.load_more_code'}}","99","        <\/button>","100","        <div class=\"js-component-viewer-loading-after hidden\">","101","          <i class=\"spinner\"><\/i>","102","          <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>","103","        <\/div>"],"delete":["8","        <i class=\"spinner js-component-viewer-source-before\"><\/i>","9","        <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>","92","        <i class=\"spinner js-component-viewer-source-after\"><\/i>","93","        <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>"]}]}},"899f67cdb2937a8d209be318ef7caa2a2fdc0cf6":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImpl.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v70\/DeletePersonAndFileMeasures.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/Upsert.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChangeTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImplTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/UpdateOrgQProfilesToPointToBuiltInProfiles.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v56\/PopulateInitialSchema.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/SetRulesProfilesIsBuiltInToTrueForDefaultOrganization.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/MassUpdate.java":[{"add":["74","  public Upsert update(String sql) throws SQLException {","75","    UpsertImpl upsert = UpsertImpl.create(writeConnection, sql);","76","    this.updates.add(upsert);","77","    return upsert;"],"delete":["74","  public MassUpdate update(String sql) throws SQLException {","75","    this.updates.add(UpsertImpl.create(writeConnection, sql));","76","    return this;"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImpl.java":[{"add":["25","import static com.google.common.base.Preconditions.checkArgument;","26","","31","  private int maxBatchSize = MAX_BATCH_SIZE;","39","  public Upsert setBatchSize(int i) {","40","    checkArgument(i >= 0, \"size must be positive. Got %s\", i);","41","    this.maxBatchSize = i;","42","    return this;","43","  }","44","","45","  public int getMaxBatchSize() {","46","    return maxBatchSize;","47","  }","48","","49","  @Override","50","  public boolean addBatch() throws SQLException {","54","    if (batchCount % maxBatchSize == 0L) {","57","      return true;","59","    return false;"],"delete":["36","  public Upsert addBatch() throws SQLException {","40","    if (batchCount % MAX_BATCH_SIZE == 0L) {","44","    return this;"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v70\/DeletePersonAndFileMeasures.java":[{"add":["51","    massUpdate.update(getDeleteSql()).setBatchSize(1);"],"delete":["51","    massUpdate.update(getDeleteSql());"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/Upsert.java":[{"add":["27","  \/**","28","   * Prepare for next statement.","29","   * @return {@code true} if the buffer of batched requests has been sent and transaction","30","   * has been committed, else {@code false}.","31","   *\/","32","  boolean addBatch() throws SQLException;","37","","38","  \/**","39","   * Number of requests required before sending group of batched","40","   * requests and before committing. Default value is {@link UpsertImpl#MAX_BATCH_SIZE}","41","   *\/","42","  Upsert setBatchSize(int i);"],"delete":["27","  Upsert addBatch() throws SQLException;"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChangeTest.java":[{"add":["206","  public void batch_inserts() throws Exception {","213","        boolean committed = upsert","220","        assertThat(committed).isFalse();","221","","222","        committed = upsert","229","        assertThat(committed).isFalse();","230","","239","  public void override_size_of_batch_inserts() throws Exception {","240","    new DataChange(db.database()) {","241","      @Override","242","      public void execute(Context context) throws SQLException {","243","        Upsert upsert = context.prepareUpsert(\"insert into persons(id,login,age,enabled,coeff) values (?,?,?,?,?)\")","244","          .setBatchSize(3);","245","        long id = 100L;","246","        assertThat(addBatchInsert(upsert, id++)).isFalse();","247","        assertThat(addBatchInsert(upsert, id++)).isFalse();","248","        assertThat(addBatchInsert(upsert, id++)).isTrue();","249","        assertThat(addBatchInsert(upsert, id++)).isFalse();","250","        assertThat(addBatchInsert(upsert, id++)).isFalse();","251","        assertThat(addBatchInsert(upsert, id++)).isTrue();","252","        assertThat(addBatchInsert(upsert, id)).isFalse();","253","        upsert.execute().commit().close();","254","      }","255","    }.execute();","256","    assertThat(db.countRowsOfTable(\"persons\")).isEqualTo(7);","257","  }","258","","259","  private boolean addBatchInsert(Upsert upsert, long id) throws SQLException {","260","    return upsert","261","      .setLong(1, id)","262","      .setString(2, \"kurt\")","263","      .setInt(3, 27)","264","      .setBoolean(4, true)","265","      .setDouble(5, 2.2)","266","      .addBatch();","267","  }","268","","269","  @Test"],"delete":["36","","207","  public void batch_insert() throws Exception {","214","        upsert","221","        upsert"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/UpsertImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/UpdateOrgQProfilesToPointToBuiltInProfiles.java":[{"add":["61","      \"where uuid=?\");","62","","63","    massUpdate.execute((row, update) -> {"],"delete":["61","      \"where uuid=?\")","62","      .execute((row, update) -> {"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v56\/PopulateInitialSchema.java":[{"add":["26","import org.sonar.server.platform.db.migration.step.Upsert;","54","    Upsert upsert = context.prepareUpsert(\"insert into groups (name, description, created_at, updated_at) values (?, ?, ?, ?)\");","55","    upsert.setString(1, ADMINS_GROUP)","59","      .addBatch();","60","    upsert.setString(1, USERS_GROUP)","64","      .addBatch();","65","    upsert","74","    Upsert upsert = context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values ((select id from groups where name='\" + ADMINS_GROUP + \"'), null, ?)\");","75","    upsert.setString(1, \"admin\").addBatch();","76","    upsert.setString(1, \"profileadmin\").addBatch();","77","    upsert.setString(1, \"gateadmin\").addBatch();","78","    upsert.setString(1, \"shareDashboard\").addBatch();","79","    upsert.setString(1, \"provisioning\").addBatch();","80","    upsert","85","    upsert = context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values (null, null, ?)\");","86","    upsert.setString(1, \"scan\").addBatch();","87","    upsert.setString(1, \"provisioning\").addBatch();","88","    upsert","112","    Upsert upsert = context.prepareUpsert(\"insert into groups_users (user_id, group_id) values \" +","113","      \"((select id from users where login='\" + ADMIN_USER + \"'), (select id from groups where name=?))\");","114","    upsert.setString(1, ADMINS_GROUP).addBatch();","115","    upsert.setString(1, USERS_GROUP).addBatch();","116","    upsert"],"delete":["53","    context.prepareUpsert(\"insert into groups (name, description, created_at, updated_at) values (?, ?, ?, ?)\")","54","      .setString(1, ADMINS_GROUP)","58","      .addBatch()","59","      .setString(1, USERS_GROUP)","63","      .addBatch()","72","    context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values ((select id from groups where name='\" + ADMINS_GROUP + \"'), null, ?)\")","73","      .setString(1, \"admin\").addBatch()","74","      .setString(1, \"profileadmin\").addBatch()","75","      .setString(1, \"gateadmin\").addBatch()","76","      .setString(1, \"shareDashboard\").addBatch()","77","      .setString(1, \"provisioning\").addBatch()","82","    context.prepareUpsert(\"insert into group_roles (group_id, resource_id, role) values (null, null, ?)\")","83","      .setString(1, \"scan\").addBatch()","84","      .setString(1, \"provisioning\").addBatch()","108","    context.prepareUpsert(\"insert into groups_users (user_id, group_id) values \" +","109","      \"((select id from users where login='\" + ADMIN_USER + \"'), (select id from groups where name=?))\")","110","      .setString(1, ADMINS_GROUP).addBatch()","111","      .setString(1, USERS_GROUP).addBatch()"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v65\/SetRulesProfilesIsBuiltInToTrueForDefaultOrganization.java":[{"add":["54","      \"where kee=?\");","55","    massUpdate.execute((row, update) -> {"],"delete":["52","","55","      \"where kee=?\").execute((row, update) -> {"]}]}},"3def9251b81c6fafc75b3129904ad8887490520d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/ConciseIssueLocationsNavigator-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigator.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigatorLocation.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/CrossFileLocationsNavigator.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/ConciseIssueLocationsNavigatorLocation-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/CrossFileLocationsNavigator-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/__snapshots__\/CrossFileLocationsNavigator-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/__snapshots__\/ConciseIssueLocationsNavigator-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/ConciseIssueLocationsNavigator-test.tsx":[{"add":["52","  expect(shallowRender({ issue })).toMatchSnapshot();","62","  expect(shallowRender({ issue })).toMatchSnapshot();","72","  expect(shallowRender({ issue, selectedFlowIndex: 0 })).toMatchSnapshot();","82","  expect(shallowRender({ issue })).toMatchSnapshot();","92","  const wrapper = shallowRender({ issue });","93","  expect(wrapper.type()).toBeNull();","94","});","95","","96","it('should render taint analysis issues correctly', () => {","97","  const issue = mockIssue(false, {","98","    component: 'foo',","99","    key: '',","100","    flows: [[location1, location2, location3]],","101","    secondaryLocations: [],","102","    type: 'VULNERABILITY'","103","  });","104","","105","  expect(shallowRender({ issue })).toMatchSnapshot();","106","});","107","","108","function shallowRender(overrides: Partial<ConciseIssueLocationsNavigator['props']> = {}) {","109","  return shallow<ConciseIssueLocationsNavigator>(","111","      issue={mockIssue()}","116","      {...overrides}","119","}"],"delete":["52","  expect(","53","    shallow(","54","      <ConciseIssueLocationsNavigator","55","        issue={issue}","56","        onLocationSelect={jest.fn()}","57","        scroll={jest.fn()}","58","        selectedFlowIndex={undefined}","59","        selectedLocationIndex={undefined}","60","      \/>","61","    )","62","  ).toMatchSnapshot();","72","  expect(","73","    shallow(","74","      <ConciseIssueLocationsNavigator","75","        issue={issue}","76","        onLocationSelect={jest.fn()}","77","        scroll={jest.fn()}","78","        selectedFlowIndex={undefined}","79","        selectedLocationIndex={undefined}","80","      \/>","81","    )","82","  ).toMatchSnapshot();","92","  expect(","93","    shallow(","94","      <ConciseIssueLocationsNavigator","95","        issue={issue}","96","        onLocationSelect={jest.fn()}","97","        scroll={jest.fn()}","98","        selectedFlowIndex={0}","99","        selectedLocationIndex={undefined}","100","      \/>","101","    )","102","  ).toMatchSnapshot();","112","  expect(","113","    shallow(","114","      <ConciseIssueLocationsNavigator","115","        issue={issue}","116","        onLocationSelect={jest.fn()}","117","        scroll={jest.fn()}","118","        selectedFlowIndex={undefined}","119","        selectedLocationIndex={undefined}","120","      \/>","121","    )","122","  ).toMatchSnapshot();","132","  const wrapper = shallow(","134","      issue={issue}","141","  expect(wrapper.type()).toBeNull();","142","});"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigator.tsx":[{"add":["41","    const isTaintAnalysis =","42","      this.props.issue.type === 'VULNERABILITY' && this.props.issue.flows.length > 0;","43","","53","          isTaintAnalysis={isTaintAnalysis}","67","              isTaintAnalysis={isTaintAnalysis}"],"delete":["63","              issueType={this.props.issue.type}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssueLocationsNavigatorLocation.tsx":[{"add":["25","  isTaintAnalysis: boolean;","65","    const { index, isTaintAnalysis, message, selected, totalCount } = this.props;","75","            {isTaintAnalysis ? this.prefixMessage(index, message, totalCount) : message}"],"delete":["25","  issueType: T.IssueType;","65","    const { index, issueType, message, selected, totalCount } = this.props;","75","            {issueType === 'VULNERABILITY'","76","              ? this.prefixMessage(index, message, totalCount)","77","              : message}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/CrossFileLocationsNavigator.tsx":[{"add":["25","  isTaintAnalysis: boolean;","114","        isTaintAnalysis={this.props.isTaintAnalysis}"],"delete":["113","        issueType={this.props.issue.type}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/ConciseIssueLocationsNavigatorLocation-test.tsx":[{"add":["27","  expect(shallowRender({ index: 0, isTaintAnalysis: true, totalCount: 4 })).toMatchSnapshot();","28","  expect(shallowRender({ index: 1, isTaintAnalysis: true, totalCount: 4 })).toMatchSnapshot();","29","  expect(shallowRender({ index: 3, isTaintAnalysis: true, totalCount: 4 })).toMatchSnapshot();","36","      isTaintAnalysis={false}"],"delete":["27","  expect(shallowRender({ index: 0, issueType: 'VULNERABILITY', totalCount: 4 })).toMatchSnapshot();","28","  expect(shallowRender({ index: 1, issueType: 'VULNERABILITY', totalCount: 4 })).toMatchSnapshot();","29","  expect(shallowRender({ index: 3, issueType: 'VULNERABILITY', totalCount: 4 })).toMatchSnapshot();","36","      issueType=\"BUG\""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/CrossFileLocationsNavigator-test.tsx":[{"add":["48","      isTaintAnalysis={false}","66","      isTaintAnalysis={false}","80","      isTaintAnalysis={false}","97","      isTaintAnalysis={false}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/__snapshots__\/CrossFileLocationsNavigator-test.tsx.snap":[{"add":["23","        isTaintAnalysis={false}","68","        isTaintAnalysis={false}"],"delete":["23","        issueType=\"BUG\"","68","        issueType=\"BUG\""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/__tests__\/__snapshots__\/ConciseIssueLocationsNavigator-test.tsx.snap":[{"add":["4","  isTaintAnalysis={false}","100","    isTaintAnalysis={false}","110","    isTaintAnalysis={false}","127","    isTaintAnalysis={false}","137","    isTaintAnalysis={false}","154","    isTaintAnalysis={false}","164","    isTaintAnalysis={false}","174","","175","exports[`should render taint analysis issues correctly 1`] = `","176","<CrossFileLocationsNavigator","177","  isTaintAnalysis={true}","178","  issue={","179","    Object {","180","      \"actions\": Array [],","181","      \"component\": \"foo\",","182","      \"componentLongName\": \"main.js\",","183","      \"componentQualifier\": \"FIL\",","184","      \"componentUuid\": \"foo1234\",","185","      \"creationDate\": \"2017-03-01T09:36:01+0100\",","186","      \"flows\": Array [","187","        Array [","188","          Object {","189","            \"component\": \"foo\",","190","            \"componentName\": \"src\/foo.js\",","191","            \"msg\": \"Do not use foo\",","192","            \"textRange\": Object {","193","              \"endLine\": 7,","194","              \"endOffset\": 8,","195","              \"startLine\": 7,","196","              \"startOffset\": 5,","197","            },","198","          },","199","          Object {","200","            \"component\": \"foo\",","201","            \"componentName\": \"src\/foo.js\",","202","            \"msg\": \"Do not use foo\",","203","            \"textRange\": Object {","204","              \"endLine\": 8,","205","              \"endOffset\": 5,","206","              \"startLine\": 8,","207","              \"startOffset\": 0,","208","            },","209","          },","210","          Object {","211","            \"component\": \"bar\",","212","            \"componentName\": \"src\/bar.js\",","213","            \"msg\": \"Do not use bar\",","214","            \"textRange\": Object {","215","              \"endLine\": 16,","216","              \"endOffset\": 6,","217","              \"startLine\": 15,","218","              \"startOffset\": 4,","219","            },","220","          },","221","        ],","222","      ],","223","      \"fromHotspot\": false,","224","      \"key\": \"\",","225","      \"line\": 25,","226","      \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","227","      \"organization\": \"myorg\",","228","      \"project\": \"myproject\",","229","      \"projectKey\": \"foo\",","230","      \"projectName\": \"Foo\",","231","      \"projectOrganization\": \"org\",","232","      \"rule\": \"javascript:S1067\",","233","      \"ruleName\": \"foo\",","234","      \"secondaryLocations\": Array [],","235","      \"severity\": \"MAJOR\",","236","      \"status\": \"OPEN\",","237","      \"textRange\": Object {","238","        \"endLine\": 26,","239","        \"endOffset\": 15,","240","        \"startLine\": 25,","241","        \"startOffset\": 0,","242","      },","243","      \"transitions\": Array [],","244","      \"type\": \"VULNERABILITY\",","245","    }","246","  }","247","  locations={","248","    Array [","249","      Object {","250","        \"component\": \"foo\",","251","        \"componentName\": \"src\/foo.js\",","252","        \"msg\": \"Do not use foo\",","253","        \"textRange\": Object {","254","          \"endLine\": 7,","255","          \"endOffset\": 8,","256","          \"startLine\": 7,","257","          \"startOffset\": 5,","258","        },","259","      },","260","      Object {","261","        \"component\": \"foo\",","262","        \"componentName\": \"src\/foo.js\",","263","        \"msg\": \"Do not use foo\",","264","        \"textRange\": Object {","265","          \"endLine\": 8,","266","          \"endOffset\": 5,","267","          \"startLine\": 8,","268","          \"startOffset\": 0,","269","        },","270","      },","271","      Object {","272","        \"component\": \"bar\",","273","        \"componentName\": \"src\/bar.js\",","274","        \"msg\": \"Do not use bar\",","275","        \"textRange\": Object {","276","          \"endLine\": 16,","277","          \"endOffset\": 6,","278","          \"startLine\": 15,","279","          \"startOffset\": 4,","280","        },","281","      },","282","    ]","283","  }","284","  onLocationSelect={[MockFunction]}","285","  scroll={[MockFunction]}","286","\/>","287","`;"],"delete":["99","    issueType=\"BUG\"","109","    issueType=\"BUG\"","126","    issueType=\"BUG\"","136","    issueType=\"BUG\"","153","    issueType=\"BUG\"","163","    issueType=\"BUG\""]}]}},"694a04647ca6b64e1d39f01400168a7a5d0595e1":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/api\/resources_controller.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/api\/resources_controller.rb":[{"add":["125","      measures_limit = nil","193","                                     # SONAR-6584 avoid OOM errors","194","                                     :limit => measures_limit ? measures_limit : 10000)"],"delete":["125","      # SONAR-6584 avoid OOM errors","126","      measures_limit = 10000","194","                                     :limit => measures_limit)"]}]}},"724cf4fa763199ea4a0c04d9596cdbc73070b554":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["419","  <select id=\"selectForIndexing\" parameterType=\"map\" resultType=\"Component\" fetchSize=\"${_scrollFetchSize}\" resultSetType=\"FORWARD_ONLY\">"],"delete":["419","  <select id=\"selectForIndexing\" parameterType=\"map\" resultType=\"Component\">"]}]}},"8de6cde7ea0ff5aaf43d59e4dff13484f83b7cf8":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryDataTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryData.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryDataTest.java":[{"add":["25","import java.util.List;","31","import org.sonar.api.utils.log.LogTester;","32","import org.sonar.api.utils.log.LoggerLevel;","48","  @Rule","49","  public LogTester logTester = new LogTester().setLevel(LoggerLevel.DEBUG);","50","","87","      List<String> debugLogs = logTester.logs(LoggerLevel.DEBUG);","88","      assertThat(debugLogs.stream()","89","        .anyMatch(s -> s.startsWith(\"Invalid FILE_SOURCES.DATA on row with ID 1, data will be ignored\"))).isTrue();"],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryData.java":[{"add":["23","import com.google.common.base.Throwables;","151","      Loggers.get(FeedFileSourcesBinaryData.class).debug(","152","        \"Invalid FILE_SOURCES.DATA on row with ID {}, data will be ignored. {}\", fileSourceId, Throwables.getStackTraceAsString(e));"],"delete":["150","      Loggers.get(FeedFileSourcesBinaryData.class).error(","151","        String.format(\"Invalid FILE_SOURCES.DATA on row with ID %s, data will be ignored: %s\", fileSourceId, data), e);"]}]}},"17968cf78d5f505c1ce3fb3ae5c8be6bf22684cd":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensor.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/GenericCoverageMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/tests\/GenericTestExecutionMediumTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensorTest.java":[{"add":["23","import java.nio.charset.StandardCharsets;","24","import java.util.HashMap;","25","import java.util.Map;","31","import org.sonar.api.config.Encryption;","37","import org.sonar.scanner.bootstrap.GlobalAnalysisMode;","38","import org.sonar.scanner.config.DefaultConfiguration;","40","import org.sonar.scanner.scan.ProjectSettings;","57","    FileUtils.write(report, \"<unitTest version=\\\"1\\\"><file path=\\\"A.java\\\"><testCase name=\\\"test1\\\" duration=\\\"500\\\"\/><\/file><\/unitTest>\", StandardCharsets.UTF_8);","59","","60","    Map<String, String> settings = new HashMap<>();","61","    settings.put(GenericTestExecutionSensor.OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY, \"report.xml\");","62","    PropertyDefinitions defs = new PropertyDefinitions(GenericTestExecutionSensor.properties());","63","    DefaultConfiguration config = new ProjectSettings(defs, new Encryption(null), mock(GlobalAnalysisMode.class), settings);","64","","65","    new GenericTestExecutionSensor(mock(TestPlanBuilder.class), config).execute(context);"],"delete":["50","    FileUtils.write(report, \"<unitTest version=\\\"1\\\"><file path=\\\"A.java\\\"><testCase name=\\\"test1\\\" duration=\\\"500\\\"\/><\/file><\/unitTest>\");","52","    Settings settings = new MapSettings(new PropertyDefinitions(GenericTestExecutionSensor.properties()));","53","    settings.setProperty(GenericTestExecutionSensor.OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY, \"report.xml\");","54","    context.setSettings(settings);","55","    new GenericTestExecutionSensor(mock(TestPlanBuilder.class)).execute(context);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":[{"add":["24","import java.nio.charset.StandardCharsets;","59","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","60","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\", StandardCharsets.UTF_8);","95","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","97","    FileUtils.write(xooUtCoverageFile, \"2:2:2:2\\n4:0\", StandardCharsets.UTF_8);","99","    FileUtils.write(xooItCoverageFile, \"2:2:2:1\\n3:1\\n5:0\", StandardCharsets.UTF_8);","139","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","140","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\", StandardCharsets.UTF_8);","173","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","174","    FileUtils.write(measuresFile, \"executable_lines_data:2=1;3=1;4=0\", StandardCharsets.UTF_8);","216","    FileUtils.write(xooFile1, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","217","    FileUtils.write(measuresFile1, \"executable_lines_data:2=1;3=1;4=0\", StandardCharsets.UTF_8);","221","    FileUtils.write(xooFile2, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\", StandardCharsets.UTF_8);","222","    FileUtils.write(measuresFile2, \"executable_lines_data:2=1;3=1;4=0\", StandardCharsets.UTF_8);"],"delete":["58","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","59","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\");","94","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","96","    FileUtils.write(xooUtCoverageFile, \"2:2:2:2\\n4:0\");","98","    FileUtils.write(xooItCoverageFile, \"2:2:2:1\\n3:1\\n5:0\");","138","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","139","    FileUtils.write(xooUtCoverageFile, \"2:2:2:1\\n3:1\");","172","    FileUtils.write(xooFile, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","173","    FileUtils.write(measuresFile, \"executable_lines_data:2=1;3=1;4=0\");","215","    FileUtils.write(xooFile1, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","216","    FileUtils.write(measuresFile1, \"executable_lines_data:2=1;3=1;4=0\");","220","    FileUtils.write(xooFile2, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","221","    FileUtils.write(measuresFile2, \"executable_lines_data:2=1;3=1;4=0\");"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensor.java":[{"add":["34","import org.sonar.scanner.config.DefaultConfiguration;","65","  private final DefaultConfiguration config;","67","  public GenericCoverageSensor(DefaultConfiguration config) {","79","        .multiValues(true)","85","  private void loadArrayDeprecated(Set<String> reportPaths, String propertyKey) {","86","    if (config.getOriginalProperties().containsKey(propertyKey)) {","92","  private void loadDeprecated(Set<String> reportPaths, String propertyKey) {","93","    if (config.getOriginalProperties().containsKey(propertyKey)) {","94","      LOG.warn(\"Property '{}' is deprecated. Please use '{}' instead.\", propertyKey, REPORT_PATHS_PROPERTY_KEY);","95","      config.get(propertyKey).ifPresent(reportPaths::add);","96","    }","97","  }","98","","130","    loadArrayDeprecated(reportPaths, OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","131","    loadArrayDeprecated(reportPaths, OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","132","    loadArrayDeprecated(reportPaths, OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY);"],"delete":["30","import org.sonar.api.config.Configuration;","65","  private final Configuration config;","67","  public GenericCoverageSensor(Configuration config) {","84","  private void loadDeprecated(Set<String> reportPaths, String propertyKey) {","85","    if (config.hasKey(propertyKey)) {","122","    loadDeprecated(reportPaths, OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","123","    loadDeprecated(reportPaths, OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY);","124","    loadDeprecated(reportPaths, OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/genericcoverage\/GenericTestExecutionSensor.java":[{"add":["31","import org.sonar.scanner.config.DefaultConfiguration;","48","  private final DefaultConfiguration configuration;","50","  public GenericTestExecutionSensor(TestPlanBuilder testPlanBuilder, DefaultConfiguration configuration) {","52","    this.configuration = configuration;","63","        .multiValues(true)","76","    if (configuration.getOriginalProperties().containsKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY)) {","79","","80","    for (String reportPath : configuration.getStringArray(REPORT_PATHS_PROPERTY_KEY)) {"],"delete":["48","  public GenericTestExecutionSensor(TestPlanBuilder testPlanBuilder) {","62","","73","    if (context.settings().hasKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY)) {","76","    for (String reportPath : context.settings().getStringArray(REPORT_PATHS_PROPERTY_KEY)) {"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/genericcoverage\/GenericCoverageSensorTest.java":[{"add":["21","import java.util.HashMap;","22","import java.util.Map;","26","import org.sonar.api.config.Encryption;","30","import org.sonar.scanner.bootstrap.GlobalAnalysisMode;","31","import org.sonar.scanner.config.DefaultConfiguration;","32","import org.sonar.scanner.scan.ProjectSettings;","35","import static org.mockito.Mockito.mock;","44","    Map<String, String> settings = new HashMap<>();","45","    settings.put(GenericCoverageSensor.OLD_REPORT_PATH_PROPERTY_KEY, \"old.xml\");","46","    settings.put(GenericCoverageSensor.OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old1.xml,old2.xml\");","47","    settings.put(GenericCoverageSensor.OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old3.xml,old4.xml,old.xml\");","48","    settings.put(GenericCoverageSensor.OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old5.xml,old6.xml\");","49","","50","    PropertyDefinitions defs = new PropertyDefinitions(GenericCoverageSensor.properties());","51","    DefaultConfiguration config = new ProjectSettings(defs, new Encryption(null), mock(GlobalAnalysisMode.class), settings);","52","","53","    Set<String> reportPaths = new GenericCoverageSensor(config).loadReportPaths();","54",""],"delete":["25","import org.sonar.api.config.internal.MapSettings;","38","    MapSettings settings = new MapSettings(new PropertyDefinitions(GenericCoverageSensor.properties()));","39","    settings.setProperty(GenericCoverageSensor.OLD_REPORT_PATH_PROPERTY_KEY, \"old.xml\");","40","    settings.setProperty(GenericCoverageSensor.OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old1.xml,old2.xml\");","41","    settings.setProperty(GenericCoverageSensor.OLD_IT_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old3.xml,old4.xml,old.xml\");","42","    settings.setProperty(GenericCoverageSensor.OLD_OVERALL_COVERAGE_REPORT_PATHS_PROPERTY_KEY, \"old5.xml,old6.xml\");","43","    Set<String> reportPaths = new GenericCoverageSensor(settings.asConfig()).loadReportPaths();","53",""]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":[{"add":[],"delete":["23","import org.apache.commons.lang.StringUtils;"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/GenericCoverageMediumTest.java":[{"add":["23","import java.util.ArrayList;","24","import java.util.List;","37","  private final List<String> logs = new ArrayList<>();","38","  ","50","      .setLogOutput((msg, level) -> logs.add(msg))","83","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.coverageReportPaths'\"));","84","","85","  }","86","  ","87","  @Test","88","  public void warnAboutDeprecatedProperty() {","89","    File projectDir = new File(\"src\/test\/resources\/mediumtest\/xoo\/sample-generic-coverage\");","90","","91","    tester","92","      .setLogOutput((msg, level) -> logs.add(msg))","93","      .newScanTask(new File(projectDir, \"sonar-project.properties\"))","94","      .property(\"sonar.genericcoverage.reportPath\", \"coverage.xml\")","95","      .execute();","96","      ","97","      ","98","    assertThat(logs).anyMatch(l -> l.contains(\"Please use 'sonar.coverageReportPaths'\"));","107","      .setLogOutput((msg, level) -> logs.add(msg))","140","    ","141","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.coverageReportPaths'\"));","143","  "],"delete":["35","","78","","119","","122",""]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":[{"add":["49","  private final Map<String, String> originalProperties;","56","    this.originalProperties = Collections.unmodifiableMap(props);","84","  public Map<String, String> getOriginalProperties() {","85","    return originalProperties;","86","  }","87",""],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/tests\/GenericTestExecutionMediumTest.java":[{"add":["24","import java.nio.charset.StandardCharsets;","25","import java.util.ArrayList;","26","import java.util.List;","43","  private final List<String> logs = new ArrayList<>();","63","    FileUtils.write(xooFile, \"foo\", StandardCharsets.UTF_8);","66","    FileUtils.write(xooTestFile, \"failure\\nerror\\nok\\nskipped\", StandardCharsets.UTF_8);","72","      \"success:4:::OK:INTEGRATION\", StandardCharsets.UTF_8);","74","    TaskResult result = tester","75","      .newTask()","106","      .setLogOutput((msg, level) -> logs.add(msg))","141","    ","142","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.testExecutionReportPaths'\"));","151","      .setLogOutput((msg, level) -> logs.add(msg))","190","    ","191","    assertThat(logs).noneMatch(l -> l.contains(\"Please use 'sonar.testExecutionReportPaths'\"));"],"delete":["59","    FileUtils.write(xooFile, \"foo\");","62","    FileUtils.write(xooTestFile, \"failure\\nerror\\nok\\nskipped\");","68","      \"success:4:::OK:INTEGRATION\");","70","    TaskResult result = tester.newTask()"]}]}},"f2a73bce4278b987c7ad008a1ea83621a97550f5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeak-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverall-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverallMeasures-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeakMeasures-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":[{"add":["34","      <div className=\"project-card-measure\" data-key=\"new_reliability_rating\">","116","      <div className=\"project-card-measure project-card-ncloc\" data-key=\"new_lines\">"],"delete":["34","      <div className=\"project-card-measure smaller-card\" data-key=\"new_reliability_rating\">","116","      <div className=\"project-card-measure smaller-card project-card-ncloc\" data-key=\"new_lines\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeak-test.tsx.snap":[{"add":["11","      className=\"project-card-header\"","12","    >","13","      <h2","14","        className=\"project-card-name\"","15","      >","16","        <Connect(ProjectCardOrganization)","17","          organization={","18","            Object {","19","              \"key\": \"org\",","20","              \"name\": \"org\",","21","            }","22","          }","23","        \/>","24","        <Link","25","          onlyActiveOnIndex={false}","26","          style={Object {}}","27","          to={","28","            Object {","29","              \"pathname\": \"\/dashboard\",","30","              \"query\": Object {","31","                \"id\": \"foo\",","32","              },","33","            }","34","          }","35","        >","36","          Foo","37","        <\/Link>","38","      <\/h2>","39","      <ProjectCardQualityGate","40","        status=\"OK\"","41","      \/>","42","      <div","43","        className=\"project-card-header-right\"","44","      \/>","45","    <\/div>"],"delete":["10","    <h2","11","      className=\"project-card-name\"","12","    >","13","      <Connect(ProjectCardOrganization)","14","        organization={","15","          Object {","16","            \"key\": \"org\",","17","            \"name\": \"org\",","18","          }","19","        }","20","      \/>","21","      <Link","22","        onlyActiveOnIndex={false}","23","        style={Object {}}","24","        to={","25","          Object {","26","            \"pathname\": \"\/dashboard\",","27","            \"query\": Object {","28","              \"id\": \"foo\",","29","            },","30","          }","31","        }","32","      >","33","        Foo","34","      <\/Link>","35","    <\/h2>","36","    <ProjectCardQualityGate","37","      status=\"OK\"","38","    \/>","40","      className=\"pull-right text-right\"","41","    \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverall-test.tsx.snap":[{"add":["11","      className=\"project-card-header\"","12","    >","13","      <h2","14","        className=\"project-card-name\"","15","      >","16","        <Connect(ProjectCardOrganization)","17","          organization={","18","            Object {","19","              \"key\": \"org\",","20","              \"name\": \"org\",","21","            }","22","          }","23","        \/>","24","        <Link","25","          onlyActiveOnIndex={false}","26","          style={Object {}}","27","          to={","28","            Object {","29","              \"pathname\": \"\/dashboard\",","30","              \"query\": Object {","31","                \"id\": \"foo\",","32","              },","33","            }","34","          }","35","        >","36","          Foo","37","        <\/Link>","38","      <\/h2>","39","      <ProjectCardQualityGate","40","        status=\"OK\"","41","      \/>","42","      <div","43","        className=\"project-card-header-right\"","44","      \/>","45","    <\/div>"],"delete":["10","    <h2","11","      className=\"project-card-name\"","12","    >","13","      <Connect(ProjectCardOrganization)","14","        organization={","15","          Object {","16","            \"key\": \"org\",","17","            \"name\": \"org\",","18","          }","19","        }","20","      \/>","21","      <Link","22","        onlyActiveOnIndex={false}","23","        style={Object {}}","24","        to={","25","          Object {","26","            \"pathname\": \"\/dashboard\",","27","            \"query\": Object {","28","              \"id\": \"foo\",","29","            },","30","          }","31","        }","32","      >","33","        Foo","34","      <\/Link>","35","    <\/h2>","36","    <ProjectCardQualityGate","37","      status=\"OK\"","38","    \/>","40","      className=\"pull-right text-right\"","41","    \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverallMeasures-test.tsx.snap":[{"add":["57","    className=\"project-card-measure\""],"delete":["57","    className=\"project-card-measure smaller-card\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/styles.css":[{"add":["67",".project-card-header {","68","  display: flex;","69","  align-items: center;","70","}","71","","72",".project-card-header-right {","73","  margin-left: auto;","74","}","75","","78","  overflow: hidden;","79","  text-overflow: ellipsis;","80","  white-space: nowrap;","157","  white-space: nowrap;"],"delete":["111",".project-card-measure.smaller-card {","112","  width: 90px;","113","}","114",""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":[{"add":["44","    <div className=\"boxed-group project-card\" data-key={project.key}>","46","        <div className=\"project-card-header\">","47","          {project.isFavorite != null && (","48","            <Favorite","49","              className=\"spacer-right\"","50","              component={project.key}","51","              favorite={project.isFavorite}","52","              qualifier=\"TRK\"","53","            \/>","55","          <h2 className=\"project-card-name\">","56","            {!organization && (","57","              <ProjectCardOrganizationContainer organization={project.organization} \/>","58","            )}","59","            <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","60","          <\/h2>","61","          {project.analysisDate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","62","          <div className=\"project-card-header-right\">","63","            {isPrivate && (","64","              <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","65","            )}","66","            {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}","67","          <\/div>"],"delete":["44","    <div data-key={project.key} className=\"boxed-group project-card\">","46","        {project.isFavorite != null && (","47","          <Favorite","48","            className=\"spacer-right\"","49","            component={project.key}","50","            favorite={project.isFavorite}","51","            qualifier=\"TRK\"","52","          \/>","53","        )}","54","        <h2 className=\"project-card-name\">","55","          {!organization && (","56","            <ProjectCardOrganizationContainer organization={project.organization} \/>","58","          <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","59","        <\/h2>","60","        {project.analysisDate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","61","        <div className=\"pull-right text-right\">","62","          {isPrivate && (","63","            <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","64","          )}","65","          {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":[{"add":["43","    <div className=\"boxed-group project-card\" data-key={project.key}>","45","        <div className=\"project-card-header\">","46","          {project.isFavorite !== undefined && (","47","            <Favorite","48","              className=\"spacer-right\"","49","              component={project.key}","50","              favorite={project.isFavorite}","51","              qualifier=\"TRK\"","52","            \/>","54","          <h2 className=\"project-card-name\">","55","            {!organization && (","56","              <ProjectCardOrganizationContainer organization={project.organization} \/>","57","            )}","58","            <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","59","          <\/h2>","60","          {project.analysisDate && <ProjectCardQualityGate status={measures['alert_status']} \/>}","61","          <div className=\"project-card-header-right\">","62","            {isPrivate && (","63","              <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","64","            )}","65","            {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}","66","          <\/div>"],"delete":["43","    <div data-key={project.key} className=\"boxed-group project-card\">","45","        {project.isFavorite !== undefined && (","46","          <Favorite","47","            className=\"spacer-right\"","48","            component={project.key}","49","            favorite={project.isFavorite}","50","            qualifier=\"TRK\"","51","          \/>","52","        )}","53","        <h2 className=\"project-card-name\">","54","          {!organization && (","55","            <ProjectCardOrganizationContainer organization={project.organization} \/>","57","          <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","58","        <\/h2>","59","        {project.analysisDate && <ProjectCardQualityGate status={measures['alert_status']} \/>}","60","        <div className=\"pull-right text-right\">","61","          {isPrivate && (","62","            <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","63","          )}","64","          {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeakMeasures-test.tsx.snap":[{"add":["7","    className=\"project-card-measure\"","143","    className=\"project-card-measure project-card-ncloc\"","173","    className=\"project-card-measure\"","307","    className=\"project-card-measure project-card-ncloc\""],"delete":["7","    className=\"project-card-measure smaller-card\"","143","    className=\"project-card-measure smaller-card project-card-ncloc\"","173","    className=\"project-card-measure smaller-card\"","307","    className=\"project-card-measure smaller-card project-card-ncloc\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":[{"add":["42","      <div className=\"project-card-measure\" data-key=\"reliability_rating\">"],"delete":["42","      <div className=\"project-card-measure smaller-card\" data-key=\"reliability_rating\">"]}]}},"279deef3e8534bba914245ccf10610a459073640":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainerNotFound.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AzureDevOps.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectKey\/__tests__\/__snapshots__\/Key-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Account.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Home.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileContainer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/Notifications.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/BranchAnalysis.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/CreateOrganization.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/__snapshots__\/CreateOrganization-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/PageTracker-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/AdminContainer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationEdit.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/__tests__\/__snapshots__\/Home-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/PageTracker-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/components\/__tests__\/__snapshots__\/Account-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/__snapshots__\/BackgroundTasksApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Details.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/Extension-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectsContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/UsersApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavHeader-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/AdminContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/__snapshots__\/Extension-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationPage.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/CreateProjectPageSonarCloud-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Security.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/AllProjects-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarQube.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Home.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/CreateOrganization-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AsAService.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarCloud.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/__tests__\/__snapshots__\/AppContainer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.tsx":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/BackgroundTasksApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/__tests__\/__snapshots__\/UsersApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/WebApiApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationPage-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/EncryptionApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavHeader.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/__tests__\/__snapshots__\/Details-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SonarLintIntegration.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectQualityGate\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Template.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/Extension.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/NotFound.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/common\/OrganizationHelmet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/__tests__\/__snapshots__\/OrganizationMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/App-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SQHome.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/OrganizationMembers.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationEdit-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Contact.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/__tests__\/__snapshots__\/Notifications-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectKey\/Key.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/PageTracker.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Pricing.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainerNotFound.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AzureDevOps.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityApp.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","58","      <Helmet defer={false} title={translate('project_activity.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","58","      <Helmet title={translate('project_activity.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectKey\/__tests__\/__snapshots__\/Key-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","50","  <Helmet","51","    defer={false}","88","  <Helmet","89","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","50","  <HelmetWrapper","51","    defer={true}","88","  <HelmetWrapper","89","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Account.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","54","        <Helmet defaultTitle={title} defer={false} titleTemplate={`%s - ${title}`} \/>"],"delete":["20","import Helmet from 'react-helmet';","54","        <Helmet defaultTitle={title} titleTemplate={'%s - ' + title} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Home.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","37","      <Helmet defer={false} title={translate('permission_templates.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","37","      <Helmet title={translate('permission_templates.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileContainer-test.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';"],"delete":["21","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/Notifications.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","47","      <Helmet defer={false} title={translate('my_account.notifications')} \/>"],"delete":["21","import Helmet from 'react-helmet';","47","      <Helmet title={translate('my_account.notifications')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","28","  <Helmet"],"delete":["7","  <HelmetWrapper","28","  <HelmetWrapper"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/BranchAnalysis.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/CreateOrganization.tsx":[{"add":["23","import { Helmet } from 'react-helmet-async';","427","        <Helmet defer={false} title={header} titleTemplate=\"%s\" \/>"],"delete":["23","import { Helmet } from 'react-helmet';","427","        <Helmet title={header} titleTemplate=\"%s\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/__snapshots__\/CreateOrganization-test.tsx.snap":[{"add":["4","  <Helmet","5","    defer={false}","94","  <Helmet","95","    defer={false}","220","  <Helmet","221","    defer={false}","280","  <Helmet","281","    defer={false}","408","  <Helmet","409","    defer={false}"],"delete":["4","  <HelmetWrapper","5","    defer={true}","94","  <HelmetWrapper","95","    defer={true}","220","  <HelmetWrapper","221","    defer={true}","280","  <HelmetWrapper","281","    defer={true}","408","  <HelmetWrapper","409","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/PageTracker-test.tsx":[{"add":["57","  expect(wrapper.find('Helmet').prop('onChangeClientState')).toBe(wrapper.instance().trackPage);","72","  expect(wrapper.find('Helmet').prop('onChangeClientState')).toBe(wrapper.instance().trackPage);"],"delete":["57","  expect(wrapper.find('HelmetWrapper').prop('onChangeClientState')).toBe(","58","    wrapper.instance().trackPage","59","  );","74","  expect(wrapper.find('HelmetWrapper').prop('onChangeClientState')).toBe(","75","    wrapper.instance().trackPage","76","  );"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/AdminContainer-test.tsx.snap":[{"add":["4","  <Helmet","6","    defer={false}"],"delete":["4","  <HelmetWrapper","6","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationEdit.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","115","        <Helmet defer={false} title={title} \/>"],"delete":["21","import Helmet from 'react-helmet';","115","        <Helmet title={title} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/__tests__\/__snapshots__\/Home-test.tsx.snap":[{"add":["49","      <Helmet","58","      <\/Helmet>"],"delete":["49","      <HelmetWrapper","58","      <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/PageTracker-test.tsx.snap":[{"add":["3","<Helmet","4","  defer={false}","10","<Helmet","11","  defer={false}"],"delete":["3","<HelmetWrapper","4","  defer={true}","10","<HelmetWrapper","11","  defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/components\/__tests__\/__snapshots__\/Account-test.tsx.snap":[{"add":["9","  <Helmet","11","    defer={false}"],"delete":["9","  <HelmetWrapper","11","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","149","        <Helmet defer={false} title={translate('custom_metrics.page')} \/>"],"delete":["20","import { Helmet } from 'react-helmet';","149","        <Helmet title={translate('custom_metrics.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["9","  <Helmet","10","    defer={false}","48","  <Helmet","49","    defer={false}"],"delete":["9","  <HelmetWrapper","10","    defer={true}","48","  <HelmetWrapper","49","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","133","        <Helmet defer={false} title={translate('project_quality_profiles.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","133","        <Helmet title={translate('project_quality_profiles.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/__snapshots__\/BackgroundTasksApp-test.tsx.snap":[{"add":["19","  <Helmet","20","    defer={false}"],"delete":["19","  <HelmetWrapper","20","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityApp-test.tsx.snap":[{"add":["10","  <Helmet","11","    defer={false}"],"delete":["10","  <HelmetWrapper","11","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["46","  <Helmet","47","    defer={false}","55","  <\/Helmet>","100","  <Helmet","101","    defer={false}","109","  <\/Helmet>"],"delete":["46","  <HelmetWrapper","47","    defer={true}","55","  <\/HelmetWrapper>","100","  <HelmetWrapper","101","    defer={true}","109","  <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Details.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","140","              <Helmet defer={false} title={qualityGate.name} \/>"],"delete":["20","import Helmet from 'react-helmet';","140","              <Helmet title={qualityGate.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/Extension-test.tsx":[{"add":["30","jest.mock('react-helmet-async', () => ({","31","  Helmet: () => null","32","}));","33",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["22","import { Helmet } from 'react-helmet-async';","561","        <Helmet defer={false} title={translate('coding_rules.page')}>"],"delete":["22","import { Helmet } from 'react-helmet';","561","        <Helmet title={translate('coding_rules.page')}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectsContainer.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","37","  <Helmet","38","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","37","  <HelmetWrapper","38","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","94","        <Helmet defer={false} title={translate('project_links.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","94","        <Helmet title={translate('project_links.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","135","        <Helmet defaultTitle={translate('maintenance.page')} defer={false} \/>"],"delete":["21","import Helmet from 'react-helmet';","135","        <Helmet defaultTitle={translate('maintenance.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","32","      <Helmet defer={false} title={translate('deletion.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","32","      <Helmet title={translate('deletion.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/UsersApp.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","122","        <Helmet defer={false} title={translate('users.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","122","        <Helmet title={translate('users.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavHeader-test.tsx.snap":[{"add":["4","  <Helmet"],"delete":["4","  <HelmetWrapper"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/AdminContainer.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","122","        <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} \/>"],"delete":["20","import Helmet from 'react-helmet';","122","        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/__snapshots__\/Extension-test.tsx.snap":[{"add":["43","    <Helmet","45","    \/>","92","    <Helmet","94","    \/>"],"delete":["43","    <HelmetWrapper","44","      defer={true}","45","      encodeSpecialCharacters={true}","47","    >","48","      <SideEffect(NullComponent)","49","        defer={true}","50","        encodeSpecialCharacters={true}","51","        title=\"Foo\"","52","      >","53","        <NullComponent","54","          defer={true}","55","          encodeSpecialCharacters={true}","56","          title=\"Foo\"","57","        \/>","58","      <\/SideEffect(NullComponent)>","59","    <\/HelmetWrapper>","106","    <HelmetWrapper","107","      defer={true}","108","      encodeSpecialCharacters={true}","110","    >","111","      <SideEffect(NullComponent)","112","        defer={true}","113","        encodeSpecialCharacters={true}","114","        title=\"Foo\"","115","      >","116","        <NullComponent","117","          defer={true}","118","          encodeSpecialCharacters={true}","119","          title=\"Foo\"","120","        \/>","121","      <\/SideEffect(NullComponent)>","122","    <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationPage.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","99","        <Helmet","100","          defaultTitle={organization.name}","101","          defer={false}","102","          titleTemplate={`%s - ${organization.name}`}","103","        \/>"],"delete":["21","import Helmet from 'react-helmet';","99","        <Helmet defaultTitle={organization.name} titleTemplate={'%s - ' + organization.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["3","<Helmet","4","  defer={false}","11","<Helmet","12","  defer={false}","19","<Helmet","20","  defer={false}"],"delete":["3","<HelmetWrapper","4","  defer={true}","11","<HelmetWrapper","12","  defer={true}","19","<HelmetWrapper","20","  defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/CreateProjectPageSonarCloud-test.tsx.snap":[{"add":["4","  <Helmet","33","  <Helmet","105","  <Helmet","170","  <Helmet"],"delete":["4","  <HelmetWrapper","33","  <HelmetWrapper","105","  <HelmetWrapper","170","  <HelmetWrapper"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","143","        <Helmet defer={false} title={translate('user_groups.page')} \/>"],"delete":["20","import { Helmet } from 'react-helmet';","143","        <Helmet title={translate('user_groups.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","122","        <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} \/>"],"delete":["20","import Helmet from 'react-helmet';","122","        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Security.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","34","      <Helmet defer={false} title={translate('my_account.security')} \/>"],"delete":["20","import Helmet from 'react-helmet';","34","      <Helmet title={translate('my_account.security')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","373","        <Helmet defer={false} title={translate('permissions.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","373","        <Helmet title={translate('permissions.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","185","        <Helmet defer={false} title={translate('projects_management')} \/>"],"delete":["21","import Helmet from 'react-helmet';","185","        <Helmet title={translate('projects_management')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/AllProjects-test.tsx.snap":[{"add":["35","  <Helmet","36","    defer={false}","181","  <Helmet","182","    defer={false}","273","  <Helmet","274","    defer={false}","296","  <Helmet","297","    defer={false}","322","  <Helmet","323","    defer={false}"],"delete":["35","  <HelmetWrapper","36","    defer={true}","181","  <HelmetWrapper","182","    defer={true}","273","  <HelmetWrapper","274","    defer={true}","296","  <HelmetWrapper","297","    defer={true}","322","  <HelmetWrapper","323","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';"],"delete":["21","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarQube.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["30","  <Helmet","31","    defer={false}","372","  <Helmet","373","    defer={false}"],"delete":["30","  <HelmetWrapper","31","    defer={true}","372","  <HelmetWrapper","373","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Home.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["9","  <Helmet","10","    defer={false}","46","  <Helmet","47","    defer={false}","62","  <Helmet","63","    defer={false}"],"delete":["9","  <HelmetWrapper","10","    defer={true}","46","  <HelmetWrapper","47","    defer={true}","62","  <HelmetWrapper","63","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/CreateOrganization-test.tsx":[{"add":["23","import { HelmetProvider } from 'react-helmet-async';","315","  return mount<CreateOrganization>(<HelmetProvider>{createComponent(props)}<\/HelmetProvider>);"],"delete":["314","  return mount<CreateOrganization>(createComponent(props));"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AsAService.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarCloud.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.tsx":[{"add":["23","import { HelmetProvider } from 'react-helmet-async';","99","    <HelmetProvider>","100","      <Provider store={store}>","101","        <IntlProvider defaultLocale={lang} locale={lang}>","102","          <ThemeProvider theme={theme}>","103","            <Router history={history} onUpdate={handleUpdate}>","104","              <Route","105","                path=\"\/account\/issues\"","106","                onEnter={(_, replace) => {","107","                  replace({ pathname: '\/issues', query: { myIssues: 'true', resolved: 'false' } });","108","                }}","109","              \/>","111","              <Route","112","                path=\"\/codingrules\"","113","                onEnter={(_, replace) => {","114","                  replace('\/coding_rules' + window.location.hash);","115","                }}","116","              \/>","118","              <Route","119","                path=\"\/dashboard\/index\/:key\"","120","                onEnter={(nextState, replace) => {","121","                  replace({ pathname: '\/dashboard', query: { id: nextState.params.key } });","122","                }}","123","              \/>","125","              <Route","126","                path=\"\/issues\/search\"","127","                onEnter={(_, replace) => {","128","                  replace('\/issues' + window.location.hash);","129","                }}","130","              \/>","132","              <Redirect from=\"\/admin\" to=\"\/admin\/settings\" \/>","133","              <Redirect from=\"\/background_tasks\" to=\"\/admin\/background_tasks\" \/>","134","              <Redirect from=\"\/component\/index\" to=\"\/component\" \/>","135","              <Redirect from=\"\/component_issues\" to=\"\/project\/issues\" \/>","136","              <Redirect from=\"\/dashboard\/index\" to=\"\/dashboard\" \/>","137","              <Redirect","138","                from=\"\/documentation\/analysis\/languages\/vb\"","139","                to=\"\/documentation\/analysis\/languages\/vbnet\/\"","140","              \/>","141","              <Redirect from=\"\/governance\" to=\"\/portfolio\" \/>","142","              <Redirect from=\"\/groups\" to=\"\/admin\/groups\" \/>","143","              <Redirect from=\"\/extension\/governance\/portfolios\" to=\"\/portfolios\" \/>","144","              <Redirect from=\"\/metrics\" to=\"\/admin\/custom_metrics\" \/>","145","              <Redirect from=\"\/permission_templates\" to=\"\/admin\/permission_templates\" \/>","146","              <Redirect from=\"\/profiles\/index\" to=\"\/profiles\" \/>","147","              <Redirect from=\"\/projects_admin\" to=\"\/admin\/projects_management\" \/>","148","              <Redirect from=\"\/quality_gates\/index\" to=\"\/quality_gates\" \/>","149","              <Redirect from=\"\/roles\/global\" to=\"\/admin\/permissions\" \/>","150","              <Redirect from=\"\/admin\/roles\/global\" to=\"\/admin\/permissions\" \/>","151","              <Redirect from=\"\/settings\" to=\"\/admin\/settings\" \/>","152","              <Redirect from=\"\/settings\/encryption\" to=\"\/admin\/settings\/encryption\" \/>","153","              <Redirect from=\"\/settings\/index\" to=\"\/admin\/settings\" \/>","154","              <Redirect from=\"\/sessions\/login\" to=\"\/sessions\/new\" \/>","155","              <Redirect from=\"\/system\" to=\"\/admin\/system\" \/>","156","              <Redirect from=\"\/system\/index\" to=\"\/admin\/system\" \/>","157","              <Redirect from=\"\/view\" to=\"\/portfolio\" \/>","158","              <Redirect from=\"\/users\" to=\"\/admin\/users\" \/>","160","              <Route","161","                path=\"markdown\/help\"","162","                component={lazyLoad(() => import('..\/components\/MarkdownHelp'))}","163","              \/>","165","              <Route component={lazyLoad(() => import('..\/components\/SimpleContainer'))}>","166","                <Route path=\"maintenance\">{maintenanceRoutes}<\/Route>","167","                <Route path=\"setup\">{setupRoutes}<\/Route>","170","              <Route component={MigrationContainer}>","171","                <Route component={lazyLoad(() => import('..\/components\/SimpleSessionsContainer'))}>","172","                  <RouteWithChildRoutes path=\"\/sessions\" childRoutes={sessionsRoutes} \/>","173","                <\/Route>","175","                <Route path=\"\/\" component={App}>","176","                  <IndexRoute component={lazyLoad(() => import('..\/components\/Landing'))} \/>","177","                  <RouteWithChildRoutes path=\"about\" childRoutes={aboutRoutes} \/>","178","","179","                  <Route component={GlobalContainer}>","180","                    <RouteWithChildRoutes path=\"account\" childRoutes={accountRoutes} \/>","181","                    {!isSonarCloud() && (","182","                      <RouteWithChildRoutes path=\"coding_rules\" childRoutes={codingRulesRoutes} \/>","184","                    <RouteWithChildRoutes path=\"documentation\" childRoutes={documentationRoutes} \/>","185","                    <Route path=\"explore\" component={Explore}>","186","                      <Route path=\"issues\" component={ExploreIssues} \/>","187","                      <Route path=\"projects\" component={ExploreProjects} \/>","192","                        import('..\/components\/extensions\/GlobalPageExtension')","195","                    <Route path=\"issues\" component={IssuesPageSelector} \/>","196","                    <RouteWithChildRoutes path=\"onboarding\" childRoutes={onboardingRoutes} \/>","197","                    {isSonarCloud() && (","198","                      <Route","199","                        path=\"create-organization\"","200","                        component={lazyLoad(() =>","201","                          import('..\/..\/apps\/create\/organization\/CreateOrganization')","202","                        )}","203","                      \/>","205","                    <RouteWithChildRoutes path=\"organizations\" childRoutes={organizationsRoutes} \/>","206","                    <RouteWithChildRoutes path=\"projects\" childRoutes={projectsRoutes} \/>","207","                    <RouteWithChildRoutes path=\"quality_gates\" childRoutes={qualityGatesRoutes} \/>","208","                    <Route","209","                      path=\"portfolios\"","210","                      component={lazyLoad(() => import('..\/components\/extensions\/PortfoliosPage'))}","211","                    \/>","212","                    {!isSonarCloud() && (","213","                      <RouteWithChildRoutes path=\"profiles\" childRoutes={qualityProfilesRoutes} \/>","214","                    )}","215","                    <RouteWithChildRoutes path=\"web_api\" childRoutes={webAPIRoutes} \/>","216","","217","                    <Route component={lazyLoad(() => import('..\/components\/ComponentContainer'))}>","218","                      <RouteWithChildRoutes path=\"code\" childRoutes={codeRoutes} \/>","219","                      <RouteWithChildRoutes","220","                        path=\"component_measures\"","221","                        childRoutes={componentMeasuresRoutes}","222","                      \/>","223","                      <RouteWithChildRoutes path=\"dashboard\" childRoutes={overviewRoutes} \/>","224","                      <RouteWithChildRoutes path=\"portfolio\" childRoutes={portfolioRoutes} \/>","225","                      <RouteWithChildRoutes","226","                        path=\"project\/activity\"","227","                        childRoutes={projectActivityRoutes}","228","                      \/>","229","                      <Route","230","                        path=\"project\/extension\/:pluginKey\/:extensionKey\"","231","                        component={lazyLoad(() =>","232","                          import('..\/components\/extensions\/ProjectPageExtension')","233","                        )}","234","                      \/>","235","                      <Route path=\"project\/issues\" component={Issues} \/>","236","                      <RouteWithChildRoutes","237","                        path=\"project\/quality_gate\"","238","                        childRoutes={projectQualityGateRoutes}","239","                      \/>","240","                      <RouteWithChildRoutes","241","                        path=\"project\/quality_profiles\"","242","                        childRoutes={projectQualityProfilesRoutes}","243","                      \/>","244","                      <Route","245","                        component={lazyLoad(() => import('..\/components\/ProjectAdminContainer'))}>","246","                        {!isSonarCloud() && (","247","                          <RouteWithChildRoutes","248","                            path=\"custom_measures\"","249","                            childRoutes={customMeasuresRoutes}","250","                          \/>","251","                        )}","252","                        <Route","253","                          path=\"project\/admin\/extension\/:pluginKey\/:extensionKey\"","254","                          component={lazyLoad(() =>","255","                            import('..\/components\/extensions\/ProjectAdminPageExtension')","256","                          )}","257","                        \/>","258","                        <RouteWithChildRoutes","259","                          path=\"project\/background_tasks\"","260","                          childRoutes={backgroundTasksRoutes}","261","                        \/>","262","                        <RouteWithChildRoutes","263","                          path=\"project\/baseline\"","264","                          childRoutes={projectBaselineRoutes}","265","                        \/>","266","                        <RouteWithChildRoutes","267","                          path=\"project\/branches\"","268","                          childRoutes={projectBranchesRoutes}","269","                        \/>","270","                        <RouteWithChildRoutes","271","                          path=\"project\/settings\"","272","                          childRoutes={settingsRoutes}","273","                        \/>","274","                        <RouteWithChildRoutes","275","                          path=\"project_roles\"","276","                          childRoutes={projectPermissionsRoutes}","277","                        \/>","278","                        <RouteWithChildRoutes","279","                          path=\"project\/webhooks\"","280","                          childRoutes={webhooksRoutes}","281","                        \/>","282","                        <Route","283","                          path=\"project\/deletion\"","284","                          component={lazyLoad(() => import('..\/..\/apps\/projectDeletion\/App'))}","285","                        \/>","286","                        <Route","287","                          path=\"project\/links\"","288","                          component={lazyLoad(() => import('..\/..\/apps\/projectLinks\/App'))}","289","                        \/>","290","                        <Route","291","                          path=\"project\/key\"","292","                          component={lazyLoad(() => import('..\/..\/apps\/projectKey\/Key'))}","293","                        \/>","294","                      <\/Route>","295","                    <\/Route>","296","","297","                    <Route","298","                      component={lazyLoad(() => import('..\/components\/AdminContainer'))}","299","                      path=\"admin\">","300","                      <Route","301","                        path=\"extension\/:pluginKey\/:extensionKey\"","302","                        component={lazyLoad(() =>","303","                          import('..\/components\/extensions\/GlobalAdminPageExtension')","304","                        )}","305","                      \/>","306","                      <RouteWithChildRoutes","307","                        path=\"background_tasks\"","308","                        childRoutes={backgroundTasksRoutes}","309","                      \/>","310","                      <RouteWithChildRoutes","311","                        path=\"custom_metrics\"","312","                        childRoutes={customMetricsRoutes}","313","                      \/>","314","                      {!isSonarCloud() && (","315","                        <>","316","                          <RouteWithChildRoutes path=\"groups\" childRoutes={groupsRoutes} \/>","317","                          <RouteWithChildRoutes","318","                            path=\"permission_templates\"","319","                            childRoutes={permissionTemplatesRoutes}","320","                          \/>","321","                          <RouteWithChildRoutes","322","                            path=\"permissions\"","323","                            childRoutes={globalPermissionsRoutes}","324","                          \/>","325","                          <RouteWithChildRoutes","326","                            path=\"projects_management\"","327","                            childRoutes={projectsManagementRoutes}","328","                          \/>","329","                        <\/>","330","                      )}","331","                      <RouteWithChildRoutes path=\"settings\" childRoutes={settingsRoutes} \/>","332","                      <RouteWithChildRoutes path=\"system\" childRoutes={systemRoutes} \/>","333","                      <RouteWithChildRoutes path=\"marketplace\" childRoutes={marketplaceRoutes} \/>","334","                      <RouteWithChildRoutes path=\"users\" childRoutes={usersRoutes} \/>","335","                      <RouteWithChildRoutes path=\"webhooks\" childRoutes={webhooksRoutes} \/>","336","                    <\/Route>","338","                  <Route","339","                    path=\"not_found\"","340","                    component={lazyLoad(() => import('..\/components\/NotFound'))}","341","                  \/>","342","                  <Route path=\"*\" component={lazyLoad(() => import('..\/components\/NotFound'))} \/>","345","            <\/Router>","346","          <\/ThemeProvider>","347","        <\/IntlProvider>","348","      <\/Provider>","349","    <\/HelmetProvider>,"],"delete":["98","    <Provider store={store}>","99","      <IntlProvider defaultLocale={lang} locale={lang}>","100","        <ThemeProvider theme={theme}>","101","          <Router history={history} onUpdate={handleUpdate}>","102","            <Route","103","              path=\"\/account\/issues\"","104","              onEnter={(_, replace) => {","105","                replace({ pathname: '\/issues', query: { myIssues: 'true', resolved: 'false' } });","106","              }}","107","            \/>","109","            <Route","110","              path=\"\/codingrules\"","111","              onEnter={(_, replace) => {","112","                replace('\/coding_rules' + window.location.hash);","113","              }}","114","            \/>","116","            <Route","117","              path=\"\/dashboard\/index\/:key\"","118","              onEnter={(nextState, replace) => {","119","                replace({ pathname: '\/dashboard', query: { id: nextState.params.key } });","120","              }}","121","            \/>","123","            <Route","124","              path=\"\/issues\/search\"","125","              onEnter={(_, replace) => {","126","                replace('\/issues' + window.location.hash);","127","              }}","128","            \/>","130","            <Redirect from=\"\/admin\" to=\"\/admin\/settings\" \/>","131","            <Redirect from=\"\/background_tasks\" to=\"\/admin\/background_tasks\" \/>","132","            <Redirect from=\"\/component\/index\" to=\"\/component\" \/>","133","            <Redirect from=\"\/component_issues\" to=\"\/project\/issues\" \/>","134","            <Redirect from=\"\/dashboard\/index\" to=\"\/dashboard\" \/>","135","            <Redirect","136","              from=\"\/documentation\/analysis\/languages\/vb\"","137","              to=\"\/documentation\/analysis\/languages\/vbnet\/\"","138","            \/>","139","            <Redirect from=\"\/governance\" to=\"\/portfolio\" \/>","140","            <Redirect from=\"\/groups\" to=\"\/admin\/groups\" \/>","141","            <Redirect from=\"\/extension\/governance\/portfolios\" to=\"\/portfolios\" \/>","142","            <Redirect from=\"\/metrics\" to=\"\/admin\/custom_metrics\" \/>","143","            <Redirect from=\"\/permission_templates\" to=\"\/admin\/permission_templates\" \/>","144","            <Redirect from=\"\/profiles\/index\" to=\"\/profiles\" \/>","145","            <Redirect from=\"\/projects_admin\" to=\"\/admin\/projects_management\" \/>","146","            <Redirect from=\"\/quality_gates\/index\" to=\"\/quality_gates\" \/>","147","            <Redirect from=\"\/roles\/global\" to=\"\/admin\/permissions\" \/>","148","            <Redirect from=\"\/admin\/roles\/global\" to=\"\/admin\/permissions\" \/>","149","            <Redirect from=\"\/settings\" to=\"\/admin\/settings\" \/>","150","            <Redirect from=\"\/settings\/encryption\" to=\"\/admin\/settings\/encryption\" \/>","151","            <Redirect from=\"\/settings\/index\" to=\"\/admin\/settings\" \/>","152","            <Redirect from=\"\/sessions\/login\" to=\"\/sessions\/new\" \/>","153","            <Redirect from=\"\/system\" to=\"\/admin\/system\" \/>","154","            <Redirect from=\"\/system\/index\" to=\"\/admin\/system\" \/>","155","            <Redirect from=\"\/view\" to=\"\/portfolio\" \/>","156","            <Redirect from=\"\/users\" to=\"\/admin\/users\" \/>","158","            <Route","159","              path=\"markdown\/help\"","160","              component={lazyLoad(() => import('..\/components\/MarkdownHelp'))}","161","            \/>","163","            <Route component={lazyLoad(() => import('..\/components\/SimpleContainer'))}>","164","              <Route path=\"maintenance\">{maintenanceRoutes}<\/Route>","165","              <Route path=\"setup\">{setupRoutes}<\/Route>","166","            <\/Route>","167","","168","            <Route component={MigrationContainer}>","169","              <Route component={lazyLoad(() => import('..\/components\/SimpleSessionsContainer'))}>","170","                <RouteWithChildRoutes path=\"\/sessions\" childRoutes={sessionsRoutes} \/>","173","              <Route path=\"\/\" component={App}>","174","                <IndexRoute component={lazyLoad(() => import('..\/components\/Landing'))} \/>","175","                <RouteWithChildRoutes path=\"about\" childRoutes={aboutRoutes} \/>","177","                <Route component={GlobalContainer}>","178","                  <RouteWithChildRoutes path=\"account\" childRoutes={accountRoutes} \/>","179","                  {!isSonarCloud() && (","180","                    <RouteWithChildRoutes path=\"coding_rules\" childRoutes={codingRulesRoutes} \/>","181","                  )}","182","                  <RouteWithChildRoutes path=\"documentation\" childRoutes={documentationRoutes} \/>","183","                  <Route path=\"explore\" component={Explore}>","184","                    <Route path=\"issues\" component={ExploreIssues} \/>","185","                    <Route path=\"projects\" component={ExploreProjects} \/>","186","                  <\/Route>","187","                  <Route","188","                    path=\"extension\/:pluginKey\/:extensionKey\"","189","                    component={lazyLoad(() =>","190","                      import('..\/components\/extensions\/GlobalPageExtension')","192","                  \/>","193","                  <Route path=\"issues\" component={IssuesPageSelector} \/>","194","                  <RouteWithChildRoutes path=\"onboarding\" childRoutes={onboardingRoutes} \/>","195","                  {isSonarCloud() && (","196","                    <Route","197","                      path=\"create-organization\"","198","                      component={lazyLoad(() =>","199","                        import('..\/..\/apps\/create\/organization\/CreateOrganization')","200","                      )}","201","                    \/>","202","                  )}","203","                  <RouteWithChildRoutes path=\"organizations\" childRoutes={organizationsRoutes} \/>","204","                  <RouteWithChildRoutes path=\"projects\" childRoutes={projectsRoutes} \/>","205","                  <RouteWithChildRoutes path=\"quality_gates\" childRoutes={qualityGatesRoutes} \/>","206","                  <Route","207","                    path=\"portfolios\"","208","                    component={lazyLoad(() => import('..\/components\/extensions\/PortfoliosPage'))}","209","                  \/>","210","                  {!isSonarCloud() && (","211","                    <RouteWithChildRoutes path=\"profiles\" childRoutes={qualityProfilesRoutes} \/>","212","                  )}","213","                  <RouteWithChildRoutes path=\"web_api\" childRoutes={webAPIRoutes} \/>","214","","215","                  <Route component={lazyLoad(() => import('..\/components\/ComponentContainer'))}>","216","                    <RouteWithChildRoutes path=\"code\" childRoutes={codeRoutes} \/>","217","                    <RouteWithChildRoutes","218","                      path=\"component_measures\"","219","                      childRoutes={componentMeasuresRoutes}","220","                    \/>","221","                    <RouteWithChildRoutes path=\"dashboard\" childRoutes={overviewRoutes} \/>","222","                    <RouteWithChildRoutes path=\"portfolio\" childRoutes={portfolioRoutes} \/>","223","                    <RouteWithChildRoutes","224","                      path=\"project\/activity\"","225","                      childRoutes={projectActivityRoutes}","226","                    \/>","227","                    <Route","228","                      path=\"project\/extension\/:pluginKey\/:extensionKey\"","229","                      component={lazyLoad(() =>","230","                        import('..\/components\/extensions\/ProjectPageExtension')","231","                      )}","232","                    \/>","233","                    <Route path=\"project\/issues\" component={Issues} \/>","234","                    <RouteWithChildRoutes","235","                      path=\"project\/quality_gate\"","236","                      childRoutes={projectQualityGateRoutes}","237","                    \/>","238","                    <RouteWithChildRoutes","239","                      path=\"project\/quality_profiles\"","240","                      childRoutes={projectQualityProfilesRoutes}","241","                    \/>","242","                    <Route","243","                      component={lazyLoad(() => import('..\/components\/ProjectAdminContainer'))}>","244","                      {!isSonarCloud() && (","245","                        <RouteWithChildRoutes","246","                          path=\"custom_measures\"","247","                          childRoutes={customMeasuresRoutes}","248","                        \/>","249","                      )}","250","                      <Route","251","                        path=\"project\/admin\/extension\/:pluginKey\/:extensionKey\"","252","                        component={lazyLoad(() =>","253","                          import('..\/components\/extensions\/ProjectAdminPageExtension')","254","                        )}","255","                      \/>","256","                      <RouteWithChildRoutes","257","                        path=\"project\/background_tasks\"","258","                        childRoutes={backgroundTasksRoutes}","259","                      \/>","260","                      <RouteWithChildRoutes","261","                        path=\"project\/baseline\"","262","                        childRoutes={projectBaselineRoutes}","263","                      \/>","264","                      <RouteWithChildRoutes","265","                        path=\"project\/branches\"","266","                        childRoutes={projectBranchesRoutes}","267","                      \/>","268","                      <RouteWithChildRoutes path=\"project\/settings\" childRoutes={settingsRoutes} \/>","269","                      <RouteWithChildRoutes","270","                        path=\"project_roles\"","271","                        childRoutes={projectPermissionsRoutes}","272","                      \/>","273","                      <RouteWithChildRoutes path=\"project\/webhooks\" childRoutes={webhooksRoutes} \/>","274","                      <Route","275","                        path=\"project\/deletion\"","276","                        component={lazyLoad(() => import('..\/..\/apps\/projectDeletion\/App'))}","277","                      \/>","278","                      <Route","279","                        path=\"project\/links\"","280","                        component={lazyLoad(() => import('..\/..\/apps\/projectLinks\/App'))}","281","                      \/>","282","                      <Route","283","                        path=\"project\/key\"","284","                        component={lazyLoad(() => import('..\/..\/apps\/projectKey\/Key'))}","285","                      \/>","287","                  <\/Route>","288","","289","                  <Route","290","                    component={lazyLoad(() => import('..\/components\/AdminContainer'))}","291","                    path=\"admin\">","295","                        import('..\/components\/extensions\/GlobalAdminPageExtension')","298","                    <RouteWithChildRoutes","299","                      path=\"background_tasks\"","300","                      childRoutes={backgroundTasksRoutes}","301","                    \/>","302","                    <RouteWithChildRoutes path=\"custom_metrics\" childRoutes={customMetricsRoutes} \/>","303","                    {!isSonarCloud() && (","304","                      <>","305","                        <RouteWithChildRoutes path=\"groups\" childRoutes={groupsRoutes} \/>","306","                        <RouteWithChildRoutes","307","                          path=\"permission_templates\"","308","                          childRoutes={permissionTemplatesRoutes}","309","                        \/>","310","                        <RouteWithChildRoutes","311","                          path=\"permissions\"","312","                          childRoutes={globalPermissionsRoutes}","313","                        \/>","314","                        <RouteWithChildRoutes","315","                          path=\"projects_management\"","316","                          childRoutes={projectsManagementRoutes}","317","                        \/>","318","                      <\/>","320","                    <RouteWithChildRoutes path=\"settings\" childRoutes={settingsRoutes} \/>","321","                    <RouteWithChildRoutes path=\"system\" childRoutes={systemRoutes} \/>","322","                    <RouteWithChildRoutes path=\"marketplace\" childRoutes={marketplaceRoutes} \/>","323","                    <RouteWithChildRoutes path=\"users\" childRoutes={usersRoutes} \/>","324","                    <RouteWithChildRoutes path=\"webhooks\" childRoutes={webhooksRoutes} \/>","327","                <Route","328","                  path=\"not_found\"","329","                  component={lazyLoad(() => import('..\/components\/NotFound'))}","330","                \/>","331","                <Route path=\"*\" component={lazyLoad(() => import('..\/components\/NotFound'))} \/>","333","            <\/Route>","334","          <\/Router>","335","        <\/ThemeProvider>","336","      <\/IntlProvider>","337","    <\/Provider>,"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/__tests__\/__snapshots__\/AppContainer-test.tsx.snap":[{"add":["10","  <Helmet","11","    defer={false}","46","  <Helmet","47","    defer={false}","82","  <Helmet","83","    defer={false}","118","  <Helmet","119","    defer={false}","152","  <Helmet","153","    defer={false}","188","  <Helmet","189","    defer={false}"],"delete":["10","  <HelmetWrapper","11","    defer={true}","46","  <HelmetWrapper","47","    defer={true}","82","  <HelmetWrapper","83","    defer={true}","118","  <HelmetWrapper","119","    defer={true}","152","  <HelmetWrapper","153","    defer={true}","188","  <HelmetWrapper","189","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","160","        <Helmet defer={false} title={translate('api_documentation.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","160","        <Helmet title={translate('api_documentation.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","95","        <Helmet defer={false} title={translate('settings.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","95","        <Helmet title={translate('settings.page')} \/>"]}],"server\/sonar-web\/package.json":[{"add":["29","    \"react-helmet-async\": \"1.0.4\",","68","    \"@types\/react-helmet\": \"5.0.14\","],"delete":["29","    \"react-helmet\": \"5.2.0\",","68","    \"@types\/react-helmet\": \"5.0.8\","]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/BackgroundTasksApp.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","220","        <Helmet defer={false} title={translate('background_tasks.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","220","        <Helmet title={translate('background_tasks.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/__tests__\/__snapshots__\/UsersApp-test.tsx.snap":[{"add":["10","  <Helmet","11","    defer={false}","51","  <Helmet","52","    defer={false}"],"delete":["10","  <HelmetWrapper","11","    defer={true}","51","  <HelmetWrapper","52","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["4","  <Helmet","6","    defer={false}","65","  <Helmet","67","    defer={false}","126","  <Helmet","128","    defer={false}","167","  <Helmet","169","    defer={false}","208","  <Helmet","210","    defer={false}","242","  <Helmet","244","    defer={false}","283","  <Helmet","285","    defer={false}","313","  <Helmet","315","    defer={false}","347","  <Helmet","349","    defer={false}","381","  <Helmet","383","    defer={false}","409","  <Helmet","411","    defer={false}","459","  <Helmet","461","    defer={false}"],"delete":["4","  <HelmetWrapper","6","    defer={true}","65","  <HelmetWrapper","67","    defer={true}","126","  <HelmetWrapper","128","    defer={true}","167","  <HelmetWrapper","169","    defer={true}","208","  <HelmetWrapper","210","    defer={true}","242","  <HelmetWrapper","244","    defer={true}","283","  <HelmetWrapper","285","    defer={true}","313","  <HelmetWrapper","315","    defer={true}","347","  <HelmetWrapper","349","    defer={true}","381","  <HelmetWrapper","383","    defer={true}","409","  <HelmetWrapper","411","    defer={true}","459","  <HelmetWrapper","461","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/WebApiApp-test.tsx.snap":[{"add":["9","  <Helmet","10","    defer={false}"],"delete":["9","  <HelmetWrapper","10","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","123","        <Helmet defer={false} title={translate('system_info.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","123","        <Helmet title={translate('system_info.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationPage-test.tsx.snap":[{"add":["21","  <Helmet","23","    defer={false}"],"delete":["21","  <HelmetWrapper","23","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/EncryptionApp.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","73","        <Helmet defer={false} title={translate('property.category.security.encryption')} \/>"],"delete":["20","import Helmet from 'react-helmet';","73","        <Helmet title={translate('property.category.security.encryption')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.tsx":[{"add":["23","import { Helmet } from 'react-helmet-async';","271","        <Helmet","272","          defer={false}","273","          title={sourceViewer !== undefined ? sourceViewer.name : defaultTitle}","274","        \/>"],"delete":["23","import Helmet from 'react-helmet';","271","        <Helmet title={sourceViewer !== undefined ? sourceViewer.name : defaultTitle} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavHeader.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/__tests__\/__snapshots__\/Details-test.tsx.snap":[{"add":["10","    <Helmet","11","      defer={false}"],"delete":["10","    <HelmetWrapper","11","      defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SonarLintIntegration.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["22","import { Helmet } from 'react-helmet-async';","1171","        <Helmet defer={false} title={openIssue ? openIssue.message : translate('issues.page')} \/>"],"delete":["22","import Helmet from 'react-helmet';","1171","        <Helmet title={openIssue ? openIssue.message : translate('issues.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectQualityGate\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","135","        <Helmet defer={false} title={translate('project_quality_gate.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","135","        <Helmet title={translate('project_quality_gate.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","126","        <Helmet defer={false} title={translate('webhooks.page')} \/>"],"delete":["20","import { Helmet } from 'react-helmet';","126","        <Helmet title={translate('webhooks.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Template.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","200","        <Helmet defer={false} title={this.props.template.name} \/>"],"delete":["20","import Helmet from 'react-helmet';","200","        <Helmet title={this.props.template.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.tsx":[{"add":["22","import { Helmet } from 'react-helmet-async';","312","        <Helmet defer={false} title={this.getHelmetTitle(query, displayOverview, metric)} \/>"],"delete":["22","import Helmet from 'react-helmet';","312","        <Helmet title={this.getHelmetTitle(query, displayOverview, metric)} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileContainer.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","84","        <Helmet defer={false} title={profile.name} \/>"],"delete":["20","import Helmet from 'react-helmet';","84","        <Helmet title={profile.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/Extension.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","275","        <Helmet defer={false} title={translate('global_permissions.permission')} \/>"],"delete":["21","import Helmet from 'react-helmet';","275","        <Helmet title={translate('global_permissions.permission')} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/NotFound.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/components\/common\/OrganizationHelmet.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","29","  return (","30","    <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} \/>","31","  );"],"delete":["20","import Helmet from 'react-helmet';","29","  return <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} \/>;"]}],"server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/App.tsx":[{"add":["23","import { Helmet } from 'react-helmet-async';","176","        <Helmet","177","          defer={false}","178","          title={isIndex || !page.title ? mainTitle : `${page.title} | ${mainTitle}`}>"],"delete":["23","import Helmet from 'react-helmet';","176","        <Helmet title={isIndex || !page.title ? mainTitle : `${page.title} | ${mainTitle}`}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/__tests__\/__snapshots__\/OrganizationMembers-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","35","  <Helmet","36","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","35","  <HelmetWrapper","36","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","29","  <Helmet","30","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","29","  <HelmetWrapper","30","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/App-test.tsx":[{"add":["50","  expect(wrapper.find('Helmet')).toMatchSnapshot();","63","  expect(wrapper.find('Helmet')).toMatchSnapshot();","76","  expect(wrapper.find('Helmet')).toMatchSnapshot();"],"delete":["50","  expect(wrapper.find('HelmetWrapper')).toMatchSnapshot();","63","  expect(wrapper.find('HelmetWrapper')).toMatchSnapshot();","76","  expect(wrapper.find('HelmetWrapper')).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SQHome.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/OrganizationMembers.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","201","        <Helmet defer={false} title={translate('organization.members.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","201","        <Helmet title={translate('organization.members.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationEdit-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","166","  <Helmet","167","    defer={false}","326","  <Helmet","327","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","166","  <HelmetWrapper","167","    defer={true}","326","  <HelmetWrapper","327","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","366","        <Helmet defer={false} title={translate('projects.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","366","        <Helmet title={translate('projects.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Contact.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';"],"delete":["21","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/__tests__\/__snapshots__\/Notifications-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","85","  <Helmet","86","    defer={false}","164","  <Helmet","165","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","85","  <HelmetWrapper","86","    defer={true}","164","  <HelmetWrapper","165","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","90","  <Helmet","91","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","90","  <HelmetWrapper","91","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","44","  <Helmet","45","    defer={false}","53","  <\/Helmet>","170","  <Helmet","179","  <\/Helmet>"],"delete":["6","  <HelmetWrapper","7","    defer={true}","44","  <HelmetWrapper","45","    defer={true}","53","  <\/HelmetWrapper>","170","  <HelmetWrapper","179","  <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectKey\/Key.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","43","        <Helmet defer={false} title={translate('update_key.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","43","        <Helmet title={translate('update_key.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","33","  <Helmet","34","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","33","  <HelmetWrapper","34","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/PageTracker.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","76","        defer={false}"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/yarn.lock":[{"add":["702","\"@babel\/runtime@^7.3.4\":","703","  version \"7.7.7\"","704","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@babel\/runtime\/-\/runtime-7.7.7.tgz#194769ca8d6d7790ec23605af9ee3e42a0aa79cf\"","705","  integrity sha1-GUdpyo1td5DsI2Ba+e4+QqCqec8=","706","  dependencies:","707","    regenerator-runtime \"^0.13.2\"","708","","1248","\"@types\/react-helmet@5.0.14\":","1249","  version \"5.0.14\"","1250","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/react-helmet\/-\/react-helmet-5.0.14.tgz#a07979ccb2cee088e74e735c84058fc8607d32e4\"","1251","  integrity sha1-oHl5zLLO4IjnTnNchAWPyGB9MuQ=","4162","exenv@^1.2.0:","8233","prop-types@15.7.2, prop-types@^15.5.10, prop-types@^15.5.6, prop-types@^15.5.8, prop-types@^15.6.0, prop-types@^15.6.1, prop-types@^15.6.2, prop-types@^15.7.2:","8542","react-fast-compare@^2.0.4:","8543","  version \"2.0.4\"","8544","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-fast-compare\/-\/react-fast-compare-2.0.4.tgz#e84b4d455b0fec113e0402c329352715196f81f9\"","8545","  integrity sha1-6EtNRVsP7BE+BALDKTUnFRlvgfk=","8546","","8547","react-helmet-async@1.0.4:","8548","  version \"1.0.4\"","8549","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-helmet-async\/-\/react-helmet-async-1.0.4.tgz#079ef10b7fefcaee6240fefd150711e62463cc97\"","8550","  integrity sha1-B57xC3\/vyu5iQP79FQcR5iRjzJc=","8552","    \"@babel\/runtime\" \"^7.3.4\"","8553","    invariant \"^2.2.4\"","8554","    prop-types \"^15.7.2\"","8555","    react-fast-compare \"^2.0.4\"","8556","    shallowequal \"^1.1.0\"","9329","shallowequal@^1.1.0:"],"delete":["1241","\"@types\/react-helmet@5.0.8\":","1242","  version \"5.0.8\"","1243","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/react-helmet\/-\/react-helmet-5.0.8.tgz#f080eea6652e44f60b4574463d238f268d81d9af\"","1244","  integrity sha1-8IDupmUuRPYLRXRGPSOPJo2B2a8=","4155","exenv@^1.2.0, exenv@^1.2.1:","8226","prop-types@15.7.2, prop-types@^15.5.10, prop-types@^15.5.4, prop-types@^15.5.6, prop-types@^15.5.8, prop-types@^15.6.0, prop-types@^15.6.1, prop-types@^15.6.2, prop-types@^15.7.2:","8535","react-helmet@5.2.0:","8536","  version \"5.2.0\"","8537","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-helmet\/-\/react-helmet-5.2.0.tgz#a81811df21313a6d55c5f058c4aeba5d6f3d97a7\"","8538","  integrity sha1-qBgR3yExOm1VxfBYxK66XW89l6c=","8540","    deep-equal \"^1.0.1\"","8541","    object-assign \"^4.1.1\"","8542","    prop-types \"^15.5.4\"","8543","    react-side-effect \"^1.1.0\"","8618","react-side-effect@^1.1.0:","8619","  version \"1.1.5\"","8620","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-side-effect\/-\/react-side-effect-1.1.5.tgz#f26059e50ed9c626d91d661b9f3c8bb38cd0ff2d\"","8621","  integrity sha1-8mBZ5Q7ZxibZHWYbnzyLs4zQ\/y0=","8622","  dependencies:","8623","    exenv \"^1.2.1\"","8624","    shallowequal \"^1.0.1\"","8625","","9324","shallowequal@^1.0.1:"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Pricing.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}]}},"96651c2341184362a22b89fe7a8e24b2a23b4695":{"changes":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigrationTest\/not_fail_when_module_has_no_root_id.xml":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigrationTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigrationTest\/not_fail_when_project_has_two_active_snapshots.xml":"ADD","sonar-core\/src\/main\/java\/org\/sonar\/core\/persistence\/migration\/v50\/Component.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigration.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigrationTest\/not_fail_when_module_has_no_root_id.xml":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigrationTest.java":[{"add":["291","  @Test","292","  public void not_fail_when_module_has_no_root_id() throws Exception {","293","    db.prepareDbUnit(getClass(), \"not_fail_when_module_has_no_root_id.xml\");","294","","295","    migration.execute();","296","    session.commit();","297","","298","    \/\/ Root project migrated","299","    Component root = mapper.selectComponentByKey(\"org.struts:struts\");","300","    assertThat(root.getUuid()).isNotNull();","301","    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());","302","    assertThat(root.getModuleUuid()).isNull();","303","    assertThat(root.getModuleUuidPath()).isEmpty();","304","","305","    \/\/ The module without uuid will be migrated as a standalone component","306","    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");","307","    assertThat(module.getUuid()).isNotNull();","308","    assertThat(module.getProjectUuid()).isEqualTo(module.getUuid());","309","    assertThat(module.getModuleUuid()).isNull();","310","    assertThat(module.getModuleUuidPath()).isEmpty();","311","  }","312","","313","  @Test","314","  public void not_fail_when_project_has_two_active_snapshots() throws Exception {","315","    db.prepareDbUnit(getClass(), \"not_fail_when_project_has_two_active_snapshots.xml\");","316","","317","    migration.execute();","318","    session.commit();","319","","320","    \/\/ Root project migrated","321","    Component root = mapper.selectComponentByKey(\"org.struts:struts\");","322","    assertThat(root.getUuid()).isNotNull();","323","    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());","324","    assertThat(root.getModuleUuid()).isNull();","325","    assertThat(root.getModuleUuidPath()).isEmpty();","326","","327","    \/\/ The module linked on second active snapshot should be migrated a standalone component","328","    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");","329","    assertThat(module.getUuid()).isNotNull();","330","    assertThat(module.getProjectUuid()).isEqualTo(module.getUuid());","331","    assertThat(module.getModuleUuid()).isNull();","332","    assertThat(module.getModuleUuidPath()).isEmpty();","333","  }","334",""],"delete":[]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigrationTest\/not_fail_when_project_has_two_active_snapshots.xml":[{"add":[],"delete":[]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/persistence\/migration\/v50\/Component.java":[{"add":["36","  private String moduleUuidPath = \"\";"],"delete":["36","  private String moduleUuidPath;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/db\/migrations\/v50\/PopulateProjectsUuidColumnsMigration.java":[{"add":["28","import org.sonar.api.utils.log.Logger;","29","import org.sonar.api.utils.log.Loggers;","51","  private static final Logger LOG = Loggers.get(PopulateProjectsUuidColumnsMigration.class);","52","","72","          List<Component> components = readSession.getMapper(Migration50Mapper.class).selectComponentChildrenForProjects(project.getId());","73","          MigrationContext migrationContext = new MigrationContext(readSession, writeSession, project, components);","74","          migrateEnabledComponents(migrationContext);","75","          migrateDisabledComponents(migrationContext);","93","  private void migrateEnabledComponents(MigrationContext migrationContext) {","94","    saveComponent(migrationContext.writeSession, migrationContext.project);","95","    for (Component component : migrationContext.componentsToMigrate) {","96","      migrationContext.updateComponent(component);","97","      if (Strings.isNullOrEmpty(component.getModuleUuidPath())) {","98","        LOG.warn(String.format(\"Ignoring component id '%s' because the module uuid path could not be created\", component.getId()));","99","      } else {","100","        migrationContext.updateComponent(component);","101","        saveComponent(migrationContext.writeSession, component);","106","  private void migrateDisabledComponents(MigrationContext migrationContext) {","107","    for (Component component : migrationContext.readSession.getMapper(Migration50Mapper.class).selectDisabledDirectComponentChildrenForProjects(migrationContext.project.getId())) {","108","      migrationContext.updateComponent(component);","109","      saveComponent(migrationContext.writeSession, component);","111","    for (Component component : migrationContext.readSession.getMapper(Migration50Mapper.class).selectDisabledNoneDirectComponentChildrenForProjects(","112","      migrationContext.project.getId())) {","113","      migrationContext.updateComponent(component);","114","      saveComponent(migrationContext.writeSession, component);","123","      saveComponent(writeSession, component);","127","  private void saveComponent(DbSession writeSession, Component component) {","128","    writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);","129","    counter.getAndIncrement();","130","  }","131","","132","  private static class MigrationContext {","133","    private final DbSession readSession;","134","    private final DbSession writeSession;","135","    private final Component project;","136","    private final Map<Long, Component> componentsBySnapshotId = newHashMap();","137","    private final Map<Long, String> uuidByComponentId = newHashMap();","138","    private final List<Component> componentsToMigrate = newArrayList();","139","","140","    private MigrationContext(DbSession readSession, DbSession writeSession, Component project, List<Component> components) {","141","      this.readSession = readSession;","142","      this.writeSession = writeSession;","143","      this.project = project;","144","","145","      project.setUuid(getOrCreateUuid(project));","146","      project.setProjectUuid(project.getUuid());","147","","148","      componentsBySnapshotId.put(project.getSnapshotId(), project);","149","      for (Component component : components) {","150","        componentsBySnapshotId.put(component.getSnapshotId(), component);","151","        if (component.getUuid() == null) {","152","          componentsToMigrate.add(component);","153","        }","154","      }","156","","157","    public void updateComponent(Component component) {","158","      component.setUuid(getOrCreateUuid(component));","159","      component.setProjectUuid(getOrCreateUuid(project));","160","","161","      String snapshotPath = component.getSnapshotPath();","162","      StringBuilder moduleUuidPath = new StringBuilder();","163","      String lastModuleUuid = null;","164","      if (!Strings.isNullOrEmpty(snapshotPath)) {","165","        for (String s : Splitter.on(\".\").omitEmptyStrings().split(snapshotPath)) {","166","          Long snapshotId = Long.valueOf(s);","167","          Component currentComponent = componentsBySnapshotId.get(snapshotId);","168","          if (currentComponent != null && currentComponent.getScope().equals(Scopes.PROJECT)) {","169","            lastModuleUuid = getOrCreateUuid(currentComponent);","170","            moduleUuidPath.append(lastModuleUuid).append(\".\");","171","          }","172","        }","173","      }","174","","175","      if (moduleUuidPath.length() > 0 && lastModuleUuid != null) {","176","        \/\/ Remove last '.'","177","        moduleUuidPath.deleteCharAt(moduleUuidPath.length() - 1);","178","","179","        component.setModuleUuidPath(moduleUuidPath.toString());","180","        component.setModuleUuid(lastModuleUuid);","181","      }","182","    }","183","","184","    private String getOrCreateUuid(Component component) {","185","      String existingUuid = component.getUuid();","186","      String uuid = existingUuid == null ? uuidByComponentId.get(component.getId()) : existingUuid;","187","      if (uuid == null) {","188","        String newUuid = Uuids.create();","189","        uuidByComponentId.put(component.getId(), newUuid);","190","        return newUuid;","191","      }","192","      return uuid;","193","    }"],"delete":["68","          Map<Long, String> uuidByComponentId = newHashMap();","69","          migrateEnabledComponents(readSession, writeSession, project, uuidByComponentId);","70","          migrateDisabledComponents(readSession, writeSession, project, uuidByComponentId);","88","  private void migrateEnabledComponents(DbSession readSession, DbSession writeSession, Component project, Map<Long, String> uuidByComponentId) {","89","    Map<Long, Component> componentsBySnapshotId = newHashMap();","90","","91","    List<Component> components = readSession.getMapper(Migration50Mapper.class).selectComponentChildrenForProjects(project.getId());","92","    components.add(project);","93","    List<Component> componentsToMigrate = newArrayList();","94","    for (Component component : components) {","95","      componentsBySnapshotId.put(component.getSnapshotId(), component);","96","","97","      \/\/ Not migrate components already having an UUID","98","      if (component.getUuid() == null) {","99","        component.setUuid(getOrCreateUuid(component, uuidByComponentId));","100","        component.setProjectUuid(getOrCreateUuid(project, uuidByComponentId));","101","        component.setModuleUuidPath(\"\");","102","        componentsToMigrate.add(component);","105","","106","    for (Component component : componentsToMigrate) {","107","      updateComponent(component, project, componentsBySnapshotId, uuidByComponentId);","108","      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);","109","      counter.getAndIncrement();","110","    }","113","  private void migrateDisabledComponents(DbSession readSession, DbSession writeSession, Component project, Map<Long, String> uuidByComponentId) {","114","    String projectUuid = getOrCreateUuid(project, uuidByComponentId);","115","    for (Component component : readSession.getMapper(Migration50Mapper.class).selectDisabledDirectComponentChildrenForProjects(project.getId())) {","116","      component.setUuid(getOrCreateUuid(component, uuidByComponentId));","117","      component.setProjectUuid(projectUuid);","118","      component.setModuleUuidPath(\"\");","119","","120","      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);","121","      counter.getAndIncrement();","123","    for (Component component : readSession.getMapper(Migration50Mapper.class).selectDisabledNoneDirectComponentChildrenForProjects(project.getId())) {","124","      component.setUuid(getOrCreateUuid(component, uuidByComponentId));","125","      component.setProjectUuid(projectUuid);","126","      component.setModuleUuidPath(\"\");","127","","128","      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);","129","      counter.getAndIncrement();","130","    }","131","  }","132","","133","  private void updateComponent(Component component, Component project, Map<Long, Component> componentsBySnapshotId, Map<Long, String> uuidByComponentId) {","134","    String snapshotPath = component.getSnapshotPath();","135","    StringBuilder moduleUuidPath = new StringBuilder();","136","    Component lastModule = null;","137","    if (!Strings.isNullOrEmpty(snapshotPath)) {","138","      for (String s : Splitter.on(\".\").omitEmptyStrings().split(snapshotPath)) {","139","        Long snapshotId = Long.valueOf(s);","140","        Component currentComponent = componentsBySnapshotId.get(snapshotId);","141","        if (currentComponent.getScope().equals(Scopes.PROJECT)) {","142","          lastModule = currentComponent;","143","          moduleUuidPath.append(currentComponent.getUuid()).append(\".\");","144","        }","145","      }","146","    }","147","    if (moduleUuidPath.length() > 0) {","148","      \/\/ Remove last '.'","149","      moduleUuidPath.deleteCharAt(moduleUuidPath.length() - 1);","150","      component.setModuleUuidPath(moduleUuidPath.toString());","151","    }","152","","153","    \/\/ Module UUID contains direct module of a component","154","    if (lastModule != null) {","155","      component.setModuleUuid(getOrCreateUuid(lastModule, uuidByComponentId));","164","      component.setModuleUuidPath(\"\");","165","","166","      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);","167","      counter.getAndIncrement();","171","  private static String getOrCreateUuid(Component component, Map<Long, String> uuidByComponentId) {","172","    String existingUuid = component.getUuid();","173","    String uuid = existingUuid == null ? uuidByComponentId.get(component.getId()) : existingUuid;","174","    if (uuid == null) {","175","      String newUuid = Uuids.create();","176","      uuidByComponentId.put(component.getId(), newUuid);","177","      return newUuid;","179","    return uuid;"]}]}},"2113095efa0eafbec64d4392715efc871d2d5275":{"changes":{"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/rule\/InvalidIssueLineSensor.java":"ADD","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/issue\/IssuableFactoryTest.java":"MODIFY","plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/XooPlugin.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/issue\/DefaultIssuable.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/issue\/ModuleIssues.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/issue\/DefaultIssuableTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/issue\/IssuableFactory.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/issues\/InvalidIssueLineMediumTest.java":"ADD"},"diff":{"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/rule\/InvalidIssueLineSensor.java":[{"add":[],"delete":[]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/issue\/IssuableFactoryTest.java":[{"add":["21","import org.sonar.batch.scan.filesystem.InputPathCache;","22","","39","  InputPathCache inputPathCache = mock(InputPathCache.class);","40","  ","44","    IssuableFactory factory = new IssuableFactory(moduleIssues, cache, projectTree, inputPathCache);","55","    IssuableFactory factory = new IssuableFactory(moduleIssues, cache, projectTree, inputPathCache);"],"delete":["29","","41","    IssuableFactory factory = new IssuableFactory(moduleIssues, cache, projectTree);","52","    IssuableFactory factory = new IssuableFactory(moduleIssues, cache, projectTree);"]}],"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/XooPlugin.java":[{"add":["66","      InvalidIssueLineSensor.class,"],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/issue\/DefaultIssuable.java":[{"add":["21","import org.sonar.batch.scan.filesystem.InputPathCache;","22","","23","import org.sonar.api.batch.fs.InputFile;","43","  private final InputPathCache inputPathCache;","45","  DefaultIssuable(Component component, Project project, ModuleIssues moduleIssues, IssueCache cache, InputPathCache inputPathCache) {","50","    this.inputPathCache = inputPathCache;","60","    validateIssueLine(issue);","64","  private void validateIssueLine(Issue issue) {","65","    if (issue.line() == null) {","66","      return;","67","    }","68","    String moduleKey = issue.projectKey();","69","    String path = component.path();","70","","71","    InputFile file = inputPathCache.getFile(moduleKey, path);","72","","73","    if (issue.line() <= 0) {","74","      invalidateIssue(issue, \"must be > 0\");","75","    }","76","","77","    if (file != null && issue.line() > file.lines()) {","78","      invalidateIssue(issue, \"must be <= \" + file.lines());","79","    }","80","  }","81","","82","  private void invalidateIssue(Issue issue, String msg) {","83","    throw new IllegalStateException(String.format(\"Invalid line %s (%s) in issue for '%s' created by the rule '%s'\", issue.line(), msg, issue.componentKey(), issue.ruleKey()));","84","  }","85","","91","      if (issue.resolution() != null) {","103","      if (issue.resolution() == null) {"],"delete":["41","  DefaultIssuable(Component component, Project project, ModuleIssues moduleIssues, IssueCache cache) {","63","      if (issue.resolution()!=null) {","75","      if (issue.resolution()==null) {"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/issue\/ModuleIssues.java":[{"add":["21","import com.google.common.base.Preconditions;","22","import org.sonar.api.batch.fs.InputFile;","23",""],"delete":[]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/issue\/DefaultIssuableTest.java":[{"add":["21","import org.junit.rules.ExpectedException;","22","import org.junit.Rule;","23","import org.sonar.api.rule.RuleKey;","24","import org.sonar.api.batch.fs.InputFile;","25","import org.sonar.batch.scan.filesystem.InputPathCache;","35","import static org.mockito.Mockito.verify;","36","","37","import static org.mockito.Mockito.verifyNoMoreInteractions;","43","  @Rule","44","  public ExpectedException exception = ExpectedException.none();","50","  InputPathCache inputPathCache = mock(InputPathCache.class);","59","    DefaultIssuable perspective = new DefaultIssuable(component, project, moduleIssues, cache, inputPathCache);","66","  public void validateIssueLine() {","67","    InputFile file = mock(InputFile.class);","68","","69","    when(file.lines()).thenReturn(999);","70","    when(component.path()).thenReturn(\"file\");","71","    when(inputPathCache.getFile(\"module\", \"file\")).thenReturn(file);","72","","73","    DefaultIssue issue = new DefaultIssue()","74","      .setLine(1000)","75","      .setProjectKey(\"module\")","76","      .setRuleKey(RuleKey.of(\"repo\", \"rule\"))","77","      .setComponentKey(\"componentKey\");","78","    DefaultIssuable issuable = new DefaultIssuable(component, project, moduleIssues, cache, inputPathCache);","79","","80","    exception.expect(IllegalStateException.class);","81","    exception.expectMessage(\"Invalid line 1000 (must be <= 999) in issue for 'componentKey' created by the rule 'repo:rule'\");","82","    issuable.addIssue(issue);","83","  }","84","","85","  @Test","86","  public void dontValidateNullLine() {","87","    DefaultIssuable issuable = new DefaultIssuable(component, project, moduleIssues, cache, inputPathCache);","88","","89","    DefaultIssue issue = new DefaultIssue()","90","      .setLine(null);","91","    issuable.addIssue(issue);","92","    verifyNoMoreInteractions(inputPathCache);","93","  }","94","","95","  @Test","96","  public void dontValidateUnknownFiles() {","97","    DefaultIssuable issuable = new DefaultIssuable(component, project, moduleIssues, cache, inputPathCache);","98","    when(component.path()).thenReturn(\"file\");","99","","100","    DefaultIssue issue = new DefaultIssue()","101","      .setLine(1505)","102","      .setProjectKey(\"module\");","103","","104","    issuable.addIssue(issue);","105","    verify(inputPathCache).getFile(\"module\", \"file\");","106","  }","107","","108","  @Test","115","    DefaultIssuable perspective = new DefaultIssuable(component, project, moduleIssues, cache, inputPathCache);"],"delete":["48","    DefaultIssuable perspective = new DefaultIssuable(component, project, moduleIssues, cache);","61","    DefaultIssuable perspective = new DefaultIssuable(component, project, moduleIssues, cache);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/issue\/IssuableFactory.java":[{"add":["21","import org.sonar.batch.scan.filesystem.InputPathCache;","22","","41","  private final InputPathCache inputPathCache;","43","  public IssuableFactory(ModuleIssues moduleIssues, IssueCache cache, ProjectTree projectTree, InputPathCache inputPathCache) {","48","    this.inputPathCache = inputPathCache;","58","    return supported ? new DefaultIssuable(component, projectTree.getRootProject(), moduleIssues, cache, inputPathCache) : null;"],"delete":["40","  public IssuableFactory(ModuleIssues moduleIssues, IssueCache cache, ProjectTree projectTree) {","54","    return supported ? new DefaultIssuable(component, projectTree.getRootProject(), moduleIssues, cache) : null;"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/issues\/InvalidIssueLineMediumTest.java":[{"add":[],"delete":[]}]}},"66def08e9bb337dc79d59279ea417a79366e2ad6":{"changes":{"server\/sonar-ce-task\/src\/main\/java\/org\/sonar\/ce\/task\/step\/ComputationStepExecutor.java":"MODIFY","server\/sonar-ce-task\/src\/test\/java\/org\/sonar\/ce\/task\/step\/ComputationStepExecutorTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task\/src\/main\/java\/org\/sonar\/ce\/task\/step\/ComputationStepExecutor.java":[{"add":["28","import static java.lang.String.format;","68","      executeStep(stepProfiler, context, step);","69","    }","70","  }","71","","72","  private static void executeStep(Profiler stepProfiler, ComputationStep.Context context, ComputationStep step) {","73","    String status = \"FAILED\";","74","    stepProfiler.start();","75","    try {","77","      status = \"SUCCESS\";","78","    } finally {","79","      stepProfiler.addContext(\"status\", status);","109","      requireNonNull(value, () -> format(\"Statistic with key [%s] has null value\", key));"],"delete":["67","      stepProfiler.start();","98","      requireNonNull(value, () -> String.format(\"Statistic with key [%s] has null value\", key));"]}],"server\/sonar-ce-task\/src\/test\/java\/org\/sonar\/ce\/task\/step\/ComputationStepExecutorTest.java":[{"add":["93","      ChangeLogLevel logLevel2 = new ChangeLogLevel(step2.getClass(), LoggerLevel.INFO);","94","      ChangeLogLevel logLevel3 = new ChangeLogLevel(step3.getClass(), LoggerLevel.INFO)) {","99","      assertThat(infoLogs.get(0)).contains(\"Step One | foo=100 | bar=20 | status=SUCCESS | time=\");","100","      assertThat(infoLogs.get(1)).contains(\"Step Two | foo=50 | baz=10 | status=SUCCESS | time=\");","101","      assertThat(infoLogs.get(2)).contains(\"Step Three | status=SUCCESS | time=\");","102","    }","103","  }","104","","105","  @Test","106","  public void execute_logs_end_timing_and_statistics_for_each_ComputationStep_in_INFO_level_even_if_failed() {","107","    RuntimeException expected = new RuntimeException(\"faking step failing with RuntimeException\");","108","    ComputationStep step1 = new StepWithStatistics(\"Step One\", \"foo\", \"100\", \"bar\", \"20\");","109","    ComputationStep step2 = new StepWithStatistics(\"Step Two\", \"foo\", \"50\", \"baz\", \"10\");","110","    ComputationStep step3 = new StepWithStatistics(\"Step Three\", \"donut\", \"crash\") {","111","      @Override","112","      public void execute(Context context) {","113","        super.execute(context);","114","        throw expected;","115","      }","116","    } ;","117","","118","    try (ChangeLogLevel executor = new ChangeLogLevel(ComputationStepExecutor.class, LoggerLevel.INFO);","119","      ChangeLogLevel logLevel1 = new ChangeLogLevel(step1.getClass(), LoggerLevel.INFO);","120","      ChangeLogLevel logLevel2 = new ChangeLogLevel(step2.getClass(), LoggerLevel.INFO);","121","      ChangeLogLevel logLevel3 = new ChangeLogLevel(step3.getClass(), LoggerLevel.INFO)) {","122","","123","      try {","124","        new ComputationStepExecutor(mockComputationSteps(step1, step2, step3)).execute();","125","        fail(\"a RuntimeException should have been thrown\");","126","      } catch (RuntimeException e) {","127","        List<String> infoLogs = logTester.logs(LoggerLevel.INFO);","128","        assertThat(infoLogs).hasSize(3);","129","        assertThat(infoLogs.get(0)).contains(\"Step One | foo=100 | bar=20 | status=SUCCESS | time=\");","130","        assertThat(infoLogs.get(1)).contains(\"Step Two | foo=50 | baz=10 | status=SUCCESS | time=\");","131","        assertThat(infoLogs.get(2)).contains(\"Step Three | donut=crash | status=FAILED | time=\");","132","      }"],"delete":["93","      ChangeLogLevel logLevel2 = new ChangeLogLevel(step1.getClass(), LoggerLevel.INFO);","94","      ChangeLogLevel logLevel3 = new ChangeLogLevel(step2.getClass(), LoggerLevel.INFO)) {","99","      assertThat(infoLogs.get(0)).contains(\"Step One | foo=100 | bar=20 | time=\");","100","      assertThat(infoLogs.get(1)).contains(\"Step Two | foo=50 | baz=10 | time=\");","101","      assertThat(infoLogs.get(2)).contains(\"Step Three | time=\");"]}]}},"595a86b1947d2e4cdb5f6a083eacd497627b4025":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/App-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/App-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.tsx":[{"add":["199","    const defaultTitle =","200","      baseComponent && ['APP', 'VW', 'SVW'].includes(baseComponent.qualifier)","201","        ? translate('projects.page')","202","        : translate('code.page');","203","","207","        <Helmet title={sourceViewer !== undefined ? sourceViewer.name : defaultTitle} \/>"],"delete":["202","        <Helmet title={sourceViewer !== undefined ? sourceViewer.name : translate('code.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":[],"delete":[]}]}},"1d8a83568656e0f934d3eee71df5776d411a1fec":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavMenu-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMenu.tsx":[{"add":["436","    if (this.props.branch && !this.props.branch.isMain) {","437","      return [];","438","    }","445","    if (!extensions.length || (this.props.branch && !this.props.branch.isMain)) {"],"delete":["442","    if (!extensions.length) {"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/ComponentNavMenu-test.tsx":[{"add":["73","  const component = {","74","    ...baseComponent,","75","    configuration: { showSettings: true },","76","    extensions: [{ key: 'component-foo', name: 'ComponentFoo' }]","77","  };","92","          component={{","93","            ...baseComponent,","94","            configuration: { showSettings },","95","            extensions: [{ key: 'component-foo', name: 'ComponentFoo' }]","96","          }}"],"delete":["73","  const component = { ...baseComponent, configuration: { showSettings: true } };","88","          component={{ ...baseComponent, configuration: { showSettings } }}"]}]}},"ba96c18f6176dfe8ac96cd4565f5d6f9db6c4f46":{"changes":{"pom.xml":"MODIFY"},"diff":{"pom.xml":[{"add":["940","        <version>42.2.1<\/version>"],"delete":["940","        <version>42.1.4<\/version>"]}]}},"f419b7847f39d9d8e80d4a766904ccd4f5bd6010":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.js":[{"add":["144","      total: existing.total,","145","      page: existing.page","155","        addComponentChildren(componentKey, r.components, r.total, r.page);","204","        addComponentChildren(componentKey, r.components, r.total, r.page);"],"delete":["144","      total: existing.total","154","        addComponentChildren(componentKey, r.components, r.total);","203","        addComponentChildren(componentKey, r.components, r.total);"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.js":[{"add":["31","export function addComponentChildren (componentKey, children, total, page) {","32","  childrenBucket[componentKey] = { children, total, page };"],"delete":["31","export function addComponentChildren (componentKey, children, total) {","32","  childrenBucket[componentKey] = { children, total };"]}]}},"34a0bc1a4e14e13a7d40a410b268d6ea7b0f3a40":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavPlus.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNavPlus-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/GlobalNavPlus-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavPlus.tsx":[{"add":["35","  appState: Pick<T.AppState, 'branchesEnabled' | 'qualifiers'>;","58","    this.fetchAlmBindings();","81","    const {","82","      appState: { branchesEnabled },","83","      currentUser","84","    } = this.props;","85","    const canCreateProject = hasGlobalPermission(currentUser, 'provisioning');","86","","87","    \/\/ getAlmSettings requires branchesEnabled","88","    if (!canCreateProject || !branchesEnabled) {","89","      return;","90","    }","91","","145","          onOpen={this.fetchAlmBindings}"],"delete":["35","  appState: Pick<T.AppState, 'qualifiers'>;","58","    if (hasGlobalPermission(this.props.currentUser, 'provisioning')) {","59","      this.fetchAlmBindings();","60","    }","136","          onOpen={canCreateProject ? this.fetchAlmBindings : undefined}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNavPlus-test.tsx.snap":[{"add":["2","exports[`should render correctly if branches not enabled 1`] = `","3","<Fragment>","4","  <Dropdown","5","    onOpen={[Function]}","6","    overlay={","7","      <GlobalNavPlusMenu","8","        canCreateApplication={false}","9","        canCreatePortfolio={false}","10","        canCreateProject={true}","11","        compatibleAlms={Array []}","12","        onComponentCreationClick={[Function]}","13","      \/>","14","    }","15","    tagName=\"li\"","16","  >","17","    <a","18","      className=\"navbar-icon navbar-plus\"","19","      href=\"#\"","20","      title=\"my_account.create_new_project_portfolio_or_application\"","21","    >","22","      <PlusIcon \/>","23","    <\/a>","24","  <\/Dropdown>","25","<\/Fragment>","26","`;","27",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/GlobalNavPlus-test.tsx":[{"add":["53","  const wrapper = shallowRender([], {});","59","it('should render correctly if branches not enabled', async () => {","60","  const wrapper = shallowRender([PROJECT_CREATION_RIGHT], { branchesEnabled: false });","61","  await waitAndUpdate(wrapper);","62","  expect(wrapper).toMatchSnapshot();","63","  expect(getAlmSettings).not.toBeCalled();","64","});","65","","68","    shallowRender([APP_CREATION_RIGHT, PORTFOLIO_CREATION_RIGHT, PROJECT_CREATION_RIGHT], {})","73","    { enableGovernance: true }","86","  const wrapper = shallowRender([PROJECT_CREATION_RIGHT], {});","95","  const wrapper = shallowRender([PORTFOLIO_CREATION_RIGHT], { enableGovernance: true });","112","  const wrapper = shallowRender([], { enableGovernance: true });","129","function shallowRender(","130","  permissions: string[] = [],","131","  { enableGovernance = false, branchesEnabled = true }","132",") {","135","      appState={{","136","        branchesEnabled,","137","        qualifiers: enableGovernance ? [ComponentQualifier.Portfolio] : []","138","      }}"],"delete":["53","  const wrapper = shallowRender();","61","    shallowRender([APP_CREATION_RIGHT, PORTFOLIO_CREATION_RIGHT, PROJECT_CREATION_RIGHT])","66","    true","79","  const wrapper = shallowRender([PROJECT_CREATION_RIGHT]);","88","  const wrapper = shallowRender([PORTFOLIO_CREATION_RIGHT], true);","105","  const wrapper = shallowRender([], true);","122","function shallowRender(permissions: string[] = [], enableGovernance = false) {","125","      appState={{ qualifiers: enableGovernance ? [ComponentQualifier.Portfolio] : [] }}"]}]}},"0b8e4aad2693dbea56400bacd43fd8a4aec72389":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/popups\/templates\/source-viewer-coverage-popup.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/popups\/templates\/source-viewer-coverage-popup.hbs":[{"add":["1","  <div class=\"bubble-popup-title\">","2","    {{t 'source_viewer.covered'}}","3","    {{#if row.conditions}}","4","      ({{default row.coveredConditions 0}} of {{row.conditions}} {{t 'source_viewer.conditions'}})","5","    {{\/if}}","6","  <\/div>","18","                data-key=\"{{..\/file.key}}\" data-method=\"{{name}}\">"],"delete":["2","    <div class=\"bubble-popup-title\">","3","      {{t 'source_viewer.covered'}}","4","      {{#if row.conditions}}","5","        ({{default row.coveredConditions 0}} of {{row.conditions}} {{t 'source_viewer.conditions'}})","6","      {{\/if}}","7","    <\/div>","18","                 data-key=\"{{..\/file.key}}\" data-method=\"{{name}}\">"]}]}},"5e424b6e964cf798e7ecb674b2fff82d5fbebef4":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandler.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/ColumnDefTest.java":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/ColumnDef.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandlerTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/MysqlCharsetHandler.java":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandler.java":[{"add":["29","import static com.google.common.collect.FluentIterable.from;","56","    for (ColumnDef column : from(columns).filter(ColumnDef.IsInSonarQubeTablePredicate.INSTANCE)) {"],"delete":["55","    for (ColumnDef column : columns) {"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/ColumnDefTest.java":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/ColumnDef.java":[{"add":["21","import com.google.common.base.Predicate;","24","import java.util.Locale;","25","import javax.annotation.Nonnull;","27","import org.sonar.db.version.DatabaseVersion;","83","  public boolean isInSonarQubeTable() {","84","    return DatabaseVersion.TABLES.contains(table.toLowerCase(Locale.ENGLISH));","85","  }","86","","99","","100","  public enum IsInSonarQubeTablePredicate implements Predicate<ColumnDef> {","101","    INSTANCE;","102","","103","    @Override","104","    public boolean apply(@Nonnull ColumnDef input) {","105","      return input.isInSonarQubeTable();","106","    }","107","  }"],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/MssqlCharsetHandlerTest.java":[{"add":["34","import static org.mockito.Mockito.never;","104","  @Test","105","  public void do_not_repair_system_tables_of_sql_azure() throws Exception {","106","    answerColumns(asList(new ColumnDef(\"sys.sysusers\", COLUMN_NAME, \"Latin1_General\", \"Latin1_General_CI_AI\", \"varchar\", 10, false)));","107","","108","    Connection connection = mock(Connection.class);","109","    underTest.handle(connection, false);","110","","111","    verify(selectExecutor, never()).executeUpdate(any(Connection.class), anyString());","112","  }","113",""],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["22","import com.google.common.collect.ImmutableSet;","25","import java.util.Set;","46","  public static final Set<String> TABLES = ImmutableSet.of("],"delete":["22","import com.google.common.collect.ImmutableList;","45","  public static final List<String> TABLES = ImmutableList.of("]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/MysqlCharsetHandler.java":[{"add":["32","import static com.google.common.collect.FluentIterable.from;","69","    for (ColumnDef column : from(columns).filter(ColumnDef.IsInSonarQubeTablePredicate.INSTANCE)) {"],"delete":["68","    for (ColumnDef column : columns) {"]}]}},"ae791695c0432f6e7d916f081af25ce67d90679d":{"changes":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest\/issue_snippets_multiple_locations.json":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest\/issue_snippets_multiple_locations.json":[{"add":["10","      \"projectName\": \"LONG_NAME_projectUuid\",","11","      \"measures\": {}","18","        \"scmAuthor\": \"AUTHOR_1\",","19","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","33","        \"scmAuthor\": \"AUTHOR_2\",","34","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","48","        \"scmAuthor\": \"AUTHOR_3\",","49","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","63","        \"scmAuthor\": \"AUTHOR_4\",","64","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","78","        \"scmAuthor\": \"AUTHOR_5\",","79","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","93","        \"scmAuthor\": \"AUTHOR_6\",","94","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","108","        \"scmAuthor\": \"AUTHOR_7\",","109","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","130","      \"projectName\": \"LONG_NAME_projectUuid\",","131","      \"measures\": {}","138","        \"scmAuthor\": \"AUTHOR_3\",","139","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","153","        \"scmAuthor\": \"AUTHOR_4\",","154","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","168","        \"scmAuthor\": \"AUTHOR_5\",","169","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","183","        \"scmAuthor\": \"AUTHOR_6\",","184","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","198","        \"scmAuthor\": \"AUTHOR_7\",","199","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","213","        \"scmAuthor\": \"AUTHOR_8\",","214","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","228","        \"scmAuthor\": \"AUTHOR_9\",","229","        \"scmDate\": \"1974-10-03T03:40:00+0100\",","243","        \"scmAuthor\": \"AUTHOR_10\",","244","        \"scmDate\": \"1974-10-03T03:40:00+0100\","],"delete":["10","      \"projectName\": \"LONG_NAME_projectUuid\"","17","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","31","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","45","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","59","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","73","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","87","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","101","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","122","      \"projectName\": \"LONG_NAME_projectUuid\"","129","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","143","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","157","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","171","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","185","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","199","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","213","        \"scmDate\": \"1974-10-02T21:40:00-0500\",","227","        \"scmDate\": \"1974-10-02T21:40:00-0500\","]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsActionTest.java":[{"add":["21","import java.net.URL;","49","import org.sonar.test.JsonAssert;","51","import static org.assertj.core.api.Assertions.assertThat;","65","  private static final String SCM_AUTHOR_JSON_FIELD = \"scmAuthor\";","66","","76","  private OrganizationDto organization;","82","    organization = db.organizations().insert();","86","    when(htmlSourceDecorator.getDecoratedSourceAsHtml(anyString(), anyString(), anyString()))","87","      .then((Answer<String>) invocationOnMock -> \"<p>\" + invocationOnMock.getArguments()[0] + \"<\/p>\");","91","    actionTester = new WsActionTester(new IssueSnippetsAction(dbClient, userSession, sourceService, linesJsonWriter, componentViewerJsonWriter));","202","    JsonAssert.assertJson(response.getInput())","203","      .ignoreFields(SCM_AUTHOR_JSON_FIELD)","204","      .isSimilarTo(toUrl(\"issue_snippets_multiple_locations.json\"));","205","    assertThat(response.getInput()).doesNotContain(SCM_AUTHOR_JSON_FIELD);","222","    JsonAssert.assertJson(response.getInput())","223","      .ignoreFields(SCM_AUTHOR_JSON_FIELD)","224","      .isSimilarTo(toUrl(\"issue_snippets_close_to_each_other.json\"));","225","    assertThat(response.getInput()).doesNotContain(SCM_AUTHOR_JSON_FIELD);","226","  }","227","","228","  @Test","229","  public void returns_scmAuthors_if_user_belongs_to_organization_of_project_of_issue() {","230","    ComponentDto file1 = insertFile(project, \"file1\");","231","    ComponentDto file2 = insertFile(project, \"file2\");","232","","233","    DbFileSources.Data fileSources = FileSourceTesting.newFakeData(10).build();","234","    fileSourceTester.insertFileSource(file1, 10, dto -> dto.setSourceData(fileSources));","235","    fileSourceTester.insertFileSource(file2, 10, dto -> dto.setSourceData(fileSources));","236","","237","    userSession.logIn()","238","      .addProjectPermission(USER, project, file1, file2)","239","      .addMembership(organization);","240","","241","    String issueKey1 = insertIssue(file1, newLocation(file1.uuid(), 5, 5),","242","      newLocation(file1.uuid(), 9, 9), newLocation(file2.uuid(), 1, 5));","243","","244","    TestResponse response = actionTester.newRequest().setParam(\"issueKey\", issueKey1).execute();","245","    JsonAssert.assertJson(response.getInput())","246","      .isSimilarTo(toUrl(\"issue_snippets_multiple_locations.json\"));","276","  private URL toUrl(String fileName) {","277","    Class clazz = getClass();","278","    String path = clazz.getSimpleName() + \"\/\" + fileName;","279","    URL url = clazz.getResource(path);","280","    if (url == null) {","281","      throw new IllegalStateException(\"Cannot find \" + path);","282","    }","283","    return url;","284","  }","285",""],"delete":["42","import org.sonar.server.issue.IssueFinder;","77","    OrganizationDto organization = db.organizations().insert();","81","    when(htmlSourceDecorator.getDecoratedSourceAsHtml(anyString(), anyString(), anyString())).then((Answer<String>)","82","      invocationOnMock -> \"<p>\" + invocationOnMock.getArguments()[0] + \"<\/p>\");","84","    IssueFinder issueFinder = new IssueFinder(dbClient, userSession);","87","    actionTester = new WsActionTester(new IssueSnippetsAction(sourceService, dbClient, issueFinder, linesJsonWriter, componentViewerJsonWriter));","198","    response.assertJson(getClass(), \"issue_snippets_multiple_locations.json\");","215","    response.assertJson(getClass(), \"issue_snippets_close_to_each_other.json\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/source\/ws\/IssueSnippetsAction.java":[{"add":["34","import org.sonar.api.web.UserRole;","40","import org.sonar.db.organization.OrganizationDto;","45","import org.sonar.server.exceptions.NotFoundException;","47","import org.sonar.server.user.UserSession;","48","","49","import static java.lang.String.format;","53","  private final UserSession userSession;","54","  private final SourceService sourceService;","55","  private final ComponentViewerJsonWriter componentViewerJsonWriter;","56","  private final LinesJsonWriter linesJsonWriter;","58","  public IssueSnippetsAction(DbClient dbClient, UserSession userSession, SourceService sourceService, LinesJsonWriter linesJsonWriter,","59","                             ComponentViewerJsonWriter componentViewerJsonWriter) {","62","    this.userSession = userSession;","87","      IssueDto issueDto = dbClient.issueDao().selectByKey(dbSession, issueKey)","88","        .orElseThrow(() -> new NotFoundException(format(\"Issue with key '%s' does not exist\", issueKey)));","89","      ComponentDto project = dbClient.componentDao().selectByUuid(dbSession, issueDto.getProjectUuid())","90","        .orElseThrow(() -> new NotFoundException(format(\"Project with uuid '%s' does not exist\", issueDto.getProjectUuid())));","91","      userSession.checkComponentPermission(UserRole.USER, project);","94","      String componentUuid = issueDto.getComponentUuid();","95","      if (locations == null || componentUuid == null) {","96","        response.noContent();","98","        Map<String, TreeSet<Integer>> linesPerComponent = getLinesPerComponent(componentUuid, locations);","99","        Map<String, ComponentDto> componentsByUuid = dbClient.componentDao().selectByUuids(dbSession, linesPerComponent.keySet())","100","          .stream().collect(Collectors.toMap(ComponentDto::uuid, c -> c));","101","        try (JsonWriter jsonWriter = response.newJsonWriter()) {","102","          jsonWriter.beginObject();","104","          boolean showScmAuthors = userSession.hasMembership(new OrganizationDto().setUuid(project.getOrganizationUuid()));","105","          for (Map.Entry<String, TreeSet<Integer>> e : linesPerComponent.entrySet()) {","106","            ComponentDto componentDto = componentsByUuid.get(e.getKey());","107","            if (componentDto != null) {","108","              writeSnippet(dbSession, jsonWriter, componentDto, e.getValue(), showScmAuthors);","109","            }","112","          jsonWriter.endObject();","113","        }","118","  private void writeSnippet(DbSession dbSession, JsonWriter writer, ComponentDto fileDto, Set<Integer> lines, boolean showScmAuthors) {","119","    Optional<Iterable<DbFileSources.Line>> lineSourcesOpt = sourceService.getLines(dbSession, fileDto.uuid(), lines);","125","      .selectLastAnalysisByComponentUuid(dbSession, fileDto.projectUuid())","130","    writer.name(fileDto.getKey()).beginObject();","133","    componentViewerJsonWriter.writeComponentWithoutFav(writer, fileDto, dbSession, false);","134","    componentViewerJsonWriter.writeMeasures(writer, fileDto, dbSession);","136","    linesJsonWriter.writeSource(lineSources, writer, showScmAuthors, periodDateSupplier);","141","  private static Map<String, TreeSet<Integer>> getLinesPerComponent(String componentUuid, DbIssues.Locations locations) {","162","                                   DbCommons.TextRange textRange, int numLinesAfterIssue) {"],"delete":["22","import java.util.Collections;","44","import org.sonar.server.issue.IssueFinder;","48","  private final IssueFinder issueFinder;","49","  private final LinesJsonWriter linesJsonWriter;","50","  private final ComponentViewerJsonWriter componentViewerJsonWriter;","51","  private final SourceService sourceService;","54","  public IssueSnippetsAction(SourceService sourceService, DbClient dbClient, IssueFinder issueFinder, LinesJsonWriter linesJsonWriter,","55","    ComponentViewerJsonWriter componentViewerJsonWriter) {","58","    this.issueFinder = issueFinder;","83","      IssueDto issueDto = issueFinder.getByKey(dbSession, issueKey);","84","","85","      Map<String, TreeSet<Integer>> linesPerComponent;","86","      Map<String, ComponentDto> componentsByUuid;","89","      if (locations != null && issueDto.getComponentUuid() != null) {","90","        linesPerComponent = getLinesPerComponent(issueDto.getComponentUuid(), locations);","91","        componentsByUuid = dbClient.componentDao().selectByUuids(dbSession, linesPerComponent.keySet())","92","          .stream().collect(Collectors.toMap(ComponentDto::uuid, c -> c));","94","        componentsByUuid = Collections.emptyMap();","95","        linesPerComponent = Collections.emptyMap();","96","      }","98","      try (JsonWriter jsonWriter = response.newJsonWriter()) {","99","        jsonWriter.beginObject();","100","","101","        for (Map.Entry<String, TreeSet<Integer>> e : linesPerComponent.entrySet()) {","102","          ComponentDto componentDto = componentsByUuid.get(e.getKey());","103","          if (componentDto != null) {","104","            processComponent(dbSession, jsonWriter, componentDto, e.getKey(), e.getValue());","106","        }","108","        jsonWriter.endObject();","113","  private void processComponent(DbSession dbSession, JsonWriter writer, ComponentDto componentDto, String fileUuid, Set<Integer> lines) {","114","    Optional<Iterable<DbFileSources.Line>> lineSourcesOpt = sourceService.getLines(dbSession, fileUuid, lines);","120","      .selectLastAnalysisByComponentUuid(dbSession, componentDto.projectUuid())","125","    writer.name(componentDto.getKey()).beginObject();","128","    componentViewerJsonWriter.writeComponentWithoutFav(writer, componentDto, dbSession, false);","129","    componentViewerJsonWriter.writeMeasures(writer, componentDto, dbSession);","131","    linesJsonWriter.writeSource(lineSources, writer, false, periodDateSupplier);","136","  private Map<String, TreeSet<Integer>> getLinesPerComponent(String componentUuid, DbIssues.Locations locations) {","157","    DbCommons.TextRange textRange, int numLinesAfterIssue) {"]}]}},"aefa1e5ffb6e9348a5545872b48a81d470c87690":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["26","import javax.annotation.Nullable;","284","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuidOrBefore(rootUuid, null);","288","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore(rootUuid, null);","292","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuidOrBefore(rootUuid, null);","296","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuidOrBefore(rootUuid, null);","300","    purgeMapper.deleteCeActivityByRootUuidOrBefore(rootUuid, null);","305","  void deleteCeActivityBefore(@Nullable String rootUuid, long createdAt) {","306","    profiler.start(\"deleteCeActivityBefore (ce_scanner_context)\");","307","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","308","    session.commit();","309","    profiler.stop();","310","    profiler.start(\"deleteCeActivityBefore (ce_task_characteristics)\");","311","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","312","    session.commit();","313","    profiler.stop();","314","    profiler.start(\"deleteCeActivityBefore (ce_task_input)\");","315","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","316","    session.commit();","317","    profiler.stop();","318","    profiler.start(\"deleteCeActivityBefore (ce_task_message)\");","319","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","320","    session.commit();","321","    profiler.stop();","322","    profiler.start(\"deleteCeActivityBefore (ce_activity)\");","323","    purgeMapper.deleteCeActivityByRootUuidOrBefore(rootUuid, createdAt);","324","    session.commit();","325","    profiler.stop();","326","  }","327","","328","  void deleteCeScannerContextBefore(@Nullable String rootUuid, long createdAt) {","329","    \/\/ assuming CeScannerContext of rows in table CE_QUEUE can't be older than createdAt","330","    profiler.start(\"deleteCeScannerContextBefore\");","331","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","332","    session.commit();","333","  }","334",""],"delete":["283","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuid(rootUuid);","287","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuid(rootUuid);","291","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuid(rootUuid);","295","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuid(rootUuid);","299","    purgeMapper.deleteCeActivityByRootUuid(rootUuid);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["346","  <delete id=\"deleteCeScannerContextOfCeActivityByRootUuidOrBefore\">","349","    task_uuid in (","350","      select","351","        uuid","352","      from ce_activity","353","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","354","    )","357","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore\">","360","    task_uuid in (","361","      select","362","        uuid","363","      from ce_activity","364","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","365","    )","368","  <delete id=\"deleteCeTaskInputOfCeActivityByRootUuidOrBefore\">","371","    task_uuid in (","372","      select","373","        uuid","374","      from ce_activity","375","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","376","    )","379","  <delete id=\"deleteCeTaskMessageOfCeActivityByRootUuidOrBefore\">","382","    task_uuid in (","383","      select","384","        uuid","385","      from ce_activity","386","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","387","    )","390","  <delete id=\"deleteCeActivityByRootUuidOrBefore\">","391","    delete from ce_activity","392","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","393","  <\/delete>","394","","395","  <sql id=\"whereClauseCeActivityByRootUuidOrBefore\">","396","    where","397","    <choose>","398","      <when test=\"rootUuid != null and createdAtBefore != null\">","399","        created_at &lt; #{createdAtBefore,jdbcType=BIGINT}","400","        and (","401","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","402","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","403","        )","404","      <\/when>","405","      <when test=\"createdAtBefore != null\">","406","        created_at &lt; #{createdAtBefore,jdbcType=BIGINT}","407","      <\/when>","408","      <when test=\"rootUuid != null\">","411","      <\/when>","412","      <!-- safety net when both variables are null to never generate a","413","           delete statement deleting the whole table -->","414","      <otherwise>","415","        1 = 2","416","      <\/otherwise>","417","    <\/choose>","418","  <\/sql>"],"delete":["346","  <delete id=\"deleteCeScannerContextOfCeActivityByRootUuid\">","349","      task_uuid in (","350","        select","351","          uuid","352","        from ce_activity","353","        where","354","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","355","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","356","      )","359","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByRootUuid\">","362","      task_uuid in (","363","        select","364","          uuid","365","        from ce_activity","366","        where","367","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","368","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","369","      )","372","  <delete id=\"deleteCeTaskInputOfCeActivityByRootUuid\">","375","      task_uuid in (","376","        select","377","          uuid","378","        from ce_activity","379","        where","380","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","381","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","382","      )","385","  <delete id=\"deleteCeTaskMessageOfCeActivityByRootUuid\">","388","      task_uuid in (","389","        select","390","          uuid","391","        from ce_activity","392","        where","393","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","394","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","395","      )","398","  <delete id=\"deleteCeActivityByRootUuid\">","399","      delete from ce_activity","400","      where","403","  <\/delete>"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":[{"add":["22","import org.mockito.InOrder;","23","import org.mockito.Mockito;","24","import org.sonar.db.DbClient;","25","import org.sonar.db.DbSession;","26","import org.sonar.db.purge.PurgeDao;","27","import org.sonar.db.purge.PurgeProfiler;","34","  private DbClient dbClient = mock(DbClient.class);","35","  private PurgeDao purgeDao = mock(PurgeDao.class);","36","  private DbSession dbSession = mock(DbSession.class);","37","  private PurgeProfiler profiler = mock(PurgeProfiler.class);","38","  private PurgeCeActivities underTest = new PurgeCeActivities(dbClient, profiler);","41","  public void starts_calls_purgeDao_and_commit() {","42","    when(dbClient.purgeDao()).thenReturn(purgeDao);","43","    when(dbClient.openSession(false)).thenReturn(dbSession);","47","    InOrder inOrder = Mockito.inOrder(purgeDao, dbSession);","48","    inOrder.verify(purgeDao).purgeCeActivities(dbSession, profiler);","49","    inOrder.verify(purgeDao).purgeCeScannerContexts(dbSession, profiler);","50","    inOrder.verify(dbSession).commit();","51","    inOrder.verify(dbSession).close();","52","    inOrder.verifyNoMoreInteractions();"],"delete":["21","import java.nio.charset.Charset;","22","import java.time.LocalDateTime;","23","import java.time.ZoneOffset;","24","import java.util.Collections;","25","import java.util.List;","26","import java.util.Optional;","27","import org.apache.commons.io.IOUtils;","28","import org.junit.Rule;","30","import org.sonar.api.utils.System2;","31","import org.sonar.core.util.UuidFactoryFast;","32","import org.sonar.db.DbTester;","33","import org.sonar.db.ce.CeActivityDto;","34","import org.sonar.db.ce.CeQueueDto;","35","import org.sonar.db.ce.CeTaskCharacteristicDto;","36","import org.sonar.db.ce.CeTaskInputDao;","37","import org.sonar.db.ce.CeTaskTypes;","39","import static java.time.ZoneOffset.UTC;","40","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","41","import static org.assertj.core.api.Assertions.assertThat;","47","  private System2 system2 = mock(System2.class);","48","","49","  @Rule","50","  public DbTester dbTester = DbTester.create(system2);","51","","52","  private PurgeCeActivities underTest = new PurgeCeActivities(dbTester.getDbClient(), system2);","55","  public void delete_activity_older_than_180_days_and_their_scanner_context() {","56","    LocalDateTime now = LocalDateTime.now();","57","    insertWithDate(\"VERY_OLD\", now.minusDays(180).minusMonths(10));","58","    insertWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(180).minusDays(1));","59","    insertWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(180));","60","    insertWithDate(\"RECENT\", now.minusDays(1));","61","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","65","    assertThat(selectActivity(\"VERY_OLD\").isPresent()).isFalse();","66","    assertThat(selectTaskInput(\"VERY_OLD\").isPresent()).isFalse();","67","    assertThat(selectTaskCharecteristic(\"VERY_OLD\")).hasSize(0);","68","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","69","","70","    assertThat(selectActivity(\"JUST_OLD_ENOUGH\").isPresent()).isFalse();","71","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH\").isPresent()).isFalse();","72","    assertThat(selectTaskCharecteristic(\"JUST_OLD_ENOUGH\")).hasSize(0);","73","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","74","","75","    assertThat(selectActivity(\"NOT_OLD_ENOUGH\").isPresent()).isTrue();","76","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH\").isPresent()).isTrue();","77","    assertThat(selectTaskCharecteristic(\"NOT_OLD_ENOUGH\")).hasSize(1);","78","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isFalse(); \/\/ because more than 4 weeks old","79","","80","    assertThat(selectActivity(\"RECENT\").isPresent()).isTrue();","81","    assertThat(selectTaskInput(\"RECENT\").isPresent()).isTrue();","82","    assertThat(selectTaskCharecteristic(\"RECENT\")).hasSize(1);","83","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","84","","85","  }","86","","87","  @Test","88","  public void delete_ce_scanner_context_older_than_28_days() {","89","    LocalDateTime now = LocalDateTime.now();","90","    insertWithDate(\"VERY_OLD\", now.minusDays(28).minusMonths(12));","91","    insertWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(28).minusDays(1));","92","    insertWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(28));","93","    insertWithDate(\"RECENT\", now.minusDays(1));","94","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","95","","96","    underTest.start();","97","","98","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","99","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","100","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","101","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","102","  }","103","","104","  private Optional<CeActivityDto> selectActivity(String taskUuid) {","105","    return dbTester.getDbClient().ceActivityDao().selectByUuid(dbTester.getSession(), taskUuid);","106","  }","107","","108","  private List<CeTaskCharacteristicDto> selectTaskCharecteristic(String taskUuid) {","109","    return dbTester.getDbClient().ceTaskCharacteristicsDao().selectByTaskUuids(dbTester.getSession(), Collections.singletonList(taskUuid));","110","  }","111","","112","  private Optional<CeTaskInputDao.DataStream> selectTaskInput(String taskUuid) {","113","    return dbTester.getDbClient().ceTaskInputDao().selectData(dbTester.getSession(), taskUuid);","114","  }","115","","116","  private boolean scannerContextExists(String uuid) {","117","    return dbTester.countSql(\"select count(1) from ce_scanner_context where task_uuid = '\" + uuid + \"'\") == 1;","118","  }","119","","120","  private void insertWithDate(String uuid, LocalDateTime dateTime) {","121","    long date = dateTime.toInstant(UTC).toEpochMilli();","122","    CeQueueDto queueDto = new CeQueueDto();","123","    queueDto.setUuid(uuid);","124","    queueDto.setTaskType(CeTaskTypes.REPORT);","125","","126","    CeActivityDto dto = new CeActivityDto(queueDto);","127","    dto.setStatus(CeActivityDto.Status.SUCCESS);","128","    when(system2.now()).thenReturn(date);","129","    CeTaskCharacteristicDto ceTaskCharacteristicDto = new CeTaskCharacteristicDto()","130","      .setUuid(UuidFactoryFast.getInstance().create())","131","      .setValue(randomAlphanumeric(10))","132","      .setKey(randomAlphanumeric(10))","133","      .setTaskUuid(dto.getUuid());","134","","135","    dbTester.getDbClient().ceTaskInputDao().insert(dbTester.getSession(), dto.getUuid(), IOUtils.toInputStream(randomAlphanumeric(10), Charset.forName(\"UTF-8\")));","136","    dbTester.getDbClient().ceActivityDao().insert(dbTester.getSession(), dto);","137","    dbTester.getDbClient().ceTaskCharacteristicsDao().insert(dbTester.getSession(), Collections.singletonList(ceTaskCharacteristicDto));","138","    dbTester.getSession().commit();","139","","140","    insertScannerContext(uuid, date);","141","  }","142","","143","  private void insertScannerContext(String uuid, long createdAt) {","144","    dbTester.executeInsert(","145","      \"CE_SCANNER_CONTEXT\",","146","      \"task_uuid\", uuid,","147","      \"created_at\", createdAt,","148","      \"updated_at\", 1,","149","      \"context_data\", \"YoloContent\".getBytes());","150","    dbTester.commit();"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["96","  List<IdUuidPair> selectDisabledComponentsWithoutIssues(@Param(\"projectUuid\") String projectUuid);","106","  void deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","107","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","109","  void deleteCeTaskInputOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","110","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","112","  void deleteCeScannerContextOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","113","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","115","  void deleteCeTaskMessageOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","116","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","118","  \/**","119","   * Delete rows in CE_ACTIVITY of tasks of the specified component and\/or created before specified date.","120","   *\/","121","  void deleteCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","122","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);"],"delete":["96","  List<IdUuidPair>  selectDisabledComponentsWithoutIssues(@Param(\"projectUuid\") String projectUuid);","106","  void deleteCeTaskCharacteristicsOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","108","  void deleteCeTaskInputOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","110","  void deleteCeScannerContextOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","112","  void deleteCeTaskMessageOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","114","  void deleteCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["24","import java.time.LocalDateTime;","25","import java.time.ZoneOffset;","32","import java.util.function.Consumer;","55","import org.sonar.db.ce.CeTaskInputDao;","57","import org.sonar.db.ce.CeTaskTypes;","80","import static java.time.ZoneOffset.UTC;","1033","  public void delete_ce_analysis_older_than_180_and_scanner_context_older_than_40_days_of_specified_project_when_purging_project() {","1034","    LocalDateTime now = LocalDateTime.now();","1035","    ComponentDto project1 = db.components().insertPublicProject();","1036","    Consumer<CeQueueDto> belongsToProject1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(project1.uuid());","1037","    ComponentDto project2 = db.components().insertPublicProject();","1038","    Consumer<CeQueueDto> belongsToProject2 = t -> t.setMainComponentUuid(project2.uuid()).setComponentUuid(project2.uuid());","1039","","1040","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_1\", now.minusDays(180).minusMonths(10), belongsToProject1);","1041","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_1\", now.minusDays(180).minusDays(1), belongsToProject1);","1042","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_1\", now.minusDays(180), belongsToProject1);","1043","    insertCeActivityAndChildDataWithDate(\"RECENT_1\", now.minusDays(1), belongsToProject1);","1044","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_2\", now.minusDays(180).minusMonths(10), belongsToProject2);","1045","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_2\", now.minusDays(180).minusDays(1), belongsToProject2);","1046","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_2\", now.minusDays(180), belongsToProject2);","1047","    insertCeActivityAndChildDataWithDate(\"RECENT_2\", now.minusDays(1), belongsToProject2);","1048","","1049","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1050","    underTest.purge(db.getSession(), newConfigurationWith30Days(System2.INSTANCE, project1.uuid(), project1.uuid()),","1051","      PurgeListener.EMPTY, new PurgeProfiler());","1052","","1053","    assertThat(selectActivity(\"VERY_OLD_1\")).isEmpty();","1054","    assertThat(selectTaskInput(\"VERY_OLD_1\")).isEmpty();","1055","    assertThat(selectTaskCharacteristic(\"VERY_OLD_1\")).hasSize(0);","1056","    assertThat(scannerContextExists(\"VERY_OLD_1\")).isFalse();","1057","    assertThat(selectActivity(\"VERY_OLD_2\")).isNotEmpty();","1058","    assertThat(selectTaskInput(\"VERY_OLD_2\")).isNotEmpty();","1059","    assertThat(selectTaskCharacteristic(\"VERY_OLD_2\")).hasSize(1);","1060","    assertThat(scannerContextExists(\"VERY_OLD_2\")).isTrue();","1061","","1062","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1063","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1064","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_1\")).hasSize(0);","1065","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_1\")).isFalse();","1066","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_2\")).isNotEmpty();","1067","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_2\")).isNotEmpty();","1068","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_2\")).hasSize(1);","1069","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_2\")).isTrue();","1070","","1071","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1072","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1073","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_1\")).hasSize(1);","1074","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse();  \/\/ because more than 4 weeks old","1075","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1076","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1077","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_2\")).hasSize(1);","1078","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_2\")).isTrue();","1079","","1080","    assertThat(selectActivity(\"RECENT_1\")).isNotEmpty();","1081","    assertThat(selectTaskInput(\"RECENT_1\")).isNotEmpty();","1082","    assertThat(selectTaskCharacteristic(\"RECENT_1\")).hasSize(1);","1083","    assertThat(scannerContextExists(\"RECENT_1\")).isTrue();","1084","    assertThat(selectActivity(\"RECENT_2\")).isNotEmpty();","1085","    assertThat(selectTaskInput(\"RECENT_2\")).isNotEmpty();","1086","    assertThat(selectTaskCharacteristic(\"RECENT_2\")).hasSize(1);","1087","    assertThat(scannerContextExists(\"RECENT_2\")).isTrue();","1088","  }","1089","","1090","  @Test","1091","  public void delete_ce_analysis_older_than_180_and_scanner_context_older_than_40_days_of_project_and_branches_when_purging_project() {","1092","    LocalDateTime now = LocalDateTime.now();","1093","    ComponentDto project1 = db.components().insertPublicProject();","1094","    ComponentDto branch1 = db.components().insertProjectBranch(project1);","1095","    Consumer<CeQueueDto> belongsToProject1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(project1.uuid());","1096","    Consumer<CeQueueDto> belongsToBranch1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(branch1.uuid());","1097","","1098","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_1\", now.minusDays(180).minusMonths(10), belongsToProject1);","1099","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_1\", now.minusDays(180).minusDays(1), belongsToProject1);","1100","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_1\", now.minusDays(180), belongsToProject1);","1101","    insertCeActivityAndChildDataWithDate(\"RECENT_1\", now.minusDays(1), belongsToProject1);","1102","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_2\", now.minusDays(180).minusMonths(10), belongsToBranch1);","1103","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_2\", now.minusDays(180).minusDays(1), belongsToBranch1);","1104","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_2\", now.minusDays(180), belongsToBranch1);","1105","    insertCeActivityAndChildDataWithDate(\"RECENT_2\", now.minusDays(1), belongsToBranch1);","1106","","1107","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1108","    underTest.purge(db.getSession(), newConfigurationWith30Days(System2.INSTANCE, project1.uuid(), project1.uuid()),","1109","      PurgeListener.EMPTY, new PurgeProfiler());","1110","","1111","    assertThat(selectActivity(\"VERY_OLD_1\")).isEmpty();","1112","    assertThat(selectTaskInput(\"VERY_OLD_1\")).isEmpty();","1113","    assertThat(selectTaskCharacteristic(\"VERY_OLD_1\")).hasSize(0);","1114","    assertThat(scannerContextExists(\"VERY_OLD_1\")).isFalse();","1115","    assertThat(selectActivity(\"VERY_OLD_2\")).isEmpty();","1116","    assertThat(selectTaskInput(\"VERY_OLD_2\")).isEmpty();","1117","    assertThat(selectTaskCharacteristic(\"VERY_OLD_2\")).isEmpty();","1118","    assertThat(scannerContextExists(\"VERY_OLD_2\")).isFalse();","1119","","1120","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1121","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1122","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_1\")).hasSize(0);","1123","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_1\")).isFalse();","1124","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1125","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1126","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1127","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_2\")).isFalse();","1128","","1129","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1130","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1131","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_1\")).hasSize(1);","1132","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse(); \/\/ because more than 4 weeks old","1133","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1134","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1135","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_2\")).hasSize(1);","1136","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_2\")).isFalse(); \/\/ because more than 4 weeks old","1137","","1138","    assertThat(selectActivity(\"RECENT_1\")).isNotEmpty();","1139","    assertThat(selectTaskInput(\"RECENT_1\")).isNotEmpty();","1140","    assertThat(selectTaskCharacteristic(\"RECENT_1\")).hasSize(1);","1141","    assertThat(scannerContextExists(\"RECENT_1\")).isTrue();","1142","    assertThat(selectActivity(\"RECENT_2\")).isNotEmpty();","1143","    assertThat(selectTaskInput(\"RECENT_2\")).isNotEmpty();","1144","    assertThat(selectTaskCharacteristic(\"RECENT_2\")).hasSize(1);","1145","    assertThat(scannerContextExists(\"RECENT_2\")).isTrue();","1146","  }","1147","","1148","  @Test","1149","  public void delete_ce_analysis_of_branch_older_than_180_and_scanner_context_older_than_40_days_when_purging_branch() {","1150","    LocalDateTime now = LocalDateTime.now();","1151","    ComponentDto project1 = db.components().insertPublicProject();","1152","    ComponentDto branch1 = db.components().insertProjectBranch(project1);","1153","    Consumer<CeQueueDto> belongsToProject1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(project1.uuid());","1154","    Consumer<CeQueueDto> belongsToBranch1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(branch1.uuid());","1155","","1156","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_1\", now.minusDays(180).minusMonths(10), belongsToProject1);","1157","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_1\", now.minusDays(180).minusDays(1), belongsToProject1);","1158","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_1\", now.minusDays(180), belongsToProject1);","1159","    insertCeActivityAndChildDataWithDate(\"RECENT_1\", now.minusDays(1), belongsToProject1);","1160","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_2\", now.minusDays(180).minusMonths(10), belongsToBranch1);","1161","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_2\", now.minusDays(180).minusDays(1), belongsToBranch1);","1162","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_2\", now.minusDays(180), belongsToBranch1);","1163","    insertCeActivityAndChildDataWithDate(\"RECENT_2\", now.minusDays(1), belongsToBranch1);","1164","","1165","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1166","    underTest.purge(db.getSession(), newConfigurationWith30Days(System2.INSTANCE, branch1.uuid(), branch1.uuid()),","1167","      PurgeListener.EMPTY, new PurgeProfiler());","1168","","1169","    assertThat(selectActivity(\"VERY_OLD_1\")).isNotEmpty();","1170","    assertThat(selectTaskInput(\"VERY_OLD_1\")).isNotEmpty();","1171","    assertThat(selectTaskCharacteristic(\"VERY_OLD_1\")).hasSize(1);","1172","    assertThat(scannerContextExists(\"VERY_OLD_1\")).isTrue();","1173","    assertThat(selectActivity(\"VERY_OLD_2\")).isEmpty();","1174","    assertThat(selectTaskInput(\"VERY_OLD_2\")).isEmpty();","1175","    assertThat(selectTaskCharacteristic(\"VERY_OLD_2\")).isEmpty();","1176","    assertThat(scannerContextExists(\"VERY_OLD_2\")).isFalse();","1177","","1178","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_1\")).isNotEmpty();","1179","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_1\")).isNotEmpty();","1180","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_1\")).hasSize(1);","1181","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_1\")).isTrue();","1182","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1183","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1184","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1185","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_2\")).isFalse();","1186","","1187","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1188","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1189","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_1\")).hasSize(1);","1190","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isTrue();","1191","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1192","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1193","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_2\")).hasSize(1);","1194","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_2\")).isFalse(); \/\/ because more than 4 weeks old","1195","","1196","    assertThat(selectActivity(\"RECENT_1\")).isNotEmpty();","1197","    assertThat(selectTaskInput(\"RECENT_1\")).isNotEmpty();","1198","    assertThat(selectTaskCharacteristic(\"RECENT_1\")).hasSize(1);","1199","    assertThat(scannerContextExists(\"RECENT_1\")).isTrue();","1200","    assertThat(selectActivity(\"RECENT_2\")).isNotEmpty();","1201","    assertThat(selectTaskInput(\"RECENT_2\")).isNotEmpty();","1202","    assertThat(selectTaskCharacteristic(\"RECENT_2\")).hasSize(1);","1203","    assertThat(scannerContextExists(\"RECENT_2\")).isTrue();","1204","  }","1205","","1206","  @Test","1445","  @Test","1446","  public void purgeCeActivities_deletes_activity_older_than_180_days_and_their_scanner_context() {","1447","    LocalDateTime now = LocalDateTime.now();","1448","    insertCeActivityAndChildDataWithDate(\"VERY_OLD\", now.minusDays(180).minusMonths(10));","1449","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(180).minusDays(1));","1450","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(180));","1451","    insertCeActivityAndChildDataWithDate(\"RECENT\", now.minusDays(1));","1452","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1453","","1454","    underTest.purgeCeActivities(db.getSession(), new PurgeProfiler());","1455","","1456","    assertThat(selectActivity(\"VERY_OLD\")).isEmpty();","1457","    assertThat(selectTaskInput(\"VERY_OLD\")).isEmpty();","1458","    assertThat(selectTaskCharacteristic(\"VERY_OLD\")).hasSize(0);","1459","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","1460","","1461","    assertThat(selectActivity(\"JUST_OLD_ENOUGH\")).isEmpty();","1462","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH\")).isEmpty();","1463","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH\")).hasSize(0);","1464","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","1465","","1466","    assertThat(selectActivity(\"NOT_OLD_ENOUGH\")).isNotEmpty();","1467","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH\")).isNotEmpty();","1468","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH\")).hasSize(1);","1469","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","1470","","1471","    assertThat(selectActivity(\"RECENT\")).isNotEmpty();","1472","    assertThat(selectTaskInput(\"RECENT\")).isNotEmpty();","1473","    assertThat(selectTaskCharacteristic(\"RECENT\")).hasSize(1);","1474","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","1475","  }","1476","","1477","  @Test","1478","  public void purgeCeScannerContexts_deletes_ce_scanner_context_older_than_28_days() {","1479","    LocalDateTime now = LocalDateTime.now();","1480","    insertCeActivityAndChildDataWithDate(\"VERY_OLD\", now.minusDays(28).minusMonths(12));","1481","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(28).minusDays(1));","1482","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(28));","1483","    insertCeActivityAndChildDataWithDate(\"RECENT\", now.minusDays(1));","1484","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1485","","1486","    underTest.purgeCeScannerContexts(db.getSession(), new PurgeProfiler());","1487","","1488","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","1489","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","1490","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","1491","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","1492","  }","1493","","1494","  private Optional<CeActivityDto> selectActivity(String taskUuid) {","1495","    return db.getDbClient().ceActivityDao().selectByUuid(db.getSession(), taskUuid);","1496","  }","1497","","1498","  private List<CeTaskCharacteristicDto> selectTaskCharacteristic(String taskUuid) {","1499","    return db.getDbClient().ceTaskCharacteristicsDao().selectByTaskUuids(db.getSession(), Collections.singletonList(taskUuid));","1500","  }","1501","","1502","  private Optional<CeTaskInputDao.DataStream> selectTaskInput(String taskUuid) {","1503","    return db.getDbClient().ceTaskInputDao().selectData(db.getSession(), taskUuid);","1504","  }","1505","","1506","  private boolean scannerContextExists(String uuid) {","1507","    return db.countSql(\"select count(1) from ce_scanner_context where task_uuid = '\" + uuid + \"'\") == 1;","1508","  }","1509","","1510","  @SafeVarargs","1511","  private final void insertCeActivityAndChildDataWithDate(String ceActivityUuid, LocalDateTime dateTime,","1512","    Consumer<CeQueueDto>... queueDtoConsumers) {","1513","    long date = dateTime.toInstant(UTC).toEpochMilli();","1514","    CeQueueDto queueDto = new CeQueueDto();","1515","    queueDto.setUuid(ceActivityUuid);","1516","    queueDto.setTaskType(CeTaskTypes.REPORT);","1517","    Arrays.stream(queueDtoConsumers).forEach(t -> t.accept(queueDto));","1518","    CeActivityDto dto = new CeActivityDto(queueDto);","1519","    dto.setStatus(CeActivityDto.Status.SUCCESS);","1520","","1521","    when(system2.now()).thenReturn(date);","1522","    insertCeTaskInput(dto.getUuid());","1523","    insertCeTaskCharacteristics(dto.getUuid(), 1);","1524","    insertCeScannerContext(dto.getUuid());","1525","    insertCeTaskMessages(dto.getUuid(), 2);","1526","    db.getDbClient().ceActivityDao().insert(db.getSession(), dto);","1527","    db.getSession().commit();","1528","  }","1529",""],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["30","import javax.annotation.Nullable;","31","import org.sonar.api.utils.DateUtils;","72","    purgeOldCeActivities(rootUuid, commands);","73","    purgeOldCeScannerContexts(rootUuid, commands);","79","  private void purgeStaleBranches(PurgeCommands commands, PurgeConfiguration conf, PurgeMapper mapper, String rootUuid) {","180","  public void purgeCeActivities(DbSession session, PurgeProfiler profiler) {","181","    PurgeMapper mapper = session.getMapper(PurgeMapper.class);","182","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","183","    purgeOldCeActivities(null, commands);","184","  }","185","","186","  private void purgeOldCeActivities(@Nullable String rootUuid, PurgeCommands commands) {","187","    Date sixMonthsAgo = DateUtils.addDays(new Date(system2.now()), -180);","188","    commands.deleteCeActivityBefore(rootUuid, sixMonthsAgo.getTime());","189","  }","190","","191","  public void purgeCeScannerContexts(DbSession session, PurgeProfiler profiler) {","192","    PurgeMapper mapper = session.getMapper(PurgeMapper.class);","193","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","194","    purgeOldCeScannerContexts(null, commands);","195","  }","196","","197","  private void purgeOldCeScannerContexts(@Nullable String rootUuid, PurgeCommands commands) {","198","    Date fourWeeksAgo = DateUtils.addDays(new Date(system2.now()), -28);","199","    commands.deleteCeScannerContextBefore(rootUuid, fourWeeksAgo.getTime());","200","  }","201","","202","","247","  private void deleteRootComponent(String rootUuid, PurgeMapper mapper, PurgeCommands commands) {"],"delete":["75","  private static void purgeStaleBranches(PurgeCommands commands, PurgeConfiguration conf, PurgeMapper mapper, String rootUuid) {","220","  private static void deleteRootComponent(String rootUuid, PurgeMapper mapper, PurgeCommands commands) {"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":[{"add":["25","import org.sonar.db.purge.PurgeProfiler;","31","  private final PurgeProfiler profiler;","33","  public PurgeCeActivities(DbClient dbClient, PurgeProfiler profiler) {","35","    this.profiler = profiler;","41","      dbClient.purgeDao().purgeCeActivities(dbSession, profiler);","42","      dbClient.purgeDao().purgeCeScannerContexts(dbSession, profiler);"],"delete":["21","import java.util.Date;","22","import java.util.Set;","25","import org.sonar.api.utils.DateUtils;","26","import org.sonar.api.utils.System2;","27","import org.sonar.api.utils.log.Logger;","28","import org.sonar.api.utils.log.Loggers;","31","import org.sonar.db.ce.CeActivityDto;","32","","33","import static java.util.stream.Stream.concat;","34","import static org.sonar.core.util.stream.MoreCollectors.toSet;","39","  private static final Logger LOGGER = Loggers.get(PurgeCeActivities.class);","40","","42","  private final System2 system2;","44","  public PurgeCeActivities(DbClient dbClient, System2 system2) {","46","    this.system2 = system2;","52","      Date sixMonthsAgo = DateUtils.addDays(new Date(system2.now()), -180);","53","","54","      LOGGER.info(\"Delete the Compute Engine tasks created before {}\", sixMonthsAgo.getTime());","55","      Set<String> ceActivityUuids = dbClient.ceActivityDao().selectOlderThan(dbSession, sixMonthsAgo.getTime())","56","        .stream()","57","        .map(CeActivityDto::getUuid)","58","        .collect(toSet());","59","      dbClient.ceActivityDao().deleteByUuids(dbSession, ceActivityUuids);","60","      dbClient.ceTaskCharacteristicsDao().deleteByTaskUuids(dbSession, ceActivityUuids);","61","      dbClient.ceTaskInputDao().deleteByUuids(dbSession, ceActivityUuids);","62","","63","      Date fourWeeksAgo = DateUtils.addDays(new Date(system2.now()), -28);","64","","65","      LOGGER.info(\"Delete the Scanner contexts tasks created before {}\", fourWeeksAgo.getTime());","66","      Set<String> scannerContextUuids = dbClient.ceScannerContextDao().selectOlderThan(dbSession, fourWeeksAgo.getTime());","67","      dbClient.ceScannerContextDao().deleteByUuids(","68","        dbSession,","69","        concat(ceActivityUuids.stream(), scannerContextUuids.stream()).collect(toSet()));"]}]}},"a340aab5a95c56a1bd196f47ce79de7413bfc5fd":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/CoreProperties.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleaner.java":[{"add":["22","import org.sonar.api.CoreProperties;","26","import org.sonar.api.utils.TimeUtils;","27","import org.sonar.api.utils.log.Logger;","28","import org.sonar.api.utils.log.Loggers;","41","  private static final Logger LOG = Loggers.get(ProjectCleaner.class);","42","","56","    long start = System.currentTimeMillis();","65","    logProfiling(start, projectConfig);","68","","69","  private void logProfiling(long start, Configuration config) {","70","    if (config.getBoolean(CoreProperties.PROFILING_LOG_PROPERTY).orElse(false)) {","71","      long duration = System.currentTimeMillis() - start;","72","      LOG.info(\"\");","73","      LOG.info(\" -------- Profiling for purge: \" + TimeUtils.formatDuration(duration) + \" --------\");","74","      LOG.info(\"\");","75","      profiler.dump(duration, LOG);","76","      LOG.info(\"\");","77","      LOG.info(\" -------- End of profiling for purge --------\");","78","      LOG.info(\"\");","79","    }","80","  }"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/CoreProperties.java":[{"add":["311","   * @since 3.6","312","   * Removed in 8.4 by mistake and reintroduced in 8.5","313","   *\/","314","  String PROFILING_LOG_PROPERTY = \"sonar.showProfiling\";","315","","316","  \/**"],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/purge\/ProjectCleanerTest.java":[{"add":["23","import org.sonar.api.CoreProperties;","37","import static org.mockito.ArgumentMatchers.anyLong;","39","import static org.mockito.Mockito.never;","65","","66","  @Test","67","  public void no_profiling_when_property_is_false() {","68","    settings.setProperty(CoreProperties.PROFILING_LOG_PROPERTY, false);","69","","70","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());","71","","72","    verify(profiler, never()).dump(anyLong(), any());","73","  }","74","","75","  @Test","76","  public void profiling_when_property_is_true() {","77","    settings.setProperty(CoreProperties.PROFILING_LOG_PROPERTY, true);","78","","79","    underTest.purge(mock(DbSession.class), \"root\", \"project\", settings.asConfig(), emptySet());","80","","81","    verify(profiler).dump(anyLong(), any());","82","  }"],"delete":[]}]}},"47fe6783ed4a60118230ae81d2e95619e7be2080":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ComponentAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ComponentActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ComponentAction.java":[{"add":["32","import org.sonar.db.component.ComponentDto;","33","import org.sonar.server.component.ComponentFinder;","46","  private final ComponentFinder componentFinder;","48","  public ComponentAction(UserSession userSession, DbClient dbClient, TaskFormatter formatter, ComponentFinder componentFinder) {","52","    this.componentFinder = componentFinder;","74","      ComponentDto component = componentFinder.getByUuid(dbSession, wsRequest.mandatoryParam(PARAM_COMPONENT_UUID));","75","      userSession.checkComponentUuidPermission(UserRole.USER, component.uuid());","76","      List<CeQueueDto> queueDtos = dbClient.ceQueueDao().selectByComponentUuid(dbSession, component.uuid());","78","        .setComponentUuid(component.uuid())"],"delete":["45","  public ComponentAction(UserSession userSession, DbClient dbClient, TaskFormatter formatter) {","68","    String componentUuid = wsRequest.mandatoryParam(PARAM_COMPONENT_UUID);","69","    userSession.checkComponentUuidPermission(UserRole.USER, componentUuid);","70","","73","      List<CeQueueDto> queueDtos = dbClient.ceQueueDao().selectByComponentUuid(dbSession, componentUuid);","75","        .setComponentUuid(componentUuid)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ComponentActionTest.java":[{"add":["23","import org.junit.rules.ExpectedException;","31","import org.sonar.db.component.ComponentDbTester;","32","import org.sonar.server.component.ComponentFinder;","33","import org.sonar.server.exceptions.NotFoundException;","41","import static org.sonar.db.component.ComponentTesting.newProjectDto;","46","  public ExpectedException expectedException = ExpectedException.none();","47","","48","  @Rule","54","  ComponentDbTester componentDbTester = new ComponentDbTester(dbTester);","56","  ComponentAction underTest = new ComponentAction(userSession, dbTester.getDbClient(), formatter, new ComponentFinder(dbTester.getDbClient()));","61","    componentDbTester.insertComponent(newProjectDto(\"PROJECT_1\"));","76","    componentDbTester.insertComponent(newProjectDto(\"PROJECT_1\"));","100","    componentDbTester.insertComponent(newProjectDto(\"PROJECT_1\"));","120","  @Test","121","  public void fail_with_404_when_component_does_not_exist() throws Exception {","122","    userSession.addComponentUuidPermission(UserRole.USER, \"PROJECT_1\", \"PROJECT_1\");","123","","124","    expectedException.expect(NotFoundException.class);","125","    tester.newRequest()","126","      .setParam(\"componentId\", \"UNKNOWN\")","127","      .setMediaType(MediaTypes.PROTOBUF)","128","      .execute();","129","  }","130",""],"delete":["47","  ComponentAction underTest = new ComponentAction(userSession, dbTester.getDbClient(), formatter);"]}]}},"282c729e2aed2e3362c89e60ada017dbdf51f6dc":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/SimpleSessionsContainer.js":"ADD","server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooter.js":"MODIFY","it\/it-tests\/src\/test\/java\/it\/ui\/UiTest.java":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/SimpleContainer.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.js":[{"add":["28","import SimpleSessionsContainer from '..\/..\/apps\/sessions\/components\/SimpleSessionsContainer';","136","            <Route component={SimpleSessionsContainer}>"],"delete":["135","            <Route component={SimpleContainer}>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2871","","2872","#------------------------------------------------------------------------------","2873","#","2874","# GLOBAL FOOTER","2875","#","2876","#------------------------------------------------------------------------------","2877","footer.about=About","2878","footer.community=Community","2879","footer.documentation=Documentation","2880","footer.licence=LGPL v3","2881","footer.plugins=Plugins","2882","footer.production_database_explanation=The embedded database will not scale, it will not support upgrading to newer versions of SonarQube, and there is no support for migrating your data out of it into a different database engine.","2883","footer.production_database_warning=Embedded database should be used for evaluation purpose only","2884","footer.support=Get Support","2885","footer.version_x=Version {0}","2886","footer.web_api=Web API"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/SimpleSessionsContainer.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/GlobalFooter.js":[{"add":["25","import { translate, translateWithParameters } from '..\/..\/helpers\/l10n';","27","type Props = {","28","  hideLoggedInInfo?: boolean,","29","  productionDatabase: boolean,","30","  sonarqubeVersion?: string","31","};","33","function GlobalFooter({ hideLoggedInInfo, sonarqubeVersion, productionDatabase }: Props) {","39","            {translate('footer.production_database_warning')}","42","            {translate('footer.production_database_explanation')}","49","        {!hideLoggedInInfo &&","50","          sonarqubeVersion &&","51","          translateWithParameters('footer.version_x', sonarqubeVersion)}","52","        {!hideLoggedInInfo && sonarqubeVersion && ' - '}","53","        <a href=\"http:\/\/www.gnu.org\/licenses\/lgpl-3.0.txt\">{translate('footer.licence')}<\/a>","55","        <a href=\"http:\/\/www.sonarqube.org\">{translate('footer.community')}<\/a>","57","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/home.html\">","58","          {translate('footer.documentation')}","59","        <\/a>","61","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/community.html\">","62","          {translate('footer.support')}","63","        <\/a>","65","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">","66","          {translate('footer.plugins')}","67","        <\/a>","68","        {!hideLoggedInInfo && ' - '}","69","        {!hideLoggedInInfo && <Link to=\"\/web_api\">{translate('footer.web_api')}<\/Link>}","70","        {!hideLoggedInInfo && ' - '}","71","        {!hideLoggedInInfo && <Link to=\"\/about\">{translate('footer.about')}<\/Link>}"],"delete":["26","function GlobalFooter(props: Object) {","27","  const { sonarqubeVersion, productionDatabase } = props;","34","            Embedded database should be used for evaluation purpose only","37","            The embedded database will not scale, it will not support upgrading to newer","38","            {' '}","39","            versions of SonarQube, and there is no support for migrating your data out of it","40","            {' '}","41","            into a different database engine.","48","        Version {sonarqubeVersion}","50","        <a href=\"http:\/\/www.gnu.org\/licenses\/lgpl-3.0.txt\">LGPL v3<\/a>","52","        <a href=\"http:\/\/www.sonarqube.org\">Community<\/a>","54","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/home.html\">Documentation<\/a>","56","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/community.html\">Get Support<\/a>","57","        {' - '}","58","        <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">Plugins<\/a>","59","        {' - '}","60","        <Link to=\"\/web_api\">Web API<\/Link>","61","        {' - '}","62","        <Link to=\"\/about\">About<\/Link>"]}],"it\/it-tests\/src\/test\/java\/it\/ui\/UiTest.java":[{"add":["65","  public void footer_doesnt_contains_version_on_login_page() {","66","    WsResponse status = ItUtils.newAdminWsClient(ORCHESTRATOR).wsConnector().call(new GetRequest(\"api\/navigation\/global\"));","67","    Map<String, Object> statusMap = ItUtils.jsonToMap(status.content());","68","","69","    nav.openLogin();","70","    nav.getFooter().shouldNot(hasText((String) statusMap.get(\"version\")));","71","  }","72","","73","  @Test"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/SimpleContainer.js":[{"add":["23","type Props = {","24","  children?: React.Element<*> | Array<React.Element<*>>,","25","  hideLoggedInInfo?: boolean","26","};","27","","29","  props: Props;","59","        <GlobalFooter hideLoggedInInfo={this.props.hideLoggedInInfo} \/>"],"delete":["24","  static propTypes = {","25","    children: React.PropTypes.oneOfType([","26","      React.PropTypes.element,","27","      React.PropTypes.arrayOf(React.PropTypes.element)","28","    ])","29","  };","59","        <GlobalFooter \/>"]}]}},"b6b8ad459a289ad305c87ec525bfff8cda7a7ea4":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/ws\/InfoActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/ws\/InfoAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/ws\/InfoActionTest.java":[{"add":["31","import org.sonar.server.ws.TestResponse;","32","import org.sonar.server.ws.WsActionTester;","46","","47","  WsActionTester ws = new WsActionTester(new InfoAction(userSessionRule, processSystemInfoClient, monitor1, monitor2));","48","","49","  @Test","50","  public void test_definition() throws Exception {","51","    assertThat(ws.getDef().key()).isEqualTo(\"info\");","52","    assertThat(ws.getDef().isInternal()).isTrue();","53","    assertThat(ws.getDef().responseExampleAsString()).isNotEmpty();","54","    assertThat(ws.getDef().params()).isEmpty();","55","  }","61","    ws.newRequest().execute();","78","    TestResponse response = ws.newRequest().execute();","80","    assertThat(response.getInput()).isEqualTo(\"{\\\"Monitor One\\\":{\\\"foo\\\":\\\"bar\\\"},\\\"Monitor Two\\\":{\\\"one\\\":1,\\\"two\\\":2}}\");"],"delete":["26","import org.sonar.api.server.ws.Request;","27","import org.sonar.api.server.ws.Response;","28","import org.sonar.api.server.ws.internal.SimpleGetRequest;","34","import org.sonar.server.ws.WsTester;","48","  InfoAction underTest = new InfoAction(userSessionRule, processSystemInfoClient, monitor1, monitor2);","54","    underTest.handle(mock(Request.class), mock(Response.class));","71","    WsTester.TestResponse response = new WsTester.TestResponse();","72","    underTest.handle(new SimpleGetRequest(), response);","74","    assertThat(response.outputAsString()).isEqualTo(\"{\\\"Monitor One\\\":{\\\"foo\\\":\\\"bar\\\"},\\\"Monitor Two\\\":{\\\"one\\\":1,\\\"two\\\":2}}\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/ws\/InfoAction.java":[{"add":["52","      .setDescription(\"Detailed information about system configuration.<br\/>\" +","53","        \"Requires 'Administer' permissions.<br\/>\" +","54","        \"Since 5.5, this web service becomes internal in order to more easily update result.\")","56","      .setInternal(true)"],"delete":["52","      .setDescription(\"Detailed information about system configuration.\" +","53","        \"<br\/>\" +","54","        \"Requires user to be authenticated with Administer System permissions.\")"]}]}},"8f6fd0a83ebd1d1ea5fc8772502172a2bd75cce8":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/plugins.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/plugins.ts":[{"add":["27","  description?: string;"],"delete":["27","  description: string;"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/utils.ts":[{"add":["46","      (plugin.description || '').toLowerCase().includes(s) ||"],"delete":["46","      plugin.description.toLowerCase().includes(s) ||"]}]}},"2ec01b5375b038baae335785a2622c439de2d399":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":[{"add":["116","    assertThat(getStringArray(\"\\\"a\\nb\\\",c\")).containsExactly(\"a\\nb\", \"c\");","117","    assertThat(getStringArray(\"\\\"a\\\",\\n  b\\n\")).containsExactly(\"a\", \"b\");","118","    assertThat(getStringArray(\"a\\n,b\\n\")).containsExactly(\"a\", \"b\");","119","    assertThat(getStringArray(\"a\\n,,b\\n\")).containsExactly(\"a\", \"\", \"b\");","120","    assertThat(getStringArray(\"a,\\n\\nb,c\")).containsExactly(\"a\", \"b\", \"c\");","121","    assertThat(getStringArray(\"a,b\\n\\nc,d\")).containsExactly(\"a\", \"b\\nc\", \"d\");"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":[{"add":["26","import java.util.Iterator;","119","      .withIgnoreEmptyLines()","120","      .withIgnoreSurroundingSpaces()","126","      processRecords(result, records);","133","  \/**","134","   * In most cases we expect a single record. <br>Having multiple records means the input value was splitted over multiple lines (this is common in Maven).","135","   * For example:","136","   * <pre>","137","   *   &lt;sonar.exclusions&gt;","138","   *     src\/foo,","139","   *     src\/bar,","140","   *     src\/biz","141","   *   &lt;sonar.exclusions&gt;","142","   * <\/pre>","143","   * In this case records will be merged to form a single list of items. Last item of a record is appended to first item of next record.","144","   * <p>","145","   * This is a very curious case, but we try to preserve line break in the middle of an item:","146","   * <pre>","147","   *   &lt;sonar.exclusions&gt;","148","   *     a","149","   *     b,","150","   *     c","151","   *   &lt;sonar.exclusions&gt;","152","   * <\/pre>","153","   * will produce ['a\\nb', 'c']","154","   *\/","155","  private static void processRecords(List<String> result, List<CSVRecord> records) {","156","    for (CSVRecord csvRecord : records) {","157","      Iterator<String> it = csvRecord.iterator();","158","      if (!result.isEmpty()) {","159","        String next = it.next();","160","        if (!next.isEmpty()) {","161","          int lastItemIdx = result.size() - 1;","162","          String previous = result.get(lastItemIdx);","163","          if (previous.isEmpty()) {","164","            result.set(lastItemIdx, next);","165","          } else {","166","            result.set(lastItemIdx, previous + \"\\n\" + next);","167","          }","168","        }","169","      }","170","      it.forEachRemaining(result::add);","171","    }","172","  }","173",""],"delete":["118","      .withIgnoreSurroundingSpaces(true)","124","      records.get(0).iterator().forEachRemaining(result::add);"]}]}},"56826fb52dbddbe6166f7a1e80065bddc7fd254a":{"changes":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/StickyFacetBuilder.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFacetsTest.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFiltersTest.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/es\/StickyFacetBuilder.java":[{"add":["45","  public static final int FACET_DEFAULT_SIZE = 10;","69","    return buildStickyFacet(fieldName, facetName, FACET_DEFAULT_SIZE, t -> t, selected);"],"delete":["45","  private static final int FACET_DEFAULT_SIZE = 10;","69","    return buildStickyFacet(fieldName, facetName, FACET_DEFAULT_SIZE,  t -> t, selected);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["79","import static org.sonar.api.rules.RuleType.SECURITY_HOTSPOT;","80","import static org.sonar.api.rules.RuleType.VULNERABILITY;","85","import static org.sonar.server.es.StickyFacetBuilder.FACET_DEFAULT_SIZE;","286","        boolQuery()","287","          .must(QueryBuilders.termsQuery(FIELD_RULE_CWE, query.getCwe()))","288","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","293","        boolQuery()","294","          .must(QueryBuilders.termsQuery(FIELD_RULE_OWASP_TOP_10, query.getOwaspTop10()))","295","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","300","        boolQuery()","301","          .must(QueryBuilders.termsQuery(FIELD_RULE_SANS_TOP_25, query.getSansTop25()))","302","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","307","        boolQuery()","308","          .must(QueryBuilders.termsQuery(FIELD_RULE_SONARSOURCE_SECURITY, query.getSonarsourceSecurity()))","309","          .must(QueryBuilders.termsQuery(FIELD_RULE_TYPE, VULNERABILITY.name(), SECURITY_HOTSPOT.name())));","497","  private static Function<TermsAggregationBuilder, AggregationBuilder> filterSecurityCategories() {","498","    return termsAggregation -> AggregationBuilders.filter(","499","      \"filter_by_rule_types_\" + termsAggregation.getName(),","500","      termsQuery(FIELD_RULE_TYPE,","501","        VULNERABILITY.name(),","502","        SECURITY_HOTSPOT.name()))","503","      .subAggregation(termsAggregation);","504","  }","505","","512","          FACET_DEFAULT_SIZE, filterSecurityCategories(),","519","          FACET_DEFAULT_SIZE, filterSecurityCategories(),","526","          FACET_DEFAULT_SIZE, filterSecurityCategories(),","533","          FACET_DEFAULT_SIZE, filterSecurityCategories(),"],"delete":["283","        QueryBuilders.termsQuery(FIELD_RULE_CWE, query.getCwe()));","288","        QueryBuilders.termsQuery(FIELD_RULE_OWASP_TOP_10, query.getOwaspTop10()));","293","        QueryBuilders.termsQuery(FIELD_RULE_SANS_TOP_25, query.getSansTop25()));","298","        QueryBuilders.termsQuery(FIELD_RULE_SONARSOURCE_SECURITY, query.getSonarsourceSecurity()));"]}],"server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFacetsTest.java":[{"add":["27","import org.sonar.api.rules.RuleType;","28","import org.sonar.api.utils.System2;","39","import org.sonar.server.security.SecurityStandards.SQCategory;","174","  public void facets_on_cwe() {","175","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","176","    ComponentDto file = newFileDto(project, null);","177","","178","    indexIssues(","179","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"20\", \"564\", \"89\", \"943\")),","180","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"943\")),","181","      newDoc(\"I3\", file));","182","","183","    assertThatFacetHasOnly(IssueQuery.builder(), \"cwe\",","184","      entry(\"943\", 2L),","185","      entry(\"20\", 1L),","186","      entry(\"564\", 1L),","187","      entry(\"89\", 1L));","188","  }","189","","190","  @Test","191","  public void facets_on_owaspTop10() {","192","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","193","    ComponentDto file = newFileDto(project, null);","194","","195","    indexIssues(","196","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setOwaspTop10(asList(\"a1\", \"a2\")),","197","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setOwaspTop10(singletonList(\"a3\")),","198","      newDoc(\"I3\", file));","199","","200","    assertThatFacetHasOnly(IssueQuery.builder(), \"owaspTop10\",","201","      entry(\"a1\", 1L),","202","      entry(\"a2\", 1L),","203","      entry(\"a3\", 1L));","204","  }","205","","206","  @Test","207","  public void facets_on_sansTop25() {","208","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","209","    ComponentDto file = newFileDto(project, null);","210","","211","    indexIssues(","212","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSansTop25(asList(\"porous-defenses\", \"risky-resource\", \"insecure-interaction\")),","213","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSansTop25(singletonList(\"porous-defenses\")),","214","      newDoc(\"I3\", file));","215","","216","    assertThatFacetHasOnly(IssueQuery.builder(), \"sansTop25\",","217","      entry(\"insecure-interaction\", 1L),","218","      entry(\"porous-defenses\", 2L),","219","      entry(\"risky-resource\", 1L));","220","  }","221","","222","  @Test","223","  public void facets_on_sonarSourceSecurity() {","224","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","225","    ComponentDto file = newFileDto(project, null);","226","","227","    indexIssues(","228","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.BUFFER_OVERFLOW),","229","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.DOS),","230","      newDoc(\"I3\", file));","231","","232","    assertThatFacetHasOnly(IssueQuery.builder(), \"sonarsourceSecurity\",","233","      entry(\"buffer-overflow\", 1L),","234","      entry(\"dos\", 1L));","235","  }","236","","237","  @Test"],"delete":["26","import org.sonar.api.utils.System2;"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["826","  public void only_vulnerabilities_are_returned_by_cwe() {","827","    ComponentDto project = db.components().insertPublicProject();","828","    ComponentDto file = db.components().insertComponent(newFileDto(project));","829","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","830","      .setSecurityStandards(Sets.newHashSet(\"cwe:20\", \"cwe:564\", \"cwe:89\", \"cwe:943\", \"owaspTop10:a1\"))","831","      .setSystemTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","832","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","833","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","834","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","835","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","836","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","837","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","838","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","839","    indexPermissions();","840","    indexIssues();","841","","842","    SearchWsResponse result = ws.newRequest()","843","      .setParam(\"cwe\", \"20\")","844","      .executeProtobuf(SearchWsResponse.class);","845","","846","    assertThat(result.getIssuesList())","847","      .extracting(Issue::getKey)","848","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","849","  }","850","","851","  @Test","852","  public void only_vulnerabilities_are_returned_by_owasp() {","853","    ComponentDto project = db.components().insertPublicProject();","854","    ComponentDto file = db.components().insertComponent(newFileDto(project));","855","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","856","      .setSecurityStandards(Sets.newHashSet(\"cwe:20\", \"cwe:564\", \"cwe:89\", \"cwe:943\", \"owaspTop10:a1\"))","857","      .setSystemTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","858","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"bad-practice\", \"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","859","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","860","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","861","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","862","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","863","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","864","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","865","    indexPermissions();","866","    indexIssues();","867","","868","    SearchWsResponse result = ws.newRequest()","869","      .setParam(\"owaspTop10\", \"a1\")","870","      .executeProtobuf(SearchWsResponse.class);","871","","872","    assertThat(result.getIssuesList())","873","      .extracting(Issue::getKey)","874","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","875","  }","876","","877","  @Test","878","  public void only_vulnerabilities_are_returned_by_sansTop25() {","879","    ComponentDto project = db.components().insertPublicProject();","880","    ComponentDto file = db.components().insertComponent(newFileDto(project));","881","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","882","      .setSecurityStandards(Sets.newHashSet(\"cwe:266\", \"cwe:732\", \"owaspTop10:a5\"))","883","      .setSystemTags(Sets.newHashSet(\"cert\", \"cwe\", \"owasp-a5\", \"sans-top25-porous\"));","884","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"cert\", \"cwe\", \"owasp-a5\", \"sans-top25-porous\"));","885","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","886","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","887","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","888","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","889","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","890","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","891","    indexPermissions();","892","    indexIssues();","893","","894","    SearchWsResponse result = ws.newRequest()","895","      .setParam(\"sansTop25\", \"porous-defenses\")","896","      .executeProtobuf(SearchWsResponse.class);","897","","898","    assertThat(result.getIssuesList())","899","      .extracting(Issue::getKey)","900","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","901","  }","902","","903","  @Test","904","  public void only_vulnerabilities_are_returned_by_sonarsource_security() {","905","    ComponentDto project = db.components().insertPublicProject();","906","    ComponentDto file = db.components().insertComponent(newFileDto(project));","907","    Consumer<RuleDefinitionDto> ruleConsumer = ruleDefinitionDto -> ruleDefinitionDto","908","      .setSecurityStandards(Sets.newHashSet(\"cwe:20\", \"cwe:564\", \"cwe:89\", \"cwe:943\", \"owaspTop10:a1\"))","909","      .setSystemTags(Sets.newHashSet(\"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","910","    Consumer<IssueDto> issueConsumer = issueDto -> issueDto.setTags(Sets.newHashSet(\"cwe\", \"owasp-a1\", \"sans-top25-insecure\", \"sql\"));","911","    RuleDefinitionDto hotspotRule = db.rules().insertHotspotRule(ruleConsumer);","912","    db.issues().insertHotspot(hotspotRule, project, file, issueConsumer);","913","    RuleDefinitionDto issueRule = db.rules().insertIssueRule(ruleConsumer);","914","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","915","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","916","    IssueDto issueDto3 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(CODE_SMELL));","917","    indexPermissions();","918","    indexIssues();","919","","920","    SearchWsResponse result = ws.newRequest()","921","      .setParam(\"sonarsourceSecurity\", \"sql-injection\")","922","      .executeProtobuf(SearchWsResponse.class);","923","","924","    assertThat(result.getIssuesList())","925","      .extracting(Issue::getKey)","926","      .containsExactlyInAnyOrder(issueDto1.getKey(), issueDto2.getKey());","927","  }","928","","929","  @Test","981","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));","982","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer, issueDto -> issueDto.setType(RuleType.VULNERABILITY));"],"delete":["877","    IssueDto issueDto1 = db.issues().insertIssue(issueRule, project, file, issueConsumer);","878","    IssueDto issueDto2 = db.issues().insertIssue(issueRule, project, file, issueConsumer);"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["33","import org.sonar.api.rules.RuleType;","62","import static org.sonar.api.rules.RuleType.SECURITY_HOTSPOT;","459","  public void search_by_security_cwe_return_vulnerabilities_and_hotspots_only() {","460","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"cwe:543\", \"cwe:123\", \"owaspTop10:a1\")), r -> r.setType(VULNERABILITY));","461","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"cwe:543\", \"owaspTop10:a1\")), r -> r.setType(SECURITY_HOTSPOT));","462","    createRule(setSecurityStandards(of(\"owaspTop10:a1\")), r -> r.setType(CODE_SMELL));","471","  public void search_by_security_owaspTop10_return_vulnerabilities_and_hotspots_only() {","472","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:543\")), r -> r.setType(VULNERABILITY));","473","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:543\")), r -> r.setType(SECURITY_HOTSPOT));","474","    createRule(setSecurityStandards(of(\"cwe:543\")), r -> r.setType(CODE_SMELL));","483","  public void search_by_security_sansTop25_return_vulnerabilities_and_hotspots_only() {","484","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")), r -> r.setType(VULNERABILITY));","485","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")), r -> r.setType(SECURITY_HOTSPOT));","486","    createRule(setSecurityStandards(of(\"cwe:306\")), r -> r.setType(CODE_SMELL));","495","  public void search_by_security_sonarsource_return_vulnerabilities_and_hotspots_only() {","496","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")), r -> r.setType(VULNERABILITY));","497","    createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")), r -> r.setType(CODE_SMELL));","498","    RuleDefinitionDto rule3 = createRule(setSecurityStandards(of(\"cwe:601\")), r -> r.setType(SECURITY_HOTSPOT));"],"delete":["457","  public void search_by_security_cwe() {","458","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"cwe:543\", \"cwe:123\", \"owaspTop10:a1\")));","459","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"cwe:543\", \"owaspTop10:a1\")));","460","    createRule(setSecurityStandards(of(\"owaspTop10:a1\")));","469","  public void search_by_security_owaspTop10() {","470","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:543\")));","471","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:543\")));","472","    createRule(setSecurityStandards(of(\"cwe:543\")));","481","  public void search_by_security_sansTop25() {","482","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")));","483","    RuleDefinitionDto rule2 = createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")));","484","    createRule(setSecurityStandards(of(\"cwe:306\")));","493","  public void search_by_security_sonarsource() {","494","    RuleDefinitionDto rule1 = createRule(setSecurityStandards(of(\"owaspTop10:a1\", \"owaspTop10:a10\", \"cwe:89\")));","495","    createRule(setSecurityStandards(of(\"owaspTop10:a10\", \"cwe:829\")));","496","    RuleDefinitionDto rule3 = createRule(setSecurityStandards(of(\"cwe:601\")));"]}],"server\/sonar-webserver-es\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["435","","436","    \/\/ security category","437","    addSecurityCategoryFilter(FIELD_ISSUE_OWASP_TOP_10, OWASP_TOP_10, query.owaspTop10(), filters);","438","    addSecurityCategoryFilter(FIELD_ISSUE_SANS_TOP_25, SANS_TOP_25, query.sansTop25(), filters);","439","    addSecurityCategoryFilter(FIELD_ISSUE_CWE, CWE, query.cwe(), filters);","440","    addSecurityCategoryFilter(FIELD_ISSUE_SQ_SECURITY_CATEGORY, SONARSOURCE_SECURITY, query.sonarsourceSecurity(), filters);","441","","450","  private static void addSecurityCategoryFilter(String fieldName, Facet facet, Collection<String> values, AllFilters allFilters) {","451","    QueryBuilder securityCategoryFilter = createTermsFilter(fieldName, values);","452","    if (securityCategoryFilter != null) {","453","      allFilters.addFilter(","454","        fieldName,","455","        facet.getFilterScope(),","456","        boolQuery()","457","          .must(securityCategoryFilter)","458","          .must(termQuery(FIELD_ISSUE_TYPE, VULNERABILITY.name())));","459","    }","460","  }","461","","670","","671","    addSecurityCategoryFacetIfNeeded(PARAM_OWASP_TOP_10, OWASP_TOP_10, options, aggregationHelper, esRequest, query.owaspTop10().toArray());","672","    addSecurityCategoryFacetIfNeeded(PARAM_SANS_TOP_25, SANS_TOP_25, options, aggregationHelper, esRequest, query.sansTop25().toArray());","673","    addSecurityCategoryFacetIfNeeded(PARAM_CWE, CWE, options, aggregationHelper, esRequest, query.cwe().toArray());","674","    addSecurityCategoryFacetIfNeeded(PARAM_SONARSOURCE_SECURITY, SONARSOURCE_SECURITY, options, aggregationHelper, esRequest, query.sonarsourceSecurity().toArray());","675","","698","  private static void addSecurityCategoryFacetIfNeeded(String param, Facet facet, SearchOptions options, TopAggregationHelper aggregationHelper, SearchRequestBuilder esRequest,","699","    Object[] selectedValues) {","700","    if (!options.getFacets().contains(param)) {","701","      return;","702","    }","703","","704","    AggregationBuilder aggregation = aggregationHelper.buildTermTopAggregation(","705","      facet.getName(), facet.getTopAggregationDef(), facet.getNumberOfTerms(),","706","      filter -> filter.must(termQuery(FIELD_ISSUE_TYPE, VULNERABILITY.name())),","707","      t -> aggregationHelper.getSubAggregationHelper().buildSelectedItemsAggregation(facet.getName(), facet.getTopAggregationDef(), selectedValues)","708","        .ifPresent(t::subAggregation));","709","    esRequest.addAggregation(aggregation);","710","  }","711",""],"delete":["435","    filters.addFilter(","436","      FIELD_ISSUE_OWASP_TOP_10, OWASP_TOP_10.getFilterScope(),","437","      createTermsFilter(FIELD_ISSUE_OWASP_TOP_10, query.owaspTop10()));","438","    filters.addFilter(","439","      FIELD_ISSUE_SANS_TOP_25, SANS_TOP_25.getFilterScope(),","440","      createTermsFilter(FIELD_ISSUE_SANS_TOP_25, query.sansTop25()));","441","    filters.addFilter(FIELD_ISSUE_CWE, CWE.getFilterScope(), createTermsFilter(FIELD_ISSUE_CWE, query.cwe()));","443","    filters.addFilter(","444","      FIELD_ISSUE_SQ_SECURITY_CATEGORY, SONARSOURCE_SECURITY.getFilterScope(),","445","      createTermsFilter(FIELD_ISSUE_SQ_SECURITY_CATEGORY, query.sonarsourceSecurity()));","661","    addFacetIfNeeded(options, aggregationHelper, esRequest, OWASP_TOP_10, query.owaspTop10().toArray());","662","    addFacetIfNeeded(options, aggregationHelper, esRequest, SANS_TOP_25, query.sansTop25().toArray());","663","    addFacetIfNeeded(options, aggregationHelper, esRequest, CWE, query.cwe().toArray());","664","    addFacetIfNeeded(options, aggregationHelper, esRequest, SONARSOURCE_SECURITY, query.sonarsourceSecurity().toArray());"]}],"server\/sonar-webserver-es\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexFiltersTest.java":[{"add":["34","import org.sonar.api.rules.RuleType;","45","import org.sonar.server.security.SecurityStandards.SQCategory;","744","  @Test","745","  public void filter_by_cwe() {","746","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","747","    ComponentDto file = newFileDto(project, null);","748","","749","    indexIssues(","750","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"20\", \"564\", \"89\", \"943\")),","751","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setCwe(asList(\"943\")),","752","      newDoc(\"I3\", file));","753","","754","    assertThatSearchReturnsOnly(IssueQuery.builder().cwe(asList(\"20\")), \"I1\");","755","  }","756","","757","  @Test","758","  public void filter_by_owaspTop10() {","759","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","760","    ComponentDto file = newFileDto(project, null);","761","","762","    indexIssues(","763","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setOwaspTop10(asList(\"a1\", \"a2\")),","764","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setCwe(singletonList(\"a3\")),","765","      newDoc(\"I3\", file));","766","","767","    assertThatSearchReturnsOnly(IssueQuery.builder().owaspTop10(asList(\"a1\")), \"I1\");","768","  }","769","","770","  @Test","771","  public void filter_by_sansTop25() {","772","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","773","    ComponentDto file = newFileDto(project, null);","774","","775","    indexIssues(","776","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSansTop25(asList(\"porous-defenses\", \"risky-resource\", \"insecure-interaction\")),","777","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSansTop25(singletonList(\"porous-defenses\")),","778","      newDoc(\"I3\", file));","779","","780","    assertThatSearchReturnsOnly(IssueQuery.builder().sansTop25(asList(\"risky-resource\")), \"I1\");","781","  }","782","","783","  @Test","784","  public void filter_by_sonarSecurity() {","785","    ComponentDto project = newPrivateProjectDto(newOrganizationDto());","786","    ComponentDto file = newFileDto(project, null);","787","","788","    indexIssues(","789","      newDoc(\"I1\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.BUFFER_OVERFLOW),","790","      newDoc(\"I2\", file).setType(RuleType.VULNERABILITY).setSonarSourceSecurityCategory(SQCategory.DOS),","791","      newDoc(\"I3\", file));","792","","793","    assertThatSearchReturnsOnly(IssueQuery.builder().sonarsourceSecurity(singletonList(\"buffer-overflow\")), \"I1\");","794","  }","795",""],"delete":[]}]}},"9391fdfd8207d9fb3adba94024528dd3890ceee3":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/source\/FileSourceDto.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/source\/FileSourceDtoTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStepTest.java":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/source\/FileSourceDto.java":[{"add":["34","import static java.lang.String.format;","35","","90","  public DbFileSources.Data decodeSourceData(byte[] binaryData) {","91","    try {","92","      return decodeSourceDataImpl(new ByteArrayInputStream(binaryData));","93","    } catch (IOException e) {","94","      throw new IllegalStateException(","95","        format(\"Fail to decompress and deserialize source data [id=%s,fileUuid=%s,projectUuid=%s]\", id, fileUuid, projectUuid),","96","        e);","97","    }","106","      return decodeSourceDataImpl(binaryInput);","109","    }","110","  }","111","","112","  private static DbFileSources.Data decodeSourceDataImpl(InputStream binaryInput) throws IOException {","113","    try (LZ4BlockInputStream lz4Input = new LZ4BlockInputStream(binaryInput)) {","114","      return DbFileSources.Data.parseFrom(lz4Input);"],"delete":["88","  public static DbFileSources.Data decodeSourceData(byte[] binaryData) {","89","    \/\/ stream is always closed","90","    return decodeSourceData(new ByteArrayInputStream(binaryData));","98","    LZ4BlockInputStream lz4Input = null;","100","      lz4Input = new LZ4BlockInputStream(binaryInput);","101","      return DbFileSources.Data.parseFrom(lz4Input);","104","    } finally {","105","      IOUtils.closeQuietly(lz4Input);"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/source\/FileSourceDtoTest.java":[{"add":["23","import org.junit.Rule;","25","import org.junit.rules.ExpectedException;","31","  @Rule","32","  public ExpectedException expectedException = ExpectedException.none();","49","","50","  @Test","51","  public void getSourceData_throws_ISE_with_id_fileUuid_and_projectUuid_in_message_when_data_cant_be_read() {","52","    long id = 12L;","53","    String fileUuid = \"file uuid\";","54","    String projectUuid = \"project uuid\";","55","    FileSourceDto underTest = new FileSourceDto()","56","        .setBinaryData(new byte[]{1, 2, 3, 4, 5})","57","        .setId(id)","58","        .setFileUuid(fileUuid)","59","        .setProjectUuid(projectUuid);","60","","61","    expectedException.expect(IllegalStateException.class);","62","    expectedException.expectMessage(\"Fail to decompress and deserialize source data [id=\" + id + \",fileUuid=\" + fileUuid + \",projectUuid=\" + projectUuid + \"]\");","63","","64","    underTest.getSourceData();","65","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStepTest.java":[{"add":["113","    DbFileSources.Data data = fileSourceDto.getSourceData();","151","    DbFileSources.Data data = fileSourceDto.getSourceData();","182","    DbFileSources.Data data = fileSourceDto.getSourceData();","207","    DbFileSources.Data data = fileSourceDto.getSourceData();","232","    DbFileSources.Data data = fileSourceDto.getSourceData();","253","    DbFileSources.Data data = fileSourceDto.getSourceData();"],"delete":["113","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","151","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","182","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","207","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","232","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","253","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());"]}]}},"e481af9138fa10ce01b0dfe9f7b0bd961f8408d7":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/ScannerMediumTester.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/branch\/BranchMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/MetadataPublisherTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositoriesProvider.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisher.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProvider.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/DefaultBranchConfiguration.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProviderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfiguration.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfigurationProviderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/MetadataPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisherTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/ScannerMediumTester.java":[{"add":["397","    private String longLivingSonarReferenceBranch = null;","412","    public String targetScmBranch() {","418","    public String longLivingSonarReferenceBranch() {","419","      return longLivingSonarReferenceBranch;","443","  public ScannerMediumTester setLongLivingSonarReferenceBranch(String longLivingSonarReferenceBranch) {","444","    this.branchConfiguration.longLivingSonarReferenceBranch = longLivingSonarReferenceBranch;","445","    return this;","446","  }","447",""],"delete":["54","import org.sonar.core.config.ScannerProperties;","58","import org.sonar.scanner.report.ReportPublisher;","399","    private String branchBase = null;","414","    public String branchTarget() {","420","    public String branchBase() {","421","      return branchBase;"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/branch\/BranchMediumTest.java":[{"add":["97","      .setLongLivingSonarReferenceBranch(branchTarget)"],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/MetadataPublisherTest.java":[{"add":["187","    when(branches.longLivingSonarReferenceBranch()).thenReturn(branchTarget);"],"delete":["38","import org.sonar.api.config.internal.MapSettings;","39","import org.sonar.core.config.ScannerProperties;","189","    when(branches.branchTarget()).thenReturn(branchTarget);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositoriesProvider.java":[{"add":["38","      project = loader.load(projectKey.get(), isIssuesMode, branchConfig.longLivingSonarReferenceBranch());"],"delete":["38","      project = loader.load(projectKey.get(), isIssuesMode, branchConfig.branchBase());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisher.java":[{"add":["58","    String targetScmBranch = branchConfiguration.targetScmBranch();","59","    if (scmConfiguration.isDisabled() || !branchConfiguration.isShortOrPullRequest() || targetScmBranch == null) {","69","    int count = writeChangedLines(provider, writer, targetScmBranch);","74","  private int writeChangedLines(ScmProvider provider, ScannerReportWriter writer, String targetScmBranch) {","80","    Map<Path, Set<Integer>> pathSetMap = provider.branchChangedLines(targetScmBranch, rootBaseDir, changedFiles.keySet());"],"delete":["58","    if (scmConfiguration.isDisabled() || !branchConfiguration.isShortOrPullRequest() || branchConfiguration.branchTarget() == null) {","68","    int count = writeChangedLines(provider, writer);","73","  private int writeChangedLines(ScmProvider provider, ScannerReportWriter writer) {","74","    String targetBranchName = branchConfiguration.branchTarget();","75","    if (targetBranchName == null) {","76","      return 0;","77","    }","83","    Map<Path, Set<Integer>> pathSetMap = provider.branchChangedLines(targetBranchName, rootBaseDir, changedFiles.keySet());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":[{"add":["281","      LOG.info(\"Pull request {} for merge into {} from {}\", branchConfig.pullRequestKey(), pullRequestBaseToDisplayName(branchConfig.targetScmBranch()), branchConfig.branchName());"],"delete":["281","      LOG.info(\"Pull request {} for merge into {} from {}\", branchConfig.pullRequestKey(), pullRequestBaseToDisplayName(branchConfig.branchBase()), branchConfig.branchName());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProvider.java":[{"add":["65","    if (branchConfiguration.isShortOrPullRequest() && branchConfiguration.targetScmBranch() != null) {","69","        Collection<Path> changedFiles = scmProvider.branchChangedFiles(branchConfiguration.targetScmBranch(), rootBaseDir);"],"delete":["65","    if (branchConfiguration.isShortOrPullRequest() && branchConfiguration.branchTarget() != null) {","69","        Collection<Path> changedFiles = scmProvider.branchChangedFiles(branchConfiguration.branchTarget(), rootBaseDir);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/DefaultBranchConfiguration.java":[{"add":["39","  public String targetScmBranch() {","45","  public String longLivingSonarReferenceBranch() {"],"delete":["39","  public String branchTarget() {","45","  public String branchBase() {"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProviderTest.java":[{"add":["69","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","79","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","91","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","121","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","131","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");"],"delete":["69","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","79","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","91","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","121","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","131","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfiguration.java":[{"add":["43","   * For long\/short living branches, this is the value of sonar.branch.name, and fallback on the default branch name configured in SQ","44","   * For PR: the name of the branch containing PR changes (sonar.pullrequest.branch)","45","   * Only @null if the branch feature is not available.","51","   * The long living server branch from which we should load project settings\/quality profiles\/compare changed files\/...","52","   * For long living branches, this is the sonar.branch.target (default to default branch) in case of first analysis,","53","   * otherwise it's the branch itself.","54","   * For short living branches, we look at sonar.branch.target (default to default branch). If it exists but is a short living branch or PR, we will","55","   * transitively use its own target.","56","   * For PR, we look at sonar.pullrequest.base (default to default branch). If it exists but is a short living branch or PR, we will","57","   * transitively use its own target.","58","   * Only @null if the branch feature is not available.","61","  String longLivingSonarReferenceBranch();","64","   * Raw value of sonar.branch.target or sonar.pullrequest.base (fallback to the default branch), will be used by the SCM to compute changed files and changed lines.","65","   * @null for long living branches and if the branch feature is not available","68","  String targetScmBranch();","76",""],"delete":["43","   * The name of the branch.","49","   * The name of the target branch to merge into.","52","  String branchTarget();","55","   * The name of the base branch to determine project repository and changed files.","56","   *","57","   * Note: this is important for the scanner during the analysis of long living branches.","58","   * For short living branches, branchBase is always the same as branchTarget.","59","   * For long living branches, branchBase is the target in case of first analysis,","60","   * otherwise it's the branch itself.","63","  String branchBase();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfigurationProviderTest.java":[{"add":["100","    assertThat(result.targetScmBranch()).isNull();"],"delete":["100","    assertThat(result.branchTarget()).isNull();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/MetadataPublisher.java":[{"add":["136","    String referenceBranch = branchConfiguration.longLivingSonarReferenceBranch();","137","    if (referenceBranch != null) {","138","      builder.setMergeBranchName(referenceBranch);"],"delete":["136","    String branchTarget = branchConfiguration.branchTarget();","137","    if (branchTarget != null) {","138","      builder.setMergeBranchName(branchTarget);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisherTest.java":[{"add":["70","    when(branchConfiguration.targetScmBranch()).thenReturn(TARGET_BRANCH);","94","    when(branchConfiguration.targetScmBranch()).thenReturn(null);"],"delete":["70","    when(branchConfiguration.branchTarget()).thenReturn(TARGET_BRANCH);","94","    when(branchConfiguration.branchTarget()).thenReturn(null);"]}]}},"a27abe36c63f21ed0e8c4b5adf05c36187da7f4a":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/SnapshotDtoTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventActionTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidatorTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotDto.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventAction.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidator.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/SnapshotDtoTest.java":[{"add":["21","import org.junit.Rule;","23","import org.junit.rules.ExpectedException;","25","import static org.apache.commons.lang.StringUtils.repeat;","31","  @Rule","32","  public ExpectedException expectedException = ExpectedException.none();","33","","56","  @Test","57","  public void fail_if_version_name_is_longer_then_100_characters() throws Exception {","58","    SnapshotDto snapshotDto = new SnapshotDto();","59","    snapshotDto.setVersion(null);","60","    snapshotDto.setVersion(\"1.0\");","61","    snapshotDto.setVersion(repeat(\"a\", 100));","62","","63","    expectedException.expect(IllegalArgumentException.class);","64","    expectedException.expectMessage(\"Event name length (101) is longer than the maximum authorized (100). \" +","65","      \"'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' was provided.\");","66","","67","    snapshotDto.setVersion(repeat(\"a\", 101));","68","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventActionTest.java":[{"add":["43","import static org.apache.commons.lang.StringUtils.repeat;","226","  @Test","227","  public void limit_version_name_length_to_100_for_analysis_events() {","228","    SnapshotDto analysis = createAnalysisAndLogInAsProjectAdministrator(\"5.6\");","229","    db.events().insertEvent(newEvent(analysis).setUuid(\"E1\").setCategory(OTHER.getLabel()).setName(\"E1 name\"));","230","    db.events().insertEvent(newEvent(analysis).setUuid(\"E2\").setCategory(VERSION.getLabel()).setName(\"E2 name\"));","231","","232","    call(\"E1\", repeat(\"a\", 100));","233","    call(\"E1\", repeat(\"a\", 101));","234","    call(\"E2\", repeat(\"a\", 100));","235","","236","    expectedException.expect(IllegalArgumentException.class);","237","    expectedException.expectMessage(\"Version length (101) is longer than the maximum authorized (100). 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' was provided\");","238","","239","    call(\"E2\", repeat(\"a\", 101));","240","  }","241",""],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidatorTest.java":[{"add":["21","import java.util.Arrays;","22","import java.util.function.Consumer;","36","import static org.apache.commons.lang.StringUtils.repeat;","192","  @Test","193","  public void not_fail_with_valid_version() {","194","    validator.validate(createProjectReactor(\"foo\", def -> def.setVersion(\"1.0\")));","195","    validator.validate(createProjectReactor(\"foo\", def -> def.setVersion(\"2017-10-16\")));","196","    validator.validate(createProjectReactor(\"foo\", def -> def.setVersion(repeat(\"a\", 100))));","197","  }","198","","199","  @Test","200","  public void fail_with_too_long_version() {","201","    ProjectReactor reactor = createProjectReactor(\"foo\", def -> def.setVersion(repeat(\"a\", 101)));","202","","203","    thrown.expect(MessageException.class);","204","    thrown.expectMessage(\"\\\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\" is not a valid version name for module \\\"foo\\\". \" +","205","      \"The maximum length for version numbers is 100 characters.\");","206","","207","    validator.validate(reactor);","211","    return createProjectReactor(projectKey, def -> def","212","      .setProperty(CoreProperties.PROJECT_BRANCH_PROPERTY, branch));","215","  private ProjectReactor createProjectReactor(String projectKey, Consumer<ProjectDefinition>... consumers) {","216","    ProjectDefinition def = ProjectDefinition.create()","217","      .setProperty(CoreProperties.PROJECT_KEY_PROPERTY, projectKey);","218","    Arrays.stream(consumers).forEach(c -> c.accept(def));","219","    return new ProjectReactor(def);","220","  }"],"delete":["189","  private ProjectReactor createProjectReactor(String projectKey) {","190","    ProjectDefinition def = ProjectDefinition.create().setProperty(CoreProperties.PROJECT_KEY_PROPERTY, projectKey);","191","    ProjectReactor reactor = new ProjectReactor(def);","192","    return reactor;","196","    ProjectDefinition def = ProjectDefinition.create()","197","      .setProperty(CoreProperties.PROJECT_KEY_PROPERTY, projectKey)","198","      .setProperty(CoreProperties.PROJECT_BRANCH_PROPERTY, branch);","199","    return new ProjectReactor(def);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/SnapshotDto.java":[{"add":["24","import static com.google.common.base.Preconditions.checkArgument;","25","","33","  public static final int MAX_VERSION_LENGTH = 100;","121","    if (version != null) {","122","      checkArgument(version.length() <= MAX_VERSION_LENGTH,","123","        \"Event name length (%s) is longer than the maximum authorized (%s). '%s' was provided.\", version.length(), MAX_VERSION_LENGTH, version);","124","    }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectanalysis\/ws\/UpdateEventAction.java":[{"add":["54","  private static final int MAX_NAME_LENGTH = 100;","103","        .peek(checkVersionNameLength(request))","150","  private static Consumer<EventDto> checkVersionNameLength(UpdateEventRequest request) {","151","    String name = request.getName();","152","    return candidateEvent -> {","153","      if (name != null && VERSION.getLabel().equals(candidateEvent.getCategory())) {","154","        checkArgument(name.length() <= MAX_NAME_LENGTH,","155","          \"Version length (%s) is longer than the maximum authorized (%s). '%s' was provided.\", name.length(), MAX_NAME_LENGTH, name);","156","      }","157","    };","158","  }","159",""],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectReactorValidator.java":[{"add":["106","    String originalVersion = moduleDef.getOriginalVersion();","107","    if (originalVersion != null && originalVersion.length() > 100) {","108","      validationMessages.add(String.format(\"\\\"%s\\\" is not a valid version name for module \\\"%s\\\". \" +","109","        \"The maximum length for version numbers is 100 characters.\", originalVersion, moduleDef.getKey()));","110","    }"],"delete":[]}]}},"0b2bd218c88655f24bc541086dfee18d3364a9e1":{"changes":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteActionTest.java":"MODIFY","server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":["49","import static com.google.common.base.Preconditions.checkArgument;","341","","342","  \/**","343","   * @throws IllegalArgumentException if the collection is not null and has strictly more","344","   * than {@link #PARTITION_SIZE_FOR_ORACLE} values.","345","   *\/","346","  public static void checkThatNotTooManyConditions(@Nullable Collection<?> values, String message) {","347","    if (values != null) {","348","      checkArgument(values.size() <= PARTITION_SIZE_FOR_ORACLE, message);","349","    }","350","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":[{"add":["47","import static org.sonar.db.DatabaseUtils.checkThatNotTooManyConditions;","59","    checkThatNotTooManyComponents(query);","67","    checkThatNotTooManyComponents(query);","107","  \/**","108","   * Same as {@link #selectByQuery(DbSession, String, ComponentQuery, int, int)} except","109","   * that the filter on organization is disabled.","110","   *\/","115","  \/**","116","   * @throws IllegalArgumentException if parameter query#getComponentIds() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","117","   * @throws IllegalArgumentException if parameter query#getComponentKeys() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","118","   * @throws IllegalArgumentException if parameter query#getComponentUuids() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","119","   *\/","125","  \/**","126","   * Same as {@link #countByQuery(DbSession, String, ComponentQuery)} except","127","   * that the filter on organization is disabled.","128","   *\/","133","  \/**","134","   * @throws IllegalArgumentException if parameter query#getComponentIds() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","135","   * @throws IllegalArgumentException if parameter query#getComponentKeys() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","136","   * @throws IllegalArgumentException if parameter query#getComponentUuids() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","137","   *\/","368","","369","  private static void checkThatNotTooManyComponents(ComponentQuery query) {","370","    checkThatNotTooManyConditions(query.getComponentIds(), \"Too many component ids in query\");","371","    checkThatNotTooManyConditions(query.getComponentKeys(), \"Too many component keys in query\");","372","    checkThatNotTooManyConditions(query.getComponentUuids(), \"Too many component UUIDs in query\");","373","  }","374",""],"delete":["65",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchAction.java":[{"add":["32","import org.sonar.db.DatabaseUtils;","45","import static java.lang.String.format;","93","    action.setChangelog(","94","      new Change(\"6.4\", \"The 'uuid' field is deprecated in the response\"),","95","      new Change(\"6.7.2\", format(\"Parameters %s and %s accept maximum %d values\", PARAM_PROJECTS, PARAM_PROJECT_IDS, DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)));","135","      \/\/ Limitation of ComponentDao#selectByQuery(), max 1000 values are accepted.","136","      \/\/ Restricting size of HTTP parameter allows to not fail with SQL error","137","      .setMaxValuesAllowed(DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)","146","      \/\/ Limitation of ComponentDao#selectByQuery(), max 1000 values are accepted.","147","      \/\/ Restricting size of HTTP parameter allows to not fail with SQL error","148","      .setMaxValuesAllowed(DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)"],"delete":["91","    action.setChangelog(new Change(\"6.4\", \"The 'uuid' field is deprecated in the response\"));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsAction.java":[{"add":["36","import org.sonar.db.DatabaseUtils;","72","      .setDescription(\"Return list of projects for which the current user has 'Administer' permission. Maximum 1'000 projects are returned.\")","196","            .setComponentIds(ImmutableSet.copyOf(componentIds.subList(0, Math.min(componentIds.size(), DatabaseUtils.PARTITION_SIZE_FOR_ORACLE))))"],"delete":["71","      .setDescription(\"Return list of projects for which the current user has 'Administer' permission.\")","195","            .setComponentIds(ImmutableSet.copyOf(componentIds))"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchActionTest.java":[{"add":["24","import java.util.Collections;","305","  public void request_throws_IAE_if_more_than_1000_projects() {","306","    expectedException.expect(IllegalArgumentException.class);","307","    expectedException.expectMessage(\"'projects' can contains only 1000 values, got 1001\");","308","","309","    call(SearchRequest.builder()","310","      .setProjects(Collections.nCopies(1_001, \"foo\"))","311","      .build());","312","  }","313","","314","  @Test","315","  public void request_throws_IAE_if_more_than_1000_project_ids() {","316","    expectedException.expect(IllegalArgumentException.class);","317","    expectedException.expectMessage(\"'projectIds' can contains only 1000 values, got 1001\");","318","","319","    call(SearchRequest.builder()","320","      .setProjectIds(Collections.nCopies(1_001, \"foo\"))","321","      .build());","322","  }","323","","324","  @Test"],"delete":["22","import java.io.IOException;","23","import java.net.URISyntaxException;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteAction.java":[{"add":["21","import java.util.List;","22","import javax.annotation.CheckForNull;","23","import javax.annotation.Nullable;","24","import org.sonar.api.server.ws.Change;","38","import static java.lang.Math.min;","80","      .setHandler(this)","81","      .setChangelog(new Change(\"6.7.2\", \"Only the 1'000 first items in project filters are taken into account\"));","93","      .setDescription(\"Comma-separated list of project ids. Only the 1'000 first ids are used. Others are silently ignored.\")","155","      .setProjects(restrictTo1000Values(request.paramAsStrings(PARAM_PROJECTS)))","156","      .setProjectIds(restrictTo1000Values(request.paramAsStrings(PARAM_PROJECT_IDS)))","159","","160","  @CheckForNull","161","  private static List<String> restrictTo1000Values(@Nullable List<String> values) {","162","    if (values == null) {","163","      return null;","164","    }","165","    return values.subList(0, min(values.size(), 1_000));","166","  }"],"delete":["75","      .setHandler(this);","87","      .setDescription(\"Comma-separated list of project ids\")","149","      .setProjects(request.paramAsStrings(PARAM_PROJECTS))","150","      .setProjectIds(request.paramAsStrings(PARAM_PROJECT_IDS))"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":[{"add":["21","import java.util.Collections;","23","import org.apache.commons.lang.StringUtils;","106","  public void bulk_apply_template_by_template_uuid() {","139","  public void request_throws_IAE_if_more_than_1000_projects() {","140","    expectedException.expect(IllegalArgumentException.class);","141","    expectedException.expectMessage(\"'projects' can contains only 1000 values, got 1001\");","142","","143","    newRequest()","144","      .setParam(PARAM_ORGANIZATION, organization.getKey())","145","      .setParam(PARAM_TEMPLATE_NAME, template1.getName())","146","      .setParam(PARAM_PROJECTS, StringUtils.join(Collections.nCopies(1_001, \"foo\"), \",\"))","147","      .execute();","148","  }","149","","150","  @Test","151","  public void bulk_apply_template_by_template_name() {","166","  public void apply_template_by_qualifiers() {","185","  public void apply_template_by_query_on_name_and_key_public_project() {","205","  public void apply_template_by_query_on_name_and_key() {","226","  public void apply_template_by_project_keys() {","243","  public void apply_template_by_provisioned_only() {","261","  public void apply_template_by_analyzed_before() {","281","  public void apply_template_by_visibility() {"],"delete":["104","  public void bulk_apply_template_by_template_uuid() throws Exception {","137","  public void bulk_apply_template_by_template_name() throws Exception {","152","  public void apply_template_by_qualifiers() throws Exception {","171","  public void apply_template_by_query_on_name_and_key_public_project() throws Exception {","191","  public void apply_template_by_query_on_name_and_key() throws Exception {","212","  public void apply_template_by_project_keys() throws Exception {","229","  public void apply_template_by_provisioned_only() throws Exception {","247","  public void apply_template_by_analyzed_before() throws Exception {","267","  public void apply_template_by_visibility() throws Exception {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsActionTest.java":[{"add":["21","import java.util.stream.IntStream;","117","    SearchMyProjectsWsResponse result = callWs();","124","  public void return_only_first_1000_projects() {","125","    OrganizationDto organization = db.organizations().insert();","126","    IntStream.range(0, 1_010).forEach(i -> {","127","      ComponentDto project = db.components().insertComponent(newPrivateProjectDto(organization));","128","      db.users().insertProjectPermissionOnUser(user, UserRole.ADMIN, project);","129","    });","130","","131","    SearchMyProjectsWsResponse result = callWs();","132","","133","    assertThat(result.getPaging().getTotal()).isEqualTo(1_000);","134","  }","135","","136","  @Test","147","    SearchMyProjectsWsResponse result = callWs();","180","    SearchMyProjectsWsResponse result = callWs();","195","    SearchMyProjectsWsResponse result = callWs();","207","    SearchMyProjectsWsResponse result = callWs();","226","    SearchMyProjectsWsResponse result = callWs();","248","    SearchMyProjectsWsResponse result = callWs();","265","    callWs();","287","  private SearchMyProjectsWsResponse callWs() {"],"delete":["116","    SearchMyProjectsWsResponse result = call_ws();","133","    SearchMyProjectsWsResponse result = call_ws();","166","    SearchMyProjectsWsResponse result = call_ws();","181","    SearchMyProjectsWsResponse result = call_ws();","193","    SearchMyProjectsWsResponse result = call_ws();","212","    SearchMyProjectsWsResponse result = call_ws();","234","    SearchMyProjectsWsResponse result = call_ws();","251","    call_ws();","273","  private SearchMyProjectsWsResponse call_ws() {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateAction.java":[{"add":["27","import org.sonar.api.server.ws.Change;","32","import org.sonar.db.DatabaseUtils;","49","import static java.lang.String.format;","96","      .setChangelog(new Change(\"6.7.2\", format(\"Parameter %s accepts maximum %d values\", PARAM_PROJECTS, DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)))","116","      \/\/ Limitation of ComponentDao#selectByQuery(), max 1000 values are accepted.","117","      \/\/ Restricting size of HTTP parameter allows to not fail with SQL error","118","      .setMaxValuesAllowed(DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteActionTest.java":[{"add":["23","import java.util.List;","25","import org.apache.commons.lang.StringUtils;","34","import org.sonar.core.util.stream.MoreCollectors;","213","  \/**","214","   * SONAR-10356","215","   *\/","216","  @Test","217","  public void delete_only_the_1000_first_projects() {","218","    userSession.logIn().addPermission(ADMINISTER, org1);","219","    List<String> keys = IntStream.range(0, 1_010).mapToObj(i -> \"key\" + i).collect(MoreCollectors.toArrayList());","220","    keys.forEach(key -> db.components().insertPrivateProject(org1, p -> p.setDbKey(key)));","221","","222","    ws.newRequest()","223","      .setParam(\"organization\", org1.getKey())","224","      .setParam(\"projects\", StringUtils.join(keys, \",\"))","225","      .execute();","226","","227","    verify(componentCleanerService, times(1_000)).delete(any(DbSession.class), any(ComponentDto.class));","228","  }","229",""],"delete":["21","import java.io.IOException;"]}],"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":[{"add":["334","","335","  @Test","336","  public void checkThatNotTooManyConditions_does_not_fail_if_less_than_1000_conditions() {","337","    DatabaseUtils.checkThatNotTooManyConditions(null, \"unused\");","338","    DatabaseUtils.checkThatNotTooManyConditions(Collections.emptySet(), \"unused\");","339","    DatabaseUtils.checkThatNotTooManyConditions(Collections.nCopies(10, \"foo\"), \"unused\");","340","    DatabaseUtils.checkThatNotTooManyConditions(Collections.nCopies(1_000, \"foo\"), \"unused\");","341","  }","342","","343","  @Test","344","  public void checkThatNotTooManyConditions_throws_IAE_if_strictly_more_than_1000_conditions() {","345","    expectedException.expect(IllegalArgumentException.class);","346","    expectedException.expectMessage(\"the message\");","347","","348","    DatabaseUtils.checkThatNotTooManyConditions(Collections.nCopies(1_001, \"foo\"), \"the message\");","349","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["29","import java.util.stream.IntStream;","30","import java.util.stream.LongStream;","724","  public void selectByQuery_provisioned() {","782","  public void countByQuery_with_organization_throws_NPE_of_organizationUuid_is_null() {","783","    expectedException.expect(NullPointerException.class);","784","    expectedException.expectMessage(\"organizationUuid can't be null\");","785","","786","    underTest.countByQuery(dbSession, null, ALL_PROJECTS_COMPONENT_QUERY);","787","  }","788","","789","  @Test","790","  public void countByQuery_throws_IAE_if_too_many_component_ids() {","791","    Set<Long> ids = LongStream.range(0L, 1_010L).boxed().collect(Collectors.toSet());","792","    ComponentQuery.Builder query = ComponentQuery.builder()","793","      .setQualifiers(Qualifiers.PROJECT)","794","      .setComponentIds(ids);","795","","796","    assertThatCountByQueryThrowsIAE(query, \"Too many component ids in query\");","797","  }","798","","799","  @Test","800","  public void countByQuery_throws_IAE_if_too_many_component_keys() {","801","    Set<String> keys = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","802","    ComponentQuery.Builder query = ComponentQuery.builder()","803","      .setQualifiers(Qualifiers.PROJECT)","804","      .setComponentKeys(keys);","805","","806","    assertThatCountByQueryThrowsIAE(query, \"Too many component keys in query\");","807","  }","808","","809","  @Test","810","  public void countByQuery_throws_IAE_if_too_many_component_uuids() {","811","    Set<String> uuids = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","812","    ComponentQuery.Builder query = ComponentQuery.builder()","813","      .setQualifiers(Qualifiers.PROJECT)","814","      .setComponentUuids(uuids);","815","","816","    assertThatCountByQueryThrowsIAE(query, \"Too many component UUIDs in query\");","817","  }","818","","819","  private void assertThatCountByQueryThrowsIAE(ComponentQuery.Builder query, String expectedMessage) {","820","    expectedException.expect(IllegalArgumentException.class);","821","    expectedException.expectMessage(expectedMessage);","822","","823","    underTest.countByQuery(dbSession, query.build());","824","  }","825","","826","  @Test","1056","  public void selectByQuery_throws_IAE_if_too_many_component_ids() {","1057","    Set<Long> ids = LongStream.range(0L, 1_010L).boxed().collect(Collectors.toSet());","1058","    ComponentQuery.Builder query = ComponentQuery.builder()","1059","      .setQualifiers(Qualifiers.PROJECT)","1060","      .setComponentIds(ids);","1062","    assertThatSelectByQueryThrowsIAE(query, \"Too many component ids in query\");","1063","  }","1064","","1065","  @Test","1066","  public void selectByQuery_throws_IAE_if_too_many_component_keys() {","1067","    Set<String> keys = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","1068","    ComponentQuery.Builder query = ComponentQuery.builder()","1069","      .setQualifiers(Qualifiers.PROJECT)","1070","      .setComponentKeys(keys);","1071","","1072","    assertThatSelectByQueryThrowsIAE(query, \"Too many component keys in query\");","1073","  }","1074","","1075","  @Test","1076","  public void selectByQuery_throws_IAE_if_too_many_component_uuids() {","1077","    Set<String> uuids = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","1078","    ComponentQuery.Builder query = ComponentQuery.builder()","1079","      .setQualifiers(Qualifiers.PROJECT)","1080","      .setComponentUuids(uuids);","1081","","1082","    assertThatSelectByQueryThrowsIAE(query, \"Too many component UUIDs in query\");","1083","  }","1084","","1085","  private void assertThatSelectByQueryThrowsIAE(ComponentQuery.Builder query, String expectedMessage) {","1086","    expectedException.expect(IllegalArgumentException.class);","1087","    expectedException.expectMessage(expectedMessage);","1088","","1089","    underTest.selectByQuery(dbSession, query.build(), 0, Integer.MAX_VALUE);"],"delete":["722","  public void select_provisioned() {","1009","  public void countByQuery_with_organization_throws_NPE_of_organizationUuid_is_null() {","1010","    expectedException.expect(NullPointerException.class);","1011","    expectedException.expectMessage(\"organizationUuid can't be null\");","1013","    underTest.countByQuery(dbSession, null, ALL_PROJECTS_COMPONENT_QUERY);"]}]}},"da6a97014a1aba426ca6253623f6ff71281a64ac":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/sidebar\/DomainFacet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/sidebar\/__tests__\/DomainFacet-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/sidebar\/__tests__\/__snapshots__\/DomainFacet-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/sidebar\/DomainFacet.js":[{"add":["69","    if (measureSelected) {","70","      return [getLocalizedMetricName(measureSelected.metric)];","71","    }","72","    return overviewSelected ? [translate('component_measures.domain_overview')] : [];","83","    let sortedItems = sortMeasures(domain.name, items);","84","","85","    sortedItems = sortedItems.filter((item, index) => {","86","      return (","87","        typeof item !== 'string' ||","88","        (index + 1 !== sortedItems.length && typeof sortedItems[index + 1] !== 'string')","89","      );","90","    });","91","","95","          <span className=\"facet search-navigator-facet facet-category\" key={item}>"],"delete":["69","    return measureSelected","70","      ? [getLocalizedMetricName(measureSelected.metric)]","71","      : overviewSelected ? [translate('component_measures.domain_overview')] : [];","82","    const sortedItems = sortMeasures(domain.name, items);","86","          <span key={item} className=\"facet search-navigator-facet facet-category\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/sidebar\/__tests__\/DomainFacet-test.js":[{"add":["71","","72","it('should not display subtitles of new measures if there is none', () => {","73","  const domain = {","74","    name: 'Reliability',","75","    measures: [","76","      {","77","        metric: { key: 'bugs', type: 'INT', name: 'Bugs', domain: 'Reliability' },","78","        value: '5'","79","      }","80","    ]","81","  };","82","","83","  expect(","84","    shallow(","85","      <DomainFacet","86","        domain={domain}","87","        onChange={() => {}}","88","        onToggle={() => {}}","89","        open={true}","90","        selected={'foo'}","91","      \/>","92","    )","93","  ).toMatchSnapshot();","94","});","95","","96","it('should not display subtitles of new measures if there is none, even on last line', () => {","97","  const domain = {","98","    name: 'Reliability',","99","    measures: [","100","      {","101","        metric: { key: 'new_bugs', type: 'INT', name: 'New Bugs', domain: 'Reliability' },","102","        value: '5'","103","      }","104","    ]","105","  };","106","","107","  expect(","108","    shallow(","109","      <DomainFacet","110","        domain={domain}","111","        onChange={() => {}}","112","        onToggle={() => {}}","113","        open={true}","114","        selected={'foo'}","115","      \/>","116","    )","117","  ).toMatchSnapshot();","118","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/sidebar\/__tests__\/__snapshots__\/DomainFacet-test.js.snap":[{"add":["265","","266","exports[`should not display subtitles of new measures if there is none 1`] = `","267","<FacetBox","268","  property=\"Reliability\"","269",">","270","  <FacetHeader","271","    name=\"Reliability\"","272","    onClick={[Function]}","273","    open={true}","274","    values={Array []}","275","  \/>","276","  <FacetItemsList>","277","    <FacetItem","278","      active={false}","279","      disabled={false}","280","      halfWidth={false}","281","      key=\"Reliability\"","282","      name={","283","        <span","284","          id=\"measure-overview-Reliability-name\"","285","        >","286","          component_measures.domain_overview","287","        <\/span>","288","      }","289","      onClick={[Function]}","290","      stat={","291","        <BubblesIcon","292","          size={14}","293","        \/>","294","      }","295","      value=\"Reliability\"","296","    \/>","297","    <span","298","      className=\"facet search-navigator-facet facet-category\"","299","      key=\"overall_category\"","300","    >","301","      <span","302","        className=\"facet-name\"","303","      >","304","        component_measures.facet_category.overall_category","305","      <\/span>","306","    <\/span>","307","    <FacetItem","308","      active={false}","309","      disabled={false}","310","      halfWidth={false}","311","      key=\"bugs\"","312","      name={","313","        <span","314","          className=\"big-spacer-left\"","315","          id=\"measure-bugs-name\"","316","        >","317","          Bugs","318","        <\/span>","319","      }","320","      onClick={[Function]}","321","      stat={","322","        <FacetMeasureValue","323","          measure={","324","            Object {","325","              \"metric\": Object {","326","                \"domain\": \"Reliability\",","327","                \"key\": \"bugs\",","328","                \"name\": \"Bugs\",","329","                \"type\": \"INT\",","330","              },","331","              \"value\": \"5\",","332","            }","333","          }","334","        \/>","335","      }","336","      value=\"bugs\"","337","    \/>","338","  <\/FacetItemsList>","339","<\/FacetBox>","340","`;","341","","342","exports[`should not display subtitles of new measures if there is none, even on last line 1`] = `","343","<FacetBox","344","  property=\"Reliability\"","345",">","346","  <FacetHeader","347","    name=\"Reliability\"","348","    onClick={[Function]}","349","    open={true}","350","    values={Array []}","351","  \/>","352","  <FacetItemsList>","353","    <FacetItem","354","      active={false}","355","      disabled={false}","356","      halfWidth={false}","357","      key=\"Reliability\"","358","      name={","359","        <span","360","          id=\"measure-overview-Reliability-name\"","361","        >","362","          component_measures.domain_overview","363","        <\/span>","364","      }","365","      onClick={[Function]}","366","      stat={","367","        <BubblesIcon","368","          size={14}","369","        \/>","370","      }","371","      value=\"Reliability\"","372","    \/>","373","    <span","374","      className=\"facet search-navigator-facet facet-category\"","375","      key=\"new_code_category\"","376","    >","377","      <span","378","        className=\"facet-name\"","379","      >","380","        component_measures.facet_category.new_code_category","381","      <\/span>","382","    <\/span>","383","    <FacetItem","384","      active={false}","385","      disabled={false}","386","      halfWidth={false}","387","      key=\"new_bugs\"","388","      name={","389","        <span","390","          className=\"big-spacer-left\"","391","          id=\"measure-new_bugs-name\"","392","        >","393","          New Bugs","394","        <\/span>","395","      }","396","      onClick={[Function]}","397","      stat={","398","        <FacetMeasureValue","399","          measure={","400","            Object {","401","              \"metric\": Object {","402","                \"domain\": \"Reliability\",","403","                \"key\": \"new_bugs\",","404","                \"name\": \"New Bugs\",","405","                \"type\": \"INT\",","406","              },","407","              \"value\": \"5\",","408","            }","409","          }","410","        \/>","411","      }","412","      value=\"new_bugs\"","413","    \/>","414","  <\/FacetItemsList>","415","<\/FacetBox>","416","`;"],"delete":[]}]}},"91720513ee12439d09703cc8837c3f5d40668ef1":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectReactorBuilder.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectReactorBuilder.java":[{"add":["25","import java.nio.file.Path;","26","import java.nio.file.Paths;","405","    Path filePath = Paths.get(path);","406","    if (!filePath.isAbsolute()) {","407","      filePath = baseDir.toPath().resolve(path);","409","    return filePath.normalize().toFile();"],"delete":["25","import java.io.IOException;","401","","405","    File file = new File(path);","406","    if (!file.isAbsolute()) {","407","      try {","408","        file = new File(baseDir, path).getCanonicalFile();","409","      } catch (IOException e) {","410","        throw new IllegalStateException(\"Unable to resolve path \\\"\" + path + \"\\\"\", e);","411","      }","413","    return file;"]}]}},"0f580cd4d12411346be5c5de801207c847457099":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStep.java":[{"add":["102","    if (analysisMetadataHolder.isFirstAnalysis() || !analysisMetadataHolder.isLongLivingBranch()) {"],"delete":["102","    if (analysisMetadataHolder.isFirstAnalysis()) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":[{"add":["114","    when(analysisMetadataHolder.isLongLivingBranch()).thenReturn(true);","848","  @Test","849","  @UseDataProvider(\"anyValidLeakPeriodSettingValue\")","850","  public void leak_period_setting_is_ignored_for_SLB_or_PR(String leakPeriodSettingValue) {","851","    when(analysisMetadataHolder.isLongLivingBranch()).thenReturn(false);","852","","853","    settings.setProperty(\"sonar.leak.period\", leakPeriodSettingValue);","854","    underTest.execute(new TestComputationStepContext());","855","","856","    assertThat(periodsHolder.hasPeriod()).isFalse();","857","  }","858",""],"delete":[]}]}},"2af0a2dd2bff90fb3a7cdcb531271d537f5c8b57":{"changes":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeConfigurationModule.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/package-info.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorModule.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImplTest.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeQueueModule.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImplTest.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorService.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":"ADD","server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImplTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImplTest.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImpl.java":"ADD","server\/sonar-ce-api\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepository.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/taskprocessor\/MutableTaskResultHolderImplTest.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryRule.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingScheduler.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueInitializerTest.java":"ADD","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueInitializer.java":"ADD","server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/package-info.java":"ADD","\/dev\/null":"DELETE","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":"ADD","server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueue.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImpl.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallable.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorServiceImpl.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImpl.java":"ADD","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":"ADD"},"diff":{"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeConfigurationModule.java":[{"add":["21","import org.sonar.ce.configuration.CeConfigurationImpl;"],"delete":["24","import org.sonar.server.computation.configuration.CeConfigurationImpl;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImpl.java":[{"add":["26","import org.sonar.ce.configuration.CeConfiguration;"],"delete":["26","import org.sonar.server.computation.configuration.CeConfiguration;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/package-info.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorModule.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/CeQueueModule.java":[{"add":["24","import org.sonar.ce.queue.CeQueueInitializer;","25","import org.sonar.ce.queue.InternalCeQueueImpl;"],"delete":["24","import org.sonar.server.computation.queue.CeQueueInitializer;","25","import org.sonar.server.computation.queue.InternalCeQueueImpl;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorService.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/monitoring\/CeTasksMBeanImplTest.java":[{"add":["29","import org.sonar.ce.configuration.CeConfiguration;"],"delete":["29","import org.sonar.server.computation.configuration.CeConfiguration;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationImplTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/container\/ComputeEngineContainerImpl.java":[{"add":["48","import org.sonar.ce.queue.CeQueueCleaner;","49","import org.sonar.ce.queue.PurgeCeActivities;","51","import org.sonar.ce.taskprocessor.CeTaskProcessorModule;"],"delete":["70","import org.sonar.server.computation.queue.CeQueueCleaner;","71","import org.sonar.server.computation.queue.PurgeCeActivities;","73","import org.sonar.server.computation.taskprocessor.CeTaskProcessorModule;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepository.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/taskprocessor\/MutableTaskResultHolderImplTest.java":[{"add":["21","import org.assertj.core.api.Assertions;","49","    Assertions.assertThat(underTest.getResult()).isSameAs(taskResult);"],"delete":["26","import static org.assertj.core.api.Assertions.assertThat;","49","    assertThat(underTest.getResult()).isSameAs(taskResult);"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeTaskProcessorRepositoryRule.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingScheduler.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueCleanerTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueInitializerTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/configuration\/CeConfigurationRule.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueInitializer.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/package-info.java":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":[{"add":[],"delete":[]}],"server\/sonar-ce-api\/src\/main\/java\/org\/sonar\/ce\/configuration\/CeConfiguration.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueue.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallable.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeProcessingSchedulerExecutorServiceImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerCallableImpl.java":[{"add":[],"delete":[]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueCleaner.java":[{"add":[],"delete":[]}]}},"7c6f52df2e18da76180d74b3533e709f5b47309a":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSimpleList.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/security-standard-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/mocks\/security-hotspots.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSimpleList-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/security.ts":"ADD","server\/sonar-web\/src\/main\/js\/types\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSimpleList-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/helpers\/security-standard.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/StandardFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/IssueLabel-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/security-hotspots.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotCategory.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSimpleList.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":["0","import { pick } from 'lodash';","25","import { SecurityStandard } from '..\/types\/security';","97","  const { branch, pullRequest, sinceLeakPeriod, hotspots, assignedToMe } = query;","107","      ...pick(query, [","108","        SecurityStandard.SONARSOURCE,","109","        SecurityStandard.OWASP_TOP10,","110","        SecurityStandard.SANS_TOP25","111","      ])"],"delete":["95","  const { branch, pullRequest, sinceLeakPeriod, hotspots, assignedToMe, category } = query;","105","      category"]}],"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/security-standard-test.ts":[{"add":["0","import { Standards } from '..\/..\/types\/security';","28","  const standards: Standards = {","41","  it('should render cwe categories correctly', () => {","51","  const standards: Standards = {","61","  it('should render owasp categories correctly', () => {","70","  const standards: Standards = {","80","  it('should render sans categories correctly', () => {","93","  const standards: Standards = {","106","  it('should render sonarsource categories correctly', () => {"],"delete":["27","  const standards: T.Standards = {","40","  it('should render categories correctly', () => {","50","  const standards: T.Standards = {","60","  it('should render categories correctly', () => {","69","  const standards: T.Standards = {","79","  it('should render categories correctly', () => {","92","  const standards: T.Standards = {","105","  it('should render categories correctly', () => {"]}],"server\/sonar-web\/src\/main\/js\/helpers\/mocks\/security-hotspots.ts":[{"add":["20","import { Standards } from '..\/..\/types\/security';","107","","108","export function mockStandards(): Standards {","109","  return {","110","    cwe: {","111","      unknown: {","112","        title: 'No CWE associated'","113","      },","114","      '1004': {","115","        title: \"Sensitive Cookie Without 'HttpOnly' Flag\"","116","      }","117","    },","118","    owaspTop10: {","119","      a1: {","120","        title: 'Injection'","121","      },","122","      a2: {","123","        title: 'Broken Authentication'","124","      },","125","      a3: {","126","        title: 'Sensitive Data Exposure'","127","      }","128","    },","129","    sansTop25: {","130","      'insecure-interaction': {","131","        title: 'Insecure Interaction Between Components'","132","      },","133","      'risky-resource': {","134","        title: 'Risky Resource Management'","135","      },","136","      'porous-defenses': {","137","        title: 'Porous Defenses'","138","      }","139","    },","140","    sonarsourceSecurity: {","141","      'buffer-overflow': {","142","        title: 'Buffer Overflow'","143","      },","144","      'sql-injection': {","145","        title: 'SQL Injection'","146","      },","147","      rce: {","148","        title: 'Code Injection (RCE)'","149","      }","150","    }","151","  };","152","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":[{"add":["33","import { SecurityStandard, Standards } from '..\/..\/types\/security';","43","import { SECURITY_STANDARDS } from '.\/utils';","57","  filterByCategory?: { standard: SecurityStandard; category: string };","58","  filters: HotspotFilters;","68","  standards: Standards;","86","      standards: {","87","        [SecurityStandard.OWASP_TOP10]: {},","88","        [SecurityStandard.SANS_TOP25]: {},","89","        [SecurityStandard.SONARSOURCE]: {},","90","        [SecurityStandard.CWE]: {}","91","      },","109","      this.props.location.query.hotspots !== previous.location.query.hotspots ||","110","      SECURITY_STANDARDS.some(s => this.props.location.query[s] !== previous.location.query[s])","186","      .then(([standards, { hotspots, paging }]) => {","191","        const selectedHotspot = hotspots.length > 0 ? hotspots[0] : undefined;","197","          selectedHotspot,","198","          standards","244","    const standard = SECURITY_STANDARDS.find(stnd => location.query[stnd] !== undefined);","245","    const filterByCategory = standard","246","      ? { standard, category: location.query[standard] }","247","      : undefined;","248","","249","    this.setState({ filterByCategory, hotspotKeys });","258","    if (filterByCategory) {","259","      return getSecurityHotspots({","260","        [filterByCategory.standard]: filterByCategory.category,","261","        projectKey: component.key,","262","        p: page,","263","        ps: PAGE_SIZE,","264","        status: HotspotStatus.TO_REVIEW, \/\/ we're only interested in unresolved hotspots","265","        ...getBranchLikeQuery(branchLike)","266","      });","267","    }","268","","352","      query: {","353","        ...this.props.location.query,","354","        hotspots: undefined,","355","        [SecurityStandard.OWASP_TOP10]: undefined,","356","        [SecurityStandard.SANS_TOP25]: undefined,","357","        [SecurityStandard.SONARSOURCE]: undefined","358","      }","385","      filterByCategory,","386","      filters,","395","      standards","403","        filterByCategory={filterByCategory}","407","        isStaticListOfHotspots={Boolean(","408","          (hotspotKeys && hotspotKeys.length > 0) || filterByCategory","409","        )}","418","        securityCategories={standards[SecurityStandard.SONARSOURCE]}","420","        standards={standards}"],"delete":["63","  securityCategories: T.StandardSecurityCategories;","65","  filters: HotspotFilters;","82","      securityCategories: {},","101","      this.props.location.query.hotspots !== previous.location.query.hotspots","177","      .then(([{ sonarsourceSecurity }, { hotspots, paging }]) => {","182","        const requestedCategory = this.props.location.query.category;","183","","184","        let selectedHotspot;","185","        if (hotspots.length > 0) {","186","          const hotspotForCategory = requestedCategory","187","            ? hotspots.find(h => h.securityCategory === requestedCategory)","188","            : undefined;","189","          selectedHotspot = hotspotForCategory ?? hotspots[0];","190","        }","196","          securityCategories: sonarsourceSecurity,","197","          selectedHotspot","243","    this.setState({ hotspotKeys });","335","      query: { ...this.props.location.query, hotspots: undefined }","369","      securityCategories,","371","      filters","382","        isStaticListOfHotspots={Boolean(hotspotKeys && hotspotKeys.length > 0)}","391","        securityCategories={securityCategories}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsApp-test.tsx.snap":[{"add":["54","  standards={","55","    Object {","56","      \"cwe\": Object {},","57","      \"owaspTop10\": Object {},","58","      \"sansTop25\": Object {},","59","      \"sonarsourceSecurity\": Object {},","60","    }","61","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSimpleList-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/utils.ts":[{"add":["21","  renderCWECategory,","22","  renderOwaspTop10Category,","23","  renderSansTop25Category,","24","  renderSonarSourceSecurityCategory","25","} from '..\/..\/helpers\/security-standard';","26","import { SecurityStandard } from '..\/..\/types\/security';","27","import {","39","export const SECURITY_STANDARDS = [","40","  SecurityStandard.SONARSOURCE,","41","  SecurityStandard.OWASP_TOP10,","42","  SecurityStandard.SANS_TOP25","43","];","44","","45","export const SECURITY_STANDARD_RENDERER = {","46","  [SecurityStandard.OWASP_TOP10]: renderOwaspTop10Category,","47","  [SecurityStandard.SANS_TOP25]: renderSansTop25Category,","48","  [SecurityStandard.SONARSOURCE]: renderSonarSourceSecurityCategory,","49","  [SecurityStandard.CWE]: renderCWECategory","50","};"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/security.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/types.d.ts":[{"add":[],"delete":["826","  export type Standards = {","827","    [key in StandardType]: T.Dict<{ title: string; description?: string }>;","828","  };","829","","830","  export type StandardType = 'owaspTop10' | 'sansTop25' | 'cwe' | 'sonarsourceSecurity';","831",""]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/utils-test.ts":[{"add":["20","import { SecurityStandard } from '..\/..\/..\/types\/security';","84","      shouldOpenStandardsChildFacet({ owaspTop10: true }, {}, SecurityStandard.OWASP_TOP10)","87","      shouldOpenStandardsChildFacet({ sansTop25: true }, {}, SecurityStandard.SANS_TOP25)","90","      shouldOpenStandardsChildFacet(","91","        { sansTop25: true },","92","        { owaspTop10: ['A1'] },","93","        SecurityStandard.OWASP_TOP10","94","      )","95","    ).toBe(true);","96","    expect(","97","      shouldOpenStandardsChildFacet(","98","        { owaspTop10: false },","99","        { owaspTop10: ['A1'] },","100","        SecurityStandard.OWASP_TOP10","101","      )","102","    ).toBe(true);","103","    expect(","104","      shouldOpenStandardsChildFacet(","105","        {},","106","        { sansTop25: ['insecure-interactions'] },","107","        SecurityStandard.SANS_TOP25","108","      )","114","        SecurityStandard.SONARSOURCE","120","    expect(","121","      shouldOpenStandardsChildFacet({ standards: true }, {}, SecurityStandard.OWASP_TOP10)","122","    ).toBe(false);","123","    expect(","124","      shouldOpenStandardsChildFacet({ sansTop25: true }, {}, SecurityStandard.OWASP_TOP10)","125","    ).toBe(false);","126","    expect(","127","      shouldOpenStandardsChildFacet({}, { types: ['VULNERABILITY'] }, SecurityStandard.SANS_TOP25)","128","    ).toBe(false);","133","        SecurityStandard.OWASP_TOP10"],"delete":["82","    expect(shouldOpenStandardsChildFacet({ owaspTop10: true }, {}, 'owaspTop10')).toBe(true);","83","    expect(shouldOpenStandardsChildFacet({ sansTop25: true }, {}, 'sansTop25')).toBe(true);","85","      shouldOpenStandardsChildFacet({ sansTop25: true }, { owaspTop10: ['A1'] }, 'owaspTop10')","88","      shouldOpenStandardsChildFacet({ owaspTop10: false }, { owaspTop10: ['A1'] }, 'owaspTop10')","91","      shouldOpenStandardsChildFacet({}, { sansTop25: ['insecure-interactions'] }, 'sansTop25')","97","        'sonarsourceSecurity'","103","    expect(shouldOpenStandardsChildFacet({ standards: true }, {}, 'owaspTop10')).toBe(false);","104","    expect(shouldOpenStandardsChildFacet({ sansTop25: true }, {}, 'owaspTop10')).toBe(false);","105","    expect(shouldOpenStandardsChildFacet({}, { types: ['VULNERABILITY'] }, 'sansTop25')).toBe(","106","      false","107","    );","112","        'owaspTop10'"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":[{"add":["73","","74","#security_hotspots .hotspots-list-single-category .hotspot-category .hotspot-category-header {","75","  color: var(--blue);","76","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["52","import { SecurityStandard } from '..\/..\/..\/types\/security';","159","        owaspTop10: shouldOpenStandardsChildFacet({}, query, SecurityStandard.OWASP_TOP10),","160","        sansTop25: shouldOpenStandardsChildFacet({}, query, SecurityStandard.SANS_TOP25),"],"delete":["158","        owaspTop10: shouldOpenStandardsChildFacet({}, query, 'owaspTop10'),","159","        sansTop25: shouldOpenStandardsChildFacet({}, query, 'sansTop25'),"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":[{"add":["26","import { mockRawHotspot, mockStandards } from '..\/..\/..\/helpers\/mocks\/security-hotspots';","35","import { SecurityStandard } from '..\/..\/..\/types\/security';","103","  expect(wrapper.state().standards).toEqual({","104","    sonarsourceSecurity: {","105","      cat1: { title: 'cat 1' }","106","    }","112","it('should handle category request', () => {","113","  (getStandards as jest.Mock).mockResolvedValue(mockStandards());","116","  shallowRender({","117","    location: mockLocation({ query: { [SecurityStandard.OWASP_TOP10]: 'a1' } })","120","  expect(getSecurityHotspots).toBeCalledWith(","121","    expect.objectContaining({ [SecurityStandard.OWASP_TOP10]: 'a1' })","122","  );"],"delete":["26","import { mockRawHotspot } from '..\/..\/..\/helpers\/mocks\/security-hotspots';","102","  expect(wrapper.state().securityCategories).toEqual({","103","    cat1: { title: 'cat 1' }","109","it('should handle category request', async () => {","110","  const hotspots = [mockRawHotspot(), mockRawHotspot({ securityCategory: 'log-injection' })];","111","  (getSecurityHotspots as jest.Mock).mockResolvedValue({","112","    hotspots,","113","    paging: {","114","      total: 1","115","    }","116","  });","119","  const wrapper = shallowRender({","120","    location: mockLocation({ query: { category: hotspots[1].securityCategory } })","123","  await waitAndUpdate(wrapper);","124","","125","  expect(wrapper.state().selectedHotspot).toBe(hotspots[1]);"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSimpleList-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/security-standard.ts":[{"add":["19","import { Standards } from '..\/types\/security';","20","","21","export function getStandards(): Promise<Standards> {","25","export function renderCWECategory(standards: Standards, category: string): string {","37","  standards: Standards,","50","  standards: Standards,","59","  standards: Standards,"],"delete":["19","export function getStandards(): Promise<T.Standards> {","23","export function renderCWECategory(standards: T.Standards, category: string): string {","35","  standards: T.Standards,","48","  standards: T.Standards,","57","  standards: T.Standards,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/StandardFacet.tsx":[{"add":["36","import { SecurityStandard, Standards, StandardType } from '..\/..\/..\/types\/security';","64","  standards: Standards;","68","type ValuesProp = StandardType;","104","      ({ owaspTop10, sansTop25, cwe, sonarsourceSecurity }: Standards) => {","169","    this.handleItemClick(SecurityStandard.OWASP_TOP10, itemValue, multiple);","173","    this.handleItemClick(SecurityStandard.SANS_TOP25, itemValue, multiple);","177","    this.handleItemClick(SecurityStandard.SONARSOURCE, itemValue, multiple);","200","    renderName: (standards: Standards, category: string) => string,","217","    renderName: (standards: Standards, category: string) => React.ReactNode,","218","    renderTooltip: (standards: Standards, category: string) => string,","259","      SecurityStandard.OWASP_TOP10,","266","    return this.renderHint('owaspTop10Stats', SecurityStandard.OWASP_TOP10);","272","      SecurityStandard.SANS_TOP25,","279","    return this.renderHint('sansTop25Stats', SecurityStandard.SANS_TOP25);","285","      SecurityStandard.SONARSOURCE,","292","    return this.renderHint('sonarsourceSecurityStats', SecurityStandard.SONARSOURCE);","298","        <FacetBox className=\"is-inner\" property={SecurityStandard.SONARSOURCE}>","315","        <FacetBox className=\"is-inner\" property={SecurityStandard.OWASP_TOP10}>","332","        <FacetBox className=\"is-inner\" property={SecurityStandard.SANS_TOP25}>","361","          property={SecurityStandard.CWE}"],"delete":["63","  standards: T.Standards;","67","type ValuesProp = T.StandardType;","103","      ({ owaspTop10, sansTop25, cwe, sonarsourceSecurity }: T.Standards) => {","168","    this.handleItemClick('owaspTop10', itemValue, multiple);","172","    this.handleItemClick('sansTop25', itemValue, multiple);","176","    this.handleItemClick('sonarsourceSecurity', itemValue, multiple);","199","    renderName: (standards: T.Standards, category: string) => string,","216","    renderName: (standards: T.Standards, category: string) => React.ReactNode,","217","    renderTooltip: (standards: T.Standards, category: string) => string,","258","      'owaspTop10',","265","    return this.renderHint('owaspTop10Stats', 'owaspTop10');","271","      'sansTop25',","278","    return this.renderHint('sansTop25Stats', 'sansTop25');","284","      'sonarsourceSecurity',","291","    return this.renderHint('sonarsourceSecurityStats', 'sonarsourceSecurity');","297","        <FacetBox className=\"is-inner\" property=\"sonarsourceSecurity\">","314","        <FacetBox className=\"is-inner\" property=\"owaspTop10\">","331","        <FacetBox className=\"is-inner\" property=\"sansTop25\">","360","          property=\"cwe\""]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/__tests__\/__snapshots__\/IssueLabel-test.tsx.snap":[{"add":[],"delete":["126","          \"category\": undefined,","160","          \"category\": undefined,"]}],"server\/sonar-web\/src\/main\/js\/api\/security-hotspots.ts":[{"add":["32","const HOTSPOTS_SEARCH_URL = '\/api\/hotspots\/search';","33","","80","  return getJSON(HOTSPOTS_SEARCH_URL, data).catch(throwGlobalError);","89","  return getJSON(HOTSPOTS_SEARCH_URL, { ...data, hotspots: hotspotKeys.join() }).catch("],"delete":["78","  return getJSON('\/api\/hotspots\/search', data).catch(throwGlobalError);","87","  return getJSON('\/api\/hotspots\/search', { ...data, hotspots: hotspotKeys.join() }).catch("]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/utils.ts":[{"add":["35","import { SecurityStandard, StandardType } from '..\/..\/types\/security';","68","export const STANDARD_TYPES: StandardType[] = [","69","  SecurityStandard.OWASP_TOP10,","70","  SecurityStandard.SANS_TOP25,","71","  SecurityStandard.CWE,","72","  SecurityStandard.SONARSOURCE","291","  standardType: SecurityStandard","297","      (standardType !== SecurityStandard.CWE && filter !== undefined && filter.length > 0))","307","    shouldOpenStandardsChildFacet(openFacets, query, SecurityStandard.SONARSOURCE) ||"],"delete":["67","export const STANDARD_TYPES: T.StandardType[] = [","68","  'owaspTop10',","69","  'sansTop25',","70","  'cwe',","71","  'sonarsourceSecurity'","290","  standardType: T.StandardType","296","      (standardType !== 'cwe' && filter !== undefined && filter.length > 0))","306","    shouldOpenStandardsChildFacet(openFacets, query, 'sonarsourceSecurity') ||"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":[{"add":["23","import { mockRawHotspot, mockStandards } from '..\/..\/..\/helpers\/mocks\/security-hotspots';","128","      standards={mockStandards()}"],"delete":["23","import { mockRawHotspot } from '..\/..\/..\/helpers\/mocks\/security-hotspots';"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotCategory.tsx":[{"add":["31","  onToggleExpand?: (categoryKey: string, value: boolean) => void;","48","      {props.onToggleExpand ? (","49","        <a","50","          className={classNames(","51","            'hotspot-category-header display-flex-space-between display-flex-center',","52","            { 'contains-selected-hotspot': selectedHotspot.securityCategory === categoryKey }","54","          href=\"#\"","55","          onClick={() => props.onToggleExpand && props.onToggleExpand(categoryKey, !expanded)}>","56","          <strong className=\"flex-1 spacer-right break-word\">{title}<\/strong>","57","          <span>","58","            <span className=\"counter-badge\">","59","              {hotspots.length}","60","              {isLastAndIncomplete && '+'}","61","            <\/span>","62","            {expanded ? (","63","              <ChevronUpIcon className=\"big-spacer-left\" \/>","64","            ) : (","65","              <ChevronDownIcon className=\"big-spacer-left\" \/>","66","            )}","67","          <\/span>","68","        <\/a>","69","      ) : (","70","        <div className=\"hotspot-category-header\">","71","          <strong className=\"flex-1 spacer-right break-word\">{title}<\/strong>","72","        <\/div>","73","      )}"],"delete":["31","  onToggleExpand: (categoryKey: string, value: boolean) => void;","48","      <a","49","        className={classNames(","50","          'hotspot-category-header display-flex-space-between display-flex-center',","51","          { 'contains-selected-hotspot': selectedHotspot.securityCategory === categoryKey }","52","        )}","53","        href=\"#\"","54","        onClick={() => props.onToggleExpand(categoryKey, !expanded)}>","55","        <strong className=\"flex-1 spacer-right break-word\">{title}<\/strong>","56","        <span>","57","          <span className=\"counter-badge\">","58","            {hotspots.length}","59","            {isLastAndIncomplete && '+'}","60","          <\/span>","61","          {expanded ? (","62","            <ChevronUpIcon className=\"big-spacer-left\" \/>","63","          ) : (","64","            <ChevronDownIcon className=\"big-spacer-left\" \/>","66","        <\/span>","67","      <\/a>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["52","import { SecurityStandard } from '..\/..\/..\/types\/security';","124","        owaspTop10: shouldOpenStandardsChildFacet({}, query, SecurityStandard.OWASP_TOP10),","125","        sansTop25: shouldOpenStandardsChildFacet({}, query, SecurityStandard.SANS_TOP25),"],"delete":["123","        owaspTop10: shouldOpenStandardsChildFacet({}, query, 'owaspTop10'),","124","        sansTop25: shouldOpenStandardsChildFacet({}, query, 'sansTop25'),"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":[{"add":["29","import { SecurityStandard, Standards } from '..\/..\/types\/security';","34","import HotspotSimpleList from '.\/components\/HotspotSimpleList';","41","  filterByCategory?: {","42","    standard: SecurityStandard;","43","    category: string;","44","  };","60","  standards: Standards;","67","    filterByCategory,","68","    filters,","78","    standards","127","                    {filterByCategory ? (","128","                      <HotspotSimpleList","129","                        filterByCategory={filterByCategory}","130","                        hotspots={hotspots}","131","                        hotspotsTotal={hotspotsTotal}","132","                        loadingMore={loadingMore}","133","                        onHotspotClick={props.onHotspotClick}","134","                        onLoadMore={props.onLoadMore}","135","                        selectedHotspot={selectedHotspot}","136","                        standards={standards}","137","                      \/>","138","                    ) : (","139","                      <HotspotList","140","                        hotspots={hotspots}","141","                        hotspotsTotal={hotspotsTotal}","142","                        isStaticListOfHotspots={isStaticListOfHotspots}","143","                        loadingMore={loadingMore}","144","                        onHotspotClick={props.onHotspotClick}","145","                        onLoadMore={props.onLoadMore}","146","                        securityCategories={securityCategories}","147","                        selectedHotspot={selectedHotspot}","148","                        statusFilter={filters.status}","149","                      \/>","150","                    )}"],"delete":["69","    filters","118","                    <HotspotList","119","                      hotspots={hotspots}","120","                      hotspotsTotal={hotspotsTotal}","121","                      isStaticListOfHotspots={isStaticListOfHotspots}","122","                      loadingMore={loadingMore}","123","                      onHotspotClick={props.onHotspotClick}","124","                      onLoadMore={props.onLoadMore}","125","                      securityCategories={securityCategories}","126","                      selectedHotspot={selectedHotspot}","127","                      statusFilter={filters.status}","128","                    \/>"]}]}},"49ee415f4a13e435f5d86a125666532b8fb029a9":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueMessage.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueMessage-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueMessage.tsx":[{"add":["40","    <div className=\"issue-message break-word\">"],"delete":["40","    <div className=\"issue-message\">"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueMessage-test.tsx.snap":[{"add":["4","  className=\"issue-message break-word\"","23","  className=\"issue-message break-word\"","51","  className=\"issue-message break-word\"","79","  className=\"issue-message break-word\""],"delete":["4","  className=\"issue-message\"","23","  className=\"issue-message\"","51","  className=\"issue-message\"","79","  className=\"issue-message\""]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":[{"add":["582","","583",".break-word {","584","  word-break: break-word;","585","}"],"delete":[]}]}},"a6889467a2d97739df4329d41e7969327da2b8f8":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeMapperTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDtoTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTable.java":"ADD","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/IssueStorage.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChanges.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDefTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueTesting.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTable.java":"ADD","server\/sonar-db-dao\/src\/schema\/schema-sq.ddl":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDef.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTable.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/issue\/IssueChangeMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueChangeDto.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest\/schema.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest.java":"ADD","server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/issue\/IssueDbTester.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest.java":"ADD","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueMapperTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeMapperTest.java":[{"add":["50","    dto.setProjectUuid(\"project_uuid\");","72","    dto.setProjectUuid(\"project_uuid\");"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDtoTest.java":[{"add":["35","    IssueChangeDto dto = IssueChangeDto.of(comment, \"project_uuid\");","44","    assertThat(dto.getProjectUuid()).isEqualTo(\"project_uuid\");","52","    IssueChangeDto dto = IssueChangeDto.of(comment, \"project_uuid\");","64","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs, \"project_uuid\");","73","    assertThat(dto.getProjectUuid()).isEqualTo(\"project_uuid\");","83","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs, \"project_uuid\");","153","    IssueChangeDto dto = IssueChangeDto.of(comment, \"project_uuid\");"],"delete":["35","    IssueChangeDto dto = IssueChangeDto.of(comment);","51","    IssueChangeDto dto = IssueChangeDto.of(comment);","63","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs);","81","    IssueChangeDto dto = IssueChangeDto.of(\"ABCDE\", diffs);","151","    IssueChangeDto dto = IssueChangeDto.of(comment);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/IssueStorage.java":[{"add":["32","        IssueChangeDto changeDto = IssueChangeDto.of(comment, issue.projectUuid());","34","        changeDto.setProjectUuid(issue.projectUuid());","41","        IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), d, issue.projectUuid());","43","        changeDto.setProjectUuid(issue.projectUuid());","47","      IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), diffs, issue.projectUuid());","49","      changeDto.setProjectUuid(issue.projectUuid());"],"delete":["32","        IssueChangeDto changeDto = IssueChangeDto.of(comment);","40","        IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), d);","45","      IssueChangeDto changeDto = IssueChangeDto.of(issue.key(), diffs);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["296","        .setProjectUuid(project.projectUuid())","306","        .setProjectUuid(project.projectUuid())","335","        .setProjectUuid(project.projectUuid())","345","        .setProjectUuid(project.projectUuid())"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChanges.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDefTest.java":[{"add":["65","    assertThat(underTest.generateSqlType(new H2())).isEqualTo(\"CLOB\");"],"delete":["65","    assertThat(underTest.generateSqlType(new H2())).isEqualTo(\"CLOB(2147483647)\");"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueTesting.java":[{"add":["92","      .setProjectUuid(issue.getProjectUuid())"],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnProjectUuidOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnIssueKeyForIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/schema\/schema-sq.ddl":[{"add":["84","    \"CLOB_VALUE\" CLOB,","109","    \"ERROR_STACKTRACE\" CLOB,","299","    \"LINE_HASHES\" CLOB,","359","    \"CLOB_VALUE\" CLOB,","373","    \"ISSUE_CHANGE_CREATION_DATE\" BIGINT,","374","    \"PROJECT_UUID\" VARCHAR(50) NOT NULL","379","CREATE INDEX \"ISSUE_CHANGES_PROJECT_UUID\" ON \"ISSUE_CHANGES\"(\"PROJECT_UUID\");","717","    \"CLOB_VALUE\" CLOB,","731","    \"CHANGE_DATA\" CLOB,","792","    \"DESCRIPTION\" CLOB,","817","    \"NOTE_DATA\" CLOB,","826","    \"AD_HOC_DESCRIPTION\" CLOB,","970","    \"PAYLOAD\" CLOB NOT NULL,","971","    \"ERROR_STACKTRACE\" CLOB,"],"delete":["84","    \"CLOB_VALUE\" CLOB(2147483647),","109","    \"ERROR_STACKTRACE\" CLOB(2147483647),","299","    \"LINE_HASHES\" CLOB(2147483647),","359","    \"CLOB_VALUE\" CLOB(2147483647),","373","    \"ISSUE_CHANGE_CREATION_DATE\" BIGINT","715","    \"CLOB_VALUE\" CLOB(2147483647),","729","    \"CHANGE_DATA\" CLOB(2147483647),","790","    \"DESCRIPTION\" CLOB(2147483647),","815","    \"NOTE_DATA\" CLOB(2147483647),","824","    \"AD_HOC_DESCRIPTION\" CLOB(2147483647),","968","    \"PAYLOAD\" CLOB(2147483647) NOT NULL,","969","    \"ERROR_STACKTRACE\" CLOB(2147483647),"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ClobColumnDef.java":[{"add":["51","        return \"CLOB\";"],"delete":["50","        return \"CLOB\";","52","        return \"CLOB(2147483647)\";"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/DbVersion85.java":[{"add":["23","import org.sonar.server.platform.db.migration.version.v84.issuechanges.DropIssueChangesTable;","26","","36","      .add(4006, \"create 'tmp_issue_changes' table\", CreateTmpIssueChangesTable.class)","37","      .add(4007, \"drop 'issue_changes' table\", DropIssueChangesTable.class)","38","      .add(4008, \"rename 'tmp_issue_changes' table to 'issue_changes'\", RenameTmpIssueChangesToIssueChanges.class)","39","      .add(4009, \"Make 'issueKey' not nullable for 'issue_changes' table\", MakeIssueKeyNotNullOnIssueChangesTable.class)","40","      .add(4010, \"Make 'uuid' not nullable for 'issue_changes' table\", MakeUuidNotNullOnIssueChangesTable.class)","41","      .add(4011, \"Make 'project_uuid' not nullable for 'issue_changes' table\", MakeProjectUuidNotNullOnIssueChangesTable.class)","42","      .add(4012, \"add PK table to 'issue_changes'\", AddPrimaryKeyOnUuidForIssueChangesTable.class)","43","      .add(4013, \"add index on 'issue_key' for table 'issue_changes'\", AddIndexOnIssueKeyForIssueChangesTable.class)","44","      .add(4014, \"add index on 'kee' for table 'issue_changes'\", AddIndexOnKeeForIssueChangesTable.class)","45","      .add(4015, \"add index on 'project_uuid' for table 'issue_changes'\", AddIndexOnProjectUuidOnIssueChangesTable.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTable.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddPrimaryKeyOnUuidForIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/issue\/IssueChangeMapper.xml":[{"add":["15","    c.project_uuid as projectUuid,","21","    issue_change_creation_date, project_uuid)","24","    #{updatedAt,jdbcType=BIGINT}, #{issueChangeCreationDate,jdbcType=BIGINT}, #{projectUuid,jdbcType=VARCHAR})"],"delete":["20","    issue_change_creation_date)","23","    #{updatedAt,jdbcType=BIGINT}, #{issueChangeCreationDate,jdbcType=BIGINT})"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeIssueKeyNotNullOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/issue\/IssueChangeDto.java":[{"add":["45","  private String projectUuid;","46","","47","","63","  public IssueChangeDto() {","64","    \/\/ nothing to do","65","  }","66","","67","  public static IssueChangeDto of(DefaultIssueComment comment, String projectUuid) {","75","    dto.setProjectUuid(projectUuid);","79","  public static IssueChangeDto of(String issueKey, FieldDiffs diffs, String projectUuid) {","86","    dto.setProjectUuid(projectUuid);","206","","207","  public String getProjectUuid() {","208","    return projectUuid;","209","  }","210","","211","  public IssueChangeDto setProjectUuid(String projectUuid) {","212","    this.projectUuid = projectUuid;","213","    return this;","214","  }"],"delete":["60","  public static IssueChangeDto of(DefaultIssueComment comment) {","71","  public static IssueChangeDto of(String issueKey, FieldDiffs diffs) {"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/CreateTmpIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["31","import org.sonar.api.utils.TimeUtils;","184","    long start = System2.INSTANCE.now();","191","","192","    logProfiling(profiler, start);","193","  }","194","","195","  private static void logProfiling(PurgeProfiler profiler, long start) {","196","    long duration = System.currentTimeMillis() - start;","197","    LOG.info(\"\");","198","    LOG.info(\" -------- Profiling for project deletion: \" + TimeUtils.formatDuration(duration) + \" --------\");","199","    LOG.info(\"\");","200","    profiler.dump(duration, LOG);","201","    LOG.info(\"\");","202","    LOG.info(\" -------- End of profiling for project deletion--------\");","203","    LOG.info(\"\");"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["278","    delete from issue_changes where project_uuid = #{projectUuid,jdbcType=VARCHAR}"],"delete":["278","    delete from issue_changes ic","279","    where","280","      exists (select 1 from issues i where i.kee=ic.issue_key and i.project_uuid = #{projectUuid,jdbcType=VARCHAR})","281","  <\/delete>","282","","283","  <!-- Mssql -->","284","  <delete id=\"deleteIssueChangesByProjectUuid\" databaseId=\"mssql\" parameterType=\"map\">","285","    delete issue_changes from issue_changes","286","    inner join issues on","287","      issue_changes.issue_key=issues.kee","288","    where","289","      issues.project_uuid = #{projectUuid,jdbcType=VARCHAR}"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeProjectUuidNotNullOnIssueChangesTableTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/MakeUuidNotNullOnIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/issue\/IssueDbTester.java":[{"add":["226","    IssueChangeDto issueChangeDto = IssueChangeDto.of(DefaultIssueComment.create(issueDto.getKey(), user == null ? null : user.getUuid(), text), issueDto.getProjectUuid());","232","    Arrays.stream(diffs).forEach(diff -> db.getDbClient().issueChangeDao().insert(db.getSession(), IssueChangeDto.of(issueDto.getKey(), diff, issueDto.getProjectUuid())"],"delete":["226","    IssueChangeDto issueChangeDto = IssueChangeDto.of(DefaultIssueComment.create(issueDto.getKey(), user == null ? null : user.getUuid(), text));","232","    Arrays.stream(diffs).forEach(diff -> db.getDbClient().issueChangeDao().insert(db.getSession(), IssueChangeDto.of(issueDto.getKey(), diff)"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueChangeDaoTest.java":[{"add":["135","      .setIssueChangeCreationDate(1_502_000_000_000L)","136","      .setProjectUuid(\"project_uuid\");","143","        IssueChangeDto::getIssueChangeCreationDate, IssueChangeDto::getCreatedAt, IssueChangeDto::getUpdatedAt, IssueChangeDto::getProjectUuid)","145","        tuple(\"EFGH\", \"uuid\", issue.getKey(), \"Some text\", TYPE_COMMENT, 1_502_000_000_000L, 1_500_000_000_000L, 1_501_000_000_000L, \"project_uuid\"));"],"delete":["135","      .setIssueChangeCreationDate(1_502_000_000_000L);","142","        IssueChangeDto::getIssueChangeCreationDate, IssueChangeDto::getCreatedAt, IssueChangeDto::getUpdatedAt)","144","        tuple(\"EFGH\", \"uuid\", issue.getKey(), \"Some text\", TYPE_COMMENT, 1_502_000_000_000L, 1_500_000_000_000L, 1_501_000_000_000L));"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/RenameTmpIssueChangesToIssueChangesTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v85\/AddIndexOnKeeForIssueChangesTableTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/issue\/IssueMapperTest.java":[{"add":["480","    IssueChangeDto changeDto = IssueChangeDto.of(issue.getKey(), diffs, issue.getProjectUuid());"],"delete":["480","    IssueChangeDto changeDto = IssueChangeDto.of(issue.getKey(), diffs);"]}]}},"f8770a266372578f3fa59056c73c14f22305c5b5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":[{"add":["42","    const footer = document.getElementById('footer');","43","    if (footer) {","44","      footer.classList.add('page-footer-with-sidebar');","45","    }","46","  }","47","","48","  componentWillUnmount() {","49","    const footer = document.getElementById('footer');","50","    if (footer) {","51","      footer.classList.remove('page-footer-with-sidebar');","52","    }"],"delete":[]}]}},"b6dc9d310b5eeb03eaa1de571f333d47c6b11fcb":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/step\/QualityGateMeasuresStep.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/QualityGateMeasuresStepTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/step\/QualityGateMeasuresStep.java":[{"add":["24","import com.google.common.collect.Multimap;","25","import com.google.common.collect.Ordering;","27","import java.util.Collection;","74","  private static final Ordering<Condition> PERIOD_ORDERING = Ordering.natural().nullsLast()","75","    .onResultOf(ConditionToPeriod.INSTANCE);","171","    Multimap<Metric, Condition> conditionsPerMetric = from(conditions).index(ConditionToMetric.INSTANCE);","172","    for (Map.Entry<Metric, Collection<Condition>> entry : conditionsPerMetric.asMap().entrySet()) {","173","      Metric metric = entry.getKey();","174","      Optional<Measure> measure = measureRepository.getRawMeasure(project, metric);","179","      MetricEvaluationResult metricEvaluationResult = evaluateQualityGate(measure.get(), entry.getValue());","180","      String text = evaluationResultTextConverter.asText(metricEvaluationResult.condition, metricEvaluationResult.evaluationResult);","184","        .setQualityGateStatus(new QualityGateStatus(metricEvaluationResult.evaluationResult.getLevel(), text))","186","      measureRepository.update(project, metric, updatedMeasure);","188","      builder.addEvaluatedCondition(metricEvaluationResult);","192","  private static MetricEvaluationResult evaluateQualityGate(Measure measure, Collection<Condition> conditions) {","193","    ConditionEvaluator conditionEvaluator = new ConditionEvaluator();","194","    MetricEvaluationResult metricEvaluationResult = null;","195","    for (Condition newCondition : PERIOD_ORDERING.immutableSortedCopy(conditions)) {","196","      EvaluationResult newEvaluationResult = conditionEvaluator.evaluate(newCondition, measure);","197","      if (metricEvaluationResult == null || newEvaluationResult.getLevel().ordinal() > metricEvaluationResult.evaluationResult.getLevel().ordinal()) {","198","        metricEvaluationResult = new MetricEvaluationResult(newEvaluationResult, newCondition);","199","      }","200","    }","201","    return metricEvaluationResult;","202","  }","203","","241","    public void addEvaluatedCondition(MetricEvaluationResult metricEvaluationResult) {","242","      Measure.Level level = metricEvaluationResult.evaluationResult.getLevel();","243","      if (Measure.Level.WARN == level && this.globalLevel != Measure.Level.ERROR) {","246","      } else if (Measure.Level.ERROR == level) {","249","      evaluatedConditions.add(","250","        new EvaluatedCondition(metricEvaluationResult.condition, level, metricEvaluationResult.evaluationResult.getValue()));","267","","268","  private static class MetricEvaluationResult {","269","    private final EvaluationResult evaluationResult;","270","    private final Condition condition;","271","","272","    private MetricEvaluationResult(EvaluationResult evaluationResult, Condition condition) {","273","      this.evaluationResult = evaluationResult;","274","      this.condition = condition;","275","    }","276","  }","277","","278","  private enum ConditionToMetric implements Function<Condition, Metric> {","279","    INSTANCE;","280","","281","    @Override","282","    @Nonnull","283","    public Metric apply(@Nonnull Condition input) {","284","      return input.getMetric();","285","    }","286","  }","287","","288","  public enum ConditionToPeriod implements Function<Condition, Integer> {","289","    INSTANCE;","290","","291","    @Override","292","    @Nullable","293","    public Integer apply(@Nonnull Condition input) {","294","      return input.getPeriod();","295","    }","296","  }"],"delete":["166","    for (Condition condition : conditions) {","167","      Optional<Measure> measure = measureRepository.getRawMeasure(project, condition.getMetric());","172","      EvaluationResult evaluationResult = new ConditionEvaluator().evaluate(condition, measure.get());","173","","174","      String text = evaluationResultTextConverter.asText(condition, evaluationResult);","178","        .setQualityGateStatus(new QualityGateStatus(evaluationResult.getLevel(), text))","180","      measureRepository.update(project, condition.getMetric(), updatedMeasure);","182","      builder.addEvaluatedCondition(condition, evaluationResult);","223","    public void addEvaluatedCondition(Condition condition, EvaluationResult evaluationResult) {","224","      if (Measure.Level.WARN == evaluationResult.getLevel() && this.globalLevel != Measure.Level.ERROR) {","227","      } else if (Measure.Level.ERROR == evaluationResult.getLevel()) {","230","      evaluatedConditions.add(new EvaluatedCondition(condition, evaluationResult.getLevel(), evaluationResult.getValue()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/QualityGateMeasuresStepTest.java":[{"add":["38","import org.sonar.server.computation.measure.MeasureRepositoryRule;","43","import org.sonar.server.computation.metric.MetricRepositoryRule;","44","import org.sonar.server.computation.period.Period;","59","import static org.sonar.api.measures.CoreMetrics.ALERT_STATUS_KEY;","63","import static org.sonar.server.computation.measure.Measure.newMeasureBuilder;","65","import static org.sonar.server.computation.measure.MeasureVariations.newMeasureVariationsBuilder;","69","  private static final String INT_METRIC_1_KEY = INT_METRIC_1.getKey();","71","  private static final String INT_METRIC_2_KEY = INT_METRIC_2.getKey();","73","  private static final int PROJECT_REF = 1;","74","  private static final ReportComponent PROJECT_COMPONENT = ReportComponent.builder(Component.Type.PROJECT, PROJECT_REF).build();","86","  @Rule","87","  public MetricRepositoryRule metricRepository = new MetricRepositoryRule();","88","  @Rule","89","  public MeasureRepositoryRule measureRepository = MeasureRepositoryRule.create(treeRootHolder, metricRepository);","97","    metricRepository","98","      .add(CoreMetrics.ALERT_STATUS)","99","      .add(CoreMetrics.QUALITY_GATE_DETAILS)","100","      .add(INT_METRIC_1)","101","      .add(INT_METRIC_2);","127","    measureRepository.getAddedRawMeasures(1).isEmpty();","136","    measureRepository.getAddedRawMeasures(PROJECT_COMPONENT).isEmpty();","158","    Optional<Measure> addedRawMeasure = measureRepository.getAddedRawMeasure(PROJECT_COMPONENT, INT_METRIC_1_KEY);","160","    assertThat(addedRawMeasure).isAbsent();","161","    assertThat(getAlertStatusMeasure())","164","    assertThat(getQGDetailsMeasure())","177","    Measure rawMeasure = newMeasureBuilder().create(rawValue, null);","180","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_1_KEY, rawMeasure);","184","    Optional<Measure> addedRawMeasure = measureRepository.getAddedRawMeasure(PROJECT_COMPONENT, INT_METRIC_1_KEY);","186","    assertThat(addedRawMeasure)","189","    assertThat(getAlertStatusMeasure())","192","    assertThat(getQGDetailsMeasure().get())","206","    Measure rawMeasure = newMeasureBuilder().create(rawValue, null);","209","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_1_KEY, rawMeasure);","210","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_2_KEY, rawMeasure);","214","    Optional<Measure> rawMeasure1 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_1_KEY);","215","    Optional<Measure> rawMeasure2 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_2_KEY);","217","    assertThat(rawMeasure1.get())","220","    assertThat(rawMeasure2.get())","223","    assertThat(getAlertStatusMeasure())","227","    assertThat(getQGDetailsMeasure())","244","    Measure rawMeasure = newMeasureBuilder().create(rawValue, null);","247","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_1_KEY, rawMeasure);","248","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_2_KEY, rawMeasure);","252","    Optional<Measure> rawMeasure1 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_1_KEY);","253","    Optional<Measure> rawMeasure2 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_2_KEY);","255","    assertThat(rawMeasure1.get())","258","    assertThat(rawMeasure2.get())","261","    assertThat(getAlertStatusMeasure())","265","    assertThat(getQGDetailsMeasure())","277","  @Test","278","  public void new_measure_has_ERROR_level_of_all_conditions_for_a_specific_metric_if_its_the_worst() {","279","    int rawValue = 1;","280","    Condition fixedCondition = createEqualsCondition(INT_METRIC_1, \"1\", null);","281","    Condition periodCondition = createEqualsCondition(INT_METRIC_1, null, \"2\", 1);","282","","283","    qualityGateHolder.setQualityGate(new QualityGate(SOME_QG_ID, SOME_QG_NAME, of(fixedCondition, periodCondition)));","284","    Measure measure = newMeasureBuilder().create(rawValue, null);","285","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_1_KEY, measure);","286","","287","    underTest.execute();","288","","289","    Optional<Measure> rawMeasure1 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_1_KEY);","290","    assertThat(rawMeasure1.get())","291","      .hasQualityGateLevel(ERROR)","292","      .hasQualityGateText(dumbResultTextAnswer(fixedCondition, ERROR, rawValue));","293","  }","294","","295","  @Test","296","  public void new_measure_has_WARN_level_of_all_conditions_for_a_specific_metric_if_its_the_worst() {","297","    int rawValue = 2;","298","    Condition fixedCondition = createEqualsCondition(INT_METRIC_1, \"1\", null);","299","    Condition periodCondition = createEqualsCondition(INT_METRIC_1, null, \"2\", 1);","300","","301","    qualityGateHolder.setQualityGate(new QualityGate(SOME_QG_ID, SOME_QG_NAME, of(fixedCondition, periodCondition)));","302","    Measure measure = newMeasureBuilder()","303","      .setVariations(newMeasureVariationsBuilder().setVariation(new Period(1, \"mode\", null, 1212, 121), rawValue).build())","304","      .create(rawValue, null);","305","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_1_KEY, measure);","306","","307","    underTest.execute();","308","","309","    Optional<Measure> rawMeasure1 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_1_KEY);","310","    assertThat(rawMeasure1.get())","311","      .hasQualityGateLevel(WARN)","312","      .hasQualityGateText(dumbResultTextAnswer(periodCondition, WARN, rawValue));","313","  }","314","","315","  @Test","316","  public void new_measure_has_condition_on_leak_period_when_all_conditions_on_specific_metric_has_same_QG_level() {","317","    int rawValue = 1;","318","    Condition fixedCondition = createEqualsCondition(INT_METRIC_1, \"1\", null);","319","    Condition periodCondition = createEqualsCondition(INT_METRIC_1, \"1\", null, 1);","320","","321","    qualityGateHolder.setQualityGate(new QualityGate(SOME_QG_ID, SOME_QG_NAME, of(fixedCondition, periodCondition)));","322","    Measure measure = newMeasureBuilder()","323","        .setVariations(newMeasureVariationsBuilder().setVariation(new Period(1, \"mode\", null, 1212, 121), rawValue).build())","324","        .create(rawValue, null);","325","    measureRepository.addRawMeasure(PROJECT_REF, INT_METRIC_1_KEY, measure);","326","","327","    underTest.execute();","328","","329","    Optional<Measure> rawMeasure1 = measureRepository.getAddedRawMeasure(PROJECT_REF, INT_METRIC_1_KEY);","330","    assertThat(rawMeasure1.get())","331","        .hasQualityGateLevel(ERROR)","332","        .hasQualityGateText(dumbResultTextAnswer(periodCondition, ERROR, rawValue));","333","  }","334","","335","  private Measure getAlertStatusMeasure() {","336","    return measureRepository.getAddedRawMeasure(PROJECT_REF, ALERT_STATUS_KEY).get();","337","  }","338","","339","  private Optional<Measure> getQGDetailsMeasure() {","340","    return measureRepository.getAddedRawMeasure(PROJECT_REF, CoreMetrics.QUALITY_GATE_DETAILS_KEY);","341","  }","342","","347","  private static Condition createEqualsCondition(Metric metric, @Nullable String errorThreshold, @Nullable String warningThreshold, @Nullable Integer period) {","348","    return new Condition(metric, Condition.Operator.EQUALS.getDbValue(), errorThreshold, warningThreshold, period);","349","  }","350",""],"delete":["31","import org.mockito.ArgumentCaptor;","39","import org.sonar.server.computation.measure.MeasureRepository;","44","import org.sonar.server.computation.metric.MetricRepository;","57","import static org.mockito.Matchers.same;","59","import static org.mockito.Mockito.verify;","60","import static org.mockito.Mockito.verifyNoMoreInteractions;","71","  private static final ReportComponent PROJECT_COMPONENT = ReportComponent.builder(Component.Type.PROJECT, 1).build();","84","  private static final Metric ALERT_STATUS_METRIC = mock(Metric.class);","85","  private static final Metric QUALITY_GATE_DETAILS_METRIC = mock(Metric.class);","86","","87","  private ArgumentCaptor<Measure> alertStatusMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","88","  private ArgumentCaptor<Measure> qgDetailsMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","89","","90","  private MeasureRepository measureRepository = mock(MeasureRepository.class);","91","  private MetricRepository metricRepository = mock(MetricRepository.class);","100","    when(metricRepository.getByKey(CoreMetrics.ALERT_STATUS_KEY)).thenReturn(ALERT_STATUS_METRIC);","101","    when(metricRepository.getByKey(CoreMetrics.QUALITY_GATE_DETAILS_KEY)).thenReturn(QUALITY_GATE_DETAILS_METRIC);","102","","126","    verifyNoMoreInteractions(measureRepository);","135","    verifyNoMoreInteractions(measureRepository);","154","    when(measureRepository.getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1)).thenReturn(Optional.<Measure>absent());","158","    verify(measureRepository).getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1);","159","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(ALERT_STATUS_METRIC), alertStatusMeasureCaptor.capture());","160","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(QUALITY_GATE_DETAILS_METRIC), qgDetailsMeasureCaptor.capture());","161","    verifyNoMoreInteractions(measureRepository);","163","    assertThat(alertStatusMeasureCaptor.getValue())","166","    assertThat(qgDetailsMeasureCaptor.getValue())","179","    Measure rawMeasure = Measure.newMeasureBuilder().create(rawValue, null);","182","    when(measureRepository.getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1)).thenReturn(Optional.of(rawMeasure));","186","    ArgumentCaptor<Measure> equals2ConditionMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","188","    verify(measureRepository).getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1);","189","    verify(measureRepository).update(same(PROJECT_COMPONENT), same(INT_METRIC_1), equals2ConditionMeasureCaptor.capture());","190","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(ALERT_STATUS_METRIC), alertStatusMeasureCaptor.capture());","191","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(QUALITY_GATE_DETAILS_METRIC), qgDetailsMeasureCaptor.capture());","192","    verifyNoMoreInteractions(measureRepository);","193","","194","    assertThat(equals2ConditionMeasureCaptor.getValue())","197","    assertThat(alertStatusMeasureCaptor.getValue())","200","    assertThat(qgDetailsMeasureCaptor.getValue())","214","    Measure rawMeasure = Measure.newMeasureBuilder().create(rawValue, null);","217","    when(measureRepository.getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1)).thenReturn(Optional.of(rawMeasure));","218","    when(measureRepository.getRawMeasure(PROJECT_COMPONENT, INT_METRIC_2)).thenReturn(Optional.of(rawMeasure));","222","    ArgumentCaptor<Measure> equals1ErrorConditionMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","223","    ArgumentCaptor<Measure> equals1WarningConditionMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","225","    verify(measureRepository).getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1);","226","    verify(measureRepository).getRawMeasure(PROJECT_COMPONENT, INT_METRIC_2);","227","    verify(measureRepository).update(same(PROJECT_COMPONENT), same(INT_METRIC_1), equals1ErrorConditionMeasureCaptor.capture());","228","    verify(measureRepository).update(same(PROJECT_COMPONENT), same(INT_METRIC_2), equals1WarningConditionMeasureCaptor.capture());","229","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(ALERT_STATUS_METRIC), alertStatusMeasureCaptor.capture());","230","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(QUALITY_GATE_DETAILS_METRIC), qgDetailsMeasureCaptor.capture());","231","    verifyNoMoreInteractions(measureRepository);","232","","233","    assertThat(equals1ErrorConditionMeasureCaptor.getValue())","236","    assertThat(equals1WarningConditionMeasureCaptor.getValue())","239","    assertThat(alertStatusMeasureCaptor.getValue())","243","    assertThat(qgDetailsMeasureCaptor.getValue())","260","    Measure rawMeasure = Measure.newMeasureBuilder().create(rawValue, null);","263","    when(measureRepository.getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1)).thenReturn(Optional.of(rawMeasure));","264","    when(measureRepository.getRawMeasure(PROJECT_COMPONENT, INT_METRIC_2)).thenReturn(Optional.of(rawMeasure));","268","    ArgumentCaptor<Measure> equals2ConditionMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","269","    ArgumentCaptor<Measure> equals1WarningConditionMeasureCaptor = ArgumentCaptor.forClass(Measure.class);","271","    verify(measureRepository).getRawMeasure(PROJECT_COMPONENT, INT_METRIC_1);","272","    verify(measureRepository).getRawMeasure(PROJECT_COMPONENT, INT_METRIC_2);","273","    verify(measureRepository).update(same(PROJECT_COMPONENT), same(INT_METRIC_1), equals2ConditionMeasureCaptor.capture());","274","    verify(measureRepository).update(same(PROJECT_COMPONENT), same(INT_METRIC_2), equals1WarningConditionMeasureCaptor.capture());","275","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(ALERT_STATUS_METRIC), alertStatusMeasureCaptor.capture());","276","    verify(measureRepository).add(same(PROJECT_COMPONENT), same(QUALITY_GATE_DETAILS_METRIC), qgDetailsMeasureCaptor.capture());","277","    verifyNoMoreInteractions(measureRepository);","278","","279","    assertThat(equals2ConditionMeasureCaptor.getValue())","282","    assertThat(equals1WarningConditionMeasureCaptor.getValue())","285","    assertThat(alertStatusMeasureCaptor.getValue())","289","    assertThat(qgDetailsMeasureCaptor.getValue())"]}]}},"5c78e445609eaf1c6bb00b0c863623ea497237a0":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateFinder.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["40","import org.sonar.db.component.BranchType;","257","  public void quality_gate_for_a_long_living_branch() {","258","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org\"));","259","    db.qualityGates().createDefaultQualityGate(organization);","260","    ComponentDto project = db.components().insertPrivateProject(organization);","261","    ComponentDto longLivingBranch = db.components().insertProjectBranch(project, b -> b.setBranchType(BranchType.LONG));","262","    QualityGateDto qualityGateDto = db.qualityGates().insertQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","263","    db.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","264","    userSession.addProjectPermission(UserRole.USER, project);","265","    init();","266","","267","    String json = ws.newRequest()","268","      .setParam(\"componentKey\", longLivingBranch.getKey())","269","      .setParam(\"branch\", longLivingBranch.getBranch())","270","      .execute()","271","      .getInput();","272","","273","    verify(json, \"return_quality_gate.json\");","274","  }","275","","276","  @Test","610","  private void verify(String json, String jsonFile) {","611","    assertJson(json).isSimilarTo(getClass().getResource(ComponentActionTest.class.getSimpleName() + \"\/\" + jsonFile));"],"delete":["589","  private void verify(String json, String expectedJson) {","590","    assertJson(json).isSimilarTo(getClass().getResource(ComponentActionTest.class.getSimpleName() + \"\/\" + expectedJson));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["108","    NewAction action = context.createAction(\"component\")","118","    action.createParam(PARAM_COMPONENT)","123","    action","129","    action","143","      ComponentDto project = component.getMainBranchProjectUuid() == null ? component : componentFinder.getByUuid(session, component.getMainBranchProjectUuid());","156","      writeQualityGate(json, session, org, project);"],"delete":["108","    NewAction projectNavigation = context.createAction(\"component\")","118","    projectNavigation.createParam(PARAM_COMPONENT)","123","    projectNavigation","129","    projectNavigation","155","      writeQualityGate(json, session, org, component);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateFinder.java":[{"add":["45","   * It will first try to get the quality gate explicitly defined on a project, if none it will try to return default quality gate of the organization"],"delete":["45","   * It will first try to get the quality gate explicitly defined on a project, if none it will try to return default quality gate ofI the organization"]}]}},"14fde3c0c46e717ac44a0b482f21f82149e2e837":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":[{"add":["101","  private ProjectLock lock;","111","    lock = getComponentByType(ProjectLock.class);","112","    lock.tryLock();"],"delete":["110","    getComponentByType(ProjectLock.class).tryLock();","127","      ProjectLock lock = getComponentByType(ProjectLock.class);"]}]}},"ab64e97deecaf047d85debdd1ba669e1d4071d51":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/Duplications.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/QualityGate.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/types.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/__tests__\/QualityGateCondition-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/shared\/drilldown-link.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/Coverage.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/QualityGateCondition.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/QualityGateConditions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/__tests__\/__snapshots__\/QualityGateCondition-test.js.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/Duplications.js":[{"add":["82","          <DrilldownLink component={component.key} metric={newDuplicationsMeasure.metric.key}>","96","            metric={newLinesMeasure.metric.key}>"],"delete":["82","          <DrilldownLink","83","            component={component.key}","84","            metric={newDuplicationsMeasure.metric.key}","85","            period={leakPeriod.index}>","99","            metric={newLinesMeasure.metric.key}","100","            period={leakPeriod.index}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/QualityGate.js":[{"add":["19","\/\/@flow","25","import type { Component, MeasuresList } from '..\/types';","27","function parseQualityGateDetails(rawDetails: string) {","31","function isProject(component: Component) {","35","type Props = {","36","  component: Component,","37","  measures: MeasuresList","38","};","39","","40","export default function QualityGate({ component, measures }: Props) {","51","  if (detailsMeasure && detailsMeasure.value) {","63","        <QualityGateConditions component={component} conditions={conditions} \/>}","66","}"],"delete":["22","import { ComponentType, MeasuresListType, PeriodsListType } from '..\/propTypes';","26","function parseQualityGateDetails(rawDetails) {","30","function isProject(component) {","34","const QualityGate = ({ component, measures, periods }) => {","45","  if (detailsMeasure) {","57","        <QualityGateConditions component={component} periods={periods} conditions={conditions} \/>}","60","};","61","","62","QualityGate.propTypes = {","63","  component: ComponentType.isRequired,","64","  measures: MeasuresListType.isRequired,","65","  periods: PeriodsListType.isRequired","66","};","67","","68","export default QualityGate;"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/types.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/__tests__\/QualityGateCondition-test.js":[{"add":["39","const periods = [{ value: '3', index: 1 }];","40","","58","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","73","      periods: [{ value: '10', index: 1 }],","77","    op: 'GT',","78","    period: 1","81","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","88","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","95","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","102","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","108","  condition.period = 1;","109","  condition.measure.periods = periods;","111","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","117","  condition.period = 1;","118","  condition.measure.periods = periods;","120","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)","126","  condition.period = 1;","127","  condition.measure.periods = periods;","129","    shallow(<QualityGateCondition component={{ key: 'abcd-key' }} condition={condition} \/>)"],"delete":["56","    shallow(","57","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","58","    )","76","    op: 'GT'","79","    shallow(","80","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","81","    )","88","    shallow(","89","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","90","    )","97","    shallow(","98","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","99","    )","106","    shallow(","107","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","108","    )","115","    shallow(","116","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","117","    )","124","    shallow(","125","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","126","    )","133","    shallow(","134","      <QualityGateCondition component={{ key: 'abcd-key' }} periods={[]} condition={condition} \/>","135","    )"]}],"server\/sonar-web\/src\/main\/js\/components\/shared\/drilldown-link.js":[{"add":["49","  static propTypes = {","50","    children: React.PropTypes.oneOfType([","51","      React.PropTypes.node,","52","      React.PropTypes.arrayOf(React.PropTypes.node)","53","    ]),","54","    className: React.PropTypes.string,","55","    component: React.PropTypes.string.isRequired,","56","    metric: React.PropTypes.string.isRequired,","57","    sinceLeakPeriod: React.PropTypes.bool","58","  };","66","    if (this.props.sinceLeakPeriod) {","67","      params.sinceLeakPeriod = true;"],"delete":["19","import moment from 'moment';","57","    if (this.props.periodDate) {","58","      params.createdAfter = moment(this.props.periodDate).format('YYYY-MM-DDTHH:mm:ssZZ');"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/Coverage.js":[{"add":["98","          <DrilldownLink component={component.key} metric={newCoverageMeasure.metric.key}>","112","            metric={newLinesToCover.metric.key}>"],"delete":["98","          <DrilldownLink","99","            component={component.key}","100","            metric={newCoverageMeasure.metric.key}","101","            period={leakPeriod.index}>","115","            metric={newLinesToCover.metric.key}","116","            period={leakPeriod.index}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/OverviewApp.js":[{"add":["163","            <QualityGate component={component} measures={measures} \/>"],"delete":["163","            <QualityGate component={component} measures={measures} periods={periods} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/QualityGateCondition.js":[{"add":["29","import type { Component } from '..\/types';","33","    component: Component,","90","    const { component, condition } = this.props;","95","      { 'overview-quality-gate-condition-leak': condition.period != null }","117","          sinceLeakPeriod={condition.period != null}>","123","    const { condition } = this.props;","151","            condition.period != null &&"],"delete":["27","import { getPeriod, getPeriodDate } from '..\/..\/..\/helpers\/periods';","33","    component: { key: string },","34","    periods: Array<{","35","      index: number,","36","      date: string,","37","      mode: string,","38","      parameter?: string","39","    }>,","96","    const { component, periods, condition } = this.props;","97","","98","    const period = getPeriod(periods, condition.period);","99","    const periodDate = getPeriodDate(period);","104","      { 'overview-quality-gate-condition-leak': period != null }","126","          period={condition.period}","127","          periodDate={periodDate}>","133","    const { periods, condition } = this.props;","144","    const period = getPeriod(periods, condition.period);","162","            period != null &&"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/QualityGateConditions.js":[{"add":["83","    const { component } = this.props;"],"delete":["83","    const { component, periods } = this.props;","104","            periods={periods}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/__tests__\/__snapshots__\/QualityGateCondition-test.js.snap":[{"add":["4","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error overview-quality-gate-condition-leak\"","7","  sinceLeakPeriod={true}","55","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error overview-quality-gate-condition-leak\"","117","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error overview-quality-gate-condition-leak\"","179","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error overview-quality-gate-condition-leak\"","243","  sinceLeakPeriod={false}"],"delete":["4","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error\"","7","  periodDate={null}","55","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error\"","117","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error\"","179","  className=\"overview-quality-gate-condition overview-quality-gate-condition-error\"","243","  periodDate={null}"]}]}},"b8a687d4de61a78ba5529ad5554b7a10b10dc674":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissionsTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissions.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissionsTest.java":[{"add":["56","  public void execute_makes_project_private_if_Anyone_has_only_user_permission_and_project_has_at_least_one_other_group_permission() throws SQLException {","58","    insertGroupPermission(ROLE_USER, pId1, null);","59","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","67","  public void execute_makes_project_private_if_Anyone_has_only_user_permission_and_project_has_one_user_permission() throws SQLException {","69","    insertGroupPermission(ROLE_USER, pId1, null);","70","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","78","  public void execute_keeps_project_public_if_Anyone_has_only_user_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","88","  public void execute_makes_project_private_if_Anyone_has_only_codeviewer_permission_and_project_has_one_other_group_permission() throws SQLException {","89","    long pId1 = insertRootComponent(\"p1\", false);","90","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","91","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","92","","93","    underTest.execute();","94","","95","    assertThat(isPrivate(\"p1\")).isTrue();","96","  }","97","","98","  @Test","99","  public void execute_makes_project_private_if_Anyone_has_only_codeviewer_permission_and_project_has_one_user_permission() throws SQLException {","100","    long pId1 = insertRootComponent(\"p1\", false);","101","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","102","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","103","","104","    underTest.execute();","105","","106","    assertThat(isPrivate(\"p1\")).isTrue();","107","  }","108","","109","  @Test","110","  public void execute_keeps_project_public_if_Anyone_has_only_codeviewer_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","120","  public void execute_makes_project_private_if_Anyone_has_neither_user_nor_codeviewer_permission_and_project_has_one_other_group_permission() throws SQLException {","123","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","124","","125","    underTest.execute();","126","","127","    assertThat(isPrivate(\"p1\")).isTrue();","128","  }","129","","130","  @Test","131","  public void execute_makes_project_private_if_Anyone_has_neither_user_nor_codeviewer_permission_and_project_has_one_user_permission() throws SQLException {","132","    long pId1 = insertRootComponent(\"p1\", false);","133","    insertGroupPermission(randomRole, pId1, null);","134","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","135","","136","    underTest.execute();","137","","138","    assertThat(isPrivate(\"p1\")).isTrue();","139","  }","140","","141","  @Test","142","  public void execute_keeps_project_public_if_Anyone_has_neither_user_nor_codeviewer_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","143","    long pId1 = insertRootComponent(\"p1\", false);","144","    insertGroupPermission(\"foo\", pId1, null);","152","  public void execute_keeps_project_public_if_Anyone_has_both_user_and_codeviewer_permission_and_project_has_one_other_group_permission() throws SQLException {","153","    long pId1 = insertRootComponent(\"p1\", false);","154","    insertGroupPermission(ROLE_USER, pId1, null);","155","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","156","    insertGroupPermission(\"foo\", pId1, random.nextInt(10));","157","","158","    underTest.execute();","159","","160","    assertThat(isPrivate(\"p1\")).isFalse();","161","  }","162","","163","  @Test","164","  public void execute_keeps_project_public_if_Anyone_has_both_user_and_codeviewer_permission_and_project_has_user_permission() throws SQLException {","165","    long pId1 = insertRootComponent(\"p1\", false);","166","    insertGroupPermission(ROLE_USER, pId1, null);","167","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","168","    insertUserPermission(\"foo\", pId1, random.nextInt(10));","169","","170","    underTest.execute();","171","","172","    assertThat(isPrivate(\"p1\")).isFalse();","173","  }","174","","175","  @Test","176","  public void execute_keeps_project_public_if_Anyone_has_both_user_and_codeviewer_permission_and_project_has_no_user_nor_other_group_permission() throws SQLException {","177","    long pId1 = insertRootComponent(\"p1\", false);","178","    insertGroupPermission(ROLE_USER, pId1, null);","179","    insertGroupPermission(ROLE_CODEVIEWER, pId1, null);","180","","181","    underTest.execute();","182","","183","    assertThat(isPrivate(\"p1\")).isFalse();","184","  }","185","","186","  @Test","187","  public void execute_keeps_project_public_if_it_has_no_user_nor_group_permission_at_all() throws SQLException {","196","  public void execute_does_not_change_private_projects_to_public_when_they_actually_should_be() throws SQLException {","197","    long p1Id = insertRootComponent(\"p1\", true); \/\/ both user and codeviewer","198","    long p2Id = insertRootComponent(\"p2\", true); \/\/ only user but no other permission","199","    long p3Id = insertRootComponent(\"p3\", true); \/\/ only codeviewer but no other permission","200","    long p4Id = insertRootComponent(\"p4\", true); \/\/ neither codeviewer nor user but no other permission","205","    insertGroupPermission(randomRole, p4Id, null);","212","    assertThat(isPrivate(\"p4\")).isTrue();"],"delete":["48","  private final int randomUserId = random.nextInt(500);","49","  private final int randomGroupId = random.nextInt(500);","58","  public void execute_makes_project_private_if_group_AnyOne_has_global_permission_USER() throws SQLException {","59","    long pId = insertRootComponent(\"p1\", false);","60","    insertGroupPermission(ROLE_USER, null, null);","61","    insertGroupPermission(randomRole, pId, randomGroupId);","62","","63","    underTest.execute();","64","","65","    assertThat(isPrivate(\"p1\")).isTrue();","66","  }","67","","68","  @Test","69","  public void execute_makes_project_private_if_group_AnyOne_has_global_permission_BROWSE() throws SQLException {","70","    long pId = insertRootComponent(\"p1\", false);","71","    insertGroupPermission(ROLE_CODEVIEWER, null, null);","72","    insertUserPermission(randomRole, pId, randomUserId);","73","","74","    underTest.execute();","75","","76","    assertThat(isPrivate(\"p1\")).isTrue();","77","  }","78","","79","  @Test","80","  public void execute_makes_project_private_if_group_other_than_AnyOne_has_permission_BROWSE_on_other_project() throws SQLException {","82","    insertGroupPermission(ROLE_CODEVIEWER, pId1, random.nextInt(30));","90","  public void execute_makes_project_private_if_group_other_than_AnyOne_has_permission_USER_on_other_project() throws SQLException {","92","    insertGroupPermission(ROLE_USER, pId1, random.nextInt(30));","100","  public void execute_keeps_project_public_if_group_AnyOne_has_permission_USER_on_it() throws SQLException {","110","  public void execute_keeps_project_public_if_group_AnyOne_has_permission_BROWSE_on_it() throws SQLException {","120","  public void execute_keeps_project_public_if_only_group_AnyOne_has_permission_on_it() throws SQLException {","130","  public void execute_keeps_project_public_if_project_has_no_permission() throws SQLException {","139","  public void execute_does_not_change_private_projects_to_public_when_they_actually_should_be_because_they_have_USER_or_BROWSE_on_group_Anyone() throws SQLException {","140","    long p1Id = insertRootComponent(\"p1\", true);","141","    long p2Id = insertRootComponent(\"p2\", true);","142","    long p3Id = insertRootComponent(\"p3\", true);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/MakeComponentsPrivateBasedOnPermissions.java":[{"add":["70","      \" and (\" +","71","      \"   not exists (\" +","72","      \"     select\" +","73","      \"       1\" +","74","      \"     from group_roles gr\" +","75","      \"     where \" +","76","      \"       gr.resource_id = p.id\" +","77","      \"       and gr.group_id is null\" +","78","      \"       and gr.role = ?\" +","79","      \"   ) \" +","80","      \"   or not exists (\" +","81","      \"     select\" +","82","      \"       1\" +","83","      \"     from group_roles gr\" +","84","      \"     where \" +","85","      \"       gr.resource_id = p.id\" +","86","      \"       and gr.group_id is null\" +","87","      \"       and gr.role = ?\" +","88","      \"   )\" +"],"delete":["70","      \" and not exists (\" +","71","      \"   select\" +","72","      \"     1\" +","73","      \"   from group_roles gr\" +","74","      \"   where \" +","75","      \"     gr.resource_id = p.id\" +","76","      \"     and gr.group_id is null\" +","77","      \"     and gr.role in (?, ?)\" +"]}]}},"4a5eaf2240d43f26441b0028ebd7e753ade22293":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/TrackedIssue.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/StatusDetection.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/IssueTransformer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issuesmode\/ScanOnlyChangedTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositories.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/LocalIssueTracking.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/TrackedIssue.java":[{"add":["26","","84","  \/**","85","   * Component key shared by all part of SonarQube (batch, server, WS...). ","86","   * It doesn't include the branch.","87","   *\/","92","  \/**","93","   * Component key shared by all part of SonarQube (batch, server, WS...). ","94","   * It doesn't include the branch.","95","   *\/"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/StatusDetection.java":[{"add":["34","  InputFile.Status status(String projectKeyWithBranch, String relativePath, String hash) {","35","    FileData fileDataPerPath = projectSettings.fileData(projectKeyWithBranch, relativePath);"],"delete":["34","  InputFile.Status status(String projectKey, String relativePath, String hash) {","35","    FileData fileDataPerPath = projectSettings.fileData(projectKey, relativePath);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/IssueTransformer.java":[{"add":["43","  public static TrackedIssue toTrackedIssue(ServerIssue serverIssue, String componentKey) {","53","    \/\/ key in serverIssue might have branch, so don't use it","54","    issue.setComponentKey(componentKey);"],"delete":["31","import org.sonar.core.component.ComponentKeys;","44","  public static TrackedIssue toTrackedIssue(ServerIssue serverIssue) {","54","    issue.setComponentKey(ComponentKeys.createEffectiveKey(serverIssue.getModuleKey(), serverIssue.hasPath() ? serverIssue.getPath() : null));"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issuesmode\/ScanOnlyChangedTest.java":[{"add":["32","import java.util.Arrays;","33","import java.util.Collection;","41","import org.junit.Rule;","44","import org.junit.runner.RunWith;","45","import org.junit.runners.Parameterized;","46","import org.junit.runners.Parameterized.Parameter;","47","import org.junit.runners.Parameterized.Parameters;","54","import org.sonar.scanner.mediumtest.ScannerMediumTester.TaskBuilder;","63","@RunWith(Parameterized.class)","67","  \/*","68","   * Run with branch too to reproduce SONAR-9141 and SONAR-9160","69","   *\/","70","  @Parameters(name = \"branch enabled:{0} projectKey: {1}\")","71","  public static Collection<Object[]> data() {","72","    return Arrays.asList(new Object[][] {","73","      {false, \"sample\"}, {true, \"sample:branch\"}, {false, \"sample:project\"}","74","    });","77","  @Parameter(0)","78","  public boolean branch;","79","","80","  @Parameter(1)","81","  public String projectKey;","82","","83","  @Rule","84","  public TemporaryFolder temp = new TemporaryFolder();","85","","86","  @Rule","87","  public LogTester logTester = new LogTester();","88","","89","  private ScannerMediumTester tester;","90","","95","    String md5sum = new FileMetadata()","108","      .addFileData(projectKey, filePath, new FileData(md5sum, null))","112","        .setModuleKey(projectKey)","125","        .setModuleKey(projectKey)","152","    TaskBuilder taskBuilder = tester","154","      .property(\"sonar.report.export.path\", \"report.json\");","155","    if (branch) {","156","      taskBuilder.property(\"sonar.branch\", \"branch\");","157","    } else {","158","      taskBuilder.property(\"sonar.projectKey\", projectKey);","159","    }","161","    TaskResult result = taskBuilder.start();","176","  @Test","177","  public void testScanAll() throws Exception {","178","    File projectDir = copyProject(\"\/mediumtest\/xoo\/sample\");","179","","180","    TaskBuilder taskBuilder = tester","181","      .newScanTask(new File(projectDir, \"sonar-project.properties\"))","182","      .property(\"sonar.scanAllFiles\", \"true\");","183","    if (branch) {","184","      taskBuilder.property(\"sonar.branch\", \"branch\");","185","    } else {","186","      taskBuilder.property(\"sonar.projectKey\", projectKey);","187","    }","188","","189","    TaskResult result = taskBuilder.start();","190","","191","    assertNumberIssues(result, 16, 2, 0);","192","","193","    \/*","194","     * 8 new per line","195","     *\/","196","    assertNumberIssuesOnFile(result, \"HelloJava.xoo\", 8);","197","  }","198","","230","","231","  private static Long date(String date) {","232","    try {","233","      return sdf.parse(date).getTime();","234","    } catch (ParseException e) {","235","      throw new IllegalStateException(e);","236","    }","237","  }"],"delete":["56","  @org.junit.Rule","57","  public TemporaryFolder temp = new TemporaryFolder();","58","","59","  @org.junit.Rule","60","  public LogTester logTester = new LogTester();","61","","64","  private ScannerMediumTester tester;","65","","66","  private static Long date(String date) {","67","    try {","68","      return sdf.parse(date).getTime();","69","    } catch (ParseException e) {","70","      throw new IllegalStateException(e);","71","    }","78","    String hash = new FileMetadata()","91","      .addFileData(\"sample\", filePath, new FileData(hash, null))","95","        .setModuleKey(\"sample\")","108","        .setModuleKey(\"sample\")","132","  public void testScanAll() throws Exception {","133","    File projectDir = copyProject(\"\/mediumtest\/xoo\/sample\");","134","","135","    TaskResult result = tester","136","      .newScanTask(new File(projectDir, \"sonar-project.properties\"))","137","      .property(\"sonar.scanAllFiles\", \"true\")","138","      .start();","139","","140","    assertNumberIssues(result, 16, 2, 0);","141","","142","    \/*","143","     * 8 new per line","144","     *\/","145","    assertNumberIssuesOnFile(result, \"HelloJava.xoo\", 8);","146","  }","147","","148","  @Test","152","    TaskResult result = tester","154","      .start();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositories.java":[{"add":["70","  public FileData fileData(String projectKeyWithBranch, String path) {","71","    return fileDataByModuleAndPath.get(projectKeyWithBranch, path);"],"delete":["70","  public FileData fileData(String projectKey, String path) {","71","    return fileDataByModuleAndPath.get(projectKey, path);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/LocalIssueTracking.java":[{"add":["86","        copyServerIssues(serverIssues, trackedIssues, component.key());","97","        addUnmatchedFromServer(track.getUnmatchedBases(), trackedIssues, component.key());","106","      addIssuesOnDeletedComponents(trackedIssues, component.key());","145","  private void copyServerIssues(Collection<ServerIssueFromWs> serverIssues, List<TrackedIssue> trackedIssues, String componentKey) {","148","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue, componentKey);","207","  private void addUnmatchedFromServer(Iterable<ServerIssueFromWs> unmatchedIssues, Collection<TrackedIssue> mergeTo, String componentKey) {","210","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue, componentKey);","223","  private void addIssuesOnDeletedComponents(Collection<TrackedIssue> issues, String componentKey) {","225","      TrackedIssue dead = IssueTransformer.toTrackedIssue(previous, componentKey);"],"delete":["86","        copyServerIssues(serverIssues, trackedIssues);","97","        addUnmatchedFromServer(track.getUnmatchedBases(), trackedIssues);","106","      addIssuesOnDeletedComponents(trackedIssues);","145","  private void copyServerIssues(Collection<ServerIssueFromWs> serverIssues, List<TrackedIssue> trackedIssues) {","148","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue);","207","  private void addUnmatchedFromServer(Iterable<ServerIssueFromWs> unmatchedIssues, Collection<TrackedIssue> mergeTo) {","210","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue);","223","  private void addIssuesOnDeletedComponents(Collection<TrackedIssue> issues) {","225","      TrackedIssue dead = IssueTransformer.toTrackedIssue(previous);"]}]}},"96d7b49621a21e4e9b3eb3c03255f64e1d99fd4d":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/OrganizationDetailsStep.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/CreateWebhookForm.tsx":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/__tests__\/urls-test.ts":[{"add":["25","  getQualityGateUrl"],"delete":["25","  getQualityGateUrl,","26","  isUrl","120","","121","describe('#isUrl', () => {","122","  it('should be valid', () => {","123","    expect(isUrl('https:\/\/localhost')).toBeTruthy();","124","    expect(isUrl('https:\/\/localhost\/')).toBeTruthy();","125","    expect(isUrl('https:\/\/localhost:9000')).toBeTruthy();","126","    expect(isUrl('https:\/\/localhost:9000\/')).toBeTruthy();","127","    expect(isUrl('https:\/\/foo:bar@localhost:9000')).toBeTruthy();","128","    expect(isUrl('https:\/\/foo@localhost')).toBeTruthy();","129","    expect(isUrl('http:\/\/foo.com\/blah_blah')).toBeTruthy();","130","    expect(isUrl('http:\/\/foo.com\/blah_blah\/')).toBeTruthy();","131","    expect(isUrl('http:\/\/www.example.com\/wpstyle\/?p=364')).toBeTruthy();","132","    expect(isUrl('https:\/\/www.example.com\/foo\/?bar=baz&inga=42&quux')).toBeTruthy();","133","    expect(isUrl('http:\/\/userid@example.com')).toBeTruthy();","134","    expect(isUrl('http:\/\/userid@example.com\/')).toBeTruthy();","135","    expect(isUrl('http:\/\/userid:password@example.com:8080')).toBeTruthy();","136","    expect(isUrl('http:\/\/userid:password@example.com:8080\/')).toBeTruthy();","137","    expect(isUrl('http:\/\/userid@example.com:8080')).toBeTruthy();","138","    expect(isUrl('http:\/\/userid@example.com:8080\/')).toBeTruthy();","139","    expect(isUrl('http:\/\/userid:password@example.com')).toBeTruthy();","140","    expect(isUrl('http:\/\/userid:password@example.com\/')).toBeTruthy();","141","    expect(isUrl('http:\/\/142.42.1.1\/')).toBeTruthy();","142","    expect(isUrl('http:\/\/142.42.1.1:8080\/')).toBeTruthy();","143","    expect(isUrl('http:\/\/foo.com\/blah_(wikipedia)#cite-1')).toBeTruthy();","144","    expect(isUrl('http:\/\/foo.com\/blah_(wikipedia)_blah#cite-1')).toBeTruthy();","145","    expect(isUrl('http:\/\/foo.com\/(something)?after=parens')).toBeTruthy();","146","    expect(isUrl('http:\/\/code.google.com\/events\/#&product=browser')).toBeTruthy();","147","    expect(isUrl('http:\/\/j.mp')).toBeTruthy();","148","    expect(isUrl('http:\/\/foo.bar\/?q=Test%20URL-encoded%20stuff')).toBeTruthy();","149","    expect(isUrl('http:\/\/1337.net')).toBeTruthy();","150","    expect(isUrl('http:\/\/a.b-c.de')).toBeTruthy();","151","    expect(isUrl('http:\/\/223.255.255.254')).toBeTruthy();","152","    expect(isUrl('https:\/\/foo_bar.example.com\/')).toBeTruthy();","153","  });","154","","155","  it('should not be valid', () => {","156","    expect(isUrl('http:\/\/')).toBeFalsy();","157","    expect(isUrl('http:\/\/?')).toBeFalsy();","158","    expect(isUrl('http:\/\/??')).toBeFalsy();","159","    expect(isUrl('http:\/\/??\/')).toBeFalsy();","160","    expect(isUrl('http:\/\/#')).toBeFalsy();","161","    expect(isUrl('http:\/\/##')).toBeFalsy();","162","    expect(isUrl('http:\/\/##\/')).toBeFalsy();","163","    expect(isUrl('\/\/')).toBeFalsy();","164","    expect(isUrl('\/\/\/')).toBeFalsy();","165","    expect(isUrl('http:\/\/ shouldfail.com')).toBeFalsy();","166","  });","167","});"]}],"server\/sonar-web\/src\/main\/js\/helpers\/urls.ts":[{"add":[],"delete":["254","","255","export function isUrl(url: string) {","256","  try {","257","    const elem = document.createElement('a');","258","    elem.href = url;","259","    return !!(elem.host && elem.hostname && elem.protocol);","260","  } catch (error) {","261","    \/\/ both IE11 & Edge throw an exception when a url contains credentials","262","    \/\/ is this case let's just pretend the url is fine and pass it to the server for the validation","263","    return true;","264","  }","265","}"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/OrganizationDetailsStep.tsx":[{"add":["20","import { isWebUri } from 'valid-url';","82","    if (avatar.length > 0 && !isWebUri(avatar)) {","94","    if (url.length > 0 && !isWebUri(url)) {"],"delete":["27","import { isUrl } from '..\/..\/..\/helpers\/urls';","82","    if (avatar.length > 0 && !isUrl(avatar)) {","94","    if (url.length > 0 && !isUrl(url)) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/CreateWebhookForm.tsx":[{"add":["21","import { isWebUri } from 'valid-url';","55","    } else if (!isWebUri(url)) {"],"delete":["24","import { isUrl } from '..\/..\/..\/helpers\/urls';","55","    } else if (!isUrl(url)) {"]}],"server\/sonar-web\/package.json":[{"add":["45","    \"valid-url\": \"1.0.9\",","80","    \"@types\/valid-url\": \"1.0.2\","],"delete":[]}],"server\/sonar-web\/yarn.lock":[{"add":["896","\"@types\/valid-url@1.0.2\":","897","  version \"1.0.2\"","898","  resolved \"http:\/\/registry.npmjs.org\/@types\/valid-url\/-\/valid-url-1.0.2.tgz#60fa435ce24bfd5ba107b8d2a80796aeaf3a8f45\"","899","  integrity sha1-YPpDXOJL\/VuhB7jSqAeWrq86j0U=","900","","10192","valid-url@1.0.9:","10193","  version \"1.0.9\"","10194","  resolved \"https:\/\/registry.yarnpkg.com\/valid-url\/-\/valid-url-1.0.9.tgz#1c14479b40f1397a75782f115e4086447433a200\"","10195","  integrity sha1-HBRHm0DxOXp1eC8RXkCGRHQzogA=","10196",""],"delete":[]}]}},"aa838eba54111b32b619f75e6adb9e1a6c44e9ad":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/App.tsx":[{"add":["58","      .then(this.finishLoading, () => {});"],"delete":["58","      .then(this.finishLoading, this.finishLoading);"]}]}},"2542ddd092f5910aed39895a1b3061148aa8e03f":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":"MODIFY","server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":"MODIFY","server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilderTest.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsLogging.java":[{"add":["33","  private static final String ALL_LOGS_TO_CONSOLE_PROPERTY = \"sonar.log.console\";","42","    if (isAllLogsToConsoleEnabled(props)) {","43","      log4JPropertiesBuilder.configureGlobalStdoutLog(config, logPattern);","44","    }","53","","54","  \/**","55","   * Finds out whether we are in testing environment (usually ITs) and logs of all processes must be forward to","56","   * App's System.out. This is specified by the value of property {@link #ALL_LOGS_TO_CONSOLE_PROPERTY}.","57","   *\/","58","  private static boolean isAllLogsToConsoleEnabled(Props props) {","59","    return props.valueAsBoolean(ALL_LOGS_TO_CONSOLE_PROPERTY, false);","60","  }"],"delete":[]}],"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilder.java":[{"add":["89","    FileAppender appender = new FileAppender(appenderName, rollingPolicy, logPattern);","90","    appender.writeAppenderProperties();","91","    return appender.getAppenderRef();","92","  }","93","","94","  public void configureGlobalStdoutLog(RootLoggerConfig config, String logPattern) {","95","    String appenderRef = writeStdoutAppender(config, logPattern);","96","","97","    putProperty(ROOT_LOGGER_NAME + \".appenderRef.\" + appenderRef + \".ref\", appenderRef);","98","  }","99","","100","  private String writeStdoutAppender(RootLoggerConfig config, String logPattern) {","101","    String appenderName = \"stdout\";","102","    ConsoleAppender appender = new ConsoleAppender(appenderName, logPattern);","168","  private class FileAppender {","174","    private FileAppender(String appenderName, RollingPolicy rollingPolicy, String logPattern) {","198","  private class ConsoleAppender {","199","    private final String prefix;","200","    private final String appenderName;","201","    private final String logPattern;","202","","203","    private ConsoleAppender(String appenderName, String logPattern) {","204","      this.prefix = \"appender.\" + appenderName + \".\";","205","      this.appenderName = appenderName;","206","      this.logPattern = logPattern;","207","    }","208","","209","    void writeAppenderProperties() {","210","      put(\"type\", \"Console\");","211","      put(\"name\", appenderName);","212","      put(\"layout.type\", \"PatternLayout\");","213","      put(\"layout.pattern\", logPattern);","214","    }","215","","216","    void put(String key, String value) {","217","      Log4JPropertiesBuilder.this.putProperty(this.prefix + key, value);","218","    }","219","","220","    String getAppenderRef() {","221","      return appenderName;","222","    }","223","  }","224",""],"delete":["89","    Appender appender = new Appender(appenderName, rollingPolicy, logPattern);","155","  private class Appender {","161","    private Appender(String appenderName, RollingPolicy rollingPolicy, String logPattern) {"]}],"server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/logging\/Log4JPropertiesBuilderTest.java":[{"add":["264","    verifyProperties(underTest.get(),","274","  public void name() {","275","    String logPattern = randomAlphanumeric(15);","276","    Log4JPropertiesBuilder underTest = newLog4JPropertiesBuilder();","277","    underTest.configureGlobalStdoutLog(esRootLoggerConfig, logPattern);","278","","279","    verifyProperties(underTest.get(),","280","      \"appender.stdout.type\", \"Console\",","281","      \"appender.stdout.name\", \"stdout\",","282","      \"appender.stdout.layout.type\", \"PatternLayout\",","283","      \"appender.stdout.layout.pattern\", logPattern,","284","      \"rootLogger.appenderRef.stdout.ref\", \"stdout\");","285","  }","286","","287","  @Test","492","    verifyProperties(builder.get(),","516","    verifyProperties(builder.get(),","531","  private void verifyProperties(Properties properties, String... expectedPropertyKeysAndValuesOrdered) {"],"delete":["264","    verifyPropertiesForConfigureGlobalFileLog(underTest.get(),","478","    verifyPropertiesForConfigureGlobalFileLog(builder.get(),","502","    verifyPropertiesForConfigureGlobalFileLog(builder.get(),","517","  private void verifyPropertiesForConfigureGlobalFileLog(Properties properties, String... expectedPropertyKeysAndValuesOrdered) {"]}]}},"dda0900b46b558e6cfe0479552852fc5c9456a22":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/App-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/App.tsx":[{"add":["28","import { SubComponent } from '..\/types';","29","import { PORTFOLIO_METRICS, SUB_COMPONENTS_METRICS, convertMeasures } from '..\/utils';","33","import '..\/styles.css';","77","      getChildren(this.props.component.key, SUB_COMPONENTS_METRICS, { ps: 20, s: 'qualifier' })","100","  isEmpty = () => !this.state.measures || !this.state.measures['ncloc'];","102","  isNotComputed = () => this.state.measures && !this.state.measures['reliability_rating'];","152","        {subComponents !== undefined &&","153","        totalSubComponents !== undefined && ("],"delete":["30","import { PORTFOLIO_METRICS, SUB_COMPONENTS_METRICS, convertMeasures } from '..\/utils';","31","import { SubComponent } from '..\/types';","32","import '..\/styles.css';","77","      getChildren(this.props.component.key, SUB_COMPONENTS_METRICS, { ps: 20 })","100","  isEmpty = () => this.state.measures == undefined || this.state.measures['ncloc'] == undefined;","102","  isNotComputed = () =>","103","    this.state.measures && this.state.measures['reliability_rating'] == undefined;","153","        {subComponents != undefined &&","154","        totalSubComponents != undefined && ("]}],"server\/sonar-web\/src\/main\/js\/apps\/portfolio\/components\/__tests__\/App-test.tsx":[{"add":["103","    { ps: 20, s: 'qualifier' }"],"delete":["103","    { ps: 20 }"]}]}},"d835fdaa1d594451b554af805db9869134c716df":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectBranches\/components\/SettingForm.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaGradle-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/ClangGCC.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/MSBuildScanner-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/ActivationFormModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/helpers\/testMocks.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/MSBuildScanner.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsDescription.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleDetailsParameters-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/DotNet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Msvc.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/charts\/__tests__\/TreeMap-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/SQScanner-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsParameters.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/BuildWrapper-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Other-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaMaven.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/ClangGCC-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/BuildWrapper.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/SQScanner.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleDetailsParameters-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/SubCategoryDefinitionsList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchShowMore-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaGradle.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.tsx":"MODIFY","server\/sonar-docs\/src\/templates\/page.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchShowMore.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/DotNet-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/charts\/TreeMapRect.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/CustomRuleFormModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaMaven-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/GenerateSecretKeyForm.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Other.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Msvc-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectBranches\/components\/SettingForm.tsx":[{"add":["23","import { sanitizeTranslation } from '..\/..\/settings\/utils';","99","            dangerouslySetInnerHTML={{","100","              __html: sanitizeTranslation(translate(`property.${setting.key}.description`))","101","            }}"],"delete":["98","            dangerouslySetInnerHTML={{ __html: translate(`property.${setting.key}.description`) }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaGradle-test.tsx.snap":[{"add":["37","  >","38","    <FormattedMessage","39","      defaultMessage=\"onboarding.analysis.docs\"","40","      id=\"onboarding.analysis.docs\"","41","      values={","42","        Object {","43","          \"link\": <a","44","            href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","45","            rel=\"noopener noreferrer\"","46","            target=\"_blank\"","47","          >","48","            onboarding.analysis.java.gradle.docs_link","49","          <\/a>,","50","        }","52","    \/>","53","  <\/p>","56","  >","57","    onboarding.analysis.browse_url_after_analysis","58","  <\/p>","97","  >","98","    <FormattedMessage","99","      defaultMessage=\"onboarding.analysis.docs\"","100","      id=\"onboarding.analysis.docs\"","101","      values={","102","        Object {","103","          \"link\": <a","104","            href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","105","            rel=\"noopener noreferrer\"","106","            target=\"_blank\"","107","          >","108","            onboarding.analysis.java.gradle.docs_link","109","          <\/a>,","110","        }","112","    \/>","113","  <\/p>","116","  >","117","    onboarding.analysis.browse_url_after_analysis","118","  <\/p>","157","  >","158","    <FormattedMessage","159","      defaultMessage=\"onboarding.analysis.docs\"","160","      id=\"onboarding.analysis.docs\"","161","      values={","162","        Object {","163","          \"link\": <a","164","            href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","165","            rel=\"noopener noreferrer\"","166","            target=\"_blank\"","167","          >","168","            onboarding.analysis.java.gradle.docs_link","169","          <\/a>,","170","        }","172","    \/>","173","  <\/p>","176","  >","177","    onboarding.analysis.auto_refresh_after_analysis","178","  <\/p>"],"delete":["37","    dangerouslySetInnerHTML={","38","      Object {","39","        \"__html\": \"onboarding.analysis.java.gradle.docs\",","41","    }","42","  \/>","45","    dangerouslySetInnerHTML={","46","      Object {","47","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","48","      }","49","    }","50","  \/>","89","    dangerouslySetInnerHTML={","90","      Object {","91","        \"__html\": \"onboarding.analysis.java.gradle.docs\",","93","    }","94","  \/>","97","    dangerouslySetInnerHTML={","98","      Object {","99","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","100","      }","101","    }","102","  \/>","141","    dangerouslySetInnerHTML={","142","      Object {","143","        \"__html\": \"onboarding.analysis.java.gradle.docs\",","145","    }","146","  \/>","149","    dangerouslySetInnerHTML={","150","      Object {","151","        \"__html\": \"onboarding.analysis.auto_refresh_after_analysis\",","152","      }","153","    }","154","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/ClangGCC.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","66","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","70","      <p className=\"big-spacer-top markdown\">","71","        <FormattedMessage","72","          defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}","73","          id=\"onboarding.analysis.sq_scanner.docs\"","74","          values={{","75","            link: (","76","              <a","77","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","78","                rel=\"noopener noreferrer\"","79","                target=\"_blank\">","80","                {translate('onboarding.analysis.sq_scanner.docs_link')}","81","              <\/a>","82","            )","83","          }}","84","        \/>","85","      <\/p>"],"delete":["65","        {transformedMessage => (","66","          <p","67","            className=\"spacer-bottom markdown\"","68","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","69","          \/>","70","        )}","74","      <p","75","        className=\"big-spacer-top markdown\"","76","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.sq_scanner.docs') }}","77","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Domain.tsx":[{"add":["54","          \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/MSBuildScanner-test.tsx.snap":[{"add":["11","  >","12","    <FormattedMessage","13","      defaultMessage=\"onboarding.analysis.msbuild.text\"","14","      id=\"onboarding.analysis.msbuild.text\"","15","      values={","16","        Object {","17","          \"code\": <code>","18","            %PATH%","19","          <\/code>,","20","        }","22","    \/>","23","  <\/p>"],"delete":["11","    dangerouslySetInnerHTML={","12","      Object {","13","        \"__html\": \"onboarding.analysis.msbuild.text\",","15","    }","16","  \/>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["938","property.sonar.leak.period.description.intro=Period used to compare measures and track new issues. Values are:","939","property.sonar.leak.period.description.item1=Number of days before  analysis, for example 5.","940","property.sonar.leak.period.description.item2=A custom date. Format is yyyy-MM-dd, for example 2010-12-25","941","property.sonar.leak.period.description.item3='previous_version' to compare to the previous version in the project history","942","property.sonar.leak.period.description.item4=A version, for example '1.2' or 'BASELINE'","943","property.sonar.leak.period.description.details1=When specifying a number of days or a date, the snapshot selected as the baseline for comparison is the first one available inside the corresponding time range. Specifically, the first analysis in the range is considered to be before the New Code Period. ","944","property.sonar.leak.period.description.details2=Changing this property only takes effect after subsequent project analyses.","954","search.show_more.hint=Press {key} to display","2947","onboarding.analysis.docs=Please visit the {link} for more details.","2948","","2951","onboarding.analysis.java.maven.docs_link=official documentation of the Scanner for Maven","2954","onboarding.analysis.java.gradle.text.1=Running an analysis with Gradle is straighforward. You just need to declare the {plugin_code} plugin in your {filename} file:","2956","onboarding.analysis.java.gradle.docs_link=official documentation of the Scanner for Gradle","2959","onboarding.analysis.msbuild.text=And add the executable's directory to the {code} environment variable","2962","onboarding.analysis.msbuild.docs_link=official documentation of the Scanner for MSBuild","2967","onboarding.analysis.build_wrapper.text=And add the executable's directory to the {env_var} environment variable","2972","onboarding.analysis.sq_scanner.text=And add the {dir} directory to the {env_var} environment variable","2975","onboarding.analysis.sq_scanner.docs=Please visit the {link} for more details.","2976","onboarding.analysis.sq_scanner.docs_link=official documentation of the Scanner","3070","encryption.how_to_use.content1=Store the secret key in the file {secret_file} of the server. This file can be relocated by defining the property {property} in {propreties_file}","3071","encryption.how_to_use.content2=Restrict access to this file by making it readable and by owner only","3072","encryption.how_to_use.content3=Restart the server if the property {property} has been set or changed.","3073","encryption.how_to_use.content4=For each property that you want to encrypt, generate the encrypted value and replace the original value wherever it is stored (configuration files, command lines).","3162","maintenance.sonarqube_is_under_maintenance.1=While waiting, you might want to investigate {link} to extend the current functionality.","3163","maintenance.sonarqube_is_under_maintenance_link.1=new plugins","3164","maintenance.sonarqube_is_under_maintenance.2=If you are an administrator and have no idea why this message is being shown, you should read the {link}.","3165","maintenance.sonarqube_is_under_maintenance_link.2=upgrade guide"],"delete":["947","search.show_more.hint=Press {0} to display","2942","onboarding.analysis.java.maven.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\" target=\"_blank\">official documentation of the Scanner for Maven<\/a> for more details.","2945","onboarding.analysis.java.gradle.text.1=Running an analysis with Gradle is straighforward. You just need to declare the <code>org.sonarqube<\/code> plugin in your <code>build.gradle<\/code> file:","2947","onboarding.analysis.java.gradle.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\" target=\"_blank\">official documentation of the Scanner for Gradle<\/a> for more details.","2950","onboarding.analysis.msbuild.text=And add the executable's directory to the <code>%PATH%<\/code> environment variable","2953","onboarding.analysis.msbuild.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\" target=\"_blank\">official documentation of the Scanner for MSBuild<\/a> for more details.","2958","onboarding.analysis.build_wrapper.text.linux=And add the executable's directory to the <code>PATH<\/code> environment variable","2959","onboarding.analysis.build_wrapper.text.win=And add the executable's directory to the <code>%PATH%<\/code> environment variable","2960","onboarding.analysis.build_wrapper.text.mac=And add the executable's directory to the <code>PATH<\/code> environment variable","2965","onboarding.analysis.sq_scanner.text.linux=And add the <code>bin<\/code> directory to the <code>PATH<\/code> environment variable","2966","onboarding.analysis.sq_scanner.text.win=And add the <code>bin<\/code> directory to the <code>%PATH%<\/code> environment variable","2967","onboarding.analysis.sq_scanner.text.mac=And add the <code>bin<\/code> directory to the <code>PATH<\/code> environment variable","2970","onboarding.analysis.sq_scanner.docs=Please visit the <a href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\" target=\"_blank\">official documentation of the Scanner<\/a> for more details.","3064","encryption.how_to_use.content=<ul><li>Store the secret key in the file <code>~\/.sonar\/sonar-secret.txt<\/code> of the server. This file can be relocated by defining the property <code>sonar.secretKeyPath<\/code> in <code>conf\/sonar.properties<\/code><\/li><li>Restrict access to this file by making it readable and by owner only<\/li><li>Restart the server if the property <code>sonar.secretKeyPath<\/code> has been set or changed.<\/li><li>For each property that you want to encrypt, generate the encrypted value and replace the original value wherever it is stored (configuration files, command lines).<\/li><\/ul>","3065","","3154","maintenance.sonarqube_is_under_maintenance.1=While waiting, you might want to investigate <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">new plugins<\/a> to extend the current functionality.","3155","maintenance.sonarqube_is_under_maintenance.2=If you are an administrator and have no idea why this message is being shown, you should read the <a href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\">upgrade guide<\/a>."]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/ActivationFormModal.tsx":[{"add":["226","                    \/\/ Safe: defined by rule creator (instance admin?)"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":[{"add":["21","import { FormattedMessage } from 'react-intl';","22","import * as classNames from 'classnames';","204","                    <p className=\"maintenance-text\">","205","                      <FormattedMessage","206","                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.1')}","207","                        id=\"maintenance.sonarqube_is_under_maintenance.1\"","208","                        values={{","209","                          link: (","210","                            <a href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\">","211","                              {translate('maintenance.sonarqube_is_under_maintenance_link.1')}","212","                            <\/a>","213","                          )","214","                        }}","215","                      \/>","216","                    <\/p>","217","                    <p className=\"maintenance-text\">","218","                      <FormattedMessage","219","                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.2')}","220","                        id=\"maintenance.sonarqube_is_under_maintenance.2\"","221","                        values={{","222","                          link: (","223","                            <a href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\">","224","                              {translate('maintenance.sonarqube_is_under_maintenance_link.2')}","225","                            <\/a>","226","                          )","227","                        }}","228","                      \/>","229","                    <\/p>"],"delete":["20","import * as classNames from 'classnames';","203","                    <p","204","                      className=\"maintenance-text\"","205","                      dangerouslySetInnerHTML={{","206","                        __html: translate('maintenance.sonarqube_is_under_maintenance.1')","207","                      }}","208","                    \/>","209","                    <p","210","                      className=\"maintenance-text\"","211","                      dangerouslySetInnerHTML={{","212","                        __html: translate('maintenance.sonarqube_is_under_maintenance.2')","213","                      }}","214","                    \/>"]}],"server\/sonar-web\/package.json":[{"add":["7","    \"@types\/dompurify\": \"^0.0.32\",","19","    \"dompurify\": \"^1.0.11\",","82","    \"@types\/sanitize-html\": \"1.20.0\","],"delete":[]}],"server\/sonar-web\/src\/main\/js\/helpers\/testMocks.ts":[{"add":["621","export function mockRuleDetailsParameter(","622","  overrides: Partial<T.RuleParameter> = {}","623","): T.RuleParameter {","624","  return {","625","    defaultValue: '1',","626","    htmlDesc: 'description',","627","    key: '1',","628","    type: 'number',","629","    ...overrides","630","  };","631","}","632",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/MSBuildScanner.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","31","      <p className=\"spacer-bottom markdown\">","32","        <FormattedMessage","33","          defaultMessage={translate('onboarding.analysis.msbuild.text')}","34","          id=\"onboarding.analysis.msbuild.text\"","35","          values={{ code: <code>%PATH%<\/code> }}","36","        \/>","37","      <\/p>"],"delete":["30","      <p","31","        className=\"spacer-bottom markdown\"","32","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.msbuild.text') }}","33","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsDescription.tsx":[{"add":["114","          \/\/ Safe: defined by rule creator (instance admin?)","196","            \/\/ Safe: defined by rule creator (instance admin?)"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/__tests__\/utils-test.ts":[{"add":["19","import { getEmptyValue, getDefaultValue, sanitizeTranslation } from '..\/utils';","78","","79","describe('sanitizeTranslation', () => {","80","  it('should preserve formatting tags', () => {","81","    const allowed = `","82","    Hi this is <i>in italics<\/i> and <ul>","83","    <li> lists <\/li>","84","    <li> are allowed<\/li>","85","    <\/ul>","86","    <p>","87","    as well. This is <b>Amazing<\/b> and this <strong>bold<\/strong> <br>","88","    and <code>code.is.accepted too<\/code>","89","    <\/p>","90","  `;","91","","92","    const clean = sanitizeTranslation(allowed);","93","    expect(clean).toBe(allowed);","94","  });","95","","96","  \/*","97","   * Test code borrowed from OWASP's sanitizer tests","98","   * https:\/\/github.com\/OWASP\/java-html-sanitizer\/blob\/master\/src\/test\/resources\/org\/owasp\/html\/htmllexerinput1.html","99","   *\/","100","  it('should strip everything else', () => {","101","    const clean = sanitizeTranslation(`<?xml version=\"not-even-close\"?>","102","","103","    <!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.01 Transitional\/\/EN\">","104","    ","105","    <!-- a test input for HtmlLexer -->","106","    ","107","    <html>","108","    <head>","109","    <title>Test File For HtmlLexer &amp; HtmlParser<\/title>","110","    <link rel=stylesheet type=\"text\/css\" src=foo\/bar.css \/>","111","    <body","112","     bgcolor=white","113","     linkcolor = \"blue\"","114","     onload=\"document.writeln(","115","      &quot;&lt;p&gt;properly escaped code in a handler&lt;\/p&gt;&quot;);\"","116","    >","117","    ","118","    <script type=\"text\/javascript\"><!--","119","    document.writeln(\"<p>Some initialization code in global context<\/p>\");","120","    --><\/script>","121","    ","122","    <script type=\"text\/javascript\">","123","    \/\/ hi there","124","    document.writeln(\"<p>More initialization<\/p>\");","125","    <\/script>","126","    ","127","    <div id=clickydiv onclick=\"handleClicky(event)\"","128","     ondblclick=this.onclick(event);return(false)>","129","    Clicky","130","    <\/div>","131","    ","132","    <input id=foo>","133","    <gxp:attr name=\"onchange\">alert(\"&lt;b&gt;hi&lt;\/b&gt;\");<\/gxp:attr>","134","    <\/input>","135","    ","136","    <pre>&lt;div id=notarealtag onclick=notcode()&gt;<\/pre>","137","    ","138","    <!-- some tokenization corner cases -->","139","    ","140","    < notatag <atag\/>","141","    ","142","    <\/ notatag> <\/redundantlyclosed\/>","143","    ","144","    <messyattributes a=b=c d=\"e\"f=g h =i j= k l = m checked n=\"o\"\/>","145","    ","146","    < < < all in one text block > > >","147","    ","148","    <xmp>Make sure that <!-- comments don't obscure the xmp close<\/xmp>","149","    <% # some php code here","150","    write(\"<pre>$horriblySyntacticConstruct1<\/pre>\\n\\n\");","151","    %>","152","    <script type=\"text\/javascript\"><!--","153","    alert(\"hello world\");","154","    \/\/ --><\/script>","155","    ","156","    <script>\/* <\/script> *\/alert('hi');<\/script>","157","    <script><!--\/* <\/script> *\/alert('hi');--><\/script>","158","    ","159","    <xmp style=color:blue><!--\/* <\/xmp> *\/alert('hi');--><\/xmp>","160","    ","161","    <style><!-- p { contentf: '<\/style>' } --><\/style>","162","    <style>Foo<!-- > <\/style> --><\/style>","163","    <textarea><!-- Zoicks <\/textarea>--><\/textarea>","164","    <!-- An escaping text span start may share its U+002D HYPHEN-MINUS characters","165","       - with its corresponding escaping text span end. -->","166","    <script><!--><\/script>","167","    <script><!---><\/script>","168","    <script><!----><\/script>","169","    <\/body>","170","    <\/html>","171","    <![CDATA[ No such thing as a CDATA> section in HTML ]]>","172","    <script>a<b<\/script>","173","    <img src=foo.gif \/><a href=><a href=\/>","174","    <span title=malformed attribs' do=don't id=foo checked onclick=\"a<b\">Bar<\/span>`);","175","","176","    expect(clean.replace(\/\\s+\/g, '')).toBe(","177","      `Clickyalert(\"&lt;b&gt;hi&lt;\/b&gt;\");&lt;divid=notarealtagonclick=notcode()&gt;&lt;notatag&lt;&lt;&lt;allinonetextblock&gt;&gt;&gt;Makesurethat&lt;%#somephpcodeherewrite(\"$horriblySyntacticConstruct1\");%&gt;*\/alert('hi');*\/alert('hi');--&gt;*\/alert('hi');--&gt;'}--&gt;--&gt;&lt;!--Zoicks--&gt;sectioninHTML]]&gt;Bar`","178","    );","179","  });","180","});"],"delete":["19","import { getEmptyValue, getDefaultValue } from '..\/utils';"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleDetailsParameters-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/DotNet.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","55","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","60","      <p className=\"big-spacer-top markdown\">","61","        <FormattedMessage","62","          defaultMessage={translate('onboarding.analysis.docs')}","63","          id=\"onboarding.analysis.docs\"","64","          values={{","65","            link: (","66","              <a","67","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","68","                rel=\"noopener noreferrer\"","69","                target=\"_blank\">","70","                {translate('onboarding.analysis.msbuild.docs_link')}","71","              <\/a>","72","            )","73","          }}","74","        \/>","75","      <\/p>"],"delete":["54","        {transformedMessage => (","55","          <p","56","            className=\"spacer-bottom markdown\"","57","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","58","          \/>","59","        )}","64","      <p","65","        className=\"big-spacer-top markdown\"","66","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.msbuild.docs') }}","67","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Msvc.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","58","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","63","      <p className=\"big-spacer-top markdown\">","64","        <FormattedMessage","65","          defaultMessage={translate('onboarding.analysis.docs')}","66","          id=\"onboarding.analysis.docs\"","67","          values={{","68","            link: (","69","              <a","70","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","71","                rel=\"noopener noreferrer\"","72","                target=\"_blank\">","73","                {translate('onboarding.analysis.msbuild.docs_link')}","74","              <\/a>","75","            )","76","          }}","77","        \/>","78","      <\/p>"],"delete":["57","        {transformedMessage => (","58","          <p","59","            className=\"spacer-bottom markdown\"","60","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","61","          \/>","62","        )}","67","      <p","68","        className=\"big-spacer-top markdown\"","69","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.msbuild.docs') }}","70","      \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/__tests__\/TreeMap-test.tsx":[{"add":["20","import { mount } from 'enzyme';","22","import TreeMapRect from '..\/TreeMapRect';","23","import { mockEvent } from '..\/..\/..\/helpers\/testMocks';","25","it('should render correctly', () => {","31","  const onRectClick = jest.fn();","32","  const chart = mount(","33","    <TreeMap height={100} items={items} onRectangleClick={onRectClick} width={100} \/>","35","  const rects = chart.find(TreeMapRect);","36","  expect(rects).toHaveLength(3);","37","","38","  const event: React.MouseEvent<HTMLAnchorElement> = mockEvent({ stopPropagation: jest.fn() });","39","  (rects.first().instance() as TreeMapRect).handleLinkClick(event);","40","  expect(event.stopPropagation).toHaveBeenCalled();","41","","42","  (rects.first().instance() as TreeMapRect).handleRectClick();","43","  expect(onRectClick).toHaveBeenCalledWith('2');"],"delete":["20","import { shallow } from 'enzyme';","23","it('should display', () => {","29","  const chart = shallow(","30","    <TreeMap height={100} items={items} onRectangleClick={() => {}} width={100} \/>","32","  expect(chart.find('TreeMapRect')).toHaveLength(3);"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["26","      >","27","        <FormattedMessage","28","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.1\"","29","          id=\"maintenance.sonarqube_is_under_maintenance.1\"","30","          values={","31","            Object {","32","              \"link\": <a","33","                href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\"","34","              >","35","                maintenance.sonarqube_is_under_maintenance_link.1","36","              <\/a>,","37","            }","39","        \/>","40","      <\/p>","43","      >","44","        <FormattedMessage","45","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.2\"","46","          id=\"maintenance.sonarqube_is_under_maintenance.2\"","47","          values={","48","            Object {","49","              \"link\": <a","50","                href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\"","51","              >","52","                maintenance.sonarqube_is_under_maintenance_link.2","53","              <\/a>,","54","            }","56","        \/>","57","      <\/p>","87","      >","88","        <FormattedMessage","89","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.1\"","90","          id=\"maintenance.sonarqube_is_under_maintenance.1\"","91","          values={","92","            Object {","93","              \"link\": <a","94","                href=\"https:\/\/redirect.sonarsource.com\/doc\/plugin-library.html\"","95","              >","96","                maintenance.sonarqube_is_under_maintenance_link.1","97","              <\/a>,","98","            }","100","        \/>","101","      <\/p>","104","      >","105","        <FormattedMessage","106","          defaultMessage=\"maintenance.sonarqube_is_under_maintenance.2\"","107","          id=\"maintenance.sonarqube_is_under_maintenance.2\"","108","          values={","109","            Object {","110","              \"link\": <a","111","                href=\"https:\/\/redirect.sonarsource.com\/doc\/upgrading.html\"","112","              >","113","                maintenance.sonarqube_is_under_maintenance_link.2","114","              <\/a>,","115","            }","117","        \/>","118","      <\/p>"],"delete":["26","        dangerouslySetInnerHTML={","27","          Object {","28","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.1\",","30","        }","31","      \/>","34","        dangerouslySetInnerHTML={","35","          Object {","36","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.2\",","38","        }","39","      \/>","69","        dangerouslySetInnerHTML={","70","          Object {","71","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.1\",","73","        }","74","      \/>","77","        dangerouslySetInnerHTML={","78","          Object {","79","            \"__html\": \"maintenance.sonarqube_is_under_maintenance.2\",","81","        }","82","      \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":[{"add":["139","                  \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/SQScanner-test.tsx.snap":[{"add":["11","  >","12","    <FormattedMessage","13","      defaultMessage=\"onboarding.analysis.sq_scanner.text\"","14","      id=\"onboarding.analysis.sq_scanner.text\"","15","      values={","16","        Object {","17","          \"dir\": <code>","18","            bin","19","          <\/code>,","20","          \"env_var\": <code>","21","            %PATH%","22","          <\/code>,","23","        }","25","    \/>","26","  <\/p>","49","  >","50","    <FormattedMessage","51","      defaultMessage=\"onboarding.analysis.sq_scanner.text\"","52","      id=\"onboarding.analysis.sq_scanner.text\"","53","      values={","54","        Object {","55","          \"dir\": <code>","56","            bin","57","          <\/code>,","58","          \"env_var\": <code>","59","            PATH","60","          <\/code>,","61","        }","63","    \/>","64","  <\/p>","87","  >","88","    <FormattedMessage","89","      defaultMessage=\"onboarding.analysis.sq_scanner.text\"","90","      id=\"onboarding.analysis.sq_scanner.text\"","91","      values={","92","        Object {","93","          \"dir\": <code>","94","            bin","95","          <\/code>,","96","          \"env_var\": <code>","97","            PATH","98","          <\/code>,","99","        }","101","    \/>","102","  <\/p>"],"delete":["11","    dangerouslySetInnerHTML={","12","      Object {","13","        \"__html\": \"onboarding.analysis.sq_scanner.text.win\",","15","    }","16","  \/>","39","    dangerouslySetInnerHTML={","40","      Object {","41","        \"__html\": \"onboarding.analysis.sq_scanner.text.linux\",","43","    }","44","  \/>","67","    dangerouslySetInnerHTML={","68","      Object {","69","        \"__html\": \"onboarding.analysis.sq_scanner.text.mac\",","71","    }","72","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsParameters.tsx":[{"add":["31","        <p \/\/ Safe: defined by rule creator (instance admin?)","32","          dangerouslySetInnerHTML={{ __html: param.htmlDesc || '' }}","33","        \/>"],"delete":["31","        <p dangerouslySetInnerHTML={{ __html: param.htmlDesc || '' }} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/BuildWrapper-test.tsx.snap":[{"add":["11","  >","12","    <FormattedMessage","13","      defaultMessage=\"onboarding.analysis.build_wrapper.text\"","14","      id=\"onboarding.analysis.build_wrapper.text\"","15","      values={","16","        Object {","17","          \"env_var\": <code>","18","            %PATH%","19","          <\/code>,","20","        }","22","    \/>","23","  <\/p>","46","  >","47","    <FormattedMessage","48","      defaultMessage=\"onboarding.analysis.build_wrapper.text\"","49","      id=\"onboarding.analysis.build_wrapper.text\"","50","      values={","51","        Object {","52","          \"env_var\": <code>","53","            PATH","54","          <\/code>,","55","        }","57","    \/>","58","  <\/p>","81","  >","82","    <FormattedMessage","83","      defaultMessage=\"onboarding.analysis.build_wrapper.text\"","84","      id=\"onboarding.analysis.build_wrapper.text\"","85","      values={","86","        Object {","87","          \"env_var\": <code>","88","            PATH","89","          <\/code>,","90","        }","92","    \/>","93","  <\/p>"],"delete":["11","    dangerouslySetInnerHTML={","12","      Object {","13","        \"__html\": \"onboarding.analysis.build_wrapper.text.win\",","15","    }","16","  \/>","39","    dangerouslySetInnerHTML={","40","      Object {","41","        \"__html\": \"onboarding.analysis.build_wrapper.text.linux\",","43","    }","44","  \/>","67","    dangerouslySetInnerHTML={","68","      Object {","69","        \"__html\": \"onboarding.analysis.build_wrapper.text.mac\",","71","    }","72","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Other-test.tsx.snap":[{"add":["32","  >","33","    <FormattedMessage","34","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","35","      id=\"onboarding.analysis.sq_scanner.docs\"","36","      values={","37","        Object {","38","          \"link\": <a","39","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","40","            rel=\"noopener noreferrer\"","41","            target=\"_blank\"","42","          >","43","            onboarding.analysis.sq_scanner.docs_link","44","          <\/a>,","45","        }","47","    \/>","48","  <\/p>","82","  >","83","    <FormattedMessage","84","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","85","      id=\"onboarding.analysis.sq_scanner.docs\"","86","      values={","87","        Object {","88","          \"link\": <a","89","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","90","            rel=\"noopener noreferrer\"","91","            target=\"_blank\"","92","          >","93","            onboarding.analysis.sq_scanner.docs_link","94","          <\/a>,","95","        }","97","    \/>","98","  <\/p>","132","  >","133","    <FormattedMessage","134","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","135","      id=\"onboarding.analysis.sq_scanner.docs\"","136","      values={","137","        Object {","138","          \"link\": <a","139","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","140","            rel=\"noopener noreferrer\"","141","            target=\"_blank\"","142","          >","143","            onboarding.analysis.sq_scanner.docs_link","144","          <\/a>,","145","        }","147","    \/>","148","  <\/p>"],"delete":["32","    dangerouslySetInnerHTML={","33","      Object {","34","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","36","    }","37","  \/>","71","    dangerouslySetInnerHTML={","72","      Object {","73","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","75","    }","76","  \/>","110","    dangerouslySetInnerHTML={","111","      Object {","112","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","114","    }","115","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaMaven.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","48","      <p className=\"big-spacer-top markdown\">","49","        <FormattedMessage","50","          defaultMessage={translate('onboarding.analysis.docs')}","51","          id=\"onboarding.analysis.docs\"","52","          values={{","53","            link: (","54","              <a","55","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","56","                rel=\"noopener noreferrer\"","57","                target=\"_blank\">","58","                {translate('onboarding.analysis.java.maven.docs_link')}","59","              <\/a>","60","            )","61","          }}","62","        \/>","63","      <\/p>","64","      <p className=\"big-spacer-top markdown\">","65","        {props.projectKey","66","          ? translate('onboarding.analysis.auto_refresh_after_analysis')","67","          : translate('onboarding.analysis.browse_url_after_analysis')}","68","      <\/p>"],"delete":["47","      <p","48","        className=\"big-spacer-top markdown\"","49","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.java.maven.docs') }}","50","      \/>","51","      <p","52","        className=\"big-spacer-top markdown\"","53","        dangerouslySetInnerHTML={{","54","          __html: props.projectKey","55","            ? translate('onboarding.analysis.auto_refresh_after_analysis')","56","            : translate('onboarding.analysis.browse_url_after_analysis')","57","        }}","58","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/ClangGCC-test.tsx.snap":[{"add":["40","  >","41","    <FormattedMessage","42","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","43","      id=\"onboarding.analysis.sq_scanner.docs\"","44","      values={","45","        Object {","46","          \"link\": <a","47","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","48","            rel=\"noopener noreferrer\"","49","            target=\"_blank\"","50","          >","51","            onboarding.analysis.sq_scanner.docs_link","52","          <\/a>,","53","        }","55","    \/>","56","  <\/p>","98","  >","99","    <FormattedMessage","100","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","101","      id=\"onboarding.analysis.sq_scanner.docs\"","102","      values={","103","        Object {","104","          \"link\": <a","105","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","106","            rel=\"noopener noreferrer\"","107","            target=\"_blank\"","108","          >","109","            onboarding.analysis.sq_scanner.docs_link","110","          <\/a>,","111","        }","113","    \/>","114","  <\/p>","157","  >","158","    <FormattedMessage","159","      defaultMessage=\"onboarding.analysis.sq_scanner.docs\"","160","      id=\"onboarding.analysis.sq_scanner.docs\"","161","      values={","162","        Object {","163","          \"link\": <a","164","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","165","            rel=\"noopener noreferrer\"","166","            target=\"_blank\"","167","          >","168","            onboarding.analysis.sq_scanner.docs_link","169","          <\/a>,","170","        }","172","    \/>","173","  <\/p>"],"delete":["40","    dangerouslySetInnerHTML={","41","      Object {","42","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","44","    }","45","  \/>","87","    dangerouslySetInnerHTML={","88","      Object {","89","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","91","    }","92","  \/>","135","    dangerouslySetInnerHTML={","136","      Object {","137","        \"__html\": \"onboarding.analysis.sq_scanner.docs\",","139","    }","140","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesSourceViewer.tsx":[{"add":["121",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/BuildWrapper.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","41","      <p className=\"spacer-bottom markdown\">","42","        <FormattedMessage","43","          defaultMessage={translate('onboarding.analysis.build_wrapper.text')}","44","          id=\"onboarding.analysis.build_wrapper.text\"","45","          values={{","46","            env_var: <code>{props.os === 'win' ? '%PATH%' : 'PATH'}<\/code>","47","          }}","48","        \/>","49","      <\/p>"],"delete":["40","      <p","41","        className=\"spacer-bottom markdown\"","42","        dangerouslySetInnerHTML={{","43","          __html: translate('onboarding.analysis.build_wrapper.text', props.os)","44","        }}","45","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/SQScanner.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","34","      <p className=\"spacer-bottom markdown\">","35","        <FormattedMessage","36","          defaultMessage={translate('onboarding.analysis.sq_scanner.text')}","37","          id=\"onboarding.analysis.sq_scanner.text\"","38","          values={{","39","            dir: <code>bin<\/code>,","40","            env_var: <code>{props.os === 'win' ? '%PATH%' : 'PATH'}<\/code>","41","          }}","42","        \/>","43","      <\/p>"],"delete":["33","      <p","34","        className=\"spacer-bottom markdown\"","35","        dangerouslySetInnerHTML={{","36","          __html: translate('onboarding.analysis.sq_scanner.text', props.os)","37","        }}","38","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.tsx":[{"add":["28","  isDefaultOrInherited,","29","  sanitizeTranslation","145","              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}"],"delete":["28","  isDefaultOrInherited","144","              dangerouslySetInnerHTML={{ __html: description }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleDetailsParameters-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/SubCategoryDefinitionsList.tsx":[{"add":["23","import { getSubCategoryName, getSubCategoryDescription, sanitizeTranslation } from '..\/utils';","76","                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}"],"delete":["23","import { getSubCategoryName, getSubCategoryDescription } from '..\/utils';","76","                dangerouslySetInnerHTML={{ __html: subCategory.description }}"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/utils.ts":[{"add":["19","import { sanitize } from 'dompurify';","38","export function sanitizeTranslation(html: string) {","39","  return sanitize(html, {","40","    ALLOWED_TAGS: ['b', 'br', 'code', 'i', 'li', 'p', 'strong', 'ul']","41","  });","42","}","43",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Params.tsx":[{"add":["101","                    \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":[{"add":["91","          \/\/ Safe: Comes from the backend, after markdown transformation to html"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchShowMore-test.tsx.snap":[{"add":["21","      >","22","        <FormattedMessage","23","          defaultMessage=\"search.show_more.hint\"","24","          id=\"search.show_more.hint\"","25","          values={","26","            Object {","27","              \"key\": <span","28","                className=\"shortcut-button shortcut-button-small\"","29","              >","30","                Enter","31","              <\/span>,","32","            }","34","        \/>","35","      <\/div>"],"delete":["21","        dangerouslySetInnerHTML={","22","          Object {","23","            \"__html\": \"search.show_more.hint.<span class=\\\\\"shortcut-button shortcut-button-small\\\\\">Enter<\/span>\",","25","        }","26","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/JavaGradle.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","48","          <p className=\"spacer-bottom markdown\">","49","            <FormattedMessage","50","              defaultMessage={transformedMessage}","51","              id=\"onboarding.analysis.java.gradle.text.1\"","52","              values={{","53","                plugin_code: <code>org.sonarqube<\/code>,","54","                filename: <code>build.gradle<\/code>","55","              }}","56","            \/>","57","          <\/p>","65","      <p className=\"big-spacer-top markdown\">","66","        <FormattedMessage","67","          defaultMessage={translate('onboarding.analysis.docs')}","68","          id=\"onboarding.analysis.docs\"","69","          values={{","70","            link: (","71","              <a","72","                href=\"http:\/\/redirect.sonarsource.com\/doc\/gradle.html\"","73","                rel=\"noopener noreferrer\"","74","                target=\"_blank\">","75","                {translate('onboarding.analysis.java.gradle.docs_link')}","76","              <\/a>","77","            )","78","          }}","79","        \/>","80","      <\/p>","81","      <p className=\"big-spacer-top markdown\">","82","        {props.projectKey","83","          ? translate('onboarding.analysis.auto_refresh_after_analysis')","84","          : translate('onboarding.analysis.browse_url_after_analysis')}","85","      <\/p>"],"delete":["47","          <p","48","            className=\"spacer-bottom markdown\"","49","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","50","          \/>","58","      <p","59","        className=\"big-spacer-top markdown\"","60","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.java.gradle.docs') }}","61","      \/>","62","      <p","63","        className=\"big-spacer-top markdown\"","64","        dangerouslySetInnerHTML={{","65","          __html: props.projectKey","66","            ? translate('onboarding.analysis.auto_refresh_after_analysis')","67","            : translate('onboarding.analysis.browse_url_after_analysis')","68","        }}","69","      \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.tsx":[{"add":["160","            <div","161","              className=\"about-page-section\"","162","              \/\/ Safe: Defined by instance admin","163","              dangerouslySetInnerHTML={{ __html: customText }}","164","            \/>"],"delete":["160","            <div className=\"about-page-section\" dangerouslySetInnerHTML={{ __html: customText }} \/>"]}],"server\/sonar-docs\/src\/templates\/page.tsx":[{"add":["106","        <div","107","          className=\"markdown-content\"","108","          \/\/ Safe: comes from the backend","109","          dangerouslySetInnerHTML={{ __html: htmlPageContent }}","110","        \/>"],"delete":["106","        <div className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: htmlPageContent }} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchShowMore.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","23","import { translate } from '..\/..\/..\/helpers\/l10n';","64","            <div className=\"pull-right text-muted-2 menu-footer-note\">","65","              <FormattedMessage","66","                defaultMessage={translate('search.show_more.hint')}","67","                id={'search.show_more.hint'}","68","                values={{","69","                  key: <span className=\"shortcut-button shortcut-button-small\">Enter<\/span>","70","                }}","71","              \/>","72","            <\/div>"],"delete":["22","import { translate, translateWithParameters } from '..\/..\/..\/helpers\/l10n';","63","            <div","64","              className=\"pull-right text-muted-2 menu-footer-note\"","65","              dangerouslySetInnerHTML={{","66","                __html: translateWithParameters(","67","                  'search.show_more.hint',","68","                  '<span class=\"shortcut-button shortcut-button-small\">Enter<\/span>'","69","                )","70","              }}","71","            \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/DotNet-test.tsx.snap":[{"add":["41","  >","42","    <FormattedMessage","43","      defaultMessage=\"onboarding.analysis.docs\"","44","      id=\"onboarding.analysis.docs\"","45","      values={","46","        Object {","47","          \"link\": <a","48","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","49","            rel=\"noopener noreferrer\"","50","            target=\"_blank\"","51","          >","52","            onboarding.analysis.msbuild.docs_link","53","          <\/a>,","54","        }","56","    \/>","57","  <\/p>","101","  >","102","    <FormattedMessage","103","      defaultMessage=\"onboarding.analysis.docs\"","104","      id=\"onboarding.analysis.docs\"","105","      values={","106","        Object {","107","          \"link\": <a","108","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","109","            rel=\"noopener noreferrer\"","110","            target=\"_blank\"","111","          >","112","            onboarding.analysis.msbuild.docs_link","113","          <\/a>,","114","        }","116","    \/>","117","  <\/p>"],"delete":["41","    dangerouslySetInnerHTML={","42","      Object {","43","        \"__html\": \"onboarding.analysis.msbuild.docs\",","45","    }","46","  \/>","90","    dangerouslySetInnerHTML={","91","      Object {","92","        \"__html\": \"onboarding.analysis.msbuild.docs\",","94","    }","95","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/Action.tsx":[{"add":["173","            \/\/ Safe: comes from the backend"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/charts\/TreeMapRect.tsx":[{"add":["99","          {isTextVisible &&","100","            (this.props.prefix ? (","101","              <span className=\"treemap-text\">","102","                {this.props.prefix}","103","                <br \/>","104","                {this.props.label.substr(this.props.prefix.length)}","105","              <\/span>","106","            ) : (","107","              <span className=\"treemap-text\">{this.props.label}<\/span>","108","            ))}"],"delete":["86","    const label = this.props.prefix","87","      ? `${this.props.prefix}<br>${this.props.label.substr(this.props.prefix.length)}`","88","      : this.props.label;","89","","103","          {isTextVisible && (","104","            <span className=\"treemap-text\" dangerouslySetInnerHTML={{ __html: label }} \/>","105","          )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/CustomRuleFormModal.tsx":[{"add":["306","        \/\/ Safe: defined by rule creator (instance admin?)"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/JavaMaven-test.tsx.snap":[{"add":["29","  >","30","    <FormattedMessage","31","      defaultMessage=\"onboarding.analysis.docs\"","32","      id=\"onboarding.analysis.docs\"","33","      values={","34","        Object {","35","          \"link\": <a","36","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","37","            rel=\"noopener noreferrer\"","38","            target=\"_blank\"","39","          >","40","            onboarding.analysis.java.maven.docs_link","41","          <\/a>,","42","        }","44","    \/>","45","  <\/p>","48","  >","49","    onboarding.analysis.browse_url_after_analysis","50","  <\/p>","81","  >","82","    <FormattedMessage","83","      defaultMessage=\"onboarding.analysis.docs\"","84","      id=\"onboarding.analysis.docs\"","85","      values={","86","        Object {","87","          \"link\": <a","88","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","89","            rel=\"noopener noreferrer\"","90","            target=\"_blank\"","91","          >","92","            onboarding.analysis.java.maven.docs_link","93","          <\/a>,","94","        }","96","    \/>","97","  <\/p>","100","  >","101","    onboarding.analysis.browse_url_after_analysis","102","  <\/p>","133","  >","134","    <FormattedMessage","135","      defaultMessage=\"onboarding.analysis.docs\"","136","      id=\"onboarding.analysis.docs\"","137","      values={","138","        Object {","139","          \"link\": <a","140","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-maven.html\"","141","            rel=\"noopener noreferrer\"","142","            target=\"_blank\"","143","          >","144","            onboarding.analysis.java.maven.docs_link","145","          <\/a>,","146","        }","148","    \/>","149","  <\/p>","152","  >","153","    onboarding.analysis.auto_refresh_after_analysis","154","  <\/p>"],"delete":["29","    dangerouslySetInnerHTML={","30","      Object {","31","        \"__html\": \"onboarding.analysis.java.maven.docs\",","33","    }","34","  \/>","37","    dangerouslySetInnerHTML={","38","      Object {","39","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","40","      }","41","    }","42","  \/>","73","    dangerouslySetInnerHTML={","74","      Object {","75","        \"__html\": \"onboarding.analysis.java.maven.docs\",","77","    }","78","  \/>","81","    dangerouslySetInnerHTML={","82","      Object {","83","        \"__html\": \"onboarding.analysis.browse_url_after_analysis\",","84","      }","85","    }","86","  \/>","117","    dangerouslySetInnerHTML={","118","      Object {","119","        \"__html\": \"onboarding.analysis.java.maven.docs\",","121","    }","122","  \/>","125","    dangerouslySetInnerHTML={","126","      Object {","127","        \"__html\": \"onboarding.analysis.auto_refresh_after_analysis\",","128","      }","129","    }","130","  \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/GenerateSecretKeyForm.tsx":[{"add":["78","            <div className=\"markdown\">","79","              <ul>","80","                <li>","81","                  <FormattedMessage","82","                    defaultMessage={translate('encryption.how_to_use.content1')}","83","                    id=\"encryption.how_to_use.content1\"","84","                    values={{","85","                      secret_file: <code>~\/.sonar\/sonar-secret.txt<\/code>,","86","                      property: <code>sonar.secretKeyPath<\/code>,","87","                      propreties_file: <code>conf\/sonar.properties<\/code>","88","                    }}","89","                  \/>","90","                <\/li>","91","                <li>{translate('encryption.how_to_use.content2')}<\/li>","92","                <li>","93","                  <FormattedMessage","94","                    defaultMessage={translate('encryption.how_to_use.content3')}","95","                    id=\"encryption.how_to_use.content3\"","96","                    values={{","97","                      property: <code>sonar.secretKeyPath<\/code>","98","                    }}","99","                  \/>","100","                <\/li>","101","                <li>{translate('encryption.how_to_use.content4')}<\/li>","102","              <\/ul>","103","            <\/div>"],"delete":["78","            <div","79","              className=\"markdown\"","80","              dangerouslySetInnerHTML={{ __html: translate('encryption.how_to_use.content') }}","81","            \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/Other.tsx":[{"add":["20","import { FormattedMessage } from 'react-intl';","54","        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}<\/p>}","57","      <p className=\"big-spacer-top markdown\">","58","        <FormattedMessage","59","          defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}","60","          id=\"onboarding.analysis.sq_scanner.docs\"","61","          values={{","62","            link: (","63","              <a","64","                href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner.html\"","65","                rel=\"noopener noreferrer\"","66","                target=\"_blank\">","67","                {translate('onboarding.analysis.sq_scanner.docs_link')}","68","              <\/a>","69","            )","70","          }}","71","        \/>","72","      <\/p>"],"delete":["53","        {transformedMessage => (","54","          <p","55","            className=\"spacer-bottom markdown\"","56","            dangerouslySetInnerHTML={{ __html: transformedMessage }}","57","          \/>","58","        )}","61","      <p","62","        className=\"big-spacer-top markdown\"","63","        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.sq_scanner.docs') }}","64","      \/>"]}],"server\/sonar-web\/yarn.lock":[{"add":["969","\"@types\/domhandler@*\":","970","  version \"2.4.1\"","971","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/domhandler\/-\/domhandler-2.4.1.tgz#7b3b347f7762180fbcb1ece1ce3dd0ebbb8c64cf\"","972","  integrity sha1-ezs0f3diGA+8sezhzj3Q67uMZM8=","973","","974","\"@types\/dompurify@^0.0.32\":","975","  version \"0.0.32\"","976","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/dompurify\/-\/dompurify-0.0.32.tgz#ccc4148d7f2e0598006611e82e840806fab4b268\"","977","  integrity sha1-zMQUjX8uBZgAZhHoLoQIBvq0smg=","978","","979","\"@types\/domutils@*\":","980","  version \"1.7.2\"","981","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/domutils\/-\/domutils-1.7.2.tgz#89422e579c165994ad5c09ce90325da596cc105d\"","982","  integrity sha1-iUIuV5wWWZStXAnOkDJdpZbMEF0=","983","  dependencies:","984","    \"@types\/domhandler\" \"*\"","985","","1013","\"@types\/htmlparser2@*\":","1014","  version \"3.10.0\"","1015","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/htmlparser2\/-\/htmlparser2-3.10.0.tgz#b94d3b08f813c9eec12990ac6a34d8b17a7aebc9\"","1016","  integrity sha1-uU07CPgTye7BKZCsajTYsXp668k=","1017","  dependencies:","1018","    \"@types\/domhandler\" \"*\"","1019","    \"@types\/domutils\" \"*\"","1020","    \"@types\/node\" \"*\"","1021","","1134","\"@types\/sanitize-html@1.20.0\":","1135","  version \"1.20.0\"","1136","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/sanitize-html\/-\/sanitize-html-1.20.0.tgz#b3beaa9eacab0e0fa5022d5faa727fea8fb9fc5d\"","1137","  integrity sha1-s76qnqyrDg+lAi1fqnJ\/6o+5\/F0=","1138","  dependencies:","1139","    \"@types\/htmlparser2\" \"*\"","1140","","3443","dompurify@^1.0.11:","3444","  version \"1.0.11\"","3445","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/dompurify\/-\/dompurify-1.0.11.tgz#fe0f4a40d147f7cebbe31a50a1357539cfc1eb4d\"","3446","  integrity sha1-\/g9KQNFH98674xpQoTV1Oc\/B600=","3447",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/components\/commands\/__tests__\/__snapshots__\/Msvc-test.tsx.snap":[{"add":["45","  >","46","    <FormattedMessage","47","      defaultMessage=\"onboarding.analysis.docs\"","48","      id=\"onboarding.analysis.docs\"","49","      values={","50","        Object {","51","          \"link\": <a","52","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","53","            rel=\"noopener noreferrer\"","54","            target=\"_blank\"","55","          >","56","            onboarding.analysis.msbuild.docs_link","57","          <\/a>,","58","        }","60","    \/>","61","  <\/p>","110","  >","111","    <FormattedMessage","112","      defaultMessage=\"onboarding.analysis.docs\"","113","      id=\"onboarding.analysis.docs\"","114","      values={","115","        Object {","116","          \"link\": <a","117","            href=\"http:\/\/redirect.sonarsource.com\/doc\/install-configure-scanner-msbuild.html\"","118","            rel=\"noopener noreferrer\"","119","            target=\"_blank\"","120","          >","121","            onboarding.analysis.msbuild.docs_link","122","          <\/a>,","123","        }","125","    \/>","126","  <\/p>"],"delete":["45","    dangerouslySetInnerHTML={","46","      Object {","47","        \"__html\": \"onboarding.analysis.msbuild.docs\",","49","    }","50","  \/>","99","    dangerouslySetInnerHTML={","100","      Object {","101","        \"__html\": \"onboarding.analysis.msbuild.docs\",","103","    }","104","  \/>"]}]}},"af92d629474b292b231724ce179c58565650cdf0":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/OrganizationNavigation.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/__tests__\/__snapshots__\/OrganizationNavigation-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/nav\/ContextNavBar.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":[{"add":[],"delete":["19",".navbar-context-justified {","20","  display: flex;","21","  justify-content: space-between;","22","}"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/OrganizationNavigation.tsx":[{"add":["35","    <ContextNavBar height={theme.contextNavHeightRaw} id=\"context-navigation\">","36","      <div className=\"navbar-context-justified\">","37","        <OrganizationNavigationHeaderContainer organization={organization} \/>","38","        <OrganizationNavigationMeta organization={organization} \/>","39","      <\/div>"],"delete":["35","    <ContextNavBar id=\"context-navigation\" height={theme.contextNavHeightRaw}>","36","      <OrganizationNavigationHeaderContainer organization={organization} \/>","37","      <OrganizationNavigationMeta organization={organization} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/__tests__\/__snapshots__\/OrganizationNavigation-test.tsx.snap":[{"add":["7","  <div","8","    className=\"navbar-context-justified\"","9","  >","10","    <Connect(OrganizationNavigationHeader)","11","      organization={","12","        Object {","13","          \"key\": \"foo\",","14","          \"name\": \"Foo\",","15","          \"projectVisibility\": \"public\",","16","        }","18","    \/>","19","    <Connect(OrganizationNavigationMeta)","20","      organization={","21","        Object {","22","          \"key\": \"foo\",","23","          \"name\": \"Foo\",","24","          \"projectVisibility\": \"public\",","25","        }","27","    \/>","28","  <\/div>"],"delete":["7","  <Connect(OrganizationNavigationHeader)","8","    organization={","9","      Object {","10","        \"key\": \"foo\",","11","        \"name\": \"Foo\",","12","        \"projectVisibility\": \"public\",","14","    }","15","  \/>","16","  <Connect(OrganizationNavigationMeta)","17","    organization={","18","      Object {","19","        \"key\": \"foo\",","20","        \"name\": \"Foo\",","21","        \"projectVisibility\": \"public\",","23","    }","24","  \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/nav\/ContextNavBar.css":[{"add":["34",".navbar-context-justified {","35","  display: flex;","36","  justify-content: space-between;","37","}","38",""],"delete":[]}]}},"e4c01a6e0c962a41b23a4f10f146a9a2a9c01e80":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notifications\/NotificationService.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/notifications\/NotificationServiceTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/notifications\/NotificationService.java":[{"add":["25","import java.util.ArrayList;","26","import java.util.Collection;","27","import java.util.List;","28","import java.util.Map;","29","import java.util.Set;","30","import java.util.concurrent.Executors;","31","import java.util.concurrent.ScheduledExecutorService;","32","import java.util.concurrent.TimeUnit;","44","import org.sonar.jpa.session.DatabaseSessionFactory;","73","  private final DatabaseSessionFactory databaseSessionFactory;","84","  public NotificationService(Settings settings, DefaultNotificationManager manager, DbClient dbClient, DatabaseSessionFactory databaseSessionFactory, NotificationDispatcher[] dispatchers) {","85","    this.databaseSessionFactory = databaseSessionFactory;","96","  public NotificationService(Settings settings, DefaultNotificationManager manager, DbClient dbClient, DatabaseSessionFactory databaseSessionFactory) {","97","    this(settings, manager, dbClient, databaseSessionFactory, new NotificationDispatcher[0]);","110","        } finally {","111","          \/\/ Free Hibernate session","112","          \/\/ See https:\/\/jira.codehaus.org\/browse\/SONAR-6566","113","          databaseSessionFactory.clear();"],"delete":["38","import java.util.ArrayList;","39","import java.util.Collection;","40","import java.util.List;","41","import java.util.Map;","42","import java.util.Set;","43","import java.util.concurrent.Executors;","44","import java.util.concurrent.ScheduledExecutorService;","45","import java.util.concurrent.TimeUnit;","46","","83","  public NotificationService(Settings settings, DefaultNotificationManager manager, DbClient dbClient, NotificationDispatcher[] dispatchers) {","94","  public NotificationService(Settings settings, DefaultNotificationManager manager, DbClient dbClient) {","95","    this(settings, manager, dbClient, new NotificationDispatcher[0]);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/notifications\/NotificationServiceTest.java":[{"add":["31","import org.sonar.jpa.session.DatabaseSessionFactory;","72","      dbClient, mock(DatabaseSessionFactory.class),","73","      new NotificationDispatcher[] {commentOnIssueAssignedToMe, commentOnIssueCreatedByMe, qualityGateChange});","209","    service = new NotificationService(settings, manager, dbClient, mock(DatabaseSessionFactory.class));"],"delete":["71","      dbClient, new NotificationDispatcher[] {commentOnIssueAssignedToMe, commentOnIssueCreatedByMe, qualityGateChange});","207","    service = new NotificationService(settings, manager, dbClient);"]}]}},"9ea5ee4ea61f0311c4f1fa5d2cfa96896be9676c":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDto.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDtoTest.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDto.java":[{"add":["39","import java.util.*;","108","    if (reducedLine.isEmpty()) {"],"delete":["39","import java.util.Collections;","40","import java.util.HashMap;","41","import java.util.Iterator;","42","import java.util.List;","43","import java.util.Map;","112","    if (line.isEmpty()) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/db\/migrations\/v50\/FileSourceDtoTest.java":[{"add":[],"delete":[]}]}},"a5095b9e5a19e470f345d96fda4d915b64ab8d35":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/DetailsContent.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/DetailsContent.tsx":[{"add":["68","              \/\/ pass unique key to re-mount the component when the quality gate changes","69","              key={qualityGate.id}"],"delete":[]}]}},"f19752352309f50f99510a5d44c2c6f3d2f63ec9":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/measures-overlay.js":"MODIFY","server\/sonar-web\/src\/main\/js\/widgets\/old\/treemap.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/measures-overlay.js":[{"add":["23","import { getMeasures } from '..\/..\/api\/measures';","24","import { getMetrics } from '..\/..\/api\/metrics';","25","import { formatMeasure } from '..\/..\/helpers\/measures';","32","    this.testsScroll = 0;","37","    Promise.all(requests).then(() => this.render());","123","        (Number(measures.sqale_index_raw) || 0) +","124","        (Number(measures.reliability_remediation_effort_raw) || 0) +","125","        (Number(measures.security_remediation_effort_raw) || 0);","158","    return getMetrics().then(metrics => {","159","      const metricsToRequest = metrics","160","          .filter(metric => metric.type !== 'DATA' && !metric.hidden)","161","          .map(metric => metric.key);","162","","163","      return getMeasures(this.model.key(), metricsToRequest).then(measures => {","164","        let nextMeasures = this.model.get('measures') || {};","165","        measures.forEach(measure => {","166","          const metric = metrics.find(metric => metric.key === measure.metric);","167","          nextMeasures[metric.key] = formatMeasure(measure.value, metric.type);","168","          nextMeasures[metric.key + '_raw'] = measure.value;","169","          metric.value = nextMeasures[metric.key];","170","        });","171","        nextMeasures = this.calcAdditionalMeasures(nextMeasures);","172","        this.model.set({","173","          measures: nextMeasures,","174","          measuresToDisplay: this.prepareMetrics(metrics)","175","        });","181","    return new Promise(resolve => {","182","      const that = this;","183","      const url = window.baseUrl + '\/api\/issues\/search';","184","      const options = {","185","        componentUuids: this.model.id,","186","        resolved: false,","187","        ps: 1,","188","        facets: 'types,severities,tags'","189","      };","191","      $.get(url, options).done(function (data) {","192","        const typesFacet = data.facets.find(facet => facet.property === 'types').values;","193","        const typesOrder = ['BUG', 'VULNERABILITY', 'CODE_SMELL'];","194","        const sortedTypesFacet = _.sortBy(typesFacet, function (v) {","195","          return typesOrder.indexOf(v.val);","196","        });","198","        const severitiesFacet = data.facets.find(facet => facet.property === 'severities').values;","199","        const sortedSeveritiesFacet = _.sortBy(severitiesFacet, facet => window.severityComparator(facet.val));","201","        const tagsFacet = data.facets.find(facet => facet.property === 'tags').values;","202","","203","        that.model.set({","204","          tagsFacet,","205","          typesFacet: sortedTypesFacet,","206","          severitiesFacet: sortedSeveritiesFacet,","207","          issuesCount: data.total","208","        });","209","","210","        resolve();","216","    return new Promise(resolve => {","217","      const that = this;","218","      const url = window.baseUrl + '\/api\/tests\/list';","219","      const options = { testFileId: this.model.id };","220","","221","      $.get(url, options).done(function (data) {","222","        that.model.set({ tests: data.tests });","223","        that.testSorting = 'status';","224","        that.testAsc = true;","225","        that.sortTests(function (test) {","226","          return `${that.testsOrder.indexOf(test.status)}_______${test.name}`;","227","        });","228","        resolve();"],"delete":["29","    const that = this;","34","    this.testsScroll = 0;","35","    $.when.apply($, requests).done(function () {","36","      that.render();","37","    });","123","        (measures.sqale_index_raw || 0) +","124","        (measures.reliability_remediation_effort_raw || 0) +","125","        (measures.security_remediation_effort_raw || 0);","158","    const that = this;","159","    const url = window.baseUrl + '\/api\/resources';","160","    const metrics = this.getMetrics();","161","    const options = {","162","      resource: this.model.key(),","163","      metrics: _.pluck(metrics, 'key').join()","164","    };","165","    return $.get(url, options).done(function (data) {","166","      const measuresList = data[0].msr || [];","167","      let measures = that.model.get('measures') || {};","168","      measuresList.forEach(function (m) {","169","        const metric = _.findWhere(metrics, { key: m.key });","170","        metric.value = m.frmt_val || m.data;","171","        measures[m.key] = m.frmt_val || m.data;","172","        measures[m.key + '_raw'] = m.val;","173","      });","174","      measures = that.calcAdditionalMeasures(measures);","175","      that.model.set({","176","        measures,","177","        measuresToDisplay: that.prepareMetrics(metrics)","183","    const that = this;","184","    const url = window.baseUrl + '\/api\/issues\/search';","185","    const options = {","186","      componentUuids: this.model.id,","187","      resolved: false,","188","      ps: 1,","189","      facets: 'types,severities,tags'","190","    };","191","    return $.get(url, options).done(function (data) {","192","      const typesFacet = data.facets.find(facet => facet.property === 'types').values;","193","      const typesOrder = ['BUG', 'VULNERABILITY', 'CODE_SMELL'];","194","      const sortedTypesFacet = _.sortBy(typesFacet, function (v) {","195","        return typesOrder.indexOf(v.val);","196","      });","198","      const severitiesFacet = data.facets.find(facet => facet.property === 'severities').values;","199","      const sortedSeveritiesFacet = _.sortBy(severitiesFacet, facet => window.severityComparator(facet.val));","201","      const tagsFacet = data.facets.find(facet => facet.property === 'tags').values;","203","      that.model.set({","204","        tagsFacet,","205","        typesFacet: sortedTypesFacet,","206","        severitiesFacet: sortedSeveritiesFacet,","207","        issuesCount: data.total","213","    const that = this;","214","    const url = window.baseUrl + '\/api\/tests\/list';","215","    const options = { testFileId: this.model.id };","216","    return $.get(url, options).done(function (data) {","217","      that.model.set({ tests: data.tests });","218","      that.testSorting = 'status';","219","      that.testAsc = true;","220","      that.sortTests(function (test) {","221","        return `${that.testsOrder.indexOf(test.status)}_______${test.name}`;"]}],"server\/sonar-web\/src\/main\/js\/widgets\/old\/treemap.js":[{"add":["20","","22","import { formatMeasure } from '..\/..\/helpers\/measures';","23","import { getChildren } from '..\/..\/api\/components';","300","  Treemap.prototype.formatComponents = function (components, metrics) {","301","    const nextComponents = components","302","        .filter(component => {","303","          const sizeMeasure = component.measures.find(measure => measure.metric === this.sizeMetric.key);","304","          return sizeMeasure != null;","305","        })","306","        .map(component => {","307","          const measures = component.measures.map(measure => {","308","            const metric = metrics.find(metric => metric.key === measure.metric);","309","            return { ...measure, metricType: metric.type };","310","          });","311","          return { ...component, measures };","313","","314","    if (nextComponents.length > 0) {","315","      return nextComponents.map(component => {","317","","318","        component.measures.forEach(measure => {","319","          measures[measure.metric] = {","320","            val: measure.value,","321","            fval: formatMeasure(measure.value, measure.metricType)","324","","326","          key: component.refKey != null ? component.refKey : component.key,","328","          longName: component.name,","337","    return getChildren(d.key, this.metricsPriority(), { additionalFields: 'metrics' }).then(r => {","338","      let components = this.formatComponents(r.components, r.metrics);","340","        components = _.sortBy(components, component => -this.sizeMetric.value(component));","341","        components = _.initial(components, components.length - this.options().maxItems - 1);","342","        this.updateTreemap(components, components.length > this.options().maxItems);","343","        this.addToBreadcrumbs(_.extend(d, {","345","          maxResultsReached: this.maxResultsReached()"],"delete":["19","import $ from 'jquery';","298","  Treemap.prototype.formatComponents = function (data) {","299","    const that = this;","300","    const components = _.filter(data, function (component) {","301","      const hasSizeMetric = function () {","302","        return _.findWhere(component.msr, {","303","          key: that.sizeMetric.key","305","      };","306","      return _.isArray(component.msr) && component.msr.length > 0 && hasSizeMetric();","307","    });","308","    if (_.isArray(components) && components.length > 0) {","309","      return components.map(function (component) {","311","        component.msr.forEach(function (measure) {","312","          measures[measure.key] = {","313","            val: measure.val,","314","            fval: measure.frmt_val,","315","            text: measure.text,","316","            data: measure.data","320","          key: component.copy != null ? component.copy : component.key,","322","          longName: component.lname,","331","    const that = this;","332","    const metrics = this.metricsPriority().join(',');","333","    const RESOURCES_URL = window.baseUrl + '\/api\/resources\/index';","334","    return $.get(RESOURCES_URL, {","335","      resource: d.key,","336","      depth: 1,","337","      metrics","338","    }).done(function (r) {","339","      let components = that.formatComponents(r);","341","        components = _.sortBy(components, function (component) {","342","          return -that.sizeMetric.value(component);","343","        });","344","        components = _.initial(components, components.length - that.options().maxItems - 1);","345","        that.updateTreemap(components, components.length > that.options().maxItems);","346","        return that.addToBreadcrumbs(_.extend(d, {","348","          maxResultsReached: that.maxResultsReached()"]}]}},"3ba0210407680ae481d91658f0b623d5353a2663":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestRequest.java":"MODIFY","pom.xml":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestResponse.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestRequest.java":[{"add":["25","import com.google.protobuf.GeneratedMessageV3;","151","  public <T extends GeneratedMessageV3> T executeProtobuf(Class<T> protobufClass) {"],"delete":["25","import com.google.protobuf.GeneratedMessage;","151","  public <T extends GeneratedMessage> T executeProtobuf(Class<T> protobufClass) {"]}],"pom.xml":[{"add":["90","    <protobuf.version>3.5.1<\/protobuf.version>","271","          <version>0.5.1<\/version>"],"delete":["90","    <protobuf.version>3.0.0-beta-2<\/protobuf.version>","271","          <version>0.5.0<\/version>"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestResponse.java":[{"add":["21","import com.google.protobuf.GeneratedMessageV3;","42","  public <T extends GeneratedMessageV3> T getInputObject(Class<T> protobufClass) {"],"delete":["21","import com.google.protobuf.GeneratedMessage;","42","  public <T extends GeneratedMessage> T getInputObject(Class<T> protobufClass) {"]}]}},"bf7ec4b2326636021f0634d817fded3619773902":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.ts":[{"add":["150","    return [...PORTFOLIO_METRICS];","153","    return [...APPLICATION_METRICS];","156","    return [...LEAK_METRICS];","158","  return [...METRICS];","194","  if (['VW', 'SVW'].includes(qualifier)) {","195","    metrics.push('alert_status');","196","  }"],"delete":["150","    return PORTFOLIO_METRICS;","153","    return APPLICATION_METRICS;","156","    return LEAK_METRICS;","158","  return METRICS;"]}]}},"04c13b353fcb16dc53b1287f301301dad8d79abf":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLinks.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/Meta.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLinks.js":[{"add":["20","import { getProjectLinks } from '..\/..\/..\/api\/projectLinks';","21","import { isProvided } from '..\/..\/project-admin\/links\/utils';","23","export default class MetaLinks extends React.Component {","24","  static propTypes = {","25","    component: React.PropTypes.object.isRequired","26","  };","28","  state = {};","29","","30","  componentDidMount () {","31","    this.mounted = true;","32","    this.loadLinks();","33","  }","34","","35","  componentDidUpdate (prevProps) {","36","    if (prevProps.component !== this.props.component) {","37","      this.loadLinks();","38","    }","39","  }","40","","41","  componentWillUnmount () {","42","    this.mounted = false;","43","  }","44","","45","  loadLinks () {","46","    getProjectLinks(this.props.component.key).then(links => {","47","      if (this.mounted) {","48","        this.setState({ links });","49","      }","50","    });","51","  }","52","","53","  renderLinkIcon (link) {","54","    return isProvided(link) ?","55","        <i className={`icon-color-link icon-${link.type}`}\/> :","56","        <i className=\"icon-color-link icon-detach\"\/>;","57","  }","58","","59","  render () {","60","    const { links } = this.state;","61","","62","    if (links == null || links.length === 0) {","63","      return null;","64","    }","65","","66","    return (","67","        <ul className=\"overview-meta-list big-spacer-bottom\">","68","          {links.map(link => (","69","              <li key={link.id}>","70","                <a className=\"link-with-icon\" href={link.url} target=\"_blank\">","71","                  {this.renderLinkIcon(link)}","72","                  &nbsp;","73","                  {link.name}","74","                <\/a>","75","              <\/li>","76","          ))}","77","        <\/ul>","78","    );","79","  }","80","}"],"delete":["21","const MetaLinks = ({ links }) => {","22","  return (","23","      <ul className=\"overview-meta-list big-spacer-bottom\">","24","        {links.map(link => (","25","            <li key={link.type}>","26","              <a","27","                  className=\"link-with-icon\"","28","                  href={link.href}","29","                  target=\"_blank\">","30","                <i className={`icon-color-link icon-${link.type}`}\/>","31","                &nbsp;","32","                {link.name}","33","              <\/a>","34","            <\/li>","35","        ))}","36","      <\/ul>","37","  );","38","};","40","export default MetaLinks;"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/Meta.js":[{"add":["28","  const { qualifier, description, profiles, gate } = component;","52","          <MetaLinks component={component}\/>"],"delete":["28","  const { qualifier, description, links, profiles, gate } = component;","35","  const hasLinks = Array.isArray(links) && !!links.length;","53","          {hasLinks && (","54","              <MetaLinks links={links}\/>","55","          )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":[{"add":["250","  \/* 1px to not cut icons on the left *\/","251","  padding-left: 1px;"],"delete":[]}]}},"72ac5447a32d6537e805374116cbf369f7a65038":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileSimilarityImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/MatchesByScoreTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/SourceSimilarityImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/SourceSimilarityImpl.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileSimilarity.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStepTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileSimilarityImpl.java":[{"add":["31","    \/\/ Algorithm could be improved by increasing score","32","    \/\/ depending on filename similarity","33","    \/\/ Current implementation relies on file content only.","35","    return sourceSimilarity.score(file1.getLineHashes(), file2.getLineHashes());"],"delete":["21","import java.util.List;","22","","33","    int score = 0;","35","    \/\/ TODO check filenames","36","","37","    List<String> lineHashes1 = file1.getLineHashes();","38","    List<String> lineHashes2 = file2.getLineHashes();","39","    if (lineHashes1 != null && lineHashes2 != null) {","40","      score += sourceSimilarity.score(lineHashes1, lineHashes2);","41","    }","42","    return score;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/MatchesByScoreTest.java":[{"add":["32","import static java.util.Collections.emptyList;","33","import static java.util.Collections.emptySet;","43","    Set<String> doesNotMatterDbFileKeys = emptySet();","82","    return new FileSimilarity.File(\"path of \" + key, emptyList());"],"delete":["41","    Set<String> doesNotMatterDbFileKeys = Collections.emptySet();","80","    return new FileSimilarity.File(\"path of \" + key, null);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/SourceSimilarityImplTest.java":[{"add":["27","import static java.util.Collections.emptyList;","35","  private SourceSimilarityImpl underTest = new SourceSimilarityImpl();","56","","57","  @Test","58","  public void two_empty_lists_are_not_considered_as_equal() {","59","    assertThat(underTest.score(emptyList(), emptyList())).isEqualTo(0);","60","  }"],"delete":["34","  SourceSimilarityImpl underTest = new SourceSimilarityImpl();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":[{"add":["58","import static com.google.common.base.MoreObjects.firstNonNull;","236","    String lineHashes = firstNonNull(fileSourceDto.getLineHashes(), \"\");","237","    return new File(dbComponent.getPath(), LINES_HASHES_SPLITTER.splitToList(lineHashes));"],"delete":["235","    return new File(dbComponent.getPath(), LINES_HASHES_SPLITTER.splitToList(fileSourceDto.getLineHashes()));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/SourceSimilarityImpl.java":[{"add":["29","  public <T> int score(List<T> left, List<T> right) {","30","    if (left.isEmpty() && right.isEmpty()) {","31","      return 0;","32","    }","37","  private static <T> int levenshteinDistance(List<T> left, List<T> right) {"],"delete":["29","  public <T extends Object> int score(List<T> left, List<T> right) {","34","  <T extends Object> int levenshteinDistance(List<T> left, List<T> right) {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileSimilarity.java":[{"add":["31","    public File(String path, List<String> lineHashes) {","33","      this.lineHashes = requireNonNull(lineHashes, \"lineHashes can not be null\");","40","    \/**","41","     * List of hash of each line. An empty list is returned","42","     * if file content is empty.","43","     *\/"],"delete":["22","import javax.annotation.CheckForNull;","23","import javax.annotation.Nullable;","33","    public File(String path, @Nullable List<String> lineHashes) {","35","      this.lineHashes = lineHashes;","42","    @CheckForNull"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStepTest.java":[{"add":["30","import javax.annotation.Nullable;","411","  public void execute_detects_no_move_if_two_files_are_empty() {","412","    analysisMetadataHolder.setBaseAnalysis(ANALYSIS);","413","    mockComponents(FILE_1.getKey(), FILE_2.getKey());","414","    mockContentOfFileInDb(FILE_1.getKey(), null);","415","    mockContentOfFileInDb(FILE_2.getKey(), null);","416","","417","    underTest.execute();","418","","419","    assertThat(movedFilesRepository.getComponentsWithOriginal()).isEmpty();","420","  }","421","","422","  @Test","509","  private void mockContentOfFileInDb(String key, @Nullable String[] content) {","510","    FileSourceDto dto = new FileSourceDto();","511","    if (content != null) {","512","      SourceLinesHashesComputer linesHashesComputer = new SourceLinesHashesComputer();","513","      stream(content).forEach(linesHashesComputer::addLine);","514","      dto.setLineHashes(on('\\n').join(linesHashesComputer.getLineHashes()));","517","    when(fileSourceDao.selectSourceByFileUuid(dbSession, componentUuidOf(key))).thenReturn(dto);"],"delete":["25","import java.util.Arrays;","28","import java.util.Iterator;","498","  private void mockContentOfFileInDb(String key, String[] content) {","499","    SourceLinesHashesComputer linesHashesComputer = new SourceLinesHashesComputer();","500","    Iterator<String> lineIterator = Arrays.asList(content).iterator();","501","    while (lineIterator.hasNext()) {","502","      String line = lineIterator.next();","503","      linesHashesComputer.addLine(line);","506","    when(fileSourceDao.selectSourceByFileUuid(dbSession, componentUuidOf(key)))","507","      .thenReturn(new FileSourceDto()","508","        .setLineHashes(on('\\n').join(linesHashesComputer.getLineHashes())));"]}]}},"fa27c18738852cb20da4669b4d61691270accc14":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/projectInformation\/ProjectInformation.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/projectInformation\/ProjectInformation.tsx":[{"add":["88","    const canConfigureNotifications =","89","      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;"],"delete":["88","    const canConfigureNotifications = isLoggedIn(currentUser);"]}]}},"68776c0a9456b77f051baf474810e7a4e2c32694":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentValidatorTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentValidator.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/SubmitAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/CreateAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/ReportSubmitter.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDto.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/OrganizationProjectSuite.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ResourceDto.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/NewComponentTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentTreeBuilder.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectInfoTest.java":"ADD"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentValidatorTest.java":[{"add":["35","    String name = repeat(\"a\", 500);","41","  public void fail_when_name_longer_than_500_characters() {","45","    ComponentValidator.checkComponentName(repeat(\"a\", 500 + 1));"],"delete":["35","    String name = repeat(\"a\", 2000);","41","  public void fail_when_name_longer_than_2000_characters() {","45","    ComponentValidator.checkComponentName(repeat(\"a\", 2000 + 1));"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentValidator.java":[{"add":["21","import javax.annotation.Nullable;","22","","28","  \/\/ b_name column is 500 characters wide","29","  public static final int MAX_COMPONENT_NAME_LENGTH = 500;","30","  public static final int MAX_COMPONENT_DESCRIPTION_LENGTH = 2_000;","31","  private static final int MAX_COMPONENT_TAGS_LENGTH = 500;","45","  public static String checkComponentLongName(@Nullable String value) {","46","    if (value == null) {","47","      return null;","48","    }","49","    checkArgument(value.length() <= MAX_COMPONENT_NAME_LENGTH, \"Component name length (%s) is longer than the maximum authorized (%s). '%s' was provided.\",","50","      value.length(), MAX_COMPONENT_NAME_LENGTH, value);","51","    return value;","52","  }","53","","54","  public static String checkDescription(@Nullable String value) {","55","    if (value == null) {","56","      return null;","57","    }","58","","59","    checkArgument(value.length() <= MAX_COMPONENT_NAME_LENGTH, \"Component description length (%s) is longer than the maximum authorized (%s). '%s' was provided.\",","60","      value.length(), MAX_COMPONENT_DESCRIPTION_LENGTH, value);","61","    return value;","62","  }","63","","64","  public static String checkTags(@Nullable String value) {","65","    if (value == null) {","66","      return null;","67","    }","68","","69","    checkArgument(value.length() <= MAX_COMPONENT_NAME_LENGTH, \"Component tags length (%s) is longer than the maximum authorized (%s). '%s' was provided.\",","70","      value.length(), MAX_COMPONENT_TAGS_LENGTH, value);","71","    return value;","72","  }","73",""],"delete":["26","  public static final int MAX_COMPONENT_NAME_LENGTH = 2000;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/SubmitAction.java":[{"add":["35","import static org.apache.commons.lang.StringUtils.abbreviate;","36","import static org.apache.commons.lang.StringUtils.defaultIfBlank;","90","      .setDescription(\"Optional name of the project, used only if the project does not exist yet. If name is longer than %d, it is abbreviated.\", MAX_COMPONENT_NAME_LENGTH)","113","    String projectName = abbreviate(defaultIfBlank(wsRequest.param(PARAM_PROJECT_NAME), projectKey), MAX_COMPONENT_NAME_LENGTH);"],"delete":["88","      .setMaximumLength(MAX_COMPONENT_NAME_LENGTH)","89","      .setDescription(\"Optional name of the project, used only if the project does not exist yet.\")","112","    String projectName = StringUtils.defaultIfBlank(wsRequest.param(PARAM_PROJECT_NAME), projectKey);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/CreateAction.java":[{"add":["21","import javax.annotation.CheckForNull;","22","import javax.annotation.Nullable;","36","import static org.apache.commons.lang.StringUtils.abbreviate;","90","      .setDescription(\"Name of the project. If name is longer than %d, it is abbreviated.\", MAX_COMPONENT_NAME_LENGTH)","139","      .setName(abbreviate(request.mandatoryParam(PARAM_NAME), MAX_COMPONENT_NAME_LENGTH))"],"delete":["34","import javax.annotation.CheckForNull;","35","import javax.annotation.Nullable;","36","","90","      .setDescription(\"Name of the project\")","92","      .setMaximumLength(MAX_COMPONENT_NAME_LENGTH)","140","      .setName(request.mandatoryParam(PARAM_NAME))"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/ReportSubmitter.java":[{"add":["53","import static org.apache.commons.lang.StringUtils.defaultIfBlank;","163","      .setName(defaultIfBlank(projectName, projectKey))"],"delete":["29","import org.apache.commons.lang.StringUtils;","163","      .setName(StringUtils.defaultIfBlank(projectName, projectKey))"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDto.java":[{"add":["38","import static org.sonar.db.component.ComponentValidator.checkComponentLongName;","341","    this.longName = checkComponentLongName(longName);"],"delete":["340","    this.longName = longName;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImpl.java":[{"add":["31","import static org.apache.commons.lang.StringUtils.abbreviate;","33","import static org.sonar.db.component.ComponentValidator.MAX_COMPONENT_DESCRIPTION_LENGTH;","34","import static org.sonar.db.component.ComponentValidator.MAX_COMPONENT_NAME_LENGTH;","191","      this.name = abbreviate(requireNonNull(name, NAME_CANNOT_BE_NULL), MAX_COMPONENT_NAME_LENGTH);","196","      this.description = abbreviate(trimToNull(description), MAX_COMPONENT_DESCRIPTION_LENGTH);"],"delete":["188","      this.name = requireNonNull(name, NAME_CANNOT_BE_NULL);","193","      this.description = trimToNull(description);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["21","import com.google.common.base.Strings;","214","    assertThat(result.getProject().getVisibility()).isEqualTo(\"public\");","215","  }","216","","217","  @Test","218","  public void abbreviate_project_name_if_very_long() {","219","    OrganizationDto organization = db.organizations().insert();","220","    userSession.addPermission(PROVISION_PROJECTS, organization);","221","    String longName = Strings.repeat(\"a\", 1_000);","222","","223","    ws.newRequest()","224","      .setParam(\"key\", DEFAULT_PROJECT_KEY)","225","      .setParam(\"name\", longName)","226","      .setParam(\"organization\", organization.getKey())","227","      .executeProtobuf(CreateWsResponse.class);","228","","229","    assertThat(db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get().name())","230","      .isEqualTo(Strings.repeat(\"a\", 497) + \"...\");","353","    assertThat(name.description()).isEqualTo(\"Name of the project. If name is longer than 500, it is abbreviated.\");"],"delete":["21","import org.assertj.core.api.AssertionsForClassTypes;","214","    AssertionsForClassTypes.assertThat(result.getProject().getVisibility()).isEqualTo(\"public\");","337","    assertThat(name.maximumLength()).isEqualTo(2000);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/OrganizationProjectSuite.java":[{"add":["38","  ProjectInfoTest.class,"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ResourceDto.java":[{"add":["26","import static org.sonar.db.component.ComponentValidator.checkComponentLongName;","28","import static org.sonar.db.component.ComponentValidator.checkDescription;","146","    this.longName = checkComponentLongName(longName);","182","    this.description = checkDescription(description);"],"delete":["144","    this.longName = longName;","180","    this.description = description;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":[{"add":["21","import com.google.common.base.Strings;","116","  public void abbreviate_long_name() {","117","    String longName = Strings.repeat(\"a\", 1_000);","118","    String expectedName = Strings.repeat(\"a\", 497) + \"...\";","119","    when(reportSubmitter.submit(eq(organizationKey), eq(\"my_project\"), isNull(), eq(expectedName),","120","      anyMap(), any())).thenReturn(A_CE_TASK);","121","","122","    Ce.SubmitResponse submitResponse = tester.newRequest()","123","      .setParam(\"projectKey\", \"my_project\")","124","      .setParam(\"projectName\", longName)","125","      .setPart(\"report\", new ByteArrayInputStream(\"{binary}\".getBytes()), \"foo.bar\")","126","      .setMethod(\"POST\")","127","      .executeProtobuf(Ce.SubmitResponse.class);","128","","129","    verify(reportSubmitter).submit(eq(organizationKey), eq(\"my_project\"), isNull(), eq(expectedName),","130","      anyMap(), any());","131","","132","    assertThat(submitResponse.getTaskId()).isEqualTo(\"TASK_1\");","133","    assertThat(submitResponse.getProjectId()).isEqualTo(\"PROJECT_1\");","134","  }","135","","136","  @Test"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/NewComponentTest.java":[{"add":["92","      .setName(repeat(\"a\", 501));","96","      \"Component name length (501) is longer than the maximum authorized (500)\");"],"delete":["92","      .setName(repeat(\"a\", 2001));","96","      \"Component name length (2001) is longer than the maximum authorized (2000)\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImplTest.java":[{"add":["28","import static com.google.common.base.Strings.repeat;","40","  public ExpectedException expectedException = ExpectedException.none();","53","    expectedException.expect(NullPointerException.class);","60","    expectedException.expect(NullPointerException.class);","67","    expectedException.expect(NullPointerException.class);","79","    expectedException.expect(NullPointerException.class);","86","    expectedException.expect(NullPointerException.class);","93","    expectedException.expect(NullPointerException.class);","100","    expectedException.expect(NullPointerException.class);","173","  public void keep_500_first_characters_of_name() {","174","    String veryLongString = repeat(\"a\", 3_000);","175","","176","    ComponentImpl underTest = buildSimpleComponent(FILE, \"file\")","177","      .setName(veryLongString)","178","      .build();","179","","180","    String expectedName = repeat(\"a\", 500-3) + \"...\";","181","    assertThat(underTest.getName()).isEqualTo(expectedName);","182","  }","183","","184","  @Test","185","  public void keep_2000_first_characters_of_description() {","186","    String veryLongString = repeat(\"a\", 3_000);","187","","188","    ComponentImpl underTest = buildSimpleComponent(FILE, \"file\")","189","      .setDescription(veryLongString)","190","      .build();","191","","192","    String expectedDescription = repeat(\"a\", 2_000-3) + \"...\";","193","    assertThat(underTest.getDescription()).isEqualTo(expectedDescription);","194","  }","195","","196","  @Test"],"delete":["39","  public ExpectedException thrown = ExpectedException.none();","52","    thrown.expect(NullPointerException.class);","59","    thrown.expect(NullPointerException.class);","66","    thrown.expect(NullPointerException.class);","78","    thrown.expect(NullPointerException.class);","85","    thrown.expect(NullPointerException.class);","92","    thrown.expect(NullPointerException.class);","99","    thrown.expect(NullPointerException.class);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentTreeBuilder.java":[{"add":["151","        .setDescription(component.getDescription());"],"delete":["151","        .setDescription(trimToNull(component.getDescription()));"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectInfoTest.java":[{"add":[],"delete":[]}]}},"0caa8ba6650b2ecc7538c3bbc6443e69069bc3e1":{"changes":{"sonar-scanner-engine\/src\/test\/resources\/mediumtest\/blameAuthor.txt":"ADD","\/dev\/null":"DELETE","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/DefaultBlameOutput.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/scm\/ScmMediumTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/resources\/mediumtest\/blameAuthor.txt":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/DefaultBlameOutput.java":[{"add":["114","    return inputString.toLowerCase();"],"delete":["22","import java.text.Normalizer;","29","import java.util.regex.Pattern;","47","  private static final Pattern NON_ASCII_CHARS = Pattern.compile(\"[^\\\\x00-\\\\x7F]\");","48","  private static final Pattern ACCENT_CODES = Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");","49","","119","    String lowerCasedString = inputString.toLowerCase();","120","    String stringWithoutAccents = removeAccents(lowerCasedString);","121","    return removeNonAsciiCharacters(stringWithoutAccents);","122","  }","123","","124","  private static String removeAccents(String inputString) {","125","    String unicodeDecomposedString = Normalizer.normalize(inputString, Normalizer.Form.NFD);","126","    return ACCENT_CODES.matcher(unicodeDecomposedString).replaceAll(\"\");","127","  }","128","","129","  private static String removeNonAsciiCharacters(String inputString) {","130","    return NON_ASCII_CHARS.matcher(inputString).replaceAll(\"_\");"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/scm\/ScmMediumTest.java":[{"add":["24","import java.net.URISyntaxException;","25","import java.nio.charset.StandardCharsets;","26","","29","import org.assertj.core.util.Files;","91","  public void testScmMeasure() throws IOException, URISyntaxException {","115","    assertThat(changesetLine2.getAuthor()).isEqualTo(getNonAsciiAuthor().toLowerCase());","143","  public void noScmOnEmptyFile() throws IOException, URISyntaxException {","169","  public void log_files_with_missing_blame() throws IOException, URISyntaxException {","200","  public void optimize_blame() throws IOException, URISyntaxException {","258","  public void forceReload() throws IOException, URISyntaxException {","293","  public void configureUsingScmURL() throws IOException, URISyntaxException {","315","  public void testAutoDetection() throws IOException, URISyntaxException {","336","  private String getNonAsciiAuthor() throws URISyntaxException {","337","    return Files.contentOf(new File(this.getClass().getResource(\"\/mediumtest\/blameAuthor.txt\").toURI()), StandardCharsets.UTF_8);","338","","339","  }","340","","341","  private File prepareProject() throws IOException, URISyntaxException {","352","        \"2,\" + getNonAsciiAuthor() + \",2013-01-04\\n\" +","355","        \"4,simon,2013-03-04\\n\",","356","      StandardCharsets.UTF_8);","362","  public void testDisableScmSensor() throws IOException, URISyntaxException {"],"delete":["87","  public void testScmMeasure() throws IOException {","111","    assertThat(changesetLine2.getAuthor()).isEqualTo(\"julien\");","139","  public void noScmOnEmptyFile() throws IOException {","165","  public void log_files_with_missing_blame() throws IOException {","196","  public void optimize_blame() throws IOException {","254","  public void forceReload() throws IOException {","289","  public void configureUsingScmURL() throws IOException {","311","  public void testAutoDetection() throws IOException {","332","  private File prepareProject() throws IOException {","343","        \"2,julien,2013-01-04\\n\" +","346","        \"4,simon,2013-03-04\\n\");","352","  public void testDisableScmSensor() throws IOException {"]}]}},"190f2755be5186d7a410a5847242a67d6b4bd22c":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/utils\/getHistory.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/utils\/getHistory.ts":[{"add":["27","    basename: (window as any).baseUrl"],"delete":["27","    basename: (window as any).baseUrl + '\/'"]}]}},"527a13d12e2457845d2631e2615181f6173c13bc":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ExportAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ExportActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ExportAction.java":[{"add":["91","      .setDeprecatedKey(\"name\", \"6.6\")"],"delete":["91","      .setDeprecatedKey(\"profileName\", \"6.6\")"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ExportActionTest.java":[{"add":["51","import static org.sonarqube.ws.client.qualityprofile.QualityProfileWsParameters.PARAM_LANGUAGE;","76","","80","","84","","87","    assertThat(name.deprecatedKey()).isEqualTo(\"name\");","88",""],"delete":["50","import static org.sonarqube.ws.client.qualityprofile.QualityProfileWsParameters.PARAM_LANGUAGE;"]}]}},"fe5472dfe520e0681034fbd9996ccd030627b09b":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleListItem-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleListItem-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleListItem.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleListItem-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleListItem-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleListItem.tsx":[{"add":["35","import { getRuleUrl } from '..\/..\/..\/helpers\/urls';","42","  onOpen: (ruleKey: string) => void;","71","  handleNameClick = (event: React.MouseEvent) => {","72","    \/\/ cmd(ctrl) + click should open a rule permalink in a new tab","73","    const isLeftClickEvent = event.button === 0;","74","    const isModifiedEvent = !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);","75","    if (isModifiedEvent || !isLeftClickEvent) {","76","      return;","77","    }","78","","79","    event.preventDefault();","80","    this.props.onOpen(this.props.rule.key);","81","  };","82","","193","                  <Link","194","                    className=\"link-no-underline\"","195","                    onClick={this.handleNameClick}","196","                    to={getRuleUrl(rule.key, this.props.organization)}>"],"delete":["42","  path: { pathname: string; query: { [x: string]: any } };","180","                  <Link className=\"link-no-underline\" to={this.props.path}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["22","import { withRouter, WithRouterProps } from 'react-router';","70","interface OwnProps extends WithRouterProps {","97","    organizationsEnabled: PropTypes.bool","350","      this.props.router.replace(path);","352","      this.props.router.push(path);","364","    this.props.router.push({","407","  handleRuleOpen = (ruleKey: string) => {","408","    this.props.router.push(this.getRulePath(ruleKey));","409","  };","410","","418","    this.props.router.push({","434","  handleReset = () => this.props.router.push({ pathname: this.props.location.pathname });","588","                      onOpen={this.handleRuleOpen}","641","export default withRouter(connect<StateToProps, {}, OwnProps>(mapStateToProps)(App));"],"delete":["69","interface OwnProps {","70","  location: { pathname: string; query: RawQuery };","97","    organizationsEnabled: PropTypes.bool,","98","    router: PropTypes.object.isRequired","351","      this.context.router.replace(path);","353","      this.context.router.push(path);","365","    this.context.router.push({","415","    this.context.router.push({","431","  handleReset = () => this.context.router.push({ pathname: this.props.location.pathname });","586","                      path={this.getRulePath(rule.key)}","638","export default connect<StateToProps, {}, OwnProps>(mapStateToProps)(App);"]}]}},"57606ff108c1c541f3e152a31bbbfdc0261b2dc6":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/scrolling.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Component.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/scrolling.ts":[{"add":["30","  return isWindow(element) ? window.pageYOffset : element.scrollTop;"],"delete":["30","  return isWindow(element) ? window.scrollY : element.scrollTop;"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Component.tsx":[{"add":["65","      window.scrollTo(0, bottom - window.innerHeight + window.pageYOffset + BOTTOM_OFFSET);","67","      window.scrollTo(0, top + window.pageYOffset - TOP_OFFSET);"],"delete":["65","      window.scrollTo(0, bottom - window.innerHeight + window.scrollY + BOTTOM_OFFSET);","67","      window.scrollTo(0, top + window.scrollY - TOP_OFFSET);"]}]}},"6be83fba1622cb8c41f9c1f537815ad801a16843":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["225","","226","    const to = (this.props.aroundLine || 0) + LINES;","228","      this.props.loadIssues(this.props.component, 1, to, this.props.branchLike).then("],"delete":["226","      this.props.loadIssues(this.props.component, 1, LINES, this.props.branchLike).then("]}]}},"a22bc323f8d43fb243031ead669c5ff876f75c0a":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["58","const LIMIT_BEFORE_LOAD_MORE = 5;","290","    const { rules, loading, paging } = this.state;","292","    if (selectedIndex !== undefined) {","293","      if (","294","        selectedIndex > rules.length - LIMIT_BEFORE_LOAD_MORE &&","295","        !loading &&","296","        paging &&","297","        rules.length < paging.total","298","      ) {","299","        this.fetchMoreRules();","300","      }","301","      if (rules && selectedIndex < rules.length - 1) {","302","        if (this.state.openRule) {","303","          this.openRule(rules[selectedIndex + 1].key);","304","        } else {","305","          this.setState({ selected: rules[selectedIndex + 1].key });","306","        }"],"delete":["289","    const { rules } = this.state;","291","    if (rules && selectedIndex !== undefined && selectedIndex < rules.length - 1) {","292","      if (this.state.openRule) {","293","        this.openRule(rules[selectedIndex + 1].key);","294","      } else {","295","        this.setState({ selected: rules[selectedIndex + 1].key });"]}]}},"56844138c6d4b5a0a0365c08fd44d94135395154":{"changes":{"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV1.java":"ADD","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV2.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":"MODIFY","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV1.java":"MODIFY","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":"MODIFY","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV1.java":"ADD","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV2.java":"MODIFY","\/dev\/null":"DELETE","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV2.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/BlueGreenTest.java":"MODIFY","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV2.java":"ADD","tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV1.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":"MODIFY","tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":"MODIFY"},"diff":{"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV1.java":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV2.java":[{"add":["21","import org.sonar.api.rules.RuleType;","31","    NewRule ruleB = repo.createRule(\"b\")","32","      .setName(\"Rule B\")","33","      .setHtmlDescription(\"Rule B\")","34","      .setType(RuleType.VULNERABILITY);","35","    ruleB.createParam(\"p2\").setName(\"Param Two\");","36","    ruleB.createParam(\"p3\").setName(\"Param Three\");","37","","38","    repo.createRule(\"c\")","39","      .setName(\"Rule C\")","40","      .setHtmlDescription(\"Rule C\")","41","      .setType(RuleType.VULNERABILITY);"],"delete":["30","    repo.createRule(\"b\").setName(\"Rule B\").setHtmlDescription(\"Rule B\");","31","    repo.createRule(\"c\").setName(\"Rule C\").setHtmlDescription(\"Rule C\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":[{"add":["24","import java.util.Collection;","25","import java.util.HashMap;","26","import java.util.Map;","32","import org.sonar.api.Plugin;","52","import org.sonar.server.project.Project;","54","import static java.util.Arrays.stream;","78","  private TestPluginRepository pluginRepository = new TestPluginRepository();","337","    metadataBuilder.putQprofilesPerLanguage(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"jsInOrg1\").setName(\"Sonar way\").setLanguage(\"js\").build());","338","    metadataBuilder.putQprofilesPerLanguage(\"php\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"phpInOrg2\").setName(\"PHP way\").setLanguage(\"php\").build());","360","    metadataBuilder.putQprofilesPerLanguage(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"p1\").setName(\"Sonar way\").setLanguage(\"js\").build());","370","    \/\/ the installed plugins","371","    pluginRepository.add(","372","      new PluginInfo(\"java\"),","373","      new PluginInfo(\"customjava\").setBasePlugin(\"java\"),","374","      new PluginInfo(\"php\"));","376","    \/\/ the plugins sent by scanner","377","    ScannerReport.Metadata.Builder metadataBuilder = newBatchReportBuilder();","378","    metadataBuilder.putPluginsByKey(\"java\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"java\").setUpdatedAt(10L).build());","379","    metadataBuilder.putPluginsByKey(\"php\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"php\").setUpdatedAt(20L).build());","380","    metadataBuilder.putPluginsByKey(\"customjava\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"customjava\").setUpdatedAt(30L).build());","381","    metadataBuilder.putPluginsByKey(\"uninstalled\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"uninstalled\").setUpdatedAt(40L).build());","387","      .containsExactlyInAnyOrder(","388","        tuple(\"java\", null, 10L),","389","        tuple(\"php\", null, 20L),","390","        tuple(\"customjava\", \"java\", 30L),","391","        tuple(\"uninstalled\", null, 40L));","411","  private static class TestPluginRepository implements PluginRepository {","412","    private final Map<String, PluginInfo> pluginsMap = new HashMap<>();","413","","414","    void add(PluginInfo... plugins) {","415","      stream(plugins).forEach(p -> pluginsMap.put(p.getKey(), p));","416","    }","417","","418","    @Override","419","    public Collection<PluginInfo> getPluginInfos() {","420","      return pluginsMap.values();","421","    }","422","","423","    @Override","424","    public PluginInfo getPluginInfo(String key) {","425","      if (!pluginsMap.containsKey(key)) {","426","        throw new IllegalArgumentException();","427","      }","428","      return pluginsMap.get(key);","429","    }","430","","431","    @Override","432","    public Plugin getPluginInstance(String key) {","433","      throw new UnsupportedOperationException();","434","    }","435","","436","    @Override","437","    public boolean hasPlugin(String key) {","438","      return pluginsMap.containsKey(key);","439","    }","440","  }"],"delete":["41","import org.sonar.server.project.Project;","73","  private PluginRepository pluginRepository = mock(PluginRepository.class);","332","    metadataBuilder.getMutableQprofilesPerLanguage().put(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"jsInOrg1\").setName(\"Sonar way\").setLanguage(\"js\").build());","333","    metadataBuilder.getMutableQprofilesPerLanguage().put(\"php\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"phpInOrg2\").setName(\"PHP way\").setLanguage(\"php\").build());","355","    metadataBuilder.getMutableQprofilesPerLanguage().put(\"js\", ScannerReport.Metadata.QProfile.newBuilder().setKey(\"p1\").setName(\"Sonar way\").setLanguage(\"js\").build());","365","    ScannerReport.Metadata.Builder metadataBuilder = newBatchReportBuilder();","366","    metadataBuilder.getMutablePluginsByKey().put(\"java\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"java\").setUpdatedAt(12345L).build());","367","    metadataBuilder.getMutablePluginsByKey().put(\"php\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"php\").setUpdatedAt(678910L).build());","368","    metadataBuilder.getMutablePluginsByKey().put(\"customjava\", ScannerReport.Metadata.Plugin.newBuilder().setKey(\"customjava\").setUpdatedAt(111111L).build());","369","    when(pluginRepository.getPluginInfo(\"customjava\")).thenReturn(new PluginInfo(\"customjava\").setBasePlugin(\"java\"));","375","    assertThat(analysisMetadataHolder.getScannerPluginsByKey()).containsOnlyKeys(\"java\", \"php\", \"customjava\");","377","      .containsOnly(","378","        tuple(\"java\", null, 12345L),","379","        tuple(\"customjava\", \"java\", 111111L),","380","        tuple(\"php\", null, 678910L));"]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/RulesDefinitionV1.java":[{"add":["21","import org.sonar.api.rules.RuleType;","31","    repo.createRule(\"a\")","32","      .setName(\"Rule A\")","33","      .setHtmlDescription(\"Rule A\")","34","      .setType(RuleType.VULNERABILITY);","35","    NewRule ruleB = repo.createRule(\"b\")","36","      .setName(\"Rule B\")","37","      .setHtmlDescription(\"Rule B\")","38","      .setType(RuleType.VULNERABILITY);","39","    ruleB.createParam(\"p1\").setName(\"Param One\");","40","    ruleB.createParam(\"p2\").setName(\"Param Two\");"],"delete":["30","    repo.createRule(\"a\").setName(\"Rule A\").setHtmlDescription(\"Rule A\");","31","    repo.createRule(\"b\").setName(\"Rule B\").setHtmlDescription(\"Rule B\");"]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":[{"add":["29","      MetricsDefinitionV1.class,","32","      SensorV1.class);"],"delete":["31","      RuleSensorV1.class);"]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV1.java":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV2.java":[{"add":["27","    NewBuiltInActiveRule activeB = profile.activateRule(RulesDefinitionV2.REPOSITORY_KEY, \"b\")","28","      .overrideSeverity(\"MINOR\");","29","    activeB.overrideParam(\"p2\", \"two\");","30","    activeB.overrideParam(\"p3\", \"three\");"],"delete":["27","    profile.activateRule(RulesDefinitionV2.REPOSITORY_KEY, \"b\").overrideSeverity(\"MINOR\");"]}],"\/dev\/null":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/SensorV2.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/BlueGreenTest.java":[{"add":["38","import org.sonarqube.ws.client.plugins.UninstallRequest;","40","import util.ItUtils;","70","  public void upgrade_analyzer_when_analysis_is_pending_in_compute_engine_queue() throws Exception {","79","    Project project = new Project();","80","    project.associateToXooProfile(\"Blue Profile\");","81","    project.analyzeAndWait();","82","    \/\/ assert 2 issues + security rating E (rule A is blocker, rule B is critical)","83","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"violations\")).isEqualTo(2.0);","84","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"security_rating\")).isEqualTo(5.0);","85","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"blue\")).isEqualTo(10.0);","86","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"bluegreen\")).isEqualTo(20.0);","87","","88","    \/\/ remove rule \"A\" and metric \"blue\" between analysis and execution of Compute Engine","89","","90","    \/\/ 1. pause compute engine so that the second analysis is kept pending","92","    project.analyze();","95","    \/\/ 2. upgrade plugin and verify that analysis is still pending in CE queue","103","    \/\/ 3. resume the queue and verify that the issue on rule A is ignored. Only","104","    \/\/ the critical issue on rule B is remaining","106","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"violations\")).isEqualTo(1.0);","107","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"security_rating\")).isEqualTo(4.0);","108","    assertThat(ItUtils.getMeasure(orchestrator, project.getKey(), \"blue\")).isNull();","109","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"bluegreen\")).isEqualTo(20.0);","111","    \/\/ test removal of analyzer. Analysis should not fail when queue is resumed.","112","    tester.wsClient().ce().pause();","113","    project.analyze();","114","    tester.wsClient().plugins().uninstall(new UninstallRequest().setKey(\"xoo\"));","115","    tester.wsClient().plugins().uninstall(new UninstallRequest().setKey(\"bluegreen\"));","116","    orchestrator.restartServer();","118","    resumeAndWaitForCeQueueEmpty();","119","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"violations\")).isEqualTo(0.0);","120","    assertThat(ItUtils.getMeasureAsDouble(orchestrator, project.getKey(), \"security_rating\")).isEqualTo(1.0);","121","    assertThat(ItUtils.getMeasure(orchestrator, project.getKey(), \"blue\")).isNull();","122","    assertThat(ItUtils.getMeasure(orchestrator, project.getKey(), \"bluegreen\")).isNull();","139","","140","  private class Project {","141","    private final Projects.CreateWsResponse.Project project;","142","    private final File dir;","143","","144","    Project() throws Exception {","145","      this.project = tester.projects().provision();","146","      this.dir = new XooProjectBuilder(project.getKey())","147","        .setFilesPerModule(1)","148","        .build(temp.newFolder());","149","    }","150","","151","    String getKey() {","152","      return project.getKey();","153","    }","154","","155","    void associateToXooProfile(String name) {","156","      tester.wsClient().qualityprofiles().addProject(new AddProjectRequest()","157","        .setProject(project.getKey())","158","        .setLanguage(\"xoo\")","159","        .setQualityProfile(name));","160","    }","161","","162","    void analyzeAndWait() {","163","      orchestrator.executeBuild(SonarScanner.create(dir), true);","164","    }","165","","166","    void analyze() {","167","      orchestrator.executeBuild(SonarScanner.create(dir), false);","168","    }","169","  }"],"delete":["25","import java.io.IOException;","36","import org.sonarqube.qa.util.pageobjects.Navigation;","70","  public void test_change_of_version_at_runtime() throws Exception {","79","    \/\/ pause compute engine so that analysis is kept pending","81","    Projects.CreateWsResponse.Project project = tester.projects().provision();","82","    associateProjectToProfile(project, \"Blue Profile\");","83","    analyze(project);","86","    \/\/ open browser","87","    Navigation browser = tester.openBrowser();","88","","89","","90","    \/\/ upgrade plugin","94","","95","    \/\/ analysis task is still pending","102","    \/\/ TODO check issues and measures","103","  }","105","  private void analyze(Projects.CreateWsResponse.Project project) throws IOException {","106","    File projectDir = new XooProjectBuilder(project.getKey())","107","      .setFilesPerModule(1)","108","      .build(temp.newFolder());","109","    orchestrator.executeBuild(SonarScanner.create(projectDir), false);","110","  }","111","","112","  private void associateProjectToProfile(Projects.CreateWsResponse.Project project, String xooProfileName) {","113","    tester.wsClient().qualityprofiles().addProject(new AddProjectRequest()","114","      .setProject(project.getKey())","115","      .setLanguage(\"xoo\")","116","      .setQualityProfile(xooProfileName));"]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/MetricsDefinitionV2.java":[{"add":[],"delete":[]}],"tests\/plugins\/blue-green-plugin-v1\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BuiltInProfilesV1.java":[{"add":["27","    profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"a\")","28","      .overrideSeverity(\"BLOCKER\");","29","    NewBuiltInActiveRule activeB = profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"b\")","30","      .overrideSeverity(\"CRITICAL\");","31","    activeB.overrideParam(\"p1\", \"one\");","32","    activeB.overrideParam(\"p2\", \"two\");"],"delete":["27","    profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"a\").overrideSeverity(\"BLOCKER\");","28","    profile.activateRule(RulesDefinitionV1.REPOSITORY_KEY, \"b\").overrideSeverity(\"CRITICAL\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":[{"add":["49","import org.sonar.server.project.Project;","154","    if (!pluginRepository.hasPlugin(p.getKey())) {","159","    return pluginRepository.getPluginInfo(p.getKey()).getBasePlugin();"],"delete":["31","import org.sonar.core.platform.PluginInfo;","44","import org.sonar.server.project.Project;","155","    PluginInfo pluginInfo = pluginRepository.getPluginInfo(p.getKey());","156","    if (pluginInfo == null) {","161","    return pluginInfo.getBasePlugin();"]}],"tests\/plugins\/blue-green-plugin-v2\/src\/main\/java\/org\/sonarqube\/qa\/bluegreen\/BlueGreenPlugin.java":[{"add":["29","      MetricsDefinitionV2.class,","32","      SensorV2.class);"],"delete":["31","      RuleSensorV2.class);"]}]}},"f8cd06235249dffbf19efdc6755f550add0539cd":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/taskprocessor\/CeWorkerCallableImpl.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/taskprocessor\/CeWorkerCallableImpl.java":[{"add":["22","import javax.annotation.Nullable;","59","      LOG.error(format(\"An error occurred while executing task with uuid '%s'\", ceTask.get().getUuid()), e);","94","      finalizeTask(task, ceProfiler, status, taskResult, error);","95","    }","96","  }","97","","98","  private void finalizeTask(CeTask task, Profiler ceProfiler, CeActivityDto.Status status,","99","    @Nullable CeTaskResult taskResult, @Nullable Throwable error) {","100","    try {","102","    } catch (Exception e) {","103","      LOG.error(format(\"Failed to finalize task with uuid '%s' and persist its state to db\", task.getUuid()), e);","104","    } finally {"],"delete":["58","      LOG.error(\"An error occurred while managing task \" + ceTask.get().getUuid(), e);"]}]}},"95d91e6fff76d8561e5d9dd71379dde8bc6258fa":{"changes":{"pom.xml":"MODIFY","sonar-application\/dependency-check-suppressions.xml":"ADD","sonar-plugin-api-deps\/pom.xml":"MODIFY"},"diff":{"pom.xml":[{"add":["88","    <jjwt.version>0.9.0<\/jjwt.version>","239","          <version>3.0.1<\/version>","242","            <suppressionFile>dependency-check-suppressions.xml<\/suppressionFile>","243","            <enableExperimental>true<\/enableExperimental>","820","        <version>${jjwt.version}<\/version>"],"delete":["88","","239","          <version>1.2.11<\/version>","242","            <suppressionFile>cve-false-positives.xml<\/suppressionFile>","819","        <version>0.6.0<\/version>"]}],"sonar-application\/dependency-check-suppressions.xml":[{"add":[],"delete":[]}],"sonar-plugin-api-deps\/pom.xml":[{"add":["196","","197","  <profiles>","198","    <!--","199","    This module contains deprecated dependencies (containing vulnerability issues) for plugins built for SonarQube < 5.2","200","    It will be removed for 7.0","201","    -->","202","    <profile>","203","      <!--","204","      check if maven dependencies have vulnerabilities listed in CVE","205","      Standalone command: mvn org.owasp:dependency-check-maven:check","206","      See http:\/\/jeremylong.github.io\/DependencyCheck","207","      -->","208","      <id>securityCheck<\/id>","209","      <build>","210","        <plugins>","211","          <plugin>","212","            <groupId>org.owasp<\/groupId>","213","            <artifactId>dependency-check-maven<\/artifactId>","214","            <executions>","215","              <execution>","216","                <goals>","217","                  <goal>check<\/goal>","218","                <\/goals>","219","                <configuration>","220","                  <skip>true<\/skip>","221","                <\/configuration>","222","              <\/execution>","223","            <\/executions>","224","          <\/plugin>","225","        <\/plugins>","226","      <\/build>","227","    <\/profile>","228","  <\/profiles>","229",""],"delete":[]}]}},"1b9b161ffc7a35433028102f17ea968622ae1134":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2324","x_of_y_shown={0} of {1} shown"],"delete":[]}]}},"def7c630eb2d99ff42c819816f10289b99e3bc08":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStepTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStepTest.java":[{"add":["57","  private static final int PROJECT_REF = 1;","58","  private static final int MODULE_REF = 11;","59","  private static final int SUB_MODULE_REF = 111;","60","  private static final int DIR_REF = 1111;","61","  private static final int FILE1_REF = 11111;","62","  private static final int FILE2_REF = 11112;","64","  private static final String PROJECT_UUID = \"PROJECT\";","65","  private static final String MODULE_UUID = \"MODULE\";","66","  private static final String SUB_MODULE_UUID = \"SUB_MODULE\";","67","  private static final String DIR_UUID = \"DIR\";","68","  private static final String FILE1_UUID = \"FILE1\";","69","  private static final String FILE2_UUID = \"FILE2\";","71","  private static final String VIEW_UUID = \"VIEW\";","72","  private static final String SUBVIEW_UUID = \"SUBVIEW\";","74","  private static final int VIEW_REF = 10;","75","  private static final int SUBVIEW_REF = 101;","76","  private static final int PROJECT_VIEW_REF = 1011;","78","  private static final Metric FLOAT_METRIC = new MetricImpl(10, \"float_metric\", \"Float Metric\", Metric.MetricType.FLOAT);","79","  private static final Metric STRING_METRIC = new MetricImpl(11, \"string_metric\", \"String Metric\", Metric.MetricType.STRING);","162","  public void test_float_metric_type() throws Exception {","169","  public void test_int_metric_type() throws Exception {","176","  public void test_long_metric_type() throws Exception {","183","  public void test_percent_metric_type() throws Exception {","190","  public void test_string_metric_type() throws Exception {","197","  public void test_string_metric_type_with_null_value() throws Exception {","198","    CustomMeasureDto dto = new CustomMeasureDto();","199","    dto.setTextValue(null);","200","","201","    Measure measure = dtoToMeasure(dto, new MetricImpl(1, \"m\", \"M\", Metric.MetricType.STRING));","202","    assertThat(measure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);","203","  }","204","","205","  @Test","206","  public void test_data_metric_type_with_null_value() throws Exception {","207","    CustomMeasureDto dto = new CustomMeasureDto();","208","    dto.setTextValue(null);","209","","210","    Measure measure = dtoToMeasure(dto, new MetricImpl(1, \"m\", \"M\", Metric.MetricType.DATA));","211","    assertThat(measure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);","212","  }","213","","214","  @Test","215","  public void test_ditrib_metric_type_with_null_value() throws Exception {","216","    CustomMeasureDto dto = new CustomMeasureDto();","217","    dto.setTextValue(null);","218","","219","    Measure measure = dtoToMeasure(dto, new MetricImpl(1, \"m\", \"M\", Metric.MetricType.DISTRIB));","220","    assertThat(measure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);","221","  }","222","","223","  @Test","224","  public void test_LEVEL_metric_type() throws Exception {","231","  public void test_boolean_metric_type() throws Exception {"],"delete":["57","  static final int PROJECT_REF = 1;","58","  static final int MODULE_REF = 11;","59","  static final int SUB_MODULE_REF = 111;","60","  static final int DIR_REF = 1111;","61","  static final int FILE1_REF = 11111;","62","  static final int FILE2_REF = 11112;","64","  static final String PROJECT_UUID = \"PROJECT\";","65","  static final String MODULE_UUID = \"MODULE\";","66","  static final String SUB_MODULE_UUID = \"SUB_MODULE\";","67","  static final String DIR_UUID = \"DIR\";","68","  static final String FILE1_UUID = \"FILE1\";","69","  static final String FILE2_UUID = \"FILE2\";","71","  static final String VIEW_UUID = \"VIEW\";","72","  static final String SUBVIEW_UUID = \"SUBVIEW\";","74","  static final int VIEW_REF = 10;","75","  static final int SUBVIEW_REF = 101;","76","  static final int PROJECT_VIEW_REF = 1011;","78","  static final Metric FLOAT_METRIC = new MetricImpl(10, \"float_metric\", \"Float Metric\", Metric.MetricType.FLOAT);","79","  static final Metric STRING_METRIC = new MetricImpl(11, \"string_metric\", \"String Metric\", Metric.MetricType.STRING);","83","","86","","89","","94","","166","  public void test_float_value_type() throws Exception {","173","  public void test_int_value_type() throws Exception {","180","  public void test_long_value_type() throws Exception {","187","  public void test_percent_value_type() throws Exception {","194","  public void test_string_value_type() throws Exception {","201","  public void test_LEVEL_value_type() throws Exception {","208","  public void test_boolean_value_type() throws Exception {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStep.java":[{"add":["99","        String textValue = dto.getTextValue();","100","        if (textValue == null) {","101","          return Measure.newMeasureBuilder().createNoValue();","102","        }","103","        return Measure.newMeasureBuilder().create(textValue);"],"delete":["99","        return Measure.newMeasureBuilder().create(dto.getTextValue());"]}]}},"8f9cf4f2994f90fa69c2dd4f2b49a81ae98a6a25":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/issues.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/issues.ts":[{"add":["109","function prepareClosed(issue: RawIssue) {","110","  return issue.status === 'CLOSED'","111","    ? { flows: undefined, line: undefined, textRange: undefined }","112","    : {};"],"delete":["109","function prepareClosed(issue: RawIssue): { flows?: undefined } {","110","  return issue.status === 'CLOSED' ? { flows: undefined } : {};"]}]}},"593c7f08b8afa34f5bb683a34265f81b11094a62":{"changes":{"it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/module_a\/src\/main\/xoo\/sample\/Sample.xoo.measures":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v1\/module_a\/src\/main\/xoo\/sample\/Sample.xoo":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v2\/sonar-project.properties":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v1\/module_a\/sonar-project.properties":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v1\/module_a\/src\/main\/xoo\/sample\/Sample.xoo.measures":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/module_a\/src\/main\/xoo\/sample\/Sample.xoo":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/sonar-project.properties":"ADD","it\/it-tests\/src\/test\/java\/it\/measure\/MeasuresWsTest.java":"MODIFY","it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/module_a\/sonar-project.properties":"ADD","it\/it-projects\/shared\/xoo-sample-module-move-v1\/sonar-project.properties":"ADD"},"diff":{"it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/module_a\/src\/main\/xoo\/sample\/Sample.xoo.measures":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v1\/module_a\/src\/main\/xoo\/sample\/Sample.xoo":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v2\/sonar-project.properties":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v1\/module_a\/sonar-project.properties":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v1\/module_a\/src\/main\/xoo\/sample\/Sample.xoo.measures":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/module_a\/src\/main\/xoo\/sample\/Sample.xoo":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/sonar-project.properties":[{"add":[],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/measure\/MeasuresWsTest.java":[{"add":["47","","49","  private static final String DIR_KEY = \"sample:src\/main\/xoo\/sample\";","73","    scanXooSample();","74","","84","    assertThat(components).hasSize(2).extracting(\"key\").containsOnly(DIR_KEY, FILE_KEY);","88","  \/**","89","   * @see SONAR-7958","90","   *\/","91","  @Test","92","  public void component_tree_supports_module_move_down() {","93","    String projectKey = \"sample\";","94","    String newModuleKey = \"sample:new_module\";","95","    String moduleAKey = \"module_a\";","96","    String dirKey = \"module_a:src\/main\/xoo\/sample\";","97","    String fileKey = \"module_a:src\/main\/xoo\/sample\/Sample.xoo\";","98","","99","    scanXooSampleModuleMoveV1();","100","","101","    verifyComponentTreeWithChildren(projectKey, moduleAKey);","102","    verifyComponentTreeWithChildren(moduleAKey, dirKey);","103","    verifyComponentTreeWithChildren(dirKey, fileKey);","104","","105","    scanXooSampleModuleMoveV2();","106","","107","    verifyComponentTreeWithChildren(projectKey, newModuleKey);","108","    verifyComponentTreeWithChildren(newModuleKey, moduleAKey);","109","    verifyComponentTreeWithChildren(moduleAKey, dirKey);","110","    verifyComponentTreeWithChildren(dirKey, fileKey);","111","  }","112","","113","  \/**","114","   * @see SONAR-7958","115","   *\/","116","  @Test","117","  public void component_tree_supports_module_move_up() {","118","    String projectKey = \"sample\";","119","    String newModuleKey = \"sample:new_module\";","120","    String moduleAKey = \"module_a\";","121","    String dirKey = \"module_a:src\/main\/xoo\/sample\";","122","    String fileKey = \"module_a:src\/main\/xoo\/sample\/Sample.xoo\";","123","","124","    scanXooSampleModuleMoveV2();","125","","126","    verifyComponentTreeWithChildren(projectKey, newModuleKey);","127","    verifyComponentTreeWithChildren(newModuleKey, moduleAKey);","128","    verifyComponentTreeWithChildren(moduleAKey, dirKey);","129","    verifyComponentTreeWithChildren(dirKey, fileKey);","130","","131","    scanXooSampleModuleMoveV1();","132","","133","    verifyComponentTreeWithChildren(projectKey, moduleAKey);","134","    verifyComponentTreeWithChildren(moduleAKey, dirKey);","135","    verifyComponentTreeWithChildren(dirKey, fileKey);","136","  }","137","","138","  private void verifyComponentTreeWithChildren(String baseComponentKey, String... childKeys) {","139","    ComponentTreeWsResponse response = wsClient.measures().componentTree(new ComponentTreeWsRequest()","140","      .setBaseComponentKey(baseComponentKey)","141","      .setMetricKeys(singletonList(\"ncloc\"))","142","      .setStrategy(\"children\"));","143","","144","    assertThat(response.getBaseComponent().getKey()).isEqualTo(baseComponentKey);","145","    assertThat(response.getComponentsList())","146","      .extracting(\"key\").containsOnly(childKeys);","147","  }","148","","151","    scanXooSample();","152","","162","  }","164","  private void scanXooSample() {","165","    orchestrator.executeBuild(SonarScanner.create(projectDir(\"shared\/xoo-sample\")));","166","  }","167","","168","  private void scanXooSampleModuleMoveV1() {","169","    orchestrator.executeBuild(SonarScanner.create(projectDir(\"shared\/xoo-sample-module-move-v1\")));","170","  }","171","","172","  private void scanXooSampleModuleMoveV2() {","173","    orchestrator.executeBuild(SonarScanner.create(projectDir(\"shared\/xoo-sample-module-move-v2\")));"],"delete":["65","    orchestrator.executeBuild(SonarScanner.create(projectDir(\"shared\/xoo-sample\")));","81","    assertThat(components).hasSize(2).extracting(\"key\").containsOnly(\"sample:src\/main\/xoo\/sample\", FILE_KEY);"]}],"it\/it-projects\/shared\/xoo-sample-module-move-v2\/new_module\/module_a\/sonar-project.properties":[{"add":[],"delete":[]}],"it\/it-projects\/shared\/xoo-sample-module-move-v1\/sonar-project.properties":[{"add":[],"delete":[]}]}},"bf04befb58c2208d7b535ab87a1e7a62df2f4030":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/users\/components\/UserForm.tsx":[{"add":["123","      email: this.state.email,"],"delete":["123","      email: this.state.email || undefined,"]}]}},"40f9260e999f65532a82096a7995f14fad8f695f":{"changes":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizations.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest\/properties_and_organizations.sql":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest.java":[{"add":["21","import com.google.common.collect.ImmutableList;","23","import java.sql.Timestamp;","24","import java.util.ArrayList;","25","import java.util.List;","28","import org.junit.After;","32","import org.sonar.core.util.UuidFactory;","33","import org.sonar.core.util.UuidFactoryFast;","36","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","51","  private RecordingUuidFactory recordingUuidFactory = new RecordingUuidFactory();","53","    new DefaultOrganizationUuidProviderImpl(), recordingUuidFactory);","54","","55","  @After","56","  public void clearRecordingUuidFactory() {","57","    recordingUuidFactory.clear();","58","  }","137","  public void execute_should_update_kee_when_old_kee_is_too_long() throws SQLException {","138","    setupDefaultOrganization();","139","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","140","    insertProperty(DEFAULT_VIEW_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","141","    insertProperty(DEFAULT_PROJECT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","142","    insertProperty(DEFAULT_DEV_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(100)));","143","","144","    underTest.execute();","145","","146","    verifyTemplateColumns(recordingUuidFactory.getRecordedUuids().get(0), recordingUuidFactory.getRecordedUuids().get(1));","147","    verifyPropertiesDoNotExist();","148","    verifyExistenceOfPermissionTemplate(recordingUuidFactory.getRecordedUuids().get(0));","149","    verifyExistenceOfPermissionTemplate(recordingUuidFactory.getRecordedUuids().get(1));","150","  }","151","","152","  @Test","153","  public void execute_should_update_kee_only_when_old_kee_length_is_41_or_more() throws SQLException {","154","    setupDefaultOrganization();","155","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","156","    insertProperty(DEFAULT_VIEW_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","157","    insertProperty(DEFAULT_PROJECT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","158","    insertProperty(DEFAULT_DEV_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(40)));","159","","160","    underTest.execute();","161","","162","    assertThat(recordingUuidFactory.getRecordedUuids()).isEmpty();","163","","164","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","165","    insertProperty(DEFAULT_VIEW_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","166","    insertProperty(DEFAULT_PROJECT_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","167","    insertProperty(DEFAULT_DEV_TEMPLATE_PROPERTY, insertPermissionTemplates(randomAlphanumeric(41)));","168","","169","    underTest.execute();","170","","171","    assertThat(recordingUuidFactory.getRecordedUuids()).hasSize(2);","172","  }","173","","174","  @Test","207","  @Test","208","  public void migration_is_reentrant() throws SQLException {","209","    setupDefaultOrganization();","210","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, \"foo\");","211","","212","    underTest.execute();","213","","214","    underTest.execute();","215","  }","216","","229","  private void verifyExistenceOfPermissionTemplate(String kee) {","230","    assertThat(dbTester.countSql(\"select count(kee) from permission_templates where kee='\" + kee +\"'\")).isEqualTo(1);","248","  private String insertPermissionTemplates(String kee) {","249","    dbTester.executeInsert(","250","      \"PERMISSION_TEMPLATES\",","251","      \"ORGANIZATION_UUID\", DEFAULT_ORGANIZATION_UUID,","252","      \"NAME\", randomAlphanumeric(50),","253","      \"KEE\", kee,","254","      \"DESCRIPTION\", randomAlphanumeric(500),","255","      \"KEY_PATTERN\", \"\",","256","      \"CREATED_AT\", new Timestamp(1000L),","257","      \"UPDATED_AT\", new Timestamp(1000L));","258","","259","    return kee;","260","  }","261","","277","","278","  private static final class RecordingUuidFactory implements UuidFactory {","279","    private final List<String> generatedUuids = new ArrayList<>();","280","    private final UuidFactory uuidFactory = UuidFactoryFast.getInstance();","281","","282","    @Override","283","    public String create() {","284","      String uuid = uuidFactory.create();","285","      generatedUuids.add(uuid);","286","      return uuid;","287","    }","288","","289","    public void clear() {","290","      generatedUuids.clear();","291","    }","292","","293","    public List<String> getRecordedUuids() {","294","      return ImmutableList.copyOf(generatedUuids);","295","    }","296","  }"],"delete":["44","    new DefaultOrganizationUuidProviderImpl());","167","  @Test","168","  public void migration_is_reentrant() throws SQLException {","169","    setupDefaultOrganization();","170","    insertProperty(DEFAULT_TEMPLATE_PROPERTY, \"foo\");","171","","172","    underTest.execute();","173","","174","    underTest.execute();"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizations.java":[{"add":["24","import javax.annotation.Nullable;","26","import org.sonar.core.util.UuidFactory;","28","import org.sonar.server.platform.db.migration.def.VarcharColumnDef;","54","  private final UuidFactory uuidFactory;","56","  public PopulateDefaultPermTemplateColumnsOfOrganizations(Database db, DefaultOrganizationUuidProvider defaultOrganizationUuid, UuidFactory uuidFactory) {","59","    this.uuidFactory = uuidFactory;","74","    String projectDefaultTemplate = updateKeeIfRequired(context,","75","      firstNonNull(defaultTemplateProperties.get(DEFAULT_PROJECT_TEMPLATE_PROPERTY), globalDefaultTemplate));","76","    String viewDefaultTemplate = updateKeeIfRequired(context,","77","      defaultTemplateProperties.get(DEFAULT_VIEW_TEMPLATE_PROPERTY));","104","  \/**","105","   * SONAR-10407 Ensure that the kee length is not greater than 40","106","   * In this case, we must update the kee to a UUID","107","   *\/","108","  private String updateKeeIfRequired(Context context, @Nullable String kee) throws SQLException {","109","    if (kee == null || kee.length() <= VarcharColumnDef.UUID_SIZE) {","110","      return kee;","111","    }","112","","113","    String newKee = uuidFactory.create();","114","    context.prepareUpsert(\"update permission_templates set kee=? where kee=?\")","115","      .setString(1, newKee)","116","      .setString(2, kee)","117","      .execute();","118","    return newKee;","119","  }","120",""],"delete":["52","  public PopulateDefaultPermTemplateColumnsOfOrganizations(Database db, DefaultOrganizationUuidProvider defaultOrganizationUuid) {","69","    String projectDefaultTemplate = firstNonNull(defaultTemplateProperties.get(DEFAULT_PROJECT_TEMPLATE_PROPERTY), globalDefaultTemplate);","70","    String viewDefaultTemplate = defaultTemplateProperties.get(DEFAULT_VIEW_TEMPLATE_PROPERTY);"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v63\/PopulateDefaultPermTemplateColumnsOfOrganizationsTest\/properties_and_organizations.sql":[{"add":["36","","37","CREATE TABLE \"PERMISSION_TEMPLATES\" (","38","  \"ID\" INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),","39","  \"ORGANIZATION_UUID\" VARCHAR(40) NOT NULL,","40","  \"NAME\" VARCHAR(100) NOT NULL,","41","  \"KEE\" VARCHAR(100) NOT NULL,","42","  \"DESCRIPTION\" VARCHAR(4000),","43","  \"KEY_PATTERN\" VARCHAR(500),","44","  \"CREATED_AT\" TIMESTAMP,","45","  \"UPDATED_AT\" TIMESTAMP","46",");"],"delete":[]}]}},"a9552b07116f378a31600a8ba5ef55241b0beda7":{"changes":{"server\/sonar-docs\/src\/pages\/setup\/upgrade-notes.md":"MODIFY"},"diff":{"server\/sonar-docs\/src\/pages\/setup\/upgrade-notes.md":[{"add":["5","## Release 7.9.1 LTS Upgrade Notes  ","6","**Upgrade on Microsoft SQL Server fixed**  ","7","Upgrade failure and performance issues with Microsoft SQL Server have been fixed ([SONAR-12260](https:\/\/jira.sonarsource.com\/browse\/SONAR-12260), [SONAR-12251](https:\/\/jira.sonarsource.com\/browse\/SONAR-12251)).","8","","9","**Pylint execution on Windows fixed**  ","10","Automatic execution of Pylint during python analysis on Windows has been fixed. Note that automatic execution of pylint during analysis remains deprecated on all OSes. ([SONAR-12274](https:\/\/jira.sonarsource.com\/browse\/SONAR-12274)).","11","","12","[Full Release Notes](https:\/\/jira.sonarsource.com\/secure\/ReleaseNote.jspa?projectId=10930&version=15029)","13","","14","","16","**Upgrade can fail on Microsoft SQL Server**  ","17","Migration from SonarQube v6.7.x to v7.9 fails on Microsoft SQL Server ([SONAR-12260](https:\/\/jira.sonarsource.com\/browse\/SONAR-12260)). ","26","Running Pylint automatically during python analysis has been deprecated. Additionally, it is broken in this version on Windows. If needed, Pylint must be run ahead of time and the resulting report passed in to analysis. "],"delete":["6","[[warning]]","7","| **Risk of slow upgrade with Microsoft SQL Server**  ","8","| A possible performance issue has been detected with SonarQube upgrade on Microsoft SQL Server. Root-cause analysis is ongoing to eliminate any environment-related issue. If an implementation issue is confirmed then a bug fix will be quickly released in a 7.9.1 version. Reference ticket for this investigation is [SONAR-12251](https:\/\/jira.sonarsource.com\/browse\/SONAR-12251).","17","Running Pylint automatically during python analysis has been deprecated, and is broken in this version on Windows. If needed, Pylint must be run ahead of time and the resulting report passed in to analysis. This [will be fixed](https:\/\/jira.sonarsource.com\/browse\/SONARPY-339) in a future version of SonarPython."]}]}},"fb15f6fc29a3c76008b153de2c37ad270398eabf":{"changes":{"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DefaultDatabaseTest.java":"MODIFY","server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DefaultDatabase.java":"MODIFY","server\/sonar-db-core\/build.gradle":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DefaultDatabaseTest.java":[{"add":["21","import com.tngtech.java.junit.dataprovider.DataProvider;","22","import com.tngtech.java.junit.dataprovider.DataProviderRunner;","23","import com.tngtech.java.junit.dataprovider.UseDataProvider;","26","import org.junit.Rule;","28","import org.junit.rules.ExpectedException;","29","import org.junit.runner.RunWith;","35","import static org.apache.commons.lang.StringUtils.removeStart;","37","import static org.junit.rules.ExpectedException.none;","40","@RunWith(DataProviderRunner.class)","43","  private static final String SONAR_JDBC = \"sonar.jdbc.\";","44","","45","","46","  @Rule","47","  public ExpectedException expectedException = none();","66","    props.setProperty(\"sonar.jdbc.maxWait\", \"5000\");","72","    assertThat(commonsDbcpProps.getProperty(\"maxTotal\")).isEqualTo(\"5\");","73","    assertThat(commonsDbcpProps.getProperty(\"maxWaitMillis\")).isEqualTo(\"5000\");","74","  }","75","","76","  @Test","77","  @UseDataProvider(\"sonarJdbcAndDbcpProperties\")","78","  public void shouldExtractCommonsDbcpPropertiesIfDuplicatedPropertiesWithSameValue(String jdbcProperty, String dbcpProperty) {","79","    Properties props = new Properties();","80","    props.setProperty(jdbcProperty, \"100\");","81","    props.setProperty(dbcpProperty, \"100\");","82","","83","    Properties commonsDbcpProps = DefaultDatabase.extractCommonsDbcpProperties(props);","84","","85","    assertThat(commonsDbcpProps.getProperty(removeStart(dbcpProperty, SONAR_JDBC))).isEqualTo(\"100\");","86","  }","87","","88","  @Test","89","  @UseDataProvider(\"sonarJdbcAndDbcpProperties\")","90","  public void shouldThrowISEIfDuplicatedResolvedPropertiesWithDifferentValue(String jdbcProperty, String dbcpProperty) {","91","    Properties props = new Properties();","92","    props.setProperty(jdbcProperty, \"100\");","93","    props.setProperty(dbcpProperty, \"200\");","94","","95","    expectedException.expect(IllegalStateException.class);","96","    expectedException.expectMessage(String.format(\"Duplicate property declaration for resolved jdbc key '%s': conflicting values are\", removeStart(dbcpProperty, SONAR_JDBC)));","97","","98","    DefaultDatabase.extractCommonsDbcpProperties(props);","132","    assertThat(((BasicDataSource) db.getDataSource()).getMaxTotal()).isEqualTo(1);","156","","157","  @DataProvider","158","  public static Object[][] sonarJdbcAndDbcpProperties() {","159","    return new Object[][] {","160","      {\"sonar.jdbc.maxActive\", \"sonar.jdbc.maxTotal\"},","161","      {\"sonar.jdbc.maxWait\", \"sonar.jdbc.maxWaitMillis\"}","162","    };","163","  }"],"delete":["57","    assertThat(commonsDbcpProps.getProperty(\"maxActive\")).isEqualTo(\"5\");","91","    assertThat(((BasicDataSource) db.getDataSource()).getMaxTotal()).isEqualTo(8);"]}],"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DefaultDatabase.java":[{"add":["23","import com.google.common.collect.ImmutableMap;","44","import static com.google.common.base.Preconditions.checkState;","59","  private static final String SONAR_JDBC_MAX_ACTIVE = \"sonar.jdbc.maxActive\";","60","  private static final String DBCP_JDBC_MAX_ACTIVE = \"maxTotal\";","61","  private static final String SONAR_JDBC_MAX_WAIT = \"sonar.jdbc.maxWait\";","62","  private static final String DBCP_JDBC_MAX_WAIT = \"maxWaitMillis\";","63","  private static final Map<String, String> SONAR_JDBC_TO_DBCP_PROPERTY_MAPPINGS = ImmutableMap.of(","64","    SONAR_JDBC_MAX_ACTIVE, DBCP_JDBC_MAX_ACTIVE,","65","    SONAR_JDBC_MAX_WAIT, DBCP_JDBC_MAX_WAIT","66","  );","180","        String resolvedKey = toDbcpPropertyKey(key);","181","        String existingValue = (String) result.setProperty(resolvedKey, (String) entry.getValue());","182","        checkState(existingValue == null || existingValue.equals(entry.getValue()),","183","          \"Duplicate property declaration for resolved jdbc key '%s': conflicting values are '%s' and '%s'\", resolvedKey, existingValue, entry.getValue());","184","        result.setProperty(toDbcpPropertyKey(key), (String) entry.getValue());","196","  private static String toDbcpPropertyKey(String key) {","197","    if (SONAR_JDBC_TO_DBCP_PROPERTY_MAPPINGS.containsKey(key)) {","198","      return SONAR_JDBC_TO_DBCP_PROPERTY_MAPPINGS.get(key);","199","    }","200","","201","    return StringUtils.removeStart(key, SONAR_JDBC);","202","  }","203",""],"delete":["170","        result.setProperty(StringUtils.removeStart(key, SONAR_JDBC), (String) entry.getValue());"]}],"server\/sonar-db-core\/build.gradle":[{"add":["28","  testCompile 'com.tngtech.java:junit-dataprovider'"],"delete":[]}]}},"e00d1c11e359c75025fdd85aba7c4df4b22737c9":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleCreator.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/CreateActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleCreator.java":[{"add":["79","    checkArgument(templateRule.getStatus() != RuleStatus.REMOVED, \"The template key doesn't exist: %s\", templateKey.toString());"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/CreateActionTest.java":[{"add":["43","import org.sonar.server.ws.TestRequest;","165","  public void create_custom_rule_of_non_existing_template_should_fail() {","166","    logInAsQProfileAdministrator();","167","","168","    TestRequest request = ws.newRequest()","169","      .setParam(\"custom_key\", \"MY_CUSTOM\")","170","      .setParam(\"template_key\", \"non:existing\")","171","      .setParam(\"name\", \"My custom rule\")","172","      .setParam(\"markdown_description\", \"Description\")","173","      .setParam(\"severity\", \"MAJOR\")","174","      .setParam(\"prevent_reactivation\", \"true\");","175","","176","    expectedException.expect(IllegalArgumentException.class);","177","    expectedException.expectMessage(\"The template key doesn't exist: non:existing\");","178","","179","    request.execute();","180","  }","181","","182","  @Test","183","  public void create_custom_rule_of_removed_template_should_fail() {","184","    logInAsQProfileAdministrator();","185","","186","    RuleDefinitionDto templateRule = db.rules().insert(r -> r.setIsTemplate(true).setStatus(RuleStatus.REMOVED));","187","","188","    TestRequest request = ws.newRequest()","189","      .setParam(\"custom_key\", \"MY_CUSTOM\")","190","      .setParam(\"template_key\", templateRule.getKey().toString())","191","      .setParam(\"name\", \"My custom rule\")","192","      .setParam(\"markdown_description\", \"Description\")","193","      .setParam(\"severity\", \"MAJOR\")","194","      .setParam(\"prevent_reactivation\", \"true\");","195","","196","    expectedException.expect(IllegalArgumentException.class);","197","    expectedException.expectMessage(\"The template key doesn't exist: \" + templateRule.getKey());","198","","199","    request.execute();","200","  }","201","","202","  @Test"],"delete":[]}]}},"9ad0e56f42abd45343f16be66edae1f1a4f688b5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/ListFooter-test.tsx":"MODIFY","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/App-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/components\/controls\/BackButton.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/PageActions.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssuesListHeader.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/ListFooter.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/ListFooter-test.tsx":[{"add":["47","","48","it('should display spinner while loading', () => {","49","  expect(","50","    shallow(<ListFooter count={3} loadMore={jest.fn()} loading={true} total={10} \/>)","51","      .find('DeferredSpinner')","52","      .exists()","53","  ).toBe(true);","54","});"],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/App-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/BackButton.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/PageActions.tsx":[{"add":["23","import ReloadButton from '..\/..\/..\/components\/controls\/ReloadButton';"],"delete":["21","import ReloadButton from '.\/ReloadButton';"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/conciseIssuesList\/ConciseIssuesListHeader.tsx":[{"add":["20","import BackButton from '..\/..\/..\/components\/controls\/BackButton';","21","import ReloadButton from '..\/..\/..\/components\/controls\/ReloadButton';","40","        {displayBackButton && (","41","          <BackButton className=\"pull-left\" disabled={props.loading} onClick={props.onBackClick} \/>","42","        )}"],"delete":["20","import BackButton from '.\/BackButton';","21","import ReloadButton from '..\/components\/ReloadButton';","40","        {displayBackButton && <BackButton className=\"pull-left\" onClick={props.onBackClick} \/>}"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/ListFooter.tsx":[{"add":["21","import DeferredSpinner from '..\/common\/DeferredSpinner';","28","  loading?: boolean;","63","      {props.loading && (","64","        <DeferredSpinner className=\"vertical-bottom spacer-left position-absolute\" \/>","65","      )}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":[{"add":["310",".position-absolute {","311","  position: absolute !important;","312","}","313",""],"delete":[]}]}},"cb17989ed82948611a3bf912a9fbe4f9713073f5":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":[{"add":["79","  handleTransition = (issue \/*: Issue *\/) => {","80","    this.props.onChange(issue);","81","    if (['FALSE-POSITIVE', 'WONTFIX'].includes(issue.resolution)) {","82","      this.toggleComment(true, translate('issue.comment.tell_why'));","83","    }","84","  };","85","","123","                    onChange={this.handleTransition}"],"delete":["54","  componentDidUpdate(prevProps \/*: Props *\/) {","55","    const { resolution } = this.props.issue;","56","    if (!prevProps.issue.resolution && ['FALSE-POSITIVE', 'WONTFIX'].includes(resolution)) {","57","      this.toggleComment(true, translate('issue.comment.tell_why'));","58","    }","59","  }","60","","123","                    onChange={this.props.onChange}"]}]}},"d78878cddfb2ec620153f14d11383b17a4315e69":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/SetAsDefaultAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/CopyAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DestroyAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/CreateAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/RenameAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/UnsetDefaultAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/SelectAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/CreateConditionAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/UpdateConditionAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeselectAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/SetAsDefaultAction.java":[{"add":["38","      .setDescription(\"Set a quality gate as the default quality gate.<br>\" +","39","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["38","      .setDescription(\"Set a quality gate as the default quality gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/CopyAction.java":[{"add":["42","      .setDescription(\"Copy a Quality Gate.<br>\" +","43","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["42","      .setDescription(\"Copy a Quality Gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeleteConditionAction.java":[{"add":["48","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["48","        \"Requires the 'Administer Quality Gates' permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DestroyAction.java":[{"add":["38","      .setDescription(\"Delete a Quality Gate.<br>\" +","39","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["38","      .setDescription(\"Delete a Quality Gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/CreateAction.java":[{"add":["55","      .setDescription(\"Create a Quality Gate.<br>\" +","56","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["55","      .setDescription(\"Create a Quality Gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/RenameAction.java":[{"add":["27","","28","import static org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters.PARAM_ID;","29","import static org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters.PARAM_NAME;","42","      .setDescription(\"Rename a Quality Gate.<br>\" +","43","        \"Requires the 'Administer Quality Gates' permission.\")","48","    action.createParam(PARAM_ID)","53","    action.createParam(PARAM_NAME)","61","    long idToRename = QualityGatesWs.parseId(request, PARAM_ID);","62","    QualityGateDto renamedQualityGate = qualityGates.rename(idToRename, request.mandatoryParam(PARAM_NAME));"],"delete":["27","import org.sonarqube.ws.client.qualitygate.QualityGatesWsParameters;","40","      .setDescription(\"Rename a Quality Gate. Require Administer Quality Gates permission\")","45","    action.createParam(QualityGatesWsParameters.PARAM_ID)","50","    action.createParam(QualityGatesWsParameters.PARAM_NAME)","58","    long idToRename = QualityGatesWs.parseId(request, QualityGatesWsParameters.PARAM_ID);","59","    QualityGateDto renamedQualityGate = qualityGates.rename(idToRename, request.mandatoryParam(QualityGatesWsParameters.PARAM_NAME));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/UnsetDefaultAction.java":[{"add":["38","      .setDescription(\"Unset a quality gate as the default quality gate.<br>\" +","39","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["38","      .setDescription(\"Unset a quality gate as the default quality gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/SelectAction.java":[{"add":["64","          \"Requires the 'Administer Quality Gates' permission.\","],"delete":["64","        \"Require Administer Quality Gates permission.\","]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/CreateConditionAction.java":[{"add":["63","      .setDescription(\"Add a new condition to a quality gate.<br>\" +","64","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["63","      .setDescription(\"Add a new condition to a quality gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/UpdateConditionAction.java":[{"add":["63","      .setDescription(\"Update a condition attached to a quality gate.<br>\" +","64","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["63","      .setDescription(\"Update a condition attached to a quality gate. Require Administer Quality Gates permission\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/ws\/DeselectAction.java":[{"add":["53","      .setDescription(\"Remove the association of a project from a quality gate.<br>\" +","54","        \"Requires the 'Administer Quality Gates' permission.\")"],"delete":["53","      .setDescription(\"Remove the association of a project from a quality gate. Require Administer Quality Gates permission\")"]}]}},"2d9bae8c4d2d03c0cccd77d567678af84ed271d5":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ActivityActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDbTester.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ActivityAction.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["697","    componentDb.indexProjectsAndViews();","710","    componentDb.indexProjectsAndViews();","722","    componentDb.indexProjectsAndViews();","751","    componentDb.indexProjectsAndViews();","770","    componentDb.indexProjectsAndViews();","790","    componentDb.indexProjectsAndViews();","810","    componentDb.indexProjectsAndViews();","833","    componentDb.indexProjectsAndViews();","853","    componentDb.indexProjectsAndViews();","870","    componentDb.indexProjectsAndViews();","892","    componentDb.indexProjectsAndViews();","911","    componentDb.indexProjectsAndViews();","930","    componentDb.indexProjectsAndViews();"],"delete":["697","    componentDb.indexProjects();","710","    componentDb.indexProjects();","722","    componentDb.indexProjects();","751","    componentDb.indexProjects();","770","    componentDb.indexProjects();","790","    componentDb.indexProjects();","810","    componentDb.indexProjects();","833","    componentDb.indexProjects();","853","    componentDb.indexProjects();","870","    componentDb.indexProjects();","892","    componentDb.indexProjects();","911","    componentDb.indexProjects();","930","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ActivityActionTest.java":[{"add":["45","import org.sonar.db.component.ComponentDto;","64","import static org.sonar.db.component.ComponentTesting.newDeveloper;","66","import static org.sonar.db.component.ComponentTesting.newView;","215","    ComponentDto struts = newProjectDto().setName(\"old apache struts\").setUuid(\"P1\");","216","    ComponentDto zookeeper = newProjectDto().setName(\"new apache zookeeper\").setUuid(\"P2\");","217","    ComponentDto eclipse = newProjectDto().setName(\"eclipse\").setUuid(\"P3\");","218","    componentDb.insertProjectAndSnapshot(struts);","219","    componentDb.insertProjectAndSnapshot(zookeeper);","220","    componentDb.insertProjectAndSnapshot(eclipse);","222","    componentDb.indexComponents(struts.getId(), zookeeper.getId(), eclipse.getId());","234","  public void search_activity_returns_views_and_developers() {","235","    ComponentDto developer = newDeveloper(\"Apache Developer\").setUuid(\"D1\");","236","    ComponentDto apacheView = newView().setName(\"Apache View\").setUuid(\"V1\");","237","    componentDb.insertDeveloperAndSnapshot(developer);","238","    componentDb.insertViewAndSnapshot(apacheView);","239","    componentDb.indexComponents(developer.getId(), apacheView.getId());","240","    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);","241","    insertActivity(\"T1\", \"D1\", CeActivityDto.Status.SUCCESS);","242","    insertActivity(\"T2\", \"V1\", CeActivityDto.Status.SUCCESS);","243","","244","    ActivityResponse activityResponse = call(ws.newRequest().setParam(PARAM_COMPONENT_QUERY, \"apac\"));","245","","246","    assertThat(activityResponse.getTasksList()).extracting(\"id\").containsOnly(\"T1\", \"T2\");","247","  }","248","","249","  @Test"],"delete":["212","    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache struts\").setUuid(\"P1\"));","213","    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache zookeeper\").setUuid(\"P2\"));","214","    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"eclipse\").setUuid(\"P3\"));","216","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":[{"add":["120","    componentDb.indexProjectsAndViews();","151","    componentDb.indexProjectsAndViews();","177","    componentDb.indexProjectsAndViews();","197","    componentDb.indexProjectsAndViews();","217","    componentDb.indexProjectsAndViews();","236","    componentDb.indexProjectsAndViews();","416","    componentDb.indexProjectsAndViews();"],"delete":["120","    componentDb.indexProjects();","151","    componentDb.indexProjects();","177","    componentDb.indexProjects();","197","    componentDb.indexProjects();","217","    componentDb.indexProjects();","236","    componentDb.indexProjects();","416","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsActionTest.java":[{"add":["186","    componentDb.indexProjectsAndViews();","200","    componentDb.indexProjectsAndViews();","215","    componentDb.indexProjectsAndViews();"],"delete":["186","    componentDb.indexProjects();","200","    componentDb.indexProjects();","215","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":[{"add":["183","    componentDb.indexProjectsAndViews();"],"delete":["183","    componentDb.indexProjects();"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDbTester.java":[{"add":["85","  public void indexProjectsAndViews() {","89","","90","  public void indexComponents(long... componentIdList) {","91","    for (long componentId : componentIdList) {","92","      dbClient.componentIndexDao().indexResource(dbSession, componentId);","93","    }","94","    db.commit();","95","  }"],"delete":["85","  public void indexProjects() {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ActivityAction.java":[{"add":["76","  private static final List<String> POSSIBLE_QUALIFIERS = ImmutableList.of(Qualifiers.PROJECT, Qualifiers.VIEW, \"DEV\");","219","    query.setComponentUuids(loadComponentUuids(dbSession, request));","223","  @CheckForNull","224","  private List<String> loadComponentUuids(DbSession dbSession, ActivityWsRequest request) {","229","      return singletonList(componentUuid);","232","      ComponentQuery componentDtoQuery = ComponentQuery.builder()","233","        .setNameOrKeyQuery(componentQuery)","234","        .setQualifiers(POSSIBLE_QUALIFIERS.toArray(new String[0]))","235","        .build();","237","      return Lists.transform(componentDtos, ComponentDtoFunctions.toUuid());","239","","240","    return null;"],"delete":["218","    loadComponentUuids(dbSession, request, query);","222","  private void loadComponentUuids(DbSession dbSession, ActivityWsRequest request, CeTaskQuery query) {","227","      query.setComponentUuid(componentUuid);","230","      ComponentQuery componentDtoQuery = ComponentQuery.builder().setNameOrKeyQuery(componentQuery).setQualifiers(Qualifiers.PROJECT, Qualifiers.VIEW).build();","232","      query.setComponentUuids(Lists.transform(componentDtos, ComponentDtoFunctions.toUuid()));"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["269","    ORDER BY LOWER(p.name), p.name, p.id"],"delete":["269","    ORDER BY LOWER(p.name), p.name"]}]}},"79625d0c9161e02c3c718c546a51538d2221bc4b":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQueryService.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionMediumTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/IssueQueryService.java":[{"add":["70","import static org.sonar.api.utils.DateUtils.parseDateOrDateTime;","72","import static org.sonar.api.utils.DateUtils.parseStartingDateOrDateTime;","195","        .createdAt(parseDateOrDateTime(request.getCreatedAt()))","234","    Date createdAfter = parseStartingDateOrDateTime(request.getCreatedAfter());"],"delete":["51","import org.sonar.api.utils.DateUtils;","52","import org.sonar.api.utils.SonarException;","195","        .createdAt(parseAsDateTime(request.getCreatedAt()))","234","    Date createdAfter = parseAsDateTime(request.getCreatedAfter());","459","  @CheckForNull","460","  private static Date parseAsDateTime(@Nullable String stringDate) {","461","    if (stringDate == null) {","462","      return null;","463","    }","464","","465","    try {","466","      return DateUtils.parseDateTime(stringDate);","467","    } catch (SonarException notDateTime) {","468","      try {","469","        return DateUtils.parseDate(stringDate);","470","      } catch (SonarException notDateEither) {","471","        throw new IllegalArgumentException(String.format(\"'%s' cannot be parsed as either a date or date+time\", stringDate));","472","      }","473","    }","474","  }","475",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionMediumTest.java":[{"add":["26","import org.junit.rules.ExpectedException;","58","import static org.sonar.server.issue.ws.IssuesWs.API_ENDPOINT;","59","import static org.sonar.server.issue.ws.SearchAction.SEARCH_ACTION;","62","import static org.sonarqube.ws.client.issue.IssueFilterParameters.CREATED_AFTER;","76","  @Rule","77","  public ExpectedException expectedException = ExpectedException.none();","112","    WsTester.TestRequest request = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION);","143","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION).execute();","177","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","213","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION).setParam(HIDE_COMMENTS, \"true\").execute();","235","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","260","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","275","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION).execute();","292","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION).setParam(COMPONENTS, file.getKey()).execute();","307","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION).setParam(ADDITIONAL_FIELDS, \"_all\").execute();","328","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","352","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","377","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","422","    wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","453","    wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","496","    wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","522","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","542","    WsTester.TestRequest request = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION);","563","    WsTester.TestRequest request = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION);","584","    WsTester.TestRequest request = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION);","594","    WsTester.TestRequest request = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION);","617","    WsTester.Result result = wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","625","  @Test","626","  public void fail_when_invalid_format() throws Exception {","627","    expectedException.expect(IllegalArgumentException.class);","628","    expectedException.expectMessage(\"Date 'wrong-date-input' cannot be parsed as either a date or date+time\");","629","","630","    wsTester.newGetRequest(API_ENDPOINT, SEARCH_ACTION)","631","      .setParam(CREATED_AFTER, \"wrong-date-input\")","632","      .execute();","633","  }","634",""],"delete":["106","    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);","137","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).execute();","171","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","207","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).setParam(HIDE_COMMENTS, \"true\").execute();","229","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","254","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","269","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).execute();","286","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).setParam(COMPONENTS, file.getKey()).execute();","301","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).setParam(ADDITIONAL_FIELDS, \"_all\").execute();","322","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","346","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","371","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","416","    wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","447","    wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","490","    wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","516","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)","536","    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);","557","    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);","578","    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);","588","    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);","611","    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION)"]}]}},"99af758e84e5cc84f304e84e714ee0613fc32e59":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/projectActivity.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/projectActivity.css":[{"add":["119","  width: 58px;"],"delete":["119","  width: 54px;"]}]}},"4fa52cd10f951bd2a0e66acd480e49158099c435":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":[{"add":["403","    const key = e.currentTarget.className.match(\/sym-\\d+\/);","404","    if (key) {","405","      this.$('.sym.highlighted').removeClass('highlighted');","406","      if (!highlighted) {","407","        this.$('.sym.' + key[0]).addClass('highlighted');","408","      }"],"delete":["403","    const key = e.currentTarget.className.split(\/\\s+\/)[0];","404","    this.$('.sym.highlighted').removeClass('highlighted');","405","    if (!highlighted) {","406","      this.$('.sym.' + key).addClass('highlighted');"]}]}},"708f380fc38b072c86bd451b8dff118d85688266":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/project_controller.rb":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/models\/snapshot.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/project_controller.rb":[{"add":["324","    next_snapshot = Snapshot.find(:first, :conditions => ['created_at>? and component_uuid=?', parent_snapshot.created_at_long, parent_snapshot.component_uuid], :order => 'created_at asc')"],"delete":["324","    next_snapshot = Snapshot.find(:first, :conditions => ['created_at>? and component_uuid=?', parent_snapshot.created_at.to_i*1000, parent_snapshot.component_uuid], :order => 'created_at asc')"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/models\/snapshot.rb":[{"add":["39","","40","  def created_at_long","41","    read_attribute(:created_at)","42","  end","43",""],"delete":["39","  "]}]}},"6392893e41bc802900c2023c87e64753c00ce887":{"changes":{"\/dev\/null":"DELETE","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/startup\/LogServerIdTest.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/startup\/LogServerId.java":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/startup\/LogServerIdTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/startup\/LogServerId.java":[{"add":["21","import javax.annotation.CheckForNull;","22","import javax.annotation.Nullable;","23","import org.picocontainer.Startable;","26","import org.sonar.db.DbClient;","27","import org.sonar.db.DbSession;","30","public final class LogServerId implements Startable {","32","  private final DbClient dbClient;","34","  public LogServerId(DbClient dbClient) {","35","    this.dbClient = dbClient;","38","  @Override","40","    try (DbSession dbSession = dbClient.openSession(false)) {","41","      String propertyKey = CoreProperties.PERMANENT_SERVER_ID;","42","      PropertyDto serverIdProp = selectProperty(dbSession, propertyKey);","43","      if (serverIdProp != null) {","44","        \/\/ a server ID has been generated, let's print out the other useful information that can help debugging license issues","45","        PropertyDto organisationProp = selectProperty(dbSession, CoreProperties.ORGANISATION);","46","        PropertyDto ipAddressProp = selectProperty(dbSession, CoreProperties.SERVER_ID_IP_ADDRESS);","48","        StringBuilder message = new StringBuilder(\"Server information:\\n\");","49","        message.append(\"  - ID           : \");","50","        addQuotedValue(serverIdProp, message);","51","        message.append(\"  - Organisation : \");","52","        addQuotedValue(organisationProp, message);","53","        message.append(\"  - Registered IP: \");","54","        addQuotedValue(ipAddressProp, message);","56","        Loggers.get(LogServerId.class).info(message.toString());","57","      }","61","  @Override","62","  public void stop() {","63","    \/\/ nothing to do","64","  }","65","","66","  @CheckForNull","67","  private PropertyDto selectProperty(DbSession dbSession, String propertyKey) {","68","    return dbClient.propertiesDao().selectGlobalProperty(dbSession, propertyKey);","69","  }","70","","71","  private static void addQuotedValue(@Nullable PropertyDto property, StringBuilder message) {","72","    if (property == null || property.getValue() == null) {","73","      message.append('-');","74","    } else {","75","      message.append(\"\\\"\");","76","      message.append(property.getValue());","77","      message.append(\"\\\"\");","78","    }","79","    message.append('\\n');"],"delete":["21","import com.google.common.annotations.VisibleForTesting;","23","import org.sonar.api.utils.log.Logger;","25","import org.sonar.db.property.PropertiesDao;","28","\/**","29"," * @since 3.5","30"," *\/","31","public final class LogServerId {","33","  private final PropertiesDao propertiesDao;","35","  public LogServerId(PropertiesDao propertiesDao) {","36","    this.propertiesDao = propertiesDao;","40","    logServerId(Loggers.get(LogServerId.class));","41","  }","43","  @VisibleForTesting","44","  void logServerId(Logger logger) {","45","    PropertyDto serverIdProp = propertiesDao.selectGlobalProperty(CoreProperties.PERMANENT_SERVER_ID);","46","    if (serverIdProp != null) {","47","      \/\/ a server ID has been generated, let's print out the other useful informations that can help debugging license issues","48","      PropertyDto organisationProp = propertiesDao.selectGlobalProperty(CoreProperties.ORGANISATION);","49","      PropertyDto ipAddressProp = propertiesDao.selectGlobalProperty(CoreProperties.SERVER_ID_IP_ADDRESS);","51","      StringBuilder message = new StringBuilder(\"Server information:\\n\");","52","      message.append(\"  - ID            : \");","53","      addQuotedValue(serverIdProp, message);","54","      message.append(\"  - Organisation  : \");","55","      addQuotedValue(organisationProp, message);","56","      message.append(\"  - Registered IP : \");","57","      addQuotedValue(ipAddressProp, message);","58","","59","      logger.info(message.toString());","63","  private static void addQuotedValue(PropertyDto property, StringBuilder message) {","64","    message.append(\"\\\"\");","65","    message.append(property.getValue());","66","    message.append(\"\\\"\\n\");"]}]}},"33d8f0df151bc7334ce92a705da292bdd2ea4ace":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/issues.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/issues.css":[{"add":["219","  word-break: break-all;"],"delete":[]}]}},"571f821f9fe5e9c5522c8803b6a95825e318ef01":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/issues.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.js.snap":[{"add":["37","    onClick={[Function]}","38","    role=\"Listitem\"","39","    tabIndex={0}","135","    onClick={[Function]}","136","    role=\"Listitem\"","137","    tabIndex={0}","175","    onClick={[Function]}","176","    role=\"Listitem\"","177","    tabIndex={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":[{"add":["48","  handleCommentClick = (event \/*: Event & {target: HTMLElement}*\/) => {","49","    if (event.target.tagName === 'A') {","50","      event.stopPropagation();","51","    }","52","  };","53","","95","          onClick={this.handleCommentClick}","96","          role=\"Listitem\"","97","          tabIndex={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/less\/components\/issues.less":[{"add":["215","  .no-outline;"],"delete":[]}]}},"79ad08c967c32f5c68d6b5a4844b2213b5f3015d":{"changes":{"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/dbCleaner\/PurgeTest.java":[{"add":["26","import java.util.Calendar;","179","    Date oneWeekAgo = addDays(new Date(), -7);","181","    \/\/ Execute an analysis wednesday last week","182","    Calendar lastWednesday = Calendar.getInstance();","183","    lastWednesday.setTime(oneWeekAgo);","184","    lastWednesday.set(Calendar.DAY_OF_WEEK, Calendar.WEDNESDAY);","185","    String lastWednesdayFormatted = formatDate(lastWednesday.getTime());","186","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", lastWednesdayFormatted);","187","","188","    \/\/ Execute an analysis thursday last week","189","    Calendar lastThursday = Calendar.getInstance();","190","    lastThursday.setTime(oneWeekAgo);","191","    lastThursday.set(Calendar.DAY_OF_WEEK, Calendar.THURSDAY);","192","    String lastThursdayFormatted = formatDate(lastThursday.getTime());","193","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", lastThursdayFormatted);","201","    \/\/ Check that only analysis from last thursday is kept (as it's the last one from previous week)","208","    assertThat(content).contains(lastThursdayFormatted);","209","    assertThat(content).doesNotContain(lastWednesdayFormatted);"],"delete":["178","    \/\/ Execute an analysis 11 days ago","179","    String elevenDaysAgo = formatDate(addDays(new Date(), -11));","180","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", elevenDaysAgo);","182","    \/\/ Execute an analysis 10 days ago","183","    String tenDaysAgo = formatDate(addDays(new Date(), -10));","184","    runProjectAnalysis(orchestrator, PROJECT_SAMPLE_PATH, \"sonar.projectDate\", tenDaysAgo);","192","    \/\/ Check that only analysis from 10 days ago is kept (as it's the last one from previous week)","199","    assertThat(content).contains(tenDaysAgo);","200","    assertThat(content).doesNotContain(elevenDaysAgo);"]}]}},"42339a34c4beefc564d6ae7d3e36040624027cef":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/InputForPassword.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/__tests__\/InputForPassword-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/InputForPassword.tsx":[{"add":["35","    changing: !this.props.value","38","  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {","39","    \/*","40","     * Reset `changing` if:","41","     *  - the value is reset (valueChanged -> !valueChanged)","42","     *     or","43","     *  - the value changes from outside the input (i.e. store update\/reset\/cancel)","44","     *\/","45","    if (","46","      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&","47","      !nextProps.hasValueChanged","48","    ) {","49","      this.setState({ changing: !nextProps.value });","67","          autoFocus={this.state.changing && this.props.value}","72","          value={this.props.value}","79","    if (this.state.changing) {"],"delete":["28","  value: string;","36","    value: '',","37","    changing: false","40","  componentDidUpdate(prevProps: DefaultSpecializedInputProps) {","41","    if (!prevProps.hasValueChanged && this.props.hasValueChanged) {","42","      this.setState({ changing: false, value: '' });","48","    this.setState({ changing: true, value: event.target.value });","61","          autoFocus={this.state.changing}","66","          value={this.state.value}","73","    const hasValue = !!this.props.value;","74","","75","    if (this.state.changing || !hasValue) {"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/inputs\/__tests__\/InputForPassword-test.tsx":[{"add":["53","it('should show form when empty, and enable handle typing', () => {","54","  const input = shallowRender({ value: '' });","55","  const onChange = (value: string) => input.setProps({ hasValueChanged: true, value });","56","  input.setProps({ onChange });","57","","58","  expect(input.find('form').length).toBe(1);","59","  change(input.find('input.js-password-input'), 'hello');","60","  expect(input.find('form').length).toBe(1);","61","  expect(input.find('input.js-password-input').prop('value')).toBe('hello');","62","});","63","","64","it('should handle value reset', () => {","65","  const input = shallowRender({ hasValueChanged: true, value: 'whatever' });","66","  input.setState({ changing: true });","67","","68","  \/\/ reset","69","  input.setProps({ hasValueChanged: false, value: 'original' });","70","","71","  expect(input.state('changing')).toBe(false);","72","});","73","","74","it('should handle value reset to empty', () => {","75","  const input = shallowRender({ hasValueChanged: true, value: 'whatever' });","76","  input.setState({ changing: true });","77","","78","  \/\/ outside change","79","  input.setProps({ hasValueChanged: false, value: '' });","80","","81","  expect(input.state('changing')).toBe(true);","82","});","83","","85","  return shallow<InputForPassword>("],"delete":["54","  return shallow("]}]}},"1f4b2123afcb0fb70c8e105a5d9820f7761da875":{"changes":{"sonar-application\/pom.xml":"MODIFY","server\/sonar-dev-cockpit-bridge\/pom.xml":"MODIFY","server\/sonar-process\/pom.xml":"MODIFY","server\/sonar-server-benchmarks\/pom.xml":"MODIFY","sonar-batch\/pom.xml":"MODIFY","sonar-batch-protocol\/pom.xml":"MODIFY","server\/sonar-process-monitor\/pom.xml":"MODIFY","sonar-db\/pom.xml":"MODIFY","sonar-plugin-api-deps\/pom.xml":"MODIFY","server\/sonar-web\/pom.xml":"MODIFY","server\/sonar-views-bridge\/pom.xml":"MODIFY","server\/sonar-search\/pom.xml":"MODIFY","server\/sonar-server\/pom.xml":"MODIFY","sonar-batch-shaded\/pom.xml":"MODIFY","sonar-core\/pom.xml":"MODIFY"},"diff":{"sonar-application\/pom.xml":[{"add":["257","      <properties>","258","        <maven.deploy.skip>true<\/maven.deploy.skip>","259","      <\/properties>"],"delete":["257","      <build>","258","        <plugins>","259","          <plugin>","260","            <artifactId>maven-deploy-plugin<\/artifactId>","261","            <configuration>","262","              <skip>true<\/skip>","263","            <\/configuration>","264","          <\/plugin>","265","        <\/plugins>","266","      <\/build>"]}],"server\/sonar-dev-cockpit-bridge\/pom.xml":[{"add":[],"delete":["40","  <profiles>","41","    <profile>","42","      <id>release<\/id>","43","      <build>","44","        <plugins>","45","          <plugin>","46","            <artifactId>maven-deploy-plugin<\/artifactId>","47","            <configuration>","48","              <skip>true<\/skip>","49","            <\/configuration>","50","          <\/plugin>","51","        <\/plugins>","52","      <\/build>","53","    <\/profile>","54","  <\/profiles>","55","","56",""]}],"server\/sonar-process\/pom.xml":[{"add":[],"delete":["98","","99","  <profiles>","100","    <profile>","101","      <id>release<\/id>","102","      <build>","103","        <plugins>","104","          <plugin>","105","            <artifactId>maven-deploy-plugin<\/artifactId>","106","            <configuration>","107","              <skip>true<\/skip>","108","            <\/configuration>","109","          <\/plugin>","110","        <\/plugins>","111","      <\/build>","112","    <\/profile>","113","  <\/profiles>","114",""]}],"server\/sonar-server-benchmarks\/pom.xml":[{"add":["16","    <maven.install.skip>true<\/maven.install.skip>","17","    <maven.deploy.skip>true<\/maven.deploy.skip>"],"delete":["100","    <profile>","101","      <id>release<\/id>","102","      <build>","103","        <plugins>","104","          <plugin>","105","            <artifactId>maven-deploy-plugin<\/artifactId>","106","            <configuration>","107","              <skip>true<\/skip>","108","            <\/configuration>","109","          <\/plugin>","110","        <\/plugins>","111","      <\/build>","112","    <\/profile>"]}],"sonar-batch\/pom.xml":[{"add":[],"delete":["168","    <profile>","169","      <id>release<\/id>","170","      <build>","171","        <plugins>","172","          <plugin>","173","            <artifactId>maven-deploy-plugin<\/artifactId>","174","            <configuration>","175","              <skip>true<\/skip>","176","            <\/configuration>","177","          <\/plugin>","178","        <\/plugins>","179","      <\/build>","180","    <\/profile>"]}],"sonar-batch-protocol\/pom.xml":[{"add":[],"delete":["110","","111","  <profiles>","112","    <profile>","113","      <id>release<\/id>","114","      <build>","115","        <plugins>","116","          <plugin>","117","            <artifactId>maven-deploy-plugin<\/artifactId>","118","            <configuration>","119","              <skip>true<\/skip>","120","            <\/configuration>","121","          <\/plugin>","122","        <\/plugins>","123","      <\/build>","124","    <\/profile>","125","  <\/profiles>"]}],"server\/sonar-process-monitor\/pom.xml":[{"add":[],"delete":["81","","82","  <profiles>","83","    <profile>","84","      <id>release<\/id>","85","      <build>","86","        <plugins>","87","          <plugin>","88","            <artifactId>maven-deploy-plugin<\/artifactId>","89","            <configuration>","90","              <skip>true<\/skip>","91","            <\/configuration>","92","          <\/plugin>","93","        <\/plugins>","94","      <\/build>","95","    <\/profile>","96","  <\/profiles>","97",""]}],"sonar-db\/pom.xml":[{"add":[],"delete":["177","    <profile>","178","      <id>release<\/id>","179","      <build>","180","        <plugins>","181","          <plugin>","182","            <artifactId>maven-deploy-plugin<\/artifactId>","183","            <configuration>","184","              <skip>true<\/skip>","185","            <\/configuration>","186","          <\/plugin>","187","        <\/plugins>","188","      <\/build>","189","    <\/profile>"]}],"sonar-plugin-api-deps\/pom.xml":[{"add":[],"delete":["166","","167","  <profiles>","168","    <profile>","169","      <id>release<\/id>","170","      <build>","171","        <plugins>","172","          <plugin>","173","            <artifactId>maven-deploy-plugin<\/artifactId>","174","            <configuration>","175","              <skip>true<\/skip>","176","            <\/configuration>","177","          <\/plugin>","178","        <\/plugins>","179","      <\/build>","180","    <\/profile>","181","  <\/profiles>"]}],"server\/sonar-web\/pom.xml":[{"add":[],"delete":["223","          <plugin>","224","            <artifactId>maven-deploy-plugin<\/artifactId>","225","            <configuration>","226","              <skip>true<\/skip>","227","            <\/configuration>","228","          <\/plugin>"]}],"server\/sonar-views-bridge\/pom.xml":[{"add":[],"delete":["40","  <profiles>","41","    <profile>","42","      <id>release<\/id>","43","      <build>","44","        <plugins>","45","          <plugin>","46","            <artifactId>maven-deploy-plugin<\/artifactId>","47","            <configuration>","48","              <skip>true<\/skip>","49","            <\/configuration>","50","          <\/plugin>","51","        <\/plugins>","52","      <\/build>","53","    <\/profile>","54","  <\/profiles>","55","","56",""]}],"server\/sonar-search\/pom.xml":[{"add":[],"delete":["70","  <profiles>","71","    <profile>","72","      <id>release<\/id>","73","      <build>","74","        <plugins>","75","          <plugin>","76","            <artifactId>maven-deploy-plugin<\/artifactId>","77","            <configuration>","78","              <skip>true<\/skip>","79","            <\/configuration>","80","          <\/plugin>","81","        <\/plugins>","82","      <\/build>","83","    <\/profile>","84","  <\/profiles>","85",""]}],"server\/sonar-server\/pom.xml":[{"add":[],"delete":["336","    <profile>","337","      <id>release<\/id>","338","      <build>","339","        <plugins>","340","          <plugin>","341","            <artifactId>maven-deploy-plugin<\/artifactId>","342","            <configuration>","343","              <skip>true<\/skip>","344","            <\/configuration>","345","          <\/plugin>","346","        <\/plugins>","347","      <\/build>","348","    <\/profile>","349",""]}],"sonar-batch-shaded\/pom.xml":[{"add":[],"delete":["64","","65","  <profiles>","66","    <profile>","67","      <id>release<\/id>","68","      <build>","69","        <plugins>","70","          <plugin>","71","            <artifactId>maven-deploy-plugin<\/artifactId>","72","            <configuration>","73","              <skip>true<\/skip>","74","            <\/configuration>","75","          <\/plugin>","76","        <\/plugins>","77","      <\/build>","78","    <\/profile>","79","  <\/profiles>  "]}],"sonar-core\/pom.xml":[{"add":[],"delete":["126","","127","  <profiles>","128","    <profile>","129","      <id>release<\/id>","130","      <build>","131","        <plugins>","132","          <plugin>","133","            <artifactId>maven-deploy-plugin<\/artifactId>","134","            <configuration>","135","              <skip>true<\/skip>","136","            <\/configuration>","137","          <\/plugin>","138","        <\/plugins>","139","      <\/build>","140","    <\/profile>","141","  <\/profiles>"]}]}},"9dcc70602f4222e167dc12a084db38ded895845f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/ComponentSourceSnippetViewer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/ComponentSourceSnippetViewer-test.tsx.snap":[{"add":[],"delete":["36","","37","exports[`should render correctly with secondary locations 1`] = `","38","<div","39","  className=\"component-source-container\"","40",">","41","  <SourceViewerHeaderSlim","42","    branchLike={","43","      Object {","44","        \"analysisDate\": \"2018-01-01\",","45","        \"isMain\": true,","46","        \"name\": \"master\",","47","      }","48","    }","49","    expandable={true}","50","    loading={false}","51","    onExpand={[Function]}","52","    sourceViewerFile={","53","      Object {","54","        \"key\": \"a\",","55","        \"measures\": Object {","56","          \"coverage\": \"85.2\",","57","          \"duplicationDensity\": \"1.0\",","58","          \"issues\": \"12\",","59","          \"lines\": \"56\",","60","        },","61","        \"path\": \"a\",","62","        \"project\": \"my-project\",","63","        \"projectName\": \"MyProject\",","64","        \"q\": \"FIL\",","65","        \"uuid\": \"foo-bar\",","66","      }","67","    }","68","  \/>","69","  <div","70","    id=\"snippet-wrapper-0\"","71","    key=\"0\"","72","  >","73","    <SnippetViewer","74","      branchLike={","75","        Object {","76","          \"analysisDate\": \"2018-01-01\",","77","          \"isMain\": true,","78","          \"name\": \"master\",","79","        }","80","      }","81","      component={","82","        Object {","83","          \"key\": \"a\",","84","          \"measures\": Object {","85","            \"coverage\": \"85.2\",","86","            \"duplicationDensity\": \"1.0\",","87","            \"issues\": \"12\",","88","            \"lines\": \"56\",","89","          },","90","          \"path\": \"a\",","91","          \"project\": \"my-project\",","92","          \"projectName\": \"MyProject\",","93","          \"q\": \"FIL\",","94","          \"uuid\": \"foo-bar\",","95","        }","96","      }","97","      expandBlock={[Function]}","98","      handleCloseIssues={[Function]}","99","      handleLinePopupToggle={[Function]}","100","      handleOpenIssues={[Function]}","101","      handleSymbolClick={[Function]}","102","      highlightedLocationMessage={","103","        Object {","104","          \"index\": 0,","105","          \"text\": \"\",","106","        }","107","      }","108","      highlightedSymbols={Array []}","109","      index={0}","110","      issue={","111","        Object {","112","          \"actions\": Array [],","113","          \"component\": \"main.js\",","114","          \"componentLongName\": \"main.js\",","115","          \"componentQualifier\": \"FIL\",","116","          \"componentUuid\": \"foo1234\",","117","          \"creationDate\": \"2017-03-01T09:36:01+0100\",","118","          \"flows\": Array [],","119","          \"fromHotspot\": false,","120","          \"key\": \"AVsae-CQS-9G3txfbFN2\",","121","          \"line\": 25,","122","          \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","123","          \"organization\": \"myorg\",","124","          \"project\": \"myproject\",","125","          \"projectKey\": \"foo\",","126","          \"projectName\": \"Foo\",","127","          \"projectOrganization\": \"org\",","128","          \"rule\": \"javascript:S1067\",","129","          \"ruleName\": \"foo\",","130","          \"secondaryLocations\": Array [","131","            Object {","132","              \"component\": \"main.js\",","133","              \"textRange\": Object {","134","                \"endLine\": 2,","135","                \"endOffset\": 2,","136","                \"startLine\": 1,","137","                \"startOffset\": 1,","138","              },","139","            },","140","            Object {","141","              \"component\": \"main.js\",","142","              \"textRange\": Object {","143","                \"endLine\": 2,","144","                \"endOffset\": 2,","145","                \"startLine\": 1,","146","                \"startOffset\": 1,","147","              },","148","            },","149","          ],","150","          \"severity\": \"MAJOR\",","151","          \"status\": \"OPEN\",","152","          \"textRange\": Object {","153","            \"endLine\": 5,","154","            \"endOffset\": 10,","155","            \"startLine\": 5,","156","            \"startOffset\": 5,","157","          },","158","          \"transitions\": Array [],","159","          \"type\": \"BUG\",","160","        }","161","      }","162","      issuesByLine={Object {}}","163","      last={false}","164","      loadDuplications={[Function]}","165","      locations={Array []}","166","      locationsByLine={Object {}}","167","      onIssueChange={[MockFunction]}","168","      onIssuePopupToggle={[MockFunction]}","169","      onLocationSelect={[MockFunction]}","170","      openIssuesByLine={Object {}}","171","      renderDuplicationPopup={[Function]}","172","      scroll={[MockFunction]}","173","      snippet={","174","        Array [","175","          Object {","176","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","177","            \"coverageStatus\": \"covered\",","178","            \"coveredConditions\": 2,","179","            \"duplicated\": false,","180","            \"isNew\": true,","181","            \"line\": 3,","182","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","183","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","184","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","185","          },","186","          Object {","187","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","188","            \"coverageStatus\": \"covered\",","189","            \"coveredConditions\": 2,","190","            \"duplicated\": false,","191","            \"isNew\": true,","192","            \"line\": 4,","193","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","194","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","195","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","196","          },","197","          Object {","198","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","199","            \"coverageStatus\": \"covered\",","200","            \"coveredConditions\": 2,","201","            \"duplicated\": false,","202","            \"isNew\": true,","203","            \"line\": 5,","204","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","205","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","206","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","207","          },","208","          Object {","209","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","210","            \"coverageStatus\": \"covered\",","211","            \"coveredConditions\": 2,","212","            \"duplicated\": false,","213","            \"isNew\": true,","214","            \"line\": 6,","215","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","216","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","217","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","218","          },","219","          Object {","220","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","221","            \"coverageStatus\": \"covered\",","222","            \"coveredConditions\": 2,","223","            \"duplicated\": false,","224","            \"isNew\": true,","225","            \"line\": 7,","226","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","227","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","228","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","229","          },","230","          Object {","231","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","232","            \"coverageStatus\": \"covered\",","233","            \"coveredConditions\": 2,","234","            \"duplicated\": false,","235","            \"isNew\": true,","236","            \"line\": 8,","237","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","238","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","239","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","240","          },","241","          Object {","242","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","243","            \"coverageStatus\": \"covered\",","244","            \"coveredConditions\": 2,","245","            \"duplicated\": false,","246","            \"isNew\": true,","247","            \"line\": 9,","248","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","249","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","250","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","251","          },","252","          Object {","253","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","254","            \"coverageStatus\": \"covered\",","255","            \"coveredConditions\": 2,","256","            \"duplicated\": false,","257","            \"isNew\": true,","258","            \"line\": 10,","259","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","260","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","261","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","262","          },","263","          Object {","264","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","265","            \"coverageStatus\": \"covered\",","266","            \"coveredConditions\": 2,","267","            \"duplicated\": false,","268","            \"isNew\": true,","269","            \"line\": 11,","270","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","271","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","272","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","273","          },","274","          Object {","275","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","276","            \"coverageStatus\": \"covered\",","277","            \"coveredConditions\": 2,","278","            \"duplicated\": false,","279","            \"isNew\": true,","280","            \"line\": 12,","281","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","282","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","283","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","284","          },","285","          Object {","286","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","287","            \"coverageStatus\": \"covered\",","288","            \"coveredConditions\": 2,","289","            \"duplicated\": false,","290","            \"isNew\": true,","291","            \"line\": 13,","292","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","293","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","294","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","295","          },","296","          Object {","297","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","298","            \"coverageStatus\": \"covered\",","299","            \"coveredConditions\": 2,","300","            \"duplicated\": false,","301","            \"isNew\": true,","302","            \"line\": 14,","303","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","304","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","305","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","306","          },","307","        ]","308","      }","309","    \/>","310","  <\/div>","311","  <div","312","    id=\"snippet-wrapper-1\"","313","    key=\"1\"","314","  >","315","    <SnippetViewer","316","      branchLike={","317","        Object {","318","          \"analysisDate\": \"2018-01-01\",","319","          \"isMain\": true,","320","          \"name\": \"master\",","321","        }","322","      }","323","      component={","324","        Object {","325","          \"key\": \"a\",","326","          \"measures\": Object {","327","            \"coverage\": \"85.2\",","328","            \"duplicationDensity\": \"1.0\",","329","            \"issues\": \"12\",","330","            \"lines\": \"56\",","331","          },","332","          \"path\": \"a\",","333","          \"project\": \"my-project\",","334","          \"projectName\": \"MyProject\",","335","          \"q\": \"FIL\",","336","          \"uuid\": \"foo-bar\",","337","        }","338","      }","339","      expandBlock={[Function]}","340","      handleCloseIssues={[Function]}","341","      handleLinePopupToggle={[Function]}","342","      handleOpenIssues={[Function]}","343","      handleSymbolClick={[Function]}","344","      highlightedLocationMessage={","345","        Object {","346","          \"index\": 0,","347","          \"text\": \"\",","348","        }","349","      }","350","      highlightedSymbols={Array []}","351","      index={1}","352","      issue={","353","        Object {","354","          \"actions\": Array [],","355","          \"component\": \"main.js\",","356","          \"componentLongName\": \"main.js\",","357","          \"componentQualifier\": \"FIL\",","358","          \"componentUuid\": \"foo1234\",","359","          \"creationDate\": \"2017-03-01T09:36:01+0100\",","360","          \"flows\": Array [],","361","          \"fromHotspot\": false,","362","          \"key\": \"AVsae-CQS-9G3txfbFN2\",","363","          \"line\": 25,","364","          \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","365","          \"organization\": \"myorg\",","366","          \"project\": \"myproject\",","367","          \"projectKey\": \"foo\",","368","          \"projectName\": \"Foo\",","369","          \"projectOrganization\": \"org\",","370","          \"rule\": \"javascript:S1067\",","371","          \"ruleName\": \"foo\",","372","          \"secondaryLocations\": Array [","373","            Object {","374","              \"component\": \"main.js\",","375","              \"textRange\": Object {","376","                \"endLine\": 2,","377","                \"endOffset\": 2,","378","                \"startLine\": 1,","379","                \"startOffset\": 1,","380","              },","381","            },","382","            Object {","383","              \"component\": \"main.js\",","384","              \"textRange\": Object {","385","                \"endLine\": 2,","386","                \"endOffset\": 2,","387","                \"startLine\": 1,","388","                \"startOffset\": 1,","389","              },","390","            },","391","          ],","392","          \"severity\": \"MAJOR\",","393","          \"status\": \"OPEN\",","394","          \"textRange\": Object {","395","            \"endLine\": 5,","396","            \"endOffset\": 10,","397","            \"startLine\": 5,","398","            \"startOffset\": 5,","399","          },","400","          \"transitions\": Array [],","401","          \"type\": \"BUG\",","402","        }","403","      }","404","      issuesByLine={Object {}}","405","      last={false}","406","      loadDuplications={[Function]}","407","      locations={Array []}","408","      locationsByLine={Object {}}","409","      onIssueChange={[MockFunction]}","410","      onIssuePopupToggle={[MockFunction]}","411","      onLocationSelect={[MockFunction]}","412","      openIssuesByLine={Object {}}","413","      renderDuplicationPopup={[Function]}","414","      scroll={[MockFunction]}","415","      snippet={","416","        Array [","417","          Object {","418","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","419","            \"coverageStatus\": \"covered\",","420","            \"coveredConditions\": 2,","421","            \"duplicated\": false,","422","            \"isNew\": true,","423","            \"line\": 32,","424","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","425","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","426","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","427","          },","428","          Object {","429","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","430","            \"coverageStatus\": \"covered\",","431","            \"coveredConditions\": 2,","432","            \"duplicated\": false,","433","            \"isNew\": true,","434","            \"line\": 33,","435","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","436","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","437","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","438","          },","439","          Object {","440","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","441","            \"coverageStatus\": \"covered\",","442","            \"coveredConditions\": 2,","443","            \"duplicated\": false,","444","            \"isNew\": true,","445","            \"line\": 34,","446","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","447","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","448","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","449","          },","450","          Object {","451","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","452","            \"coverageStatus\": \"covered\",","453","            \"coveredConditions\": 2,","454","            \"duplicated\": false,","455","            \"isNew\": true,","456","            \"line\": 35,","457","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","458","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","459","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","460","          },","461","          Object {","462","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","463","            \"coverageStatus\": \"covered\",","464","            \"coveredConditions\": 2,","465","            \"duplicated\": false,","466","            \"isNew\": true,","467","            \"line\": 36,","468","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","469","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","470","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","471","          },","472","        ]","473","      }","474","    \/>","475","  <\/div>","476","  <div","477","    id=\"snippet-wrapper-2\"","478","    key=\"2\"","479","  >","480","    <SnippetViewer","481","      branchLike={","482","        Object {","483","          \"analysisDate\": \"2018-01-01\",","484","          \"isMain\": true,","485","          \"name\": \"master\",","486","        }","487","      }","488","      component={","489","        Object {","490","          \"key\": \"a\",","491","          \"measures\": Object {","492","            \"coverage\": \"85.2\",","493","            \"duplicationDensity\": \"1.0\",","494","            \"issues\": \"12\",","495","            \"lines\": \"56\",","496","          },","497","          \"path\": \"a\",","498","          \"project\": \"my-project\",","499","          \"projectName\": \"MyProject\",","500","          \"q\": \"FIL\",","501","          \"uuid\": \"foo-bar\",","502","        }","503","      }","504","      expandBlock={[Function]}","505","      handleCloseIssues={[Function]}","506","      handleLinePopupToggle={[Function]}","507","      handleOpenIssues={[Function]}","508","      handleSymbolClick={[Function]}","509","      highlightedLocationMessage={","510","        Object {","511","          \"index\": 0,","512","          \"text\": \"\",","513","        }","514","      }","515","      highlightedSymbols={Array []}","516","      index={2}","517","      issue={","518","        Object {","519","          \"actions\": Array [],","520","          \"component\": \"main.js\",","521","          \"componentLongName\": \"main.js\",","522","          \"componentQualifier\": \"FIL\",","523","          \"componentUuid\": \"foo1234\",","524","          \"creationDate\": \"2017-03-01T09:36:01+0100\",","525","          \"flows\": Array [],","526","          \"fromHotspot\": false,","527","          \"key\": \"AVsae-CQS-9G3txfbFN2\",","528","          \"line\": 25,","529","          \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","530","          \"organization\": \"myorg\",","531","          \"project\": \"myproject\",","532","          \"projectKey\": \"foo\",","533","          \"projectName\": \"Foo\",","534","          \"projectOrganization\": \"org\",","535","          \"rule\": \"javascript:S1067\",","536","          \"ruleName\": \"foo\",","537","          \"secondaryLocations\": Array [","538","            Object {","539","              \"component\": \"main.js\",","540","              \"textRange\": Object {","541","                \"endLine\": 2,","542","                \"endOffset\": 2,","543","                \"startLine\": 1,","544","                \"startOffset\": 1,","545","              },","546","            },","547","            Object {","548","              \"component\": \"main.js\",","549","              \"textRange\": Object {","550","                \"endLine\": 2,","551","                \"endOffset\": 2,","552","                \"startLine\": 1,","553","                \"startOffset\": 1,","554","              },","555","            },","556","          ],","557","          \"severity\": \"MAJOR\",","558","          \"status\": \"OPEN\",","559","          \"textRange\": Object {","560","            \"endLine\": 5,","561","            \"endOffset\": 10,","562","            \"startLine\": 5,","563","            \"startOffset\": 5,","564","          },","565","          \"transitions\": Array [],","566","          \"type\": \"BUG\",","567","        }","568","      }","569","      issuesByLine={Object {}}","570","      last={false}","571","      loadDuplications={[Function]}","572","      locations={Array []}","573","      locationsByLine={Object {}}","574","      onIssueChange={[MockFunction]}","575","      onIssuePopupToggle={[MockFunction]}","576","      onLocationSelect={[MockFunction]}","577","      openIssuesByLine={Object {}}","578","      renderDuplicationPopup={[Function]}","579","      scroll={[MockFunction]}","580","      snippet={","581","        Array [","582","          Object {","583","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","584","            \"coverageStatus\": \"covered\",","585","            \"coveredConditions\": 2,","586","            \"duplicated\": false,","587","            \"isNew\": true,","588","            \"line\": 52,","589","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","590","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","591","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","592","          },","593","          Object {","594","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","595","            \"coverageStatus\": \"covered\",","596","            \"coveredConditions\": 2,","597","            \"duplicated\": false,","598","            \"isNew\": true,","599","            \"line\": 53,","600","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","601","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","602","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","603","          },","604","          Object {","605","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","606","            \"coverageStatus\": \"covered\",","607","            \"coveredConditions\": 2,","608","            \"duplicated\": false,","609","            \"isNew\": true,","610","            \"line\": 54,","611","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","612","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","613","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","614","          },","615","          Object {","616","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","617","            \"coverageStatus\": \"covered\",","618","            \"coveredConditions\": 2,","619","            \"duplicated\": false,","620","            \"isNew\": true,","621","            \"line\": 55,","622","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","623","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","624","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","625","          },","626","          Object {","627","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","628","            \"coverageStatus\": \"covered\",","629","            \"coveredConditions\": 2,","630","            \"duplicated\": false,","631","            \"isNew\": true,","632","            \"line\": 56,","633","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","634","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","635","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","636","          },","637","        ]","638","      }","639","    \/>","640","  <\/div>","641","<\/div>","642","`;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/utils-test.ts":[{"add":["162","","163","  it('should handle last component', () => {","164","    const results = createSnippets(","165","      [","166","        mockFlowLocation({","167","          textRange: { startLine: 16, startOffset: 10, endLine: 16, endOffset: 14 }","168","        }),","169","        mockFlowLocation({","170","          textRange: { startLine: 19, startOffset: 2, endLine: 19, endOffset: 3 }","171","        })","172","      ],","173","      true","174","    );","175","","176","    expect(results).toHaveLength(1);","177","    expect(results[0]).toEqual({ index: 0, start: 14, end: 28 });","178","  });"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":[{"add":["67","  const wrapper = shallowRender({ issue, snippetGroup });","68","  expect(wrapper.state('snippets')).toHaveLength(3);","69","  expect(wrapper.state('snippets')[0]).toEqual({ index: 0, start: 3, end: 14 });","70","  expect(wrapper.state('snippets')[1]).toEqual({ index: 1, start: 32, end: 36 });","71","  expect(wrapper.state('snippets')[2]).toEqual({ index: 2, start: 52, end: 56 });"],"delete":["67","  expect(shallowRender({ issue, snippetGroup })).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/utils.ts":[{"add":["68","        ((issue && index === 0) || (last && index === locations.length - 1)","69","          ? LINES_BELOW_LAST","70","          : LINES_BELOW);"],"delete":["68","        (issue || (last && index === locations.length - 1) ? LINES_BELOW_LAST : LINES_BELOW);"]}]}},"af61ada2bb75d85926229dfd7d23596057c325f0":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/Coverage.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/main\/Coverage.js":[{"add":["119","    const newCoverageValue = newCoverageMeasure ?","120","        getPeriodValue(newCoverageMeasure, leakPeriod.index) : null;","121","    const newLinesToCoverValue = newLinesToCover ?","122","        getPeriodValue(newLinesToCover, leakPeriod.index) : null;","123","","124","    const formattedValue = newCoverageValue != null ? (","131","              {formatMeasure(newCoverageValue, 'PERCENT')}","139","    const label = newLinesToCoverValue != null ? (","149","              {formatMeasure(newLinesToCoverValue, 'SHORT_INT')}","163","            {formattedValue}"],"delete":["119","    const value = newCoverageMeasure ? (","126","              {formatMeasure(getPeriodValue(newCoverageMeasure, leakPeriod.index), 'PERCENT')}","134","    const label = newLinesToCover ? (","144","              {formatMeasure(getPeriodValue(newLinesToCover, leakPeriod.index), 'SHORT_INT')}","158","            {value}"]}]}},"34f303b0866eb0d69971878265c0890568befa64":{"changes":{"\/dev\/null":"DELETE","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/UpdateNullValuesFromExternalColumnsAndLoginOfUsers.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/FixDuplicationInExternalLoginOnUsersTest\/users.sql":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/UpdateNullValuesFromExternalColumnsAndLoginOfUsersTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/FixDuplicationInExternalLoginOnUsersTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/DbVersion72.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserRegistrarImpl.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/FixDuplicationInExternalLoginOnUsers.java":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/UpdateNullValuesFromExternalColumnsAndLoginOfUsers.java":[{"add":["32"," * Indeed, authentication will search for user by LOGIN but also by using EXTERNAL_ID and EXTERNAL_PROVIDER.","54","    massUpdate.select(\"SELECT id, login, external_login, external_identity_provider FROM users \" +","55","      \"WHERE login IS NULL OR external_login IS NULL OR external_id IS NULL OR external_identity_provider IS NULL\");","56","    massUpdate.update(\"UPDATE users SET login=?, external_login=?, external_id=?, external_identity_provider=?, updated_at=? WHERE id=?\");","66","      String externalLogin = row.getNullableString(3);","67","      externalLogin = externalLogin == null ? login : externalLogin;","68","","69","      String externalIdentityProvider = row.getNullableString(4);","70","","72","      update.setString(2, externalLogin);","73","      update.setString(3, externalLogin);","74","      update.setString(4, externalIdentityProvider == null ? \"sonarqube\" : externalIdentityProvider);","75","      update.setLong(5, now);","76","      update.setLong(6, id);"],"delete":["32"," * Indeed, authentication will search for user but LOGIN but also buy using EXTERNAL_ID and EXTERNAL_PROVIDER.","54","    massUpdate.select(\"SELECT id, login FROM users WHERE login IS NULL OR external_login IS NULL OR external_identity_provider IS NULL\");","55","    massUpdate.update(\"UPDATE users SET login=?, external_login=?, external_identity_provider=?, updated_at=? WHERE id=?\");","66","      update.setString(2, login);","67","      update.setString(3, \"sonarqube\");","68","      update.setLong(4, now);","69","      update.setLong(5, id);"]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/FixDuplicationInExternalLoginOnUsersTest\/users.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/UpdateNullValuesFromExternalColumnsAndLoginOfUsersTest.java":[{"add":["59","    insertUser(\"USER_1\", \"user1\", \"user1\", \"github\");","60","    insertUser(\"USER_2\", null, null, null);","61","    insertUser(\"USER_3\", \"user\", null, null);","62","    insertUser(\"USER_4\", null, \"user\", null);","63","    insertUser(\"USER_5\", null, null, \"github\");","64","    insertUser(null, \"user\", \"user\", \"bitbucket\");","65","    insertUser(null, null, null, null);","70","      tuple(\"USER_1\", \"user1\", \"user1\", \"github\", PAST),","71","      tuple(\"USER_2\", \"USER_2\", \"USER_2\", \"sonarqube\", NOW),","72","      tuple(\"USER_3\", \"user\", \"user\", \"sonarqube\", NOW),","73","      tuple(\"USER_4\", \"USER_4\", \"USER_4\", \"sonarqube\", NOW),","74","      tuple(\"USER_5\", \"USER_5\", \"USER_5\", \"github\", NOW),","75","      tuple(\"1\", \"user\", \"user\", \"bitbucket\", NOW),","76","      tuple(\"2\", \"2\", \"2\", \"sonarqube\", NOW));","81","    insertUser(null, \"user\", \"user\", \"bitbucket\");","92","    insertUser(\"USER_1\", null, null, null);","97","    assertUsers(tuple(\"USER_1\", \"USER_1\", \"USER_1\", \"sonarqube\", NOW));","101","    assertThat(db.select(\"SELECT LOGIN, EXTERNAL_LOGIN, EXTERNAL_ID, EXTERNAL_IDENTITY_PROVIDER, UPDATED_AT FROM USERS\")","103","      .map(map -> new Tuple(map.get(\"LOGIN\"), map.get(\"EXTERNAL_LOGIN\"), map.get(\"EXTERNAL_ID\"), map.get(\"EXTERNAL_IDENTITY_PROVIDER\"), map.get(\"UPDATED_AT\")))","108","  private void insertUser(@Nullable String login, @Nullable String externalLogin, @Nullable String externalId, @Nullable String externalIdentityProvider) {","112","      \"EXTERNAL_ID\", externalLogin,"],"delete":["59","    insertUser(\"USER_1\", \"user1\", \"github\");","60","    insertUser(\"USER_2\", null, null);","61","    insertUser(\"USER_3\", \"user\", null);","62","    insertUser(\"USER_4\", null, \"github\");","63","    insertUser(null, \"user\", \"bitbucket\");","64","    insertUser(null, null, null);","69","      tuple(\"USER_1\", \"user1\", \"github\", PAST),","70","      tuple(\"USER_2\", \"USER_2\", \"sonarqube\", NOW),","71","      tuple(\"USER_3\", \"USER_3\", \"sonarqube\", NOW),","72","      tuple(\"USER_4\", \"USER_4\", \"sonarqube\", NOW),","73","      tuple(\"1\", \"1\", \"sonarqube\", NOW),","74","      tuple(\"2\", \"2\", \"sonarqube\", NOW));","79","    insertUser(null, \"user\", \"bitbucket\");","90","    insertUser(\"USER_1\", null, null);","95","    assertUsers(tuple(\"USER_1\", \"USER_1\", \"sonarqube\", NOW));","99","    assertThat(db.select(\"SELECT LOGIN, EXTERNAL_LOGIN, EXTERNAL_IDENTITY_PROVIDER, UPDATED_AT FROM USERS\")","101","      .map(map -> new Tuple(map.get(\"LOGIN\"), map.get(\"EXTERNAL_LOGIN\"), map.get(\"EXTERNAL_IDENTITY_PROVIDER\"), map.get(\"UPDATED_AT\")))","106","  private void insertUser(@Nullable String login, @Nullable String externalLogin, @Nullable String externalIdentityProvider) {"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/FixDuplicationInExternalLoginOnUsersTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/DbVersion72.java":[{"add":["41","      .add(2112, \"Fix duplication in EXTERNAL_ID and EXTERNAL_LOGIN on table users\", FixDuplicationInExternalLoginOnUsers.class)"],"delete":["41","      .add(2112, \"Populate EXTERNAL_ID on table users\", PopulateExternalIdOnUsers.class)"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserRegistrarImpl.java":[{"add":["111","    \/\/ Then, try with the external login, for instance when external ID has changed"],"delete":["111","    \/\/ Then, try with the external login, for instance when for instance external ID has changed"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v72\/FixDuplicationInExternalLoginOnUsers.java":[{"add":[],"delete":[]}]}},"20570f275c8a996939c264bf032615554e784fc5":{"changes":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/DefaultHttpDownloaderTest.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":"MODIFY"},"diff":{"sonar-core\/src\/test\/java\/org\/sonar\/core\/util\/DefaultHttpDownloaderTest.java":[{"add":["24","import java.net.Authenticator;","26","import java.net.PasswordAuthentication;","39","import org.hamcrest.TypeSafeMatcher;","56","","59","import static org.mockito.Matchers.argThat;","61","import static org.mockito.Mockito.never;","62","import static org.mockito.Mockito.verify;","255","","256","  @Test","257","  public void configure_http_proxy() {","258","    DefaultHttpDownloader.ProxySystem system = mock(DefaultHttpDownloader.ProxySystem.class);","259","    Settings settings = new Settings();","260","    settings.setProperty(\"http.proxyHost\", \"1.2.3.4\");","261","    settings.setProperty(\"http.proxyPort\", \"80\");","262","","263","    new DefaultHttpDownloader.BaseHttpDownloader(system, settings, null);","264","","265","    verify(system).setProperty(\"http.proxyHost\", \"1.2.3.4\");","266","    verify(system).setProperty(\"http.proxyPort\", \"80\");","267","    verify(system, never()).setDefaultAuthenticator(any(Authenticator.class));","268","  }","269","","270","  @Test","271","  public void configure_http_proxy_credentials() {","272","    DefaultHttpDownloader.ProxySystem system = mock(DefaultHttpDownloader.ProxySystem.class);","273","    Settings settings = new Settings();","274","    settings.setProperty(\"https.proxyHost\", \"1.2.3.4\");","275","    settings.setProperty(\"http.proxyUser\", \"the_login\");","276","    settings.setProperty(\"http.proxyPassword\", \"the_passwd\");","277","","278","    new DefaultHttpDownloader.BaseHttpDownloader(system, settings, null);","279","","280","    verify(system).setDefaultAuthenticator(argThat(new TypeSafeMatcher<Authenticator>() {","281","      @Override","282","      protected boolean matchesSafely(Authenticator authenticator) {","283","        DefaultHttpDownloader.ProxyAuthenticator a = (DefaultHttpDownloader.ProxyAuthenticator) authenticator;","284","        PasswordAuthentication authentication = a.getPasswordAuthentication();","285","        return authentication.getUserName().equals(\"the_login\") &&","286","          new String(authentication.getPassword()).equals(\"the_passwd\");","287","      }","288","","289","      @Override","290","      public void describeTo(Description description) {","291","      }","292","    }));","293","  }","294",""],"delete":["35",""]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":[{"add":["52","import static org.apache.commons.lang.StringUtils.isNotEmpty;","61","","77","    downloader = new BaseHttpDownloader(new ProxySystem(), settings, server.getVersion());","91","    downloader = new BaseHttpDownloader(new ProxySystem(), settings, null);","159","  static class ProxySystem {","160","    public void setProperty(String key, String value) {","161","      System.setProperty(key, value);","162","    }","163","","164","    public void setDefaultAuthenticator(Authenticator authenticator) {","165","      Authenticator.setDefault(authenticator);","166","    }","167","  }","168","","169","  static class BaseHttpDownloader {","181","    BaseHttpDownloader(ProxySystem system, Settings settings, @Nullable String userAgent) {","182","      initProxy(system, settings);","186","    private void initProxy(ProxySystem system, Settings settings) {","187","      \/\/ propagate system properties","188","      for (String key : PROXY_SETTINGS) {","189","        if (settings.hasKey(key)) {","190","          system.setProperty(key, settings.getString(key));","191","        }","192","      }","193","      \/\/ register credentials","194","      String login = settings.getString(HTTP_PROXY_USER);","195","      if (isNotEmpty(login)) {","196","        system.setDefaultAuthenticator(new ProxyAuthenticator(login, settings.getString(HTTP_PROXY_PASSWORD)));","358","  }","360","  static class ProxyAuthenticator extends Authenticator {","361","    private final PasswordAuthentication auth;","363","    ProxyAuthenticator(String user, @Nullable String password) {","364","      auth = new PasswordAuthentication(user, password == null ? new char[0] : password.toCharArray());","365","    }","367","    @Override","368","    protected PasswordAuthentication getPasswordAuthentication() {","369","      return auth;"],"delete":["21","","43","import java.util.Map;","77","    downloader = new BaseHttpDownloader(settings.getProperties(), server.getVersion());","91","    downloader = new BaseHttpDownloader(settings.getProperties(), null);","159","  public static class BaseHttpDownloader {","171","    public BaseHttpDownloader(Map<String, String> settings, @Nullable String userAgent) {","172","      initProxy(settings);","176","    private void initProxy(Map<String, String> settings) {","177","      propagateProxySystemProperties(settings);","178","      if (requiresProxyAuthentication(settings)) {","179","        registerProxyCredentials(settings);","209","    private static void registerProxyCredentials(Map<String, String> settings) {","210","      Authenticator.setDefault(new ProxyAuthenticator(","211","        settings.get(HTTP_PROXY_USER),","212","        settings.get(HTTP_PROXY_PASSWORD)));","213","    }","214","","215","    private boolean requiresProxyAuthentication(Map<String, String> settings) {","216","      return settings.containsKey(HTTP_PROXY_USER);","217","    }","218","","219","    private void propagateProxySystemProperties(Map<String, String> settings) {","220","      for (String key : PROXY_SETTINGS) {","221","        if (settings.containsKey(key)) {","222","          System.setProperty(key, settings.get(key));","223","        }","224","      }","225","    }","226","","360","    private static class ProxyAuthenticator extends Authenticator {","361","      private final PasswordAuthentication auth;","363","      ProxyAuthenticator(String user, String password) {","364","        auth = new PasswordAuthentication(user, password == null ? new char[0] : password.toCharArray());","365","      }","367","      @Override","368","      protected PasswordAuthentication getPasswordAuthentication() {","369","        return auth;","370","      }"]}]}},"6cd23f9e6c49c4731da4c878c9891dd3cec8d08d":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoader.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoaderTest.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoader.java":[{"add":["21","import org.sonar.batch.util.BatchUtils;","22","","29","","31","","81","    builder.append(\"&qprofile=\").append(BatchUtils.encodeForUrl(qualityProfileKey));"],"delete":["77","    builder.append(\"&qprofile=\").append(qualityProfileKey);"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoaderTest.java":[{"add":["49","  public void feed_real_response_encode_qp() throws IOException {","53","    String req1 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c%2B-test_c%2B-values-17445&p=1&ps=500\";","54","    String req2 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c%2B-test_c%2B-values-17445&p=2&ps=500\";","58","    Collection<LoadedActiveRule> activeRules = loader.load(\"c+-test_c+-values-17445\", null);","66","  "],"delete":["22","","50","  public void feed_real_response() throws IOException {","54","    String req1 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-26368&p=1&ps=500\";","55","    String req2 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-26368&p=2&ps=500\";","59","    Collection<LoadedActiveRule> activeRules = loader.load(\"java-sonar-way-26368\", null);","67",""]}]}},"291509ecd95f3fcfb218d755f6eefbaec1bf4cb8":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/ColumnDefTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/db\/CheckDatabaseCharsetAtStartup.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/ColumnDef.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/charset\/ColumnDefTest.java":[{"add":["29","    ColumnDef underTest = new ColumnDef(\"sys.sysusers\", \"login\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","32","    underTest = new ColumnDef(\"SYS.SYSUSERS\", \"login\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","38","    ColumnDef underTest = new ColumnDef(\"project_measures\", \"text_value\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","41","    underTest = new ColumnDef(\"PROJECT_MEASURES\", \"text_value\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","42","    assertThat(underTest.isInSonarQubeTable()).isTrue();","43","  }","44","","45","  @Test","46","  public void isInSonarQubeTable_returns_true_if_table_existed_in_previous_versions_of_sonarqube() {","47","    ColumnDef underTest = new ColumnDef(\"activities\", \"kee\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);"],"delete":["29","    ColumnDef underTest = new ColumnDef(\"sys.sysusers\", \"colum\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","32","    underTest = new ColumnDef(\"SYS.SYSUSERS\", \"colum\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","38","    ColumnDef underTest = new ColumnDef(\"project_measures\", \"column\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);","41","    underTest = new ColumnDef(\"PROJECT_MEASURES\", \"column\", \"charset\", \"collation\", \"NVARCHAR\", 100L, false);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/db\/CheckDatabaseCharsetAtStartup.java":[{"add":["41","    System.out.println(\"xxxxxxxxxxx\");"],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/charset\/ColumnDef.java":[{"add":["82","    String tableName = table.toLowerCase(Locale.ENGLISH);","83","    return DatabaseVersion.TABLES.contains(tableName) || DatabaseVersion.OLD_DROPPED_TABLES.contains(tableName);"],"delete":["82","    return DatabaseVersion.TABLES.contains(table.toLowerCase(Locale.ENGLISH));"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["42","   * These tables are still involved in DB migrations, so potentially","43","   * incorrect collation must be fixed so that joins with other","44","   * tables are possible.","45","   *","46","   * @see org.sonar.db.charset.ColumnDef#isInSonarQubeTable() ","47","   *\/","48","  public static final Set<String> OLD_DROPPED_TABLES = ImmutableSet.of(","49","    \"activities\"","50","  );","51","","52","  \/**","108",""],"delete":[]}]}},"44b3ae596e9f6298b02610589f5ea00f87f73139":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/ApplicationQualityGateProject.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/qualityGate\/ApplicationQualityGateProject.css":[{"add":["6","  border-width: 1px;","7","  border-style: solid;","8","  border-color: inherit;"],"delete":[]}]}},"560d8e87f9624cc2ad1b7a5c17ac647d2dcc0d54":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStepTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":[{"add":["231","    if (dbComponent.getPath() == null) {","232","      return null;","233","    }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStepTest.java":[{"add":["31","import java.util.function.Function;","361","  public void execute_detects_no_move_if_content_of_file_has_no_path_in_DB() {","362","    analysisMetadataHolder.setBaseProjectSnapshot(ANALYSIS);","363","","364","    mockComponents(key -> newComponentDto(key).setPath(null), FILE_1.getKey());","365","    mockContentOfFileInDb(FILE_1.getKey(), CONTENT1);","366","    setFilesInReport(FILE_2);","367","    setFileContentInReport(FILE_2_REF, CONTENT1);","368","","369","    underTest.execute();","370","","371","    assertThat(movedFilesRepository.getComponentsWithOriginal()).isEmpty();","372","  }","373","","374","  @Test","525","    return mockComponents(key -> newComponentDto(key), componentKeys);","526","  }","527","","528","  private ComponentDto[] mockComponents(Function<String, ComponentDto> newComponentDto, String... componentKeys) {","530","      .map(newComponentDto)"],"delete":["511","      .map(key -> newComponentDto(key))"]}]}},"947685909fbdee4146a59c67cc706b5e7f530876":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotViewer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/FilterBar.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewerRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectBaseline\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewerRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsAppRenderer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/FilterBar-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewer.tsx":[{"add":["96","    if (this.commentTextRef.current) {"],"delete":["45","  parentScrollRef: React.RefObject<HTMLDivElement>;","50","    this.parentScrollRef = React.createRef<HTMLDivElement>();","98","    if (this.commentTextRef.current && this.parentScrollRef.current) {","100","        parent: this.parentScrollRef.current,","125","        parentScrollRef={this.parentScrollRef}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotViewer-test.tsx.snap":[{"add":[],"delete":["37","  parentScrollRef={","38","    Object {","39","      \"current\": null,","40","    }","41","  }","92","  parentScrollRef={","93","    Object {","94","      \"current\": null,","95","    }","96","  }"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.css":[{"add":[],"delete":["19",".hotspot-list {","20","  \/* sidebar width - 16px padding-right, required so as to ignore the scrollbar *\/","21","  width: 284px;","22","}","23",""]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewer-test.tsx":[{"add":[],"delete":["66","  const mockParentRef = ({ current: {} } as any) as React.RefObject<HTMLDivElement>;","67","  wrapper.instance().parentScrollRef = mockParentRef;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsApp.tsx":[{"add":["22","import { addSideBarClass, removeSideBarClass } from 'sonar-ui-common\/helpers\/pages';","91","    addSideBarClass();","116","    removeSideBarClass();"],"delete":["22","import { addNoFooterPageClass, removeNoFooterPageClass } from 'sonar-ui-common\/helpers\/pages';","91","    addNoFooterPageClass();","116","    removeNoFooterPageClass();"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/styles.css":[{"add":["19","#security_hotspots .filter-bar-outer {","20","  height: 62px;","24","  position: fixed;","25","  background-color: var(--barBackgroundColor);","26","  z-index: var(--pageSideZIndex);","27","  left: 0;","28","  right: 0;","29","}","30","","31","#security_hotspots .filter-bar-inner {","35","  box-sizing: border-box;","39","#security_hotspots .layout-page-side,","40","#security_hotspots .layout-page-side-outer {","41","  width: calc(50vw - 330px);","44","#security_hotspots .layout-page-side-inner {","45","  margin-left: calc(50vw - 645px);","48","#security_hotspots .layout-page-main {","49","  padding: 0;","50","}","51","","52","@media (max-width: 1320px) {","53","  #security_hotspots .layout-page-side-outer,","54","  #security_hotspots .layout-page-side {","55","    width: 316px;","56","  }","57","","58","  #security_hotspots .layout-page-side-inner {","59","    margin-left: 0;","60","  }","61","}","62","","63","#security_hotspots .hotspot-content {","64","  max-width: 962px; \/* 1280px - 300px - 18px *\/","65","  background: white;","69","#security_hotspots .invisible {","70","  height: 0;","71","  overflow: hidden;"],"delete":["19","#security_hotspots .wrapper {","20","  position: fixed;","21","  \/* top is defined programatically *\/","22","  bottom: 0;","23","  width: 100%;","24","}","25","","26","#security_hotspots .layout-page {","27","  margin: 0 auto;","28","  min-width: var(--minPageWidth);","29","  max-width: 1280px;","30","  height: 100%;","35","  box-sizing: border-box;","41","#security_hotspots .sidebar {","42","  flex: 0 0 300px;","43","  border-right: 1px solid var(--barBorderColor);","44","  height: 100%;","45","  overflow-y: auto;","46","  overflow-x: hidden;","49","#security_hotspots .main {","50","  flex: 1 1 auto;","51","  background-color: white;","52","  \/* Force flex to take parent width. *\/","53","  overflow-x: auto;","56","#security_hotspots .main .hotspot-content {","57","  overflow-y: auto;","58","  height: 100%;","62",".invisible {","63","  visibility: hidden;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsApp-test.tsx":[{"add":["21","import { addSideBarClass } from 'sonar-ui-common\/helpers\/pages';","46","  addSideBarClass: jest.fn(),","47","  removeSideBarClass: jest.fn()","84","  expect(addSideBarClass).toBeCalled();"],"delete":["21","import { addNoFooterPageClass } from 'sonar-ui-common\/helpers\/pages';","46","  addNoFooterPageClass: jest.fn(),","47","  removeNoFooterPageClass: jest.fn()","84","  expect(addNoFooterPageClass).toBeCalled();"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/FilterBar.tsx":[{"add":["78","    <div className=\"filter-bar-outer\">","79","      <div className=\"filter-bar\">","80","        <div className=\"filter-bar-inner display-flex-center\">","81","          {isStaticListOfHotspots ? (","82","            <a","83","              id=\"show_all_hotspot\"","84","              onClick={() => props.onShowAllHotspots()}","85","              role=\"link\"","86","              tabIndex={0}>","87","              {translate('hotspot.filters.show_all')}","88","            <\/a>","89","          ) : (","90","            <div className=\"display-flex-space-between width-100\">","91","              <div className=\"display-flex-center\">","92","                <h3 className=\"huge-spacer-right\">{translate('hotspot.filters.title')}<\/h3>","94","                {isLoggedIn(currentUser) && (","95","                  <RadioToggle","96","                    className=\"huge-spacer-right\"","97","                    name=\"assignee-filter\"","98","                    onCheck={(value: AssigneeFilterOption) =>","99","                      props.onChangeFilters({ assignedToMe: value === AssigneeFilterOption.ME })","100","                    }","101","                    options={assigneeFilterOptions}","102","                    value={","103","                      filters.assignedToMe ? AssigneeFilterOption.ME : AssigneeFilterOption.ALL","104","                    }","105","                  \/>","106","                )}","108","                <span className=\"spacer-right\">{translate('status')}<\/span>","109","                <Select","110","                  className=\"input-medium big-spacer-right\"","111","                  clearable={false}","112","                  onChange={(option: { value: HotspotStatusFilter }) =>","113","                    props.onChangeFilters({ status: option.value })","115","                  options={statusOptions}","116","                  searchable={false}","117","                  value={filters.status}","119","","120","                {onBranch && (","121","                  <Select","122","                    className=\"input-medium big-spacer-right\"","123","                    clearable={false}","124","                    onChange={(option: { value: boolean }) =>","125","                      props.onChangeFilters({ sinceLeakPeriod: option.value })","126","                    }","127","                    options={periodOptions}","128","                    searchable={false}","129","                    value={filters.sinceLeakPeriod}","130","                  \/>","131","                )}","132","              <\/div>","133","","134","              {isProject && (","135","                <div className=\"display-flex-center\">","136","                  <span className=\"little-spacer-right\">","137","                    {translate('metric.security_hotspots_reviewed.name')}","138","                  <\/span>","139","                  <HelpTooltip","140","                    className=\"big-spacer-right\"","141","                    overlay={translate('hotspots.reviewed.tooltip')}","142","                  \/>","143","                  <DeferredSpinner loading={loadingMeasure}>","144","                    {hotspotsReviewedMeasure && <CoverageRating value={hotspotsReviewedMeasure} \/>}","145","                    <Measure","146","                      className=\"spacer-left huge\"","147","                      metricKey={","148","                        onBranch && !filters.sinceLeakPeriod","149","                          ? 'security_hotspots_reviewed'","150","                          : 'new_security_hotspots_reviewed'","151","                      }","152","                      metricType=\"PERCENT\"","153","                      value={hotspotsReviewedMeasure}","154","                    \/>","155","                  <\/DeferredSpinner>","156","                <\/div>","157","              )}","161","      <\/div>"],"delete":["78","    <div className=\"filter-bar display-flex-center\">","79","      {isStaticListOfHotspots ? (","80","        <a id=\"show_all_hotspot\" onClick={() => props.onShowAllHotspots()} role=\"link\" tabIndex={0}>","81","          {translate('hotspot.filters.show_all')}","82","        <\/a>","83","      ) : (","84","        <div className=\"display-flex-space-between width-100\">","85","          <div className=\"display-flex-center\">","86","            <h3 className=\"huge-spacer-right\">{translate('hotspot.filters.title')}<\/h3>","88","            {isLoggedIn(currentUser) && (","89","              <RadioToggle","90","                className=\"huge-spacer-right\"","91","                name=\"assignee-filter\"","92","                onCheck={(value: AssigneeFilterOption) =>","93","                  props.onChangeFilters({ assignedToMe: value === AssigneeFilterOption.ME })","94","                }","95","                options={assigneeFilterOptions}","96","                value={filters.assignedToMe ? AssigneeFilterOption.ME : AssigneeFilterOption.ALL}","97","              \/>","98","            )}","100","            <span className=\"spacer-right\">{translate('status')}<\/span>","101","            <Select","102","              className=\"input-medium big-spacer-right\"","103","              clearable={false}","104","              onChange={(option: { value: HotspotStatusFilter }) =>","105","                props.onChangeFilters({ status: option.value })","106","              }","107","              options={statusOptions}","108","              searchable={false}","109","              value={filters.status}","110","            \/>","111","","112","            {onBranch && (","113","              <Select","114","                className=\"input-medium big-spacer-right\"","115","                clearable={false}","116","                onChange={(option: { value: boolean }) =>","117","                  props.onChangeFilters({ sinceLeakPeriod: option.value })","118","                }","119","                options={periodOptions}","120","                searchable={false}","121","                value={filters.sinceLeakPeriod}","122","              \/>","123","            )}","124","          <\/div>","125","","126","          {isProject && (","127","            <div className=\"display-flex-center\">","128","              <span className=\"little-spacer-right\">","129","                {translate('metric.security_hotspots_reviewed.name')}","130","              <\/span>","131","              <HelpTooltip","132","                className=\"big-spacer-right\"","133","                overlay={translate('hotspots.reviewed.tooltip')}","134","              \/>","135","              <DeferredSpinner loading={loadingMeasure}>","136","                {hotspotsReviewedMeasure && <CoverageRating value={hotspotsReviewedMeasure} \/>}","137","                <Measure","138","                  className=\"spacer-left huge\"","139","                  metricKey={","140","                    onBranch && !filters.sinceLeakPeriod","141","                      ? 'security_hotspots_reviewed'","142","                      : 'new_security_hotspots_reviewed'","144","                  metricType=\"PERCENT\"","145","                  value={hotspotsReviewedMeasure}","147","              <\/DeferredSpinner>","151","      )}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotViewerRenderer-test.tsx":[{"add":[],"delete":["61","      parentScrollRef={React.createRef()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotList-test.tsx.snap":[{"add":["4","  className=\"huge-spacer-bottom\"","28","  className=\"huge-spacer-bottom\"","51","  className=\"huge-spacer-bottom\"","75","  className=\"huge-spacer-bottom\"","343","  className=\"huge-spacer-bottom\""],"delete":["4","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","28","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","51","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","75","  className=\"huge-spacer-bottom big-padded-right hotspot-list\"","343","  className=\"huge-spacer-bottom big-padded-right hotspot-list\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projectBaseline\/styles.css":[{"add":[],"delete":["146","","147",".invisible {","148","  visibility: hidden;","149","}"]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":[{"add":[],"delete":["163",".no-footer-page #footer {","164","  display: none;","165","}","166",""]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":[{"add":["41",".invisible {","42","  visibility: hidden;","43","}","44",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotViewerRenderer.tsx":[{"add":["63","    commentVisible","77","        <div className=\"big-padded hotspot-content\">"],"delete":["51","  parentScrollRef: React.RefObject<HTMLDivElement>;","64","    commentVisible,","65","    parentScrollRef","79","        <div className=\"big-padded hotspot-content\" ref={parentScrollRef}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/__snapshots__\/SecurityHotspotsAppRenderer-test.tsx.snap":[{"add":["6","  <Suggestions","7","    suggestions=\"security_hotspots\"","8","  \/>","9","  <Helmet","10","    defer={true}","11","    encodeSpecialCharacters={true}","12","    title=\"hotspots.page\"","13","  \/>","14","  <A11ySkipTarget","15","    anchor=\"security_hotspots_main\"","16","  \/>","54","  <EmptyHotspotsPage","55","    filtered={false}","56","    isStaticListOfHotspots={true}","57","  \/>","62","<div","63","  id=\"security_hotspots\"","64",">","65","  <Suggestions","66","    suggestions=\"security_hotspots\"","67","  \/>","68","  <Helmet","69","    defer={true}","70","    encodeSpecialCharacters={true}","71","    title=\"hotspots.page\"","72","  \/>","73","  <A11ySkipTarget","74","    anchor=\"security_hotspots_main\"","75","  \/>","76","  <Connect(withCurrentUser(FilterBar))","77","    component={","79","        \"breadcrumbs\": Array [],","80","        \"key\": \"my-project\",","81","        \"name\": \"MyProject\",","82","        \"organization\": \"foo\",","83","        \"qualifier\": \"TRK\",","84","        \"qualityGate\": Object {","85","          \"isDefault\": true,","86","          \"key\": \"30\",","87","          \"name\": \"Sonar way\",","88","        },","89","        \"qualityProfiles\": Array [","90","          Object {","91","            \"deleted\": false,","92","            \"key\": \"my-qp\",","93","            \"language\": \"ts\",","94","            \"name\": \"Sonar way\",","95","          },","96","        ],","97","        \"tags\": Array [],","100","    filters={","101","      Object {","102","        \"assignedToMe\": false,","103","        \"sinceLeakPeriod\": false,","104","        \"status\": \"TO_REVIEW\",","105","      }","106","    }","107","    isStaticListOfHotspots={true}","108","    loadingMeasure={false}","109","    onBranch={false}","110","    onChangeFilters={[MockFunction]}","111","    onShowAllHotspots={[MockFunction]}","112","  \/>","113","  <EmptyHotspotsPage","114","    filtered={false}","115","    isStaticListOfHotspots={true}","116","  \/>","121","<div","122","  className=\"layout-page-side\"","123","  style={","124","    Object {","125","      \"top\": 0,","127","  }","128",">","129","  <div","130","    className=\"layout-page-side-inner\"","132","    <HotspotList","133","      hotspots={","134","        Array [","135","          Object {","136","            \"author\": \"Developer 1\",","137","            \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","138","            \"creationDate\": \"2013-05-13T17:55:39+0200\",","139","            \"key\": \"h1\",","140","            \"line\": 81,","141","            \"message\": \"'3' is a magic number.\",","142","            \"project\": \"com.github.kevinsawicki:http-request\",","143","            \"resolution\": undefined,","144","            \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","145","            \"securityCategory\": \"command-injection\",","146","            \"status\": \"TO_REVIEW\",","147","            \"updateDate\": \"2013-05-13T17:55:39+0200\",","148","            \"vulnerabilityProbability\": \"HIGH\",","149","          },","150","          Object {","151","            \"author\": \"Developer 1\",","152","            \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","153","            \"creationDate\": \"2013-05-13T17:55:39+0200\",","154","            \"key\": \"h2\",","155","            \"line\": 81,","156","            \"message\": \"'3' is a magic number.\",","157","            \"project\": \"com.github.kevinsawicki:http-request\",","158","            \"resolution\": undefined,","159","            \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","160","            \"securityCategory\": \"command-injection\",","161","            \"status\": \"TO_REVIEW\",","162","            \"updateDate\": \"2013-05-13T17:55:39+0200\",","163","            \"vulnerabilityProbability\": \"HIGH\",","164","          },","165","        ]","166","      }","167","      hotspotsTotal={3}","168","      isStaticListOfHotspots={true}","169","      loadingMore={false}","170","      onHotspotClick={[MockFunction]}","171","      onLoadMore={[MockFunction]}","172","      securityCategories={Object {}}","173","      selectedHotspot={","174","        Object {","175","          \"author\": \"Developer 1\",","176","          \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","177","          \"creationDate\": \"2013-05-13T17:55:39+0200\",","178","          \"key\": \"h2\",","179","          \"line\": 81,","180","          \"message\": \"'3' is a magic number.\",","181","          \"project\": \"com.github.kevinsawicki:http-request\",","182","          \"resolution\": undefined,","183","          \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","184","          \"securityCategory\": \"command-injection\",","185","          \"status\": \"TO_REVIEW\",","186","          \"updateDate\": \"2013-05-13T17:55:39+0200\",","187","          \"vulnerabilityProbability\": \"HIGH\",","188","        }","189","      }","190","      statusFilter=\"TO_REVIEW\"","197","<div","198","  id=\"security_hotspots\"","199",">","200","  <Suggestions","201","    suggestions=\"security_hotspots\"","202","  \/>","203","  <Helmet","204","    defer={true}","205","    encodeSpecialCharacters={true}","206","    title=\"hotspots.page\"","207","  \/>","208","  <A11ySkipTarget","209","    anchor=\"security_hotspots_main\"","210","  \/>","211","  <Connect(withCurrentUser(FilterBar))","212","    component={","214","        \"breadcrumbs\": Array [],","215","        \"key\": \"my-project\",","216","        \"name\": \"MyProject\",","217","        \"organization\": \"foo\",","218","        \"qualifier\": \"TRK\",","219","        \"qualityGate\": Object {","220","          \"isDefault\": true,","221","          \"key\": \"30\",","222","          \"name\": \"Sonar way\",","223","        },","224","        \"qualityProfiles\": Array [","225","          Object {","226","            \"deleted\": false,","227","            \"key\": \"my-qp\",","228","            \"language\": \"ts\",","229","            \"name\": \"Sonar way\",","230","          },","231","        ],","232","        \"tags\": Array [],","235","    filters={","237","        \"assignedToMe\": false,","238","        \"sinceLeakPeriod\": false,","239","        \"status\": \"TO_REVIEW\",","242","    isStaticListOfHotspots={true}","243","    loadingMeasure={false}","244","    onBranch={false}","245","    onChangeFilters={[MockFunction]}","246","    onShowAllHotspots={[MockFunction]}","247","  \/>","248","  <DeferredSpinner","249","    className=\"huge-spacer-left big-spacer-top\"","250","    timeout={100}","251","  \/>","256","<div","257","  id=\"security_hotspots\"","258",">","259","  <Suggestions","260","    suggestions=\"security_hotspots\"","261","  \/>","262","  <Helmet","263","    defer={true}","264","    encodeSpecialCharacters={true}","265","    title=\"hotspots.page\"","266","  \/>","267","  <A11ySkipTarget","268","    anchor=\"security_hotspots_main\"","269","  \/>","270","  <Connect(withCurrentUser(FilterBar))","271","    component={","273","        \"breadcrumbs\": Array [],","274","        \"key\": \"my-project\",","275","        \"name\": \"MyProject\",","276","        \"organization\": \"foo\",","277","        \"qualifier\": \"TRK\",","278","        \"qualityGate\": Object {","279","          \"isDefault\": true,","280","          \"key\": \"30\",","281","          \"name\": \"Sonar way\",","282","        },","283","        \"qualityProfiles\": Array [","284","          Object {","285","            \"deleted\": false,","286","            \"key\": \"my-qp\",","287","            \"language\": \"ts\",","288","            \"name\": \"Sonar way\",","289","          },","290","        ],","291","        \"tags\": Array [],","294","    filters={","295","      Object {","296","        \"assignedToMe\": true,","297","        \"sinceLeakPeriod\": false,","298","        \"status\": \"TO_REVIEW\",","299","      }","300","    }","301","    isStaticListOfHotspots={true}","302","    loadingMeasure={false}","303","    onBranch={false}","304","    onChangeFilters={[MockFunction]}","305","    onShowAllHotspots={[MockFunction]}","306","  \/>","307","  <EmptyHotspotsPage","308","    filtered={true}","309","    isStaticListOfHotspots={true}","310","  \/>"],"delete":["43","  <ScreenPositionHelper>","44","    <Component \/>","45","  <\/ScreenPositionHelper>","50","<div>","51","  <div","52","    className=\"wrapper\"","53","    style={","55","        \"top\": 0,","58","  >","59","    <Suggestions","60","      suggestions=\"security_hotspots\"","61","    \/>","62","    <Helmet","63","      defer={true}","64","      encodeSpecialCharacters={true}","65","      title=\"hotspots.page\"","66","    \/>","67","    <A11ySkipTarget","68","      anchor=\"security_hotspots_main\"","69","    \/>","70","    <EmptyHotspotsPage","71","      filtered={false}","72","      isStaticListOfHotspots={true}","73","    \/>","74","  <\/div>","79","<div>","80","  <div","81","    className=\"wrapper\"","82","    style={","83","      Object {","84","        \"top\": 0,","85","      }","88","    <Suggestions","89","      suggestions=\"security_hotspots\"","91","    <Helmet","92","      defer={true}","93","      encodeSpecialCharacters={true}","94","      title=\"hotspots.page\"","95","    \/>","96","    <A11ySkipTarget","97","      anchor=\"security_hotspots_main\"","98","    \/>","99","    <div","100","      className=\"layout-page\"","101","    >","102","      <div","103","        className=\"sidebar\"","104","      >","105","        <HotspotList","106","          hotspots={","107","            Array [","108","              Object {","109","                \"author\": \"Developer 1\",","110","                \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","111","                \"creationDate\": \"2013-05-13T17:55:39+0200\",","112","                \"key\": \"h1\",","113","                \"line\": 81,","114","                \"message\": \"'3' is a magic number.\",","115","                \"project\": \"com.github.kevinsawicki:http-request\",","116","                \"resolution\": undefined,","117","                \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","118","                \"securityCategory\": \"command-injection\",","119","                \"status\": \"TO_REVIEW\",","120","                \"updateDate\": \"2013-05-13T17:55:39+0200\",","121","                \"vulnerabilityProbability\": \"HIGH\",","122","              },","123","              Object {","124","                \"author\": \"Developer 1\",","125","                \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","126","                \"creationDate\": \"2013-05-13T17:55:39+0200\",","127","                \"key\": \"h2\",","128","                \"line\": 81,","129","                \"message\": \"'3' is a magic number.\",","130","                \"project\": \"com.github.kevinsawicki:http-request\",","131","                \"resolution\": undefined,","132","                \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","133","                \"securityCategory\": \"command-injection\",","134","                \"status\": \"TO_REVIEW\",","135","                \"updateDate\": \"2013-05-13T17:55:39+0200\",","136","                \"vulnerabilityProbability\": \"HIGH\",","137","              },","138","            ]","139","          }","140","          hotspotsTotal={3}","141","          isStaticListOfHotspots={true}","142","          loadingMore={false}","143","          onHotspotClick={[MockFunction]}","144","          onLoadMore={[MockFunction]}","145","          securityCategories={Object {}}","146","          selectedHotspot={","147","            Object {","148","              \"author\": \"Developer 1\",","149","              \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",","150","              \"creationDate\": \"2013-05-13T17:55:39+0200\",","151","              \"key\": \"h2\",","152","              \"line\": 81,","153","              \"message\": \"'3' is a magic number.\",","154","              \"project\": \"com.github.kevinsawicki:http-request\",","155","              \"resolution\": undefined,","156","              \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",","157","              \"securityCategory\": \"command-injection\",","158","              \"status\": \"TO_REVIEW\",","159","              \"updateDate\": \"2013-05-13T17:55:39+0200\",","160","              \"vulnerabilityProbability\": \"HIGH\",","161","            }","162","          }","163","          statusFilter=\"TO_REVIEW\"","164","        \/>","165","      <\/div>","166","      <div","167","        className=\"main\"","168","      >","169","        <HotspotViewer","170","          component={","171","            Object {","172","              \"breadcrumbs\": Array [],","173","              \"key\": \"my-project\",","174","              \"name\": \"MyProject\",","175","              \"organization\": \"foo\",","176","              \"qualifier\": \"TRK\",","177","              \"qualityGate\": Object {","178","                \"isDefault\": true,","179","                \"key\": \"30\",","180","                \"name\": \"Sonar way\",","181","              },","182","              \"qualityProfiles\": Array [","183","                Object {","184","                  \"deleted\": false,","185","                  \"key\": \"my-qp\",","186","                  \"language\": \"ts\",","187","                  \"name\": \"Sonar way\",","188","                },","189","              ],","190","              \"tags\": Array [],","191","            }","192","          }","193","          hotspotKey=\"h2\"","194","          onUpdateHotspot={[MockFunction]}","195","          securityCategories={Object {}}","196","        \/>","197","      <\/div>","198","    <\/div>","204","<div>","205","  <div","206","    className=\"wrapper\"","207","    style={","209","        \"top\": 0,","212","  >","213","    <Suggestions","214","      suggestions=\"security_hotspots\"","215","    \/>","216","    <Helmet","217","      defer={true}","218","      encodeSpecialCharacters={true}","219","      title=\"hotspots.page\"","220","    \/>","221","    <A11ySkipTarget","222","      anchor=\"security_hotspots_main\"","223","    \/>","224","    <DeferredSpinner","225","      className=\"huge-spacer-left big-spacer-top\"","226","      timeout={100}","227","    \/>","228","  <\/div>","229","<\/div>","230","`;","231","","232","exports[`should render correctly: no hotspots 1`] = `","233","<div>","234","  <div","235","    className=\"wrapper\"","236","    style={","238","        \"top\": 0,","241","  >","242","    <Suggestions","243","      suggestions=\"security_hotspots\"","244","    \/>","245","    <Helmet","246","      defer={true}","247","      encodeSpecialCharacters={true}","248","      title=\"hotspots.page\"","249","    \/>","250","    <A11ySkipTarget","251","      anchor=\"security_hotspots_main\"","252","    \/>","253","    <EmptyHotspotsPage","254","      filtered={false}","255","      isStaticListOfHotspots={true}","256","    \/>","257","  <\/div>","262","<div>","263","  <div","264","    className=\"wrapper\"","265","    style={","267","        \"top\": 0,","270","  >","271","    <Suggestions","272","      suggestions=\"security_hotspots\"","273","    \/>","274","    <Helmet","275","      defer={true}","276","      encodeSpecialCharacters={true}","277","      title=\"hotspots.page\"","278","    \/>","279","    <A11ySkipTarget","280","      anchor=\"security_hotspots_main\"","281","    \/>","282","    <EmptyHotspotsPage","283","      filtered={true}","284","      isStaticListOfHotspots={true}","285","    \/>","286","  <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/FilterBar-test.tsx.snap":[{"add":["4","  className=\"filter-bar-outer\"","6","  <div","7","    className=\"filter-bar\"","9","    <div","10","      className=\"filter-bar-inner display-flex-center\"","11","    >","12","      <a","13","        id=\"show_all_hotspot\"","14","        onClick={[Function]}","15","        role=\"link\"","16","        tabIndex={0}","17","      >","18","        hotspot.filters.show_all","19","      <\/a>","20","    <\/div>","21","  <\/div>","27","  className=\"filter-bar-outer\"","30","    className=\"filter-bar\"","33","      className=\"filter-bar-inner display-flex-center\"","35","      <div","36","        className=\"display-flex-space-between width-100\"","38","        <div","39","          className=\"display-flex-center\"","40","        >","41","          <h3","42","            className=\"huge-spacer-right\"","43","          >","44","            hotspot.filters.title","45","          <\/h3>","46","          <span","47","            className=\"spacer-right\"","48","          >","49","            status","50","          <\/span>","51","          <Select","52","            className=\"input-medium big-spacer-right\"","53","            clearable={false}","54","            onChange={[Function]}","55","            options={","56","              Array [","57","                Object {","58","                  \"label\": \"hotspot.filters.status.to_review\",","59","                  \"value\": \"TO_REVIEW\",","60","                },","61","                Object {","62","                  \"label\": \"hotspot.filters.status.fixed\",","63","                  \"value\": \"FIXED\",","64","                },","65","                Object {","66","                  \"label\": \"hotspot.filters.status.safe\",","67","                  \"value\": \"SAFE\",","68","                },","69","              ]","70","            }","71","            searchable={false}","72","            value=\"TO_REVIEW\"","73","          \/>","74","          <Select","75","            className=\"input-medium big-spacer-right\"","76","            clearable={false}","77","            onChange={[Function]}","78","            options={","79","              Array [","80","                Object {","81","                  \"label\": \"hotspot.filters.period.since_leak_period\",","82","                  \"value\": true,","83","                },","84","                Object {","85","                  \"label\": \"hotspot.filters.period.overall\",","86","                  \"value\": false,","87","                },","88","              ]","89","            }","90","            searchable={false}","91","            value={false}","92","          \/>","93","        <\/div>","94","        <div","95","          className=\"display-flex-center\"","96","        >","97","          <span","98","            className=\"little-spacer-right\"","99","          >","100","            metric.security_hotspots_reviewed.name","101","          <\/span>","102","          <HelpTooltip","103","            className=\"big-spacer-right\"","104","            overlay=\"hotspots.reviewed.tooltip\"","105","          \/>","106","          <DeferredSpinner","107","            loading={false}","108","            timeout={100}","109","          >","110","            <Measure","111","              className=\"spacer-left huge\"","112","              metricKey=\"security_hotspots_reviewed\"","113","              metricType=\"PERCENT\"","114","            \/>","115","          <\/DeferredSpinner>","116","        <\/div>","117","      <\/div>","125","  className=\"filter-bar-outer\"","128","    className=\"filter-bar\"","131","      className=\"filter-bar-inner display-flex-center\"","133","      <div","134","        className=\"display-flex-space-between width-100\"","136","        <div","137","          className=\"display-flex-center\"","138","        >","139","          <h3","140","            className=\"huge-spacer-right\"","141","          >","142","            hotspot.filters.title","143","          <\/h3>","144","          <RadioToggle","145","            className=\"huge-spacer-right\"","146","            disabled={false}","147","            name=\"assignee-filter\"","148","            onCheck={[Function]}","149","            options={","150","              Array [","151","                Object {","152","                  \"label\": \"hotspot.filters.assignee.assigned_to_me\",","153","                  \"value\": \"me\",","154","                },","155","                Object {","156","                  \"label\": \"hotspot.filters.assignee.all\",","157","                  \"value\": \"all\",","158","                },","159","              ]","160","            }","161","            value=\"all\"","162","          \/>","163","          <span","164","            className=\"spacer-right\"","165","          >","166","            status","167","          <\/span>","168","          <Select","169","            className=\"input-medium big-spacer-right\"","170","            clearable={false}","171","            onChange={[Function]}","172","            options={","173","              Array [","174","                Object {","175","                  \"label\": \"hotspot.filters.status.to_review\",","176","                  \"value\": \"TO_REVIEW\",","177","                },","178","                Object {","179","                  \"label\": \"hotspot.filters.status.fixed\",","180","                  \"value\": \"FIXED\",","181","                },","182","                Object {","183","                  \"label\": \"hotspot.filters.status.safe\",","184","                  \"value\": \"SAFE\",","185","                },","186","              ]","187","            }","188","            searchable={false}","189","            value=\"TO_REVIEW\"","190","          \/>","191","          <Select","192","            className=\"input-medium big-spacer-right\"","193","            clearable={false}","194","            onChange={[Function]}","195","            options={","196","              Array [","197","                Object {","198","                  \"label\": \"hotspot.filters.period.since_leak_period\",","199","                  \"value\": true,","200","                },","201","                Object {","202","                  \"label\": \"hotspot.filters.period.overall\",","203","                  \"value\": false,","204","                },","205","              ]","206","            }","207","            searchable={false}","208","            value={false}","209","          \/>","210","        <\/div>","211","        <div","212","          className=\"display-flex-center\"","213","        >","214","          <span","215","            className=\"little-spacer-right\"","216","          >","217","            metric.security_hotspots_reviewed.name","218","          <\/span>","219","          <HelpTooltip","220","            className=\"big-spacer-right\"","221","            overlay=\"hotspots.reviewed.tooltip\"","222","          \/>","223","          <DeferredSpinner","224","            loading={false}","225","            timeout={100}","226","          >","227","            <Measure","228","              className=\"spacer-left huge\"","229","              metricKey=\"security_hotspots_reviewed\"","230","              metricType=\"PERCENT\"","231","            \/>","232","          <\/DeferredSpinner>","233","        <\/div>","234","      <\/div>","242","  className=\"filter-bar-outer\"","245","    className=\"filter-bar\"","248","      className=\"filter-bar-inner display-flex-center\"","250","      <div","251","        className=\"display-flex-space-between width-100\"","253","        <div","254","          className=\"display-flex-center\"","255","        >","256","          <h3","257","            className=\"huge-spacer-right\"","258","          >","259","            hotspot.filters.title","260","          <\/h3>","261","          <RadioToggle","262","            className=\"huge-spacer-right\"","263","            disabled={false}","264","            name=\"assignee-filter\"","265","            onCheck={[Function]}","266","            options={","267","              Array [","268","                Object {","269","                  \"label\": \"hotspot.filters.assignee.assigned_to_me\",","270","                  \"value\": \"me\",","271","                },","272","                Object {","273","                  \"label\": \"hotspot.filters.assignee.all\",","274","                  \"value\": \"all\",","275","                },","276","              ]","277","            }","278","            value=\"all\"","279","          \/>","280","          <span","281","            className=\"spacer-right\"","282","          >","283","            status","284","          <\/span>","285","          <Select","286","            className=\"input-medium big-spacer-right\"","287","            clearable={false}","288","            onChange={[Function]}","289","            options={","290","              Array [","291","                Object {","292","                  \"label\": \"hotspot.filters.status.to_review\",","293","                  \"value\": \"TO_REVIEW\",","294","                },","295","                Object {","296","                  \"label\": \"hotspot.filters.status.fixed\",","297","                  \"value\": \"FIXED\",","298","                },","299","                Object {","300","                  \"label\": \"hotspot.filters.status.safe\",","301","                  \"value\": \"SAFE\",","302","                },","303","              ]","304","            }","305","            searchable={false}","306","            value=\"TO_REVIEW\"","307","          \/>","308","          <Select","309","            className=\"input-medium big-spacer-right\"","310","            clearable={false}","311","            onChange={[Function]}","312","            options={","313","              Array [","314","                Object {","315","                  \"label\": \"hotspot.filters.period.since_leak_period\",","316","                  \"value\": true,","317","                },","318","                Object {","319","                  \"label\": \"hotspot.filters.period.overall\",","320","                  \"value\": false,","321","                },","322","              ]","323","            }","324","            searchable={false}","325","            value={false}","326","          \/>","327","        <\/div>","328","      <\/div>","336","  className=\"filter-bar-outer\"","339","    className=\"filter-bar\"","342","      className=\"filter-bar-inner display-flex-center\"","344","      <div","345","        className=\"display-flex-space-between width-100\"","347","        <div","348","          className=\"display-flex-center\"","349","        >","350","          <h3","351","            className=\"huge-spacer-right\"","352","          >","353","            hotspot.filters.title","354","          <\/h3>","355","          <span","356","            className=\"spacer-right\"","357","          >","358","            status","359","          <\/span>","360","          <Select","361","            className=\"input-medium big-spacer-right\"","362","            clearable={false}","363","            onChange={[Function]}","364","            options={","365","              Array [","366","                Object {","367","                  \"label\": \"hotspot.filters.status.to_review\",","368","                  \"value\": \"TO_REVIEW\",","369","                },","370","                Object {","371","                  \"label\": \"hotspot.filters.status.fixed\",","372","                  \"value\": \"FIXED\",","373","                },","374","                Object {","375","                  \"label\": \"hotspot.filters.status.safe\",","376","                  \"value\": \"SAFE\",","377","                },","378","              ]","379","            }","380","            searchable={false}","381","            value=\"TO_REVIEW\"","382","          \/>","383","        <\/div>","384","        <div","385","          className=\"display-flex-center\"","386","        >","387","          <span","388","            className=\"little-spacer-right\"","389","          >","390","            metric.security_hotspots_reviewed.name","391","          <\/span>","392","          <HelpTooltip","393","            className=\"big-spacer-right\"","394","            overlay=\"hotspots.reviewed.tooltip\"","395","          \/>","396","          <DeferredSpinner","397","            loading={false}","398","            timeout={100}","399","          >","400","            <Measure","401","              className=\"spacer-left huge\"","402","              metricKey=\"new_security_hotspots_reviewed\"","403","              metricType=\"PERCENT\"","404","            \/>","405","          <\/DeferredSpinner>","406","        <\/div>","407","      <\/div>","415","  className=\"filter-bar-outer\"","418","    className=\"filter-bar\"","421","      className=\"filter-bar-inner display-flex-center\"","423","      <div","424","        className=\"display-flex-space-between width-100\"","426","        <div","427","          className=\"display-flex-center\"","428","        >","429","          <h3","430","            className=\"huge-spacer-right\"","431","          >","432","            hotspot.filters.title","433","          <\/h3>","434","          <span","435","            className=\"spacer-right\"","436","          >","437","            status","438","          <\/span>","439","          <Select","440","            className=\"input-medium big-spacer-right\"","441","            clearable={false}","442","            onChange={[Function]}","443","            options={","444","              Array [","445","                Object {","446","                  \"label\": \"hotspot.filters.status.to_review\",","447","                  \"value\": \"TO_REVIEW\",","448","                },","449","                Object {","450","                  \"label\": \"hotspot.filters.status.fixed\",","451","                  \"value\": \"FIXED\",","452","                },","453","                Object {","454","                  \"label\": \"hotspot.filters.status.safe\",","455","                  \"value\": \"SAFE\",","456","                },","457","              ]","458","            }","459","            searchable={false}","460","            value=\"TO_REVIEW\"","461","          \/>","462","          <Select","463","            className=\"input-medium big-spacer-right\"","464","            clearable={false}","465","            onChange={[Function]}","466","            options={","467","              Array [","468","                Object {","469","                  \"label\": \"hotspot.filters.period.since_leak_period\",","470","                  \"value\": true,","471","                },","472","                Object {","473","                  \"label\": \"hotspot.filters.period.overall\",","474","                  \"value\": false,","475","                },","476","              ]","477","            }","478","            searchable={false}","479","            value={false}","480","          \/>","481","        <\/div>","482","        <div","483","          className=\"display-flex-center\"","484","        >","485","          <span","486","            className=\"little-spacer-right\"","487","          >","488","            metric.security_hotspots_reviewed.name","489","          <\/span>","490","          <HelpTooltip","491","            className=\"big-spacer-right\"","492","            overlay=\"hotspots.reviewed.tooltip\"","493","          \/>","494","          <DeferredSpinner","495","            loading={false}","496","            timeout={100}","497","          >","498","            <CoverageRating","499","              value=\"23.30\"","500","            \/>","501","            <Measure","502","              className=\"spacer-left huge\"","503","              metricKey=\"security_hotspots_reviewed\"","504","              metricType=\"PERCENT\"","505","              value=\"23.30\"","506","            \/>","507","          <\/DeferredSpinner>","508","        <\/div>","509","      <\/div>"],"delete":["4","  className=\"filter-bar display-flex-center\"","6","  <a","7","    id=\"show_all_hotspot\"","8","    onClick={[Function]}","9","    role=\"link\"","10","    tabIndex={0}","12","    hotspot.filters.show_all","13","  <\/a>","19","  className=\"filter-bar display-flex-center\"","22","    className=\"display-flex-space-between width-100\"","25","      className=\"display-flex-center\"","27","      <h3","28","        className=\"huge-spacer-right\"","30","        hotspot.filters.title","31","      <\/h3>","32","      <span","33","        className=\"spacer-right\"","34","      >","35","        status","36","      <\/span>","37","      <Select","38","        className=\"input-medium big-spacer-right\"","39","        clearable={false}","40","        onChange={[Function]}","41","        options={","42","          Array [","43","            Object {","44","              \"label\": \"hotspot.filters.status.to_review\",","45","              \"value\": \"TO_REVIEW\",","46","            },","47","            Object {","48","              \"label\": \"hotspot.filters.status.fixed\",","49","              \"value\": \"FIXED\",","50","            },","51","            Object {","52","              \"label\": \"hotspot.filters.status.safe\",","53","              \"value\": \"SAFE\",","54","            },","55","          ]","56","        }","57","        searchable={false}","58","        value=\"TO_REVIEW\"","59","      \/>","60","      <Select","61","        className=\"input-medium big-spacer-right\"","62","        clearable={false}","63","        onChange={[Function]}","64","        options={","65","          Array [","66","            Object {","67","              \"label\": \"hotspot.filters.period.since_leak_period\",","68","              \"value\": true,","69","            },","70","            Object {","71","              \"label\": \"hotspot.filters.period.overall\",","72","              \"value\": false,","73","            },","74","          ]","75","        }","76","        searchable={false}","77","        value={false}","78","      \/>","79","    <\/div>","80","    <div","81","      className=\"display-flex-center\"","82","    >","83","      <span","84","        className=\"little-spacer-right\"","85","      >","86","        metric.security_hotspots_reviewed.name","87","      <\/span>","88","      <HelpTooltip","89","        className=\"big-spacer-right\"","90","        overlay=\"hotspots.reviewed.tooltip\"","91","      \/>","92","      <DeferredSpinner","93","        loading={false}","94","        timeout={100}","95","      >","96","        <Measure","97","          className=\"spacer-left huge\"","98","          metricKey=\"security_hotspots_reviewed\"","99","          metricType=\"PERCENT\"","100","        \/>","101","      <\/DeferredSpinner>","109","  className=\"filter-bar display-flex-center\"","112","    className=\"display-flex-space-between width-100\"","115","      className=\"display-flex-center\"","117","      <h3","118","        className=\"huge-spacer-right\"","120","        hotspot.filters.title","121","      <\/h3>","122","      <RadioToggle","123","        className=\"huge-spacer-right\"","124","        disabled={false}","125","        name=\"assignee-filter\"","126","        onCheck={[Function]}","127","        options={","128","          Array [","129","            Object {","130","              \"label\": \"hotspot.filters.assignee.assigned_to_me\",","131","              \"value\": \"me\",","132","            },","133","            Object {","134","              \"label\": \"hotspot.filters.assignee.all\",","135","              \"value\": \"all\",","136","            },","137","          ]","138","        }","139","        value=\"all\"","140","      \/>","141","      <span","142","        className=\"spacer-right\"","143","      >","144","        status","145","      <\/span>","146","      <Select","147","        className=\"input-medium big-spacer-right\"","148","        clearable={false}","149","        onChange={[Function]}","150","        options={","151","          Array [","152","            Object {","153","              \"label\": \"hotspot.filters.status.to_review\",","154","              \"value\": \"TO_REVIEW\",","155","            },","156","            Object {","157","              \"label\": \"hotspot.filters.status.fixed\",","158","              \"value\": \"FIXED\",","159","            },","160","            Object {","161","              \"label\": \"hotspot.filters.status.safe\",","162","              \"value\": \"SAFE\",","163","            },","164","          ]","165","        }","166","        searchable={false}","167","        value=\"TO_REVIEW\"","168","      \/>","169","      <Select","170","        className=\"input-medium big-spacer-right\"","171","        clearable={false}","172","        onChange={[Function]}","173","        options={","174","          Array [","175","            Object {","176","              \"label\": \"hotspot.filters.period.since_leak_period\",","177","              \"value\": true,","178","            },","179","            Object {","180","              \"label\": \"hotspot.filters.period.overall\",","181","              \"value\": false,","182","            },","183","          ]","184","        }","185","        searchable={false}","186","        value={false}","187","      \/>","188","    <\/div>","189","    <div","190","      className=\"display-flex-center\"","191","    >","192","      <span","193","        className=\"little-spacer-right\"","194","      >","195","        metric.security_hotspots_reviewed.name","196","      <\/span>","197","      <HelpTooltip","198","        className=\"big-spacer-right\"","199","        overlay=\"hotspots.reviewed.tooltip\"","200","      \/>","201","      <DeferredSpinner","202","        loading={false}","203","        timeout={100}","204","      >","205","        <Measure","206","          className=\"spacer-left huge\"","207","          metricKey=\"security_hotspots_reviewed\"","208","          metricType=\"PERCENT\"","209","        \/>","210","      <\/DeferredSpinner>","218","  className=\"filter-bar display-flex-center\"","221","    className=\"display-flex-space-between width-100\"","224","      className=\"display-flex-center\"","226","      <h3","227","        className=\"huge-spacer-right\"","229","        hotspot.filters.title","230","      <\/h3>","231","      <RadioToggle","232","        className=\"huge-spacer-right\"","233","        disabled={false}","234","        name=\"assignee-filter\"","235","        onCheck={[Function]}","236","        options={","237","          Array [","238","            Object {","239","              \"label\": \"hotspot.filters.assignee.assigned_to_me\",","240","              \"value\": \"me\",","241","            },","242","            Object {","243","              \"label\": \"hotspot.filters.assignee.all\",","244","              \"value\": \"all\",","245","            },","246","          ]","247","        }","248","        value=\"all\"","249","      \/>","250","      <span","251","        className=\"spacer-right\"","252","      >","253","        status","254","      <\/span>","255","      <Select","256","        className=\"input-medium big-spacer-right\"","257","        clearable={false}","258","        onChange={[Function]}","259","        options={","260","          Array [","261","            Object {","262","              \"label\": \"hotspot.filters.status.to_review\",","263","              \"value\": \"TO_REVIEW\",","264","            },","265","            Object {","266","              \"label\": \"hotspot.filters.status.fixed\",","267","              \"value\": \"FIXED\",","268","            },","269","            Object {","270","              \"label\": \"hotspot.filters.status.safe\",","271","              \"value\": \"SAFE\",","272","            },","273","          ]","274","        }","275","        searchable={false}","276","        value=\"TO_REVIEW\"","277","      \/>","278","      <Select","279","        className=\"input-medium big-spacer-right\"","280","        clearable={false}","281","        onChange={[Function]}","282","        options={","283","          Array [","284","            Object {","285","              \"label\": \"hotspot.filters.period.since_leak_period\",","286","              \"value\": true,","287","            },","288","            Object {","289","              \"label\": \"hotspot.filters.period.overall\",","290","              \"value\": false,","291","            },","292","          ]","293","        }","294","        searchable={false}","295","        value={false}","296","      \/>","304","  className=\"filter-bar display-flex-center\"","307","    className=\"display-flex-space-between width-100\"","310","      className=\"display-flex-center\"","312","      <h3","313","        className=\"huge-spacer-right\"","315","        hotspot.filters.title","316","      <\/h3>","317","      <span","318","        className=\"spacer-right\"","319","      >","320","        status","321","      <\/span>","322","      <Select","323","        className=\"input-medium big-spacer-right\"","324","        clearable={false}","325","        onChange={[Function]}","326","        options={","327","          Array [","328","            Object {","329","              \"label\": \"hotspot.filters.status.to_review\",","330","              \"value\": \"TO_REVIEW\",","331","            },","332","            Object {","333","              \"label\": \"hotspot.filters.status.fixed\",","334","              \"value\": \"FIXED\",","335","            },","336","            Object {","337","              \"label\": \"hotspot.filters.status.safe\",","338","              \"value\": \"SAFE\",","339","            },","340","          ]","341","        }","342","        searchable={false}","343","        value=\"TO_REVIEW\"","344","      \/>","345","    <\/div>","346","    <div","347","      className=\"display-flex-center\"","348","    >","349","      <span","350","        className=\"little-spacer-right\"","351","      >","352","        metric.security_hotspots_reviewed.name","353","      <\/span>","354","      <HelpTooltip","355","        className=\"big-spacer-right\"","356","        overlay=\"hotspots.reviewed.tooltip\"","357","      \/>","358","      <DeferredSpinner","359","        loading={false}","360","        timeout={100}","361","      >","362","        <Measure","363","          className=\"spacer-left huge\"","364","          metricKey=\"new_security_hotspots_reviewed\"","365","          metricType=\"PERCENT\"","366","        \/>","367","      <\/DeferredSpinner>","375","  className=\"filter-bar display-flex-center\"","378","    className=\"display-flex-space-between width-100\"","381","      className=\"display-flex-center\"","383","      <h3","384","        className=\"huge-spacer-right\"","386","        hotspot.filters.title","387","      <\/h3>","388","      <span","389","        className=\"spacer-right\"","390","      >","391","        status","392","      <\/span>","393","      <Select","394","        className=\"input-medium big-spacer-right\"","395","        clearable={false}","396","        onChange={[Function]}","397","        options={","398","          Array [","399","            Object {","400","              \"label\": \"hotspot.filters.status.to_review\",","401","              \"value\": \"TO_REVIEW\",","402","            },","403","            Object {","404","              \"label\": \"hotspot.filters.status.fixed\",","405","              \"value\": \"FIXED\",","406","            },","407","            Object {","408","              \"label\": \"hotspot.filters.status.safe\",","409","              \"value\": \"SAFE\",","410","            },","411","          ]","412","        }","413","        searchable={false}","414","        value=\"TO_REVIEW\"","415","      \/>","416","      <Select","417","        className=\"input-medium big-spacer-right\"","418","        clearable={false}","419","        onChange={[Function]}","420","        options={","421","          Array [","422","            Object {","423","              \"label\": \"hotspot.filters.period.since_leak_period\",","424","              \"value\": true,","425","            },","426","            Object {","427","              \"label\": \"hotspot.filters.period.overall\",","428","              \"value\": false,","429","            },","430","          ]","431","        }","432","        searchable={false}","433","        value={false}","434","      \/>","435","    <\/div>","436","    <div","437","      className=\"display-flex-center\"","438","    >","439","      <span","440","        className=\"little-spacer-right\"","441","      >","442","        metric.security_hotspots_reviewed.name","443","      <\/span>","444","      <HelpTooltip","445","        className=\"big-spacer-right\"","446","        overlay=\"hotspots.reviewed.tooltip\"","447","      \/>","448","      <DeferredSpinner","449","        loading={false}","450","        timeout={100}","451","      >","452","        <CoverageRating","453","          value=\"23.30\"","454","        \/>","455","        <Measure","456","          className=\"spacer-left huge\"","457","          metricKey=\"security_hotspots_reviewed\"","458","          metricType=\"PERCENT\"","459","          value=\"23.30\"","460","        \/>","461","      <\/DeferredSpinner>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/__tests__\/SecurityHotspotsAppRenderer-test.tsx":[{"add":["35","jest.mock('..\/..\/..\/components\/common\/ScreenPositionHelper');","36","","48","  expect(shallowRender({ loading: true })).toMatchSnapshot('loading');","53","  expect(shallowRender({ hotspots, hotspotsTotal: 2 })).toMatchSnapshot();"],"delete":["45","      .find(ScreenPositionHelper)","46","      .dive()","48","  expect(","49","    shallowRender()","50","      .find(ScreenPositionHelper)","51","      .dive()","52","  ).toMatchSnapshot('no hotspots');","53","  expect(","54","    shallowRender({ loading: true })","55","      .find(ScreenPositionHelper)","56","      .dive()","57","  ).toMatchSnapshot('loading');","62","  expect(","63","    shallowRender({ hotspots, hotspotsTotal: 2 })","64","      .find(ScreenPositionHelper)","65","      .dive()","66","  ).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotList.tsx":[{"add":["109","      <div className=\"huge-spacer-bottom\">"],"delete":["109","      <div className=\"huge-spacer-bottom big-padded-right hotspot-list\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/SecurityHotspotsAppRenderer.tsx":[{"add":["85","      <Suggestions suggestions=\"security_hotspots\" \/>","86","      <Helmet title={translate('hotspots.page')} \/>","87","      <A11ySkipTarget anchor=\"security_hotspots_main\" \/>","88","","100","      {loading && <DeferredSpinner className=\"huge-spacer-left big-spacer-top\" \/>}","102","      {!loading &&","103","        (hotspots.length === 0 || !selectedHotspot ? (","104","          <EmptyHotspotsPage","105","            filtered={","106","              filters.assignedToMe ||","107","              (isBranch(branchLike) && filters.sinceLeakPeriod) ||","108","              filters.status !== HotspotStatusFilter.TO_REVIEW","109","            }","110","            isStaticListOfHotspots={isStaticListOfHotspots}","111","          \/>","112","        ) : (","113","          <div className=\"layout-page\">","114","            <ScreenPositionHelper className=\"layout-page-side-outer\">","115","              {({ top }) => (","116","                <div className=\"layout-page-side\" ref={scrollableRef} style={{ top }}>","117","                  <div className=\"layout-page-side-inner\">","131","              )}","132","            <\/ScreenPositionHelper>","133","","134","            <div className=\"layout-page-main\">","135","              <HotspotViewer","136","                branchLike={branchLike}","137","                component={component}","138","                hotspotKey={selectedHotspot.key}","139","                onUpdateHotspot={props.onUpdateHotspot}","140","                securityCategories={securityCategories}","141","              \/>","142","            <\/div>","144","        ))}"],"delete":["95","      <ScreenPositionHelper>","96","        {({ top }) => (","97","          <div className=\"wrapper\" style={{ top }}>","98","            <Suggestions suggestions=\"security_hotspots\" \/>","99","            <Helmet title={translate('hotspots.page')} \/>","101","            <A11ySkipTarget anchor=\"security_hotspots_main\" \/>","103","            {loading && <DeferredSpinner className=\"huge-spacer-left big-spacer-top\" \/>}","104","","105","            {!loading &&","106","              (hotspots.length === 0 || !selectedHotspot ? (","107","                <EmptyHotspotsPage","108","                  filtered={","109","                    filters.assignedToMe ||","110","                    (isBranch(branchLike) && filters.sinceLeakPeriod) ||","111","                    filters.status !== HotspotStatusFilter.TO_REVIEW","112","                  }","113","                  isStaticListOfHotspots={isStaticListOfHotspots}","114","                \/>","115","              ) : (","116","                <div className=\"layout-page\">","117","                  <div className=\"sidebar\" ref={scrollableRef}>","130","                  <div className=\"main\">","131","                    <HotspotViewer","132","                      branchLike={branchLike}","133","                      component={component}","134","                      hotspotKey={selectedHotspot.key}","135","                      onUpdateHotspot={props.onUpdateHotspot}","136","                      securityCategories={securityCategories}","137","                    \/>","138","                  <\/div>","140","              ))}","142","        )}","143","      <\/ScreenPositionHelper>"]}]}},"06f81556d5e9bae085e521bb62c0c3e84d1c32ad":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/base.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/base.css":[{"add":["108","  overflow: visible;"],"delete":[]}]}},"34f18002b369c8b35f4331347fc5529c9cac4f28":{"changes":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest\/active_rule_parameters_without_index.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParameters.java":"ADD","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest.java":"ADD","server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64Test.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest\/active_rule_parameters_without_index.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParameters.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/AddIndexOnActiveRuleParametersTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-core\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["372","CREATE INDEX \"IX_ARP_ON_ACTIVE_RULE_ID\" ON \"ACTIVE_RULE_PARAMETERS\" (\"ACTIVE_RULE_ID\");"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64.java":[{"add":["73","      .add(1643, \"Drop user and codeviewer perms to AnyOne in permission templates\", SupportProjectVisibilityInTemplates.class)","74","      .add(1644, \"Add index on active_rule_parameters.active_rule_id\", AddIndexOnActiveRuleParameters.class);"],"delete":["73","      .add(1643, \"Drop user and codeviewer perms to AnyOne in permission templates\", SupportProjectVisibilityInTemplates.class);"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v64\/DbVersion64Test.java":[{"add":["37","    verifyMigrationCount(underTest, 45);"],"delete":["37","    verifyMigrationCount(underTest, 44);"]}]}},"7baab045db52d14f103bcce623caa12a6dd19101":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/report\/MetadataPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/branch\/BranchMediumTest.java":"ADD"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/report\/MetadataPublisher.java":[{"add":["57","    String branch = root.getBranch();"],"delete":["21","import org.sonar.api.CoreProperties;","58","    String branch = root.properties().get(CoreProperties.PROJECT_BRANCH_PROPERTY);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/branch\/BranchMediumTest.java":[{"add":[],"delete":[]}]}},"e42d1ebefc43e016fa417938e17e5d1c633f5608":{"changes":{"tests\/src\/test\/resources\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/ServerSystemTest.java":"MODIFY","server\/sonar-server\/pom.xml":"MODIFY","pom.xml":"MODIFY"},"diff":{"tests\/src\/test\/resources\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html":[{"add":["31","    <td>\/dashboard?id=myproject.jsp<\/td>"],"delete":["31","    <td>\/dashboard\/index\/myproject.jsp<\/td>"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/serverSystem\/ServerSystemTest.java":[{"add":["34","import org.sonarqube.pageobjects.Navigation;","35","import org.sonarqube.pageobjects.ServerIdPage;","36","import org.sonarqube.tests.Category4Suite;","37","import org.sonarqube.tests.Tester;","57","  public Tester tester = new Tester(orchestrator).disableOrganizations();","61","    tester.users().generateAdministrator(u -> u.setLogin(ADMIN_USER_LOGIN).setPassword(ADMIN_USER_LOGIN));","82","    Navigation nav = tester.openBrowser().openHome().logIn().submitCredentials(ADMIN_USER_LOGIN);","107","    WsResponse statusResponse = tester.wsClient().wsConnector().call(new GetRequest(\"api\/system\/status\"));","113","    tester.runHtmlTests(\"\/serverSystem\/ServerSystemTest\/system_info.html\");","120","    WsResponse response = tester.wsClient().wsConnector().call(","154","    String dialect = orchestrator.getConfiguration().getString(\"sonar.jdbc.dialect\");","155","    if (dialect == null || dialect.equals(\"h2\") || dialect.equals(\"embedded\")) {","156","      tester.runHtmlTests(\"\/serverSystem\/ServerSystemTest\/derby-warning.html\");","165","    tester.runHtmlTests( \"\/serverSystem\/ServerSystemTest\/hide-jdbc-settings.html\");","188","    tester.runHtmlTests(\"\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html\");","205","    ShowWsResponse response = ShowWsResponse.parseFrom(tester.wsClient().wsConnector().call("],"delete":["23","import org.sonarqube.tests.Category4Suite;","31","import org.junit.After;","39","import org.sonarqube.ws.client.WsClient;","41","import org.sonarqube.pageobjects.Navigation;","42","import org.sonarqube.pageobjects.ServerIdPage;","44","import util.user.UserRule;","50","import static util.ItUtils.newAdminWsClient;","51","import static util.ItUtils.newWsClient;","52","import static util.selenium.Selenese.runSelenese;","62","  public UserRule userRule = UserRule.from(orchestrator);","66","    userRule.createAdminUser(ADMIN_USER_LOGIN, ADMIN_USER_LOGIN);","67","  }","68","","69","  @After","70","  public void deleteAdminUser() {","71","    userRule.resetUsers();","92","    Navigation nav = Navigation.create(orchestrator).openHome().logIn().submitCredentials(ADMIN_USER_LOGIN);","117","    WsResponse statusResponse = newWsClient(orchestrator).wsConnector().call(new GetRequest(\"api\/system\/status\"));","123","    runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/system_info.html\");","130","    WsResponse response = newAdminWsClient(orchestrator).wsConnector().call(","164","    if (orchestrator.getConfiguration().getString(\"sonar.jdbc.dialect\").equals(\"h2\")) {","165","      runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/derby-warning.html\");","174","    runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/hide-jdbc-settings.html\");","192","  \/\/ TODO should be moved elsewhere","198","    runSelenese(orchestrator, \"\/serverSystem\/ServerSystemTest\/url_ending_by_jsp.html\");","215","    WsClient adminWsClient = newAdminWsClient(orchestrator);","216","    ShowWsResponse response = ShowWsResponse.parseFrom(adminWsClient.wsConnector().call("]}],"server\/sonar-server\/pom.xml":[{"add":[],"delete":["46","      <groupId>org.apache.tomcat.embed<\/groupId>","47","      <artifactId>tomcat-embed-jasper<\/artifactId>","48","    <\/dependency>","49","    <dependency>"]}],"pom.xml":[{"add":["69","    <tomcat.version>8.5.16<\/tomcat.version>","1054","            <groupId>org.apache.tomcat.embed<\/groupId>","1055","            <artifactId>tomcat-embed-jasper<\/artifactId>","1056","          <\/exclusion>","1057","          <exclusion>","1058","            <groupId>org.eclipse.jdt<\/groupId>"],"delete":["69","    <tomcat.version>8.5.11<\/tomcat.version>","1052","      <\/dependency>","1053","      <dependency>","1054","        <groupId>org.apache.tomcat.embed<\/groupId>","1055","        <artifactId>tomcat-embed-jasper<\/artifactId>","1056","        <version>${tomcat.version}<\/version>","1059","            <groupId>org.eclipse.jdt.core.compiler<\/groupId>"]}]}},"0ce861b4c00a06e3a19ca42be3da809ad8f9d4db":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/nav\/NavBar.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/nav\/NavBar.css":[{"add":["17","  min-width: 1080px;"],"delete":["17","  min-width: 1100px;"]}]}},"6658ba9fc4cc8cf99c95ad33c0be6786e15348e8":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/CoreMetrics.java":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1730","metric.new_lines.name=New Lines","1731","metric.new_lines.description=New lines"],"delete":["1730","metric.new_lines.name=Lines of New Code","1731","metric.new_lines.description=Non commenting lines of new code"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/measures\/CoreMetrics.java":[{"add":["140","  public static final Metric<Integer> NEW_LINES = new Metric.Builder(NEW_LINES_KEY, \"New Lines\", Metric.ValueType.INT)","141","    .setDescription(\"New lines\")"],"delete":["140","  public static final Metric<Integer> NEW_LINES = new Metric.Builder(NEW_LINES_KEY, \"Lines of New Code\", Metric.ValueType.INT)","141","    .setDescription(\"Non commenting lines of new code\")"]}]}},"35d4defcf214eec9f04f00860538199f82f997c1":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchResult-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchResult-test.tsx.snap":[{"add":["28","        className=\"navbar-search-item-link\"","29","        onMouseEnter={[Function]}","31","        <span","32","          className=\"navbar-search-item-icons little-spacer-right\"","33","        >","34","          <FavoriteIcon","35","            favorite={true}","36","            size={12}","37","          \/>","38","          <QualifierIcon","39","            className=\"little-spacer-right\"","40","            qualifier=\"TRK\"","41","          \/>","42","        <\/span>","43","        <span","44","          className=\"navbar-search-item-match\"","45","        >","46","          foo","47","        <\/span>","80","        className=\"navbar-search-item-link\"","81","        onMouseEnter={[Function]}","83","        <span","84","          className=\"navbar-search-item-icons little-spacer-right\"","85","        >","86","          <QualifierIcon","87","            className=\"little-spacer-right\"","88","            qualifier=\"TRK\"","89","          \/>","90","        <\/span>","91","        <span","92","          className=\"navbar-search-item-match\"","93","          dangerouslySetInnerHTML={","94","            Object {","95","              \"__html\": \"f<mark>o<\/mark>o\",","96","            }","97","          }","131","        className=\"navbar-search-item-link\"","132","        onMouseEnter={[Function]}","134","        <span","135","          className=\"navbar-search-item-icons little-spacer-right\"","136","        >","137","          <ClockIcon","138","            size={12}","139","          \/>","140","          <QualifierIcon","141","            className=\"little-spacer-right\"","142","            qualifier=\"TRK\"","143","          \/>","144","        <\/span>","145","        <span","146","          className=\"navbar-search-item-match\"","147","        >","148","          foo","149","        <\/span>","150","        <div","151","          className=\"navbar-search-item-right text-muted-2\"","152","        >","153","          bar","154","        <\/div>","187","        className=\"navbar-search-item-link\"","188","        onMouseEnter={[Function]}","190","        <span","191","          className=\"navbar-search-item-icons little-spacer-right\"","192","        >","193","          <ClockIcon","194","            size={12}","195","          \/>","196","          <QualifierIcon","197","            className=\"little-spacer-right\"","198","            qualifier=\"TRK\"","199","          \/>","200","        <\/span>","201","        <span","202","          className=\"navbar-search-item-match\"","203","        >","204","          foo","205","        <\/span>","238","        className=\"navbar-search-item-link\"","239","        onMouseEnter={[Function]}","241","        <span","242","          className=\"navbar-search-item-icons little-spacer-right\"","243","        >","244","          <ClockIcon","245","            size={12}","246","          \/>","247","          <QualifierIcon","248","            className=\"little-spacer-right\"","249","            qualifier=\"BRC\"","250","          \/>","251","        <\/span>","252","        <span","253","          className=\"navbar-search-item-match\"","254","        >","255","          qwe","256","        <\/span>","257","        <div","258","          className=\"navbar-search-item-right text-muted-2\"","259","        >","260","          foo","261","        <\/div>","294","        className=\"navbar-search-item-link\"","295","        onMouseEnter={[Function]}","297","        <span","298","          className=\"navbar-search-item-icons little-spacer-right\"","299","        >","300","          <ClockIcon","301","            size={12}","302","          \/>","303","          <QualifierIcon","304","            className=\"little-spacer-right\"","305","            qualifier=\"TRK\"","306","          \/>","307","        <\/span>","308","        <span","309","          className=\"navbar-search-item-match\"","310","        >","311","          foo","312","        <\/span>","345","        className=\"navbar-search-item-link\"","346","        onMouseEnter={[Function]}","348","        <span","349","          className=\"navbar-search-item-icons little-spacer-right\"","350","        >","351","          <QualifierIcon","352","            className=\"little-spacer-right\"","353","            qualifier=\"TRK\"","354","          \/>","355","        <\/span>","356","        <span","357","          className=\"navbar-search-item-match\"","358","        >","359","          foo","360","        <\/span>","394","        className=\"navbar-search-item-link\"","395","        onMouseEnter={[Function]}","397","        <span","398","          className=\"navbar-search-item-icons little-spacer-right\"","399","        >","400","          <QualifierIcon","401","            className=\"little-spacer-right\"","402","            qualifier=\"TRK\"","403","          \/>","404","        <\/span>","405","        <span","406","          className=\"navbar-search-item-match\"","407","        >","408","          foo","409","        <\/span>"],"delete":["13","      className=\"navbar-search-item-link\"","16","      onMouseEnter={[Function]}","30","        className=\"navbar-search-item-icons little-spacer-right\"","32","        <FavoriteIcon","33","          favorite={true}","34","          size={12}","35","        \/>","36","        <QualifierIcon","37","          className=\"little-spacer-right\"","38","          qualifier=\"TRK\"","39","        \/>","40","      <\/span>","41","      <span","42","        className=\"navbar-search-item-match\"","43","      >","44","        foo","62","      className=\"navbar-search-item-link\"","65","      onMouseEnter={[Function]}","79","        className=\"navbar-search-item-icons little-spacer-right\"","81","        <QualifierIcon","82","          className=\"little-spacer-right\"","83","          qualifier=\"TRK\"","86","      <span","87","        className=\"navbar-search-item-match\"","88","        dangerouslySetInnerHTML={","89","          Object {","90","            \"__html\": \"f<mark>o<\/mark>o\",","91","          }","92","        }","93","      \/>","110","      className=\"navbar-search-item-link\"","113","      onMouseEnter={[Function]}","127","        className=\"navbar-search-item-icons little-spacer-right\"","129","        <ClockIcon","130","          size={12}","131","        \/>","132","        <QualifierIcon","133","          className=\"little-spacer-right\"","134","          qualifier=\"TRK\"","135","        \/>","137","      <span","138","        className=\"navbar-search-item-match\"","139","      >","140","        foo","141","      <\/span>","142","      <div","143","        className=\"navbar-search-item-right text-muted-2\"","144","      >","145","        bar","146","      <\/div>","163","      className=\"navbar-search-item-link\"","166","      onMouseEnter={[Function]}","180","        className=\"navbar-search-item-icons little-spacer-right\"","182","        <ClockIcon","183","          size={12}","184","        \/>","185","        <QualifierIcon","186","          className=\"little-spacer-right\"","187","          qualifier=\"TRK\"","188","        \/>","189","      <\/span>","190","      <span","191","        className=\"navbar-search-item-match\"","192","      >","193","        foo","211","      className=\"navbar-search-item-link\"","214","      onMouseEnter={[Function]}","228","        className=\"navbar-search-item-icons little-spacer-right\"","230","        <ClockIcon","231","          size={12}","232","        \/>","233","        <QualifierIcon","234","          className=\"little-spacer-right\"","235","          qualifier=\"BRC\"","236","        \/>","238","      <span","239","        className=\"navbar-search-item-match\"","240","      >","241","        qwe","242","      <\/span>","243","      <div","244","        className=\"navbar-search-item-right text-muted-2\"","245","      >","246","        foo","247","      <\/div>","264","      className=\"navbar-search-item-link\"","267","      onMouseEnter={[Function]}","281","        className=\"navbar-search-item-icons little-spacer-right\"","283","        <ClockIcon","284","          size={12}","285","        \/>","286","        <QualifierIcon","287","          className=\"little-spacer-right\"","288","          qualifier=\"TRK\"","289","        \/>","290","      <\/span>","291","      <span","292","        className=\"navbar-search-item-match\"","293","      >","294","        foo","312","      className=\"navbar-search-item-link\"","315","      onMouseEnter={[Function]}","329","        className=\"navbar-search-item-icons little-spacer-right\"","331","        <QualifierIcon","332","          className=\"little-spacer-right\"","333","          qualifier=\"TRK\"","334","        \/>","335","      <\/span>","336","      <span","337","        className=\"navbar-search-item-match\"","338","      >","339","        foo","358","      className=\"navbar-search-item-link\"","361","      onMouseEnter={[Function]}","375","        className=\"navbar-search-item-icons little-spacer-right\"","377","        <QualifierIcon","378","          className=\"little-spacer-right\"","379","          qualifier=\"TRK\"","380","        \/>","381","      <\/span>","382","      <span","383","        className=\"navbar-search-item-match\"","384","      >","385","        foo"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":[{"add":["127","            <span className=\"navbar-search-item-link\" onMouseEnter={this.handleMouseEnter}>","128","              <span className=\"navbar-search-item-icons little-spacer-right\">","129","                {component.isFavorite && <FavoriteIcon favorite={true} size={12} \/>}","130","                {!component.isFavorite && component.isRecentlyBrowsed && <ClockIcon size={12} \/>}","131","                <QualifierIcon className=\"little-spacer-right\" qualifier={component.qualifier} \/>","132","              <\/span>","133","","134","              {component.match ? (","135","                <span","136","                  className=\"navbar-search-item-match\"","137","                  dangerouslySetInnerHTML={{ __html: component.match }}","138","                \/>","139","              ) : (","140","                <span className=\"navbar-search-item-match\">{component.name}<\/span>","141","              )}","142","","143","              {this.renderOrganization(component)}","144","              {this.renderProject(component)}"],"delete":["124","            className=\"navbar-search-item-link\"","127","            onMouseEnter={this.handleMouseEnter}","129","            <span className=\"navbar-search-item-icons little-spacer-right\">","130","              {component.isFavorite && <FavoriteIcon favorite={true} size={12} \/>}","131","              {!component.isFavorite && component.isRecentlyBrowsed && <ClockIcon size={12} \/>}","132","              <QualifierIcon className=\"little-spacer-right\" qualifier={component.qualifier} \/>","134","","135","            {component.match ? (","136","              <span","137","                className=\"navbar-search-item-match\"","138","                dangerouslySetInnerHTML={{ __html: component.match }}","139","              \/>","140","            ) : (","141","              <span className=\"navbar-search-item-match\">{component.name}<\/span>","142","            )}","143","","144","            {this.renderOrganization(component)}","145","            {this.renderProject(component)}"]}]}},"f463897daea037addd0ee5d1a45c046b784e1fc5":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectDataLoaderMediumTest.java":"MODIFY","sonar-batch-protocol\/src\/main\/java\/org\/sonar\/batch\/protocol\/input\/ProjectRepositories.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectActionTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/component\/FilePathWithHashDto.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectDataLoaderMediumTest.java":[{"add":["34","import org.sonar.db.DbClient;","63","  ProjectDataLoader underTest;","69","    underTest = tester.get(ProjectDataLoader.class);","86","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId()));","88","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId()));","91","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","92","","96","      \"sonar.jira.login.secured\", \"john\"));","108","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId()));","110","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId()));","113","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(true));","116","      \"sonar.jira.project.key\", \"SONAR\"));","143","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","146","      \"sonar.jira.login.secured\", \"john\"));","150","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","173","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","176","      \"sonar.jira.login.secured\", \"john\"));","179","      \"sonar.jira.login.secured\", \"john\"));","213","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","216","      \"sonar.jira.login.secured\", \"john\"));","220","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","224","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","257","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","260","      \"sonar.jira.login.secured\", \"john\"));","264","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","267","      \"sonar.jira.login.secured\", \"john\"));","284","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","287","      \"sonar.jira.login.secured\", \"john\"));","314","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","320","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","348","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","354","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","380","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","386","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","413","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","419","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","431","      underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","447","      underTest.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(false));","469","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","497","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","524","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(module.key()));"],"delete":["42","import org.sonar.server.db.DbClient;","63","  ProjectDataLoader loader;","69","    loader = tester.get(ProjectDataLoader.class);","86","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId())","87","      );","89","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId())","90","      );","93","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","97","      \"sonar.jira.login.secured\", \"john\"","98","      ));","110","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId())","111","      );","113","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId())","114","      );","117","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(true));","120","      \"sonar.jira.project.key\", \"SONAR\"","121","      ));","148","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","151","      \"sonar.jira.login.secured\", \"john\"","152","      ));","156","      \"sonar.coverage.exclusions\", \"**\/*.java\"","157","      ));","180","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","183","      \"sonar.jira.login.secured\", \"john\"","184","      ));","187","      \"sonar.jira.login.secured\", \"john\"","188","      ));","222","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","225","      \"sonar.jira.login.secured\", \"john\"","226","      ));","230","      \"sonar.coverage.exclusions\", \"**\/*.java\"","231","      ));","235","      \"sonar.coverage.exclusions\", \"**\/*.java\"","236","      ));","269","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","272","      \"sonar.jira.login.secured\", \"john\"","273","      ));","277","      \"sonar.coverage.exclusions\", \"**\/*.java\"","278","      ));","281","      \"sonar.jira.login.secured\", \"john\"","282","      ));","299","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","302","      \"sonar.jira.login.secured\", \"john\"","303","      ));","330","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","336","      \"sonar.coverage.exclusions\", \"**\/*.java\"","337","      ));","365","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","371","      \"sonar.coverage.exclusions\", \"**\/*.java\"","372","      ));","398","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","404","      \"sonar.coverage.exclusions\", \"**\/*.java\"","405","      ));","432","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","438","      \"sonar.coverage.exclusions\", \"**\/*.java\"","439","      ));","451","      loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","467","      loader.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(false));","489","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","517","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","544","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(module.key()));"]}],"sonar-batch-protocol\/src\/main\/java\/org\/sonar\/batch\/protocol\/input\/ProjectRepositories.java":[{"add":["62","","71","  public ProjectRepositories addFileData(String moduleKey, @Nullable String path, FileData fileData) {","72","    if (path == null || (fileData.hash() == null && fileData.revision() == null)) {","73","      return this;","74","    }","75",""],"delete":["62","  ","71","  public ProjectRepositories addFileData(String moduleKey, String path, FileData fileData) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectActionTest.java":[{"add":["25","import org.sonar.batch.protocol.input.FileData;","27","import org.sonar.server.ws.TestResponse;","28","import org.sonar.server.ws.WsActionTester;","29","import org.sonarqube.ws.MediaTypes;","30","import org.sonarqube.ws.WsBatch.WsProjectResponse;","33","import static org.mockito.Matchers.any;","36","import static org.sonar.test.JsonAssert.assertJson;","42","  WsActionTester ws;","46","    ws = new WsActionTester(new ProjectAction(projectDataLoader));","59","    TestResponse response = ws.newRequest()","62","      .setParam(\"preview\", \"false\")","63","      .execute();","64","    assertJson(response.getInput()).isSimilarTo(\"{\\\"settingsByModule\\\": {}}\");","71","  \/**","72","   * SONAR-7084","73","   *\/","74","  @Test","75","  public void do_not_fail_when_a_path_is_null() throws Exception {","76","    String projectKey = \"org.codehaus.sonar:sonar\";","77","","78","    ProjectRepositories projectRepositories = new ProjectRepositories().addFileData(\"module-1\", null, new FileData(null, null));","79","    when(projectDataLoader.load(any(ProjectDataQuery.class))).thenReturn(projectRepositories);","80","","81","    TestResponse result = ws.newRequest()","82","      .setMediaType(MediaTypes.PROTOBUF)","83","      .setParam(\"key\", projectKey)","84","      .setParam(\"profile\", \"Default\")","85","      .execute();","86","","87","    WsProjectResponse wsProjectResponse = WsProjectResponse.parseFrom(result.getInputStream());","88","    assertThat(wsProjectResponse.getFileDataByModuleAndPath()).isEmpty();","89","  }"],"delete":["26","import org.sonar.server.ws.WsTester;","36","  WsTester tester;","40","    tester = new WsTester(new BatchWs(mock(BatchIndex.class), new ProjectAction(projectDataLoader)));","53","    WsTester.TestRequest request = tester.newGetRequest(\"batch\", \"project\")","56","      .setParam(\"preview\", \"false\");","57","    request.execute().assertJson(\"{\\\"settingsByModule\\\": {}}\");"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/component\/FilePathWithHashDto.java":[{"add":["22","import javax.annotation.CheckForNull;","23","","48","  @CheckForNull"],"delete":[]}]}},"7ea45bd9ad1c485a860cd81b12496fd70373cc4a":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectlink\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectlink\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projectlink\/ws\/SearchActionTest.java":[{"add":["65","  private DbClient dbClient = db.getDbClient();","66","  private DbSession dbSession = db.getSession();","67","  private ComponentDbTester componentDb = new ComponentDbTester(db);","69","  private SearchAction underTest;","70","  private WsActionTester ws;","145","  public void request_does_not_fail_when_link_has_no_name() throws IOException {","146","    ComponentDto project = componentDb.insertProject();","147","    ComponentLinkDto foo = new ComponentLinkDto().setComponentUuid(project.uuid()).setHref(\"foo\").setType(\"type\");","148","    insertLink(foo);","149","","150","    callByKey(project.key());","151","  }","152","","153","  @Test","154","  public void request_does_not_fail_when_link_has_no_type() throws IOException {","155","    ComponentDto project = componentDb.insertProject();","156","    ComponentLinkDto foo = new ComponentLinkDto().setComponentUuid(project.uuid()).setHref(\"foo\").setName(\"name\");","157","    insertLink(foo);","158","","159","    callByKey(project.key());","160","  }","161","","162","  @Test"],"delete":["60","","63","","66","  DbClient dbClient = db.getDbClient();","67","  DbSession dbSession = db.getSession();","68","  ComponentDbTester componentDb = new ComponentDbTester(db);","70","  WsActionTester ws;","72","  SearchAction underTest;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/projectlink\/ws\/SearchAction.java":[{"add":["110","    Link.Builder builder = Link.newBuilder()","112","      .setUrl(link.getHref());","113","    if (link.getName() != null) {","114","      builder.setName(link.getName());","115","    }","116","    if (link.getType() != null) {","117","      builder.setType(link.getType());","118","    }","119","    return builder.build();"],"delete":["110","    return Link.newBuilder()","112","      .setName(link.getName())","113","      .setType(link.getType())","114","      .setUrl(link.getHref())","115","      .build();"]}]}},"aafecafc4ea56a6099731ab58572e376d27bd9f9":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/ws\/InfoAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/ws\/InfoAction.java":[{"add":["21","import java.io.StringWriter;","22","import java.nio.charset.StandardCharsets;","23","import org.apache.commons.io.IOUtils;","30","import static org.sonarqube.ws.MediaTypes.JSON;","31","","60","    StringWriter stringWriter = new StringWriter();","61","    JsonWriter json = JsonWriter.of(stringWriter);","62","    json.beginObject();","63","    systemInfoWriter.write(json);","64","    json.endObject();","65","    response.stream().setMediaType(JSON);","66","    IOUtils.write(stringWriter.toString(), response.stream().output(), StandardCharsets.UTF_8);"],"delete":["55","    try (JsonWriter json = response.newJsonWriter()) {","56","      json.beginObject();","57","      systemInfoWriter.write(json);","58","      json.endObject();","59","    }"]}]}},"48f295f8b4720b3e9d53def3d313eeba0aa93f13":{"changes":{"server\/sonar-docs\/src\/pages\/extend\/extend-web-app.md":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/ProjectPageExtension-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/ProjectPageExtension.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/__snapshots__\/ProjectPageExtension-test.tsx.snap":"ADD"},"diff":{"server\/sonar-docs\/src\/pages\/extend\/extend-web-app.md":[{"add":["100","* (optional) `options.branchLike`: contains the information of the current branch or pull request."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/ProjectPageExtension-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/ProjectPageExtension.tsx":[{"add":["23","export interface ProjectPageExtensionProps {","24","  branchLike?: T.BranchLike;","33","export default function ProjectPageExtension(props: ProjectPageExtensionProps) {","35","  const { branchLike, component } = props;","40","    <Extension extension={extension} options={{ branchLike, component }} \/>"],"delete":["23","interface Props {","32","export default function ProjectPageExtension(props: Props) {","34","  const { component } = props;","39","    <Extension extension={extension} options={{ component }} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/__snapshots__\/ProjectPageExtension-test.tsx.snap":[{"add":[],"delete":[]}]}},"2510ba884971b7245445dac69641478a67bfad9d":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/bootstrap\/ScannerExtensionDictionnaryTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/bootstrap\/ScannerExtensionDictionnary.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/bootstrap\/ScannerExtensionDictionnaryTest.java":[{"add":["42","import org.sonar.api.batch.postjob.PostJobDescriptor;","288","  public void dependsUponPhaseForNewSensors() {","289","    PreSensor pre = new PreSensor();","290","    NormalSensor normal = new NormalSensor();","291","    PostSensor post = new PostSensor();","293","    ScannerExtensionDictionnary selector = newSelector(normal, post, pre);","294","    List<org.sonar.api.batch.sensor.Sensor> extensions = Lists.newArrayList(selector.select(org.sonar.api.batch.sensor.Sensor.class, null, true, null));","295","    assertThat(extensions).containsExactly(pre, normal, post);","297","    List<Sensor> oldExtensions = Lists.newArrayList(selector.select(Sensor.class, null, true, null));","298","    assertThat(oldExtensions).extracting(\"wrappedSensor\").containsExactly(pre, normal, post);","299","  }","300","","301","  @Test","302","  public void dependsUponPhaseForNewPostJob() {","303","    PrePostJob pre = new PrePostJob();","304","    NormalPostJob normal = new NormalPostJob();","305","","306","    ScannerExtensionDictionnary selector = newSelector(normal, pre);","307","    List<org.sonar.api.batch.postjob.PostJob> extensions = Lists.newArrayList(selector.select(org.sonar.api.batch.postjob.PostJob.class, null, true, null));","308","    assertThat(extensions).containsExactly(pre, normal);","309","","310","    List<PostJob> oldExtensions = Lists.newArrayList(selector.select(PostJob.class, null, true, null));","311","    assertThat(oldExtensions).extracting(\"wrappedPostJob\").containsExactly(pre, normal);","316","    PreSensorSubclass pre = new PreSensorSubclass();","317","    NormalSensor normal = new NormalSensor();","318","    PostSensorSubclass post = new PostSensorSubclass();","320","    ScannerExtensionDictionnary selector = newSelector(normal, post, pre);","321","    List extensions = Lists.newArrayList(selector.select(org.sonar.api.batch.sensor.Sensor.class, null, true, null));","323","    assertThat(extensions).containsExactly(pre, normal, post);","443","  class NormalSensor implements org.sonar.api.batch.sensor.Sensor {","444","","445","    @Override","446","    public void describe(SensorDescriptor descriptor) {","447","    }","448","","449","    @Override","450","    public void execute(org.sonar.api.batch.sensor.SensorContext context) {","451","    }","452","","453","  }","454","","456","  class PreSensor implements org.sonar.api.batch.sensor.Sensor {","457","","458","    @Override","459","    public void describe(SensorDescriptor descriptor) {","460","    }","461","","462","    @Override","463","    public void execute(org.sonar.api.batch.sensor.SensorContext context) {","464","    }","473","  class PostSensor implements org.sonar.api.batch.sensor.Sensor {","474","","475","    @Override","476","    public void describe(SensorDescriptor descriptor) {","477","    }","478","","479","    @Override","480","    public void execute(org.sonar.api.batch.sensor.SensorContext context) {","481","    }","505","","506","  class NormalPostJob implements org.sonar.api.batch.postjob.PostJob {","507","","508","    @Override","509","    public void describe(PostJobDescriptor descriptor) {","510","    }","511","","512","    @Override","513","    public void execute(PostJobContext context) {","514","    }","515","","516","  }","517","","518","  @Phase(name = Phase.Name.PRE)","519","  class PrePostJob implements org.sonar.api.batch.postjob.PostJob {","520","","521","    @Override","522","    public void describe(PostJobDescriptor descriptor) {","523","    }","524","","525","    @Override","526","    public void execute(PostJobContext context) {","527","    }","528","","529","  }","530",""],"delete":["287","  public void dependsUponPhase() {","288","    BatchExtension pre = new PreSensor();","289","    BatchExtension analyze = new GeneratesSomething(\"something\");","290","    BatchExtension post = new PostSensor();","292","    ScannerExtensionDictionnary selector = newSelector(analyze, post, pre);","293","    List extensions = Lists.newArrayList(selector.select(BatchExtension.class, null, true, null));","295","    assertThat(extensions).hasSize(3);","296","    assertThat(extensions.get(0)).isEqualTo(pre);","297","    assertThat(extensions.get(1)).isEqualTo(analyze);","298","    assertThat(extensions.get(2)).isEqualTo(post);","303","    BatchExtension pre = new PreSensorSubclass();","304","    BatchExtension analyze = new GeneratesSomething(\"something\");","305","    BatchExtension post = new PostSensorSubclass();","307","    ScannerExtensionDictionnary selector = newSelector(analyze, post, pre);","308","    List extensions = Lists.newArrayList(selector.select(BatchExtension.class, null, true, null));","310","    assertThat(extensions).containsExactly(pre, analyze, post);","431","  class PreSensor implements BatchExtension {","440","  class PostSensor implements BatchExtension {"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/bootstrap\/ScannerExtensionDictionnary.java":[{"add":["103","    } else if (extension instanceof PostJobWrapper) {","104","      extensionToEvaluate = ((PostJobWrapper) extension).wrappedPostJob();","117","    List<Object> candidates = new ArrayList<>();","118","    candidates.addAll(getExtensions(type));","119","    if (org.sonar.api.batch.Sensor.class.equals(type)) {","120","      candidates.addAll(getExtensions(Sensor.class));","121","    }","122","    if (org.sonar.api.batch.PostJob.class.equals(type)) {","123","      candidates.addAll(getExtensions(PostJob.class));","124","    }","125","","126","    for (Object extension : candidates) {","130","      if (org.sonar.api.batch.PostJob.class.equals(type) && extension instanceof PostJob) {","131","        extension = new PostJobWrapper((PostJob) extension, postJobContext, postJobOptimizer);","132","      }"],"delete":["32","","116","    for (Object extension : getExtensions(type)) {","124","    if (org.sonar.api.batch.Sensor.class.equals(type)) {","125","      \/\/ Retrieve new Sensors and wrap then in SensorWrapper","126","      for (Sensor sensor : getExtensions(Sensor.class)) {","127","        org.sonar.api.batch.Sensor extension = new SensorWrapper(sensor, sensorContext, sensorOptimizer);","128","        if (shouldKeep(type, extension, module, matcher)) {","129","          result.add((T) extension);","130","        }","131","      }","132","    }","133","    if (org.sonar.api.batch.PostJob.class.equals(type)) {","134","      \/\/ Retrieve new PostJob and wrap then in PostJobWrapper","135","      for (PostJob postJob : getExtensions(PostJob.class)) {","136","        org.sonar.api.batch.PostJob extension = new PostJobWrapper(postJob, postJobContext, postJobOptimizer);","137","        if (shouldKeep(type, extension, module, matcher)) {","138","          result.add((T) extension);","139","        }","140","      }","141","    }"]}]}},"e92f595ae8795ffc8906d84d95b2cc634ff34b72":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRules.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRulesRowOfType.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfileRulesSonarWayComparison-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionDeprecated.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRulesRowTotal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionStagnant.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileExporters.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/ProfilesListRow.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/ProfilesList.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileHeader.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfilePermissionsFormSelect.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRules.tsx":[{"add":["176","                  key={type}","190","                <Link className=\"button js-activate-rules\" to={activateMoreUrl}>","210","              sonarway={compareToSonarWay.profile}"],"delete":["175","                  key={type}","190","                <Link to={activateMoreUrl} className=\"button js-activate-rules\">","209","              sonarway={compareToSonarWay.profile}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRulesRowOfType.tsx":[{"add":["52","          <IssueTypeIcon className=\"little-spacer-right\" query={props.type} \/>","64","            <Link className=\"small text-muted\" to={inactiveRulesUrl}>"],"delete":["52","          <IssueTypeIcon query={props.type} className=\"little-spacer-right\" \/>","64","            <Link to={inactiveRulesUrl} className=\"small text-muted\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/__tests__\/ProfileRulesSonarWayComparison-test.tsx":[{"add":["31","        sonarway=\"baz\""],"delete":["30","        sonarway=\"baz\""]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionDeprecated.tsx":[{"add":["56","          <li className=\"spacer-top\" key={profile.key}>","70","                className=\"text-muted\"","71","                to={getDeprecatedActiveRulesUrl({ qprofile: profile.key }, props.organization)}>"],"delete":["56","          <li key={profile.key} className=\"spacer-top\">","70","                to={getDeprecatedActiveRulesUrl({ qprofile: profile.key }, props.organization)}","71","                className=\"text-muted\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileRulesRowTotal.tsx":[{"add":["61","            <Link className=\"small text-muted\" to={inactiveRulesUrl}>"],"delete":["61","            <Link to={inactiveRulesUrl} className=\"small text-muted\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/EvolutionStagnant.tsx":[{"add":["32","  const outdated = props.profiles.filter(profile => !profile.isBuiltIn && isStagnant(profile));","48","          <li className=\"spacer-top\" key={profile.key}>"],"delete":["32","  \/\/ TODO filter built-in out","33","","34","  const outdated = props.profiles.filter(isStagnant);","50","          <li key={profile.key} className=\"spacer-top\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileExporters.tsx":[{"add":["61","                className={index > 0 ? 'spacer-top' : undefined}","63","                key={exporter.key}>"],"delete":["61","                key={exporter.key}","63","                className={index > 0 ? 'spacer-top' : undefined}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/ProfilesListRow.tsx":[{"add":["98","              <Link className=\"badge badge-normal-size badge-danger-light\" to={deprecatedRulesUrl}>","111","    const date = <ProfileDate date={this.props.profile.rulesUpdatedAt} \/>;"],"delete":["98","              <Link to={deprecatedRulesUrl} className=\"badge badge-normal-size badge-danger-light\">","111","    const date = <ProfileDate date={this.props.profile.userUpdatedAt} \/>;"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.ts":[{"add":["69","  if (profile.rulesUpdatedAt) {","70","    const updateDate = parseDate(profile.rulesUpdatedAt);"],"delete":["69","  if (profile.userUpdatedAt) {","70","    const updateDate = parseDate(profile.userUpdatedAt);"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/home\/ProfilesList.tsx":[{"add":["82","      <div className=\"boxed-group boxed-group-inner quality-profiles-table\" key={languageKey}>","83","        <table className=\"data zebra zebra-hover\" data-language={languageKey}>"],"delete":["82","      <div key={languageKey} className=\"boxed-group boxed-group-inner quality-profiles-table\">","83","        <table data-language={languageKey} className=\"data zebra zebra-hover\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileHeader.tsx":[{"add":["46","        {translate('quality_profiles.updated_')} <ProfileDate date={profile.rulesUpdatedAt} \/>","75","          <IndexLink className=\"text-muted\" to={getProfilesPath(organization)}>","80","            className=\"text-muted\"","81","            to={getProfilesForLanguagePath(profile.language, organization)}>","105","                className=\"button\"","106","                to={getProfileChangelogPath(profile.name, profile.language, organization)}>"],"delete":["46","        {translate('quality_profiles.updated_')} <ProfileDate date={profile.userUpdatedAt} \/>","75","          <IndexLink to={getProfilesPath(organization)} className=\"text-muted\">","80","            to={getProfilesForLanguagePath(profile.language, organization)}","81","            className=\"text-muted\">","105","                to={getProfileChangelogPath(profile.name, profile.language, organization)}","106","                className=\"button\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfilePermissionsFormSelect.tsx":[{"add":["99","        isLoading={this.state.loading}","103","        optionRenderer={optionRenderer}","104","        options={options}"],"delete":["97","        isLoading={this.state.loading}","101","        optionRenderer={optionRenderer}","102","        options={options}"]}]}},"1ef10758eb1c939a60e159758de2603b87ec859d":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/rule\/RuleFinderCompatibility.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/rule\/RuleFinderCompatibilityTest.java":"ADD"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/rule\/RuleFinderCompatibility.java":[{"add":["21","import com.google.common.base.Function;","22","import com.google.common.collect.Collections2;","23","import org.apache.commons.lang.builder.ReflectionToStringBuilder;","24","import org.apache.commons.lang.builder.ToStringStyle;","25","import org.sonar.api.batch.rule.ActiveRule;","33","import javax.annotation.CheckForNull;","34","import javax.annotation.Nonnull;","35","import javax.annotation.Nullable;","37","import java.util.Arrays;","38","import java.util.Collection;","39","import java.util.Collections;","40","","41","\/**","42"," * FIXME Waiting for the list of all server rules on batch side this is implemented by redirecting on ActiveRules. This is not correct","43"," * since there is a difference between a rule that doesn't exists and a rule that is not activated in project quality profile.","44"," *","45"," *\/","66","    return toRule(activeRules.find(key));","71","    Collection<Rule> all = findAll(query);","72","    if (all.size() > 1) {","73","      throw new IllegalArgumentException(\"Non unique result for rule query: \" + ReflectionToStringBuilder.toString(query, ToStringStyle.SHORT_PREFIX_STYLE));","74","    } else if (all.isEmpty()) {","75","      return null;","76","    } else {","77","      return all.iterator().next();","78","    }","83","    if (query.getConfigKey() != null) {","84","      if (query.getRepositoryKey() != null && query.getKey() == null) {","85","        return byInternalKey(query);","86","      }","87","    } else if (query.getRepositoryKey() != null) {","88","      if (query.getKey() != null) {","89","        return byKey(query);","90","      } else {","91","        return byRepository(query);","92","      }","93","    }","97","  private Collection<Rule> byRepository(RuleQuery query) {","98","    return Collections2.transform(activeRules.findByRepository(query.getRepositoryKey()), new Function<ActiveRule, Rule>() {","99","      @Override","100","      public Rule apply(@Nonnull ActiveRule input) {","101","        return toRule(input);","102","      }","103","    });","104","  }","105","","106","  private Collection<Rule> byKey(RuleQuery query) {","107","    Rule rule = toRule(activeRules.find(RuleKey.of(query.getRepositoryKey(), query.getKey())));","108","    return rule != null ? Arrays.asList(rule) : Collections.<Rule>emptyList();","109","  }","110","","111","  private Collection<Rule> byInternalKey(RuleQuery query) {","112","    Rule rule = toRule(activeRules.findByInternalKey(query.getRepositoryKey(), query.getConfigKey()));","113","    return rule != null ? Arrays.asList(rule) : Collections.<Rule>emptyList();","114","  }","115","","116","  @CheckForNull","117","  private Rule toRule(@Nullable ActiveRule rule) {","118","    DefaultActiveRule ar = (DefaultActiveRule) rule;","119","    return ar == null ? null : Rule.create(ar.ruleKey().repository(), ar.ruleKey().rule()).setName(ar.name()).setConfigKey(ar.internalKey()).setLanguage(ar.language());","120","  }","121",""],"delete":["28","import java.util.Collection;","50","    DefaultActiveRule ar = (DefaultActiveRule) activeRules.find(key);","51","    return ar == null ? null : Rule.create(key.repository(), key.rule()).setName(ar.name());","56","    throw new UnsupportedOperationException(\"Unable to find rule by query\");"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/rule\/RuleFinderCompatibilityTest.java":[{"add":[],"delete":[]}]}},"2fba950fd31175b42a3b097ff58ddda9c76fddfa":{"changes":{"\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/ManualProjectCreate.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/ManualProjectCreate-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/ManualProjectCreate.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/ManualProjectCreate-test.tsx":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/ManualProjectCreate.tsx":[{"add":["20","import { debounce } from 'lodash';","23","import ValidationInput from 'sonar-ui-common\/components\/controls\/ValidationInput';","26","import { createProject, doesComponentExists } from '..\/..\/..\/api\/components';","44","  projectNameError?: string;","46","  projectKeyError?: string;","50","  touched: boolean;","51","  validating: boolean;","66","      submitting: false,","67","      touched: false,","68","      validating: false","70","    this.checkFreeKey = debounce(this.checkFreeKey, 250);","81","  checkFreeKey = (key: string) => {","82","    return doesComponentExists({ component: key })","83","      .then(alreadyExist => {","84","        if (this.mounted && key === this.state.projectKey) {","85","          if (!alreadyExist) {","86","            this.setState({ projectKeyError: undefined, validating: false });","87","          } else {","88","            this.setState({","89","              projectKeyError: translate('onboarding.create_project.project_key.taken'),","90","              touched: true,","91","              validating: false","92","            });","93","          }","94","        }","95","      })","96","      .catch(() => {","97","        if (this.mounted && key === this.state.projectKey) {","98","          this.setState({ projectKeyError: undefined, validating: false });","99","        }","100","      });","101","  };","102","","108","    const {","109","      projectKey,","110","      projectKeyError,","111","      projectName,","112","      projectNameError,","113","      selectedOrganization","114","    } = state;","116","      projectKeyError === undefined &&","117","        projectNameError === undefined &&","118","        projectKey.length > 0 &&","119","        projectName.length > 0 &&","120","        (!isSonarCloud() || selectedOrganization)","193","  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {","194","    const projectKey = event.currentTarget.value || '';","195","    const projectKeyError = this.validateKey(projectKey);","196","","197","    this.setState(prevState => {","198","      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;","199","      return {","200","        projectKey,","201","        projectKeyError,","202","        projectName,","203","        projectNameError: this.validateName(projectName),","204","        touched: true,","205","        validating: projectKeyError === undefined","206","      };","207","    });","208","","209","    if (projectKeyError === undefined) {","210","      this.checkFreeKey(projectKey);","211","    }","214","  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {","215","    const projectName = event.currentTarget.value;","216","    this.setState({","217","      projectName,","218","      projectNameChanged: true,","219","      projectNameError: this.validateName(projectName)","220","    });","227","  validateKey = (projectKey: string) => {","228","    return projectKey.length > 400 || !\/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$\/.test(projectKey)","229","      ? translate('onboarding.create_project.project_key.error')","230","      : undefined;","231","  };","232","","233","  validateName = (projectName: string) => {","234","    return projectName.length === 0 || projectName.length > 255","235","      ? translate('onboarding.create_project.display_name.error')","236","      : undefined;","237","  };","238","","240","    const {","241","      projectKey,","242","      projectKeyError,","243","      projectName,","244","      projectNameError,","245","      selectedOrganization,","246","      submitting,","247","      touched,","248","      validating","249","    } = this.state;","250","    const projectKeyIsInvalid = touched && projectKeyError !== undefined;","251","    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;","252","    const projectNameIsInvalid = touched && projectNameError !== undefined;","253","    const projectNameIsValid = touched && projectNameError === undefined;","267","","268","            <ValidationInput","270","              description={translate('onboarding.create_project.project_key.description')}","271","              error={projectKeyError}","272","              help={translate('onboarding.create_project.project_key.help')}","273","              id=\"project-key\"","274","              isInvalid={projectKeyIsInvalid}","275","              isValid={projectKeyIsValid}","276","              label={translate('onboarding.create_project.project_key')}","277","              required={true}>","278","              <input","279","                autoFocus={true}","280","                className={classNames('input-super-large', {","281","                  'is-invalid': projectKeyIsInvalid,","282","                  'is-valid': projectKeyIsValid","283","                })}","284","                id=\"project-key\"","285","                maxLength={400}","286","                minLength={1}","287","                onChange={this.handleProjectKeyChange}","288","                type=\"text\"","289","                value={projectKey}","290","              \/>","291","            <\/ValidationInput>","292","","293","            <ValidationInput","294","              className=\"form-field\"","295","              description={translate('onboarding.create_project.display_name.description')}","296","              error={projectNameError}","297","              help={translate('onboarding.create_project.display_name.help')}","298","              id=\"project-name\"","299","              isInvalid={projectNameIsInvalid}","300","              isValid={projectNameIsValid}","301","              label={translate('onboarding.create_project.display_name')}","302","              required={true}>","303","              <input","304","                className={classNames('input-super-large', {","305","                  'is-invalid': projectNameIsInvalid,","306","                  'is-valid': projectNameIsValid","307","                })}","308","                id=\"project-name\"","309","                maxLength={255}","310","                minLength={1}","311","                onChange={this.handleProjectNameChange}","312","                type=\"text\"","313","                value={projectName}","314","              \/>","315","            <\/ValidationInput>","316","","330",""],"delete":["22","import HelpTooltip from 'sonar-ui-common\/components\/controls\/HelpTooltip';","25","import { createProject } from '..\/..\/..\/api\/components';","28","import ProjectKeyInput from '..\/components\/ProjectKeyInput';","62","      submitting: false","80","      state.projectKey && state.projectName && (!isSonarCloud() || state.selectedOrganization)","153","  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {","154","    const projectName = event.currentTarget.value;","155","    this.setState({ projectName, projectNameChanged: true });","158","  handleProjectKeyChange = (projectKey: string) => {","159","    this.setState(state => ({","160","      projectKey,","161","      projectName: state.projectNameChanged ? state.projectName : projectKey || ''","162","    }));","170","    const { selectedOrganization, submitting } = this.state;","184","            <ProjectKeyInput","186","              onChange={this.handleProjectKeyChange}","187","              value={this.state.projectKey}","188","            \/>","189","            <div className=\"form-field\">","190","              <label htmlFor=\"project-name\">","191","                <span className=\"text-middle\">","192","                  <strong>{translate('onboarding.create_project.display_name')}<\/strong>","193","                  <em className=\"mandatory\">*<\/em>","194","                <\/span>","195","                <HelpTooltip","196","                  className=\"spacer-left\"","197","                  overlay={translate('onboarding.create_project.display_name.help')}","198","                \/>","199","              <\/label>","200","              <div className=\"little-spacer-top spacer-bottom\">","201","                <input","202","                  className=\"input-super-large\"","203","                  id=\"project-name\"","204","                  maxLength={255}","205","                  minLength={1}","206","                  onChange={this.handleProjectNameChange}","207","                  type=\"text\"","208","                  value={this.state.projectName}","209","                \/>","210","              <\/div>","211","              <div className=\"note abs-width-400\">","212","                {translate('onboarding.create_project.display_name.description')}","213","              <\/div>","214","            <\/div>"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2859","onboarding.create_project.display_name.error=The display name is required."],"delete":["2859","onboarding.create_project.display_name.error=The provided value doesn't match the expected format."]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/ManualProjectCreate-test.tsx.snap":[{"add":["30","      <ValidationInput","32","        description=\"onboarding.create_project.project_key.description\"","33","        help=\"onboarding.create_project.project_key.help\"","34","        id=\"project-key\"","35","        isInvalid={false}","36","        isValid={false}","37","        label=\"onboarding.create_project.project_key\"","38","        required={true}","40","        <input","41","          autoFocus={true}","42","          className=\"input-super-large\"","43","          id=\"project-key\"","44","          maxLength={400}","45","          minLength={1}","46","          onChange={[Function]}","47","          type=\"text\"","48","          value=\"\"","49","        \/>","50","      <\/ValidationInput>","51","      <ValidationInput","52","        className=\"form-field\"","53","        description=\"onboarding.create_project.display_name.description\"","54","        help=\"onboarding.create_project.display_name.help\"","55","        id=\"project-name\"","56","        isInvalid={false}","57","        isValid={false}","58","        label=\"onboarding.create_project.display_name\"","59","        required={true}","60","      >","61","        <input","62","          className=\"input-super-large\"","63","          id=\"project-name\"","64","          maxLength={255}","65","          minLength={1}","66","          onChange={[Function]}","67","          type=\"text\"","68","          value=\"\"","69","        \/>","70","      <\/ValidationInput>"],"delete":["30","      <ProjectKeyInput","32","        onChange={[Function]}","33","        value=\"\"","34","      \/>","35","      <div","36","        className=\"form-field\"","38","        <label","39","          htmlFor=\"project-name\"","40","        >","41","          <span","42","            className=\"text-middle\"","43","          >","44","            <strong>","45","              onboarding.create_project.display_name","46","            <\/strong>","47","            <em","48","              className=\"mandatory\"","49","            >","50","              *","51","            <\/em>","52","          <\/span>","53","          <HelpTooltip","54","            className=\"spacer-left\"","55","            overlay=\"onboarding.create_project.display_name.help\"","56","          \/>","57","        <\/label>","58","        <div","59","          className=\"little-spacer-top spacer-bottom\"","60","        >","61","          <input","62","            className=\"input-super-large\"","63","            id=\"project-name\"","64","            maxLength={255}","65","            minLength={1}","66","            onChange={[Function]}","67","            type=\"text\"","68","            value=\"\"","69","          \/>","70","        <\/div>","71","        <div","72","          className=\"note abs-width-400\"","73","        >","74","          onboarding.create_project.display_name.description","75","        <\/div>","76","      <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/ManualProjectCreate.css":[{"add":["20","  max-width: 700px;"],"delete":["20","  max-width: 650px;"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/ManualProjectCreate-test.tsx":[{"add":["19","\/* eslint-disable sonarjs\/no-duplicate-string *\/","27","  createProject: jest.fn().mockResolvedValue({ project: { key: 'bar', name: 'Bar' } }),","28","  doesComponentExists: jest","29","    .fn()","30","    .mockImplementation(({ component }) => Promise.resolve(component === 'exists'))","38","  jest.clearAllMocks();","42","  expect(shallowRender()).toMatchSnapshot();","47","  const wrapper = shallowRender({ onProjectCreate });","50","  change(wrapper.find('input#project-key'), 'bar');","68","  const wrapper = shallowRender({ onProjectCreate });","71","  change(wrapper.find('input#project-key'), 'bar');","86","it('should not display any status when the key is not defined', () => {","87","  const wrapper = shallowRender();","88","  const projectKeyInput = wrapper.find('ValidationInput').first();","89","  expect(projectKeyInput.prop('isInvalid')).toBe(false);","90","  expect(projectKeyInput.prop('isValid')).toBe(false);","91","});","92","","93","it('should not display any status when the name is not defined', () => {","94","  const wrapper = shallowRender();","95","  const projectKeyInput = wrapper.find('ValidationInput').last();","96","  expect(projectKeyInput.prop('isInvalid')).toBe(false);","97","  expect(projectKeyInput.prop('isValid')).toBe(false);","98","});","99","","100","it('should have an error when the key is invalid', () => {","101","  const wrapper = shallowRender();","102","  change(wrapper.find('input#project-key'), 'KEy-with#speci@l_char');","103","  expect(","104","    wrapper","105","      .find('ValidationInput')","106","      .first()","107","      .prop('isInvalid')","108","  ).toBe(true);","109","});","110","","111","it('should have an error when the key already exists', async () => {","112","  const wrapper = shallowRender();","113","  change(wrapper.find('input#project-key'), 'exists');","114","","115","  await waitAndUpdate(wrapper);","116","  expect(","117","    wrapper","118","      .find('ValidationInput')","119","      .first()","120","      .prop('isInvalid')","121","  ).toBe(true);","122","});","123","","124","it('should ignore promise return if value has been changed in the meantime', async () => {","125","  const wrapper = shallowRender();","126","","127","  change(wrapper.find('input#project-key'), 'exists');","128","  change(wrapper.find('input#project-key'), 'exists%');","129","","130","  await waitAndUpdate(wrapper);","131","","132","  expect(wrapper.state('touched')).toBe(true);","133","  expect(wrapper.state('projectKeyError')).toBe('onboarding.create_project.project_key.error');","134","});","135","","136","it('should autofill the name based on the key', () => {","137","  const wrapper = shallowRender();","138","  change(wrapper.find('input#project-key'), 'bar');","139","  expect(wrapper.find('input#project-name').prop('value')).toBe('bar');","140","});","141","","142","it('should have an error when the name is empty', () => {","143","  const wrapper = shallowRender();","144","  change(wrapper.find('input#project-key'), 'bar');","145","  change(wrapper.find('input#project-name'), '');","146","  expect(","147","    wrapper","148","      .find('ValidationInput')","149","      .last()","150","      .prop('isInvalid')","151","  ).toBe(true);","152","  expect(wrapper.state('projectNameError')).toBe('onboarding.create_project.display_name.error');","153","});","154","","155","function shallowRender(props: Partial<ManualProjectCreate['props']> = {}) {","156","  return shallow<ManualProjectCreate>("],"delete":["26","  createProject: jest.fn().mockResolvedValue({ project: { key: 'bar', name: 'Bar' } })","34","  (createProject as jest.Mock<any>).mockClear();","38","  expect(getWrapper()).toMatchSnapshot();","43","  const wrapper = getWrapper({ onProjectCreate });","46","  change(wrapper.find('ProjectKeyInput'), 'bar');","64","  const wrapper = getWrapper({ onProjectCreate });","67","  change(wrapper.find('ProjectKeyInput'), 'bar');","82","function getWrapper(props = {}) {","83","  return shallow("]}]}},"4feaaa420f34c2ae4e6d4c9bc09da49d5dd8edbb":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueAssign.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/Avatar.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/Avatar-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/SimilarIssuesPopup.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":[{"add":["91","            name={comment.authorName || comment.author}","94","          {comment.authorName || comment.author}"],"delete":["91","            name={comment.authorName}","94","          {comment.authorName}"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueAssign.js":[{"add":["60","              name={issue.assigneeName || issue.assignee}","66","          {issue.assignee ? issue.assigneeName || issue.assignee : translate('unassigned')}"],"delete":["60","              name={issue.assigneeName}","66","          {issue.assignee ? issue.assigneeName : translate('unassigned')}"]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/Avatar.tsx":[{"add":["30","  name?: string;","36","    if (!props.name) {","37","      return null;","38","    }","48","      alt={props.name}","50","      height={props.size}"],"delete":["30","  name: string;","48","      height={props.size}","49","      alt={props.name}"]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/Avatar-test.tsx":[{"add":["44","","45","it('do not fail when name is missing', () => {","46","  const avatar = shallow(","47","    <Avatar enableGravatar={false} gravatarServerUrl=\"\" name={undefined} size={30} \/>","48","  );","49","  expect(avatar.getElement()).toBeNull();","50","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/SimilarIssuesPopup.js":[{"add":["102","                  name={issue.assigneeName || issue.assignee}","105","                {issue.assigneeName || issue.assignee}"],"delete":["102","                  name={issue.assigneeName}","105","                {issue.assigneeName}"]}]}},"d1efd83084b271eb1ae3d1bc60f744fe8372b1ab":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ExportAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfileFinder.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/SetDefaultAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/util\/LanguageParamUtils.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/RestoreBuiltInActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfileIdentificationParamUtils.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/RestoreBuiltInAction.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ProjectAssociationActions.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ExportAction.java":[{"add":["43","import org.sonar.server.util.LanguageParamUtils;","44","import org.sonarqube.ws.MediaTypes;"],"delete":["39","import org.sonar.server.component.ws.LanguageParamUtils;","41","import org.sonarqube.ws.MediaTypes;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfileFinder.java":[{"add":["28","import org.sonar.server.util.LanguageParamUtils;"],"delete":["27","import org.sonar.server.component.ws.LanguageParamUtils;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsTest.java":[{"add":["65","      new RestoreBuiltInAction(null, languages),"],"delete":["65","      new RestoreBuiltInAction(null),"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/SearchAction.java":[{"add":["30","import org.sonar.server.util.LanguageParamUtils;"],"delete":["29","import org.sonar.server.component.ws.LanguageParamUtils;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/SetDefaultAction.java":[{"add":["33","import org.sonar.server.util.LanguageParamUtils;"],"delete":["28","import org.sonar.server.component.ws.LanguageParamUtils;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/util\/LanguageParamUtils.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/RestoreBuiltInActionTest.java":[{"add":["21","import org.junit.Rule;","23","import org.junit.rules.ExpectedException;","24","import org.sonar.api.resources.Languages;","25","import org.sonar.server.language.LanguageTesting;","27","import org.sonar.server.ws.TestResponse;","28","import org.sonar.server.ws.WsActionTester;","30","import static org.assertj.core.api.Java6Assertions.assertThat;","32","import static org.mockito.Mockito.verify;","36","  @Rule","37","  public ExpectedException expectedException = ExpectedException.none();","39","  QProfileService profileService = mock(QProfileService.class);","40","  Languages languages = LanguageTesting.newLanguages(\"xoo\");","42","  WsActionTester tester = new WsActionTester(new RestoreBuiltInAction(profileService, languages));","44","  @Test","45","  public void return_empty_result_when_no_info_or_warning() {","46","    TestResponse response = tester.newRequest().setParam(\"language\", \"xoo\").execute();","47","","48","    verify(profileService).restoreBuiltInProfilesForLanguage(\"xoo\");","49","    assertThat(response.getStatus()).isEqualTo(204);","53","  public void fail_on_unknown_language() throws Exception {","54","    expectedException.expect(IllegalArgumentException.class);","55","    tester.newRequest().setParam(\"language\", \"unknown\").execute();"],"delete":["21","import org.junit.Before;","23","import org.junit.runner.RunWith;","24","import org.mockito.Mock;","25","import org.mockito.runners.MockitoJUnitRunner;","26","import org.sonar.api.i18n.I18n;","28","import org.sonar.server.ws.WsTester;","32","@RunWith(MockitoJUnitRunner.class)","35","  @Mock","36","  QProfileService profileService;","38","  @Mock","39","  I18n i18n;","41","  WsTester tester;","43","  @Before","44","  public void setUp() {","45","    tester = new WsTester(new QProfilesWs(","46","      mock(RuleActivationActions.class),","47","      mock(BulkRuleActivationActions.class),","48","      mock(ProjectAssociationActions.class),","49","      new RestoreBuiltInAction(profileService)));","53","  public void return_empty_result_when_no_infos_or_warnings() throws Exception {","54","    WsTester.TestRequest request = tester.newPostRequest(\"api\/qualityprofiles\", \"restore_built_in\").setParam(\"language\", \"java\");","55","    request.execute().assertNoContent();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfileIdentificationParamUtils.java":[{"add":["29","import org.sonar.server.util.LanguageParamUtils;"],"delete":["27","import org.sonar.server.component.ws.LanguageParamUtils;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/RestoreBuiltInAction.java":[{"add":["21","import org.sonar.api.resources.Languages;","27","import static org.sonar.server.util.LanguageParamUtils.getExampleValue;","28","import static org.sonar.server.util.LanguageParamUtils.getLanguageKeys;","29","","33","  private final Languages languages;","35","  public RestoreBuiltInAction(QProfileService service, Languages languages) {","37","    this.languages = languages;","50","      .setExampleValue(getExampleValue(languages))","51","      .setPossibleValues(getLanguageKeys(languages))"],"delete":["30","  public RestoreBuiltInAction(QProfileService service) {","44","      .setExampleValue(\"java\")"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ProjectAssociationActions.java":[{"add":["23","import org.sonar.api.server.ServerSide;","35","import org.sonar.server.util.LanguageParamUtils;"],"delete":["22","import org.sonar.api.server.ServerSide;","30","import org.sonar.server.component.ws.LanguageParamUtils;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":[{"add":["38","import org.sonar.server.util.LanguageParamUtils;","43","import static com.google.common.collect.FluentIterable.from;","44","import static org.sonar.server.ws.WsParameterBuilder.createQualifiersParameter;","45","import static org.sonar.server.ws.WsParameterBuilder.QualifierParameterContext.newQualifierParameterContext;","46","import static org.sonar.server.ws.WsUtils.writeProtobuf;","47","import static org.sonarqube.ws.client.component.ComponentsWsParameters.PARAM_LANGUAGE;","48","import static org.sonarqube.ws.client.component.ComponentsWsParameters.PARAM_QUALIFIERS;","49",""],"delete":["21","import static com.google.common.collect.FluentIterable.from;","22","import static org.sonar.server.ws.WsParameterBuilder.QualifierParameterContext.newQualifierParameterContext;","23","import static org.sonar.server.ws.WsParameterBuilder.createQualifiersParameter;","24","import static org.sonar.server.ws.WsUtils.writeProtobuf;","25","import static org.sonarqube.ws.client.component.ComponentsWsParameters.PARAM_LANGUAGE;","26","import static org.sonarqube.ws.client.component.ComponentsWsParameters.PARAM_QUALIFIERS;","27",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateAction.java":[{"add":["40","import org.sonar.server.util.LanguageParamUtils;"],"delete":["35","import org.sonar.server.component.ws.LanguageParamUtils;","41","import org.sonarqube.ws.MediaTypes;"]}]}},"05087385ee6a3e032febe5f5f3033aa13a534147":{"changes":{"sonar-batch\/src\/main\/resources\/org\/sonar\/batch\/scan\/report\/issuesreport.ftl":"MODIFY"},"diff":{"sonar-batch\/src\/main\/resources\/org\/sonar\/batch\/scan\/report\/issuesreport.ftl":[{"add":["4","  <title>Issues report of ${report.getTitle()?html}<\/title>","22","    var nbResources = ${report.getResourcesWithReport()?size?c};","167","  <div class=\"subtitle\">${report.getTitle()?html} - ${report.getDate()?datetime}<\/div>","368","                <span class=\"rulename\">${issue.message()?html}<\/span>","417","                            <span class=\"rulename\">${issue.message()?html}<\/span>"],"delete":["4","  <title>Issues report of ${report.getTitle()}<\/title>","22","    var nbResources = ${report.getResourcesWithReport()?size};","167","  <div class=\"subtitle\">${report.getTitle()} - ${report.getDate()?datetime}<\/div>","368","                <span class=\"rulename\">${issue.message()}<\/span>","417","                            <span class=\"rulename\">${issue.message()}<\/span>"]}]}},"c5f4811ce2b4ee1f373c31d104acda9c73a476b9":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/creation-date-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/facets\/creation-date-facet.js":[{"add":["128","  onAllClick (e) {","129","    e.preventDefault();"],"delete":["128","  onAllClick () {"]}]}},"99a29c395b07c79b45b3360d15df74718ed95b59":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":[{"add":["22","import PropTypes from 'prop-types';","25","import { setIssueAssignee } from '..\/..\/api\/issues';","26","import { updateIssue } from '.\/actions';","118","    key('space', 'issues', () => {","119","      if (this.props.onCheck) {","120","        this.props.onCheck(this.props.issue.key);","121","        return false;","122","      }","123","    });","132","    key.unbind('space', 'issues');"],"delete":["21","import PropTypes from 'prop-types';","24","import { updateIssue } from '.\/actions';","25","import { setIssueAssignee } from '..\/..\/api\/issues';"]}]}},"d9a8adec352374814382395b87fd034b0d5ab176":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/ScannerTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/analysis\/ReportDumpTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ReportPublisher.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/ScannerTest.java":[{"add":[],"delete":["33","import org.junit.Ignore;","380","  \/**","381","   * SONAR-4692","382","   *\/","383","  @Test","384","  @Ignore(\"This test should be moved to a Medium test of the Compute Engine\")","385","  public void prevent_same_module_key_in_two_projects() {","386","    orchestrator.getServer().provisionProject(\"projectAB\", \"project AB\");","387","    orchestrator.getServer().associateProjectToQualityProfile(\"projectAB\", \"xoo\", \"one-issue-per-line\");","388","    scan(\"analysis\/prevent-common-module\/projectAB\");","389","    assertThat(getComponent(orchestrator, \"com.sonarsource.it.samples:moduleA\")).isNotNull();","390","    assertThat(getComponent(orchestrator, \"com.sonarsource.it.samples:moduleB\")).isNotNull();","391","","392","    orchestrator.getServer().provisionProject(\"projectAC\", \"project AC\");","393","    orchestrator.getServer().associateProjectToQualityProfile(\"projectAC\", \"xoo\", \"one-issue-per-line\");","394","","395","    BuildResult result = scanQuietly(\"analysis\/prevent-common-module\/projectAC\");","396","    assertThat(result.getLastStatus()).isNotEqualTo(0);","397","    assertThat(result.getLogs()).contains(\"Module \\\"com.sonarsource.it.samples:moduleA\\\" is already part of project \\\"projectAB\\\"\");","398","  }","399","","400","  \/**","401","   * SONAR-4334","402","   *\/","403","  @Test","404","  @Ignore(\"Should be move to CE IT\/MT\")","405","  public void fail_if_project_date_is_older_than_latest_snapshot() {","406","    orchestrator.getServer().provisionProject(\"sample\", \"xoo-sample\");","407","    orchestrator.getServer().associateProjectToQualityProfile(\"sample\", \"xoo\", \"one-issue-per-line\");","408","    SonarScanner analysis = SonarScanner.create(ItUtils.projectDir(\"shared\/xoo-sample\"));","409","    analysis.setProperty(\"sonar.projectDate\", \"2014-01-01\");","410","    orchestrator.executeBuild(analysis);","411","","412","    analysis.setProperty(\"sonar.projectDate\", \"2000-10-19\");","413","    BuildResult result = orchestrator.executeBuildQuietly(analysis);","414","","415","    assertThat(result.getLastStatus()).isNotEqualTo(0);","416","    assertThat(result.getLogs()).contains(\"'sonar.projectDate' property cannot be older than the date of the last known quality snapshot on this project. Value: '2000-10-19'. \" +","417","      \"Latest quality snapshot: \");","418","    assertThat(result.getLogs()).contains(\"This property may only be used to rebuild the past in a chronological order.\");","419","  }","420",""]}],"it\/it-tests\/src\/test\/java\/it\/analysis\/ReportDumpTest.java":[{"add":["59","    assertThat(props.getProperty(\"serverVersion\")).isEqualTo(orchestrator.getServer().version().toString());"],"delete":["59","    \/\/ FIXME assertThat(props.getProperty(\"serverVersion\")).isEqualTo(orchestrator.getServer().version().toString());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ReportPublisher.java":[{"add":["209","      metadata.put(\"serverVersion\", server.getVersion());"],"delete":["23","","202","      String serverVersion = (server.getVersion() != null) ? server.getVersion() : \"\";","211","      metadata.put(\"serverVersion\", serverVersion);"]}]}},"eb647d194313e80e70701a5081fd8f5d615b7a00":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/ServerSettings.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/UpdateAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/UpdateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/PersistentSettingsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/PersistentSettings.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/SetDefaultTemplateActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/ServerSettings.java":[{"add":["22","import javax.annotation.Nullable;","52","  Settings setProperty(String key, @Nullable String value);"],"delete":["51","  Settings setProperty(String key, String value);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/usergroups\/ws\/UpdateAction.java":[{"add":["31","import org.sonar.server.platform.PersistentSettings;","34","import static java.util.Collections.singletonList;","35","import static org.sonar.api.CoreProperties.CORE_DEFAULT_GROUP;","47","  private final PersistentSettings persistentSettings;","50","  public UpdateAction(DbClient dbClient, UserSession userSession, UserGroupUpdater groupUpdater, PersistentSettings persistentSettings) {","54","    this.persistentSettings = persistentSettings;","95","      String oldName = group.getName();","97","        groupUpdater.checkNameIsUnique(name, dbSession);","100","        updateDefaultGroupIfNeeded(dbSession, oldName, name);","110","      groupUpdater.writeGroup(json, group, dbClient.groupMembershipDao().countUsersByGroups(dbSession, singletonList(groupId)).get(group.getName()));","116","","117","  private void updateDefaultGroupIfNeeded(DbSession dbSession, String oldName, String newName) {","118","    String defaultGroupName = persistentSettings.getString(CORE_DEFAULT_GROUP);","119","    if (defaultGroupName.equals(oldName)) {","120","      persistentSettings.saveProperty(dbSession, CORE_DEFAULT_GROUP, newName);","121","    }","122","  }"],"delete":["21","import java.util.Arrays;","47","  public UpdateAction(DbClient dbClient, UserSession userSession, UserGroupUpdater groupUpdater) {","87","      groupUpdater.checkNameIsUnique(name, dbSession);","104","      groupUpdater.writeGroup(json, group, dbClient.groupMembershipDao().countUsersByGroups(dbSession, Arrays.asList(groupId)).get(group.getName()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/usergroups\/ws\/UpdateActionTest.java":[{"add":["39","import org.sonar.server.platform.PersistentSettings;","43","import static org.mockito.Matchers.any;","44","import static org.mockito.Matchers.eq;","45","import static org.mockito.Mockito.mock;","46","import static org.mockito.Mockito.verify;","47","import static org.mockito.Mockito.when;","51","  static final String DEFAULT_GROUP_NAME_KEY = \"sonar.defaultGroup\";","52","  static final String DEFAULT_GROUP_NAME_VALUE = \"DEFAULT_GROUP_NAME_VALUE\";","53","","58","","61","  DbClient dbClient = db.getDbClient();","62","  DbSession dbSession = db.getSession();","63","  GroupDao groupDao = dbClient.groupDao();","64","  UserGroupDao userGroupDao = dbClient.userGroupDao();","66","  PersistentSettings settings = mock(PersistentSettings.class);","67","  WsTester ws = new WsTester(new UserGroupsWs(new UpdateAction(dbClient, userSession, new UserGroupUpdater(dbClient), settings)));","70","  public void setUp() throws Exception {","71","    when(settings.getString(DEFAULT_GROUP_NAME_KEY)).thenReturn(DEFAULT_GROUP_NAME_VALUE);","132","  public void update_default_group_name_also_update_default_group_property() throws Exception {","133","    GroupDto existingGroup = groupDao.insert(dbSession, new GroupDto().setName(DEFAULT_GROUP_NAME_VALUE).setDescription(\"Default group name\"));","134","    dbSession.commit();","135","","136","    loginAsAdmin();","137","    newRequest()","138","      .setParam(\"id\", existingGroup.getId().toString())","139","      .setParam(\"name\", \"new-name\")","140","      .execute();","141","","142","    verify(settings).saveProperty(any(DbSession.class), eq(DEFAULT_GROUP_NAME_KEY), eq(\"new-name\"));","143","  }","144","","145","  @Test","249","","250",""],"delete":["52","  private WsTester ws;","53","  private DbSession dbSession;","54","  private GroupDao groupDao;","55","  private UserGroupDao userGroupDao;","58","  public void setUp() {","59","    DbClient dbClient = db.getDbClient();","60","    dbSession = db.getSession();","61","    groupDao = dbClient.groupDao();","62","    userGroupDao = dbClient.userGroupDao();","63","","64","    ws = new WsTester(new UserGroupsWs(new UpdateAction(dbClient, userSession, new UserGroupUpdater(dbClient))));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/platform\/PersistentSettingsTest.java":[{"add":["22","import java.util.Properties;","23","import org.junit.Rule;","26","import org.sonar.api.utils.System2;","27","import org.sonar.db.DbClient;","28","import org.sonar.db.DbSession;","29","import org.sonar.db.DbTester;","37","  @Rule","38","  public DbTester db = DbTester.create(System2.INSTANCE);","40","  DbClient dbClient = db.getDbClient();","41","  DbSession dbSession = db.getSession();","43","  private PropertiesDao dao = dbClient.propertiesDao();","44","  private ServerSettings settings = new WebServerSettings(","45","    new PropertyDefinitions(),","46","    new Properties());","50","    newGlobalProperty(\"in_db\", \"bar\");","52","    PersistentSettings persistentSettings = new PersistentSettings(dbClient, settings);","60","    PersistentSettings persistentSettings = new PersistentSettings(dbClient, settings);","65","    verifyGlobalPropertyExists(\"foo\", \"bar\");","70","    newGlobalProperty(\"foo\", \"bar_in_db\");","74","    PersistentSettings persistentSettings = new PersistentSettings(dbClient, settings);","78","    verifyGlobalPropertyDoesNotExist(\"foo\");","83","    newGlobalProperty(\"in_db1\", \"foo\");","84","    newGlobalProperty(\"in_db2\", \"bar\");","88","    PersistentSettings persistentSettings = new PersistentSettings(dbClient, settings);","92","    assertThat(dao.selectGlobalProperties()).isEmpty();","100","    PersistentSettings persistentSettings = new PersistentSettings(dbClient, settings);","109","    PersistentSettings persistentSettings = new PersistentSettings(dbClient, settings);","114","    verifyGlobalPropertyExists(\"foo\", \"bar\");","115","  }","116","","117","  private PropertyDto newGlobalProperty(String key, String value) {","118","    PropertyDto propertyDto = new PropertyDto().setKey(key).setValue(value);","119","    dao.insertProperty(dbSession, propertyDto);","120","    dbSession.commit();","121","    return propertyDto;","122","  }","123","","124","  private void verifyGlobalPropertyExists(String key, String value){","125","    PropertyDto propertyDto = dao.selectGlobalProperty(dbSession, key);","126","    assertThat(propertyDto).isNotNull();","127","    assertThat(propertyDto.getValue()).isEqualTo(value);","128","    assertThat(propertyDto.getUserId()).isNull();","129","    assertThat(propertyDto.getResourceId()).isNull();","130","  }","131","","132","  private void verifyGlobalPropertyDoesNotExist(String key){","133","    assertThat(dao.selectGlobalProperty(dbSession, key)).isNull();"],"delete":["22","import org.junit.Before;","24","import org.mockito.ArgumentMatcher;","29","import java.util.Arrays;","30","import java.util.Properties;","31","","33","import static org.mockito.Matchers.argThat;","34","import static org.mockito.Mockito.mock;","35","import static org.mockito.Mockito.verify;","36","import static org.mockito.Mockito.when;","40","  private PropertiesDao dao;","41","  private ServerSettings settings;","43","  @Before","44","  public void init() {","45","    dao = mock(PropertiesDao.class);","47","    settings = new WebServerSettings(","48","      new PropertyDefinitions(),","49","      new Properties());","50","  }","54","    when(dao.selectGlobalProperties()).thenReturn(Arrays.asList(","55","      new PropertyDto().setKey(\"in_db\").setValue(\"bar\")","56","      ));","58","    PersistentSettings persistentSettings = new PersistentSettings(dao, settings);","66","    PersistentSettings persistentSettings = new PersistentSettings(dao, settings);","71","    verify(dao).insertProperty(argThat(new ArgumentMatcher<PropertyDto>() {","72","      @Override","73","      public boolean matches(Object o) {","74","        PropertyDto dto = (PropertyDto) o;","75","        return dto.getKey().equals(\"foo\");","76","      }","77","    }));","85","    PersistentSettings persistentSettings = new PersistentSettings(dao, settings);","89","    verify(dao).deleteGlobalProperty(\"foo\");","97","    PersistentSettings persistentSettings = new PersistentSettings(dao, settings);","101","    verify(dao).deleteGlobalProperties();","109","    PersistentSettings persistentSettings = new PersistentSettings(dao, settings);","118","    PersistentSettings persistentSettings = new PersistentSettings(dao, settings);","123","    verify(dao).insertGlobalProperties(props);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/PersistentSettings.java":[{"add":["24","import javax.annotation.Nullable;","25","import org.picocontainer.Startable;","26","import org.sonar.api.config.Settings;","27","import org.sonar.db.DbClient;","28","import org.sonar.db.DbSession;","29","import org.sonar.db.property.PropertiesDao;","30","import org.sonar.db.property.PropertyDto;","36","  private final DbClient dbClient;","40","  public PersistentSettings(DbClient dbClient, ServerSettings serverSettings) {","41","    this.dbClient = dbClient;","42","    this.propertiesDao = dbClient.propertiesDao();","61","    DbSession dbSession = dbClient.openSession(false);","62","    try {","63","      saveProperty(dbSession, key, value);","64","      dbSession.commit();","65","    } finally {","66","      dbClient.closeSession(dbSession);","67","    }","68","    return this;","69","  }","70","","71","  public PersistentSettings saveProperty(DbSession dbSession, String key, @Nullable String value) {","73","    propertiesDao.insertProperty(dbSession, new PropertyDto().setKey(key).setValue(value));"],"delete":["22","import org.picocontainer.Startable;","23","import org.sonar.api.config.Settings;","24","import org.sonar.db.property.PropertiesDao;","25","import org.sonar.db.property.PropertyDto;","26","","27","import javax.annotation.Nullable;","38","  public PersistentSettings(PropertiesDao propertiesDao, ServerSettings serverSettings) {","39","    this.propertiesDao = propertiesDao;","59","    propertiesDao.insertProperty(new PropertyDto().setKey(key).setValue(value));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/SetDefaultTemplateActionTest.java":[{"add":["84","    persistentSettings = new PersistentSettings(dbClient, new WebServerSettings(new PropertyDefinitions(), new Properties()));"],"delete":["84","    persistentSettings = new PersistentSettings(dbClient.propertiesDao(), new WebServerSettings(new PropertyDefinitions(), new Properties()));"]}]}},"fb9f4f8314cc44d45aef2f41a82520d969080444":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivitiesTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivities.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivitiesTest.java":[{"add":["74","  public void delete_the_rows_of_ACTIVITIES_that_do_not_have_profileKey() throws SQLException {","78","","79","    assertThat(db.countRowsOfTable(ACTIVITIES_TABLE)).isEqualTo(0);","80","  }","81","","82","  @Test","83","  public void delete_the_rows_of_ACTIVITIES_that_have_empty_profileKey() throws SQLException {","84","    insertActivity(\"\");","85","","86","    underTest.execute();","87","","88","    assertThat(db.countRowsOfTable(ACTIVITIES_TABLE)).isEqualTo(0);","89","  }","90","","91","  @Test","92","  public void delete_the_rows_of_ACTIVITIES_that_have_blank_profileKey() throws SQLException {","93","    insertActivity(\"    \");","94","","95","    underTest.execute();","96","","97","    assertThat(db.countRowsOfTable(ACTIVITIES_TABLE)).isEqualTo(0);"],"delete":["74","  public void fail_if_activity_data_is_not_well_formatted() throws SQLException {","75","    expectedException.expect(IllegalStateException.class);","76","    expectedException.expectMessage(\"Error during processing of row: \");","77",""]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v60\/PopulateProfileKeyOfActivities.java":[{"add":["31","import static org.apache.commons.lang.StringUtils.isBlank;","46","","47","    \/\/ SONAR-8534 delete orphans","48","    context.prepareUpsert(\"delete from activities where profile_key is null\")","49","      .execute()","50","      .commit();","58","    if (isBlank(profileKey)) {","59","      return false;","60","    }"],"delete":["31","import static com.google.common.base.Preconditions.checkState;","32","import static org.apache.commons.lang.StringUtils.isNotBlank;","54","    checkState(isNotBlank(profileKey), \"No profile key found in db row of activities.data_field\", id);","55","","59",""]}]}},"10eae4b03f57e7b622fef0606553481f8a5ac812":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-profile-activation.hbs":[{"add":["47","          <label title=\"{{key}}\">{{key}}<\/label>"],"delete":["47","          <label>{{key}}<\/label>"]}]}},"f740cb5fde92c4c77aab732390cc2b7a2b39e813":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/Navigation.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/ProjectsPageTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/Navigation.java":[{"add":["86","  public ProjectsPage openProjectsWithQuery(String query) {","87","    return open(\"\/projects?\" + query, ProjectsPage.class);","88","  }","89",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":[{"add":["73","    if (footer) {","74","      footer.classList.add('page-footer-with-sidebar');","75","    }","87","    if (footer) {","88","      footer.classList.remove('page-footer-with-sidebar');","89","    }","98","  isFiltered = (query = this.state.query) =>","99","    Object.values(query).some(value => value !== undefined);","204","    if (initialMount && !this.isFiltered(query) && savedOptionsSet) {"],"delete":["73","    footer && footer.classList.add('page-footer-with-sidebar');","85","    footer && footer.classList.remove('page-footer-with-sidebar');","94","  isFiltered = () => Object.values(this.state.query).some(value => value !== undefined);","199","    if (initialMount && !this.isFiltered() && savedOptionsSet) {"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectSearch\/ProjectsPageTest.java":[{"add":["202","","203","  @Test","204","  public void should_open_permalink() {","205","    String user = tester.users().generate().getLogin();","206","    Navigation nav = tester.openBrowser().logIn().submitCredentials(user);","207","","208","    \/\/ make a search, so its parameters saved to local storage","209","    nav.openProjects().changePerspective(\"Leak\");","210","","211","    \/\/ change a page","212","    nav.openHome();","213","","214","    \/\/ open a permalink to a particular visualization, it must be kept","215","    nav.openProjectsWithQuery(\"view=visualizations&visualization=coverage\");","216","    assertThat(url()).contains(\"view=visualizations&visualization=coverage\");","217","  }"],"delete":[]}]}},"50703788b24aae6096fff89bb4f6f3ced2321029":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/GlobalMessages.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/GlobalMessages.js":[{"add":["45","          type=\"button\""],"delete":[]}]}},"7bbdfa88edf67c8c118aa1900f71a4ddf7163db1":{"changes":{"server\/sonar-web\/src\/main\/js\/store\/users\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/store\/users\/reducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/Onboarding.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/store\/users\/actions.js":[{"add":["23","export const SKIP_ONBOARDING = 'SKIP_ONBOARDING';","35","export const skipOnboarding = () => ({ type: SKIP_ONBOARDING });","36",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/store\/users\/reducer.js":[{"add":["21","import { RECEIVE_CURRENT_USER, RECEIVE_USER, SKIP_ONBOARDING } from '.\/actions';","59","  if (action.type === SKIP_ONBOARDING) {","60","    return state ? { ...state, showOnboardingTutorial: false } : null;","61","  }"],"delete":["21","import { RECEIVE_CURRENT_USER, RECEIVE_USER } from '.\/actions';"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":[{"add":["32","import { skipOnboarding } from '..\/..\/..\/..\/store\/users\/actions';","39","  currentUser: { isLoggedIn: boolean, showOnboardingTutorial: boolean },","40","  skipOnboarding: () => void,","99","    this.props.skipOnboarding();","158","const mapDispatchToProps = { skipOnboarding };","159","","160","export default connect(mapStateToProps, mapDispatchToProps)(GlobalNav);"],"delete":["38","  currentUser: { isLoggedIn: boolean, showOnboardingTutorial: true },","155","export default connect(mapStateToProps)(GlobalNav);"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/Onboarding.js":[{"add":["141","  handleReset = () => this.setState({ finished: false, projectKey: undefined });"],"delete":["141","  handleReset = () => this.setState({ finished: false });"]}]}},"2fdab0c755a5f4cf22a3cd15843703d5947c9b15":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/LogTester.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/util\/ProgressReportTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/ListInterceptor.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/LogTester.java":[{"add":[],"delete":["22","import java.util.Optional;","23","import java.util.function.Predicate;","94","  public Optional<String> findFirstLog(Predicate<String> msgPredicate) {","95","    return ((ListInterceptor) LogInterceptors.get()).findFirst(msgPredicate);","96","  }","97",""]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/util\/ProgressReportTest.java":[{"add":["62","      logged = logTester.logs().contains(\"Some message\");"],"delete":["62","      logged = logTester.findFirstLog(\"Some message\"::equals).isPresent();"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/log\/ListInterceptor.java":[{"add":["21","import com.google.common.collect.ImmutableList;","22","import java.util.Collections;","24","import java.util.Map;","25","import java.util.concurrent.ConcurrentHashMap;","26","import java.util.concurrent.CopyOnWriteArrayList;","32","  private final List<LogAndArguments> logs = new CopyOnWriteArrayList<>();","33","  private final Map<LoggerLevel, List<LogAndArguments>> logsByLevel = new ConcurrentHashMap<>();","70","    logsByLevel.compute(level, (key, existingList) -> {","71","      if (existingList == null) {","72","        return new CopyOnWriteArrayList<>(new LogAndArguments[] {l});","73","      }","74","      existingList.add(l);","75","      return existingList;","76","    });","84","    List<LogAndArguments> res = logsByLevel.get(level);","85","    if (res == null) {","86","      return Collections.emptyList();","87","    }","88","    return ImmutableList.copyOf(res).stream().map(LogAndArguments::getFormattedMsg).collect(Collectors.toList());"],"delete":["21","import com.google.common.collect.ArrayListMultimap;","22","import com.google.common.collect.ListMultimap;","23","import java.util.ArrayList;","25","import java.util.Optional;","26","import java.util.function.Predicate;","32","  private final List<LogAndArguments> logs = new ArrayList<>();","33","  private final ListMultimap<LoggerLevel, LogAndArguments> logsByLevel = ArrayListMultimap.create();","70","    logsByLevel.put(level, l);","77","  public Optional<String> findFirst(Predicate<String> logPredicate) {","78","    return logs.stream().map(LogAndArguments::getFormattedMsg).filter(logPredicate).findFirst();","79","  }","80","","82","    return logsByLevel.get(level).stream().map(LogAndArguments::getFormattedMsg).collect(Collectors.toList());"]}]}},"97a5d22de4b91ead6a8d09931d176f5fe26c840d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["930","    const { issues, openIssue, paging, loading } = this.state;","939","    if (paging.total === 0 && !loading) {"],"delete":["930","    const { issues, openIssue, paging } = this.state;","939","    if (paging.total === 0) {"]}]}},"3fcc98a73d6afb99388e39f46272909a6d6600b2":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivation.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorContext.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorMediumTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivation.java":[{"add":["85","    parameters.put(key, sanitizedValue);"],"delete":["85","    if (value == null) {","86","      parameters.remove(key);","87","    } else {","88","      parameters.put(key, sanitizedValue);","89","    }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorContext.java":[{"add":["121","  boolean hasRequestParamValue(RuleActivation request, String key) {","122","    return request.getParameters().containsKey(key);","123","  }","124",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorMediumTest.java":[{"add":["204","      \/\/ Max should be set to default value, min has no value it should be ignored","288","  public void update_activation_remove_parameter_value_having_default_value() {","289","    \/\/ initial activation","290","    activate(new RuleActivation(XOO_X1).setSeverity(BLOCKER).setParameter(\"max\", \"20\"), XOO_P1_KEY);","291","","292","    \/\/ update","293","    activate(new RuleActivation(XOO_X1).setParameter(\"max\", null), XOO_P1_KEY);","294","","295","    verifyHasActiveRuleInDb(ActiveRuleKey.of(XOO_P1_KEY, XOO_X1), BLOCKER, null, ImmutableMap.of(\"max\", \"10\"));","296","  }","297","","298","  @Test","299","  public void update_activation_remove_parameter_value_without_default_value() {","300","    \/\/ initial activation -> param \"min\" has a no default value","301","    activate(new RuleActivation(XOO_X1).setSeverity(BLOCKER).setParameter(\"min\", \"5\"), XOO_P1_KEY);","302","","303","    \/\/ update param \"min\" with empty value","304","    activate(new RuleActivation(XOO_X1).setParameter(\"min\", null), XOO_P1_KEY);","305","","306","    verifyHasActiveRuleInDb(ActiveRuleKey.of(XOO_P1_KEY, XOO_X1), BLOCKER, null, ImmutableMap.of(\"max\", \"10\"));","307","  }","308","","309","  @Test"],"delete":["204","      \/\/ Max should be set to default value, min has not value it should be ignored"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":[{"add":["185","        String paramValue = context.hasRequestParamValue(request, paramKey) ?","186","        \/\/ If the request contains the parameter then we're using either value from request, or parent value, or default value","187","          firstNonNull(","188","            context.requestParamValue(request, paramKey),","189","            context.parentParamValue(paramKey),","190","            context.defaultParamValue(paramKey))","191","          \/\/ If the request doesn't contain the parameter, then we're using either value in DB, or parent value, or default value","192","          : firstNonNull(","193","            context.currentParamValue(paramKey),","194","            context.parentParamValue(paramKey),","195","            context.defaultParamValue(paramKey));","196","        change.setParameter(paramKey, validateParam(ruleParamDto, paramValue));"],"delete":["185","        change.setParameter(paramKey, validateParam(ruleParamDto, firstNonNull(","186","          context.requestParamValue(request, paramKey),","187","          context.currentParamValue(paramKey),","188","          context.parentParamValue(paramKey),","189","          context.defaultParamValue(paramKey))));"]}]}},"f2f3ede233eca98118c026c7cf151145eb0dfa99":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/duplications.ts":"ADD","server\/sonar-web\/src\/main\/js\/apps\/issues\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/__snapshots__\/loadIssues-test.ts.snap":"ADD","server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetViewer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/duplications-test.ts":"ADD","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/loadIssues-test.ts":"ADD","server\/sonar-web\/src\/main\/js\/app\/types.d.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/loadIssues.ts":"ADD","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/components.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineNumber.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineDuplicationBlock.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/getCoverageStatus.ts":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/duplications.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/styles.css":[{"add":["256",".snippet > .expand-block:hover,","257",".snippet > .expand-block:focus,","258",".snippet > .expand-block:active {","260","  outline: none;"],"delete":["256",".snippet > .expand-block:hover {"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineSCM.tsx":[{"add":["25","  onPopupToggle: (linePopup: T.LinePopup) => void;"],"delete":["25","  onPopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.tsx":[{"add":["48","  linePopup: T.LinePopup | undefined;","50","  onLinePopupToggle: (linePopup: T.LinePopup) => void;","61","  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;"],"delete":["48","  linePopup: { index?: number; line: number; name: string } | undefined;","50","  onLinePopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;","61","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/__snapshots__\/loadIssues-test.ts.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":[{"add":["33","  outline: none;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/ComponentSourceSnippetViewer.tsx":[{"add":["20","import * as classNames from 'classnames';","33","import { getSources } from '..\/..\/..\/api\/components';","45","  duplications?: T.Duplication[];","46","  duplicationsByLine?: { [line: number]: number[] };","52","  linePopup?: T.LinePopup;","53","  loadDuplications: (component: string, line: T.SourceLine) => void;","57","  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;","59","  renderDuplicationPopup: (","60","    component: T.SourceViewerFile,","61","    index: number,","62","    line: number","63","  ) => React.ReactNode;","173","          this.setState({ loading: false, snippets: [lines] });","184","  handleLinePopupToggle = (linePopup: T.LinePopup) => {","185","    this.props.onLinePopupToggle({","186","      ...linePopup,","187","      component: this.props.snippetGroup.component.key","207","  loadDuplications = (line: T.SourceLine) => {","208","    this.props.loadDuplications(this.props.snippetGroup.component.key, line);","209","  };","210","","211","  renderDuplicationPopup = (index: number, line: number) => {","212","    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);","213","  };","214","","235","    const { duplications, duplicationsByLine } = this.props;","236","    const duplicationsCount = duplications ? duplications.length : 0;","237","    const lineDuplications =","238","      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];","247","        displayDuplications={!!line.duplicated}","250","        duplications={lineDuplications}","251","        duplicationsCount={duplicationsCount}","264","        linePopup={this.props.linePopup}","265","        loadDuplications={this.loadDuplications}","268","        onIssueSelect={() => {}}","269","        onIssueUnselect={() => {}}","277","        renderDuplicationPopup={this.renderDuplicationPopup}","360","    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;","370","      <div","371","        className={classNames('component-source-container', {","372","          'source-duplications-expanded': duplications && duplications.length > 0","373","        })}>"],"delete":["28","import { getSources } from '..\/..\/..\/api\/components';","53","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;","61","  linePopup?: { index?: number; line: number; name: string };","142","                linePopup: undefined,","165","          this.setState({ linePopup: undefined, loading: false, snippets: [lines] });","176","  handleLinePopupToggle = ({","177","    index,","178","    line,","179","    name,","180","    open","181","  }: {","182","    index?: number;","183","    line: number;","184","    name: string;","185","    open?: boolean;","186","  }) => {","187","    this.setState((state: State) => {","188","      const samePopup =","189","        state.linePopup !== undefined &&","190","        state.linePopup.name === name &&","191","        state.linePopup.line === line &&","192","        state.linePopup.index === index;","193","      if (open !== false && !samePopup) {","194","        return { linePopup: { index, line, name } };","195","      } else if (open !== true && samePopup) {","196","        return { linePopup: undefined };","197","      }","198","      return null;","236","","239","    const noop = () => {};","248","        displayDuplications={false}","251","        duplications={[]}","252","        duplicationsCount={0}","265","        linePopup={this.state.linePopup}","266","        loadDuplications={noop}","269","        onIssueSelect={noop}","270","        onIssueUnselect={noop}","278","        renderDuplicationPopup={this.props.renderDuplicationPopup}","361","    const { branchLike, issue, issuesByLine, last, snippetGroup } = this.props;","371","      <div className=\"component-source-container\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":[{"add":["23","import DuplicationPopup from '..\/..\/..\/components\/SourceViewer\/components\/DuplicationPopup';","24","import { WorkspaceContext } from '..\/..\/..\/components\/workspace\/context';","26","import {","27","  filterDuplicationBlocksByLine,","28","  isDuplicationBlockInRemovedComponent,","29","  getDuplicationBlocksForIndex","30","} from '..\/..\/..\/components\/SourceViewer\/helpers\/duplications';","31","import {","32","  duplicationsByLine,","33","  issuesByComponentAndLine","34","} from '..\/..\/..\/components\/SourceViewer\/helpers\/indexing';","35","import { getDuplications } from '..\/..\/..\/api\/components';","36","import { getBranchLikeQuery } from '..\/..\/..\/helpers\/branches';","51","interface State {","52","  components: T.Dict<T.SnippetsByComponent>;","53","  duplicatedFiles?: T.Dict<T.DuplicatedFile>;","54","  duplications?: T.Duplication[];","55","  duplicationsByLine: { [line: number]: number[] };","56","  issuePopup?: { issue: string; name: string };","57","  linePopup?: T.LinePopup & { component: string };","58","  loading: boolean;","59","}","60","","65","    duplicationsByLine: {},","84","  fetchDuplications = (component: string, line: T.SourceLine) => {","85","    getDuplications({","86","      key: component,","87","      ...getBranchLikeQuery(this.props.branchLike)","88","    }).then(","89","      r => {","90","        if (this.mounted) {","91","          this.setState(state => ({","92","            duplicatedFiles: r.files,","93","            duplications: r.duplications,","94","            duplicationsByLine: duplicationsByLine(r.duplications),","95","            linePopup:","96","              r.duplications.length === 1","97","                ? { component, index: 0, line: line.line, name: 'duplications' }","98","                : state.linePopup","99","          }));","100","        }","101","      },","102","      () => {}","103","    );","104","  };","105","","111","          this.setState({","112","            components,","113","            issuePopup: undefined,","114","            linePopup: undefined,","115","            loading: false","116","          });","143","  handleLinePopupToggle = ({","144","    component,","145","    index,","146","    line,","147","    name,","148","    open","149","  }: T.LinePopup & { component: string }) => {","150","    this.setState((state: State) => {","151","      const samePopup =","152","        state.linePopup !== undefined &&","153","        state.linePopup.line === line &&","154","        state.linePopup.name === name &&","155","        state.linePopup.component === component &&","156","        state.linePopup.index === index;","157","      if (open !== false && !samePopup) {","158","        return { linePopup: { component, index, line, name } };","159","      } else if (open !== true && samePopup) {","160","        return { linePopup: undefined };","161","      }","162","      return null;","163","    });","164","  };","165","","166","  handleCloseLinePopup = () => {","167","    this.setState({ linePopup: undefined });","168","  };","169","","170","  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {","171","    const { duplicatedFiles, duplications } = this.state;","172","","173","    if (!component || !duplicatedFiles) {","174","      return null;","175","    }","176","","177","    const blocks = getDuplicationBlocksForIndex(duplications, index);","178","","179","    return (","180","      <WorkspaceContext.Consumer>","181","        {({ openComponent }) => (","182","          <DuplicationPopup","183","            blocks={filterDuplicationBlocksByLine(blocks, line)}","184","            branchLike={this.props.branchLike}","185","            duplicatedFiles={duplicatedFiles}","186","            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}","187","            onClose={this.handleCloseLinePopup}","188","            openComponent={openComponent}","189","            sourceViewerFile={component}","190","          \/>","191","        )}","192","      <\/WorkspaceContext.Consumer>","193","    );","194","  };","195","","197","    const { loading } = this.state;","207","    const { components, duplications, duplicationsByLine, linePopup } = this.state;","213","        {locationsByComponent.map((snippetGroup, i) => {","214","          let componentProps = {};","215","          if (linePopup && snippetGroup.component.key === linePopup.component) {","216","            componentProps = {","217","              duplications,","218","              duplicationsByLine,","219","              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }","220","            };","221","          }","222","          return (","223","            <ComponentSourceSnippetViewer","224","              branchLike={this.props.branchLike}","225","              highlightedLocationMessage={this.props.highlightedLocationMessage}","226","              issue={this.props.issue}","227","              issuePopup={this.state.issuePopup}","228","              issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}","229","              key={`${this.props.issue.key}-${this.props.selectedFlowIndex}-${i}`}","230","              last={i === locationsByComponent.length - 1}","231","              loadDuplications={this.fetchDuplications}","232","              locations={snippetGroup.locations || []}","233","              onIssueChange={this.props.onIssueChange}","234","              onIssuePopupToggle={this.handleIssuePopupToggle}","235","              onLinePopupToggle={this.handleLinePopupToggle}","236","              onLocationSelect={this.props.onLocationSelect}","237","              renderDuplicationPopup={this.renderDuplicationPopup}","238","              scroll={this.props.scroll}","239","              snippetGroup={snippetGroup}","240","              {...componentProps}","241","            \/>","242","          );","243","        })}"],"delete":["24","import { issuesByComponentAndLine } from '..\/..\/..\/components\/SourceViewer\/helpers\/indexing';","25","","26","interface State {","27","  components: T.Dict<T.SnippetsByComponent>;","28","  issuePopup?: { issue: string; name: string };","29","  loading: boolean;","30","}","41","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;","73","          this.setState({ components, issuePopup: undefined, loading: false });","101","    const { components, loading } = this.state;","116","        {locationsByComponent.map((g, i) => (","117","          <ComponentSourceSnippetViewer","118","            branchLike={this.props.branchLike}","119","            highlightedLocationMessage={this.props.highlightedLocationMessage}","120","            issue={this.props.issue}","121","            issuePopup={this.state.issuePopup}","122","            issuesByLine={issuesByComponent[g.component.key] || {}}","123","            key={`${this.props.issue.key}-${this.props.selectedFlowIndex}-${i}`}","124","            last={i === locationsByComponent.length - 1}","125","            locations={g.locations || []}","126","            onIssueChange={this.props.onIssueChange}","127","            onIssuePopupToggle={this.handleIssuePopupToggle}","128","            onLocationSelect={this.props.onLocationSelect}","129","            renderDuplicationPopup={this.props.renderDuplicationPopup}","130","            scroll={this.props.scroll}","131","            snippetGroup={g}","132","          \/>","133","        ))}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/duplications-test.ts":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/__tests__\/loadIssues-test.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/types.d.ts":[{"add":["259","    _ref?: string;","421","  export interface LinePopup {","422","    index?: number;","423","    line: number;","424","    name: string;","425","    open?: boolean;","426","  }","427",""],"delete":["259","    _ref: string;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":[{"add":["2","exports[`should handle duplication popup 1`] = `","3","<Context.Consumer>","4","  [Function]","5","<\/Context.Consumer>","6","`;","7","","15","","16","exports[`should render correctly 2`] = `","17","<div>","18","  <ComponentSourceSnippetViewer","19","    issue={","20","      Object {","21","        \"actions\": Array [],","22","        \"component\": \"main.js\",","23","        \"componentLongName\": \"main.js\",","24","        \"componentQualifier\": \"FIL\",","25","        \"componentUuid\": \"foo1234\",","26","        \"creationDate\": \"2017-03-01T09:36:01+0100\",","27","        \"flows\": Array [","28","          Array [","29","            Object {","30","              \"component\": \"main.js\",","31","              \"textRange\": Object {","32","                \"endLine\": 2,","33","                \"endOffset\": 2,","34","                \"startLine\": 1,","35","                \"startOffset\": 1,","36","              },","37","            },","38","            Object {","39","              \"component\": \"main.js\",","40","              \"textRange\": Object {","41","                \"endLine\": 2,","42","                \"endOffset\": 2,","43","                \"startLine\": 1,","44","                \"startOffset\": 1,","45","              },","46","            },","47","            Object {","48","              \"component\": \"main.js\",","49","              \"textRange\": Object {","50","                \"endLine\": 2,","51","                \"endOffset\": 2,","52","                \"startLine\": 1,","53","                \"startOffset\": 1,","54","              },","55","            },","56","          ],","57","          Array [","58","            Object {","59","              \"component\": \"main.js\",","60","              \"textRange\": Object {","61","                \"endLine\": 2,","62","                \"endOffset\": 2,","63","                \"startLine\": 1,","64","                \"startOffset\": 1,","65","              },","66","            },","67","            Object {","68","              \"component\": \"main.js\",","69","              \"textRange\": Object {","70","                \"endLine\": 2,","71","                \"endOffset\": 2,","72","                \"startLine\": 1,","73","                \"startOffset\": 1,","74","              },","75","            },","76","          ],","77","        ],","78","        \"fromHotspot\": false,","79","        \"key\": \"1\",","80","        \"line\": 25,","81","        \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","82","        \"organization\": \"myorg\",","83","        \"project\": \"myproject\",","84","        \"projectKey\": \"foo\",","85","        \"projectName\": \"Foo\",","86","        \"projectOrganization\": \"org\",","87","        \"rule\": \"javascript:S1067\",","88","        \"ruleName\": \"foo\",","89","        \"secondaryLocations\": Array [","90","          Object {","91","            \"component\": \"main.js\",","92","            \"textRange\": Object {","93","              \"endLine\": 2,","94","              \"endOffset\": 2,","95","              \"startLine\": 1,","96","              \"startOffset\": 1,","97","            },","98","          },","99","          Object {","100","            \"component\": \"main.js\",","101","            \"textRange\": Object {","102","              \"endLine\": 2,","103","              \"endOffset\": 2,","104","              \"startLine\": 1,","105","              \"startOffset\": 1,","106","            },","107","          },","108","        ],","109","        \"severity\": \"MAJOR\",","110","        \"status\": \"OPEN\",","111","        \"textRange\": Object {","112","          \"endLine\": 26,","113","          \"endOffset\": 15,","114","          \"startLine\": 25,","115","          \"startOffset\": 0,","116","        },","117","        \"transitions\": Array [],","118","        \"type\": \"BUG\",","119","      }","120","    }","121","    issuesByLine={Object {}}","122","    key=\"1-0-0\"","123","    last={true}","124","    loadDuplications={[Function]}","125","    locations={","126","      Array [","127","        Object {","128","          \"component\": \"main.js\",","129","          \"index\": 0,","130","          \"textRange\": Object {","131","            \"endLine\": 2,","132","            \"endOffset\": 2,","133","            \"startLine\": 1,","134","            \"startOffset\": 1,","135","          },","136","        },","137","      ]","138","    }","139","    onIssueChange={[MockFunction]}","140","    onIssuePopupToggle={[Function]}","141","    onLinePopupToggle={[Function]}","142","    onLocationSelect={[MockFunction]}","143","    renderDuplicationPopup={[Function]}","144","    scroll={[MockFunction]}","145","    snippetGroup={","146","      Object {","147","        \"component\": Object {","148","          \"key\": \"main.js\",","149","          \"measures\": Object {","150","            \"coverage\": \"85.2\",","151","            \"duplicationDensity\": \"1.0\",","152","            \"issues\": \"12\",","153","            \"lines\": \"56\",","154","          },","155","          \"path\": \"main.js\",","156","          \"project\": \"my-project\",","157","          \"projectName\": \"MyProject\",","158","          \"q\": \"FIL\",","159","          \"uuid\": \"foo-bar\",","160","        },","161","        \"locations\": Array [","162","          Object {","163","            \"component\": \"main.js\",","164","            \"index\": 0,","165","            \"textRange\": Object {","166","              \"endLine\": 2,","167","              \"endOffset\": 2,","168","              \"startLine\": 1,","169","              \"startOffset\": 1,","170","            },","171","          },","172","        ],","173","        \"sources\": Object {","174","          \"16\": Object {","175","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","176","            \"coverageStatus\": \"covered\",","177","            \"coveredConditions\": 2,","178","            \"duplicated\": false,","179","            \"isNew\": true,","180","            \"line\": 16,","181","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","182","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","183","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","184","          },","185","        },","186","      }","187","    }","188","  \/>","189","<\/div>","190","`;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["30","  filterDuplicationBlocksByLine,","31","  getDuplicationBlocksForIndex,","32","  isDuplicationBlockInRemovedComponent","33","} from '.\/helpers\/duplications';","34","import {","40","import { Alert } from '..\/ui\/Alert';","104","  linePopup?: T.LinePopup;","502","  handleLinePopupToggle = ({ index, line, name, open }: T.LinePopup) => {","584","    if (!component || !duplicatedFiles) {","585","      return null;","586","    }","588","    const blocks = getDuplicationBlocksForIndex(duplications, index);","594","            blocks={filterDuplicationBlocksByLine(blocks, line)}","597","            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}"],"delete":["43","import { Alert } from '..\/ui\/Alert';","99","  linePopup?: { index?: number; line: number; name: string };","497","  handleLinePopupToggle = ({","498","    index,","499","    line,","500","    name,","501","    open","502","  }: {","503","    index?: number;","504","    line: number;","505","    name: string;","506","    open?: boolean;","507","  }) => {","589","    if (!component || !duplicatedFiles) return <><\/>;","591","    const duplication = duplications && duplications[index];","592","    let blocks = (duplication && duplication.blocks) || [];","593","    \/* eslint-disable no-underscore-dangle *\/","594","    const inRemovedComponent = blocks.some(b => b._ref === undefined);","595","    let foundOne = false;","596","    blocks = blocks.filter(b => {","597","      const outOfBounds = b.from > line || b.from + b.size < line;","598","      const currentFile = b._ref === '1';","599","      const shouldDisplayForCurrentFile = outOfBounds || foundOne;","600","      const shouldDisplay = !currentFile || shouldDisplayForCurrentFile;","601","      const isOk = b._ref !== undefined && shouldDisplay;","602","      if (b._ref === '1' && !outOfBounds) {","603","        foundOne = true;","604","      }","605","      return isOk;","606","    });","607","    \/* eslint-enable no-underscore-dangle *\/","613","            blocks={blocks}","616","            inRemovedComponent={inRemovedComponent}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/loadIssues.ts":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.tsx":[{"add":["58","  linePopup: T.LinePopup | undefined;","70","  onLinePopupToggle: (linePopup: T.LinePopup) => void;","74","  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;"],"delete":["58","  linePopup: { index?: number; line: number; name: string } | undefined;","70","  onLinePopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;","74","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;"]}],"server\/sonar-web\/src\/main\/js\/api\/components.ts":[{"add":["278","export function getDuplications(","279","  data: { key: string } & T.BranchParameters","280","): Promise<{ duplications: T.Duplication[]; files: T.Dict<T.DuplicatedFile> }> {","281","  return getJSON('\/api\/duplications\/show', data).catch(throwGlobalError);"],"delete":["278","export function getDuplications(data: { key: string } & T.BranchParameters): Promise<any> {","279","  return getJSON('\/api\/duplications\/show', data);"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineNumber.tsx":[{"add":["25","  onPopupToggle: (linePopup: T.LinePopup) => void;"],"delete":["25","  onPopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":[{"add":["120","it('should correctly handle lines actions', () => {","121","  const snippetGroup: T.SnippetGroup = {","122","    locations: [","123","      mockFlowLocation({","124","        component: 'a',","125","        textRange: { startLine: 34, endLine: 34, startOffset: 0, endOffset: 0 }","126","      }),","127","      mockFlowLocation({","128","        component: 'a',","129","        textRange: { startLine: 54, endLine: 54, startOffset: 0, endOffset: 0 }","130","      })","131","    ],","132","    ...mockSnippetsByComponent('a', [32, 33, 34, 35, 36, 52, 53, 54, 55, 56])","133","  };","134","  const loadDuplications = jest.fn();","135","  const onLinePopupToggle = jest.fn();","136","  const renderDuplicationPopup = jest.fn();","137","","138","  const wrapper = shallowRender({","139","    loadDuplications,","140","    onLinePopupToggle,","141","    renderDuplicationPopup,","142","    snippetGroup","143","  });","144","","145","  const line = mockSourceLine();","146","  wrapper","147","    .find('Line')","148","    .first()","149","    .prop<Function>('loadDuplications')(line);","150","  expect(loadDuplications).toHaveBeenCalledWith('a', line);","151","","152","  wrapper","153","    .find('Line')","154","    .first()","155","    .prop<Function>('onLinePopupToggle')({ line: 13, name: 'foo' });","156","  expect(onLinePopupToggle).toHaveBeenCalledWith({ component: 'a', line: 13, name: 'foo' });","157","","158","  wrapper","159","    .find('Line')","160","    .first()","161","    .prop<Function>('renderDuplicationPopup')(1, 13);","162","  expect(renderDuplicationPopup).toHaveBeenCalledWith(","163","    mockSourceViewerFile({ key: 'a', path: 'a' }),","164","    1,","165","    13","166","  );","167","});","168","","178","      duplications={undefined}","179","      duplicationsByLine={undefined}","184","      linePopup={undefined}","185","      loadDuplications={jest.fn()}","189","      onLinePopupToggle={jest.fn()}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineDuplicationBlock.tsx":[{"add":["29","  onPopupToggle: (linePopup: T.LinePopup) => void;","31","  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;"],"delete":["29","  onPopupToggle: (x: { index?: number; line: number; name: string; open?: boolean }) => void;","31","  renderDuplicationPopup: (index: number, line: number) => JSX.Element;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":[{"add":["22","import {","23","  mockFlowLocation,","24","  mockIssue,","25","  mockSnippetsByComponent,","26","  mockSourceLine,","27","  mockSourceViewerFile","28","} from '..\/..\/..\/..\/helpers\/testMocks';","31","import { getDuplications } from '..\/..\/..\/..\/api\/components';","34","  const { mockSnippetsByComponent } = require.requireActual('..\/..\/..\/..\/helpers\/testMocks');","36","    getIssueFlowSnippets: jest.fn().mockResolvedValue({ 'main.js': mockSnippetsByComponent() })","40","jest.mock('..\/..\/..\/..\/api\/components', () => ({","41","  getDuplications: jest.fn().mockResolvedValue({})","42","}));","43","","48","it('should render correctly', async () => {","49","  const wrapper = shallowRender();","50","  expect(wrapper).toMatchSnapshot();","51","","52","  await waitAndUpdate(wrapper);","53","  expect(wrapper).toMatchSnapshot();","60","  expect(getIssueFlowSnippets).toHaveBeenCalledWith('1');","61","  expect(wrapper.state('components')).toEqual({ 'main.js': mockSnippetsByComponent() });","79","it('should handle line popup', async () => {","80","  const wrapper = shallowRender();","81","  await waitAndUpdate(wrapper);","82","","83","  const linePopup = { component: 'foo', index: 0, line: 16, name: 'b.tsx' };","84","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(linePopup);","85","  expect(wrapper.state('linePopup')).toEqual(linePopup);","86","","87","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(linePopup);","88","  expect(wrapper.state('linePopup')).toEqual(undefined);","89","","90","  const openLinePopup = { ...linePopup, open: true };","91","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(openLinePopup);","92","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('onLinePopupToggle')(openLinePopup);","93","  expect(wrapper.state('linePopup')).toEqual(linePopup);","94","});","95","","96","it('should handle duplication popup', async () => {","97","  const files = { b: { key: 'b', name: 'B.tsx', project: 'foo', projectName: 'Foo' } };","98","  const duplications = [{ blocks: [{ _ref: '1', from: 1, size: 2 }] }];","99","  (getDuplications as jest.Mock).mockResolvedValueOnce({ duplications, files });","100","","101","  const wrapper = shallowRender();","102","  await waitAndUpdate(wrapper);","103","","104","  wrapper.find('ComponentSourceSnippetViewer').prop<Function>('loadDuplications')(","105","    'foo',","106","    mockSourceLine()","107","  );","108","","109","  await waitAndUpdate(wrapper);","110","  expect(getDuplications).toHaveBeenCalledWith({ key: 'foo' });","111","  expect(wrapper.state('duplicatedFiles')).toEqual(files);","112","  expect(wrapper.state('duplications')).toEqual(duplications);","113","  expect(wrapper.state('duplicationsByLine')).toEqual({ '1': [0], '2': [0] });","114","  expect(wrapper.state('linePopup')).toEqual({","115","    component: 'foo',","116","    index: 0,","117","    line: 16,","118","    name: 'duplications'","119","  });","120","","121","  expect(","122","    wrapper.find('ComponentSourceSnippetViewer').prop<Function>('renderDuplicationPopup')(","123","      mockSourceViewerFile(),","124","      0,","125","      16","126","    )","127","  ).toMatchSnapshot();","128","});","129","","135","      issue={mockIssue(true, { key: '1' })}","137","      locations={[mockFlowLocation()]}"],"delete":["22","import { mockIssue, mockSourceViewerFile } from '..\/..\/..\/..\/helpers\/testMocks';","27","  const { mockSourceViewerFile } = require.requireActual('..\/..\/..\/..\/helpers\/testMocks');","29","    getIssueFlowSnippets: jest.fn().mockResolvedValue([mockSourceViewerFile()])","37","it('should render correctly', () => {","38","  expect(shallowRender()).toMatchSnapshot();","45","  expect(getIssueFlowSnippets).toBeCalled();","46","  expect(wrapper.state('components')).toEqual([mockSourceViewerFile()]);","69","      issue={mockIssue(true)}","71","      locations={[]}","75","      renderDuplicationPopup={jest.fn()}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/helpers\/getCoverageStatus.ts":[{"add":[],"delete":[]}]}},"29d4206d4d69d5c36e8153bf1f0f52d47418799c":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/treemap.html.erb":"MODIFY","server\/sonar-web\/src\/main\/js\/libs\/widgets\/treemap.js":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/treemap.html.erb":[{"add":["56","              <%= colorMetric.name -%>: { val: <%= color ? color.value : \"null\" -%>, fval: '<%= color ? color.formatted_value : \"-\" -%>' },","57","              <%= sizeMetric.name -%>: { val: <%= size ? size.value : \"null\" -%>, fval: '<%= size ? size.formatted_value : \"-\" -%>' }"],"delete":["56","              <%= colorMetric.name -%>: { val: <%= color ? color.value : \"null\" -%>, fval: '<%= color ? color.formatted_value : \"-\" -%>', data: '<%= color ? color.formatted_value : \"-\" -%>' },","57","              <%= sizeMetric.name -%>: { val: <%= size ? size.value : \"null\" -%>, fval: '<%= size ? size.formatted_value : \"-\" -%>', data: '<%= size ? size.formatted_value : \"-\" -%>' }"]}],"server\/sonar-web\/src\/main\/js\/libs\/widgets\/treemap.js":[{"add":["26","    this.color = that.getColorScale();","210","    var domain = [1, 2, 3, 4, 5];","211","    if (this.components().length > 0) {","212","      var colorMetricSample = this.colorMetric.value(_.first(this.components()));","213","      if (typeof colorMetricSample === 'string') {","214","        domain = ['A', 'B', 'C', 'D', 'E'];","215","      }","216","    }"],"delete":["209","    var domain = ['A', 'B', 'C', 'D', 'E'];"]}]}},"dae4348f09a1364904a2e63caebf2dd9f205752b":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavBranding.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNav-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavMenu.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNavMenu-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavBranding.tsx":[{"add":["37","    <Link className=\"navbar-brand\" to=\"\/\">","38","      <img alt={title} height={30} src={url} title={title} width={width} \/>","39","    <\/Link>"],"delete":["37","    <div className=\"pull-left\">","38","      <Link className=\"navbar-brand\" to=\"\/\">","39","        <img alt={title} height={30} src={url} title={title} width={width} \/>","40","      <\/Link>","41","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNav-test.tsx.snap":[{"add":["28","    className=\"global-navbar-menu global-navbar-menu-right\"","106","    className=\"global-navbar-menu global-navbar-menu-right\""],"delete":["28","    className=\"global-navbar-menu pull-right\"","106","    className=\"global-navbar-menu pull-right\""]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.css":[{"add":["25",".navbar-global .navbar-limited {","26","  display: flex;","27","}","28","","97",".global-navbar-menu-right {","98","  flex: 1;","99","  justify-content: flex-end;","100","}","101","","102",".global-navbar-menu-right .navbar-search {","103","  flex: 1;","104","  max-width: 310px;","105","}","106","","107",".global-navbar-menu-right .navbar-search .search-box,","108",".global-navbar-menu-right .navbar-search .search-box-input {","109","  min-width: 0;","110","  width: 100%;","111","}","112",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNavMenu.tsx":[{"add":["180","      <ul className=\"global-navbar-menu\">"],"delete":["180","      <ul className=\"global-navbar-menu pull-left\">"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.tsx":[{"add":["61","        <ul className=\"global-navbar-menu global-navbar-menu-right\">"],"delete":["61","        <ul className=\"global-navbar-menu pull-right\">"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/__tests__\/__snapshots__\/GlobalNavMenu-test.tsx.snap":[{"add":["4","  className=\"global-navbar-menu\""],"delete":["4","  className=\"global-navbar-menu pull-left\""]}]}},"67c3ad2d32d37a24cc9b030baa39cde7d3f8507b":{"changes":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/RuleDescriptionFormatter.java":"ADD","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/hotspot\/ws\/ShowAction.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/rule\/RuleDescriptionFormatterTest.java":"ADD","server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/RuleMapper.java":"MODIFY","server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/hotspot\/ws\/ShowActionTest.java":"MODIFY"},"diff":{"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/RuleDescriptionFormatter.java":[{"add":[],"delete":[]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/hotspot\/ws\/ShowAction.java":[{"add":["47","import org.sonar.server.rule.RuleDescriptionFormatter;","49","import org.sonar.server.text.MacroInterpreter;","73","  private final MacroInterpreter macroInterpreter;","77","    UserResponseFormatter userFormatter, IssueChangeWSSupport issueChangeSupport, MacroInterpreter macroInterpreter) {","84","    this.macroInterpreter = macroInterpreter;","160","  private void formatRule(ShowWsResponse.Builder responseBuilder, RuleDefinitionDto ruleDefinitionDto) {","163","","169","","170","    if (ruleDefinitionDto.isCustomRule()) {","171","      String htmlDescription = RuleDescriptionFormatter.getDescriptionAsHtml(ruleDefinitionDto);","172","      if (htmlDescription != null) {","173","        ruleBuilder.setRiskDescription(macroInterpreter.interpret(htmlDescription));","174","      }","175","    } else {","176","      HotspotRuleDescription hotspotRuleDescription = HotspotRuleDescription.from(ruleDefinitionDto);","177","      hotspotRuleDescription.getVulnerable().ifPresent(ruleBuilder::setVulnerabilityDescription);","178","      hotspotRuleDescription.getRisk().ifPresent(ruleBuilder::setRiskDescription);","179","      hotspotRuleDescription.getFixIt().ifPresent(ruleBuilder::setFixRecommendations);","180","    }","181",""],"delete":["74","    UserResponseFormatter userFormatter, IssueChangeWSSupport issueChangeSupport) {","156","  private static void formatRule(ShowWsResponse.Builder responseBuilder, RuleDefinitionDto ruleDefinitionDto) {","159","    HotspotRuleDescription hotspotRuleDescription = HotspotRuleDescription.from(ruleDefinitionDto);","165","    hotspotRuleDescription.getVulnerable().ifPresent(ruleBuilder::setVulnerabilityDescription);","166","    hotspotRuleDescription.getRisk().ifPresent(ruleBuilder::setRiskDescription);","167","    hotspotRuleDescription.getFixIt().ifPresent(ruleBuilder::setFixRecommendations);"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/rule\/RuleDescriptionFormatterTest.java":[{"add":[],"delete":[]}],"server\/sonar-webserver-webapi\/src\/main\/java\/org\/sonar\/server\/rule\/ws\/RuleMapper.java":[{"add":["39","import org.sonar.server.rule.RuleDescriptionFormatter;","302","      String htmlDescription = RuleDescriptionFormatter.getDescriptionAsHtml(ruleDto);","303","      if (htmlDescription != null) {","304","        ruleResponse.setHtmlDesc(macroInterpreter.interpret(htmlDescription));","308","    String description = ruleDto.getDescription();"],"delete":["300","    String description = ruleDto.getDescription();","302","      RuleDto.Format descriptionFormat = ruleDto.getDescriptionFormat();","303","      if (description != null && descriptionFormat != null) {","304","        switch (descriptionFormat) {","305","          case MARKDOWN:","306","            ruleResponse.setHtmlDesc(macroInterpreter.interpret(Markdown.convertToHtml(description)));","307","            break;","308","          case HTML:","309","            ruleResponse.setHtmlDesc(macroInterpreter.interpret(description));","310","            break;","311","          default:","312","            throw new IllegalStateException(format(\"Rule description format '%s' is unknown for key '%s'\", descriptionFormat, ruleDto.getKey().toString()));","313","        }"]}],"server\/sonar-webserver-webapi\/src\/test\/java\/org\/sonar\/server\/hotspot\/ws\/ShowActionTest.java":[{"add":["37","import org.junit.Before;","73","import org.sonar.server.text.MacroInterpreter;","87","import static org.mockito.ArgumentMatchers.anyString;","90","import static org.mockito.Mockito.doReturn;","91","import static org.mockito.Mockito.mock;","93","import static org.mockito.Mockito.verifyNoInteractions;","97","import static org.sonar.db.rule.RuleDto.Format.MARKDOWN;","102","  private static final String INTERPRETED = \"interpreted\";","114","  private MacroInterpreter macroInterpreter = mock(MacroInterpreter.class);","115","","123","  private ShowAction underTest = new ShowAction(dbClient, hotspotWsSupport, responseFormatter, textRangeFormatter, userFormatter, issueChangeSupport, macroInterpreter);","126","  @Before","127","  public void before() {","128","    doReturn(INTERPRETED).when(macroInterpreter).interpret(anyString());","129","  }","130","","388","  public void returns_html_description_for_custom_rules() {","389","    ComponentDto project = dbTester.components().insertPrivateProject();","390","    userSessionRule.registerComponents(project);","391","    userSessionRule.logIn().addProjectPermission(UserRole.USER, project);","392","    ComponentDto file = dbTester.components().insertComponent(newFileDto(project));","393","","394","    String description = \"<div>line1\\nline2<\/div>\";","395","    String parsedDescription = \"&lt;div&gt;line1<br\/>line2&lt;\/div&gt;\";","396","    String resultingDescription = \"!\" + parsedDescription + \"!\";","397","","398","    RuleDefinitionDto rule = newRule(SECURITY_HOTSPOT,","399","      r -> r.setTemplateId(123)","400","        .setDescription(description)","401","        .setDescriptionFormat(MARKDOWN)","402","    );","403","","404","    doReturn(resultingDescription).when(macroInterpreter).interpret(parsedDescription);","405","","406","    IssueDto hotspot = dbTester.issues().insertHotspot(rule, project, file);","407","    mockChangelogAndCommentsFormattingContext();","408","","409","    Hotspots.ShowWsResponse response = newRequest(hotspot)","410","      .executeProtobuf(Hotspots.ShowWsResponse.class);","411","","412","    assertThat(response.getRule().getRiskDescription()).isEqualTo(resultingDescription);","413","  }","414","","415","  @Test","416","  public void handles_null_description_for_custom_rules() {","417","    ComponentDto project = dbTester.components().insertPrivateProject();","418","    userSessionRule.registerComponents(project);","419","    userSessionRule.logIn().addProjectPermission(UserRole.USER, project);","420","    ComponentDto file = dbTester.components().insertComponent(newFileDto(project));","421","","422","    RuleDefinitionDto rule = newRule(SECURITY_HOTSPOT, r -> r.setTemplateId(123).setDescription(null));","423","","424","    IssueDto hotspot = dbTester.issues().insertHotspot(rule, project, file);","425","    mockChangelogAndCommentsFormattingContext();","426","","427","    Hotspots.ShowWsResponse response = newRequest(hotspot)","428","      .executeProtobuf(Hotspots.ShowWsResponse.class);","429","","430","    assertThat(response.getRule().getRiskDescription()).isNullOrEmpty();","431","","432","    verifyNoInteractions(macroInterpreter);","433","  }","434","","435","  @Test"],"delete":["113","  private ShowAction underTest = new ShowAction(dbClient, hotspotWsSupport, responseFormatter, textRangeFormatter, userFormatter, issueChangeSupport);"]}]}},"94ea3b30c8fded80d7c02e1f4da12c9e5e6092d3":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":[{"add":["74","  private final TestSystem2 system2 = new TestSystem2().setNow(INITIAL_TIME);","79","  private final DbSession dbSession = db.getSession();","80","  private final CeActivityDao underTest = new CeActivityDao(system2);","770","      .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","774","      .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","783","      .insertProjectBranch(projectDto3, branchDto -> branchDto.setNeedIssueSync(true));","787","    \/\/ failed task and project branch still exists and need sync","790","    \/\/ assume branch has been re-analysed","795","    \/\/ assume branch has been deleted","798","    \/\/ associated branch does not exist, so there is no failures - either it has been deleted or purged or reanalysed"],"delete":["74","  private TestSystem2 system2 = new TestSystem2().setNow(INITIAL_TIME);","79","  private DbSession dbSession = db.getSession();","80","  private CeActivityDao underTest = new CeActivityDao(system2);","770","        .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","774","        .insertPrivateProjectDto(db.getDefaultOrganization(), branchDto -> branchDto.setNeedIssueSync(false));","783","        .insertProjectBranch(projectDto3, branchDto -> branchDto.setNeedIssueSync(true));","787","    \/\/failed task and project branch still exists and need sync","790","    \/\/assume branch has been re-analysed","795","    \/\/assume branch has been deleted","798","    \/\/associated branch does not exist, so there is no failures - either it has been deleted or purged or reanalysed"]}]}},"087f4fc5eafaeb07757db27179bd61263fd87f8a":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDto.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDtoTest.java":"ADD"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDto.java":[{"add":["241","    this.errorMessage = ensureNotTooBig(removeCharZeros(errorMessage), MAX_SIZE_ERROR_MESSAGE);","262","    this.errorStacktrace = removeCharZeros(errorStacktrace);","297","","298","  @CheckForNull","299","  private static String ensureNotTooBig(@Nullable String str, int maxSize) {","300","    if (str == null) {","301","      return null;","302","    }","303","    if (str.length() <= maxSize) {","304","      return str;","305","    }","306","    return str.substring(0, maxSize);","307","  }","308","","309","  @CheckForNull","310","  private static String removeCharZeros(@Nullable String str) {","311","    if (str == null || str.isEmpty()) {","312","      return str;","313","    }","314","    return str.codePoints()","315","      .filter(c -> c != \"\\u0000\".codePointAt(0))","316","      .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)","317","      .toString();","318","  }"],"delete":["241","    this.errorMessage = ensureNotTooBig(errorMessage, MAX_SIZE_ERROR_MESSAGE);","256","  private static String ensureNotTooBig(@Nullable String str, int maxSize) {","257","    if (str == null) {","258","      return null;","259","    }","260","    if (str.length() <= maxSize) {","261","      return str;","262","    }","263","    return str.substring(0, maxSize);","264","  }","265","","266","  @CheckForNull","273","    this.errorStacktrace = errorStacktrace;"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDtoTest.java":[{"add":[],"delete":[]}]}},"e184f159ade71372942f2840b62f6b71eeefb4c5":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Migration53Mapper.java":"ADD","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeysTest.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/v53\/Migration53Mapper.xml":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/MyBatis.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeys.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Component.java":"ADD"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Migration53Mapper.java":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeysTest.java":[{"add":["41","    migration = new RemoveDuplicatedComponentKeys(db.database(), db.getDbClient());"],"delete":["41","    migration = new RemoveDuplicatedComponentKeys(db.database());"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/v53\/Migration53Mapper.xml":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/MyBatis.java":[{"add":["134","import org.sonar.db.version.v53.Migration53Mapper;","238","      Migration45Mapper.class, Migration50Mapper.class, Migration53Mapper.class"],"delete":["237","      Migration45Mapper.class, Migration50Mapper.class"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeys.java":[{"add":["31","import org.sonar.db.DbClient;","32","import org.sonar.db.DbSession;","36","import org.sonar.db.version.v53.Component;","37","import org.sonar.db.version.v53.Migration53Mapper;","50","  private final DbClient dbClient;","52","  public RemoveDuplicatedComponentKeys(Database db, DbClient dbClient) {","54","    this.dbClient = dbClient;","62","    DbSession readSession = dbClient.openSession(false);","63","    Migration53Mapper mapper = readSession.getMapper(Migration53Mapper.class);","64","","68","      RemoveDuplicatedComponentHandler handler = new RemoveDuplicatedComponentHandler(mapper, componentUpdate, issuesUpdate);","81","      dbClient.closeSession(readSession);","88","    private final Migration53Mapper mapper;","94","    public RemoveDuplicatedComponentHandler(Migration53Mapper mapper, Upsert componentUpdate, Upsert issuesUpdate) {","95","      this.mapper = mapper;","102","      String componentKey = row.getString(1);","103","      List<Component> components = mapper.selectComponentsByKey(componentKey);","106","      for (Component componentToRemove : FluentIterable.from(components).filter(Predicates.not(new MatchComponentId(refComponent.getId())))) {","108","          .setLong(1, componentToRemove.getId())","111","          .setString(1, refComponent.getUuid())","112","          .setString(2, refComponent.getProjectUuid())","113","          .setString(3, componentToRemove.getUuid())","130","      return input.isEnabled();","144","      return input.getId() == this.id;"],"delete":["47","  public RemoveDuplicatedComponentKeys(Database db) {","59","      RemoveDuplicatedComponentHandler handler = new RemoveDuplicatedComponentHandler(context, componentUpdate, issuesUpdate);","78","    private final Context context;","84","    public RemoveDuplicatedComponentHandler(Context context, Upsert componentUpdate, Upsert issuesUpdate) {","85","      this.context = context;","92","      List<Component> components = context","93","        .prepareSelect(\"SELECT p.id, p.uuid, p.project_uuid, p.enabled FROM projects p WHERE p.kee=? ORDER BY id\")","94","        .setString(1, row.getString(1))","95","        .list(ComponentRowReader.INSTANCE);","98","      for (Component componentToRemove : FluentIterable.from(components).filter(Predicates.not(new MatchComponentId(refComponent.id)))) {","100","          .setLong(1, componentToRemove.id)","103","          .setString(1, refComponent.uuid)","104","          .setString(2, refComponent.projectUuid)","105","          .setString(3, componentToRemove.uuid)","122","      return input.enabled;","136","      return input.id == this.id;","140","  private enum ComponentRowReader implements Select.RowReader<Component> {","141","    INSTANCE;","142","","143","    @Override","144","    public Component read(Select.Row row) throws SQLException {","145","      return new Component(row.getLong(1), row.getString(2), row.getString(3), row.getBoolean(4));","146","    }","147","  }","148","","149","  private static class Component {","150","    private final long id;","151","    private final String uuid;","152","    private final String projectUuid;","153","    private final boolean enabled;","154","","155","    public Component(long id, String uuid, String projectUuid, boolean enabled) {","156","      this.id = id;","157","      this.uuid = uuid;","158","      this.projectUuid = projectUuid;","159","      this.enabled = enabled;","160","    }","161","  }"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Component.java":[{"add":[],"delete":[]}]}},"8e95c83dd117559e9d0f87c6133e04bbf801d982":{"changes":{"server\/sonar-web\/src\/main\/hbs\/nav\/nav-context-navbar.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/nav\/context-navbar-view.js":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/layouts\/_navbar_conf_context.html.erb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/hbs\/nav\/nav-context-navbar.hbs":[{"add":["72","        {{#each contextExtensions}}","73","          <li>","74","            <a href=\"{{link url}}\">{{label}}<\/a>","75","          <\/li>","76","        {{\/each}}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/nav\/context-navbar-view.js":[{"add":["24","      MORE_URLS = [","25","          '\/design', '\/libraries', '\/dashboards', '\/plugins\/resource'","63","          isMoreActive = _.some(MORE_URLS, function (url) {"],"delete":["24","      OVERVIEW_URLS = [","25","          '\/design', '\/libraries', '\/dashboards'","63","          isMoreActive = _.some(OVERVIEW_URLS, function (url) {","70",""]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/views\/layouts\/_navbar_conf_context.html.erb":[{"add":["31","    ],","32","    contextExtensions: [","33","      <% project_metrics = @project.last_snapshot.metric_keys.to_java(:string) if @project.last_snapshot","34","         pages = controller.java_facade.getPages(Navigation::SECTION_RESOURCE.key, @project.scope, @project.qualifier, @project.language, project_metrics)","35","         pages.each_with_index do |page, index|","36","           page_url = (page.isController() ? \"#{page.getId()}?id=#{@project.id}\" : \"\/plugins\/resource\/#{@project.id}?page=#{page.getId()}\")","37","      %>","38","      {","39","        url: '<%= page_url -%>',","40","        label: '<%= escape_javascript message(page.getId() + '.page', :default => page.getTitle()) -%>'","41","      }<% if index < pages.size - 1 -%>, <% end %>","42","      <% end %>"],"delete":[]}]}},"68eefa86f059bd37b25566e2a3f8ef7b9d72d0f2":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":[{"add":["38","import static org.sonar.api.utils.DateUtils.parseEndingDateOrDateTime;","39","import static org.sonar.api.utils.DateUtils.parseStartingDateOrDateTime;","44","  static final String PARAM_SINCE = \"since\";","45","  static final String PARAM_TO = \"to\";","87","      Date since = parseStartingDateOrDateTime(request.param(PARAM_SINCE));","91","      Date to = parseEndingDateOrDateTime(request.param(PARAM_TO));"],"delete":["42","  private static final String PARAM_SINCE = \"since\";","43","  private static final String PARAM_TO = \"to\";","85","      Date since = request.paramAsDateTime(PARAM_SINCE);","89","      Date to = request.paramAsDateTime(PARAM_TO);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogActionTest.java":[{"add":["26","import org.mockito.ArgumentCaptor;","40","import static org.assertj.core.api.Assertions.assertThat;","44","import static org.mockito.Mockito.verify;","46","import static org.sonar.api.utils.DateUtils.parseDate;","49","import static org.sonar.server.qualityprofile.ws.ChangelogAction.PARAM_SINCE;","50","import static org.sonar.server.qualityprofile.ws.ChangelogAction.PARAM_TO;","103","  @Test","104","  public void changelog_inclusive_for_dates() throws Exception {","105","    when(profileFactory.find(any(DbSession.class), eq(QProfileRef.fromKey(XOO_P1_KEY)))).thenReturn(QProfileTesting.newXooP1());","106","    when(changelogLoader.load(any(DbSession.class), any(QProfileChangeQuery.class))).thenReturn(new ChangelogLoader.Changelog(0, Collections.emptyList()));","107","","108","    wsTester.newGetRequest(QProfilesWs.API_ENDPOINT, \"changelog\")","109","      .setParam(PARAM_PROFILE_KEY, XOO_P1_KEY)","110","      .setParam(PARAM_SINCE, \"2016-09-01\")","111","      .setParam(PARAM_TO, \"2016-09-01\")","112","      .execute();","113","","114","    ArgumentCaptor<QProfileChangeQuery> argumentCaptor = ArgumentCaptor.forClass(QProfileChangeQuery.class);","115","    verify(changelogLoader).load(any(DbSession.class), argumentCaptor.capture());","116","    assertThat(argumentCaptor.getValue().getFromIncluded()).isEqualTo(parseDate(\"2016-09-01\").getTime());","117","    assertThat(argumentCaptor.getValue().getToExcluded()).isEqualTo(parseDate(\"2016-09-02\").getTime());","118","  }","119",""],"delete":["52","  private DbSession dbSession = dbTester.getSession();"]}]}},"cab459c9dceb0fcc47ae83d20a369bd53d50d4dc":{"changes":{"server\/sonar-web\/src\/main\/js\/api\/components.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/api\/components.ts":[{"add":["59","export function bulkDeleteProjects(","60","  parameters: BaseSearchProjectsParameters","61","): Promise<void | Response> {","62","  return post('\/api\/projects\/bulk_delete', parameters).catch(throwGlobalError);"],"delete":["59","export function bulkDeleteProjects(parameters: BaseSearchProjectsParameters): Promise<void> {","60","  return post('\/api\/projects\/bulk_delete', parameters);"]}]}},"15dc8ea86dba565fa8f02814ca7c8fb9130ae3a7":{"changes":{"it\/it-tests\/src\/test\/java\/it\/issue\/AutoAssignTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/issue\/AutoAssignTest.java":[{"add":["2","import java.util.List;","7","import org.sonar.wsclient.issue.Issue;","72","  \/**","73","   * SONAR-7098","74","   *","75","   * Given two versions of same project:","76","   * v1: issue, but no SCM data","77","   * v2: old issue and SCM data","78","   * Expected: all issues should be associated with authors","79","   *\/","80","  @Test","81","  public void update_author_and_assignee_when_scm_is_activated() {","82","    createUser(SIMON_USER, SIMON_USER);","83","","84","    \/\/ Run a first analysis without SCM","85","    projectAnalysis.withProperties(\"sonar.scm.disabled\", \"true\").run();","86","    List<Issue> issues = searchIssues();","87","    assertThat(issues).isNotEmpty();","88","","89","    \/\/ No author and assignee are set","90","    for (Issue issue : issues) {","91","      assertThat(issue.author()).isEmpty();","92","    }","93","    assertThat(search(IssueQuery.create().assigned(true)).list()).isEmpty();","94","","95","    \/\/ Run a second analysis with SCM","96","    projectAnalysis.run();","97","    issues = searchIssues();","98","    assertThat(issues).isNotEmpty();","99","","100","    \/\/ Authors and assignees are set","101","    for (Issue issue : issues) {","102","      assertThat(issue.author()).isNotEmpty();","103","    }","104","    assertThat(search(IssueQuery.create().assignees(SIMON_USER)).list()).hasSize(3);","105","  }","106",""],"delete":[]}]}},"ae63a6af4780af4527dd453af7ed8923ed6bd07f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/ProjectRowActions-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/ProjectRow-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/Projects.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRowActions.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/App-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/RestoreAccessModal.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/ProjectRowActions-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/Projects-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRow.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/Projects-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/ProjectRow-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/AppContainer.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/ProjectRowActions-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/ProjectRow-test.tsx.snap":[{"add":["66","    <ProjectRowActions","67","      currentUser={","68","        Object {","69","          \"login\": \"foo\",","70","        }","71","      }","72","      onApplyTemplate={[Function]}","73","      project={","74","        Object {","75","          \"key\": \"project\",","76","          \"name\": \"Project\",","77","          \"qualifier\": \"TRK\",","78","          \"visibility\": \"private\",","79","        }","80","      }","81","    \/>","148","    <ProjectRowActions","149","      currentUser={","150","        Object {","151","          \"login\": \"foo\",","152","        }","153","      }","154","      onApplyTemplate={[Function]}","155","      project={","156","        Object {","157","          \"key\": \"project\",","158","          \"lastAnalysisDate\": \"2017-04-08T00:00:00.000Z\",","159","          \"name\": \"Project\",","160","          \"qualifier\": \"TRK\",","161","          \"visibility\": \"private\",","162","        }","163","      }","164","    \/>"],"delete":["66","    <div","67","      className=\"dropdown\"","68","    >","69","      <button","70","        className=\"dropdown-toggle\"","71","        data-toggle=\"dropdown\"","72","      >","73","        actions","74","         ","75","        <i","76","          className=\"icon-dropdown\"","77","        \/>","78","      <\/button>","79","      <ul","80","        className=\"dropdown-menu dropdown-menu-right\"","81","      >","82","        <li>","83","          <Link","84","            onlyActiveOnIndex={false}","85","            style={Object {}}","86","            to={","87","              Object {","88","                \"pathname\": \"\/project_roles\",","89","                \"query\": Object {","90","                  \"id\": \"project\",","91","                },","92","              }","93","            }","94","          >","95","            edit_permissions","96","          <\/Link>","97","        <\/li>","98","        <li>","99","          <a","100","            className=\"js-apply-template\"","101","            href=\"#\"","102","            onClick={[Function]}","103","          >","104","            projects_role.apply_template","105","          <\/a>","106","        <\/li>","107","      <\/ul>","108","    <\/div>","175","    <div","176","      className=\"dropdown\"","177","    >","178","      <button","179","        className=\"dropdown-toggle\"","180","        data-toggle=\"dropdown\"","181","      >","182","        actions","183","         ","184","        <i","185","          className=\"icon-dropdown\"","186","        \/>","187","      <\/button>","188","      <ul","189","        className=\"dropdown-menu dropdown-menu-right\"","190","      >","191","        <li>","192","          <Link","193","            onlyActiveOnIndex={false}","194","            style={Object {}}","195","            to={","196","              Object {","197","                \"pathname\": \"\/project_roles\",","198","                \"query\": Object {","199","                  \"id\": \"project\",","200","                },","201","              }","202","            }","203","          >","204","            edit_permissions","205","          <\/Link>","206","        <\/li>","207","        <li>","208","          <a","209","            className=\"js-apply-template\"","210","            href=\"#\"","211","            onClick={[Function]}","212","          >","213","            projects_role.apply_template","214","          <\/a>","215","        <\/li>","216","      <\/ul>","217","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/Projects.tsx":[{"add":["25","import { translate } from '..\/..\/helpers\/l10n';","28","  currentUser: { login: string };","46","  handleApplyTemplate = (project: Project) => {","58","            <th>{translate('name')}<\/th>","60","            <th>{translate('key')}<\/th>","61","            <th className=\"thin nowrap text-right\">{translate('last_analysis')}<\/th>","68","              currentUser={this.props.currentUser}","70","              onApplyTemplate={this.handleApplyTemplate}"],"delete":["44","  onApplyTemplateClick = (project: Project) => {","56","            <th>Name<\/th>","58","            <th>Key<\/th>","59","            <th className=\"thin nowrap text-right\">Last Analysis<\/th>","67","              onApplyTemplateClick={this.onApplyTemplateClick}"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["78","last_analysis=Last Analysis","1894","global_permissions.restore_access=Restore Access","1895","global_permissions.restore_access.message=You will receive {browse} and {administer} permissions on the project. Do you want to continue?"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRowActions.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/App-test.tsx":[{"add":["140","      currentUser={{ login: 'foo' }}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/RestoreAccessModal.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/ProjectRowActions-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/App.tsx":[{"add":["33","  currentUser: { login: string };","194","          currentUser={this.props.currentUser}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/Projects-test.tsx":[{"add":["61","    .prop<Function>('onApplyTemplate')(projects[0]);","68","      currentUser={{ login: 'foo' }}"],"delete":["61","    .prop<Function>('onApplyTemplateClick')(projects[0]);"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/ProjectRow.tsx":[{"add":["21","import ProjectRowActions from '.\/ProjectRowActions';","30","  currentUser: { login: string };","31","  onApplyTemplate: (project: Project) => void;","78","          <ProjectRowActions","79","            currentUser={this.props.currentUser}","80","            onApplyTemplate={this.props.onApplyTemplate}","81","            project={project}","82","          \/>"],"delete":["26","import { translate } from '..\/..\/helpers\/l10n';","27","import { getComponentPermissionsUrl } from '..\/..\/helpers\/urls';","31","  onApplyTemplateClick: (project: Project) => void;","42","  handleApplyTemplateClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {","43","    event.preventDefault();","44","    event.currentTarget.blur();","45","    this.props.onApplyTemplateClick(this.props.project);","46","  };","47","","84","          <div className=\"dropdown\">","85","            <button className=\"dropdown-toggle\" data-toggle=\"dropdown\">","86","              {translate('actions')} <i className=\"icon-dropdown\" \/>","87","            <\/button>","88","            <ul className=\"dropdown-menu dropdown-menu-right\">","89","              <li>","90","                <Link to={getComponentPermissionsUrl(project.key)}>","91","                  {translate('edit_permissions')}","92","                <\/Link>","93","              <\/li>","94","              <li>","95","                <a className=\"js-apply-template\" href=\"#\" onClick={this.handleApplyTemplateClick}>","96","                  {translate('projects_role.apply_template')}","97","                <\/a>","98","              <\/li>","99","            <\/ul>","100","          <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/__snapshots__\/Projects-test.tsx.snap":[{"add":["11","        name","15","        key","20","        last_analysis","27","      currentUser={","28","        Object {","29","          \"login\": \"foo\",","30","        }","31","      }","32","      onApplyTemplate={[Function]}","45","      currentUser={","46","        Object {","47","          \"login\": \"foo\",","48","        }","49","      }","50","      onApplyTemplate={[Function]}"],"delete":["11","        Name","15","        Key","20","        Last Analysis","27","      onApplyTemplateClick={[Function]}","40","      onApplyTemplateClick={[Function]}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/__tests__\/ProjectRow-test.tsx":[{"add":["48","      currentUser={{ login: 'foo' }}","49","      onApplyTemplate={jest.fn()}"],"delete":["23","import { click } from '..\/..\/..\/helpers\/testUtils';","46","it('applies permission template', () => {","47","  const onApplyTemplateClick = jest.fn();","48","  const wrapper = shallowRender({ onApplyTemplateClick });","49","  click(wrapper.find('.js-apply-template'));","50","  expect(onApplyTemplateClick).toBeCalledWith(project);","51","});","52","","56","      onApplyTemplateClick={jest.fn()}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/AppContainer.tsx":[{"add":["24","import { getAppState, getOrganizationByKey, getCurrentUser } from '..\/..\/store\/rootReducer';","34","  currentUser: { login: string };","67","        currentUser={this.props.currentUser}","79","  currentUser: getCurrentUser(state),"],"delete":["24","import { getAppState, getOrganizationByKey } from '..\/..\/store\/rootReducer';"]}]}},"1b9c1f105c34d97090bbd4966105ea132b17c3dc":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/ProjectsManagementPage.java":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/views\/BulkApplyTemplateView.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/search.js":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/projectAdministration\/ProjectAdministrationTest.java":[{"add":["23","import org.sonarqube.pageobjects.ProjectsManagementPage;","43","import org.sonarqube.tests.Tester;","44","import org.sonarqube.ws.client.permission.AddUserToTemplateWsRequest;","45","import org.sonarqube.ws.client.permission.CreateTemplateWsRequest;","46","import org.sonarqube.ws.client.permission.UsersWsRequest;","67","  public Tester tester = new Tester(orchestrator);","78","    adminUser = tester.users().generateAdministrator().getLogin();","203","  @Test","204","  public void bulk_apply_permission_template() {","205","    String project = tester.projects().generate(null).getKey();","206","    String user = tester.users().generate().getLogin();","207","    tester.wsClient().permissions().createTemplate(new CreateTemplateWsRequest().setName(\"foo-template\"));","208","    tester.wsClient().permissions().addUserToTemplate(","209","      new AddUserToTemplateWsRequest()","210","        .setPermission(\"admin\")","211","        .setTemplateName(\"foo-template\")","212","        .setLogin(user));","213","    ProjectsManagementPage page = nav.logIn().submitCredentials(adminUser).openProjectsManagement();","214","    page.shouldHaveProject(project);","215","    page.bulkApplyPermissionTemplate(\"foo-template\");","216","    assertThat(tester.wsClient().permissions().users(new UsersWsRequest()","217","      .setProjectKey(project)","218","      .setPermission(\"admin\")","219","    ).getUsers(0).getLogin()).isEqualTo(user);","220","  }","221",""],"delete":["42","import util.user.UserRule;","63","  public UserRule userRule = UserRule.from(orchestrator);","74","    adminUser = userRule.createAdminUser();","218",""]}],"tests\/src\/test\/java\/org\/sonarqube\/pageobjects\/ProjectsManagementPage.java":[{"add":["21","import com.codeborne.selenide.CollectionCondition;","22","","52","","53","  public ProjectsManagementPage bulkApplyPermissionTemplate(String template) {","54","    $(\".js-bulk-apply-permission-template\").should(exist).click();","55","    $(\".modal .select2-choice\").should(exist).click();","56","    $$(\".select2-results li\")","57","      .shouldHave(CollectionCondition.sizeGreaterThan(0))","58","      .findBy(text(\"foo-template\")).should(exist).click();","59","    $(\".modal .js-apply\").should(exist).click();","60","    return this;","61","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/views\/BulkApplyTemplateView.js":[{"add":["75","    selection.forEach(projectKey => {","76","      const data = { templateId: permissionTemplate, projectKey };"],"delete":["75","    selection.forEach(projectId => {","76","      const data = { templateId: permissionTemplate, projectId };"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects-admin\/search.js":[{"add":["158","                <button","159","                  className=\"spacer-right js-bulk-apply-permission-template\"","160","                  onClick={this.bulkApplyTemplate}>"],"delete":["158","                <button className=\"spacer-right\" onClick={this.bulkApplyTemplate}>"]}]}},"6ea16bffd566b4790f26b492860f01d9f2cda5e9":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/bootstrap\/BatchWsClientTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/BatchWsClient.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/bootstrap\/BatchWsClientTest.java":[{"add":["108","  @Test","109","  public void fail_if_bad_request() throws Exception {","110","    expectedException.expect(MessageException.class);","111","    expectedException.expectMessage(\"Boo! bad request! bad!\");","112","","113","    WsRequest request = newRequest();","114","    WsResponse response = newResponse()","115","      .setCode(400)","116","      .setContent(\"{\\\"errors\\\":[{\\\"msg\\\":\\\"Boo! bad request! bad!\\\"}]}\");","117","    when(wsClient.wsConnector().call(request)).thenReturn(response);","118","","119","    new BatchWsClient(wsClient, true).call(request);","120","  }","121",""],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/BatchWsClient.java":[{"add":["41","import static java.net.HttpURLConnection.HTTP_BAD_REQUEST;","42","import static java.net.HttpURLConnection.HTTP_FORBIDDEN;","43","import static java.net.HttpURLConnection.HTTP_UNAUTHORIZED;","82","    int code = response.code();","83","    if (code == HTTP_UNAUTHORIZED) {","94","    if (code == HTTP_FORBIDDEN || code == HTTP_BAD_REQUEST) {"],"delete":["27","import java.net.HttpURLConnection;","80","    if (response.code() == HttpURLConnection.HTTP_UNAUTHORIZED) {","91","    if (response.code() == HttpURLConnection.HTTP_FORBIDDEN) {"]}]}},"12d32893c71ea44b1620f7cddd8baab23459b561":{"changes":{"server\/sonar-ce-common\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueImplTest.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImplTest.java":"MODIFY","server\/sonar-ce-task\/src\/main\/java\/org\/sonar\/ce\/task\/CeTask.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":"MODIFY","server\/sonar-ce-common\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueImpl.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":"MODIFY","server\/sonar-ce-task\/src\/test\/java\/org\/sonar\/ce\/task\/CeTaskTest.java":"MODIFY"},"diff":{"server\/sonar-ce-common\/src\/test\/java\/org\/sonar\/ce\/queue\/CeQueueImplTest.java":[{"add":["44","import org.sonar.db.user.UserDto;","45","import org.sonar.db.user.UserTesting;","81","    UserDto userDto = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit.getSubmitterUuid());","85","    verifyCeTask(taskSubmit, task, null, userDto);","96","    verifyCeTask(taskSubmit, task, componentDto, null);","105","    verifyCeTask(taskSubmit, task, null, null);","106","  }","107","","108","  @Test","109","  public void submit_populates_submitter_login_of_CeTask_if_submitter_exists() {","110","    UserDto userDto = insertUser(UserTesting.newUserDto());","111","    CeTaskSubmit taskSubmit = createTaskSubmit(CeTaskTypes.REPORT, null, userDto.getUuid());","112","","113","    CeTask task = underTest.submit(taskSubmit);","114","","115","    verifyCeTask(taskSubmit, task, null, userDto);","213","    UserDto userDto1 = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit1.getSubmitterUuid());","214","","219","    verifyCeTask(taskSubmit1, tasks.get(0), null, userDto1);","220","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","234","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1, null);","235","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","249","    verifyCeTask(taskSubmit1, tasks.get(0), branch1, project, null);","250","    verifyCeTask(taskSubmit2, tasks.get(1), branch2, project, null);","478","","479","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, UserDto userDto) {","480","    verifyCeTask(taskSubmit, task, componentDto, componentDto, userDto);","483","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, @Nullable ComponentDto mainComponentDto, @Nullable UserDto userDto) {","511","    if (taskSubmit.getSubmitterUuid() != null) {","512","      if (userDto == null) {","513","        assertThat(task.getSubmitter().getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","514","        assertThat(task.getSubmitter().getLogin()).isNull();","515","      } else {","516","        assertThat(task.getSubmitter().getUuid()).isEqualTo(userDto.getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","517","        assertThat(task.getSubmitter().getLogin()).isEqualTo(userDto.getLogin());","518","      }","519","    }","561","  private UserDto insertUser(UserDto userDto) {","562","    db.getDbClient().userDao().insert(session, userDto);","563","    session.commit();","564","    return userDto;","565","  }","566",""],"delete":["82","    verifyCeTask(taskSubmit, task, null);","93","    verifyCeTask(taskSubmit, task, componentDto);","102","    verifyCeTask(taskSubmit, task, null);","204","    verifyCeTask(taskSubmit1, tasks.get(0), null);","205","    verifyCeTask(taskSubmit2, tasks.get(1), null);","219","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1);","220","    verifyCeTask(taskSubmit2, tasks.get(1), null);","234","    verifyCeTask(taskSubmit1, tasks.get(0), branch1, project);","235","    verifyCeTask(taskSubmit2, tasks.get(1), branch2, project);","463","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto) {","464","    verifyCeTask(taskSubmit, task, componentDto, componentDto);","467","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, @Nullable ComponentDto mainComponentDto) {","495","    assertThat(task.getSubmitterUuid()).isEqualTo(taskSubmit.getSubmitterUuid());"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImplTest.java":[{"add":["27","import javax.annotation.CheckForNull;","38","import org.sonar.api.utils.System2;","39","import org.sonar.api.utils.internal.TestSystem2;","45","import org.sonar.ce.task.CeTaskResult;","47","import org.sonar.db.DbSession;","48","import org.sonar.db.DbTester;","51","import org.sonar.db.user.UserDto;","52","import org.sonar.db.user.UserTesting;","70","  private System2 system2 = new TestSystem2().setNow(1_450_000_000_000L);","71","","78","  @Rule","79","  public DbTester db = DbTester.create(system2);","80","","81","  private DbSession session = db.getSession();","95","  private final CeTask.User submitter = new CeTask.User(\"UUID_USER_1\", \"LOGIN_1\");","300","    UserDto userDto = insertRandomUser();","301","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(toTaskSubmitter(userDto))));","309","    assertThat(logs.get(0)).contains(String.format(\"submitter=%s\", userDto.getLogin()));","310","    assertThat(logs.get(1)).contains(String.format(\"submitter=%s | status=SUCCESS | time=\", userDto.getLogin()));","311","    assertThat(logTester.logs(LoggerLevel.ERROR)).isEmpty();","312","    assertThat(logTester.logs(LoggerLevel.DEBUG)).isEmpty();","313","  }","314","","315","  @Test","316","  public void log_submitterUuid_if_user_matching_submitterUuid_can_not_be_found() throws Exception {","317","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(new CeTask.User(\"UUID_USER\", null))));","318","    taskProcessorRepository.setProcessorForTask(CeTaskTypes.REPORT, taskProcessor);","319","","320","    underTest.call();","321","","322","    verifyWorkerUuid();","323","    List<String> logs = logTester.logs(LoggerLevel.INFO);","324","    assertThat(logs).hasSize(2);","325","    assertThat(logs.get(0)).contains(\"submitter=UUID_USER\");","326","    assertThat(logs.get(1)).contains(\"submitter=UUID_USER | status=SUCCESS | time=\");","333","    UserDto userDto = insertRandomUser();","334","    CeTask ceTask = createCeTask(toTaskSubmitter(userDto));","344","    assertThat(logs.get(0)).contains(String.format(\"submitter=%s\", userDto.getLogin()));","345","    assertThat(logs.get(1)).contains(String.format(\"submitter=%s | status=FAILED | time=\", userDto.getLogin()));","355","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(submitter)));","363","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","364","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=SUCCESS | time=\", submitter.getLogin()));","373","    CeTask ceTask = createCeTask(submitter);","383","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","384","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","411","      return Optional.of(createCeTask(submitter));","423","    CeTask ceTask = createCeTask(submitter);","451","    CeTask ceTask = createCeTask(submitter);","460","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","461","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","469","    CeTask ceTask = createCeTask(submitter);","478","    assertThat(logs.get(1)).contains(\" | submitter=\" + submitter.getLogin());","479","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","485","    CeTask ceTask = createCeTask(submitter);","494","    assertThat(logs.get(1)).contains(\" | submitter=\" + submitter.getLogin());","495","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","501","    CeTask ceTask = createCeTask(submitter);","513","    CeTask ceTask = createCeTask(submitter);","524","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","525","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","542","    CeTask ceTask = createCeTask(submitter);","553","    assertThat(logs.get(0)).contains(\" | submitter=\" + submitter.getLogin());","554","    assertThat(logs.get(1)).contains(String.format(\" | submitter=%s | status=FAILED | time=\", submitter.getLogin()));","584","  private static CeTask createCeTask(@Nullable CeTask.User submitter, String... characteristics) {","595","      .setSubmitter(submitter)","599","  ","600","  private UserDto insertRandomUser() {","601","    UserDto userDto = UserTesting.newUserDto();","602","    db.getDbClient().userDao().insert(session, userDto);","603","    session.commit();","604","    return userDto;","605","  }","606","","607","  private CeTask.User toTaskSubmitter(UserDto userDto) {","608","    return new CeTask.User(userDto.getUuid(), userDto.getLogin());","609","  }"],"delete":["285","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(\"FooBar\")));","293","    assertThat(logs.get(0)).contains(\"submitter=FooBar\");","294","    assertThat(logs.get(1)).contains(\"submitter=FooBar | status=SUCCESS | time=\");","301","    CeTask ceTask = createCeTask(\"FooBar\");","311","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","312","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","322","    when(queue.peek(anyString())).thenReturn(Optional.of(createCeTask(\"FooBar\")));","330","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","331","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=SUCCESS | time=\");","340","    CeTask ceTask = createCeTask(\"FooBar\");","350","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","351","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","378","      return Optional.of(createCeTask(\"FooBar\"));","390","    CeTask ceTask = createCeTask(\"FooBar\");","418","    CeTask ceTask = createCeTask(\"FooBar\");","427","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","428","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","436","    CeTask ceTask = createCeTask(\"FooBar\");","445","    assertThat(logs.get(1)).contains(\" | submitter=FooBar\");","446","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","452","    CeTask ceTask = createCeTask(\"FooBar\");","461","    assertThat(logs.get(1)).contains(\" | submitter=FooBar\");","462","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","468","    CeTask ceTask = createCeTask(\"FooBar\");","480","    CeTask ceTask = createCeTask(\"FooBar\");","491","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","492","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","509","    CeTask ceTask = createCeTask(\"FooBar\");","520","    assertThat(logs.get(0)).contains(\" | submitter=FooBar\");","521","    assertThat(logs.get(1)).contains(\" | submitter=FooBar | status=FAILED | time=\");","551","  private static CeTask createCeTask(@Nullable String submitterLogin, String... characteristics) {","562","      .setSubmitterUuid(submitterLogin)"]}],"server\/sonar-ce-task\/src\/main\/java\/org\/sonar\/ce\/task\/CeTask.java":[{"add":["44","  private final User submitter;","55","    this.submitter = builder.submitter;","63","  @Immutable","64","  public static final class User {","65","    private final String uuid;","66","    private final String login;","67","","68","    public User(String uuid, @Nullable String login) {","69","      this.uuid = requireNonNull(uuid);","70","      this.login = emptyToNull(login);","71","    }","72","","73","    public String getUuid() {","74","      return uuid;","75","    }","76","","77","    @CheckForNull","78","    public String getLogin() {","79","      return login;","80","    }","81","","82","    @Override","83","    public boolean equals(Object o) {","84","      if (this == o) {","85","        return true;","86","      }","87","      if (o == null || getClass() != o.getClass()) {","88","        return false;","89","      }","90","      User other = (User) o;","91","      return uuid.equals(other.uuid);","92","    }","93","","94","    @Override","95","    public String toString() {","96","      return \"User{\" +","97","              \"uuid='\" + uuid + '\\'' +","98","              \", login='\" + login + '\\'' +","99","              '}';","100","    }","101","","102","    @Override","103","    public int hashCode() {","104","      return uuid.hashCode();","105","    }","106","  }","107","","129","  public User getSubmitter() {","130","    return submitter;","145","      .add(\"submitter\", submitter)","172","    private User submitter;","205","    public Builder setSubmitter(@Nullable User s) {","206","      this.submitter = s;"],"delete":["44","  private final String submitterUuid;","55","    this.submitterUuid = emptyToNull(builder.submitterUuid);","84","  public String getSubmitterUuid() {","85","    return submitterUuid;","100","      .add(\"submitterUuid\", submitterUuid)","127","    private String submitterUuid;","160","    public Builder setSubmitterUuid(@Nullable String s) {","161","      this.submitterUuid = s;"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImpl.java":[{"add":["97","        CeTask task = convertToTask(dbSession, taskDto, characteristics,"],"delete":["97","        CeTask task = convertToTask(taskDto, characteristics,"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/InternalCeQueueImplTest.java":[{"add":["50","import org.sonar.db.user.UserDto;","104","    UserDto userDto = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit.getSubmitterUuid());","105","    verifyCeTask(taskSubmit, task, null, userDto);","116","    verifyCeTask(taskSubmit, task, componentDto, null);","125","    verifyCeTask(taskSubmit, task, null, null);","135","    UserDto userDto1 = db.getDbClient().userDao().selectByUuid(db.getSession(), taskSubmit1.getSubmitterUuid());","137","    verifyCeTask(taskSubmit1, tasks.get(0), null, userDto1);","138","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","152","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1, null);","153","    verifyCeTask(taskSubmit2, tasks.get(1), null, null);","624","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto, @Nullable UserDto userDto) {","642","    if (taskSubmit.getSubmitterUuid() != null) {","643","      if (userDto == null) {","644","        assertThat(task.getSubmitter().getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","645","        assertThat(task.getSubmitter().getLogin()).isNull();","646","      } else {","647","        assertThat(task.getSubmitter().getUuid()).isEqualTo(userDto.getUuid()).isEqualTo(taskSubmit.getSubmitterUuid());","648","        assertThat(task.getSubmitter().getUuid()).isEqualTo(userDto.getLogin());","649","      }","650","    }"],"delete":["103","","104","    verifyCeTask(taskSubmit, task, null);","115","    verifyCeTask(taskSubmit, task, componentDto);","124","    verifyCeTask(taskSubmit, task, null);","135","    verifyCeTask(taskSubmit1, tasks.get(0), null);","136","    verifyCeTask(taskSubmit2, tasks.get(1), null);","150","    verifyCeTask(taskSubmit1, tasks.get(0), componentDto1);","151","    verifyCeTask(taskSubmit2, tasks.get(1), null);","622","  private void verifyCeTask(CeTaskSubmit taskSubmit, CeTask task, @Nullable ComponentDto componentDto) {","640","    assertThat(task.getSubmitterUuid()).isEqualTo(taskSubmit.getSubmitterUuid());"]}],"server\/sonar-ce-common\/src\/main\/java\/org\/sonar\/ce\/queue\/CeQueueImpl.java":[{"add":["35","import javax.annotation.CheckForNull;","49","import org.sonar.db.user.UserDto;","104","        return of(convertToTask(dbSession, taskDto, submission.getCharacteristics(), null, null));","107","      return of(convertToTask(dbSession, taskDto, submission.getCharacteristics(),","231","      result.add(convertToTask(dbSession, dto, characteristics, component, mainComponent));","315","  CeTask convertToTask(DbSession dbSession, CeQueueDto taskDto, Map<String, String> characteristics, @Nullable ComponentDto component, @Nullable ComponentDto mainComponent) {","319","      .setCharacteristics(characteristics)","320","      .setSubmitter(resolveSubmitter(dbSession, taskDto.getSubmitterUuid()));","321","","346","  @CheckForNull","347","  private CeTask.User resolveSubmitter(DbSession dbSession, @Nullable String submitterUuid) {","348","    if (submitterUuid == null) {","349","      return null;","350","    }","351","    UserDto submitterDto = dbClient.userDao().selectByUuid(dbSession, submitterUuid);","352","    if (submitterDto != null) {","353","      return new CeTask.User(submitterUuid, submitterDto.getLogin());","354","    } else {","355","      return new CeTask.User(submitterUuid, null);","356","    }","357","  }","358",""],"delete":["102","        return of(convertToTask(taskDto, submission.getCharacteristics(), null, null));","105","      return of(convertToTask(taskDto, submission.getCharacteristics(),","229","      result.add(convertToTask(dto, characteristics, component, mainComponent));","313","  CeTask convertToTask(CeQueueDto taskDto, Map<String, String> characteristics, @Nullable ComponentDto component, @Nullable ComponentDto mainComponent) {","317","      .setSubmitterUuid(taskDto.getSubmitterUuid())","318","      .setCharacteristics(characteristics);"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/taskprocessor\/CeWorkerImpl.java":[{"add":["27","import javax.annotation.CheckForNull;","190","      .addContext(\"submitter\", submitterOf(task))","194","  @CheckForNull","195","  private static String submitterOf(CeTask task) {","196","    CeTask.User submitter = task.getSubmitter();","197","    if (submitter == null) {","198","      return null;","199","    }","200","    String submitterLogin = submitter.getLogin();","201","    if (submitterLogin != null) {","202","      return submitterLogin;","203","    } else {","204","      return submitter.getUuid();","205","    }","206","  }","207",""],"delete":["189","      .addContext(\"submitter\", task.getSubmitterUuid())"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":[{"add":["61","    .setSubmitter(new CeTask.User(\"UUID_1\", \"LOGIN_1\"))"],"delete":["61","    .setSubmitterUuid(\"robert\")"]}],"server\/sonar-ce-task\/src\/test\/java\/org\/sonar\/ce\/task\/CeTaskTest.java":[{"add":["109","","126","    CeTask.User submitter = new CeTask.User(\"UUID_USER_1\", \"LOGIN_1\");","130","    underTest.setSubmitter(submitter);","140","    assertThat(task.getSubmitter()).isEqualTo(submitter);","147","  public void verify_toString() {","148","    CeTask.Component component = new CeTask.Component(\"COMPONENT_UUID_1\", \"COMPONENT_KEY_1\", \"The component\");","149","    CeTask.Component mainComponent = new CeTask.Component(\"MAIN_COMPONENT_UUID_1\", \"MAIN_COMPONENT_KEY_1\", \"The main component\");","150","    underTest.setOrganizationUuid(\"org1\");","151","    underTest.setType(\"TYPE_1\");","152","    underTest.setUuid(\"UUID_1\");","153","    underTest.setComponent(component);","154","    underTest.setMainComponent(mainComponent);","155","    underTest.setSubmitter(new CeTask.User(\"UUID_USER_1\", \"LOGIN_1\"));","156","    underTest.setCharacteristics(ImmutableMap.of(\"k1\", \"v1\", \"k2\", \"v2\"));","157","","158","    CeTask task = underTest.build();","159","    System.out.println(task.toString());","160","","161","    assertThat(task.toString()).isEqualTo(\"CeTask{\" +","162","            \"organizationUuid=org1, \" +","163","            \"type=TYPE_1, \" +","164","            \"uuid=UUID_1, \" +","165","            \"component=Component{uuid='COMPONENT_UUID_1', key='COMPONENT_KEY_1', name='The component'}, \" +","166","            \"mainComponent=Component{uuid='MAIN_COMPONENT_UUID_1', key='MAIN_COMPONENT_KEY_1', name='The main component'}, \" +","167","            \"submitter=User{uuid='UUID_USER_1', login='LOGIN_1'}\" +","168","            \"}\"","169","    );","170","  }","171","","172","  @Test","175","      .setSubmitter(new CeTask.User(\"USER_ID\", \"\"))","178","    assertThat(ceTask.getSubmitter().getLogin()).isNull();","202","","203","  @Test","204","  public void verify_submitter_getters() {","205","    CeTask.User user = new CeTask.User(\"UUID\", \"LOGIN\");","206","","207","    assertThat(user.getUuid()).isEqualTo(\"UUID\");","208","    assertThat(user.getLogin()).isEqualTo(\"LOGIN\");","209","  }","210","","211","  @Test","212","  public void submitter_equals_and_hashCode_on_uuid() {","213","    CeTask.User user1 = new CeTask.User(\"UUID_1\", null);","214","    CeTask.User user1bis = new CeTask.User(\"UUID_1\", null);","215","    CeTask.User user2 = new CeTask.User(\"UUID_2\", null);","216","    CeTask.User user1_diff_login = new CeTask.User(\"UUID_1\", \"LOGIN\");","217","","218","    assertThat(user1).isEqualTo(user1);","219","    assertThat(user1).isEqualTo(user1bis);","220","    assertThat(user1).isNotEqualTo(user2);","221","    assertThat(user1.equals(null)).isFalse();","222","    assertThat(user1.hashCode()).isEqualTo(user1.hashCode());","223","    assertThat(user1.hashCode()).isEqualTo(user1bis.hashCode());","224","    assertThat(user1.hashCode()).isEqualTo(user1_diff_login.hashCode());","225","  }"],"delete":["109","    ","129","    underTest.setSubmitterUuid(\"LOGIN_1\");","139","    assertThat(task.getSubmitterUuid()).isEqualTo(\"LOGIN_1\");","148","      .setSubmitterUuid(\"\")","151","    assertThat(ceTask.getSubmitterUuid()).isNull();"]}]}},"357dd13c31860c1e73f6246b538db3448c8e2a91":{"changes":{"server\/sonar-web\/src\/main\/coffee\/analysis-reports\/views\/report-view.coffee":"MODIFY","server\/sonar-web\/src\/main\/less\/pages\/analysis-reports.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/coffee\/analysis-reports\/views\/report-view.coffee":[{"add":["34","      @$el.addClass 'analysis-reports-report-cancelled' if status is 'CANCELLED'"],"delete":[]}],"server\/sonar-web\/src\/main\/less\/pages\/analysis-reports.less":[{"add":["28","@cancelledColor: #fcecec;","61",".analysis-reports-report-cancelled {","62","  background-color: @cancelledColor !important;","63","}","64",""],"delete":[]}]}},"bdc898f9220f48b5589bf01ef32a5194d8b28dce":{"changes":{"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":"MODIFY"},"diff":{"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":[{"add":["23","#----- Oracle 11g\/12c\/18c\/19c","25","# Only the thin client is supported, and we recommend using the latest Oracle JDBC driver. See"],"delete":["23","#----- Oracle 11g\/12c","25","# Only the thin client is supported, and only the versions 11.2.x or 12.2.x must be used. See"]}]}},"1ec8e8ec1c3bf3b1f687036b94bbe963fb91cc44":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/custom-rule-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-delete-rule.hbs":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/delete-rule-view.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule-details-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/custom-rule-view.js":[{"add":["21","import DeleteRuleView from '.\/delete-rule-view';","37","    const deleteRuleView = new DeleteRuleView({","38","      model: this.model","39","    }).render();","40","","41","    deleteRuleView.on('delete', () => {","42","      this.model.collection.remove(this.model);","43","      this.destroy();"],"delete":["19","import $ from 'jquery';","23","import confirmDialog from '..\/confirm-dialog';","24","import { translate } from '..\/..\/..\/helpers\/l10n';","39","    const that = this;","40","    confirmDialog({","41","      title: translate('delete'),","42","      html: translate('are_you_sure'),","43","      yesHandler () {","44","        const url = '\/api\/rules\/delete';","45","        const options = { key: that.model.id };","46","        $.post(url, options).done(function () {","47","          that.model.collection.remove(that.model);","48","          that.destroy();","49","        });","50","      }"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-delete-rule.hbs":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/delete-rule-view.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule-details-view.js":[{"add":["31","import DeleteRuleView from '.\/rule\/delete-rule-view';","148","    const deleteRuleView = new DeleteRuleView({","149","      model: this.model","150","    }).render();","151","","152","    deleteRuleView.on('delete', () => {","153","      this.options.app.controller.fetchList();"],"delete":["33","import confirmDialog from '.\/confirm-dialog';","34","import { translate, translateWithParameters } from '..\/..\/helpers\/l10n';","149","    const that = this;","150","    const ruleType = this.model.has('templateKey') ? 'custom' : 'manual';","151","    confirmDialog({","152","      title: translate('delete'),","153","      html: translateWithParameters(`coding_rules.delete.${ruleType}.confirm`, this.model.get('name')),","154","      yesHandler () {","155","        const url = '\/api\/rules\/delete';","156","        const options = { key: that.model.id };","157","        $.post(url, options).done(function () {","158","          that.options.app.controller.fetchList();","159","        });","160","      }"]}]}},"ee8183913dd87fb6abbc73cc3d1cd2dcc77c93d9":{"changes":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/SchedulerImpl.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/EsScriptCommand.java":"ADD","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsInstallation.java":"ADD","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/AbstractCommand.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/JavaCommand.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncher.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/AbstractCommandTest.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsInstallationTest.java":"ADD","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsSettingsTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/EsProcessMonitor.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactory.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/CommandFactoryImplTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsSettings.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/EsProcessMonitorTest.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/ProcessLauncherImplTest.java":"MODIFY","server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/SchedulerImplTest.java":"MODIFY","server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncherImpl.java":"MODIFY"},"diff":{"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/SchedulerImpl.java":[{"add":["30","import org.sonar.application.command.AbstractCommand;","109","      tryToStartProcess(process, commandFactory::createEsCommand);","125","      tryToStartProcess(process, () -> commandFactory.createWebCommand(false));","127","      tryToStartProcess(process, () -> commandFactory.createWebCommand(true));","141","      tryToStartProcess(process, commandFactory::createCeCommand);","150","  private void tryToStartProcess(SQProcess process, Supplier<AbstractCommand> commandSupplier) {","152","      AbstractCommand command = commandSupplier.get();"],"delete":["31","import org.sonar.application.command.EsCommand;","32","import org.sonar.application.command.JavaCommand;","110","      tryToStartEsProcess(process, commandFactory::createEsCommand);","126","      tryToStartJavaProcess(process, () -> commandFactory.createWebCommand(false));","128","      tryToStartJavaProcess(process, () -> commandFactory.createWebCommand(true));","142","      tryToStartJavaProcess(process, commandFactory::createCeCommand);","151","  private void tryToStartJavaProcess(SQProcess process, Supplier<JavaCommand> commandSupplier) {","153","      JavaCommand command = commandSupplier.get();","154","      return processLauncher.launch(command);","155","    });","156","  }","157","","158","  private void tryToStartEsProcess(SQProcess process, Supplier<EsCommand> commandSupplier) {","159","    tryToStart(process, () -> {","160","      EsCommand command = commandSupplier.get();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/EsScriptCommand.java":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsInstallation.java":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/AbstractCommand.java":[{"add":["26","import javax.annotation.CheckForNull;","27","import org.sonar.application.es.EsInstallation;","39","  private EsInstallation esInstallation;","81","","82","","83","  public T setEsInstallation(EsInstallation esInstallation) {","84","    this.esInstallation = esInstallation;","85","    return castThis();","86","  }","87","","88","  @CheckForNull","89","  public EsInstallation getEsInstallation() {","90","    return esInstallation;","91","  }"],"delete":["24","import java.util.LinkedHashMap;","26","import java.util.Properties;","28","import javax.annotation.Nullable;","37","  \/\/ program arguments","38","  private final Map<String, String> arguments = new LinkedHashMap<>();","62","  public Map<String, String> getArguments() {","63","    return arguments;","64","  }","65","","66","  public T setArgument(String key, @Nullable String value) {","67","    if (value == null) {","68","      arguments.remove(key);","69","    } else {","70","      arguments.put(key, value);","71","    }","72","    return castThis();","73","  }","74","","75","  public T setArguments(Properties args) {","76","    for (Map.Entry<Object, Object> entry : args.entrySet()) {","77","      setArgument(entry.getKey().toString(), entry.getValue() != null ? entry.getValue().toString() : null);","78","    }","79","    return castThis();","80","  }","81",""]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/JavaCommand.java":[{"add":["23","import java.util.LinkedHashMap;","25","import java.util.Map;","26","import java.util.Properties;","27","import javax.annotation.Nullable;","32","  \/\/ program arguments","33","  private final Map<String, String> arguments = new LinkedHashMap<>();","39","  private boolean readsArgumentsFromFile;","73","  public boolean getReadsArgumentsFromFile() {","74","    return readsArgumentsFromFile;","75","  }","76","","77","  public JavaCommand<T> setReadsArgumentsFromFile(boolean readsArgumentsFromFile) {","78","    this.readsArgumentsFromFile = readsArgumentsFromFile;","79","    return this;","80","  }","81","","82","  public Map<String, String> getArguments() {","83","    return arguments;","84","  }","85","","86","  public JavaCommand<T> setArgument(String key, @Nullable String value) {","87","    if (value == null) {","88","      arguments.remove(key);","89","    } else {","90","      arguments.put(key, value);","91","    }","92","    return this;","93","  }","94","","95","  public JavaCommand<T> setArguments(Properties args) {","96","    for (Map.Entry<Object, Object> entry : args.entrySet()) {","97","      setArgument(entry.getKey().toString(), entry.getValue() != null ? entry.getValue().toString() : null);","98","    }","99","    return this;","100","  }","101",""],"delete":[]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncher.java":[{"add":["22","import org.sonar.application.command.AbstractCommand;","30","   * Launch a command.","34","  ProcessMonitor launch(AbstractCommand command);"],"delete":["22","import org.sonar.application.command.EsCommand;","23","import org.sonar.application.command.JavaCommand;","31","   * Launch an ES command.","35","  ProcessMonitor launch(EsCommand esCommand);","36","","37","  \/**","38","   * Launch a Java command.","39","   * ","40","   * @throws IllegalStateException if an error occurs","41","   *\/","42","  ProcessMonitor launch(JavaCommand javaCommand);"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/AbstractCommandTest.java":[{"add":[],"delete":["69","  public void test_command_with_complete_information() throws Exception {","70","    File workDir = temp.newFolder();","71","    AbstractCommand command = new AbstractCommand(ProcessId.ELASTICSEARCH, workDir, System2.INSTANCE) {","72","","73","    };","74","","75","    command.setArgument(\"first_arg\", \"val1\");","76","    Properties args = new Properties();","77","    args.setProperty(\"second_arg\", \"val2\");","78","    command.setArguments(args);","79","","80","    command.setEnvVariable(\"JAVA_COMMAND_TEST\", \"1000\");","81","","82","    assertThat(command.toString()).isNotNull();","83","    assertThat(command.getWorkDir()).isSameAs(workDir);","84","","85","    \/\/ copy current env variables","86","    assertThat(command.getEnvVariables().get(\"JAVA_COMMAND_TEST\")).isEqualTo(\"1000\");","87","    assertThat(command.getEnvVariables().size()).isEqualTo(System.getenv().size() + 1);","88","  }","89","","90","  @Test"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsInstallationTest.java":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/es\/EsSettingsTest.java":[{"add":["67","    new EsSettings(props, new EsInstallation(props), system2);","78","    new EsSettings(props, new EsInstallation(props), system2);","89","    new EsSettings(props, new EsInstallation(props), system2);","119","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","158","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","177","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","194","    EsSettings esSettings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","201","    EsInstallation mockedEsInstallation = mock(EsInstallation.class);","202","    when(mockedEsInstallation.getHomeDirectory()).thenReturn(new File(\"\/foo\/home\"));","203","    when(mockedEsInstallation.getConfDirectory()).thenReturn(new File(\"\/foo\/conf\"));","204","    when(mockedEsInstallation.getLogDirectory()).thenReturn(new File(\"\/foo\/log\"));","205","    when(mockedEsInstallation.getDataDirectory()).thenReturn(new File(\"\/foo\/data\"));","207","    EsSettings underTest = new EsSettings(minProps(new Random().nextBoolean()), mockedEsInstallation, System2.INSTANCE);","219","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","231","    EsSettings underTest = new EsSettings(props, new EsInstallation(props), System2.INSTANCE);","242","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","251","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","260","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","269","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","278","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();","290","    Map<String, String> settings = new EsSettings(props, new EsInstallation(props), System2.INSTANCE).build();"],"delete":["67","    new EsSettings(props, new EsFileSystem(props), system2);","78","    new EsSettings(props, new EsFileSystem(props), system2);","89","    new EsSettings(props, new EsFileSystem(props), system2);","119","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","158","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","177","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","194","    EsSettings esSettings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","201","    EsFileSystem mockedEsFileSystem = mock(EsFileSystem.class);","202","    when(mockedEsFileSystem.getHomeDirectory()).thenReturn(new File(\"\/foo\/home\"));","203","    when(mockedEsFileSystem.getConfDirectory()).thenReturn(new File(\"\/foo\/conf\"));","204","    when(mockedEsFileSystem.getLogDirectory()).thenReturn(new File(\"\/foo\/log\"));","205","    when(mockedEsFileSystem.getDataDirectory()).thenReturn(new File(\"\/foo\/data\"));","207","    EsSettings underTest = new EsSettings(minProps(new Random().nextBoolean()), mockedEsFileSystem, System2.INSTANCE);","219","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","231","    EsSettings underTest = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE);","242","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","251","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","260","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","269","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","278","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();","290","    Map<String, String> settings = new EsSettings(props, new EsFileSystem(props), System2.INSTANCE).build();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/EsProcessMonitor.java":[{"add":["40","import org.sonar.application.es.EsInstallation;","41","import org.sonar.process.ProcessId;","59","  private final EsInstallation esConfig;","63","  public EsProcessMonitor(Process process, ProcessId processId, EsInstallation esConfig, EsConnector esConnector) {","64","    super(process, processId);","65","    this.esConfig = esConfig;","172","    esSettings.put(\"cluster.name\", esConfig.getClusterName());","175","    HostAndPort host = HostAndPort.fromParts(esConfig.getHost(), esConfig.getPort());"],"delete":["40","import org.sonar.application.command.EsCommand;","58","  private final EsCommand esCommand;","62","  public EsProcessMonitor(Process process, EsCommand esCommand, EsConnector esConnector) {","63","    super(process, esCommand.getProcessId());","64","    this.esCommand = esCommand;","171","    esSettings.put(\"cluster.name\", esCommand.getClusterName());","174","    HostAndPort host = HostAndPort.fromParts(esCommand.getHost(), esCommand.getPort());"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactory.java":[{"add":["23","  AbstractCommand createEsCommand();"],"delete":["23","  EsCommand createEsCommand();"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/command\/CommandFactoryImpl.java":[{"add":["25","import org.sonar.application.es.EsInstallation;","26","import org.sonar.application.es.EsLogging;","27","import org.sonar.application.es.EsSettings;","28","import org.sonar.application.es.EsYmlSettings;","34","import static org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS;","70","  public AbstractCommand<?> createEsCommand() {","71","    if (IS_OS_WINDOWS) {","72","      return createEsCommandForWindows();","73","    }","74","    return createEsCommandForUnix();","75","  }","76","","77","  private EsScriptCommand createEsCommandForUnix() {","78","    EsInstallation esInstallation = new EsInstallation(props);","79","    if (!esInstallation.getExecutable().exists()) {","82","    Map<String, String> settingsMap = new EsSettings(props, esInstallation, System2.INSTANCE).build();","84","    esInstallation","85","      .setLog4j2Properties(new EsLogging().createProperties(props, esInstallation.getLogDirectory()))","90","      .setClusterName(settingsMap.get(\"cluster.name\"))","91","      .setHost(settingsMap.get(\"network.host\"))","92","      .setPort(Integer.valueOf(settingsMap.get(\"transport.tcp.port\")));","93","","94","    return new EsScriptCommand(ProcessId.ELASTICSEARCH, esInstallation.getHomeDirectory())","95","      .setEsInstallation(esInstallation)","96","      .addOption(\"-Epath.conf=\" + esInstallation.getConfDirectory().getAbsolutePath())","97","      .setEnvVariable(\"ES_JVM_OPTIONS\", esInstallation.getJvmOptions().getAbsolutePath())","102","  private JavaCommand createEsCommandForWindows() {","103","    EsInstallation esInstallation = new EsInstallation(props);","104","    if (!esInstallation.getExecutable().exists()) {","105","      throw new IllegalStateException(\"Cannot find elasticsearch binary\");","106","    }","107","    Map<String, String> settingsMap = new EsSettings(props, esInstallation, System2.INSTANCE).build();","108","","109","    esInstallation","110","      .setLog4j2Properties(new EsLogging().createProperties(props, esInstallation.getLogDirectory()))","111","      .setEsJvmOptions(new EsJvmOptions()","112","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_OPTS)","113","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_ADDITIONAL_OPTS))","114","      .setEsYmlSettings(new EsYmlSettings(settingsMap))","115","      .setClusterName(settingsMap.get(\"cluster.name\"))","116","      .setHost(settingsMap.get(\"network.host\"))","117","      .setPort(Integer.valueOf(settingsMap.get(\"transport.tcp.port\")));","118","","119","    return new JavaCommand<EsJvmOptions>(ProcessId.ELASTICSEARCH, esInstallation.getHomeDirectory())","120","      .setEsInstallation(esInstallation)","121","      .setReadsArgumentsFromFile(false)","122","      .setArgument(\"path.conf\", esInstallation.getConfDirectory().getAbsolutePath())","123","      .setJvmOptions(new EsJvmOptions()","124","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_OPTS)","125","        .addFromMandatoryProperty(props, ProcessProperties.SEARCH_JAVA_ADDITIONAL_OPTS)","126","        .add(\"-Delasticsearch\")","127","        .add(\"-Des.path.home=\" + esInstallation.getHomeDirectory())","128","      )","129","      .setEnvVariable(\"ES_JVM_OPTIONS\", esInstallation.getJvmOptions().getAbsolutePath())","130","      .setEnvVariable(\"JAVA_HOME\", System.getProperties().getProperty(\"java.home\"))","131","      .setClassName(\"org.elasticsearch.bootstrap.Elasticsearch\")","132","      .addClasspath(\"lib\/*\")","133","      .suppressEnvVariable(ENV_VAR_JAVA_TOOL_OPTIONS);","134","  }","135","","146","      .setReadsArgumentsFromFile(true)","173","      .setReadsArgumentsFromFile(true)"],"delete":["29","import org.sonar.application.es.EsFileSystem;","30","import org.sonar.application.es.EsLogging;","31","import org.sonar.application.es.EsSettings;","32","import org.sonar.application.es.EsYmlSettings;","69","  public EsCommand createEsCommand() {","70","    EsFileSystem esFileSystem = new EsFileSystem(props);","71","    if (!esFileSystem.getExecutable().exists()) {","74","    Map<String, String> settingsMap = new EsSettings(props, esFileSystem, System2.INSTANCE).build();","76","    return new EsCommand(ProcessId.ELASTICSEARCH, esFileSystem.getHomeDirectory())","77","      .setFileSystem(esFileSystem)","78","      .setLog4j2Properties(new EsLogging().createProperties(props, esFileSystem.getLogDirectory()))","79","      .setArguments(props.rawProperties())","80","      .setClusterName(settingsMap.get(\"cluster.name\"))","81","      .setHost(settingsMap.get(\"network.host\"))","82","      .setPort(Integer.valueOf(settingsMap.get(\"transport.tcp.port\")))","83","      .addEsOption(\"-Epath.conf=\" + esFileSystem.getConfDirectory().getAbsolutePath())","88","      .setEnvVariable(\"ES_JVM_OPTIONS\", esFileSystem.getJvmOptions().getAbsolutePath())"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/command\/CommandFactoryImplTest.java":[{"add":["33","import org.sonar.application.es.EsInstallation;","112","    AbstractCommand esCommand = newFactory(props).createEsCommand();","113","    EsInstallation esConfig = esCommand.getEsInstallation();","115","    assertThat(esConfig.getClusterName()).isEqualTo(\"sonarqube\");","116","    assertThat(esConfig.getHost()).isNotEmpty();","117","    assertThat(esConfig.getPort()).isEqualTo(9001);","118","    assertThat(esConfig.getEsJvmOptions().getAll())","127","    assertThat(esConfig.getEsYmlSettings()).isNotNull();","129","    assertThat(esConfig.getLog4j2Properties())","145","    AbstractCommand esCommand = newFactory(props).createEsCommand();","146","    EsInstallation esConfig = esCommand.getEsInstallation();","148","    assertThat(esConfig.getClusterName()).isEqualTo(\"foo\");","149","    assertThat(esConfig.getPort()).isEqualTo(1234);","150","    assertThat(esConfig.getEsJvmOptions().getAll())","175","      .isNotEmpty();"],"delete":["111","    EsCommand esCommand = newFactory(props).createEsCommand();","113","    assertThat(esCommand.getClusterName()).isEqualTo(\"sonarqube\");","114","    assertThat(esCommand.getHost()).isNotEmpty();","115","    assertThat(esCommand.getPort()).isEqualTo(9001);","116","    assertThat(esCommand.getEsJvmOptions().getAll())","122","    assertThat(esCommand.getEsOptions()).containsOnly(\"-Epath.conf=\" + esConfDir.getAbsolutePath());","126","    assertThat(esCommand.getEsYmlSettings()).isNotNull();","128","    assertThat(esCommand.getLog4j2Properties())","144","    EsCommand command = newFactory(props).createEsCommand();","146","    assertThat(command.getClusterName()).isEqualTo(\"foo\");","147","    assertThat(command.getPort()).isEqualTo(1234);","148","    assertThat(command.getEsJvmOptions().getAll())","173","      .containsKey(\"JAVA_HOME\");"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/es\/EsSettings.java":[{"add":["44","  private final EsInstallation fileSystem;","50","  public EsSettings(Props props, EsInstallation fileSystem, System2 system2) {"],"delete":["44","  private final EsFileSystem fileSystem;","50","  public EsSettings(Props props, EsFileSystem fileSystem, System2 system2) {"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/EsProcessMonitorTest.java":[{"add":["30","import java.util.Properties;","37","import org.sonar.application.es.EsInstallation;","39","import org.sonar.process.Props;","53","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","61","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","69","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","77","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","90","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","99","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","116","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), ProcessId.ELASTICSEARCH, getEsConfig(), esConnector);","134","  private EsInstallation getEsConfig() throws IOException {","136","    Properties properties = new Properties();","137","    properties.setProperty(\"sonar.path.home\", \"\/imaginary\/path\");","138","    properties.setProperty(\"sonar.path.data\", \"\/imaginary\/path\");","139","    properties.setProperty(\"sonar.path.temp\", \"\/imaginary\/path\");","140","    properties.setProperty(\"sonar.path.logs\", \"\/imaginary\/path\");","141","    return new EsInstallation(new Props(properties))"],"delete":["37","import org.sonar.application.command.EsCommand;","51","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","59","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","67","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","75","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","88","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","97","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","114","    EsProcessMonitor underTest = new EsProcessMonitor(mock(Process.class), getEsCommand(), esConnector);","132","  private EsCommand getEsCommand() throws IOException {","134","    return new EsCommand(ProcessId.ELASTICSEARCH, tempDirectory.toFile())"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/process\/ProcessLauncherImplTest.java":[{"add":["33","import org.sonar.application.command.EsScriptCommand;","36","import org.sonar.application.es.EsInstallation;","95","    JavaCommand<JvmOptions> command = new JavaCommand<>(ProcessId.WEB_SERVER, temp.newFolder());","96","    command.setReadsArgumentsFromFile(true);","113","        entry(\"process.key\", ProcessId.WEB_SERVER.getKey()),","114","        entry(\"process.index\", String.valueOf(ProcessId.WEB_SERVER.getIpcIndex())),","120","  public void temporary_properties_file_can_be_avoided() throws Exception {","121","    File tempDir = temp.newFolder();","122","    TestProcessBuilder processBuilder = new TestProcessBuilder();","123","    ProcessLauncher underTest = new ProcessLauncherImpl(tempDir, commands, () -> processBuilder);","124","    JavaCommand<JvmOptions> command = new JavaCommand<>(ProcessId.WEB_SERVER, temp.newFolder());","125","    command.setReadsArgumentsFromFile(false);","126","    command.setArgument(\"foo\", \"bar\");","127","    command.setArgument(\"baz\", \"woo\");","128","    command.setJvmOptions(new JvmOptions<>());","129","","130","    underTest.launch(command);","131","","132","    String propsFilePath = processBuilder.commands.get(processBuilder.commands.size() - 1);","133","    File file = new File(propsFilePath);","134","    assertThat(file).doesNotExist();","135","  }","136","","137","  @Test","144","    EsScriptCommand command = createEsScriptCommand(tempDir, homeDir, dataDir, logDir);","162","    EsScriptCommand command = createEsScriptCommand(tempDir, homeDir, dataDir, logDir);","185","  private EsScriptCommand createEsScriptCommand(File tempDir, File homeDir, File dataDir, File logDir) throws IOException {","186","    EsScriptCommand command = new EsScriptCommand(ProcessId.ELASTICSEARCH, temp.newFolder());","192","    command.setEsInstallation(new EsInstallation(props)","193","      .setEsYmlSettings(mock(EsYmlSettings.class))","194","      .setEsJvmOptions(mock(EsJvmOptions.class))","195","      .setLog4j2Properties(new Properties()));"],"delete":["32","import org.sonar.application.command.EsCommand;","36","import org.sonar.application.es.EsFileSystem;","95","    JavaCommand<JvmOptions> command = new JavaCommand<>(ProcessId.ELASTICSEARCH, temp.newFolder());","112","        entry(\"process.key\", ProcessId.ELASTICSEARCH.getKey()),","113","        entry(\"process.index\", String.valueOf(ProcessId.ELASTICSEARCH.getIpcIndex())),","125","    EsCommand command = createEsCommand(tempDir, homeDir, dataDir, logDir);","143","    EsCommand command = createEsCommand(tempDir, homeDir, dataDir, logDir);","166","  private EsCommand createEsCommand(File tempDir, File homeDir, File dataDir, File logDir) throws IOException {","167","    EsCommand command = new EsCommand(ProcessId.ELASTICSEARCH, temp.newFolder());","173","    command.setFileSystem(new EsFileSystem(props));","174","    command.setEsYmlSettings(mock(EsYmlSettings.class));","175","    command.setEsJvmOptions(mock(EsJvmOptions.class));","176","    command.setLog4j2Properties(new Properties());"]}],"server\/sonar-main\/src\/test\/java\/org\/sonar\/application\/SchedulerImplTest.java":[{"add":["42","import org.sonar.application.command.EsScriptCommand;","75","  private EsScriptCommand esScriptCommand;","76","  private JavaCommand esJavaCommand;","93","    esScriptCommand = new EsScriptCommand(ELASTICSEARCH, tempDir);","94","    esJavaCommand = new JavaCommand(ELASTICSEARCH, tempDir);","121","    assertThat(processLauncher.commands).containsExactly(esScriptCommand, webLeaderCommand);","129","    assertThat(processLauncher.commands).containsExactly(esScriptCommand, webLeaderCommand, ceCommand);","364","    public EsScriptCommand createEsCommand() {","365","      return esScriptCommand;","385","    public ProcessMonitor launch(AbstractCommand command) {","386","      return launchImpl(command);"],"delete":["42","import org.sonar.application.command.EsCommand;","75","  private EsCommand esCommand;","92","    esCommand = new EsCommand(ELASTICSEARCH, tempDir);","119","    assertThat(processLauncher.commands).containsExactly(esCommand, webLeaderCommand);","127","    assertThat(processLauncher.commands).containsExactly(esCommand, webLeaderCommand, ceCommand);","362","    public EsCommand createEsCommand() {","363","      return esCommand;","383","    public ProcessMonitor launch(EsCommand esCommand) {","384","      return launchImpl(esCommand);","385","    }","386","","387","    @Override","388","    public ProcessMonitor launch(JavaCommand javaCommand) {","389","      return launchImpl(javaCommand);"]}],"server\/sonar-main\/src\/main\/java\/org\/sonar\/application\/process\/ProcessLauncherImpl.java":[{"add":["35","import org.sonar.application.command.EsScriptCommand;","38","import org.sonar.application.es.EsInstallation;","71","  public ProcessMonitor launch(AbstractCommand command) {","72","    EsInstallation fileSystem = command.getEsInstallation();","73","    if (fileSystem != null) {","74","      cleanupOutdatedEsData(fileSystem);","75","      writeConfFiles(fileSystem);","76","    }","77","","78","    Process process;","79","    if (command instanceof EsScriptCommand) {","80","      process = launchExternal((EsScriptCommand) command);","81","    } else if (command instanceof JavaCommand) {","82","      process = launchJava((JavaCommand) command);","83","    } else {","84","      throw new IllegalStateException(\"Unexpected type of command: \" + command.getClass());","85","    }","86","","87","    ProcessId processId = command.getProcessId();","89","      if (processId == ProcessId.ELASTICSEARCH) {","90","        return new EsProcessMonitor(process, processId, command.getEsInstallation(), new EsConnectorImpl());","91","      } else {","92","        ProcessCommands commands = allProcessesCommands.createAfterClean(processId.getIpcIndex());","93","        return new ProcessCommandsProcessMonitor(process, processId, commands);","94","      }","100","      throw new IllegalStateException(format(\"Fail to launch monitor of process [%s]\", processId.getKey()), e);","104","  private Process launchExternal(EsScriptCommand esScriptCommand) {","105","    try {","106","      ProcessBuilder processBuilder = create(esScriptCommand);","107","      logLaunchedCommand(esScriptCommand, processBuilder);","108","      return processBuilder.start();","109","    } catch (Exception e) {","110","      throw new IllegalStateException(format(\"Fail to launch process [%s]\", esScriptCommand.getProcessId().getKey()), e);","111","    }","112","  }","113","","114","  private static void cleanupOutdatedEsData(EsInstallation esInstallation) {","115","    esInstallation.getOutdatedSearchDirectories().forEach(outdatedDir -> {","127","  private static void writeConfFiles(EsInstallation esInstallation) {","128","    File confDir = esInstallation.getConfDirectory();","136","      esInstallation.getEsYmlSettings().writeToYmlSettingsFile(esInstallation.getElasticsearchYml());","137","      esInstallation.getEsJvmOptions().writeToJvmOptionFile(esInstallation.getJvmOptions());","138","      esInstallation.getLog4j2Properties().store(new FileOutputStream(esInstallation.getLog4j2PropertiesLocation()), \"log4j2 properties file for ES bundled in SonarQube\");","144","  private Process launchJava(JavaCommand javaCommand) {","149","      return processBuilder.start();","164","  private ProcessBuilder create(EsScriptCommand esScriptCommand) {","166","    commands.add(esScriptCommand.getEsInstallation().getExecutable().getAbsolutePath());","167","    commands.addAll(esScriptCommand.getOptions());","169","    return create(esScriptCommand, commands);","178","    if (javaCommand.getReadsArgumentsFromFile()) {","179","      commands.add(buildPropertiesFile(javaCommand).getAbsolutePath());","180","    } else {","181","      javaCommand.getArguments().forEach((key, value) -> {","182","        if (value != null && !value.isEmpty()) {","183","          commands.add(\"-E\" + key + \"=\" + value);","184","        }","185","      });","186","    }"],"delete":["35","import org.sonar.application.command.EsCommand;","38","import org.sonar.application.es.EsFileSystem;","71","  @Override","72","  public ProcessMonitor launch(EsCommand esCommand) {","73","    Process process = null;","75","      cleanupOutdatedEsData(esCommand);","76","      writeConfFiles(esCommand);","77","      ProcessBuilder processBuilder = create(esCommand);","78","      logLaunchedCommand(esCommand, processBuilder);","79","","80","      process = processBuilder.start();","81","","82","      return new EsProcessMonitor(process, esCommand, new EsConnectorImpl());","88","      throw new IllegalStateException(format(\"Fail to launch process [%s]\", esCommand.getProcessId().getKey()), e);","92","  private static void cleanupOutdatedEsData(EsCommand esCommand) {","93","    EsFileSystem esFileSystem = esCommand.getFileSystem();","94","    esFileSystem.getOutdatedSearchDirectories().forEach(outdatedDir -> {","106","  private static void writeConfFiles(EsCommand esCommand) {","107","    EsFileSystem esFileSystem = esCommand.getFileSystem();","108","    File confDir = esFileSystem.getConfDirectory();","116","      esCommand.getEsYmlSettings().writeToYmlSettingsFile(esFileSystem.getElasticsearchYml());","117","      esCommand.getEsJvmOptions().writeToJvmOptionFile(esFileSystem.getJvmOptions());","118","      esCommand.getLog4j2Properties().store(new FileOutputStream(esFileSystem.getLog4j2Properties()), \"log4j2 properties file for ES bundled in SonarQube\");","124","  @Override","125","  public ProcessMonitor launch(JavaCommand javaCommand) {","126","    Process process = null;","129","      ProcessCommands commands = allProcessesCommands.createAfterClean(processId.getIpcIndex());","130","","133","      process = processBuilder.start();","134","      return new ProcessCommandsProcessMonitor(process, processId, commands);","136","      \/\/ just in case","137","      if (process != null) {","138","        process.destroyForcibly();","139","      }","153","  private ProcessBuilder create(EsCommand esCommand) {","155","    commands.add(esCommand.getFileSystem().getExecutable().getAbsolutePath());","156","    commands.addAll(esCommand.getEsOptions());","158","    return create(esCommand, commands);","167","    commands.add(buildPropertiesFile(javaCommand).getAbsolutePath());"]}]}},"387eec46dbf1ecf3fd0bfc37e156b1475bf5546d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChange.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QProfileChangeDaoTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChangeTest.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChange.java":[{"add":["91","  public QProfileChangeDto toDto(@Nullable String login) {","95","    dto.setLogin(login);"],"delete":["91","  public QProfileChangeDto toDto() {"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QProfileChangeDaoTest.java":[{"add":["187","  public void selectByQuery_mapping() {","188","    when(system2.now()).thenReturn(A_DATE);","189","    when(uuidFactory.create()).thenReturn(\"C1\");","190","    insertChange(\"P1\", \"ACTIVATED\", \"Oscar\", \"data\");","191","","192","    List<QProfileChangeDto> result = underTest.selectByQuery(dbSession, new QProfileChangeQuery(\"P1\"));","193","","194","    assertThat(result).hasSize(1);","195","    QProfileChangeDto change = result.get(0);","196","    assertThat(change.getProfileKey()).isEqualTo(\"P1\");","197","    assertThat(change.getLogin()).isEqualTo(\"Oscar\");","198","    assertThat(change.getData()).isEqualTo(\"data\");","199","    assertThat(change.getChangeType()).isEqualTo(\"ACTIVATED\");","200","    assertThat(change.getKey()).isEqualTo(\"C1\");","201","    assertThat(change.getCreatedAt()).isEqualTo(A_DATE);","202","  }","203","","204","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":[{"add":["254","    db.qProfileChangeDao().insert(dbSession, change.toDto(userSession.getLogin()));"],"delete":["254","    db.qProfileChangeDao().insert(dbSession, change.toDto());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChangeTest.java":[{"add":[],"delete":[]}]}},"bc09582c5d9305cbe391fda11730a6c05a13fa5d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["263","            this.setState((state: State) => ({","264","              actives: { ...state.actives, ...actives },"],"delete":["263","            this.setState(state => ({","264","              actives: { ...state.actives, actives },"]}]}},"582cf7f4b2ed2da296e77ade8342a7b614f93376":{"changes":{"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":"MODIFY","pom.xml":"MODIFY"},"diff":{"sonar-application\/src\/main\/assembly\/conf\/sonar.properties":[{"add":["36","#----- PostgreSQL 8.x or greater"],"delete":["36","#----- PostgreSQL 8.x\/9.x"]}],"pom.xml":[{"add":["934","        <version>42.1.4<\/version>"],"delete":["934","        <version>42.1.1<\/version>"]}]}},"1eb0636088b70e8d744074fc6bccee8561c27c1c":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStep.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStepTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStep.java":[{"add":["167","        String revision = computeRevision(latestChange);"],"delete":["167","        String revision = computeRevision(previousDto, latestChange);","184","    private String computeRevision(FileSourceDto previousDto, @Nullable Changeset latestChange) {","185","      if (latestChange == null) {","186","        return previousDto.getRevision();","187","      }","188","      return latestChange.getRevision();","189","    }","190","","191","    @CheckForNull"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStepTest.java":[{"add":["433","  @Test","434","  public void clear_revision_when_no_ChangeSet() {","435","    \/\/ Existing sources","436","    long past = 150000L;","437","    dbClient.fileSourceDao().insert(dbTester.getSession(), new FileSourceDto()","438","      .setProjectUuid(PROJECT_UUID)","439","      .setFileUuid(FILE_UUID)","440","      .setDataType(Type.SOURCE)","441","      .setSrcHash(\"137f72c3708c6bd0de00a0e5a69c699b\")","442","      .setLineHashes(\"137f72c3708c6bd0de00a0e5a69c699b\")","443","      .setDataHash(\"8e84c0d961cfe364e43833c4cc4ddef5\")","444","      \/\/ Revision is missing, update will be made","445","      .setSourceData(DbFileSources.Data.newBuilder()","446","        .addLines(DbFileSources.Line.newBuilder()","447","          .setLine(1)","448","          .setSource(\"line\")","449","          .build())","450","        .build())","451","      .setCreatedAt(past)","452","      .setUpdatedAt(past));","453","    dbTester.getSession().commit();","454","","455","    initBasicReport(1);","456","","457","    underTest.execute();","458","","459","    assertThat(dbTester.countRowsOfTable(\"file_sources\")).isEqualTo(1);","460","    FileSourceDto fileSourceDto = dbClient.fileSourceDao().selectSourceByFileUuid(session, FILE_UUID);","461","    assertThat(fileSourceDto.getCreatedAt()).isEqualTo(past);","462","    assertThat(fileSourceDto.getUpdatedAt()).isEqualTo(NOW);","463","    assertThat(fileSourceDto.getRevision()).isNull();","464","  }","465",""],"delete":[]}]}},"340950d96f60bd730962296784c2465da2e3dc23":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavMeta.tsx":[{"add":["110","    \/\/ when home page is set to the default branch of a project, its name is returned as `undefined`","111","    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;"],"delete":["110","    const branch =","111","      isMainBranch(branchLike) || isLongLivingBranch(branchLike) ? branchLike.name : undefined;"]}]}},"4c9807a6d016bd7da4419f21c8a736f5f014493d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/__snapshots__\/utils-test.js.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/utils-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/__snapshots__\/utils-test.js.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/utils.js":[{"add":["34","  function putProfile(profile = null, depth = 1) {","44","  sorted","45","    .filter(","46","      profile => profile.parentKey == null || sorted.find(p => p.key === profile.parentKey) == null","47","    )","48","    .forEach(profile => putProfile(profile));"],"delete":["34","  function putProfile(profile = null, depth = 0) {","44","  putProfile();"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/__tests__\/utils-test.js":[{"add":["30","    expect(sortProfiles([profile1, profile2, profile3])).toMatchSnapshot();","37","    expect(sortProfiles([profile3, profile1, profile2])).toMatchSnapshot();","44","    expect(sortProfiles([child1, child2, parent])).toMatchSnapshot();","51","    expect(sortProfiles([profile3, profile2, profile1])).toMatchSnapshot();","52","  });","53","","54","  it('sorts partial set of inherited profiles', () => {","55","    const foo = createProfile('foo', 'bar');","56","    expect(sortProfiles([foo]), ['foo']);","57","","58","    const profile1 = createProfile('profile1', 'x');","59","    const profile2 = createProfile('profile2');","60","    const profile3 = createProfile('profile3', 'profile2');","61","    expect(sortProfiles([profile1, profile2, profile3])).toMatchSnapshot();"],"delete":["25","function checkOrder(list, order) {","26","  const listKeys = list.map(item => item.key);","27","  expect(listKeys).toEqual(order);","28","}","29","","35","    checkOrder(sortProfiles([profile1, profile2, profile3]), ['profile1', 'profile2', 'profile3']);","42","    checkOrder(sortProfiles([profile3, profile1, profile2]), ['profile1', 'profile2', 'profile3']);","49","    checkOrder(sortProfiles([child1, child2, parent]), ['parent', 'child1', 'child2']);","56","    checkOrder(sortProfiles([profile3, profile2, profile1]), ['profile1', 'profile3', 'profile2']);"]}]}},"cdfee0b5b7ec3074e16c9f94c8b4fb7ea1fea274":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/BulkIndexer.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/BulkIndexer.java":[{"add":["83","    \/\/ see https:\/\/jira.sonarsource.com\/browse\/SONAR-8075","84","    this.concurrentRequests = Math.max(1, Runtime.getRuntime().availableProcessors() \/ 5);"],"delete":["83","    this.concurrentRequests = Math.max(1, Runtime.getRuntime().availableProcessors() - 1);"]}]}},"9d95a6b0e9d0b84d2a3d76ae1a6c002a0f812b84":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDao.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDao.java":[{"add":["28","import static org.sonar.db.DatabaseUtils.executeLargeInputs;","33","    return executeLargeInputs(templateIds, partitionOfTemplateIds -> mapper(dbSession).selectByTemplateIds(partitionOfTemplateIds));"],"delete":["27","import static java.util.Collections.emptyList;","33","    return templateIds.isEmpty() ? emptyList() : mapper(dbSession).selectByTemplateIds(templateIds);"]}]}},"ad9dd01e97b800714e76baa9a31e80db7ecc1c90":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":[{"add":["36","import org.sonar.server.exceptions.UnauthorizedException;","293","  @Test","294","  public void fail_if_member_is_set_to_true_but_user_is_not_authenticated(){","295","    UserDto user = db.users().insertUser();","296","    OrganizationDto organization = db.organizations().insert();","297","    db.organizations().addMember(organization, user);","298","","299","    userSession.anonymous();","300","","301","    expectedException.expect(UnauthorizedException.class);","302","    expectedException.expectMessage(\"Authentication is required\");","303","","304","    call(ws.newRequest().setParam(PARAM_MEMBER, String.valueOf(true)));","305","  }","306","","307",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":[{"add":["90","    boolean isMember = request.mandatoryParamAsBoolean(PARAM_MEMBER);","91","    if (isMember){","92","      userSession.checkLoggedIn();","93","    }","94",""],"delete":[]}]}},"b7c7eac477c154b56c68c070629f852d5e13e8e0":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/lib\/authorization\/default_authorizer.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/lib\/authorization\/default_authorizer.rb":[{"add":["50","      compacted_group_ids=group_ids.compact","51","      gr_page_count=(compacted_group_ids.size\/page_size)","52","      gr_page_count+=1 if (compacted_group_ids.size % page_size)>0","53","","56","        gr_page_count.times do |gr_page_index|","57","          page_grids=compacted_group_ids[gr_page_index*page_size...(gr_page_index+1)*page_size]","58","          group_roles.concat(","59","            ActiveRecord::Base.connection.execute(\"SELECT resource_id FROM group_roles WHERE role='#{sanitized_role}' and (group_id is null or group_id in(#{page_grids.join(',')})) and resource_id in (#{page_rids.join(',')})\")","60","          )","61","        end","99","      # Oracle is limited to 1000 elements in clause \"IN\"","100","      compacted_group_ids=group_ids.compact","101","      page_size=999","102","      page_count=(compacted_group_ids.size\/page_size)","103","      page_count+=1 if (compacted_group_ids.size % page_size)>0","104","      global_group_roles=[]","105","      page_count.times do |page_index|","106","        page_ids=compacted_group_ids[page_index*page_size...(page_index+1)*page_size]","107","        global_group_roles.concat(","108","          GroupRole.all(:select => 'role', :conditions => [\"resource_id is null and (group_id is null or group_id in(?))\", page_ids]).map{|gr| gr.role.to_sym}","109","        )","110","      end"],"delete":["52","        group_roles.concat(","53","          ActiveRecord::Base.connection.execute(\"SELECT resource_id FROM group_roles WHERE role='#{sanitized_role}' and (group_id is null or group_id in(#{group_ids.join(',')})) and resource_id in (#{page_rids.join(',')})\")","54","        )","92","      global_group_roles=GroupRole.all(:select => 'role', :conditions => [\"resource_id is null and (group_id is null or group_id in(?))\", group_ids]).map{|gr| gr.role.to_sym}"]}]}},"d13e2d9a08ea6fc3cb29bcf4add0c4f2f12cc3b8":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportUnitTestMeasuresStepTest.java":"MODIFY","tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/SaveMeasureOnModulePlugin.java":"ADD","tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/sonar-project.properties":"ADD","tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/formula\/ReportFormulaExecutorComponentVisitorTest.java":"MODIFY","settings.gradle":"MODIFY","tests\/build.gradle":"MODIFY","tests\/projects\/analysis\/xoo-module-b-without-source\/module_b\/sonar-project.properties":"ADD","tests\/projects\/analysis\/xoo-module-b-without-source\/sonar-project.properties":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/ProjectMeasureTest.java":"ADD","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category3Suite.java":"MODIFY","tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/ModuleMeasureSensor.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/UnitTestMeasuresStep.java":"MODIFY","tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo.measures":"ADD","tests\/plugins\/save-measure-on-project-plugin\/build.gradle":"ADD"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/ReportUnitTestMeasuresStepTest.java":[{"add":["115","  public void aggregate_skipped_tests() {","260","  @Test","261","  public void aggregate_measures_when_tests_measures_are_defined_on_directory() {","262","    treeRootHolder.setRoot(builder(PROJECT, ROOT_REF)","263","      .addChildren(","264","        builder(MODULE, MODULE_REF)","265","          .addChildren(","266","            builder(DIRECTORY, DIRECTORY_REF).build())","267","          .build())","268","      .build());","269","    measureRepository.addRawMeasure(DIRECTORY_REF, TESTS_KEY, newMeasureBuilder().create(10));","270","    measureRepository.addRawMeasure(DIRECTORY_REF, TEST_ERRORS_KEY, newMeasureBuilder().create(2));","271","    measureRepository.addRawMeasure(DIRECTORY_REF, TEST_FAILURES_KEY, newMeasureBuilder().create(1));","272","    measureRepository.addRawMeasure(DIRECTORY_REF, SKIPPED_TESTS_KEY, newMeasureBuilder().create(5));","273","    measureRepository.addRawMeasure(DIRECTORY_REF, TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L));","274","","275","    underTest.execute();","276","","277","    assertThat(toEntries(measureRepository.getAddedRawMeasures(MODULE_REF))).containsOnly(","278","      entryOf(TESTS_KEY, newMeasureBuilder().create(10)),","279","      entryOf(TEST_ERRORS_KEY, newMeasureBuilder().create(2)),","280","      entryOf(TEST_FAILURES_KEY, newMeasureBuilder().create(1)),","281","      entryOf(SKIPPED_TESTS_KEY, newMeasureBuilder().create(5)),","282","      entryOf(TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L)),","283","      entryOf(TEST_SUCCESS_DENSITY_KEY, newMeasureBuilder().create(70d, 1)));","284","    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(","285","      entryOf(TESTS_KEY, newMeasureBuilder().create(10)),","286","      entryOf(TEST_ERRORS_KEY, newMeasureBuilder().create(2)),","287","      entryOf(TEST_FAILURES_KEY, newMeasureBuilder().create(1)),","288","      entryOf(SKIPPED_TESTS_KEY, newMeasureBuilder().create(5)),","289","      entryOf(TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L)),","290","      entryOf(TEST_SUCCESS_DENSITY_KEY, newMeasureBuilder().create(70d, 1)));","291","  }","292","","293","  @Test","294","  public void compute_test_success_density_measure_when_tests_measures_are_defined_at_project_level_and_no_children() {","295","    treeRootHolder.setRoot(builder(PROJECT, ROOT_REF).build());","296","    measureRepository.addRawMeasure(ROOT_REF, TESTS_KEY, newMeasureBuilder().create(10));","297","    measureRepository.addRawMeasure(ROOT_REF, TEST_ERRORS_KEY, newMeasureBuilder().create(2));","298","    measureRepository.addRawMeasure(ROOT_REF, TEST_FAILURES_KEY, newMeasureBuilder().create(1));","299","    measureRepository.addRawMeasure(ROOT_REF, SKIPPED_TESTS_KEY, newMeasureBuilder().create(5));","300","    measureRepository.addRawMeasure(ROOT_REF, TEST_EXECUTION_TIME_KEY, newMeasureBuilder().create(100L));","301","","302","    underTest.execute();","303","","304","    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(","305","      entryOf(TEST_SUCCESS_DENSITY_KEY, newMeasureBuilder().create(70d, 1)));","306","  }","307",""],"delete":["115","  public void aggregate_skipped_tests_time() {"]}],"tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/SaveMeasureOnModulePlugin.java":[{"add":[],"delete":[]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/sonar-project.properties":[{"add":[],"delete":[]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/formula\/ReportFormulaExecutorComponentVisitorTest.java":[{"add":["25","import org.junit.rules.ExpectedException;","51","import static org.sonar.test.ExceptionCauseMatcher.hasType;","83","  public ExpectedException expectedException = ExpectedException.none();","84","  @Rule","217","  @Test","218","  public void compute_measure_on_project_without_children() {","219","    ReportComponent root = builder(PROJECT, ROOT_REF).build();","220","    treeRootHolder.setRoot(root);","221","    measureRepository.addRawMeasure(ROOT_REF, LINES_KEY, newMeasureBuilder().create(10));","222","","223","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","224","      .visit(root);","225","","226","    assertThat(toEntries(measureRepository.getAddedRawMeasures(ROOT_REF))).containsOnly(entryOf(NCLOC_KEY, newMeasureBuilder().create(10)));","227","  }","228","","229","  @Test","230","  public void ignore_measure_defined_on_project_when_measure_is_defined_on_leaf() {","231","    ReportComponent root = builder(PROJECT, ROOT_REF)","232","      .addChildren(","233","        builder(Component.Type.FILE, FILE_1_REF).build())","234","      .build();","235","    treeRootHolder.setRoot(root);","236","    measureRepository.addRawMeasure(ROOT_REF, LINES_KEY, newMeasureBuilder().create(10));","237","    measureRepository.addRawMeasure(FILE_1_REF, LINES_KEY, newMeasureBuilder().create(2));","238","","239","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","240","      .visit(root);","241","","242","    assertAddedRawMeasure(ROOT_REF, 2);","243","    assertAddedRawMeasure(FILE_1_REF, 2);","244","  }","245","","246","  @Test","247","  public void fail_when_trying_to_compute_file_measure_already_existing_in_report() {","248","    ReportComponent root = builder(PROJECT, ROOT_REF)","249","      .addChildren(","250","        builder(Component.Type.FILE, FILE_1_REF).build())","251","      .build();","252","    treeRootHolder.setRoot(root);","253","    measureRepository.addRawMeasure(FILE_1_REF, NCLOC_KEY, newMeasureBuilder().create(2));","254","","255","    expectedException.expectCause(hasType(UnsupportedOperationException.class)","256","      .andMessage(String.format(\"A measure can only be set once for Component (ref=%s), Metric (key=%s)\", FILE_1_REF, NCLOC_KEY)));","257","","258","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","259","      .visit(root);","260","  }","261","","262","  @Test","263","  public void fail_on_project_without_children_already_having_computed_measure() {","264","    ReportComponent root = builder(PROJECT, ROOT_REF).build();","265","    treeRootHolder.setRoot(root);","266","    measureRepository.addRawMeasure(ROOT_REF, NCLOC_KEY, newMeasureBuilder().create(10));","267","","268","    expectedException.expectCause(hasType(UnsupportedOperationException.class)","269","      .andMessage(String.format(\"A measure can only be set once for Component (ref=%s), Metric (key=%s)\", ROOT_REF, NCLOC_KEY)));","270","","271","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","272","      .visit(root);","273","  }","274","","275","  @Test","276","  public void fail_on_project_containing_module_without_children_already_having_computed_measure() {","277","    ReportComponent root = builder(PROJECT, ROOT_REF)","278","      .addChildren(","279","        ReportComponent.builder(MODULE, MODULE_1_REF).build(),","280","        builder(Component.Type.FILE, FILE_1_REF).build())","281","      .build();","282","    treeRootHolder.setRoot(root);","283","    measureRepository.addRawMeasure(FILE_1_REF, LINES_KEY, newMeasureBuilder().create(10));","284","    \/\/ Ncloc is already computed on module","285","    measureRepository.addRawMeasure(MODULE_1_REF, NCLOC_KEY, newMeasureBuilder().create(3));","286","","287","    expectedException.expectCause(hasType(UnsupportedOperationException.class)","288","      .andMessage(String.format(\"A measure can only be set once for Component (ref=%s), Metric (key=%s)\", MODULE_1_REF, NCLOC_KEY)));","289","","290","    new PathAwareCrawler<>(formulaExecutorComponentVisitor(new FakeFormula()))","291","      .visit(root);","292","  }","293",""],"delete":[]}],"settings.gradle":[{"add":["52","include 'tests:plugins:save-measure-on-project-plugin'"],"delete":[]}],"tests\/build.gradle":[{"add":["13","    ':tests:plugins:backdating-plugin-v1',","14","    ':tests:plugins:backdating-plugin-v2',","15","    ':tests:plugins:backdating-customplugin',","28","    ':tests:plugins:posttask-plugin',","32","    ':tests:plugins:save-measure-on-project-plugin',","41","    ':tests:plugins:ws-plugin'"],"delete":["35","    ':tests:plugins:posttask-plugin',","37","    ':tests:plugins:ws-plugin',","38","    ':tests:plugins:backdating-plugin-v1',","39","    ':tests:plugins:backdating-plugin-v2',","40","    ':tests:plugins:backdating-customplugin'"]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_b\/sonar-project.properties":[{"add":[],"delete":[]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/sonar-project.properties":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/ProjectMeasureTest.java":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category3Suite.java":[{"add":["34","import org.sonarqube.tests.analysis.ProjectMeasureTest;","69","  RedirectTest.class,","70","  ProjectMeasureTest.class","94","    \/\/ used by ProjectWithoutSourceTest","95","    .addPlugin(pluginArtifact(\"save-measure-on-project-plugin\"))","96","","97","    .setServerProperty(\"sonar.ce.javaAdditionalOpts\", \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\")","98",""],"delete":["68","  RedirectTest.class"]}],"tests\/plugins\/save-measure-on-project-plugin\/src\/main\/java\/org\/sonar\/measure\/ModuleMeasureSensor.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/UnitTestMeasuresStep.java":[{"add":["32","import org.sonar.server.computation.task.projectanalysis.formula.counter.LongSumCounter;","50","  private static final String[] METRICS = new String[] {TESTS_KEY, TEST_ERRORS_KEY, TEST_FAILURES_KEY, SKIPPED_TESTS_KEY, TEST_SUCCESS_DENSITY_KEY, TEST_EXECUTION_TIME_KEY};","52","  private static final ImmutableList<Formula> FORMULAS = ImmutableList.of(new UnitTestsFormula());","81","      Component leaf = counter.getLeaf();","84","          return createIntMeasure(context.getComponent(), leaf, counter.testsCounter.getValue());","86","          return createIntMeasure(context.getComponent(), leaf, counter.testsErrorsCounter.getValue());","88","          return createIntMeasure(context.getComponent(), leaf, counter.testsFailuresCounter.getValue());","89","        case SKIPPED_TESTS_KEY:","90","          return createIntMeasure(context.getComponent(), leaf, counter.skippedTestsCounter.getValue());","91","        case TEST_EXECUTION_TIME_KEY:","92","          return createLongMeasure(context.getComponent(), leaf, counter.testExecutionTimeCounter.getValue());","100","    private static Optional<Measure> createIntMeasure(Component currentComponent, Component leafComponent, Optional<Integer> metricValue) {","101","      if (metricValue.isPresent() && leafComponent.getType().isDeeperThan(currentComponent.getType())) {","102","        return Optional.of(Measure.newMeasureBuilder().create(metricValue.get()));","103","      }","104","      return Optional.absent();","105","    }","106","","107","    private static Optional<Measure> createLongMeasure(Component currentComponent, Component leafComponent, Optional<Long> metricValue) {","108","      if (metricValue.isPresent() && leafComponent.getType().isDeeperThan(currentComponent.getType())) {","142","    private final IntSumCounter skippedTestsCounter = new IntSumCounter(SKIPPED_TESTS_KEY);","143","    private final LongSumCounter testExecutionTimeCounter = new LongSumCounter(TEST_EXECUTION_TIME_KEY);","144","","145","    private Component leaf;","152","      skippedTestsCounter.aggregate(counter.skippedTestsCounter);","153","      testExecutionTimeCounter.aggregate(counter.testExecutionTimeCounter);","158","      this.leaf = context.getLeaf();","162","      skippedTestsCounter.initialize(context);","163","      testExecutionTimeCounter.initialize(context);","164","    }","165","","166","    Component getLeaf() {","167","      return leaf;"],"delete":["24","import org.sonar.server.computation.task.projectanalysis.component.CrawlerDepthLimit;","44","import static org.sonar.server.computation.task.projectanalysis.formula.SumFormula.createIntSumFormula;","45","import static org.sonar.server.computation.task.projectanalysis.formula.SumFormula.createLongSumFormula;","52","  private static final String[] METRICS = new String[] {TESTS_KEY, TEST_ERRORS_KEY, TEST_FAILURES_KEY, TEST_SUCCESS_DENSITY_KEY};","54","  private static final ImmutableList<Formula> FORMULAS = ImmutableList.of(","55","    createLongSumFormula(TEST_EXECUTION_TIME_KEY),","56","    createIntSumFormula(SKIPPED_TESTS_KEY),","57","    new UnitTestsFormula());","88","          return createMeasure(context.getComponent().getType(), counter.testsCounter.getValue());","90","          return createMeasure(context.getComponent().getType(), counter.testsErrorsCounter.getValue());","92","          return createMeasure(context.getComponent().getType(), counter.testsFailuresCounter.getValue());","100","    private static Optional<Measure> createMeasure(Component.Type componentType, Optional<Integer> metricValue) {","101","      if (metricValue.isPresent() && CrawlerDepthLimit.LEAVES.isDeeperThan(componentType)) {"]}],"tests\/projects\/analysis\/xoo-module-b-without-source\/module_a\/src\/main\/xoo\/com\/sonar\/it\/samples\/modules\/a1\/HelloA1.xoo.measures":[{"add":[],"delete":[]}],"tests\/plugins\/save-measure-on-project-plugin\/build.gradle":[{"add":[],"delete":[]}]}},"59e1f8eca37d7a37e0837e437ab3e6eb38a7dfea":{"changes":{"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/rule\/DeprecatedResourceApiSensor.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/issues\/IssuesOnDirMediumTest.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/deprecated\/DeprecatedApiMediumTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/resources\/Directory.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputDir.java":"MODIFY"},"diff":{"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/rule\/DeprecatedResourceApiSensor.java":[{"add":["34","@SuppressWarnings(\"deprecation\")"],"delete":[]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/issues\/IssuesOnDirMediumTest.java":[{"add":["86","  @Test","87","  public void issueOnRootFolder() throws IOException {","88","","89","    File baseDir = temp.getRoot();","90","","91","    File xooFile1 = new File(baseDir, \"sample1.xoo\");","92","    FileUtils.write(xooFile1, \"Sample1 xoo\\ncontent\");","93","","94","    File xooFile2 = new File(baseDir, \"sample2.xoo\");","95","    FileUtils.write(xooFile2, \"Sample2 xoo\\ncontent\");","96","","97","    TaskResult result = tester.newTask()","98","      .properties(ImmutableMap.<String, String>builder()","99","        .put(\"sonar.task\", \"scan\")","100","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","101","        .put(\"sonar.projectKey\", \"com.foo.project\")","102","        .put(\"sonar.projectName\", \"Foo Project\")","103","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","104","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","105","        .put(\"sonar.sources\", \".\")","106","        .build())","107","      .start();","108","","109","    assertThat(result.issuesFor(result.inputDir(\"\"))).hasSize(2);","110","  }","111",""],"delete":[]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/deprecated\/DeprecatedApiMediumTest.java":[{"add":["97","  @Test","98","  public void createIssueOnRootDir() throws IOException {","99","","100","    File baseDir = temp.getRoot();","101","","102","    File xooFileInRootDir = new File(baseDir, \"sample.xoo\");","103","    FileUtils.write(xooFileInRootDir, \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\");","104","","105","    File xooFileInAnotherDir = new File(baseDir, \"package\/sample.xoo\");","106","    FileUtils.write(xooFileInAnotherDir, \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\");","107","","108","    TaskResult result = tester.newTask()","109","      .properties(ImmutableMap.<String, String>builder()","110","        .put(\"sonar.task\", \"scan\")","111","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","112","        .put(\"sonar.projectKey\", \"com.foo.project\")","113","        .put(\"sonar.projectName\", \"Foo Project\")","114","        .put(\"sonar.projectVersion\", \"1.0-SNAPSHOT\")","115","        .put(\"sonar.projectDescription\", \"Description of Foo Project\")","116","        .put(\"sonar.sources\", \".\")","117","        .build())","118","      .start();","119","","120","    assertThat(result.issuesFor(result.inputFile(\"sample.xoo\"))).extracting(\"msg\", \"line\").containsOnly(","121","      tuple(\"Issue created using deprecated API\", 0),","122","      tuple(\"Issue created using deprecated API\", 1));","123","    assertThat(result.issuesFor(result.inputFile(\"package\/sample.xoo\"))).extracting(\"msg\", \"line\").containsOnly(","124","      tuple(\"Issue created using deprecated API\", 0),","125","      tuple(\"Issue created using deprecated API\", 1));","126","    assertThat(result.issuesFor(result.inputDir(\"\"))).extracting(\"msg\", \"line\").containsOnly(","127","      tuple(\"Issue created using deprecated API\", 0));","128","    assertThat(result.issuesFor(result.inputDir(\"package\"))).extracting(\"msg\", \"line\").containsOnly(","129","      tuple(\"Issue created using deprecated API\", 0));","130","","131","  }","132",""],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/resources\/Directory.java":[{"add":["21","import javax.annotation.CheckForNull;","141","    d.setKey(normalizedPath == null ? SEPARATOR : normalizedPath);","142","    d.setPath(normalizedPath == null ? \"\" : normalizedPath);"],"delete":["27","import javax.annotation.CheckForNull;","28","","142","    d.setKey(normalizedPath);","143","    d.setPath(normalizedPath);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputDir.java":[{"add":["23","import org.apache.commons.lang.StringUtils;","70","    StringBuilder sb = new StringBuilder().append(moduleKey).append(\":\");","71","    if (StringUtils.isEmpty(relativePath)) {","72","      sb.append(\"\/\");","73","    } else {","74","      sb.append(relativePath);","75","    }","76","    return sb.toString();"],"delete":["69","    return new StringBuilder().append(moduleKey).append(\":\").append(relativePath).toString();"]}]}},"84d4f441879de01734bb9041fc0cdfbd461386ee":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/api\/java_ws_controller.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/api\/java_ws_controller.rb":[{"add":["51","    (params[:wspath]=='batch' && params[:wsaction]=='index') ||","52","      (params[:wspath]=='batch' && params[:wsaction]=='file') ||","53","      (params[:wspath]=='api\/system' && params[:wsaction]=='db_migration_status') ||","54","      (params[:wspath]=='api\/system' && params[:wsaction]=='status')"],"delete":["51","    (params[:wspath]=='batch' && params[:wsaction]=='index') || (params[:wspath]=='batch' && params[:wsaction]=='file')"]}]}},"f0956c6ec3826e73e40313e7edb06a87c1570c6f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/controller.js":[{"add":["97","        that.options.app.state.set({","98","          page: r.p,","99","          maxResultsReached: r.p * r.ps >= r.total","100","        });"],"delete":["97","        that.options.app.state.set({ page: r.p });"]}]}},"5076cc2f6b9c421359a1c711a20f9d1965226cec":{"changes":{"server\/sonar-process-monitor\/src\/main\/java\/org\/sonar\/process\/monitor\/Monitor.java":"MODIFY"},"diff":{"server\/sonar-process-monitor\/src\/main\/java\/org\/sonar\/process\/monitor\/Monitor.java":[{"add":["33","import org.sonar.process.ProcessId;","37","import static org.sonar.process.DefaultProcessCommands.reset;","38","","128","    \/\/ reset sharedmemory of App","129","    reset(fileSystem.getTempDir(), ProcessId.APP.getIpcIndex());"],"delete":[]}]}},"26c5dfb16763787a4ffe2219def80ebb3b20bdfd":{"changes":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueActionTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueActionTest.java":[{"add":["72","    assertThat(comment.htmlText()).isEqualTo(\"this is my <strong>comment<\/strong>\");","81","    assertThat(reloaded.comments().get(0).htmlText()).isEqualTo(\"this is my <strong>comment<\/strong>\");"],"delete":["72","    assertThat(comment.htmlText()).isEqualTo(\"this is my <em>comment<\/em>\");","81","    assertThat(reloaded.comments().get(0).htmlText()).isEqualTo(\"this is my <em>comment<\/em>\");"]}]}},"337a26aea27d440e56e1a34ef660be0edadd629c":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":[{"add":["159","    OrganizationDto organization = db.organizations().insert();","160","    ComponentDto otherProject = db.components().insertPublicProject(organization);","163","        .setProjectKey(otherProject.getDbKey())","167","    expectedException.expectMessage(\"ProjectKey in report (\" + otherProject.getDbKey() + \") is not consistent with projectKey under which the report has been submitted (\" + PROJECT_KEY + \")\");","173","  public void execute_sets_branch_even_if_MessageException_is_thrown_because_projectKey_in_report_is_different_from_componentKey_in_CE_task() {","174","    OrganizationDto organization = db.organizations().insert();","175","    ComponentDto otherProject = db.components().insertPublicProject(organization);","178","        .setProjectKey(otherProject.getDbKey())","179","        .build());","180","","181","    try {","182","      underTest.execute();","183","    } catch (MessageException e) {","184","      assertThat(analysisMetadataHolder.getBranch()).isNotNull();","185","    }","186","  }","187","","188","  @Test","189","  public void execute_sets_analysis_date_even_if_MessageException_is_thrown_because_projectKey_is_different_from_componentKey_in_CE_task() {","190","    OrganizationDto organization = db.organizations().insert();","191","    ComponentDto otherProject = db.components().insertPublicProject(organization);","192","    reportReader.setMetadata(","193","      ScannerReport.Metadata.newBuilder()","194","        .setProjectKey(otherProject.getDbKey())"],"delete":["161","        .setProjectKey(\"some other key\")","165","    expectedException.expectMessage(\"ProjectKey in report (some other key) is not consistent with projectKey under which the report as been submitted (\" + PROJECT_KEY + \")\");","171","  public void execute_sets_analysis_date_even_if_MessageException_is_thrown_because_projectKey_is_different_from_componentKey_in_CE_task() {","174","        .setProjectKey(\"some other key\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":[{"add":["90","    Runnable projectValidation = loadProject(reportMetadata, organization);","93","    projectValidation.run();","102","  \/**","103","   * @return a {@link Runnable} to execute some checks on the project at the end of the step","104","   *\/","105","  private Runnable loadProject(ScannerReport.Metadata reportMetadata, Organization organization) {","107","    String componentKey = ceTask.getComponentKey();","108","    if (componentKey == null) {","109","      throw MessageException.of(format(","110","        \"Compute Engine task component key is null. Project with UUID %s must have been deleted since report was uploaded. Can not proceed.\",","111","        ceTask.getComponentUuid()));","112","    }","115","    return () -> {","116","      if (!componentKey.equals(reportProjectKey)) {","117","        throw MessageException.of(format(","118","          \"ProjectKey in report (%s) is not consistent with projectKey under which the report has been submitted (%s)\",","119","          reportProjectKey,","120","          componentKey));","121","      }","122","      if (!dto.getOrganizationUuid().equals(organization.getUuid())) {","123","        throw MessageException.of(format(\"Project is not in the expected organization: %s\", organization.getKey()));","124","      }","125","      if (dto.getMainBranchProjectUuid() != null) {","126","        throw MessageException.of(\"Project should not reference a branch\");","127","      }","128","    };"],"delete":["90","    loadProject(reportMetadata, organization);","101","  private void loadProject(ScannerReport.Metadata reportMetadata, Organization organization) {","103","    checkProjectKeyConsistency(reportProjectKey);","105","    if (!dto.getOrganizationUuid().equals(organization.getUuid())) {","106","      throw MessageException.of(format(\"Project is not in the expected organization: %s\", organization.getKey()));","107","    }","108","    if (dto.getMainBranchProjectUuid() != null) {","109","      throw MessageException.of(\"Project should not reference a branch\");","110","    }","166","  private void checkProjectKeyConsistency(String reportProjectKey) {","167","    String componentKey = ceTask.getComponentKey();","168","    if (componentKey == null) {","169","      throw MessageException.of(format(","170","        \"Compute Engine task component key is null. Project with UUID %s must have been deleted since report was uploaded. Can not proceed.\",","171","        ceTask.getComponentUuid()));","172","    }","173","    if (!componentKey.equals(reportProjectKey)) {","174","      throw MessageException.of(format(","175","        \"ProjectKey in report (%s) is not consistent with projectKey under which the report as been submitted (%s)\",","176","        reportProjectKey,","177","        componentKey));","178","    }","179","  }","180",""]}]}},"68ac319d78630e20a13e6b540fee4a9011f40ef1":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/UserUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/UserUpdater.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/UserDto.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/UserUpdaterTest.java":[{"add":["260","  public void fail_to_create_user_with_space_in_login() {","261","    try {","262","      userUpdater.create(NewUser.create()","263","        .setLogin(\"mari us\")","264","        .setName(\"Marius\")","265","        .setEmail(\"marius@mail.com\")","266","        .setPassword(\"password\"));","267","      fail();","268","    } catch (BadRequestException e) {","269","      assertThat(e.errors().messages()).containsOnly(Message.of(\"user.bad_login\"));","270","    }","271","  }","272","","273","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/UserUpdater.java":[{"add":["279","      } else if (!login.matches(\"\\\\A\\\\w[\\\\w\\\\.\\\\-_@]+\\\\z\")) {"],"delete":["279","      } else if (!login.matches(\"\\\\A\\\\w[\\\\w\\\\.\\\\-_@\\\\s]+\\\\z\")) {"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/UserDto.java":[{"add":["61","  \/**","62","   * Spaces were authorized before SQ 5.4.","63","   * For versions 5.4+ it's not possible to create a login with a space character.","64","   *\/"],"delete":[]}]}},"2cc874a266bae362d26b69ce0e8e8ed0d0708b67":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/facets\/quality-profile-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/facets\/quality-profile-facet.js":[{"add":["75","      this.options.app.state.updateFilter({ activation: 'false', active_severities: null });"],"delete":["75","      this.options.app.state.updateFilter({ activation: 'false' });"]}]}},"4214a7a047224ad450230ce914598c6b5e137392":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RegisterQualityProfiles.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RegisterQualityProfiles.java":[{"add":[],"delete":["160","        LOGGER.info(\"Built-in quality profile [{}] does not have any active rules\", qp.getName());"]}]}},"eb451f2c3aafc231cf05c81ff3e94f73b98ee586":{"changes":{"server\/sonar-db-core\/src\/testFixtures\/java\/org\/sonar\/db\/CoreDbTester.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/projectmeasures\/DropTechIndexOnUuidOfProjectMeasuresTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/groupsusers\/DropIndexOnGroupIdOfGroupsUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/DropIndexOnActiveRuleIdOfActiveRuleParametersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/userroles\/AddIndexOnUserUuidOfUserRolesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/DropIndexOnRuleIdColumnOfActiveRulesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/AddUniqueIndexOnUserUuidAndGroupIdOfGroupsUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/AddIndexToDeprecatedRuleKeysTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/rulesparameters\/AddIndexesToRulesParametersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/projectmeasures\/AddTechIndexOnUuidOfProjectMeasuresTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/grouproles\/DropIndexOnGroupIdOfGroupRolesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/AddIndexToActiveRulesTable.java":"MODIFY","server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/userroles\/DropIndexOnUserIdOfUserRolesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/projectmeasures\/DropIndexOnMetricIdOfProjectMeasuresTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/issuechanges\/AddIndexOnKeeOfIssueChangesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/permissiontemplates\/fk\/permtplcharacteristics\/AddUniqueIndexOnTemplateUuidAndPermissionKeyColumnsOfPermTplCharacteristicsTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rulesprofiles\/DropUniqueIndexOnKeeColumnOfRulesProfilesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/livemeasures\/AddIndexOnMetricUuidOfLiveMeasuresTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/AddUniqueIndexOnUserUuidAndQProfileUuidOfQProfileEditUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rulesprofiles\/fk\/activerules\/DropUniqueIndexOnProfileIdColumnOfActiveRulesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/Validations.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/livemeasures\/AddIndexOnProjectUuidOfLiveMeasuresTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/grouproles\/AddIndexOnGroupUuidOfGroupRolesTable.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ValidationsTest.java":"MODIFY","server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY","server\/sonar-db-core\/src\/test\/resources\/org\/sonar\/db\/DatabaseUtilsTest\/sql.sql":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/rulesparameters\/DropIndexesOnRuleIdColumnOfRulesParametersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/DropIndexOnRuleIdColumnOfDeprecatedRuleKeysTable.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/CreateTableBuilderTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/projectmeasures\/AddIndexOnMetricUuidOfProjectMeasuresTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/DropIndexOnGroupIdOfQProfileEditGroupsTable.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/CreateIndexBuilderTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/issuechanges\/AddIndexOnIssueKeyOfIssueChangesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/DropUniqueIndexOnUuidColumnOfUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/DropUniqueIndexOnUserIdAndGroupIdOfGroupsUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v82\/AddIndexOnSlugOfProjectAlmSettings.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/AddIndexOnGroupUuidOfQProfileEditGroupsTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/qualitygates\/DropUniqueIndexOnUuidColumnOfQualityGatesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/DropIndexBuilder.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/groupsusers\/AddIndexOnGroupUuidOfGroupsUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DropIndexChange.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/AddIndexOnUserUuidOfGroupsUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/permissiontemplates\/fk\/permtplcharacteristics\/DropUniqueIndexOnTemplateIdAndPermissionKeyColumnsOfPermTplCharacteristicsTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/DropUniqueIndexOnUserIdAndQProfileUuidOfQProfileEditUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/AddIndexOnActiveRuleUuidOfActiveRuleParametersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rulesprofiles\/fk\/activerules\/AddUniqueIndexOnProfileUuidColumnOfActiveRulesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/AddIndexOnUserUuidOfOrganizationMembersTable.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/DropIndexOnUserIdOfGroupsUsersTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/cequeue\/DropUniqueIndexOnUuidColumnOfCeQueueTable.java":"MODIFY","server\/sonar-db-core\/src\/testFixtures\/java\/org\/sonar\/db\/CoreTestDb.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/issues\/AddIndexesToIssuesTable.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/DropIndexOnUserIdOfOrganizationMembersTable.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/DropIndexBuilderTest.java":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/testFixtures\/java\/org\/sonar\/db\/CoreDbTester.java":[{"add":["36","    return createForSchema(testClass, filename, true);","37","  }","38","","39","  public static CoreDbTester createForSchema(Class testClass, String filename, boolean databaseToUpper) {","42","    return new CoreDbTester(CoreTestDb.create(schemaPath, databaseToUpper));"],"delete":["38","    return new CoreDbTester(CoreTestDb.create(schemaPath));"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/projectmeasures\/DropTechIndexOnUuidOfProjectMeasuresTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropTechIndexOnUuidOfProjectMeasuresTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropTechIndexOnUuidOfProjectMeasuresTable extends DdlChange {","33","    super(db);","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists(INDEX_NAME)) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists(String name) throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, name, connection);","49","    }","50","  }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/groupsusers\/DropIndexOnGroupIdOfGroupsUsersTable.java":[{"add":["23","import java.util.Optional;","24","import java.util.function.Consumer;","41","    Consumer<String> dropIndex = idx -> context.execute(new DropIndexBuilder(getDialect())","42","      .setTable(TABLE_NAME)","43","      .setName(idx)","44","      .build());","45","","46","    findExistingIndexName(INDEX_NAME1).ifPresent(dropIndex);","47","    findExistingIndexName(INDEX_NAME2).ifPresent(dropIndex);","50","  private Optional<String> findExistingIndexName(String indexName) throws SQLException {","52","      return DatabaseUtils.findExistingIndex(connection, TABLE_NAME, indexName);"],"delete":["39","    if (indexExists(INDEX_NAME1)) {","40","      context.execute(new DropIndexBuilder(getDialect())","41","        .setTable(TABLE_NAME)","42","        .setName(INDEX_NAME1)","43","        .build());","44","    }","45","    if (indexExists(INDEX_NAME2)) {","46","      context.execute(new DropIndexBuilder(getDialect())","47","        .setTable(TABLE_NAME)","48","        .setName(INDEX_NAME2)","49","        .build());","50","    }","53","  private boolean indexExists(String name) throws SQLException {","55","      return DatabaseUtils.indexExists(TABLE_NAME, name, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/DropIndexOnActiveRuleIdOfActiveRuleParametersTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnActiveRuleIdOfActiveRuleParametersTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnActiveRuleIdOfActiveRuleParametersTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/userroles\/AddIndexOnUserUuidOfUserRolesTable.java":[{"add":["56","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["56","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/DropIndexOnRuleIdColumnOfActiveRulesTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnRuleIdColumnOfActiveRulesTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.SQLException;","23","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","24","import org.sonar.server.platform.db.migration.step.DdlChange;","26","public class DropIndexOnRuleIdColumnOfActiveRulesTable extends DdlChange {","31","    super(db);","33","","34","  @Override","35","  public void execute(Context context) throws SQLException {","36","    context.execute(new DropIndexBuilder(getDialect())","37","      .setTable(TABLE_NAME)","38","      .setName(INDEX_NAME)","39","      .build());","40","  }","41",""]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/AddUniqueIndexOnUserUuidAndGroupIdOfGroupsUsersTable.java":[{"add":["60","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["60","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/AddIndexToDeprecatedRuleKeysTable.java":[{"add":["58","      return DatabaseUtils.indexExistsIgnoreCase(TABLE, INDEX_NAME, connection);"],"delete":["58","      return DatabaseUtils.indexExists(TABLE, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/rulesparameters\/AddIndexesToRulesParametersTable.java":[{"add":["76","      return !DatabaseUtils.indexExistsIgnoreCase(TABLE, index, connection);"],"delete":["76","      return !DatabaseUtils.indexExists(TABLE, index, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/projectmeasures\/AddTechIndexOnUuidOfProjectMeasuresTable.java":[{"add":["57","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, name, connection);"],"delete":["57","      return DatabaseUtils.indexExists(TABLE_NAME, name, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/grouproles\/DropIndexOnGroupIdOfGroupRolesTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnGroupIdOfGroupRolesTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnGroupIdOfGroupRolesTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/AddIndexToActiveRulesTable.java":[{"add":["65","      return DatabaseUtils.indexExistsIgnoreCase(TABLE, INDEX_NAME, connection);"],"delete":["65","      return DatabaseUtils.indexExists(TABLE, INDEX_NAME, connection);"]}],"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":[{"add":["32","import java.util.Locale;","60","  public CoreDbTester dbTester = CoreDbTester.createForSchema(DatabaseUtilsTest.class, \"sql.sql\", false);","67","  public void find_index_with_lower_case() throws SQLException {","68","    String tableName = \"schema_migrations\";","69","    String indexName = \"lower_case_name\";","70","    try (Connection connection = dbTester.openConnection()) {","71","      assertThat(DatabaseUtils.findExistingIndex(connection, tableName, indexName)).contains(indexName);","72","      assertThat(DatabaseUtils.findExistingIndex(connection, tableName.toLowerCase(Locale.US), indexName)).contains(indexName);","73","    }","74","  }","76","  @Test","77","  public void find_index_with_upper_case() throws SQLException {","78","    String tableName = \"schema_migrations\";","79","    String indexName = \"UPPER_CASE_NAME\";","80","    try (Connection connection = dbTester.openConnection()) {","81","      assertThat(DatabaseUtils.findExistingIndex(connection, tableName, indexName)).contains(indexName);","82","      assertThat(DatabaseUtils.findExistingIndex(connection, tableName, indexName.toLowerCase(Locale.US))).contains(indexName);","83","      assertThat(DatabaseUtils.findExistingIndex(connection, tableName.toLowerCase(Locale.US), indexName.toLowerCase(Locale.US))).contains(indexName);","84","    }","85","  }","86","","87","  @Test","88","  public void should_close_connection() throws Exception {","89","    try (Connection connection = dbTester.openConnection()) {","90","      assertThat(isClosed(connection)).isFalse();","91","","92","      DatabaseUtils.closeQuietly(connection);","93","      assertThat(isClosed(connection)).isTrue();","94","    }","105","    try (Connection connection = dbTester.openConnection(); PreparedStatement statement = connection.prepareStatement(selectDual())) {","188","      .containsExactly(","189","        myComparable(-1), myComparable(2), myComparable(4), myComparable(5), myComparable(10));","312","    assertThat(outputs).containsExactly(1, 2, 3);","313","    assertThat(partitions).containsExactly(asList(1, 2), asList(3));"],"delete":["59","  public CoreDbTester dbTester = CoreDbTester.createForSchema(DatabaseUtilsTest.class, \"just_one_table.sql\");","66","  public void should_close_connection() throws Exception {","67","    Connection connection = dbTester.openConnection();","68","    assertThat(isClosed(connection)).isFalse();","70","    DatabaseUtils.closeQuietly(connection);","71","    assertThat(isClosed(connection)).isTrue();","82","    Connection connection = dbTester.openConnection();","83","    try {","84","      PreparedStatement statement = connection.prepareStatement(selectDual());","92","    } finally {","93","      DatabaseUtils.closeQuietly(connection);","169","        .containsExactly(","170","          myComparable(-1), myComparable(2), myComparable(4), myComparable(5), myComparable(10));","293","    assertThat(outputs).containsExactly(1,2,3);","294","    assertThat(partitions).containsExactly(asList(1,2), asList(3));"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/userroles\/DropIndexOnUserIdOfUserRolesTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnUserIdOfUserRolesTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnUserIdOfUserRolesTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/projectmeasures\/DropIndexOnMetricIdOfProjectMeasuresTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnMetricIdOfProjectMeasuresTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnMetricIdOfProjectMeasuresTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/issuechanges\/AddIndexOnKeeOfIssueChangesTable.java":[{"add":["56","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["56","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/permissiontemplates\/fk\/permtplcharacteristics\/AddUniqueIndexOnTemplateUuidAndPermissionKeyColumnsOfPermTplCharacteristicsTable.java":[{"add":["63","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["63","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rulesprofiles\/DropUniqueIndexOnKeeColumnOfRulesProfilesTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnKeeColumnOfRulesProfilesTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropUniqueIndexOnKeeColumnOfRulesProfilesTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/livemeasures\/AddIndexOnMetricUuidOfLiveMeasuresTable.java":[{"add":["62","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["62","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/AddUniqueIndexOnUserUuidAndQProfileUuidOfQProfileEditUsersTable.java":[{"add":["60","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["60","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rulesprofiles\/fk\/activerules\/DropUniqueIndexOnProfileIdColumnOfActiveRulesTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnProfileIdColumnOfActiveRulesTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropUniqueIndexOnProfileIdColumnOfActiveRulesTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/Validations.java":[{"add":["38","  private static final CharMatcher UPPER_CASE_ASCII_LETTERS_CHAR_MATCHER = inRange('A', 'Z');","94","  public static String validateIndexNameIgnoreCase(@Nullable String indexName) {","95","    checkDbIdentifier(indexName, \"Index name\", INDEX_NAME_MAX_SIZE, true);","96","    return indexName;","97","  }","98","","110","    return checkDbIdentifier(identifier, identifierDesc, maxSize, false);","111","  }","112","","113","  static String checkDbIdentifier(@Nullable String identifier, String identifierDesc, int maxSize, boolean ignoreCase) {","119","    if (ignoreCase) {","120","      checkDbIdentifierCharactersIgnoreCase(identifier, identifierDesc);","121","    } else {","122","      checkDbIdentifierCharacters(identifier, identifierDesc);","123","    }","136","","137","  private static void checkDbIdentifierCharactersIgnoreCase(String identifier, String identifierDesc) {","138","    checkArgument(identifier.length() > 0, \"Identifier must not be empty\");","139","    checkArgument(LOWER_CASE_ASCII_LETTERS_CHAR_MATCHER.or(DIGIT_CHAR_MATCHER).or(UPPER_CASE_ASCII_LETTERS_CHAR_MATCHER).or(anyOf(\"_\")).matchesAllOf(identifier),","140","      \"%s must contain only alphanumeric chars or '_', got '%s'\", identifierDesc, identifier);","141","    checkArgument(","142","      DIGIT_CHAR_MATCHER.or(UNDERSCORE_CHAR_MATCHER).matchesNoneOf(identifier.subSequence(0, 1)),","143","      \"%s must not start by a number or '_', got '%s'\", identifierDesc, identifier);","144","  }"],"delete":["65","    requireNonNull(tableName, \"Table name cannot be null\");","78","    requireNonNull(constraintName, \"Constraint name cannot be null\");","91","    requireNonNull(indexName, \"Index name cannot be null\");","112","    checkDbIdentifierCharacters(identifier, identifierDesc);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/livemeasures\/AddIndexOnProjectUuidOfLiveMeasuresTable.java":[{"add":["57","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["57","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/grouproles\/AddIndexOnGroupUuidOfGroupRolesTable.java":[{"add":["72","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["72","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/def\/ValidationsTest.java":[{"add":["75","    thrown.expectMessage(\"Index name can't be null\");"],"delete":["75","    thrown.expectMessage(\"Index name cannot be null\");"]}],"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":["41","import java.util.Optional;","285","   * @param table case-insensitive name of table","286","   * @return true if a table exists with this name, otherwise false","287","   * @throws SQLException","288","   *\/","313","  public static boolean indexExistsIgnoreCase(String table, String index, Connection connection) {","314","    return doIndexExistsIgnoreIndexCase(table, index, connection) ||","315","      doIndexExistsIgnoreIndexCase(table.toLowerCase(Locale.ENGLISH), index, connection) ||","316","      doIndexExistsIgnoreIndexCase(table.toUpperCase(Locale.ENGLISH), index, connection);","319","  private static boolean doIndexExistsIgnoreIndexCase(String table, String index, Connection connection) {","320","    return findIndex(connection, table, index).isPresent();","321","  }","322","","323","  \/**","324","   * Finds an index by searching by its lower case or upper case name. If an index is found, it's name is returned with the matching case.","325","   * This is useful when we need to drop an index that could exist with either lower case or upper case name.","326","   * See SONAR-13594","327","   *\/","328","  public static Optional<String> findExistingIndex(Connection connection, String tableName, String indexName) {","329","    Optional<String> result = findIndex(connection, tableName.toLowerCase(Locale.US), indexName);","330","    if (result.isPresent()) {","331","      return result;","332","    }","333","    \/\/ in tests, tables have uppercase name","334","    return findIndex(connection, tableName.toUpperCase(Locale.US), indexName);","335","  }","336","","337","  private static Optional<String> findIndex(Connection connection, String tableName, String indexName) {","340","    try (ResultSet rs = connection.getMetaData().getIndexInfo(connection.getCatalog(), schema, tableName, false, true)) {","342","        String idx = rs.getString(\"INDEX_NAME\");","343","        if (indexName.equalsIgnoreCase(idx)) {","344","          return Optional.of(idx);","347","      return Optional.empty();","349","      throw wrapSqlException(e, \"Can not check that table %s exists\", tableName);"],"delete":["284","    * @param table case-insensitive name of table","285","    * @return true if a table exists with this name, otherwise false","286","    * @throws SQLException","287","    *\/","312","  public static boolean indexExists(String table, String index, Connection connection) {","313","    return doIndexExists(table, index, connection) ||","314","      doIndexExists(table.toLowerCase(Locale.ENGLISH), index, connection) ||","315","      doIndexExists(table.toUpperCase(Locale.ENGLISH), index, connection);","318","  private static boolean doIndexExists(String table, String index, Connection connection) {","321","    try (ResultSet rs = connection.getMetaData().getIndexInfo(connection.getCatalog(), schema, table, false, true)) {","323","        String indexName = rs.getString(\"INDEX_NAME\");","324","        if (index.equalsIgnoreCase(indexName)) {","325","          return true;","328","      return false;","330","      throw wrapSqlException(e, \"Can not check that table %s exists\", table);"]}],"server\/sonar-db-core\/src\/test\/resources\/org\/sonar\/db\/DatabaseUtilsTest\/sql.sql":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/rulesparameters\/DropIndexesOnRuleIdColumnOfRulesParametersTable.java":[{"add":["21","import java.sql.Connection;","23","import java.util.Optional;","24","import java.util.function.Consumer;","26","import org.sonar.db.DatabaseUtils;","31","  private static final String TABLE_NAME = \"rules_parameters\";","39","    Consumer<String> dropIndex = idx -> context.execute(new DropIndexBuilder(getDialect())","40","      .setTable(TABLE_NAME)","41","      .setName(idx)","43","","44","    findExistingIndexName(\"rules_parameters_rule_id\").ifPresent(dropIndex);","45","    findExistingIndexName(\"rules_parameters_unique\").ifPresent(dropIndex);","48","  private Optional<String> findExistingIndexName(String indexName) throws SQLException {","49","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","50","      return DatabaseUtils.findExistingIndex(connection, TABLE_NAME, indexName);","51","    }","52","  }"],"delete":["34","    context.execute(new DropIndexBuilder(getDialect())","35","      .setTable(\"rules_parameters\")","36","      .setName(\"rules_parameters_rule_id\")","38","    context.execute(new DropIndexBuilder(getDialect())","39","      .setTable(\"rules_parameters\")","40","      .setName(\"rules_parameters_unique\")","41","      .build());"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/DropIndexOnRuleIdColumnOfDeprecatedRuleKeysTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnRuleIdColumnOfDeprecatedRuleKeysTable extends DropIndexChange {","25","  private static final String TABLE_NAME = \"deprecated_rule_keys\";","26","  private static final String INDEX_NAME = \"rule_id_deprecated_rule_keys\";","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.SQLException;","23","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","24","import org.sonar.server.platform.db.migration.step.DdlChange;","26","public class DropIndexOnRuleIdColumnOfDeprecatedRuleKeysTable extends DdlChange {","29","    super(db);","31","","32","  @Override","33","  public void execute(Context context) throws SQLException {","34","    context.execute(new DropIndexBuilder(getDialect())","35","      .setTable(\"deprecated_rule_keys\")","36","      .setName(\"rule_id_deprecated_rule_keys\")","37","      .build());","38","  }","39",""]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/CreateTableBuilderTest.java":[{"add":["75","    expectedException.expectMessage(\"Table name can't be null\");","294","    expectedException.expectMessage(\"Constraint name can't be null\");"],"delete":["75","    expectedException.expectMessage(\"Table name cannot be null\");","294","    expectedException.expectMessage(\"Constraint name cannot be null\");"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/metrics\/projectmeasures\/AddIndexOnMetricUuidOfProjectMeasuresTable.java":[{"add":["62","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["62","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/DropIndexOnGroupIdOfQProfileEditGroupsTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnGroupIdOfQProfileEditGroupsTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnGroupIdOfQProfileEditGroupsTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists(INDEX_NAME)) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists(String name) throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, name, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/CreateIndexBuilderTest.java":[{"add":["86","    expectedException.expectMessage(\"Table name can't be null\");","97","    expectedException.expectMessage(\"Index name can't be null\");"],"delete":["86","    expectedException.expectMessage(\"Table name cannot be null\");","97","    expectedException.expectMessage(\"Index name cannot be null\");"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/issuechanges\/AddIndexOnIssueKeyOfIssueChangesTable.java":[{"add":["56","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["56","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/DropUniqueIndexOnUuidColumnOfUsersTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnUuidColumnOfUsersTable extends DropIndexChange {","30","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropUniqueIndexOnUuidColumnOfUsersTable extends DdlChange {","34","    super(db);","35","  }","36","","37","  @Override","38","  public void execute(Context context) throws SQLException {","39","    if (indexExists()) {","40","      context.execute(new DropIndexBuilder(getDialect())","41","        .setTable(TABLE_NAME)","42","        .setName(INDEX_NAME)","43","        .build());","44","    }","45","  }","46","","47","  private boolean indexExists() throws SQLException {","48","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","49","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","50","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/DropUniqueIndexOnUserIdAndGroupIdOfGroupsUsersTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnUserIdAndGroupIdOfGroupsUsersTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropUniqueIndexOnUserIdAndGroupIdOfGroupsUsersTable extends DdlChange {","33","    super(db);","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }","50","  }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v82\/AddIndexOnSlugOfProjectAlmSettings.java":[{"add":["60","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["60","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/AddIndexOnGroupUuidOfQProfileEditGroupsTable.java":[{"add":["62","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["62","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/qualitygates\/DropUniqueIndexOnUuidColumnOfQualityGatesTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnUuidColumnOfQualityGatesTable extends DropIndexChange {","25","  private static final String INDEX_NAME = \"uniq_quality_gates_uuid\";","26","  private static final String TABLE_NAME = \"quality_gates\";","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.SQLException;","23","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","24","import org.sonar.server.platform.db.migration.step.DdlChange;","26","public class DropUniqueIndexOnUuidColumnOfQualityGatesTable extends DdlChange {","29","    super(db);","30","  }","31","","32","  @Override","33","  public void execute(Context context) throws SQLException {","34","    context.execute(new DropIndexBuilder(getDialect())","35","      .setTable(\"quality_gates\")","36","      .setName(\"uniq_quality_gates_uuid\")","37","      .build());"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/DropIndexBuilder.java":[{"add":["29","import static org.sonar.server.platform.db.migration.def.Validations.validateIndexNameIgnoreCase;","54","    validateIndexNameIgnoreCase(indexName);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.Database;","25","import org.sonar.db.DatabaseUtils;","33","import static org.sonar.server.platform.db.migration.def.Validations.validateIndexName;","58","    validateIndexName(indexName);","75","","76","  public boolean indexExists(Database database) throws SQLException {","77","    validateTableName(tableName);","78","    validateIndexName(indexName);","79","    try (Connection connection = database.getDataSource().getConnection()) {","80","      return DatabaseUtils.indexExists(tableName, indexName, connection);","81","    }","82","  }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/groupsusers\/AddIndexOnGroupUuidOfGroupsUsersTable.java":[{"add":["72","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, name, connection);"],"delete":["72","      return DatabaseUtils.indexExists(TABLE_NAME, name, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DropIndexChange.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/AddIndexOnUserUuidOfGroupsUsersTable.java":[{"add":["56","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["56","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/permissiontemplates\/fk\/permtplcharacteristics\/DropUniqueIndexOnTemplateIdAndPermissionKeyColumnsOfPermTplCharacteristicsTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnTemplateIdAndPermissionKeyColumnsOfPermTplCharacteristicsTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropUniqueIndexOnTemplateIdAndPermissionKeyColumnsOfPermTplCharacteristicsTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/DropUniqueIndexOnUserIdAndQProfileUuidOfQProfileEditUsersTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnUserIdAndQProfileUuidOfQProfileEditUsersTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropUniqueIndexOnUserIdAndQProfileUuidOfQProfileEditUsersTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/AddIndexOnActiveRuleUuidOfActiveRuleParametersTable.java":[{"add":["57","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["57","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rulesprofiles\/fk\/activerules\/AddUniqueIndexOnProfileUuidColumnOfActiveRulesTable.java":[{"add":["63","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["63","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/AddIndexOnUserUuidOfOrganizationMembersTable.java":[{"add":["56","      return DatabaseUtils.indexExistsIgnoreCase(TABLE_NAME, INDEX_NAME, connection);"],"delete":["56","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/DropIndexOnUserIdOfGroupsUsersTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnUserIdOfGroupsUsersTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnUserIdOfGroupsUsersTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/cequeue\/DropUniqueIndexOnUuidColumnOfCeQueueTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropUniqueIndexOnUuidColumnOfCeQueueTable extends DropIndexChange {","25","  private static final String TABLE_NAME = \"ce_queue\";","26","  private static final String INDEX_NAME = \"ce_queue_uuid\";","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.SQLException;","23","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","24","import org.sonar.server.platform.db.migration.step.DdlChange;","26","public class DropUniqueIndexOnUuidColumnOfCeQueueTable extends DdlChange {","29","    super(db);","31","","32","  @Override","33","  public void execute(Context context) throws SQLException {","34","    context.execute(new DropIndexBuilder(getDialect())","35","      .setTable(\"ce_queue\")","36","      .setName(\"ce_queue_uuid\")","37","      .build());","38","  }","39",""]}],"server\/sonar-db-core\/src\/testFixtures\/java\/org\/sonar\/db\/CoreTestDb.java":[{"add":["32","import org.sonar.api.config.internal.Settings;","64","    return create(schemaPath, true);","65","  }","66","","67","  static CoreTestDb create(String schemaPath, boolean databaseToUpper) {","70","    return new CoreTestDb().init(schemaPath, databaseToUpper);","74","    return new CoreTestDb().init(null, true);","77","  private CoreTestDb init(@Nullable String schemaPath, boolean databaseToUpper) {","88","      String name = \"\\\"h2Tests-\\\" + (schemaPath == null ? \\\"empty\\\" : DigestUtils.md5Hex(schemaPath))\";","89","      if (!databaseToUpper) {","90","        name = name + \";DATABASE_TO_UPPER=FALSE\";","91","      }","92","      return new CoreH2Database(name);"],"delete":["30","import org.apache.commons.codec.digest.DigestUtils;","32","import org.sonar.api.config.internal.Settings;","67","    return new CoreTestDb().init(schemaPath);","71","    return new CoreTestDb().init(null);","74","  private CoreTestDb init(@Nullable String schemaPath) {","85","      return new CoreH2Database(\"h2Tests-\" + (schemaPath == null ? \"empty\" : DigestUtils.md5Hex(schemaPath)));"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/issues\/AddIndexesToIssuesTable.java":[{"add":["101","      return DatabaseUtils.indexExistsIgnoreCase(TABLE, name, connection);"],"delete":["101","      return DatabaseUtils.indexExists(TABLE, name, connection);"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/DropIndexOnUserIdOfOrganizationMembersTable.java":[{"add":["22","import org.sonar.server.platform.db.migration.step.DropIndexChange;","24","public class DropIndexOnUserIdOfOrganizationMembersTable extends DropIndexChange {","29","    super(db, INDEX_NAME, TABLE_NAME);"],"delete":["21","import java.sql.Connection;","22","import java.sql.SQLException;","24","import org.sonar.db.DatabaseUtils;","25","import org.sonar.server.platform.db.migration.sql.DropIndexBuilder;","26","import org.sonar.server.platform.db.migration.step.DdlChange;","28","public class DropIndexOnUserIdOfOrganizationMembersTable extends DdlChange {","33","    super(db);","34","  }","35","","36","  @Override","37","  public void execute(Context context) throws SQLException {","38","    if (indexExists()) {","39","      context.execute(new DropIndexBuilder(getDialect())","40","        .setTable(TABLE_NAME)","41","        .setName(INDEX_NAME)","42","        .build());","43","    }","44","  }","45","","46","  private boolean indexExists() throws SQLException {","47","    try (Connection connection = getDatabase().getDataSource().getConnection()) {","48","      return DatabaseUtils.indexExists(TABLE_NAME, INDEX_NAME, connection);","49","    }"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/sql\/DropIndexBuilderTest.java":[{"add":["57","    expectedException.expectMessage(\"Table name can't be null\");","78","    expectedException.expectMessage(\"Index name can't be null\");","88","    expectedException.expectMessage(\"Index name must contain only alphanumeric chars or '_', got '(not valid)'\");"],"delete":["57","    expectedException.expectMessage(\"Table name cannot be null\");","78","    expectedException.expectMessage(\"Index name cannot be null\");","88","    expectedException.expectMessage(\"Index name must be lower case and contain only alphanumeric chars or '_', got '(not valid)'\");"]}]}},"c0c77159e1a512a1724b73550f4ede36619d1560":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReader.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReaderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/RangeOffsetConverter.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReader.java":[{"add":["105","        if (range.getEndLine() == line) {","106","          syntaxHighlightingIterator.remove();","107","        }"],"delete":["105","        syntaxHighlightingIterator.remove();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReaderTest.java":[{"add":["46","import static org.sonar.scanner.protocol.output.ScannerReport.SyntaxHighlightingRule.HighlightingType.CPP_DOC;","48","import static org.sonar.scanner.protocol.output.ScannerReport.SyntaxHighlightingRule.HighlightingType.KEYWORD;","117","  public void supports_highlighting_over_multiple_lines_including_an_empty_one() {","118","    List<ScannerReport.SyntaxHighlightingRule> syntaxHighlightingList = new ArrayList<>();","119","    addHighlighting(syntaxHighlightingList, 1, 0, 1, 7, KEYWORD); \/\/ package","120","    addHighlighting(syntaxHighlightingList, 2, 0, 4, 6, CPP_DOC); \/\/ comment over 3 lines","121","    addHighlighting(syntaxHighlightingList, 5, 0, 5, 6, KEYWORD); \/\/ public","122","    addHighlighting(syntaxHighlightingList, 5, 7, 5, 12, KEYWORD); \/\/ class","123","    HighlightingLineReader highlightingLineReader = new HighlightingLineReader(FILE, syntaxHighlightingList.iterator(), new RangeOffsetConverter());","124","","125","    DbFileSources.Line.Builder[] builders = new DbFileSources.Line.Builder[] {","126","      addSourceLine(highlightingLineReader, 1, \"package example;\"),","127","      addSourceLine(highlightingLineReader, 2, \"\/*\"),","128","      addSourceLine(highlightingLineReader, 3, \"\"),","129","      addSourceLine(highlightingLineReader, 4, \" foo*\/\"),","130","      addSourceLine(highlightingLineReader, 5, \"public class One {\"),","131","      addSourceLine(highlightingLineReader, 6, \"}\")","132","    };","133","","134","    assertThat(builders)","135","      .extracting(\"highlighting\")","136","      .containsExactly(","137","        \"0,7,k\",","138","        \"0,2,cppd\",","139","        \"\",","140","        \"0,6,cppd\",","141","        \"0,6,k;7,12,k\",","142","        \"\");","143","  }","144","","145","  private DbFileSources.Line.Builder addSourceLine(HighlightingLineReader highlightingLineReader, int line, String source) {","146","    DbFileSources.Line.Builder lineBuilder = sourceData.addLinesBuilder().setSource(source).setLine(line);","147","    highlightingLineReader.read(lineBuilder);","148","    return lineBuilder;","149","  }","150","","151","  private void addHighlighting(List<ScannerReport.SyntaxHighlightingRule> syntaxHighlightingList,","152","    int startLine, int startOffset,","153","    int endLine, int endOffset,","154","    HighlightingType type) {","155","    TextRange.Builder textRangeBuilder = TextRange.newBuilder();","156","    ScannerReport.SyntaxHighlightingRule.Builder ruleBuilder = ScannerReport.SyntaxHighlightingRule.newBuilder();","157","    syntaxHighlightingList.add(ruleBuilder","158","      .setRange(textRangeBuilder","159","        .setStartLine(startLine).setEndLine(endLine)","160","        .setStartOffset(startOffset).setEndOffset(endOffset)","161","        .build())","162","      .setType(type)","163","      .build());","164","  }","165","","166","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/RangeOffsetConverter.java":[{"add":["38","    StringBuilder element = new StringBuilder();"],"delete":["31","    StringBuilder element = new StringBuilder();","32",""]}]}},"95889c7f11fa494e0432c1e64906f9d0cdef2946":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/SystemPasscodeTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserSessionInitializer.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/UserSessionInitializerTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/SystemPasscodeTest.java":[{"add":["22","import java.util.Arrays;","73","  @Test","74","  public void system_access_is_granted_even_with_forceAuthentication_is_set_to_true() {","75","    tester.settings().setGlobalSetting(\"sonar.forceAuthentication\", \"true\");","76","    Arrays.asList(\"\/api\/ce\/pause\", \"\/api\/ce\/resume\", \"\/api\/system\/health\", \"\/api\/system\/info\")","77","      .forEach(url -> {","78","          WsRequest request = new GetRequest(\"api\/system\/health\")","79","            .setHeader(PASSCODE_HEADER, VALID_PASSCODE);","80","","81","          WsResponse response = tester.asAnonymous().wsClient().wsConnector().call(request);","82","          assertThat(response.code()).isEqualTo(200);","83","        }","84","      );","85","    tester.settings().setGlobalSetting(\"sonar.forceAuthentication\", \"false\");","86","  }","87",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/UserSessionInitializer.java":[{"add":["67","  private static final Set<String> URL_USING_PASSCODE = ImmutableSet.of(","68","    \"\/api\/ce\/info\", \"\/api\/ce\/pause\", \"\/api\/ce\/resume\", \"\/api\/system\/health\"","69","  );","70","","77","  private static final UrlPattern PASSCODE_URLS = UrlPattern.builder()","78","    .includes(URL_USING_PASSCODE)","79","    .build();","80","","101","        loadUserSession(request, response, PASSCODE_URLS.matches(path));","125","  private void loadUserSession(HttpServletRequest request, HttpServletResponse response, boolean usingPasscode) {","131","      if (!usingPasscode) {","132","        failIfAuthenticationIsRequired();","133","      }"],"delete":["93","        loadUserSession(request, response);","117","  private void loadUserSession(HttpServletRequest request, HttpServletResponse response) {","123","      failIfAuthenticationIsRequired();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/UserSessionInitializerTest.java":[{"add":["107","    \/\/ exlude passcode urls","108","    assertPathIsIgnoredWithAnonymousAccess(\"\/api\/ce\/info\");","109","    assertPathIsIgnoredWithAnonymousAccess(\"\/api\/ce\/pause\");","110","    assertPathIsIgnoredWithAnonymousAccess(\"\/api\/ce\/resume\");","111","    assertPathIsIgnoredWithAnonymousAccess(\"\/api\/system\/health\");","112","","193","  private void assertPathIsIgnoredWithAnonymousAccess(String path) {","194","    when(request.getRequestURI()).thenReturn(path);","195","","196","    assertThat(underTest.initUserSession(request, response)).isTrue();","197","","198","    verify(userSession).set(any(UserSession.class));","199","    reset(userSession, authenticators);","200","  }","201",""],"delete":[]}]}},"6fd40a8af54818efb8c29c8a01102121a529099e":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainer-test.tsx":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/types\/security-hotspots.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainerRenderer-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainer.tsx":[{"add":["79","  async fetchSources() {","85","    if (!textRange) {","86","      \/\/ Hotspot not associated to any loc","87","      this.setState({ loading: false, lastLine: undefined, sourceLines: [] });","88","      return;","89","    }","90","","97","    let sourceLines = await getSources({","98","      key: component.key,","99","      from,","100","      to,","101","      ...getBranchLikeQuery(branchLike)","102","    }).catch(() => [] as T.SourceLine[]);","103","","104","    if (this.mounted) {","105","      const lastLine = this.checkLastLine(sourceLines, to);","106","","107","      \/\/ remove extra sourceline if we didn't reach the end:","108","      sourceLines = lastLine ? sourceLines : sourceLines.slice(0, -1);","109","      this.setState({ lastLine, loading: false, sourceLines });","110","    }"],"delete":["79","  fetchSources() {","90","    return getSources({ key: component.key, from, to, ...getBranchLikeQuery(branchLike) })","91","      .then(sourceLines => {","92","        if (this.mounted) {","93","          const lastLine = this.checkLastLine(sourceLines, to);","95","          \/\/ remove extra sourceline if we didn't reach the end:","96","          sourceLines = lastLine ? sourceLines : sourceLines.slice(0, -1);","97","          this.setState({ lastLine, loading: false, sourceLines });","98","        }","99","      })","100","      .catch(() => this.mounted && this.setState({ loading: false }));"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/HotspotSnippetContainerRenderer.tsx":[{"add":["21","import { translate } from 'sonar-ui-common\/helpers\/l10n';","58","    <>","59","      {!loading && sourceLines.length === 0 && (","60","        <p className=\"spacer-bottom\">{translate('hotspots.no_associated_lines')}<\/p>","61","      )}","62","      <div className=\"bordered big-spacer-bottom\">","63","        <SourceViewerHeaderSlim","64","          branchLike={branchLike}","65","          expandable={false}","66","          displayProjectName={displayProjectName}","67","          linkToProject={false}","68","          loading={loading}","69","          onExpand={noop}","70","          sourceViewerFile={sourceViewerFile}","71","        \/>","72","        <DeferredSpinner loading={loading}>","73","          {sourceLines.length > 0 && (","74","            <SourceViewerContext.Provider \/* Used by LineOptionsPopup *\/","75","              value={{ branchLike, file: sourceViewerFile }}>","76","              <SnippetViewer","77","                branchLike={branchLike}","78","                component={sourceViewerFile}","79","                displaySCM={false}","80","                expandBlock={(_i, direction) => props.onExpandBlock(direction)}","81","                handleCloseIssues={noop}","82","                handleOpenIssues={noop}","83","                handleSymbolClick={props.onSymbolClick}","84","                highlightedLocationMessage={undefined}","85","                highlightedSymbols={highlightedSymbols}","86","                index={0}","87","                issue={hotspot}","88","                issuesByLine={{}}","89","                lastSnippetOfLastGroup={false}","90","                locations={[]}","91","                locationsByLine={locations}","92","                onIssueChange={noop}","93","                onIssuePopupToggle={noop}","94","                onLocationSelect={noop}","95","                openIssuesByLine={{}}","96","                renderDuplicationPopup={noop}","97","                snippet={sourceLines}","98","              \/>","99","            <\/SourceViewerContext.Provider>","100","          )}","101","        <\/DeferredSpinner>","102","      <\/div>","103","    <\/>"],"delete":["57","    <div className=\"bordered big-spacer-bottom\">","58","      <SourceViewerHeaderSlim","59","        branchLike={branchLike}","60","        expandable={false}","61","        displayProjectName={displayProjectName}","62","        linkToProject={false}","63","        loading={loading}","64","        onExpand={noop}","65","        sourceViewerFile={sourceViewerFile}","66","      \/>","67","      <DeferredSpinner loading={loading}>","68","        {sourceLines.length > 0 && (","69","          <SourceViewerContext.Provider \/* Used by LineOptionsPopup *\/","70","            value={{ branchLike, file: sourceViewerFile }}>","71","            <SnippetViewer","72","              branchLike={branchLike}","73","              component={sourceViewerFile}","74","              displaySCM={false}","75","              expandBlock={(_i, direction) => props.onExpandBlock(direction)}","76","              handleCloseIssues={noop}","77","              handleOpenIssues={noop}","78","              handleSymbolClick={props.onSymbolClick}","79","              highlightedLocationMessage={undefined}","80","              highlightedSymbols={highlightedSymbols}","81","              index={0}","82","              issue={hotspot}","83","              issuesByLine={{}}","84","              lastSnippetOfLastGroup={false}","85","              locations={[]}","86","              locationsByLine={locations}","87","              onIssueChange={noop}","88","              onIssuePopupToggle={noop}","89","              onLocationSelect={noop}","90","              openIssuesByLine={{}}","91","              renderDuplicationPopup={noop}","92","              snippet={sourceLines}","93","            \/>","94","          <\/SourceViewerContext.Provider>","95","        )}","96","      <\/DeferredSpinner>","97","    <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/HotspotSnippetContainer-test.tsx":[{"add":["34","beforeEach(() => jest.clearAllMocks());","35","","64","it('should handle load sources failure', async () => {","65","  (getSources as jest.Mock).mockRejectedValueOnce(null);","66","","67","  const wrapper = shallowRender();","68","","69","  await waitAndUpdate(wrapper);","70","","71","  expect(getSources).toHaveBeenCalled();","72","  expect(wrapper.state().loading).toBe(false);","73","  expect(wrapper.state().lastLine).toBeUndefined();","74","  expect(wrapper.state().sourceLines).toHaveLength(0);","75","});","76","","77","it('should not load sources on mount when the hotspot is not associated to any loc', async () => {","78","  const hotspot = mockHotspot({","79","    line: undefined,","80","    textRange: undefined","81","  });","82","","83","  const wrapper = shallowRender({ hotspot });","84","","85","  await waitAndUpdate(wrapper);","86","","87","  expect(getSources).not.toBeCalled();","88","  expect(wrapper.state().lastLine).toBeUndefined();","89","  expect(wrapper.state().sourceLines).toHaveLength(0);","90","});","91",""],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["698","hotspots.no_associated_lines=Security Hotspot raised on the following file:"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/types\/security-hotspots.ts":[{"add":["88","  textRange?: T.TextRange;"],"delete":["88","  textRange: T.TextRange;"]}],"server\/sonar-web\/src\/main\/js\/apps\/security-hotspots\/components\/__tests__\/__snapshots__\/HotspotSnippetContainerRenderer-test.tsx.snap":[{"add":["3","<Fragment>","4","  <p","5","    className=\"spacer-bottom\"","6","  >","7","    hotspots.no_associated_lines","8","  <\/p>","9","  <div","10","    className=\"bordered big-spacer-bottom\"","11","  >","12","    <SourceViewerHeaderSlim","13","      branchLike={","14","        Object {","15","          \"analysisDate\": \"2018-01-01\",","16","          \"excludedFromPurge\": true,","17","          \"isMain\": true,","18","          \"name\": \"master\",","19","        }","21","      displayProjectName={true}","22","      expandable={false}","23","      linkToProject={false}","24","      loading={false}","25","      onExpand={[Function]}","26","      sourceViewerFile={","27","        Object {","28","          \"key\": \"foo\",","29","          \"measures\": Object {","30","            \"coverage\": \"85.2\",","31","            \"duplicationDensity\": \"1.0\",","32","            \"issues\": \"12\",","33","            \"lines\": \"56\",","34","          },","35","          \"path\": \"foo\/bar.ts\",","36","          \"project\": \"my-project\",","37","          \"projectName\": \"MyProject\",","38","          \"q\": \"FIL\",","39","          \"uuid\": \"foo-bar\",","40","        }","42","    \/>","43","    <DeferredSpinner","44","      loading={false}","45","      timeout={100}","46","    \/>","47","  <\/div>","48","<\/Fragment>","52","<Fragment>","53","  <div","54","    className=\"bordered big-spacer-bottom\"","56","    <SourceViewerHeaderSlim","57","      branchLike={","59","          \"analysisDate\": \"2018-01-01\",","60","          \"excludedFromPurge\": true,","61","          \"isMain\": true,","62","          \"name\": \"master\",","65","      displayProjectName={true}","66","      expandable={false}","67","      linkToProject={false}","68","      loading={false}","69","      onExpand={[Function]}","70","      sourceViewerFile={","71","        Object {","72","          \"key\": \"foo\",","73","          \"measures\": Object {","74","            \"coverage\": \"85.2\",","75","            \"duplicationDensity\": \"1.0\",","76","            \"issues\": \"12\",","77","            \"lines\": \"56\",","78","          },","79","          \"path\": \"foo\/bar.ts\",","80","          \"project\": \"my-project\",","81","          \"projectName\": \"MyProject\",","82","          \"q\": \"FIL\",","83","          \"uuid\": \"foo-bar\",","84","        }","85","      }","86","    \/>","87","    <DeferredSpinner","88","      loading={false}","89","      timeout={100}","91","      <ContextProvider","92","        value={","94","            \"branchLike\": Object {","95","              \"analysisDate\": \"2018-01-01\",","96","              \"excludedFromPurge\": true,","97","              \"isMain\": true,","98","              \"name\": \"master\",","99","            },","100","            \"file\": Object {","101","              \"key\": \"foo\",","102","              \"measures\": Object {","103","                \"coverage\": \"85.2\",","104","                \"duplicationDensity\": \"1.0\",","105","                \"issues\": \"12\",","106","                \"lines\": \"56\",","107","              },","108","              \"path\": \"foo\/bar.ts\",","109","              \"project\": \"my-project\",","110","              \"projectName\": \"MyProject\",","111","              \"q\": \"FIL\",","112","              \"uuid\": \"foo-bar\",","113","            },","116","      >","117","        <SnippetViewer","118","          branchLike={","119","            Object {","120","              \"analysisDate\": \"2018-01-01\",","121","              \"excludedFromPurge\": true,","122","              \"isMain\": true,","123","              \"name\": \"master\",","124","            }","126","          component={","127","            Object {","128","              \"key\": \"foo\",","129","              \"measures\": Object {","130","                \"coverage\": \"85.2\",","131","                \"duplicationDensity\": \"1.0\",","132","                \"issues\": \"12\",","133","                \"lines\": \"56\",","135","              \"path\": \"foo\/bar.ts\",","136","              \"project\": \"my-project\",","137","              \"projectName\": \"MyProject\",","138","              \"q\": \"FIL\",","139","              \"uuid\": \"foo-bar\",","140","            }","141","          }","142","          displaySCM={false}","143","          expandBlock={[Function]}","144","          handleCloseIssues={[Function]}","145","          handleOpenIssues={[Function]}","146","          handleSymbolClick={[MockFunction]}","147","          highlightedSymbols={Array []}","148","          index={0}","149","          issue={","150","            Object {","151","              \"assignee\": \"assignee\",","152","              \"assigneeUser\": Object {","158","              \"author\": \"author\",","159","              \"authorUser\": Object {","165","              \"canChangeStatus\": true,","166","              \"changelog\": Array [],","167","              \"comment\": Array [],","168","              \"component\": Object {","169","                \"breadcrumbs\": Array [],","170","                \"key\": \"my-project\",","171","                \"name\": \"MyProject\",","172","                \"organization\": \"foo\",","173","                \"qualifier\": \"FIL\",","174","                \"qualityGate\": Object {","175","                  \"isDefault\": true,","176","                  \"key\": \"30\",","177","                  \"name\": \"Sonar way\",","178","                },","179","                \"qualityProfiles\": Array [","180","                  Object {","181","                    \"deleted\": false,","182","                    \"key\": \"my-qp\",","183","                    \"language\": \"ts\",","184","                    \"name\": \"Sonar way\",","185","                  },","186","                ],","187","                \"tags\": Array [],","188","              },","189","              \"creationDate\": \"2013-05-13T17:55:41+0200\",","190","              \"key\": \"01fc972e-2a3c-433e-bcae-0bd7f88f5123\",","191","              \"line\": 142,","192","              \"message\": \"'3' is a magic number.\",","193","              \"project\": Object {","194","                \"breadcrumbs\": Array [],","195","                \"key\": \"my-project\",","196","                \"name\": \"MyProject\",","197","                \"organization\": \"foo\",","198","                \"qualifier\": \"TRK\",","199","                \"qualityGate\": Object {","200","                  \"isDefault\": true,","201","                  \"key\": \"30\",","202","                  \"name\": \"Sonar way\",","203","                },","204","                \"qualityProfiles\": Array [","205","                  Object {","206","                    \"deleted\": false,","207","                    \"key\": \"my-qp\",","208","                    \"language\": \"ts\",","209","                    \"name\": \"Sonar way\",","210","                  },","211","                ],","212","                \"tags\": Array [],","213","              },","214","              \"resolution\": \"FIXED\",","215","              \"rule\": Object {","216","                \"fixRecommendations\": \"<p>This a <strong>strong<\/strong> message about fixing !<\/p>\",","217","                \"key\": \"squid:S2077\",","218","                \"name\": \"That rule\",","219","                \"riskDescription\": \"<p>This a <strong>strong<\/strong> message about risk !<\/p>\",","220","                \"securityCategory\": \"sql-injection\",","221","                \"vulnerabilityDescription\": \"<p>This a <strong>strong<\/strong> message about vulnerability !<\/p>\",","222","                \"vulnerabilityProbability\": \"HIGH\",","223","              },","224","              \"status\": \"REVIEWED\",","225","              \"textRange\": Object {","226","                \"endLine\": 142,","227","                \"endOffset\": 83,","228","                \"startLine\": 142,","229","                \"startOffset\": 26,","230","              },","231","              \"updateDate\": \"2013-05-13T17:55:42+0200\",","232","              \"users\": Array [","233","                Object {","234","                  \"active\": true,","235","                  \"local\": true,","236","                  \"login\": \"assignee\",","237","                  \"name\": \"John Doe\",","238","                },","239","                Object {","240","                  \"active\": true,","241","                  \"local\": true,","242","                  \"login\": \"author\",","243","                  \"name\": \"John Doe\",","244","                },","245","              ],","246","            }","248","          issuesByLine={Object {}}","249","          lastSnippetOfLastGroup={false}","250","          locations={Array []}","251","          locationsByLine={Object {}}","252","          onIssueChange={[Function]}","253","          onIssuePopupToggle={[Function]}","254","          onLocationSelect={[Function]}","255","          openIssuesByLine={Object {}}","256","          renderDuplicationPopup={[Function]}","257","          snippet={","258","            Array [","259","              Object {","260","                \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","261","                \"coverageStatus\": \"covered\",","262","                \"coveredConditions\": 2,","263","                \"duplicated\": false,","264","                \"isNew\": true,","265","                \"line\": 16,","266","                \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","267","                \"scmDate\": \"2018-12-11T10:48:39+0100\",","268","                \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","269","              },","270","            ]","271","          }","272","        \/>","273","      <\/ContextProvider>","274","    <\/DeferredSpinner>","275","  <\/div>","276","<\/Fragment>"],"delete":["3","<div","4","  className=\"bordered big-spacer-bottom\"","5",">","6","  <SourceViewerHeaderSlim","7","    branchLike={","8","      Object {","9","        \"analysisDate\": \"2018-01-01\",","10","        \"excludedFromPurge\": true,","11","        \"isMain\": true,","12","        \"name\": \"master\",","14","    }","15","    displayProjectName={true}","16","    expandable={false}","17","    linkToProject={false}","18","    loading={false}","19","    onExpand={[Function]}","20","    sourceViewerFile={","21","      Object {","22","        \"key\": \"foo\",","23","        \"measures\": Object {","24","          \"coverage\": \"85.2\",","25","          \"duplicationDensity\": \"1.0\",","26","          \"issues\": \"12\",","27","          \"lines\": \"56\",","28","        },","29","        \"path\": \"foo\/bar.ts\",","30","        \"project\": \"my-project\",","31","        \"projectName\": \"MyProject\",","32","        \"q\": \"FIL\",","33","        \"uuid\": \"foo-bar\",","35","    }","36","  \/>","37","  <DeferredSpinner","38","    loading={false}","39","    timeout={100}","40","  \/>","41","<\/div>","45","<div","46","  className=\"bordered big-spacer-bottom\"","47",">","48","  <SourceViewerHeaderSlim","49","    branchLike={","50","      Object {","51","        \"analysisDate\": \"2018-01-01\",","52","        \"excludedFromPurge\": true,","53","        \"isMain\": true,","54","        \"name\": \"master\",","55","      }","56","    }","57","    displayProjectName={true}","58","    expandable={false}","59","    linkToProject={false}","60","    loading={false}","61","    onExpand={[Function]}","62","    sourceViewerFile={","63","      Object {","64","        \"key\": \"foo\",","65","        \"measures\": Object {","66","          \"coverage\": \"85.2\",","67","          \"duplicationDensity\": \"1.0\",","68","          \"issues\": \"12\",","69","          \"lines\": \"56\",","70","        },","71","        \"path\": \"foo\/bar.ts\",","72","        \"project\": \"my-project\",","73","        \"projectName\": \"MyProject\",","74","        \"q\": \"FIL\",","75","        \"uuid\": \"foo-bar\",","76","      }","77","    }","78","  \/>","79","  <DeferredSpinner","80","    loading={false}","81","    timeout={100}","83","    <ContextProvider","84","      value={","86","          \"branchLike\": Object {","87","            \"analysisDate\": \"2018-01-01\",","88","            \"excludedFromPurge\": true,","89","            \"isMain\": true,","90","            \"name\": \"master\",","91","          },","92","          \"file\": Object {","93","            \"key\": \"foo\",","94","            \"measures\": Object {","95","              \"coverage\": \"85.2\",","96","              \"duplicationDensity\": \"1.0\",","97","              \"issues\": \"12\",","98","              \"lines\": \"56\",","99","            },","100","            \"path\": \"foo\/bar.ts\",","101","            \"project\": \"my-project\",","102","            \"projectName\": \"MyProject\",","103","            \"q\": \"FIL\",","104","            \"uuid\": \"foo-bar\",","105","          },","109","      <SnippetViewer","110","        branchLike={","112","            \"analysisDate\": \"2018-01-01\",","113","            \"excludedFromPurge\": true,","114","            \"isMain\": true,","115","            \"name\": \"master\",","118","        component={","119","          Object {","120","            \"key\": \"foo\",","121","            \"measures\": Object {","122","              \"coverage\": \"85.2\",","123","              \"duplicationDensity\": \"1.0\",","124","              \"issues\": \"12\",","125","              \"lines\": \"56\",","126","            },","127","            \"path\": \"foo\/bar.ts\",","128","            \"project\": \"my-project\",","129","            \"projectName\": \"MyProject\",","130","            \"q\": \"FIL\",","131","            \"uuid\": \"foo-bar\",","133","        }","134","        displaySCM={false}","135","        expandBlock={[Function]}","136","        handleCloseIssues={[Function]}","137","        handleOpenIssues={[Function]}","138","        handleSymbolClick={[MockFunction]}","139","        highlightedSymbols={Array []}","140","        index={0}","141","        issue={","142","          Object {","143","            \"assignee\": \"assignee\",","144","            \"assigneeUser\": Object {","145","              \"active\": true,","146","              \"local\": true,","147","              \"login\": \"assignee\",","148","              \"name\": \"John Doe\",","149","            },","150","            \"author\": \"author\",","151","            \"authorUser\": Object {","152","              \"active\": true,","153","              \"local\": true,","154","              \"login\": \"author\",","155","              \"name\": \"John Doe\",","156","            },","157","            \"canChangeStatus\": true,","158","            \"changelog\": Array [],","159","            \"comment\": Array [],","160","            \"component\": Object {","161","              \"breadcrumbs\": Array [],","162","              \"key\": \"my-project\",","163","              \"name\": \"MyProject\",","164","              \"organization\": \"foo\",","165","              \"qualifier\": \"FIL\",","166","              \"qualityGate\": Object {","167","                \"isDefault\": true,","168","                \"key\": \"30\",","169","                \"name\": \"Sonar way\",","171","              \"qualityProfiles\": Array [","172","                Object {","173","                  \"deleted\": false,","174","                  \"key\": \"my-qp\",","175","                  \"language\": \"ts\",","176","                  \"name\": \"Sonar way\",","177","                },","178","              ],","179","              \"tags\": Array [],","180","            },","181","            \"creationDate\": \"2013-05-13T17:55:41+0200\",","182","            \"key\": \"01fc972e-2a3c-433e-bcae-0bd7f88f5123\",","183","            \"line\": 142,","184","            \"message\": \"'3' is a magic number.\",","185","            \"project\": Object {","186","              \"breadcrumbs\": Array [],","187","              \"key\": \"my-project\",","188","              \"name\": \"MyProject\",","189","              \"organization\": \"foo\",","190","              \"qualifier\": \"TRK\",","191","              \"qualityGate\": Object {","192","                \"isDefault\": true,","193","                \"key\": \"30\",","194","                \"name\": \"Sonar way\",","195","              },","196","              \"qualityProfiles\": Array [","197","                Object {","198","                  \"deleted\": false,","199","                  \"key\": \"my-qp\",","200","                  \"language\": \"ts\",","201","                  \"name\": \"Sonar way\",","202","                },","203","              ],","204","              \"tags\": Array [],","205","            },","206","            \"resolution\": \"FIXED\",","207","            \"rule\": Object {","208","              \"fixRecommendations\": \"<p>This a <strong>strong<\/strong> message about fixing !<\/p>\",","209","              \"key\": \"squid:S2077\",","210","              \"name\": \"That rule\",","211","              \"riskDescription\": \"<p>This a <strong>strong<\/strong> message about risk !<\/p>\",","212","              \"securityCategory\": \"sql-injection\",","213","              \"vulnerabilityDescription\": \"<p>This a <strong>strong<\/strong> message about vulnerability !<\/p>\",","214","              \"vulnerabilityProbability\": \"HIGH\",","215","            },","216","            \"status\": \"REVIEWED\",","217","            \"textRange\": Object {","218","              \"endLine\": 142,","219","              \"endOffset\": 83,","220","              \"startLine\": 142,","221","              \"startOffset\": 26,","222","            },","223","            \"updateDate\": \"2013-05-13T17:55:42+0200\",","224","            \"users\": Array [","225","              Object {","231","              Object {","237","            ],","239","        }","240","        issuesByLine={Object {}}","241","        lastSnippetOfLastGroup={false}","242","        locations={Array []}","243","        locationsByLine={Object {}}","244","        onIssueChange={[Function]}","245","        onIssuePopupToggle={[Function]}","246","        onLocationSelect={[Function]}","247","        openIssuesByLine={Object {}}","248","        renderDuplicationPopup={[Function]}","249","        snippet={","250","          Array [","251","            Object {","252","              \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","253","              \"coverageStatus\": \"covered\",","254","              \"coveredConditions\": 2,","255","              \"duplicated\": false,","256","              \"isNew\": true,","257","              \"line\": 16,","258","              \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","259","              \"scmDate\": \"2018-12-11T10:48:39+0100\",","260","              \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","261","            },","262","          ]","263","        }","264","      \/>","265","    <\/ContextProvider>","266","  <\/DeferredSpinner>","267","<\/div>"]}]}},"8d3d6716e8221f26040eb81911afffc142fae773":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/project-permissions\/apply-template-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/permissions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/project-permissions\/main.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/project-permissions\/apply-template-view.js":[{"add":["21","import { applyTemplateToProject, bulkApplyTemplateToProject } from '..\/..\/api\/permissions';","38","    const permissionTemplate = this.$('#project-permissions-template').val();","41","    if (this.options.project) {","42","      applyTemplateToProject({","43","        data: { projectId: this.options.project.id, templateId: permissionTemplate }","44","      }).done(function () {","45","        that.options.refresh();","46","        that.destroy();","47","      }).fail(function (jqXHR) {","48","        that.enableForm();","49","        that.showErrors(jqXHR.responseJSON.errors, jqXHR.responseJSON.warnings);","51","    } else {","52","      const data = { templateId: permissionTemplate };","53","      if (this.options.query) {","54","        data.q = this.options.query;","55","      }","56","      if (this.options.filter && this.options.filter !== '__ALL__') {","57","        data.qualifier = this.options.filter;","58","      }","60","      bulkApplyTemplateToProject({ data }).done(function () {","61","        that.options.refresh();","62","        that.destroy();","63","      }).fail(function (jqXHR) {","64","        that.enableForm();","65","        that.showErrors(jqXHR.responseJSON.errors, jqXHR.responseJSON.warnings);","66","      });","67","    }"],"delete":["19","import $ from 'jquery';","22","import { applyTemplateToProject } from '..\/..\/api\/permissions';","41","    const projects = this.options.project ? [this.options.project] : this.options.projects;","42","    const permissionTemplate = this.$('#project-permissions-template').val();","43","    let looper = $.Deferred().resolve();","44","","45","    projects.forEach(function (project) {","46","      looper = looper.then(function () {","47","        return applyTemplateToProject({","48","          data: { projectId: project.id, templateId: permissionTemplate }","49","        });","51","    });","53","    looper.done(function () {","54","      that.options.refresh();","55","      that.destroy();","56","    }).fail(function (jqXHR) {","57","      that.enableForm();","58","      that.showErrors(jqXHR.responseJSON.errors, jqXHR.responseJSON.warnings);","59","    });"]}],"server\/sonar-web\/src\/main\/js\/api\/permissions.js":[{"add":["142","","143","export function bulkApplyTemplateToProject (options) {","144","  const url = window.baseUrl + '\/api\/permissions\/bulk_apply_template';","145","  return request(_.extend({ type: 'POST', url }, options));","146","}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/project-permissions\/main.js":[{"add":["107","      query: this.state.query,","108","      filter: this.state.filter,","110","      refresh: () => this.requestPermissions(1, this.state.query, this.state.filter)"],"delete":["107","      projects: this.state.projects,","109","      refresh: this.requestPermissions"]}]}},"469af3846a5ca3f78b2b190ec4a2b27e3c7fd11f":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/ConfigurationRepositoryTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/project\/Project.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/RekeyedProjectTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/webhook\/WebhookQGChangeEventListenerTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/ComponentTreeBuilderTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/webhook\/WebhookPayloadFactoryImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ProjectLifeCycleListenersImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/DeleteActionTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/rule\/RuleTagFormat.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/views\/ViewsService.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/IssueFieldsSetter.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/webhook\/WebhookQGChangeEventListener.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentService.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/webhook\/WebhookPayloadFactoryImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ReportPersistComponentsStepTest.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/rule\/RuleTagFormatTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/DeleteAction.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentMapper.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/webhook\/WebhookPostTaskTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/BranchPersisterImplTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistLiveMeasuresStepTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/measure\/PostMeasuresComputationChecksStepTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/webhook\/ProjectAnalysisTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/analysis\/AnalysisMetadataHolderImplTest.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/views\/SetTagsModeRequest.java":"ADD","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/project\/ProjectTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SetTagsActionTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStepTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/QualityGateEventsStepTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/webhook\/WebhookPostTask.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/webhook\/Project.java":"ADD","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/webhook\/ProjectAnalysis.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/ConfigurationRepositoryTest.java":[{"add":["39","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","40","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","44","  private static Project PROJECT = Project.from(newPrivateProjectDto(newOrganizationDto()));","75","    analysisMetadataHolder.setProject(Project.from(project));","100","    analysisMetadataHolder.setProject(Project.from(project));","110","    analysisMetadataHolder.setProject(Project.from(project));","127","    analysisMetadataHolder","128","      .setProject(Project.from(project))","129","      .setBranch(branch);"],"delete":["42","  private static Project PROJECT = new Project(\"UUID\", \"KEY\", \"NAME\");","73","    analysisMetadataHolder.setProject(new Project(project.uuid(), project.getDbKey(), project.name()));","98","    analysisMetadataHolder.setProject(new Project(project.uuid(), project.getDbKey(), project.name()));","108","    analysisMetadataHolder.setProject(new Project(project.uuid(), project.getDbKey(), project.name()));","125","    analysisMetadataHolder.setProject(new Project(project.uuid(), project.getDbKey(), project.name())).setBranch(branch);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/project\/Project.java":[{"add":["21","import java.util.List;","34","  private final List<String> tags;","36","  public Project(String uuid, String key, String name, @Nullable String description, List<String> tags) {","41","    this.tags = tags;","45","    return new Project(project.uuid(), project.getKey(), project.name(), project.description(), project.getTags());","70","  public List<String> getTags() {","71","    return tags;","72","  }","73",""],"delete":["34","  public Project(String uuid, String key, String name) {","35","    this(uuid, key, name, null);","36","  }","37","","38","  public Project(String uuid, String key, String name, @Nullable String description) {","46","    return new Project(project.uuid(), project.getDbKey(), project.name(), project.description());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/RekeyedProjectTest.java":[{"add":["25","import static java.util.Collections.emptyList;","28","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","29","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","91","    Project project = new Project(\"A\", \"B\", \"C\", \"D\", emptyList());","99","    return Project.from(newPrivateProjectDto(newOrganizationDto()));"],"delete":["88","    Project project = new Project(\"A\", \"B\", \"C\", \"D\");","96","    return new Project(randomAlphanumeric(3), randomAlphanumeric(4), randomAlphanumeric(5));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/webhook\/WebhookQGChangeEventListenerTest.java":[{"add":["217","    return new Object[][] {"],"delete":["51","import org.sonar.server.project.Project;","218","    return new Object[][]{"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/ComponentTreeBuilderTest.java":[{"add":["33","import org.sonar.ce.task.projectanalysis.analysis.Branch;","44","import static org.sonar.ce.task.projectanalysis.component.ComponentVisitor.Order.PRE_ORDER;","45","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","46","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","47","import static org.sonar.scanner.protocol.output.ScannerReport.Component.newBuilder;","70","  private Project projectInDb = Project.from(newPrivateProjectDto(newOrganizationDto(), UUID_SUPPLIER.apply(\"K1\")).setDbKey(\"K1\").setDescription(null));"],"delete":["36","import org.sonar.ce.task.projectanalysis.analysis.Branch;","49","import static org.sonar.scanner.protocol.output.ScannerReport.Component.newBuilder;","50","import static org.sonar.ce.task.projectanalysis.component.ComponentVisitor.Order.PRE_ORDER;","68","  private Project projectInDb = new Project(UUID_SUPPLIER.apply(\"K1\"), \"K1\", \"theProjectName\");"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/webhook\/WebhookPayloadFactoryImpl.java":[{"add":[],"delete":["33","import org.sonar.server.project.Project;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ProjectLifeCycleListenersImplTest.java":[{"add":["42","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","43","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","300","    return Project.from(newPrivateProjectDto(newOrganizationDto()));","303","  private static int counter = 3_989;","304","","307","    Project project = Project.from(newPrivateProjectDto(newOrganizationDto()));"],"delete":["205","","298","  private static int counter = 3_989;","299","","301","    int base = counter++;","302","    return new Project(base + \"_uuid\", base + \"_key\", base + \"_name\");","307","    Project project = new Project(base + \"_uuid\", base + \"_key\", base + \"_name\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/DeleteActionTest.java":[{"add":[],"delete":["356","      ComponentDto view = db.components().insertView(organization);","357","      ComponentDto subview1 = db.components().insertComponent(ComponentTesting.newSubView(view, \"v1\" + i, \"ksv1\" + i));","358","      ComponentDto subview2 = db.components().insertComponent(ComponentTesting.newSubView(subview1, \"v2\" + i, \"ksv2\" + i));","359","      ComponentDto application = db.components().insertApplication(organization);","360","      ComponentDto projectCopy = db.components().insertComponent(ComponentTesting.newProjectCopy(\"pc1\" + i, project, subview1));","361","      ComponentDto projectCopyForApplication = db.components().insertComponent(ComponentTesting.newProjectCopy(\"pc2\" + i, project, application));"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/rule\/RuleTagFormat.java":[{"add":["21","import java.util.Collection;","22","import java.util.Objects;","23","import java.util.Set;","26","import static java.lang.String.format;","27","import static java.lang.String.join;","28","import static java.util.Locale.ENGLISH;","29","import static java.util.stream.Collectors.toSet;","30","","39","  private static final String ERROR_MESSAGE_SUFFIX = \"Rule tags accept only the characters: a-z, 0-9, '+', '-', '#', '.'\";","40","","53","      throw new IllegalArgumentException(format(\"Tag '%s' is invalid. %s\", tag, ERROR_MESSAGE_SUFFIX));","57","","58","  public static Set<String> validate(Collection<String> tags) {","59","    Set<String> sanitizedTags = tags.stream()","60","      .filter(Objects::nonNull)","61","      .filter(tag -> !tag.isEmpty())","62","      .map(tag -> tag.toLowerCase(ENGLISH))","63","      .collect(toSet());","64","    Set<String> invalidTags = sanitizedTags.stream()","65","      .filter(tag -> !isValid(tag))","66","      .collect(toSet());","67","    if (invalidTags.isEmpty()) {","68","      return sanitizedTags;","69","    }","70","    throw new IllegalArgumentException(format(\"Tags '%s' are invalid. %s\", join(\", \", invalidTags), ERROR_MESSAGE_SUFFIX));","71","  }","72",""],"delete":["43","      throw new IllegalArgumentException(String.format(\"Tag '%s' is invalid. Rule tags accept only the characters: a-z, 0-9, '+', '-', '#', '.'\", tag));"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/views\/ViewsService.java":[{"add":["21","import java.util.stream.Collectors;","366","   * This is a POST request.","367","   * @see <a href=\"https:\/\/next.sonarqube.com\/sonarqube\/web_api\/api\/views\/set_tags_mode\">Further information about this action online (including a response example)<\/a>","368","   * @since 7.4","369","   *\/","370","  public void setTagsMode(SetTagsModeRequest request) {","371","    call(","372","      new PostRequest(path(\"set_tags_mode\"))","373","        .setParam(\"portfolio\", request.getPortfolio())","374","        .setParam(\"tags\", request.getTags() == null ? null : request.getTags().stream().collect(Collectors.joining(\",\")))","375","        .setMediaType(MediaTypes.JSON)","376","      ).content();","377","  }","378","","379","  \/**","380","   *","381","   * This is part of the internal API."],"delete":[]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/IssueFieldsSetter.java":[{"add":["318","    Set<String> newTags = RuleTagFormat.validate(tags);"],"delete":["26","import java.util.Locale;","38","import org.sonar.core.util.stream.MoreCollectors;","320","    Set<String> newTags = tags.stream()","321","      .filter(Objects::nonNull)","322","      .filter(tag -> !tag.isEmpty())","323","      .map(tag -> RuleTagFormat.validate(tag.toLowerCase(Locale.ENGLISH)))","324","      .collect(MoreCollectors.toSet());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/webhook\/WebhookQGChangeEventListener.java":[{"add":[],"delete":["34","import org.sonar.server.project.Project;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentService.java":[{"add":["39","import static java.util.Collections.emptyList;","67","      Project newProject = new Project(projectOrModule.uuid(), newKey, projectOrModule.name(), projectOrModule.description(), projectOrModule.getTags());","99","    Project project = new Project(resource.getUuid(), resource.getKey(), resource.getName(), resource.getDescription(), emptyList());"],"delete":["66","      Project newProject = new Project(projectOrModule.uuid(), newKey, projectOrModule.name(), projectOrModule.description());","98","    Project project = new Project(resource.getUuid(), resource.getKey(), resource.getName(), resource.getDescription());"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["248","  <select id=\"selectProjectsByOrganization\" resultType=\"Component\">","253","      p.enabled=${_true}","254","      and p.scope='PRJ'","255","      and p.qualifier='TRK'"],"delete":["248","  <select id=\"selectAllRootsByOrganization\" resultType=\"Component\">","253","      p.scope='PRJ'","254","    and (p.qualifier='TRK' or p.qualifier='VW' or p.qualifier='APP')"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/webhook\/WebhookPayloadFactoryImplTest.java":[{"add":[],"delete":["29","import org.sonar.server.project.Project;"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/ReportPersistComponentsStepTest.java":[{"add":["897","    analysisMetadataHolder.setProject(Project.from(dto));","904","    analysisMetadataHolder.setProject(Project.from(dto));"],"delete":["897","    analysisMetadataHolder.setProject(new Project(dto.uuid(), dto.getDbKey(), dto.name()));","904","    analysisMetadataHolder.setProject(new Project(dto.uuid(), dto.getDbKey(), dto.name()));"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/rule\/RuleTagFormatTest.java":[{"add":["21","import java.util.Collections;","24","import static java.util.Arrays.asList;","25","import static java.util.Collections.singletonList;","30","","63","","64","  @Test","65","  public void validate_and_sanitize_collection_of_tags() {","66","    assertThat(RuleTagFormat.validate(asList(\"style\", \"coding-style\", \"\"))).containsExactly(\"coding-style\", \"style\");","67","    assertThat(RuleTagFormat.validate(asList(\"style\", \"coding-style\", null))).containsExactly(\"coding-style\", \"style\");","68","    assertThat(RuleTagFormat.validate(asList(\"style\", \"style\", null))).containsExactly(\"style\");","69","    assertThat(RuleTagFormat.validate(singletonList(\"Uppercase\"))).containsExactly(\"uppercase\");","70","    assertThat(RuleTagFormat.validate(Collections.emptyList())).isEmpty();","71","  }","72","","73","  @Test","74","  public void fail_to_validate_collection_of_tags() {","75","    try {","76","      RuleTagFormat.validate(asList(\"coding style\", \"Stylé\", \"valid\"));","77","      fail();","78","    } catch (IllegalArgumentException e) {","79","      assertThat(e).hasMessage(\"Tags 'coding style, stylé' are invalid. Rule tags accept only the characters: a-z, 0-9, '+', '-', '#', '.'\");","80","    }","81","  }"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/DeleteAction.java":[{"add":["130","    List<ComponentDto> roots = dbClient.componentDao().selectProjectsByOrganization(dbSession, organization.getUuid());"],"delete":["130","    List<ComponentDto> roots = dbClient.componentDao().selectAllRootsByOrganization(dbSession, organization.getUuid());"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["701","    return new Object[][] {","930","    return new Object[][] {","1010","  public void select_projects_by_organization() {","1022","    assertThat(underTest.selectProjectsByOrganization(dbSession, organization.getUuid()))","1024","      .containsExactlyInAnyOrder(project1.uuid(), project2.uuid())","1025","      .doesNotContain(view.uuid(), application.uuid());","1029","  public void select_projects_by_organization_does_not_return_branches() {","1034","    assertThat(underTest.selectProjectsByOrganization(dbSession, organization.getUuid()))","1185","","1186","  @Test"],"delete":["701","    return new Object[][]{","930","    return new Object[][]{","1010","  public void select_all_roots_by_organization() {","1022","    assertThat(underTest.selectAllRootsByOrganization(dbSession, organization.getUuid()))","1024","      .containsExactlyInAnyOrder(project1.uuid(), project2.uuid(), view.uuid(), application.uuid());","1028","  public void select_all_roots_by_organization_does_not_return_branches() {","1033","    assertThat(underTest.selectAllRootsByOrganization(dbSession, organization.getUuid()))","1166","","1185","    @Test"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":[{"add":["301","   * Select all projects for a given organization.","305","  public List<ComponentDto> selectProjectsByOrganization(DbSession dbSession, String organizationUuid) {","306","    return mapper(dbSession).selectProjectsByOrganization(organizationUuid);"],"delete":["301","   * Select all root components (projects and views), including disabled ones, for a given organization.","305","  public List<ComponentDto> selectAllRootsByOrganization(DbSession dbSession, String organizationUuid) {","306","    return mapper(dbSession).selectAllRootsByOrganization(organizationUuid);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentMapper.java":[{"add":["89","  List<ComponentDto> selectProjectsByOrganization(@Param(\"organizationUuid\") String organizationUuid);"],"delete":["89","  List<ComponentDto> selectAllRootsByOrganization(@Param(\"organizationUuid\") String organizationUuid);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/webhook\/WebhookPostTaskTest.java":[{"add":["160","      new org.sonar.server.webhook.Project(project.getUuid(), project.getKey(), project.getName()),"],"delete":["160","      new org.sonar.server.project.Project(project.getUuid(), project.getKey(), project.getName()),"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/BranchPersisterImplTest.java":[{"add":["73","    analysisMetadataHolder.setProject(Project.from(dto));","94","    analysisMetadataHolder.setProject(Project.from(dto));"],"delete":["73","    analysisMetadataHolder.setProject(new Project(dto.uuid(), dto.getDbKey(), dto.name()));","94","    analysisMetadataHolder.setProject(new Project(dto.uuid(), dto.getKey(), dto.name(), dto.description()));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistLiveMeasuresStepTest.java":[{"add":["44","import static java.util.Collections.emptyList;","251","    analysisMetadataHolder.setProject(new Project(project.getUuid(), project.getKey(), project.getName(), project.getDescription(), emptyList()));","276","    analysisMetadataHolder.setProject(Project.from(portfolioDto));"],"delete":["250","    analysisMetadataHolder.setProject(new Project(project.getUuid(), project.getKey(), project.getName()));","275","    analysisMetadataHolder.setProject(new Project(portfolioDto.uuid(), portfolioDto.getDbKey(), portfolioDto.name()));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/measure\/PostMeasuresComputationChecksStepTest.java":[{"add":["44","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","45","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","74","    Project project = Project.from(newPrivateProjectDto(newOrganizationDto()));","75","    analysisMetadataHolder.setProject(project);","82","    assertThat(contextArgumentCaptor.getValue().getProjectUuid()).isEqualTo(project.getUuid());"],"delete":["72","    analysisMetadataHolder.setProject(new Project(\"project_uuid\", \"project_key\", \"project_name\"));","79","    assertThat(contextArgumentCaptor.getValue().getProjectUuid()).isEqualTo(\"project_uuid\");"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/webhook\/ProjectAnalysisTest.java":[{"add":["150","      \"ProjectAnalysis{project=Project{uuid='uuid', key='key', name='name'}, ceTask=CeTask{id='id', status=SUCCESS}, branch=Branch{main=true, name='name', type=SHORT}, qualityGate=EvaluatedQualityGate{qualityGate=QualityGate{id=id, name='name', conditions=[]}, status=WARN, evaluatedConditions=[]}, updatedAt=1, properties={a=b}, analysis=Analysis{uuid='analysis_uuid', date=1500}}\");"],"delete":["27","import org.sonar.server.project.Project;","151","      \"ProjectAnalysis{project=Project{uuid='uuid', key='key', name='name', description=null}, ceTask=CeTask{id='id', status=SUCCESS}, branch=Branch{main=true, name='name', type=SHORT}, qualityGate=EvaluatedQualityGate{qualityGate=QualityGate{id=id, name='name', conditions=[]}, status=WARN, evaluatedConditions=[]}, updatedAt=1, properties={a=b}, analysis=Analysis{uuid='analysis_uuid', date=1500}}\");"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/analysis\/AnalysisMetadataHolderImplTest.java":[{"add":["32","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","33","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","278","    Project project = Project.from(newPrivateProjectDto(newOrganizationDto()));","295","    underTest.setProject(Project.from(newPrivateProjectDto(newOrganizationDto())));","299","","300","    underTest.setProject(Project.from(newPrivateProjectDto(newOrganizationDto())));"],"delete":["276","    Project project = new Project(\"U\", \"K\", \"N\");","293","    underTest.setProject(new Project(\"U\", \"K\", \"N\"));","297","    underTest.setProject(new Project(\"U\", \"K\", \"N\"));"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/views\/SetTagsModeRequest.java":[{"add":[],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":[{"add":["113","    analysisMetadata.setProject(Project.from(dto));"],"delete":["113","    analysisMetadata.setProject(new Project(dto.uuid(), dto.getDbKey(), dto.name(), dto.description()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentServiceUpdateKeyTest.java":[{"add":["42","import static java.util.Collections.emptyList;","199","      new RekeyedProject(new Project(project.uuid(), \"your_project\", project.name(), project.uuid(), emptyList()), \"my_project\")","216","      new RekeyedProject(new Project(project.uuid(), \"your_project\", project.name(), project.uuid(), emptyList()), \"my_project\")"],"delete":["198","      new RekeyedProject(new Project(project.uuid(), \"your_project\", project.name(), project.uuid()), \"my_project\")","215","      new RekeyedProject(new Project(project.uuid(), \"your_project\", project.name(), project.uuid()), \"my_project\")"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/project\/ProjectTest.java":[{"add":["23","import static java.util.Collections.emptyList;","29","    Project project1 = new Project(\"U1\", \"K1\", \"N1\", null, emptyList());","30","    Project project2 = new Project(\"U1\", \"K1\", \"N1\", null, emptyList());","44","    Project project1 = new Project(\"U1\", \"K1\", \"N1\", \"D1\", emptyList());","58","    Project project1 = new Project(\"U1\", \"K1\", \"N1\", null, emptyList());","59","    Project project2 = new Project(\"U1\", \"K1\", \"N1\", \"D1\", emptyList());","64","    assertThat(project1).isEqualTo(new Project(\"U1\", \"K1\", \"N1\", null, emptyList()));","65","    assertThat(project1).isNotEqualTo(new Project(\"U1\", \"K2\", \"N1\", null, emptyList()));","66","    assertThat(project1).isNotEqualTo(new Project(\"U1\", \"K1\", \"N2\", null, emptyList()));","72","    assertThat(project1.hashCode()).isEqualTo(new Project(\"U1\", \"K1\", \"N1\", null, emptyList()).hashCode());","73","    assertThat(project1.hashCode()).isNotEqualTo(new Project(\"U1\", \"K2\", \"N1\", null, emptyList()).hashCode());","74","    assertThat(project1.hashCode()).isNotEqualTo(new Project(\"U1\", \"K1\", \"N2\", null, emptyList()).hashCode());"],"delete":["28","    Project project1 = new Project(\"U1\", \"K1\", \"N1\");","29","    Project project2 = new Project(\"U1\", \"K1\", \"N1\", null);","43","    Project project1 = new Project(\"U1\", \"K1\", \"N1\", \"D1\");","57","    Project project1 = new Project(\"U1\", \"K1\", \"N1\");","58","    Project project2 = new Project(\"U1\", \"K1\", \"N1\", \"D1\");","63","    assertThat(project1).isEqualTo(new Project(\"U1\", \"K1\", \"N1\", null));","64","    assertThat(project1).isNotEqualTo(new Project(\"U1\", \"K2\", \"N1\", null));","65","    assertThat(project1).isNotEqualTo(new Project(\"U1\", \"K1\", \"N2\", null));","71","    assertThat(project1.hashCode()).isEqualTo(new Project(\"U1\", \"K1\", \"N1\", null).hashCode());","72","    assertThat(project1.hashCode()).isNotEqualTo(new Project(\"U1\", \"K2\", \"N1\", null).hashCode());","73","    assertThat(project1.hashCode()).isNotEqualTo(new Project(\"U1\", \"K1\", \"N2\", null).hashCode());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SetTagsActionTest.java":[{"add":["48","import org.sonar.server.issue.WebIssueStorage;","180","  public void fail_when_tag_use_bad_format() {","185","    expectedException.expectMessage(\"Tags 'pol op' are invalid. Rule tags accept only the characters: a-z, 0-9, '+', '-', '#', '.'\");"],"delete":["46","import org.sonar.server.issue.WebIssueStorage;","180","  public void fail_when_bad_tag_format() {","185","    expectedException.expectMessage(\"Tag 'pol op' is invalid. Rule tags accept only the characters: a-z, 0-9, '+', '-', '#', '.'\");"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStepTest.java":[{"add":["61","import static org.sonar.db.organization.OrganizationTesting.newOrganizationDto;","217","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY)))","259","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY)))","279","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY)))","477","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY)));"],"delete":["216","      .setProject(new Project(\"U1\", REPORT_PROJECT_KEY, REPORT_PROJECT_KEY))","258","      .setProject(new Project(\"U1\", REPORT_PROJECT_KEY, REPORT_PROJECT_KEY))","278","      .setProject(new Project(\"U1\", REPORT_PROJECT_KEY, REPORT_PROJECT_KEY))","476","      .setProject(new Project(\"U1\", REPORT_PROJECT_KEY, REPORT_PROJECT_KEY));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/QualityGateEventsStepTest.java":[{"add":["46","import static java.util.Collections.emptyList;","91","    analysisMetadataHolder.setProject(new Project(PROJECT_COMPONENT.getUuid(), PROJECT_COMPONENT.getKey(), PROJECT_COMPONENT.getName(), PROJECT_COMPONENT.getDescription(), emptyList()));"],"delete":["90","    analysisMetadataHolder.setProject(new Project(PROJECT_COMPONENT.getUuid(), PROJECT_COMPONENT.getKey(), PROJECT_COMPONENT.getName()));"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/webhook\/WebhookPostTask.java":[{"add":["33","import org.sonar.server.webhook.Project;","82","    Project project = new Project(projectAnalysis.getProject().getUuid(), projectAnalysis.getProject().getKey(), projectAnalysis.getProject().getName());"],"delete":["27","import org.sonar.server.project.Project;","59","    Project project = new Project(projectAnalysis.getProject().getUuid(), projectAnalysis.getProject().getKey(), projectAnalysis.getProject().getName());"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/webhook\/Project.java":[{"add":[],"delete":[]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/webhook\/ProjectAnalysis.java":[{"add":[],"delete":["25","import org.sonar.server.project.Project;"]}]}},"b4201256a7e4d8b153ecf0cb074f6e264df67f17":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/application_helper.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/helpers\/application_helper.rb":[{"add":["210","          date = snapshot_datetime.strftime('%FT%T%z')"],"delete":["210","          date = snapshot_datetime.to_date"]}]}},"12f9ab1d2fbe3850c87e08e2792865a06856ef16":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":[{"add":["80","      \/\/ $FlowFixMe","81","      document.documentElement.classList.add('white-page');","89","    \/\/ $FlowFixMe","90","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["165","    \/\/ $FlowFixMe","166","    document.documentElement.classList.add('white-page');","225","    \/\/ $FlowFixMe","226","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":[{"add":["41","    \/\/ $FlowFixMe","42","    document.documentElement.classList.add('white-page');","52","    \/\/ $FlowFixMe","53","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":[{"add":["79","    \/\/ $FlowFixMe","80","    document.documentElement.classList.add('white-page');","104","    \/\/ $FlowFixMe","105","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["103","    \/\/ $FlowFixMe","105","    \/\/ $FlowFixMe","106","    document.documentElement.classList.add('white-page');","139","    \/\/ $FlowFixMe","141","    \/\/ $FlowFixMe","142","    document.documentElement.classList.remove('white-page');"],"delete":[]}]}},"6cf8d48fe9ffbe43299c4d774336866f12a43138":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/rule\/RulesDefinitionXmlLoaderTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/rule\/RulesDefinitionXmlLoader.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/rule\/RulesDefinitionXmlLoaderTest.java":[{"add":["34","import static org.sonar.test.ExceptionCauseMatcher.hasType;","201","    expectedException.expect(IllegalStateException.class);","202","    expectedException.expectMessage(\"Fail to load the rule with key [squid:1]\");","203","    expectedException.expectCause(hasType(IllegalArgumentException.class)","204","      .andMessage(\"No enum constant org.sonar.api.server.debt.DebtRemediationFunction.Type.UNKNOWN\"));","205","","206","    load(\"\" +","207","      \"<rules>\" +","208","      \"  <rule>\" +","209","      \"    <key>1<\/key>\" +","210","      \"    <name>One<\/name>\" +","211","      \"    <description>Desc<\/description>\" +","212","      \"    <remediationFunction>UNKNOWN<\/remediationFunction>\" +","213","      \"  <\/rule>\" +","214","      \"<\/rules>\");","254","    String xml = \"\" +","255","      \"<rules>\" +","256","      \"  <rule>\" +","257","      \"    <key>1<\/key>\" +","258","      \"    <name>One<\/name>\" +","259","      \"    <description>Desc<\/description>\" +","260","      \"    <descriptionFormat>UNKNOWN<\/descriptionFormat>\" +","261","      \"  <\/rule>\" +","262","      \"<\/rules>\";","263","","264","    expectedException.expect(IllegalStateException.class);","265","    expectedException.expectMessage(\"Fail to load the rule with key [squid:1]\");","266","    expectedException.expectCause(hasType(IllegalArgumentException.class)","267","      .andMessage(\"No enum constant org.sonar.api.server.rule.RulesDefinitionXmlLoader.DescriptionFormat.UNKNOWN\"));","268","","269","    load(xml).rule(\"1\");"],"delete":["34","import static org.junit.Assert.fail;","201","    try {","202","      load(\"\" +","203","        \"<rules>\" +","204","        \"  <rule>\" +","205","        \"    <key>1<\/key>\" +","206","        \"    <name>One<\/name>\" +","207","        \"    <description>Desc<\/description>\" +","208","        \"    <remediationFunction>UNKNOWN<\/remediationFunction>\" +","209","        \"  <\/rule>\" +","210","        \"<\/rules>\");","211","      fail();","212","    } catch (IllegalArgumentException e) {","213","      assertThat(e).hasMessageContaining(\"Fail to load the rule with key [squid:1]\");","214","      assertThat(e.getCause()).hasMessageContaining(\"No enum constant org.sonar.api.server.debt.DebtRemediationFunction.Type.UNKNOWN\");","215","    }","255","    try {","256","      String xml = \"\" +","257","        \"<rules>\" +","258","        \"  <rule>\" +","259","        \"    <key>1<\/key>\" +","260","        \"    <name>One<\/name>\" +","261","        \"    <description>Desc<\/description>\" +","262","        \"    <descriptionFormat>UNKNOWN<\/descriptionFormat>\" +","263","        \"  <\/rule>\" +","264","        \"<\/rules>\";","265","      RulesDefinition.Rule rule = load(xml).rule(\"1\");","266","      assertThat(rule.markdownDescription()).isEqualTo(\"Desc\");","267","      assertThat(rule.htmlDescription()).isNull();","268","    } catch (IllegalArgumentException e) {","269","      assertThat(e).hasMessageContaining(\"Fail to load the rule with key [squid:1]\");","270","      assertThat(e.getCause()).hasMessageContaining(\"No enum constant org.sonar.api.server.rule.RulesDefinitionXmlLoader.DescriptionFormat.UNKNOWN\");","271","    }"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/rule\/RulesDefinitionXmlLoader.java":[{"add":["341","      throw new IllegalStateException(format(\"Fail to load the rule with key [%s:%s]\", repo.key(), key), e);"],"delete":["341","      throw new IllegalArgumentException(format(\"Fail to load the rule with key [%s:%s]\", repo.key(), key), e);"]}]}},"0e95468857452a3a61ca0f697d17f3332ebb48fc":{"changes":{"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/db\/IssueDto.java":"MODIFY"},"diff":{"sonar-core\/src\/main\/java\/org\/sonar\/core\/issue\/db\/IssueDto.java":[{"add":["662","    issue.setChecksum(checksum);"],"delete":[]}]}},"92a5bd4f512a7d9db533d04b051b92c3a3bec6c7":{"changes":{"\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/users\/templates\/users-list.hbs":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/templates\/users-list.hbs":[{"add":["3","      <th>&nbsp;<\/th>"],"delete":["3","      {{#ifShowAvatars}}","4","        <th>&nbsp;<\/th>","5","      {{\/ifShowAvatars}}"]}]}},"a272c3f10047489b2297e08a0f58dab27af350dc":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileExporters.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/details\/ProfileExporters.tsx":[{"add":["38","      qualityProfile: profile.name"],"delete":["38","      name: profile.name"]}]}},"3ee8ec8dec07179ea5eb72cf7e3a5cc584f5734c":{"changes":{"\/dev\/null":"DELETE","tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/AuthorizationSuite.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/ProjectPermissionsTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/AuthorizationSuite.java":[{"add":["36","  ProjectPermissionsTest.class,"],"delete":["36",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":[{"add":["41","      SearchMembersAction.class,","42","      \/\/ Update of project visibility is used on on-premise instances, not only on SonarCloud \/ Organizations","43","      UpdateProjectVisibilityAction.class);","51","        UpdateAction.class);"],"delete":["41","      SearchMembersAction.class);","49","        UpdateAction.class,","50","        UpdateProjectVisibilityAction.class);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/ProjectPermissionsTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":[{"add":["41","      .hasSize(COMPONENTS_IN_EMPTY_COMPONENT_CONTAINER + 5);"],"delete":["41","      .hasSize(COMPONENTS_IN_EMPTY_COMPONENT_CONTAINER + 4);"]}]}},"369b4771c0354647c8c54f3e42be742f33e26c7f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/Unauthorized-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/Unauthorized.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/EmailAlreadyExists.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/EmailAlreadyExists-test.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/Unauthorized-test.tsx":[{"add":["23","jest.mock('..\/..\/..\/..\/helpers\/cookies', () => ({","24","  getCookie: jest.fn().mockReturnValue('Foo')","25","}));","26","","28","  expect(shallow(<Unauthorized \/>)).toMatchSnapshot();"],"delete":["24","  expect(shallow(<Unauthorized location={{ query: { message: 'Foo' } }} \/>)).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/Unauthorized.tsx":[{"add":["22","import { getCookie } from '..\/..\/..\/helpers\/cookies';","24","export default function Unauthorized() {","25","  const message = decodeURIComponent(getCookie('AUTHENTICATION-ERROR') || '');"],"delete":["23","interface Props {","24","  location: {","25","    query: {","26","      message: string;","27","    };","28","  };","29","}","30","","31","export default function Unauthorized(props: Props) {","32","  const { message } = props.location.query;","33",""]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/EmailAlreadyExists.tsx":[{"add":["22","import { Alert } from '..\/..\/..\/components\/ui\/Alert';","23","import { getIdentityProviders } from '..\/..\/..\/api\/users';","24","import { getCookie } from '..\/..\/..\/helpers\/cookies';","25","import { getBaseUrl } from '..\/..\/..\/helpers\/urls';","33","export default class EmailAlreadyExists extends React.PureComponent<{}, State> {","35","  state: State = { identityProviders: [] };","50","          this.setState({ identityProviders });","53","      () => {}","57","  getAuthError = (): {","58","    email?: string;","59","    login?: string;","60","    provider?: string;","61","    existingLogin?: string;","62","    existingProvider?: string;","63","  } => {","64","    const cookie = getCookie('AUTHENTICATION-ERROR');","65","    if (cookie) {","66","      return JSON.parse(decodeURIComponent(cookie));","67","    }","68","    return {};","69","  };","70","","71","  renderIdentityProvier = (provider?: string, login?: string) => {","98","    const authError = this.getAuthError();","107","                values={{ email: <strong>{authError.email}<\/strong> }}","110","            {this.renderIdentityProvier(authError.existingProvider, authError.existingLogin)}","115","            {this.renderIdentityProvier(authError.provider, authError.login)}","130","              href={`${getBaseUrl()}\/sessions\/init\/${authError.provider}?allowEmailShift=true`}>"],"delete":["21","import { getIdentityProviders } from '..\/..\/..\/api\/users';","25","import { getBaseUrl } from '..\/..\/..\/helpers\/urls';","26","import { Alert } from '..\/..\/..\/components\/ui\/Alert';","27","","28","interface Props {","29","  location: {","30","    query: {","31","      email: string;","32","      login: string;","33","      provider: string;","34","      existingLogin: string;","35","      existingProvider: string;","36","    };","37","  };","38","}","42","  loading: boolean;","45","export default class EmailAlreadyExists extends React.PureComponent<Props, State> {","47","  state: State = { identityProviders: [], loading: true };","59","    this.setState({ loading: true });","63","          this.setState({ identityProviders, loading: false });","66","      () => {","67","        if (this.mounted) {","68","          this.setState({ loading: false });","69","        }","70","      }","74","  renderIdentityProvier = (provider: string, login: string) => {","101","    const { query } = this.props.location;","102","","111","                values={{ email: <strong>{query.email}<\/strong> }}","114","            {this.renderIdentityProvier(query.existingProvider, query.existingLogin)}","119","            {this.renderIdentityProvier(query.provider, query.login)}","134","              href={`${getBaseUrl()}\/sessions\/init\/${query.provider}?allowEmailShift=true`}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/EmailAlreadyExists-test.tsx":[{"add":["44","jest.mock('..\/..\/..\/..\/helpers\/cookies', () => ({","45","  getCookie: jest","46","    .fn()","47","    .mockReturnValue(","48","      '%7B%22email%22%3A%22mail%40example.com%22%2C%22login%22%3A%22foo%22%2C%22provider%22%3A%22github%22%2C%22existingLogin%22%3A%22bar%22%2C%22existingProvider%22%3A%22bitbucket%22%7D'","49","    )","50","}));","51","","53","  const wrapper = shallow(<EmailAlreadyExists \/>);"],"delete":["45","  const query = {","46","    email: 'mail@example.com',","47","    login: 'foo',","48","    provider: 'github',","49","    existingLogin: 'bar',","50","    existingProvider: 'bitbucket'","51","  };","52","  const wrapper = shallow(<EmailAlreadyExists location={{ query }} \/>);"]}]}},"df6860806d152b2873e89e659896ae6de146daea":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileActions-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileActions.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileActions-test.tsx":[{"add":["22","import { click, waitAndUpdate } from '..\/..\/..\/..\/helpers\/testUtils';","87","","88","it('should copy profile', async () => {","89","  const updateProfiles = jest.fn(() => Promise.resolve());","90","  const push = jest.fn();","91","  const wrapper = shallow(","92","    <ProfileActions","93","      onRequestFail={jest.fn()}","94","      organization=\"org\"","95","      profile={{ ...PROFILE, actions: { copy: true } }}","96","      updateProfiles={updateProfiles}","97","    \/>,","98","    { context: { router: { push } } }","99","  );","100","","101","  click(wrapper.find('[id=\"quality-profile-copy\"]'));","102","  expect(wrapper.find('CopyProfileForm').exists()).toBe(true);","103","","104","  wrapper.find('CopyProfileForm').prop<Function>('onCopy')('new-name');","105","  expect(updateProfiles).toBeCalled();","106","  await waitAndUpdate(wrapper);","107","","108","  expect(push).toBeCalledWith({","109","    pathname: '\/organizations\/org\/quality_profiles\/show',","110","    query: { language: 'java', name: 'new-name' }","111","  });","112","  expect(wrapper.find('CopyProfileForm').exists()).toBe(false);","113","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileActions.tsx":[{"add":["90","    this.closeCopyForm();"],"delete":[]}]}},"4ce8eea9aef0854d57e6a0644b363cbed524b5bd":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/style.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/style.css":[{"add":["122",".measure-details-viewer .issue-list {","123","  \/* no math, just a good guess *\/","124","  min-width: 600px;","125","  width: 800px;","126","}","127","","128","@media (max-width: 1320px) {","129","  .measure-details-viewer .issue-list {","130","    width: calc(60vw - 80px);","131","  }","132","}","133",""],"delete":[]}]}},"47901d1f6ef2aebc0f72972fccf3d680ea9d2a7d":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":[{"add":["46","  flex: 0 1 300px; \/* Workaround for SONAR-10971 *\/","47","  min-width: 0;"],"delete":["46","  flex: 1;","47","  max-width: 300px;"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.css":[{"add":["103","  flex: 0 1 310px; \/* Workaround for SONAR-10971 *\/","104","  min-width: 0;"],"delete":["103","  flex: 1;","104","  max-width: 310px;"]}]}},"2beaf73c2d10dcaaf3949889af53579e7d5aba13":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.css":"ADD","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/MetaLink-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/__tests__\/ProjectCard-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.css":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/MetaLink-test.tsx":[{"add":["33","  expect(shallow(<MetaLink iconOnly={true} link={link} \/>)).toMatchSnapshot();"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/MetaLink.tsx":[{"add":["24","import '.\/MetaLink.css';","27","  iconOnly?: boolean;","46","    const { iconOnly, link } = this.props;","47","    const linkTitle = getLinkName(link);","55","          target=\"_blank\"","56","          title={linkTitle}>","58","          {!iconOnly && linkTitle}"],"delete":["44","    const { link } = this.props;","52","          target=\"_blank\">","54","          {getLinkName(link)}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/utils.ts":[{"add":["33","    ...sortBy(unknown, link => link.name && link.name.toLowerCase())"],"delete":["33","    ...sortBy(unknown, link => link.name!.toLowerCase())"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/__tests__\/ProjectCard-test.tsx":[{"add":["24","  const wrapper = shallowRender();","25","  expect(wrapper.find('.account-project-key').text()).toBe('key');","27","    wrapper","29","      .find('Link')","35","  const wrapper = shallowRender({ description: 'bla' });","36","  expect(wrapper.find('.account-project-description').text()).toBe('bla');","40","  const wrapper = shallowRender();","41","  expect(wrapper.find('.account-project-description').length).toBe(0);","42","  expect(wrapper.find('.account-project-quality-gate').length).toBe(0);","43","  expect(wrapper.find('.account-project-links').length).toBe(0);","47","  const wrapper = shallowRender({ lastAnalysisDate: '2016-05-17' });","48","  expect(wrapper.find('.account-project-analysis DateFromNow')).toHaveLength(1);","52","  const wrapper = shallowRender();","53","  expect(wrapper.find('.account-project-analysis').text()).toContain(","59","  const wrapper = shallowRender({ qualityGate: 'ERROR' });","61","    wrapper","63","      .find('Level')","69","  const wrapper = shallowRender({","70","    links: [{ name: 'name', type: 'type', href: 'href' }]","71","  });","72","  expect(wrapper.find('MetaLink').length).toBe(1);","74","","75","function shallowRender(project: Partial<T.MyProject> = {}) {","76","  return shallow(<ProjectCard project={{ key: 'key', links: [], name: 'name', ...project }} \/>);","77","}"],"delete":["21","import { Link } from 'react-router';","23","import Level from '..\/..\/..\/..\/components\/ui\/Level';","24","","25","const BASE = { key: 'key', links: [], name: 'name' };","28","  const project = { ...BASE };","29","  const output = shallow(<ProjectCard project={project} \/>);","30","  expect(output.find('.account-project-key').text()).toBe('key');","32","    output","34","      .find(Link)","40","  const project = { ...BASE, description: 'bla' };","41","  const output = shallow(<ProjectCard project={project} \/>);","42","  expect(output.find('.account-project-description').text()).toBe('bla');","46","  const project = { ...BASE };","47","  const output = shallow(<ProjectCard project={project} \/>);","48","  expect(output.find('.account-project-description').length).toBe(0);","49","  expect(output.find('.account-project-quality-gate').length).toBe(0);","50","  expect(output.find('.account-project-links').length).toBe(0);","54","  const project = { ...BASE, lastAnalysisDate: '2016-05-17' };","55","  const output = shallow(<ProjectCard project={project} \/>);","56","  expect(output.find('.account-project-analysis DateFromNow')).toHaveLength(1);","60","  const project = { ...BASE };","61","  const output = shallow(<ProjectCard project={project} \/>);","62","  expect(output.find('.account-project-analysis').text()).toContain(","68","  const project = { ...BASE, qualityGate: 'ERROR' };","69","  const output = shallow(<ProjectCard project={project} \/>);","71","    output","73","      .find(Level)","79","  const project = {","80","    ...BASE,","81","    links: [{ name: 'n', type: 't', href: 'h' }]","82","  };","83","  const output = shallow(<ProjectCard project={project} \/>);","84","  expect(output.find('.account-project-links').find('li').length).toBe(1);"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/meta\/__tests__\/__snapshots__\/MetaLink-test.tsx.snap":[{"add":["9","    title=\"Foo\"","27","    title=\"Foo\"","45","    title=\"Foo\"","63","    title=\"Foo\"","74","exports[`should match snapshot 2`] = `","75","<li>","76","  <a","77","    className=\"link-with-icon\"","78","    href=\"http:\/\/example.com\"","79","    rel=\"nofollow noreferrer noopener\"","80","    target=\"_blank\"","81","    title=\"Foo\"","82","  >","83","    <ProjectLinkIcon","84","      className=\"little-spacer-right\"","85","      type=\"foo\"","86","    \/>","87","  <\/a>","88","<\/li>","89","`;","90","","99","    title=\"Dangerous\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/styles.css":[{"add":[],"delete":["476",".copy-paste-link .overview-key {","477","  width: 90%;","478","}","479","","480",".copy-paste-link .close {","481","  color: #000;","482","  border-bottom: 0;","483","  height: 100%;","484","  display: inline-block;","485","  margin-left: 5px;","486","  box-sizing: border-box;","487","}","488","","489",".copy-paste-link .close svg {","490","  vertical-align: sub;","491","}","492",""]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectCard.tsx":[{"add":["26","import MetaLink from '..\/..\/overview\/meta\/MetaLink';","27","import { orderLinks } from '..\/..\/projectLinks\/utils';","35","  const { links } = project;","36","","37","  const orderedLinks: T.ProjectLink[] = orderLinks(","38","    links.map((link, i) => {","39","      const { href, name, type } = link;","40","      return {","41","        id: `link-${i}`,","42","        name,","43","        type,","44","        url: href","45","      };","46","    })","47","  );","48","","87","      {orderedLinks.length > 0 && (","90","            {orderedLinks.map(link => (","91","              <MetaLink iconOnly={true} key={link.id} link={link} \/>"],"delete":["20","import { sortBy } from 'lodash';","26","import ProjectLinkIcon from '..\/..\/..\/components\/icons-components\/ProjectLinkIcon';","35","  const links = sortBy(project.links, 'type');","74","      {links.length > 0 && (","77","            {links.map(link => (","78","              <li key={link.type}>","79","                <a","80","                  className=\"link-with-icon\"","81","                  href={link.href}","82","                  rel=\"nofollow\"","83","                  target=\"_blank\"","84","                  title={link.name}>","85","                  <ProjectLinkIcon type={link.type} \/>","86","                <\/a>","87","              <\/li>"]}]}},"9eb83a4ee9e247c4ab8af35b8e30c2f8c220ca68":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/filemove\/FileMoveDetectionStep.java":[{"add":["258","        Match match = matchesToValidate.get(0);"],"delete":["258","        Match match = matches.get(0);"]}]}},"f2bf93dff30ed93fbce24dcf2078801e2544d008":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStepTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/ComponentTreeBuilder.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/BuildComponentTreeStepTest.java":[{"add":["196","  \/**","197","   * SONAR-13262","198","   *\/","199","  @Test","200","  public void verify_tree_is_correctly_built_in_prs_with_repeated_names() {","201","    setAnalysisMetadataHolder(true);","202","    reportReader.putComponent(component(ROOT_REF, PROJECT, REPORT_PROJECT_KEY, FILE_1_REF));","203","    reportReader.putComponent(componentWithPath(FILE_1_REF, FILE, REPORT_PROJECT_KEY + \"\/file.js\"));","204","","205","    TestComputationStepContext context = new TestComputationStepContext();","206","    underTest.execute(context);","207","","208","    \/\/ modified root","209","    Component mRoot = treeRootHolder.getRoot();","210","    verifyComponent(mRoot, Component.Type.PROJECT, ROOT_REF, 1);","211","","212","    Component dir = mRoot.getChildren().get(0);","213","    assertThat(dir.getName()).isEqualTo(REPORT_PROJECT_KEY);","214","    assertThat(dir.getShortName()).isEqualTo(REPORT_PROJECT_KEY);","215","","216","    verifyComponent(dir, Component.Type.DIRECTORY, null, 1);","217","  }","218","","298","    setAnalysisMetadataHolder();","519","      .setName(key)","581","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY).setName(REPORT_PROJECT_KEY)));"],"delete":["275","    Branch branch = new DefaultBranchImpl();","276","    analysisMetadataHolder.setRootComponentRef(ROOT_REF)","277","      .setAnalysisDate(ANALYSIS_DATE)","278","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY)))","279","      .setBranch(branch);","561","      .setProject(Project.from(newPrivateProjectDto(newOrganizationDto()).setDbKey(REPORT_PROJECT_KEY)));"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/component\/ComponentTreeBuilder.java":[{"add":["215","    return buildChangedComponentTree(project);","219","  private static Component buildChangedComponentTree(Component component) {","224","        return buildChangedDirectory(component);","233","    return changedComponentBuilder(component, \"\")","240","  private static Component buildChangedDirectory(Component component) {","248","      String shortName = component.getShortName() + \"\/\" + child.getShortName();","249","      return changedComponentBuilder(child, shortName)","253","      return changedComponentBuilder(component, component.getShortName())","261","      .map(ComponentTreeBuilder::buildChangedComponentTree)","266","  private static ComponentImpl.Builder changedComponentBuilder(Component component, String newShortName) {","274","      .setShortName(newShortName)"],"delete":["215","    return buildChangedComponentTree(project, \"\");","219","  private static Component buildChangedComponentTree(Component component, String parentPath) {","224","        return buildChangedDirectory(component, parentPath);","233","    return changedComponentBuilder(component, \"\", \"\")","240","  private static Component buildChangedDirectory(Component component, String parentPath) {","248","      return changedComponentBuilder(child, parentPath, child.getName())","252","      return changedComponentBuilder(component, parentPath, component.getName())","260","      .map(c -> ComponentTreeBuilder.buildChangedComponentTree(c, component.getName()))","265","  private static ComponentImpl.Builder changedComponentBuilder(Component component, String parentPath, String path) {","273","      .setShortName(removeStart(removeStart(path, parentPath), \"\/\"))"]}]}},"b8ef8b4f80219e756f9a0f6a84243104b51387c7":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v56\/UpdateUsersExternalIdentityWhenEmpty.java":"ADD","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v56\/UpdateUsersExternalIdentityWhenEmptyTest.java":"ADD","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1153_update_users_external_identity_when_empty.rb":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/test\/resources\/org\/sonar\/db\/version\/v56\/UpdateUsersExternalIdentityWhenEmptyTest\/schema.sql":"ADD","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":[{"add":["85","import org.sonar.db.version.v56.UpdateUsersExternalIdentityWhenEmpty;","168","      FixLengthOfIssuesMessageOnOracle.class,","169","      UpdateUsersExternalIdentityWhenEmpty.class);"],"delete":["167","      FixLengthOfIssuesMessageOnOracle.class);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v56\/UpdateUsersExternalIdentityWhenEmpty.java":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v56\/UpdateUsersExternalIdentityWhenEmptyTest.java":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":[{"add":["31","    assertThat(container.size()).isEqualTo(66);"],"delete":["31","    assertThat(container.size()).isEqualTo(65);"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1153_update_users_external_identity_when_empty.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["32","  public static final int LAST_VERSION = 1_153;"],"delete":["32","  public static final int LAST_VERSION = 1_152;"]}],"sonar-db\/src\/test\/resources\/org\/sonar\/db\/version\/v56\/UpdateUsersExternalIdentityWhenEmptyTest\/schema.sql":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["408","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1153');"],"delete":[]}]}},"da3753ec1e4490fcee4ad7d1a25cf56176cc1924":{"changes":{"it\/it-tests\/src\/test\/java\/it\/plugins\/PluginsTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/plugins\/PluginsTest.java":[{"add":["74","    \"maifcobolplugin\",","75","","76","    \/\/ SONAR-7770 Realm plugins cannot be installed as no external configuration is used","77","    \"crowd\",\"ldap\",\"pam\"","78","  );"],"delete":["74","    \"maifcobolplugin\");"]}]}},"57fe683ca1f0cc1307a601e44ae367159257a66d":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineCode-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineIssuesList-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/IssueView.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/ListItem.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentAction.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineIssuesList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineCode-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueCommentAction-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineIssuesList-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineCode-test.js.snap":[{"add":["45","    onPopupToggle={[Function]}","46","    openPopup={null}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":[{"add":["70","    onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","71","    openPopup: ?{ issue: string, name: string},","178","        onPopupToggle={this.props.onPopupToggle}","179","        openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":[{"add":["36","  currentPopup: ?string,"],"delete":["36","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["88","  openPopup: ?{","89","    issue: string,","90","    name: string","91","  },","123","      openPopup: null,","601","  handlePopupToggle = (issue \/*: string *\/, popupName \/*: string *\/, open \/*: ?boolean *\/) => {","602","    this.setState((state \/*: State *\/) => {","603","      const samePopup =","604","        state.openPopup && state.openPopup.name === popupName && state.openPopup.issue === issue;","605","      if (open !== false && !samePopup) {","606","        return { openPopup: { issue, name: popupName } };","607","      } else if (open !== true && samePopup) {","608","        return { openPopup: null };","609","      }","610","      return state;","611","    });","612","  };","613","","812","            onPopupToggle={this.handlePopupToggle}","813","            openPopup={this.state.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineIssuesList-test.js.snap":[{"add":["13","    onPopupToggle={[Function]}","14","    openPopup={null}","24","    onPopupToggle={[Function]}","25","    openPopup={null}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/IssueView.js":[{"add":["32","  currentPopup: ?string,"],"delete":["32","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":[{"add":["34","  currentPopup: ?string,"],"delete":["34","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/ListItem.js":[{"add":["35","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","36","  openPopup: ?string,","111","          onPopupToggle={this.props.onPopupToggle}","112","          openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesList.js":[{"add":["34","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","35","  openPopup: ?{ issue: string, name: string},","45","    const { checked, component, issues, openPopup, selectedIssue } = this.props;","59","            onPopupToggle={this.props.onPopupToggle}","60","            openPopup={openPopup && openPopup.issue === issue.key ? openPopup.name : null}"],"delete":["43","    const { checked, component, issues, selectedIssue } = this.props;"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.js":[{"add":["43","    <IssueTitleBar issue={issue} currentPopup={null} onFail={jest.fn()} togglePopup={jest.fn()} \/>","52","      currentPopup={null}"],"delete":["43","    <IssueTitleBar issue={issue} currentPopup=\"\" onFail={jest.fn()} togglePopup={jest.fn()} \/>","52","      currentPopup=\"\""]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentAction.js":[{"add":["31","  currentPopup: ?string,"],"delete":["31","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["101","  openPopup: ?{","102","    issue: string,","103","    name: string","104","  },","157","      openPopup: null,","477","  handlePopupToggle = (issue \/*: string *\/, popupName \/*: string *\/, open \/*: ?boolean *\/) => {","478","    this.setState((state \/*: State *\/) => {","479","      const samePopup =","480","        state.openPopup && state.openPopup.name === popupName && state.openPopup.issue === issue;","481","      if (open !== false && !samePopup) {","482","        return { openPopup: { issue, name: popupName } };","483","      } else if (open !== true && samePopup) {","484","        return { openPopup: null };","485","      }","486","      return state;","487","    });","488","  };","489","","591","        onPopupToggle={this.handlePopupToggle}","592","        openPopup={this.state.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":[{"add":["64","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","65","  openPopup: ?{ issue: string, name: string},","154","          onPopupToggle={this.props.onPopupToggle}","155","          openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineIssuesList.js":[{"add":["29","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","30","  openPopup: ?{ issue: string, name: string},","39","    const { issues, onIssueClick, openPopup, selectedIssue } = this.props;","49","            onPopupToggle={this.props.onPopupToggle}","50","            openPopup={openPopup && openPopup.issue === issue.key ? openPopup.name : null}"],"delete":["37","    const { issues, onIssueClick, selectedIssue } = this.props;"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":[{"add":["37","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","38","  openPopup: ?string,","122","    this.props.onPopupToggle(this.props.issue.key, popupName, open);","153","        currentPopup={this.props.openPopup}"],"delete":["41","\/*::","42","type State = {","43","  currentPopup: string","44","};","45","*\/","46","","48","  \/*:: mounted: boolean; *\/","50","  \/*:: state: State; *\/","60","  constructor(props \/*: Props *\/) {","61","    super(props);","62","    this.state = {","63","      currentPopup: ''","64","    };","65","  }","66","","68","    this.mounted = true;","87","    this.mounted = false;","137","    if (this.mounted) {","138","      this.setState((prevState \/*: State *\/) => {","139","        if (prevState.currentPopup !== popupName && open !== false) {","140","          return { currentPopup: popupName };","141","        } else if (prevState.currentPopup === popupName && open !== true) {","142","          return { currentPopup: '' };","143","        }","144","        return prevState;","145","      });","146","    }","177","        currentPopup={this.state.currentPopup}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":[{"add":["42","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","43","  openPopup: ?{ issue: string, name: string},","225","            onPopupToggle={this.props.onPopupToggle}","226","            openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineCode-test.js":[{"add":["38","      onPopupToggle={jest.fn()}","39","      openPopup={null}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueCommentAction-test.js":[{"add":["28","      currentPopup={null}","42","      currentPopup={null}"],"delete":["28","      currentPopup=\"\"","42","      currentPopup=\"\""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineIssuesList-test.js":[{"add":["28","    <LineIssuesList","29","      issues={issues}","30","      line={line}","31","      onIssueClick={onIssueClick}","32","      onPopupToggle={jest.fn()}","33","      openPopup={null}","34","      selectedIssue=\"foo\"","35","    \/>"],"delete":["28","    <LineIssuesList issues={issues} line={line} onIssueClick={onIssueClick} selectedIssue=\"foo\" \/>"]}]}},"78ac82da528beca83055beba26e9d96aec79d80e":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityOnApplication.json":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/securityreport\/ws\/ShowAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest.java":[{"add":["22","import java.util.List;","36","import org.sonar.db.component.ComponentDbTester;","56","import org.sonar.server.view.index.ViewDoc;","57","import org.sonar.server.view.index.ViewIndexer;","83","  private ComponentDbTester componentDbTester = db.components();","87","  private ViewIndexer viewIndexer = new ViewIndexer(db.getDbClient(), es.client());","105","    project = componentDbTester.insertComponent(ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization(), \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","140","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","169","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","204","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","240","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","322","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","358","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","390","  @Test","391","  public void dont_return_rules_on_application() {","392","    ComponentDto application = db.components().insertPrivateApplication(db.getDefaultOrganization());","393","    indexView(application.uuid(), singletonList(project.uuid()));","394","    userSessionRule.addProjectPermission(UserRole.USER, application);","395","    indexPermissions();","396","    ComponentDto file = componentDbTester.insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","397","    IssueDto issue1 = newIssue(rule1, project, file)","398","      .setStatus(\"OPEN\")","399","      .setSeverity(\"MAJOR\")","400","      .setType(RuleType.VULNERABILITY);","401","    IssueDto issue2 = newIssue(rule1, project, file)","402","      .setStatus(\"OPEN\")","403","      .setSeverity(\"MAJOR\")","404","      .setType(RuleType.SECURITY_HOTSPOT);","405","    IssueDto issue3 = newIssue(rule1, project, file)","406","      .setStatus(Issue.STATUS_RESOLVED)","407","      .setResolution(Issue.RESOLUTION_FIXED)","408","      .setSeverity(\"MAJOR\")","409","      .setType(RuleType.SECURITY_HOTSPOT);","410","    IssueDto issue4 = newIssue(rule1, project, file)","411","      .setStatus(Issue.STATUS_RESOLVED)","412","      .setResolution(Issue.RESOLUTION_WONT_FIX)","413","      .setSeverity(\"MAJOR\")","414","      .setType(RuleType.SECURITY_HOTSPOT);","415","    dbClient.issueDao().insert(session, issue1, issue2, issue3, issue4);","416","    session.commit();","417","    indexIssues();","418","","419","    assertJson(ws.newRequest()","420","      .setParam(\"standard\", \"sonarsourceSecurity\")","421","      .setParam(\"project\", application.getKey())","422","      .setParam(\"includeDistribution\", \"true\")","423","      .execute().getInput())","424","      .withStrictArrayOrder()","425","      .isSimilarTo(this.getClass().getResource(\"ShowActionTest\/sonarsourceSecurityOnApplication.json\"));","426","  }","427","","445","  private void indexView(String viewUuid, List<String> projects) {","446","    viewIndexer.index(new ViewDoc().setUuid(viewUuid).setProjects(projects));","447","  }","448",""],"delete":["99","    project = insertComponent(ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization(), \"PROJECT_ID\").setDbKey(\"PROJECT_KEY\"));","134","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","163","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","198","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","234","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","316","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","352","    ComponentDto file = insertComponent(newFileDto(project, null, \"FILE_ID\").setDbKey(\"FILE_KEY\"));","406","  private ComponentDto insertComponent(ComponentDto component) {","407","    dbClient.componentDao().insert(session, component);","408","    session.commit();","409","    return component;","410","  }"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityOnApplication.json":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/securityreport\/ws\/ShowAction.java":[{"add":["42","import org.sonar.server.security.SecurityStandardHelper;","134","    List<SecurityStandardCategoryStatistics> statistics;","137","        statistics = issueIndex.getOwaspTop10Report(projectDto.uuid(), isViewOrApp, includeCwe)","143","        statistics = issueIndex.getSansTop25Report(projectDto.uuid(), isViewOrApp, includeCwe);","146","        statistics = issueIndex.getSonarSourceReport(projectDto.uuid(), isViewOrApp, includeCwe);","151","    if (!isViewOrApp) {","152","      \/\/ App and Portfolios don't have a quality profile","153","      completeRulesStatistics(statistics, projectDto, standard, includeCwe);","154","    }","155","    writeResponse(request, response, statistics, isViewOrApp);","158","  private void completeRulesStatistics(List<SecurityStandardCategoryStatistics> input, ComponentDto project, String standard, boolean includeCwe) {","241","  private static void writeResponse(Request request, Response response, List<SecurityStandardCategoryStatistics> categories, boolean isViewOrApp) {","252","        .setWontFixSecurityHotspots(cat.getWontFixSecurityHotspots());","253","      if (!isViewOrApp) {","254","        catBuilder.setTotalRules(cat.getTotalRules())","255","          .setActiveRules(cat.getActiveRules());","256","      }","269","              .setWontFixSecurityHotspots(cwe.getWontFixSecurityHotspots());","270","            if (!isViewOrApp) {","271","              cweBuilder.setActiveRules(cwe.getActiveRules())","272","                .setTotalRules(cwe.getTotalRules());","273","            }"],"delete":["40","import org.sonar.server.security.SecurityStandardHelper;","136","        List<SecurityStandardCategoryStatistics> owaspCategories = issueIndex.getOwaspTop10Report(projectDto.uuid(), isViewOrApp, includeCwe)","140","        completeStatistics(owaspCategories, projectDto, standard, includeCwe);","141","        writeResponse(request, response, owaspCategories);","144","        List<SecurityStandardCategoryStatistics> sansTop25Report = issueIndex.getSansTop25Report(projectDto.uuid(), isViewOrApp, includeCwe);","145","        completeStatistics(sansTop25Report, projectDto, standard, includeCwe);","146","        writeResponse(request, response, sansTop25Report);","149","        List<SecurityStandardCategoryStatistics> sonarSourceReport = issueIndex.getSonarSourceReport(projectDto.uuid(), isViewOrApp, includeCwe);","150","        completeStatistics(sonarSourceReport, projectDto, standard, includeCwe);","151","        writeResponse(request, response, sonarSourceReport);","158","  private void completeStatistics(List<SecurityStandardCategoryStatistics> input, ComponentDto project, String standard, boolean includeCwe) {","241","  private static void writeResponse(Request request, Response response, List<SecurityStandardCategoryStatistics> categories) {","252","        .setWontFixSecurityHotspots(cat.getWontFixSecurityHotspots())","253","        .setTotalRules(cat.getTotalRules())","254","        .setActiveRules(cat.getActiveRules());","267","              .setWontFixSecurityHotspots(cwe.getWontFixSecurityHotspots())","268","              .setActiveRules(cwe.getActiveRules())","269","              .setTotalRules(cwe.getTotalRules());"]}]}},"a1b9bc1ced0bb2dd67e60583254f836cb477ed42":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/__snapshots__\/Measure-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/Rating.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/Rating-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardOverall-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/__snapshots__\/Rating-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/app\/styles\/boxed-group.css":"MODIFY","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardLeak-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/Measure-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/measure\/Measure.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":[{"add":["28","  measures: { [key: string]: string };"],"delete":["28","  measures?: { [key: string]: string };","32","  if (measures == undefined) {","33","    return null;","34","  }","35",""]}],"server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/__snapshots__\/Measure-test.tsx.snap":[{"add":["33","exports[`renders undefined measure 1`] = `","34","<span>","35","  \u2013","36","<\/span>","37","`;","38",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/Rating.tsx":[{"add":["28","  value: string | number | undefined;","32","  if (value == undefined) {","33","    return <span>{'\u2013'}<\/span>;","34","  }"],"delete":["28","  value: string | number;"]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/Rating-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardOverall-test.tsx":[{"add":[],"delete":["53","it('should display loading', () => {","54","  expect(","55","    shallow(<ProjectCardOverall project={{ ...PROJECT, measures: {} }} \/>)","56","      .find('.boxed-group')","57","      .hasClass('boxed-group-loading')","58","  ).toBeTruthy();","59","  expect(","60","    shallow(<ProjectCardOverall project={{ ...PROJECT, measures: { sqale_rating: '1.0' } }} \/>)","61","      .find('.boxed-group')","62","      .hasClass('boxed-group-loading')","63","  ).toBeTruthy();","64","});","65",""]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/__snapshots__\/Rating-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/boxed-group.css":[{"add":[],"delete":["61","","62",".boxed-group-loading {","63","  position: relative;","64","  transition: border-color 0.25s;","65","}","66","","67",".boxed-group-loading:before,","68",".boxed-group-loading:after {","69","  position: absolute;","70","  z-index: 1;","71","  border: 2px solid transparent;","72","  box-sizing: border-box;","73","  content: '';","74","}","75","","76",".boxed-group-loading:before {","77","  width: 100%;","78","  height: 100%;","79","  top: 0;","80","  left: 0;","81","  border-top-color: #4b9fd5;","82","  border-right-color: #4b9fd5;","83","  animation: 3s top-left-border 0s infinite;","84","}","85","","86",".boxed-group-loading:after {","87","  width: 0;","88","  height: 0;","89","  bottom: 0;","90","  right: 0;","91","  border-bottom-color: #4b9fd5;","92","  border-left-color: #4b9fd5;","93","  animation: 3s border-bottom-border 0s infinite;","94","}","95","","96","@keyframes top-left-border {","97","  0% {","98","    width: 0;","99","    height: 0;","100","  }","101","","102","  25% {","103","    width: 100%;","104","    height: 0;","105","  }","106","","107","  50%,","108","  100% {","109","    width: 100%;","110","    height: 100%;","111","  }","112","}","113","","114","@keyframes border-bottom-border {","115","  0%,","116","  50% {","117","    width: 0;","118","    height: 0;","119","    border-width: 0;","120","  }","121","","122","  51% {","123","    border-width: 2px;","124","  }","125","","126","  75% {","127","    width: 100%;","128","    height: 0;","129","  }","130","","131","  100% {","132","    width: 100%;","133","    height: 100%;","134","  }","135","}"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":[{"add":["44","    <div data-key={project.key} className=\"boxed-group project-card\">","57","        {project.analysisDate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","62","        {project.analysisDate &&","63","        project.leakPeriodDate && (","65","            <DateFromNow date={project.leakPeriodDate!}>","66","              {fromNow => (","67","                <span className=\"project-card-leak-date pull-right\">","68","                  {translateWithParameters('projects.leak_period_x', fromNow)}","69","                <\/span>","70","              )}","71","            <\/DateFromNow>","72","            <DateTimeFormatter date={project.analysisDate!}>","73","              {formattedDate => (","74","                <span>{translateWithParameters('projects.last_analysis_on_x', formattedDate)}<\/span>","75","              )}","76","            <\/DateTimeFormatter>","81","      {project.analysisDate && project.leakPeriodDate ? (","83","          <ProjectCardLeakMeasures measures={measures} \/>","88","            {project.analysisDate ? ("],"delete":["20","import * as classNames from 'classnames';","41","  const isProjectAnalyzed = project.analysisDate != null;","43","  const hasLeakPeriodStart = project.leakPeriodDate != undefined;","46","  \/\/ check for particular measures because only some measures can be loaded","47","  \/\/ if coming from visualizations tab","48","  const areProjectMeasuresLoaded = measures != undefined && measures['new_bugs'];","49","","50","  const displayQualityGate = areProjectMeasuresLoaded && isProjectAnalyzed;","51","  const className = classNames('boxed-group', 'project-card', {","52","    'boxed-group-loading': isProjectAnalyzed && hasLeakPeriodStart && !areProjectMeasuresLoaded","53","  });","54","","56","    <div data-key={project.key} className={className}>","69","        {displayQualityGate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","74","        {isProjectAnalyzed &&","75","        hasLeakPeriodStart && (","77","            {hasLeakPeriodStart && (","78","              <DateFromNow date={project.leakPeriodDate!}>","79","                {fromNow => (","80","                  <span className=\"project-card-leak-date pull-right\">","81","                    {translateWithParameters('projects.leak_period_x', fromNow)}","82","                  <\/span>","83","                )}","84","              <\/DateFromNow>","85","            )}","86","            {isProjectAnalyzed && (","87","              <DateTimeFormatter date={project.analysisDate!}>","88","                {formattedDate => (","89","                  <span>","90","                    {translateWithParameters('projects.last_analysis_on_x', formattedDate)}","91","                  <\/span>","92","                )}","93","              <\/DateTimeFormatter>","94","            )}","99","      {isProjectAnalyzed && hasLeakPeriodStart ? (","101","          {areProjectMeasuresLoaded && <ProjectCardLeakMeasures measures={measures} \/>}","106","            {isProjectAnalyzed ? ("]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":[{"add":["43","    <div data-key={project.key} className=\"boxed-group project-card\">","56","        {project.analysisDate && <ProjectCardQualityGate status={measures['alert_status']} \/>}","74","      {project.analysisDate ? (","76","          {<ProjectCardOverallMeasures measures={measures} \/>}"],"delete":["20","import * as classNames from 'classnames';","40","  const isProjectAnalyzed = project.analysisDate != undefined;","44","  \/\/ check for particular measures because only some measures can be loaded","45","  \/\/ if coming from visualizations tab","46","  const areProjectMeasuresLoaded =","47","    measures != undefined &&","48","    measures['reliability_rating'] != undefined &&","49","    measures['sqale_rating'] != undefined;","50","","51","  const displayQualityGate = areProjectMeasuresLoaded && isProjectAnalyzed;","52","  const className = classNames('boxed-group', 'project-card', {","53","    'boxed-group-loading': isProjectAnalyzed && !areProjectMeasuresLoaded","54","  });","55","","57","    <div data-key={project.key} className={className}>","70","        {displayQualityGate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","88","      {isProjectAnalyzed ? (","90","          {areProjectMeasuresLoaded && <ProjectCardOverallMeasures measures={measures} \/>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardLeak-test.tsx":[{"add":[],"delete":["54","it('should display loading', () => {","55","  const measures = { alert_status: 'OK', reliability_rating: '1.0', sqale_rating: '1.0' };","56","  expect(","57","    shallow(<ProjectCardLeak project={{ ...PROJECT, measures }} \/>)","58","      .find('.boxed-group')","59","      .hasClass('boxed-group-loading')","60","  ).toBeTruthy();","61","});","62",""]}],"server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/Measure-test.tsx":[{"add":["65","","66","it('renders undefined measure', () => {","67","  const measure = { metric: { key: 'foo', name: 'Foo', type: 'PERCENT' } };","68","  expect(shallow(<Measure measure={measure} \/>)).toMatchSnapshot();","69","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/measure\/Measure.tsx":[{"add":["37","    return <span>{'\u2013'}<\/span>;"],"delete":["37","    return null;"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":[{"add":["29","  measures: { [key: string]: string | undefined };"],"delete":["29","  measures?: { [key: string]: string };"]}]}},"191fde8d2cfc1a69b4e981b67e4e0bdbb33bba7c":{"changes":{"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/rule\/XooRulesDefinition.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/util\/cache\/ProtobufIssueDiskCache.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistIssuesStepTest.java":"MODIFY"},"diff":{"plugins\/sonar-xoo-plugin\/src\/main\/java\/org\/sonar\/xoo\/rule\/XooRulesDefinition.java":[{"add":["99","      .setHtmlDescription(\"Generate an issue on each line of a file. It requires the metric \\\"lines\\\".\")","100","      .setTags(\"line\");"],"delete":["99","      .setHtmlDescription(\"Generate an issue on each line of a file. It requires the metric \\\"lines\\\".\");"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/util\/cache\/ProtobufIssueDiskCache.java":[{"add":["117","    defaultIssue.setTags(ImmutableSet.copyOf(TAGS_SPLITTER.split(next.getTags())));"],"delete":["21","import com.google.common.base.Joiner;","118","    defaultIssue.setTags(ImmutableSet.copyOf(TAGS_SPLITTER.split(next.hasTags() ? \"\" : next.getTags())));"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/PersistIssuesStepTest.java":[{"add":["134","      .setTags(singletonList(\"test\"))","167","    assertThat(result.getTags()).containsExactlyInAnyOrder(\"test\");","176","  public void insert_copied_issue_with_minimal_info() {","177","    RuleDefinitionDto rule = RuleTesting.newRule(RuleKey.of(\"xoo\", \"S01\"));","178","    db.rules().insert(rule);","179","    OrganizationDto organizationDto = db.organizations().insert();","180","    ComponentDto project = db.components().insertPrivateProject(organizationDto);","181","    ComponentDto file = db.components().insertComponent(newFileDto(project, null));","182","    when(system2.now()).thenReturn(NOW);","183","","184","    protoIssueCache.newAppender().append(new DefaultIssue()","185","      .setKey(\"ISSUE\")","186","      .setType(RuleType.CODE_SMELL)","187","      .setRuleKey(rule.getKey())","188","      .setComponentUuid(file.uuid())","189","      .setComponentKey(file.getKey())","190","      .setProjectUuid(project.uuid())","191","      .setProjectKey(project.getKey())","192","      .setSeverity(BLOCKER)","193","      .setStatus(STATUS_OPEN)","194","      .setNew(false)","195","      .setCopied(true)","196","      .setType(RuleType.BUG)","197","      .setCreationDate(new Date(NOW))","198","      .setSelectedAt(NOW))","199","      .close();","200","","201","    TestComputationStepContext context = new TestComputationStepContext();","202","    underTest.execute(context);","203","","204","    IssueDto result = dbClient.issueDao().selectOrFailByKey(session, \"ISSUE\");","205","    assertThat(result.getKey()).isEqualTo(\"ISSUE\");","206","    assertThat(result.getRuleKey()).isEqualTo(rule.getKey());","207","    assertThat(result.getComponentUuid()).isEqualTo(file.uuid());","208","    assertThat(result.getProjectUuid()).isEqualTo(project.uuid());","209","    assertThat(result.getSeverity()).isEqualTo(BLOCKER);","210","    assertThat(result.getStatus()).isEqualTo(STATUS_OPEN);","211","    assertThat(result.getType()).isEqualTo(RuleType.BUG.getDbConstant());","212","    assertThat(result.getTags()).isEmpty();","213","","214","    assertThat(dbClient.issueChangeDao().selectByIssueKeys(session, Arrays.asList(\"ISSUE\"))).isEmpty();","215","    assertThat(context.getStatistics().getAll()).contains(","216","      entry(\"inserts\", \"1\"), entry(\"updates\", \"0\"), entry(\"merged\", \"0\"));","217","  }","218","","219","  @Test"],"delete":[]}]}},"fede6d0a2378ce959e7cb1afdf221a92e22b8a6f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleDetailsIssues-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetails.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleDetailsIssues-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsIssues.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/RuleDetailsIssues-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetails.tsx":[{"add":["256","            <RuleDetailsIssues organization={organization} ruleDetails={ruleDetails} \/>"],"delete":["256","            <RuleDetailsIssues organization={organization} ruleKey={ruleDetails.key} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/RuleDetailsIssues-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/RuleDetailsIssues.tsx":[{"add":["25","import { RuleDetails } from '..\/..\/..\/app\/types';","32","  ruleDetails: Pick<RuleDetails, 'key' | 'type'>;","62","    if (prevProps.ruleDetails !== this.props.ruleDetails) {","71","  getBaseIssuesQuery = () => ({","72","    resolved: 'false',","73","    rules: this.props.ruleDetails.key,","74","    types:","75","      this.props.ruleDetails.type === 'SECURITY_HOTSPOT'","76","        ? 'VULNERABILITY,SECURITY_HOTSPOT'","77","        : undefined","78","  });","79","","83","      { ...this.getBaseIssuesQuery(), organization: this.props.organization },","112","    const path = getIssuesUrl(this.getBaseIssuesQuery(), this.props.organization);","133","      { ...this.getBaseIssuesQuery(), projects: project.key },"],"delete":["31","  ruleKey: string;","61","    if (prevProps.ruleKey !== this.props.ruleKey) {","73","      { organization: this.props.organization, rules: this.props.ruleKey, resolved: false },","102","    const path = getIssuesUrl(","103","      { resolved: 'false', rules: this.props.ruleKey },","104","      this.props.organization","105","    );","126","      { projects: project.key, resolved: 'false', rules: this.props.ruleKey },"]}]}},"63ef497ede0dad6346d039bf8745d0cf8b0636f6":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profiles-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/rule-profiles-view.js":[{"add":["62","      if (this.options.app.state.get('query').qprofile === profile) {","69","        this.model.set({ activation });","71","      this.refreshActives();","77","    this.options.app.controller.getRuleDetails(this.model).then(","78","      data => {","79","        this.collection.reset(","80","          this.model.getInactiveProfiles(data.actives, this.options.app.qualityProfiles)","81","        );","82","        this.options.app.controller.updateActivation(this.model, data.actives);","83","      },","84","      () => {}","85","    );"],"delete":["56","    const that = this;","63","      if (that.options.app.state.get('query').qprofile === profile) {","70","        that.model.set({ activation });","72","      that.refreshActives();","78","    const that = this;","79","    this.options.app.controller.getRuleDetails(this.model).done(data => {","80","      that.collection.reset(","81","        that.model.getInactiveProfiles(data.actives, that.options.app.qualityProfiles)","82","      );","83","      this.options.app.controller.updateActivation(this.model, data.actives);","84","    });"]}]}},"c13aab927fa11aa451a188bf3f6b183589394bf7":{"changes":{"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/SecurityManagement.java":"MODIFY","server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/SecurityManagementTest.java":"MODIFY"},"diff":{"server\/sonar-process\/src\/main\/java\/org\/sonar\/process\/SecurityManagement.java":[{"add":["41","    private static final Set<String> BLOCKED_RUNTIME_PERMISSIONS = new HashSet<>(Arrays.asList(","42","      \"createClassLoader\",","43","      \"getClassLoader\",","44","      \"setContextClassLoader\",","45","      \"enableContextClassLoaderOverride\",","46","      \"closeClassLoader\",","47","      \"setSecurityManager\",","48","      \"createSecurityManager\"","49","    ));","50","    private static final Set<String> BLOCKED_SECURITY_PERMISSIONS = new HashSet<>(Arrays.asList(","51","      \"createAccessControlContext\",","52","      \"setPolicy\"","53","    ));","60","        if (permission instanceof RuntimePermission && BLOCKED_RUNTIME_PERMISSIONS.contains(permission.getName())) {","63","        if (permission instanceof SecurityPermission && BLOCKED_SECURITY_PERMISSIONS.contains(permission.getName())) {"],"delete":["21","import java.lang.reflect.ReflectPermission;","42","    private static final Set<String> ALLOWED_RUNTIME_PERMISSIONS = new HashSet<>(Arrays.asList(\"getFileSystemAttributes\", \"readFileDescriptor\", \"writeFileDescriptor\",","43","      \"getStackTrace\", \"setDefaultUncaughtExceptionHandler\", \"manageProcess\", \"localeServiceProvider\", \"LoggerFinder\"));","50","        if (permission instanceof RuntimePermission && !ALLOWED_RUNTIME_PERMISSIONS.contains(permission.getName())) {","53","        if (permission instanceof ReflectPermission || permission instanceof SecurityPermission) {"]}],"server\/sonar-process\/src\/test\/java\/org\/sonar\/process\/SecurityManagementTest.java":[{"add":["36","  private Permission allowedSecurity = new SecurityPermission(\"getProperty.key\");","37","  private Permission deniedSecurity = new SecurityPermission(\"setPolicy\");","48","    assertThat(policy.implies(pd, allowedSecurity)).isTrue();","49","    assertThat(policy.implies(pd, deniedSecurity)).isFalse();","63","    assertThat(policy.implies(pd, allowedSecurity)).isTrue();","64","    assertThat(policy.implies(pd, deniedSecurity)).isTrue();"],"delete":["21","import java.lang.reflect.ReflectPermission;","37","  private Permission reflect = new ReflectPermission(\"suppressAccessChecks\");","38","  private Permission security = new SecurityPermission(\"setPolicy\");","51","    assertThat(policy.implies(pd, reflect)).isFalse();","52","    assertThat(policy.implies(pd, security)).isFalse();","66","    assertThat(policy.implies(pd, reflect)).isTrue();","67","    assertThat(policy.implies(pd, security)).isTrue();"]}]}},"a8f14ced18503abb466fefead861ea3d60f7115a":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/Unauthorized-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/__snapshots__\/Unauthorized-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/Unauthorized.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/Unauthorized-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/__tests__\/__snapshots__\/Unauthorized-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/sessions\/components\/Unauthorized.tsx":[{"add":["21","import { getBaseUrl } from '..\/..\/..\/helpers\/urls';","35","    <div className=\"page-wrapper-simple\" id=\"bd\">","36","      <div className=\"page-simple\" id=\"nonav\">","40","          {Boolean(message) && (","47","            <a href={getBaseUrl() + '\/'}>{translate('layout.home')}<\/a>"],"delete":["20","import { Link } from 'react-router';","35","    <div id=\"bd\" className=\"page-wrapper-simple\">","36","      <div id=\"nonav\" className=\"page-simple\">","40","          {!!message && (","47","            <Link to=\"\/\">{translate('layout.home')}<\/Link>"]}]}},"6ec3fcf19a77c31b9fe137eabc56334948d39ac8":{"changes":{"\/dev\/null":"DELETE","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 1001;"],"delete":["31","  public static final int LAST_VERSION = 1002;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":[],"delete":["364","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1002');"]}]}},"df64c184d1427f74592459b42093e8b0b6878c98":{"changes":{"\/dev\/null":"DELETE","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCount.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCountTest.java":"MODIFY","server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/DbTester.java":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCount.java":[{"add":["51","      massUpdate.select(\"select uuid,line_hashes from file_sources where line_count = ? and project_uuid = ?\")","54","      massUpdate.update(\"update file_sources set line_count = ? where uuid = ?\");","61","    String rowUuid = row.getString(1);","66","    update.setString(2, rowUuid);"],"delete":["51","      massUpdate.select(\"select id,line_hashes from file_sources where line_count = ? and project_uuid = ?\")","54","      massUpdate.update(\"update file_sources set line_count = ? where id = ?\");","61","    int rowId = row.getInt(1);","66","    update.setInt(2, rowId);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCountTest.java":[{"add":["32","import org.sonar.core.util.SequenceUuidFactory;","33","import org.sonar.core.util.UuidFactory;","48","  public DbTester db = DbTester.create(System2.INSTANCE);","49","","50","  private UuidFactory uuidFactory = new SequenceUuidFactory();","184","      \"UUID\", uuidFactory.create(),"],"delete":["46","  public DbTester db = DbTester.createForSchema(System2.INSTANCE, PopulateFileSourceLineCountTest.class, \"file_sources.sql\");"]}],"server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/DbTester.java":[{"add":[],"delete":["152","  public static DbTester createForSchema(System2 system2, Class testClass, String filename) {","153","    String path = StringUtils.replaceChars(testClass.getCanonicalName(), '.', '\/');","154","    String schemaPath = path + \"\/\" + filename;","155","    return new DbTester(system2, schemaPath).setDisableDefaultOrganization(true);","156","  }","157",""]}]}},"1055024bf5bbfd50b26e4be8dc5a1fc52990dfed":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/constants.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketSearchResults-test.tsx.snap":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketSearchResults-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketProjectAccordion-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectCreate.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketProjectAccordion-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketSearchResults.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectAccordion.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/constants.ts":[{"add":["21","","22","export const DEFAULT_BBS_PAGE_SIZE = 25;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketSearchResults-test.tsx.snap":[{"add":["55","","56","exports[`should render correctly: unknown project in search results 1`] = `","57","<div","58","  className=\"big-spacer-top\"","59",">","60","  <DeferredSpinner","61","    loading={false}","62","  >","63","    <BitbucketProjectAccordion","64","      disableRepositories={false}","65","      onSelectRepository={[MockFunction]}","66","      open={true}","67","      repositories={","68","        Array [","69","          Object {","70","            \"id\": 1,","71","            \"name\": \"Repo\",","72","            \"projectKey\": \"unknown\",","73","            \"slug\": \"project__repo\",","74","          },","75","        ]","76","      }","77","      showingAllRepositories={true}","78","    \/>","79","  <\/DeferredSpinner>","80","<\/div>","81","`;"],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["170","search_results=Search results"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketSearchResults-test.tsx":[{"add":["34","  expect(","35","    shallowRender({ searchResults: [mockBitbucketRepository({ projectKey: 'unknown' })] })","36","  ).toMatchSnapshot('unknown project in search results');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/BitbucketProjectAccordion-test.tsx.snap":[{"add":["231","exports[`should render correctly: no project info 1`] = `","232","<BoxedGroupAccordion","233","  className=\"big-spacer-bottom open\"","234","  onClick={[MockFunction]}","235","  open={true}","236","  title={","237","    <h3>","238","      search_results","239","    <\/h3>","240","  }","241",">","242","  <div","243","    className=\"display-flex-wrap\"","244","  >","245","    <Radio","246","      checked={false}","247","      className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden\"","248","      key=\"1\"","249","      onCheck={[Function]}","250","      value=\"1\"","251","    >","252","      <strong","253","        className=\"text-ellipsis\"","254","        title=\"Repo\"","255","      >","256","        Repo","257","      <\/strong>","258","    <\/Radio>","259","    <div","260","      className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"","261","      key=\"2\"","262","    >","263","      <CheckIcon","264","        className=\"spacer-right\"","265","        fill=\"#00aa00\"","266","        size={14}","267","      \/>","268","      <div","269","        className=\"overflow-hidden\"","270","      >","271","        <div","272","          className=\"little-spacer-bottom text-ellipsis\"","273","        >","274","          <strong","275","            title=\"Bar\"","276","          >","277","            <Link","278","              onlyActiveOnIndex={false}","279","              style={Object {}}","280","              to={","281","                Object {","282","                  \"pathname\": \"\/dashboard\",","283","                  \"query\": Object {","284","                    \"branch\": undefined,","285","                    \"id\": \"bar\",","286","                  },","287","                }","288","              }","289","            >","290","              Bar","291","            <\/Link>","292","          <\/strong>","293","        <\/div>","294","        <em>","295","          onboarding.create_project.repository_imported","296","        <\/em>","297","      <\/div>","298","    <\/div>","299","  <\/div>","300","<\/BoxedGroupAccordion>","301","`;","302","","417","  <Alert","418","    variant=\"warning\"","419","  >","420","    onboarding.create_project.only_showing_X_first_repos.2","421","  <\/Alert>"],"delete":["5","  key=\"project\"","19","  key=\"project\"","92","  key=\"project\"","165","  key=\"project\"","238","  key=\"project\"","284","  key=\"project\"","350","    <Alert","351","      variant=\"warning\"","352","    >","353","      onboarding.create_project.only_showing_X_first_repos.2","354","    <\/Alert>","362","  key=\"project\""]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectCreate.tsx":[{"add":["36","import { DEFAULT_BBS_PAGE_SIZE } from '.\/constants';","149","          ({ isLastPage, repositories }) => {","150","            \/\/ Because the WS uses the project name rather than its key to find","151","            \/\/ repositories, we can match more repositories than we expect. For","152","            \/\/ example, p.name = \"A1\" would find repositories for projects \"A1\",","153","            \/\/ \"A10\", \"A11\", etc. This is a limitation of BBS. To make sure we","154","            \/\/ don't display incorrect information, filter on the project key.","155","            const filteredRepositories = repositories.filter(r => r.projectKey === p.key);","156","","157","            \/\/ And because of the above, the \"isLastPage\" cannot be relied upon","158","            \/\/ either. This one is impossible to get 100% for now. We can only","159","            \/\/ make some assumptions: by default, the page size for BBS is 25","160","            \/\/ (this is not part of the payload, so we don't know the actual","161","            \/\/ number; but changing this implies changing some advanced config,","162","            \/\/ so it's not likely). If the filtered repos is larger than this","163","            \/\/ number AND isLastPage is false, we'll keep it at false.","164","            \/\/ Otherwise, we assume it's true.","165","            const realIsLastPage =","166","              isLastPage || filteredRepositories.length < DEFAULT_BBS_PAGE_SIZE;","167","","168","            return {","169","              repositories: filteredRepositories,","170","              isLastPage: realIsLastPage,","171","              projectKey: p.key","172","            };","173","          }"],"delete":["148","          ({ isLastPage, repositories }) => ({","149","            isLastPage,","150","            repositories,","151","            projectKey: p.key","152","          })"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/BitbucketProjectAccordion-test.tsx":[{"add":["41","  expect(shallowRender({ project: undefined })).toMatchSnapshot('no project info');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketSearchResults.tsx":[{"add":["46","  if (searchResults.length === 0 && !searching) {","47","    return (","48","      <Alert className=\"big-spacer-top\" variant=\"warning\">","49","        {translate('onboarding.create_project.no_bbs_repos.filter')}","50","      <\/Alert>","51","    );","52","  }","53","","58","  return (","61","        {filteredProjects.length === 0 && searchResults.length > 0 && (","62","          <BitbucketProjectAccordion","63","            disableRepositories={disableRepositories}","64","            onSelectRepository={props.onSelectRepository}","65","            open={true}","66","            repositories={searchResults}","67","            selectedRepository={selectedRepository}","68","            showingAllRepositories={true}","69","          \/>","70","        )}","71",""],"delete":["50","  return filteredProjects.length === 0 && !searching ? (","51","    <Alert className=\"big-spacer-top\" variant=\"warning\">","52","      {translate('onboarding.create_project.no_bbs_repos.filter')}","53","    <\/Alert>","54","  ) : ("]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/BitbucketProjectAccordion.tsx":[{"add":["38","  project?: BitbucketProject;","56","  const title = project?.name ?? translate('search_results');","57","","73","      title={<h3>{title}<\/h3>}>","75","        <>","76","          <div className=\"display-flex-wrap\">","77","            {repositoryCount === 0 && (","78","              <Alert variant=\"warning\">","79","                <FormattedMessage","80","                  defaultMessage={translate('onboarding.create_project.no_bbs_repos')}","81","                  id=\"onboarding.create_project.no_bbs_repos\"","82","                  values={{","83","                    link: (","84","                      <Link","85","                        to={{","86","                          pathname: '\/projects\/create',","87","                          query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }","88","                        }}>","89","                        {translate('onboarding.create_project.update_your_token')}","90","                      <\/Link>","91","                    )","92","                  }}","93","                \/>","94","              <\/Alert>","95","            )}","97","            {repositories.map(repo =>","98","              repo.sqProjectKey ? (","99","                <div","100","                  className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"","101","                  key={repo.id}>","102","                  <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} \/>","103","                  <div className=\"overflow-hidden\">","104","                    <div className=\"little-spacer-bottom text-ellipsis\">","105","                      <strong title={repo.name}>","106","                        <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}<\/Link>","107","                      <\/strong>","108","                    <\/div>","109","                    <em>{translate('onboarding.create_project.repository_imported')}<\/em>","112","              ) : (","113","                <Radio","114","                  checked={selectedRepository?.id === repo.id}","115","                  className={classNames(","116","                    'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',","117","                    {","118","                      disabled: disableRepositories,","119","                      'text-muted': disableRepositories,","120","                      'link-no-underline': disableRepositories","121","                    }","122","                  )}","123","                  key={repo.id}","124","                  onCheck={() => props.onSelectRepository(repo)}","125","                  value={String(repo.id)}>","126","                  <strong className=\"text-ellipsis\" title={repo.name}>","127","                    {repo.name}","128","                  <\/strong>","129","                <\/Radio>","130","              )","131","            )}","132","          <\/div>","142","        <\/>"],"delete":["38","  project: BitbucketProject;","63","      key={project.key}","72","      title={<h3>{project.name}<\/h3>}>","74","        <div className=\"display-flex-wrap\">","75","          {repositoryCount === 0 && (","76","            <Alert variant=\"warning\">","77","              <FormattedMessage","78","                defaultMessage={translate('onboarding.create_project.no_bbs_repos')}","79","                id=\"onboarding.create_project.no_bbs_repos\"","80","                values={{","81","                  link: (","82","                    <Link","83","                      to={{","84","                        pathname: '\/projects\/create',","85","                        query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }","86","                      }}>","87","                      {translate('onboarding.create_project.update_your_token')}","88","                    <\/Link>","89","                  )","90","                }}","91","              \/>","92","            <\/Alert>","93","          )}","95","          {repositories.map(repo =>","96","            repo.sqProjectKey ? (","97","              <div","98","                className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"","99","                key={repo.id}>","100","                <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} \/>","101","                <div className=\"overflow-hidden\">","102","                  <div className=\"little-spacer-bottom text-ellipsis\">","103","                    <strong title={repo.name}>","104","                      <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}<\/Link>","105","                    <\/strong>","107","                  <em>{translate('onboarding.create_project.repository_imported')}<\/em>","109","              <\/div>","110","            ) : (","111","              <Radio","112","                checked={selectedRepository?.id === repo.id}","113","                className={classNames(","114","                  'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',","115","                  {","116","                    disabled: disableRepositories,","117","                    'text-muted': disableRepositories,","118","                    'link-no-underline': disableRepositories","119","                  }","120","                )}","121","                key={repo.id}","122","                onCheck={() => props.onSelectRepository(repo)}","123","                value={String(repo.id)}>","124","                <strong className=\"text-ellipsis\" title={repo.name}>","125","                  {repo.name}","126","                <\/strong>","127","              <\/Radio>","128","            )","129","          )}","139","        <\/div>"]}]}},"8e325b86c9247da1659fbd23f5358156468dd795":{"changes":{"it\/it-tests\/src\/test\/java\/it\/user\/LocalAuthenticationTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/authentication\/UserIdentity.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/authentication\/UserIdentityTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/user\/RealmAuthenticationTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/user\/BaseIdentityProviderTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/user\/LocalAuthenticationTest.java":[{"add":["188","  public void allow_user_login_with_2_characters() throws Exception {","189","    userRule.createUser(\"jo\", \"password\");","190","","191","    assertThat(checkAuthenticationWithAuthenticateWebService(\"jo\", \"password\")).isTrue();","192","  }","193","","194","  @Test"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/authentication\/UserIdentity.java":[{"add":["30","import static com.google.common.base.Preconditions.checkArgument;","31","import static com.google.common.base.Preconditions.checkNotNull;","32","import static com.google.common.collect.FluentIterable.from;","33","import static org.apache.commons.lang.StringUtils.isNotBlank;","34","import static org.sonar.api.user.UserGroupValidation.validateGroupName;","35","","195","      checkArgument(login.length() <= 255 && login.length() >= 2, \"User login size is incorrect (Between 2 and 255 characters)\");"],"delete":["21","import static com.google.common.base.Preconditions.checkArgument;","22","import static com.google.common.base.Preconditions.checkNotNull;","23","import static com.google.common.collect.FluentIterable.from;","24","import static org.apache.commons.lang.StringUtils.isNotBlank;","25","import static org.sonar.api.user.UserGroupValidation.validateGroupName;","26","","195","      checkArgument(login.length() <= 255 && login.length() >= 3, \"User login size is incorrect (Between 3 and 255 characters)\");"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/authentication\/UserIdentityTest.java":[{"add":["26","import static com.google.common.collect.Sets.newHashSet;","27","import static org.assertj.core.api.Assertions.assertThat;","28","","77","    thrown.expectMessage(\"User login size is incorrect (Between 2 and 255 characters)\");","89","    thrown.expectMessage(\"User login size is incorrect (Between 2 and 255 characters)\");","92","      .setLogin(\"j\")"],"delete":["21","import static com.google.common.collect.Sets.newHashSet;","22","import static org.assertj.core.api.Assertions.assertThat;","23","","77","    thrown.expectMessage(\"User login size is incorrect (Between 3 and 255 characters)\");","89","    thrown.expectMessage(\"User login size is incorrect (Between 3 and 255 characters)\");","92","      .setLogin(\"12\")"]}],"it\/it-tests\/src\/test\/java\/it\/user\/RealmAuthenticationTest.java":[{"add":["50","import util.user.UserRule;","85","  @ClassRule","86","  public static UserRule USER_RULE = UserRule.from(orchestrator);","87","","94","    USER_RULE.resetUsers();","330","  @Test","331","  public void allow_user_login_with_2_characters() {","332","    String username = \"jo\";","333","    String password = \"1234567\";","334","    updateUsersInExtAuth(ImmutableMap.of(username + \".password\", password));","335","","336","    assertThat(loginAttempt(username, password)).isEqualTo(AUTHORIZED);","337","  }","338",""],"delete":["90","    resetUsers(USER_LOGIN, TECH_USER);","91","  }","92","","93","  private void resetUsers(String... logins) {","94","    for (String login : logins) {","95","      String result = orchestrator.getServer().adminWsClient().get(\"\/api\/users\/search?q=\" + login);","96","      if (result.contains(login)) {","97","        orchestrator.getServer().adminWsClient().userClient().deactivate(login);","98","      }","99","    }"]}],"it\/it-tests\/src\/test\/java\/it\/user\/BaseIdentityProviderTest.java":[{"add":["82","    userRule.resetUsers();","85","      \"sonar.auth.fake-base-id-provider.throwUnauthorizedMessage\", \"sonar.auth.fake-base-id-provider.enabledGroupsSync\", \"sonar.auth.fake-base-id-provider.groups\",","86","      \"sonar.auth.fake-base-id-provider.allowsUsersToSignUp\");","250","  @Test","251","  public void allow_user_login_with_2_characters() throws Exception {","252","    enablePlugin();","253","    String login = \"jo\";","254","    setUserCreatedByAuthPlugin(login, USER_PROVIDER_ID, USER_NAME, USER_EMAIL);","255","    userRule.verifyUserDoesNotExist(login);","256","","257","    \/\/ First connection, user is created","258","    authenticateWithFakeAuthProvider();","259","","260","    userRule.verifyUserExists(login, USER_NAME, USER_EMAIL, false);","261","  }","262",""],"delete":["82","    userRule.deactivateUsers(USER_LOGIN);","85","      \"sonar.auth.fake-base-id-provider.throwUnauthorizedMessage\", \"sonar.auth.fake-base-id-provider.enabledGroupsSync\", \"sonar.auth.fake-base-id-provider.groups\");"]}]}},"afb93fd7b31b4df521f25fcb92b8d0e17741e1f5":{"changes":{"server\/sonar-web\/config\/webpack.config.js":"MODIFY"},"diff":{"server\/sonar-web\/config\/webpack.config.js":[{"add":["128","      exotics: true, \/\/ used to compare \"exotic\" values, like dates"],"delete":[]}]}},"726406c0d2b168abb40287f58e271934a42d072b":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/AnalysisEsResilienceTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectBadgesTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/SonarCloudProjectBadgesTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/ActiveRuleEsResilienceTest.java":"MODIFY","server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/Tester.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/Category6Suite.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/OrganizationQualityProfilesUiTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/analysis\/AnalysisEsResilienceTest.java":[{"add":["71","      .setServerProperty(\"sonar.sonarcloud.enabled\", \"true\")"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":[{"add":["21","import org.sonar.api.config.Configuration;","24","import static org.sonar.process.ProcessProperties.Property.SONARCLOUD_ENABLED;","25","","28","  private final Configuration config;","29","","30","  public OrganizationsWsModule(Configuration config) {","31","    this.config = config;","32","  }","33","","41","      SearchMembersAction.class);","42","    if (config.getBoolean(SONARCLOUD_ENABLED.getKey()).orElse(false)) {","43","      add(","44","        EnableSupportAction.class,","45","        AddMemberAction.class,","46","        CreateAction.class,","47","        DeleteAction.class,","48","        RemoveMemberAction.class,","49","        UpdateAction.class,","50","        UpdateProjectVisibilityAction.class);","51","    }"],"delete":["31","      AddMemberAction.class,","32","      CreateAction.class,","33","      DeleteAction.class,","34","      EnableSupportAction.class,","35","      RemoveMemberAction.class,","37","      SearchMembersAction.class,","38","      UpdateAction.class,","39","      UpdateProjectVisibilityAction.class);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectBadgesTest.java":[{"add":["55","    tester.openBrowser().openProjectDashboard(PROJECT_KEY);","82","    tester.openBrowser().logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"],"delete":["55","    tester.openBrowser(\"\/projects\").openProjectDashboard(PROJECT_KEY);","82","    tester.openBrowser(\"\/projects\").logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/SonarCloudProjectBadgesTest.java":[{"add":["56","    tester.openBrowser().openProjectDashboard(PROJECT_KEY);","88","    tester.openBrowser().logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"],"delete":["56","    tester.openBrowser(\"\/projects\").openProjectDashboard(PROJECT_KEY);","88","    tester.openBrowser(\"\/projects\").logIn().submitCredentials(user.getLogin()).openProjectDashboard(PROJECT_KEY);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/ActiveRuleEsResilienceTest.java":[{"add":["32","import org.sonarqube.tests.Byteman;","55","      .setServerProperty(\"sonar.sonarcloud.enabled\", \"true\")"],"delete":["31","import org.sonarqube.tests.Byteman;"]}],"server\/sonar-qa-util\/src\/main\/java\/org\/sonarqube\/qa\/util\/Tester.java":[{"add":["141","    \/\/ \/projects is used as on SonarCloud instance, the \"\/\" is redirected to SonarCloud website","142","    return Navigation.create(orchestrator, \"\/projects\");"],"delete":["141","    return Navigation.create(orchestrator);","142","  }","143","","144","  public Navigation openBrowser(String path) {","145","    verifyStarted();","146","    return Navigation.create(orchestrator, path);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":[{"add":["22","import org.sonar.api.config.internal.MapSettings;","29","","30","  private ComponentContainer container = new ComponentContainer();","31","  private MapSettings mapSettings = new MapSettings();","32","  private OrganizationsWsModule underTest = new OrganizationsWsModule(mapSettings.asConfig());","35","  public void verify_component_count_when_not_on_sonar_cloud() {","36","    mapSettings.setProperty(\"sonar.sonarcloud.enabled\", false);","37","","39","","40","    assertThat(container.getPicoContainer().getComponentAdapters())","41","      .hasSize(COMPONENTS_IN_EMPTY_COMPONENT_CONTAINER + 4);","42","  }","43","","44","  @Test","45","  public void verify_component_count_when_on_sonar_cloud() {","46","    mapSettings.setProperty(\"sonar.sonarcloud.enabled\", true);","47","","48","    underTest.configure(container);","49",""],"delete":["28","  private OrganizationsWsModule underTest = new OrganizationsWsModule();","31","  public void verify_component_count() {","32","    ComponentContainer container = new ComponentContainer();"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/Category6Suite.java":[{"add":["85","    .setServerProperty(\"sonar.sonarcloud.enabled\", \"true\")","86",""],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/qualityProfile\/OrganizationQualityProfilesUiTest.java":[{"add":["88","    tester.openBrowser().logIn().submitCredentials(user.getLogin())"],"delete":["88","    tester.openBrowser().openHome().logIn().submitCredentials(user.getLogin())"]}]}},"899d9a0a07566b55a2de2434266e4daeb4a65666":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/nav\/NavBar.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/nav\/NavBar.tsx":[{"add":["21","import { throttle } from 'lodash';","32","interface State {","33","  left: number;","34","}","35","","36","export default class NavBar extends React.PureComponent<Props, State> {","37","  throttledFollowHorizontalScroll: (() => void);","38","","39","  constructor(props: Props) {","40","    super(props);","41","    this.state = { left: 0 };","42","    this.throttledFollowHorizontalScroll = throttle(this.followHorizontalScroll, 10);","43","  }","44","","45","  componentDidMount() {","46","    document.addEventListener('scroll', this.throttledFollowHorizontalScroll);","47","  }","48","","49","  componentWillUnmount() {","50","    document.removeEventListener('scroll', this.throttledFollowHorizontalScroll);","51","  }","52","","53","  followHorizontalScroll = () => {","54","    this.setState({ left: -document.documentElement.scrollLeft });","55","  };","56","","57","  render() {","58","    const { children, className, height, notif, ...other } = this.props;","59","    return (","60","      <nav {...other} className={classNames('navbar', className)} style={{ height }}>","61","        <div","62","          className={classNames('navbar-inner', { 'navbar-inner-with-notif': notif != null })}","63","          style={{ height, left: this.state.left }}>","64","          <div className=\"navbar-limited clearfix\">{children}<\/div>","65","          {notif}","66","        <\/div>","67","      <\/nav>","68","    );","69","  }"],"delete":["31","export default function NavBar({ children, className, height, notif, ...other }: Props) {","32","  return (","33","    <nav {...other} className={classNames('navbar', className)} style={{ height }}>","34","      <div","35","        className={classNames('navbar-inner', { 'navbar-inner-with-notif': notif != null })}","36","        style={{ height }}>","37","        <div className=\"navbar-limited clearfix\">{children}<\/div>","38","        {notif}","39","      <\/div>","40","    <\/nav>","41","  );"]}]}},"0f5624e59711578884518b4438c9c7e5c47ade68":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembersModal-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembersModal-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembersModal.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/EditMembers-test.tsx":[{"add":["20","import { mount } from 'enzyme';","22","import { click, waitAndUpdate } from '..\/..\/..\/..\/helpers\/testUtils';","24","it('should edit members', async () => {","28","  const wrapper = mount(<EditMembers group={group} onEdit={onEdit} organization=\"org\" \/>);","32","  await waitAndUpdate(wrapper);","35","  await waitAndUpdate(wrapper);"],"delete":["20","import { shallow } from 'enzyme';","22","import { click } from '..\/..\/..\/..\/helpers\/testUtils';","24","it('should edit members', () => {","28","  const wrapper = shallow(<EditMembers group={group} onEdit={onEdit} organization=\"org\" \/>);"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembersModal-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/EditMembers-test.tsx.snap":[{"add":["3","<EditMembers","4","  group={","5","    Object {","6","      \"id\": 3,","7","      \"membersCount\": 5,","8","      \"name\": \"Foo\",","9","    }","10","  }","11","  onEdit={[MockFunction]}","12","  organization=\"org\"","13",">","18","    <Button","19","      className=\"button-small button-icon\"","20","      onClick={[Function]}","21","      stopPropagation={true}","22","      style={","23","        Object {","24","          \"color\": \"#236a97\",","25","        }","26","      }","27","    >","28","      <button","29","        className=\"button button-small button-icon\"","30","        onClick={[Function]}","31","        style={","32","          Object {","33","            \"color\": \"#236a97\",","34","          }","35","        }","36","        type=\"button\"","37","      >","38","        <BulletListIcon>","39","          <Icon>","40","            <svg","41","              height={16}","42","              style={","43","                Object {","44","                  \"clipRule\": \"evenodd\",","45","                  \"fillRule\": \"evenodd\",","46","                  \"strokeLinejoin\": \"round\",","47","                  \"strokeMiterlimit\": \"1.41421\",","48","                }","49","              }","50","              version=\"1.1\"","51","              viewBox=\"0 0 16 16\"","52","              width={16}","53","              xmlSpace=\"preserve\"","54","              xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","55","            >","56","              <path","57","                d=\"M2.968 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM2.968 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177z\"","58","                style={","59","                  Object {","60","                    \"fill\": \"currentColor\",","61","                  }","62","                }","63","              \/>","64","            <\/svg>","65","          <\/Icon>","66","        <\/BulletListIcon>","67","      <\/button>","68","    <\/Button>","70","<\/EditMembers>","74","<EditMembers","75","  group={","76","    Object {","77","      \"id\": 3,","78","      \"membersCount\": 5,","79","      \"name\": \"Foo\",","80","    }","81","  }","82","  onEdit={[MockFunction]}","83","  organization=\"org\"","84",">","89","    <Button","90","      className=\"button-small button-icon\"","91","      onClick={[Function]}","92","      stopPropagation={true}","93","      style={","94","        Object {","95","          \"color\": \"#236a97\",","96","        }","97","      }","99","      <button","100","        className=\"button button-small button-icon\"","102","        style={","103","          Object {","104","            \"color\": \"#236a97\",","105","          }","106","        }","107","        type=\"button\"","109","        <BulletListIcon>","110","          <Icon>","111","            <svg","112","              height={16}","113","              style={","114","                Object {","115","                  \"clipRule\": \"evenodd\",","116","                  \"fillRule\": \"evenodd\",","117","                  \"strokeLinejoin\": \"round\",","118","                  \"strokeMiterlimit\": \"1.41421\",","119","                }","120","              }","121","              version=\"1.1\"","122","              viewBox=\"0 0 16 16\"","123","              width={16}","124","              xmlSpace=\"preserve\"","125","              xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","126","            >","127","              <path","128","                d=\"M2.968 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM2.968 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177z\"","129","                style={","130","                  Object {","131","                    \"fill\": \"currentColor\",","132","                  }","133","                }","134","              \/>","135","            <\/svg>","136","          <\/Icon>","137","        <\/BulletListIcon>","138","      <\/button>","139","    <\/Button>","140","  <\/ButtonIcon>","141","  <EditMembers","142","    group={","143","      Object {","144","        \"id\": 3,","145","        \"membersCount\": 5,","146","        \"name\": \"Foo\",","147","      }","148","    }","149","    onClose={[Function]}","150","    organization=\"org\"","151","  >","152","    <Modal","153","      contentLabel=\"users.update\"","154","      onRequestClose={[Function]}","155","    >","156","      <Modal","157","        ariaHideApp={true}","158","        bodyOpenClassName=\"ReactModal__Body--open\"","159","        className=\"modal\"","160","        closeTimeoutMS={0}","161","        contentLabel=\"users.update\"","162","        isOpen={true}","163","        onRequestClose={[Function]}","164","        overlayClassName=\"modal-overlay\"","165","        parentSelector={[Function]}","166","        portalClassName=\"ReactModalPortal\"","167","        shouldCloseOnEsc={true}","168","        shouldCloseOnOverlayClick={true}","169","        shouldFocusAfterRender={true}","170","        shouldReturnFocusAfterClose={true}","171","      >","172","        <ModalPortal","173","          ariaHideApp={true}","174","          bodyOpenClassName=\"ReactModal__Body--open\"","175","          className=\"modal\"","176","          closeTimeoutMS={0}","177","          contentLabel=\"users.update\"","178","          defaultStyles={","179","            Object {","180","              \"content\": Object {","181","                \"WebkitOverflowScrolling\": \"touch\",","182","                \"background\": \"#fff\",","183","                \"border\": \"1px solid #ccc\",","184","                \"borderRadius\": \"4px\",","185","                \"bottom\": \"40px\",","186","                \"left\": \"40px\",","187","                \"outline\": \"none\",","188","                \"overflow\": \"auto\",","189","                \"padding\": \"20px\",","190","                \"position\": \"absolute\",","191","                \"right\": \"40px\",","192","                \"top\": \"40px\",","193","              },","194","              \"overlay\": Object {","195","                \"backgroundColor\": \"rgba(255, 255, 255, 0.75)\",","196","                \"bottom\": 0,","197","                \"left\": 0,","198","                \"position\": \"fixed\",","199","                \"right\": 0,","200","                \"top\": 0,","201","              },","202","            }","203","          }","204","          isOpen={true}","205","          onRequestClose={[Function]}","206","          overlayClassName=\"modal-overlay\"","207","          parentSelector={[Function]}","208","          portalClassName=\"ReactModalPortal\"","209","          shouldCloseOnEsc={true}","210","          shouldCloseOnOverlayClick={true}","211","          shouldFocusAfterRender={true}","212","          shouldReturnFocusAfterClose={true}","213","          style={","214","            Object {","215","              \"content\": Object {},","216","              \"overlay\": Object {},","217","            }","218","          }","219","        >","220","          <div","221","            aria-modal=\"true\"","222","            className=\"ReactModal__Overlay ReactModal__Overlay--after-open modal-overlay\"","223","            onClick={[Function]}","224","            onMouseDown={[Function]}","225","            style={Object {}}","226","          >","227","            <div","228","              aria-label=\"users.update\"","229","              className=\"ReactModal__Content ReactModal__Content--after-open modal\"","230","              onClick={[Function]}","231","              onKeyDown={[Function]}","232","              onMouseDown={[Function]}","233","              onMouseUp={[Function]}","234","              style={Object {}}","235","              tabIndex=\"-1\"","236","            >","237","              <header","238","                className=\"modal-head\"","239","              >","240","                <h2>","241","                  users.update","242","                <\/h2>","243","              <\/header>","244","              <div","245","                className=\"modal-body\"","246","              >","247","                <DeferredSpinner","248","                  loading={false}","249","                  timeout={100}","250","                >","251","                  <SelectList","252","                    elements={Array []}","253","                    onSearch={[Function]}","254","                    onSelect={[Function]}","255","                    onUnselect={[Function]}","256","                    renderElement={[Function]}","257","                    selectedElements={Array []}","258","                  >","259","                    <div","260","                      className=\"select-list\"","261","                    >","262","                      <div","263","                        className=\"display-flex-center\"","264","                      >","265","                        <RadioToggle","266","                          className=\"spacer-right\"","267","                          disabled={false}","268","                          name=\"filter\"","269","                          onCheck={[Function]}","270","                          options={","271","                            Array [","272","                              Object {","273","                                \"disabled\": false,","274","                                \"label\": \"selected\",","275","                                \"value\": \"selected\",","276","                              },","277","                              Object {","278","                                \"disabled\": false,","279","                                \"label\": \"unselected\",","280","                                \"value\": \"deselected\",","281","                              },","282","                              Object {","283","                                \"disabled\": false,","284","                                \"label\": \"all\",","285","                                \"value\": \"all\",","286","                              },","287","                            ]","288","                          }","289","                          value=\"selected\"","290","                        >","291","                          <ul","292","                            className=\"radio-toggle spacer-right\"","293","                          >","294","                            <li","295","                              key=\"selected\"","296","                            >","297","                              <input","298","                                checked={true}","299","                                disabled={false}","300","                                id=\"filter__selected\"","301","                                name=\"filter\"","302","                                onChange={[Function]}","303","                                type=\"radio\"","304","                                value=\"selected\"","305","                              \/>","306","                              <Tooltip>","307","                                <label","308","                                  htmlFor=\"filter__selected\"","309","                                >","310","                                  selected","311","                                <\/label>","312","                              <\/Tooltip>","313","                            <\/li>","314","                            <li","315","                              key=\"deselected\"","316","                            >","317","                              <input","318","                                checked={false}","319","                                disabled={false}","320","                                id=\"filter__deselected\"","321","                                name=\"filter\"","322","                                onChange={[Function]}","323","                                type=\"radio\"","324","                                value=\"deselected\"","325","                              \/>","326","                              <Tooltip>","327","                                <label","328","                                  htmlFor=\"filter__deselected\"","329","                                >","330","                                  unselected","331","                                <\/label>","332","                              <\/Tooltip>","333","                            <\/li>","334","                            <li","335","                              key=\"all\"","336","                            >","337","                              <input","338","                                checked={false}","339","                                disabled={false}","340","                                id=\"filter__all\"","341","                                name=\"filter\"","342","                                onChange={[Function]}","343","                                type=\"radio\"","344","                                value=\"all\"","345","                              \/>","346","                              <Tooltip>","347","                                <label","348","                                  htmlFor=\"filter__all\"","349","                                >","350","                                  all","351","                                <\/label>","352","                              <\/Tooltip>","353","                            <\/li>","354","                          <\/ul>","355","                        <\/RadioToggle>","356","                        <SearchBox","357","                          autoFocus={true}","358","                          loading={false}","359","                          onChange={[Function]}","360","                          placeholder=\"search_verb\"","361","                          value=\"\"","362","                        >","363","                          <div","364","                            className=\"search-box\"","365","                          >","366","                            <input","367","                              autoComplete=\"off\"","368","                              autoFocus={true}","369","                              className=\"search-box-input\"","370","                              maxLength={100}","371","                              onChange={[Function]}","372","                              onKeyDown={[Function]}","373","                              placeholder=\"search_verb\"","374","                              type=\"search\"","375","                              value=\"\"","376","                            \/>","377","                            <DeferredSpinner","378","                              loading={false}","379","                              timeout={100}","380","                            >","381","                              <SearchIcon","382","                                className=\"search-box-magnifier\"","383","                              >","384","                                <Icon","385","                                  className=\"search-box-magnifier\"","386","                                >","387","                                  <svg","388","                                    className=\"search-box-magnifier\"","389","                                    height={16}","390","                                    style={","391","                                      Object {","392","                                        \"clipRule\": \"evenodd\",","393","                                        \"fillRule\": \"evenodd\",","394","                                        \"strokeLinejoin\": \"round\",","395","                                        \"strokeMiterlimit\": \"1.41421\",","396","                                      }","397","                                    }","398","                                    version=\"1.1\"","399","                                    viewBox=\"0 0 16 16\"","400","                                    width={16}","401","                                    xmlSpace=\"preserve\"","402","                                    xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","403","                                  >","404","                                    <path","405","                                      d=\"M10.308 7.077c0-.89-.316-1.65-.949-2.283a3.111 3.111 0 0 0-2.282-.948c-.89 0-1.65.316-2.283.948a3.111 3.111 0 0 0-.948 2.283c0 .89.316 1.65.948 2.282a3.111 3.111 0 0 0 2.283.949c.89 0 1.65-.316 2.282-.949a3.111 3.111 0 0 0 .949-2.282zm3.692 6c0 .25-.091.466-.274.649a.887.887 0 0 1-.65.274.857.857 0 0 1-.648-.274L9.954 11.26c-.86.596-1.82.894-2.877.894a4.989 4.989 0 0 1-1.972-.4 5.076 5.076 0 0 1-1.623-1.082A5.076 5.076 0 0 1 2.4 9.049 4.989 4.989 0 0 1 2 7.077c0-.688.133-1.345.4-1.972a5.076 5.076 0 0 1 1.082-1.623A5.076 5.076 0 0 1 5.105 2.4 4.989 4.989 0 0 1 7.077 2c.687 0 1.345.133 1.972.4a5.076 5.076 0 0 1 1.623 1.082c.454.454.815.995 1.082 1.623.266.627.4 1.284.4 1.972a4.938 4.938 0 0 1-.894 2.877l2.473 2.474a.883.883 0 0 1 .267.649z\"","406","                                      style={","407","                                        Object {","408","                                          \"fill\": \"currentColor\",","409","                                        }","410","                                      }","411","                                    \/>","412","                                  <\/svg>","413","                                <\/Icon>","414","                              <\/SearchIcon>","415","                            <\/DeferredSpinner>","416","                          <\/div>","417","                        <\/SearchBox>","418","                      <\/div>","419","                      <SelectListListContainer","420","                        disabledElements={Array []}","421","                        elements={Array []}","422","                        filter=\"selected\"","423","                        onSelect={[Function]}","424","                        onUnselect={[Function]}","425","                        renderElement={[Function]}","426","                        selectedElements={Array []}","427","                      >","428","                        <div","429","                          className=\"select-list-list-container spacer-top\"","430","                        >","431","                          <ul","432","                            className=\"menu\"","433","                          \/>","434","                        <\/div>","435","                      <\/SelectListListContainer>","436","                    <\/div>","437","                  <\/SelectList>","438","                <\/DeferredSpinner>","439","              <\/div>","440","              <footer","441","                className=\"modal-foot\"","442","              >","443","                <ResetButtonLink","444","                  onClick={[Function]}","445","                >","446","                  <Button","447","                    className=\"button-link\"","448","                    onClick={[Function]}","449","                    type=\"reset\"","450","                  >","451","                    <button","452","                      className=\"button button-link\"","453","                      onClick={[Function]}","454","                      type=\"reset\"","455","                    >","456","                      Done","457","                    <\/button>","458","                  <\/Button>","459","                <\/ResetButtonLink>","460","              <\/footer>","461","            <\/div>","462","          <\/div>","463","        <\/ModalPortal>","464","      <\/Modal>","465","    <\/Modal>","466","  <\/EditMembers>","467","<\/EditMembers>","471","<EditMembers","472","  group={","473","    Object {","474","      \"id\": 3,","475","      \"membersCount\": 5,","476","      \"name\": \"Foo\",","477","    }","478","  }","479","  onEdit={","480","    [MockFunction] {","481","      \"calls\": Array [","482","        Array [],","483","      ],","484","      \"results\": Array [","485","        Object {","486","          \"isThrow\": false,","487","          \"value\": undefined,","488","        },","489","      ],","490","    }","491","  }","492","  organization=\"org\"","493",">","498","    <Button","499","      className=\"button-small button-icon\"","500","      onClick={[Function]}","501","      stopPropagation={true}","502","      style={","503","        Object {","504","          \"color\": \"#236a97\",","505","        }","506","      }","507","    >","508","      <button","509","        className=\"button button-small button-icon\"","510","        onClick={[Function]}","511","        style={","512","          Object {","513","            \"color\": \"#236a97\",","514","          }","515","        }","516","        type=\"button\"","517","      >","518","        <BulletListIcon>","519","          <Icon>","520","            <svg","521","              height={16}","522","              style={","523","                Object {","524","                  \"clipRule\": \"evenodd\",","525","                  \"fillRule\": \"evenodd\",","526","                  \"strokeLinejoin\": \"round\",","527","                  \"strokeMiterlimit\": \"1.41421\",","528","                }","529","              }","530","              version=\"1.1\"","531","              viewBox=\"0 0 16 16\"","532","              width={16}","533","              xmlSpace=\"preserve\"","534","              xmlnsXlink=\"http:\/\/www.w3.org\/1999\/xlink\"","535","            >","536","              <path","537","                d=\"M2.968 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM2.968 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 11.274v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM2.968 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-1.51q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h1.51q0.102 0 0.177 0.075t0.075 0.177zM15.045 8.255v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 5.235v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177zM15.045 2.216v1.51q0 0.102-0.075 0.177t-0.177 0.075h-10.568q-0.102 0-0.177-0.075t-0.075-0.177v-1.51q0-0.102 0.075-0.177t0.177-0.075h10.568q0.102 0 0.177 0.075t0.075 0.177z\"","538","                style={","539","                  Object {","540","                    \"fill\": \"currentColor\",","541","                  }","542","                }","543","              \/>","544","            <\/svg>","545","          <\/Icon>","546","        <\/BulletListIcon>","547","      <\/button>","548","    <\/Button>","550","<\/EditMembers>"],"delete":["3","<React.Fragment>","8","    <BulletListIcon \/>","10","<\/React.Fragment>","14","<React.Fragment>","19","    <BulletListIcon \/>","20","  <\/ButtonIcon>","21","  <Modal","22","    contentLabel=\"users.update\"","23","    onRequestClose={[Function]}","24","  >","25","    <header","26","      className=\"modal-head\"","28","      <h2>","29","        users.update","30","      <\/h2>","31","    <\/header>","32","    <div","33","      className=\"modal-body\"","34","    >","35","      <SelectList","36","        elements={Array []}","37","        onSearch={[Function]}","38","        onSelect={[Function]}","39","        onUnselect={[Function]}","40","        renderElement={[Function]}","41","        selectedElements={Array []}","42","      \/>","43","    <\/div>","44","    <footer","45","      className=\"modal-foot\"","46","    >","47","      <ResetButtonLink","50","        Done","51","      <\/ResetButtonLink>","52","    <\/footer>","53","  <\/Modal>","54","<\/React.Fragment>","58","<React.Fragment>","63","    <BulletListIcon \/>","65","<\/React.Fragment>"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/EditMembers.tsx":[{"add":["20","import EditMembersModal from '.\/EditMembersModal';","23","import { ButtonIcon } from '..\/..\/..\/components\/ui\/buttons';","38","  state: State = { modal: false };","66","          <EditMembersModal","67","            group={this.props.group}","68","            onClose={this.handleModalClose}","69","            organization={this.props.organization}","70","          \/>"],"delete":["20","import { find, without } from 'lodash';","22","import Modal from '..\/..\/..\/components\/controls\/Modal';","24","import SelectList, { Filter } from '..\/..\/..\/components\/SelectList\/SelectList';","25","import { ButtonIcon, ResetButtonLink } from '..\/..\/..\/components\/ui\/buttons';","26","import { translate } from '..\/..\/..\/helpers\/l10n';","27","import {","28","  getUsersInGroup,","29","  addUserToGroup,","30","  removeUserFromGroup,","31","  GroupUser","32","} from '..\/..\/..\/api\/user_groups';","42","  users: GroupUser[];","43","  selectedUsers: string[];","49","  state: State = { modal: false, users: [], selectedUsers: [] };","52","    this.handleSearch('', Filter.Selected);","60","  handleSearch = (query: string, selected: Filter) => {","61","    return getUsersInGroup({","62","      name: this.props.group.name,","63","      organization: this.props.organization,","64","      ps: 100,","65","      q: query !== '' ? query : undefined,","66","      selected","67","    }).then(","68","      data => {","69","        this.setState({","70","          users: data.users,","71","          selectedUsers: data.users.filter(user => user.selected).map(user => user.login)","72","        });","73","      },","74","      () => {}","75","    );","76","  };","77","","78","  handleSelect = (login: string) => {","79","    return addUserToGroup({","80","      name: this.props.group.name,","81","      login,","82","      organization: this.props.organization","83","    }).then(() => {","84","      this.setState((state: State) => ({","85","        selectedUsers: [...state.selectedUsers, login]","86","      }));","87","    });","88","  };","89","","90","  handleUnselect = (login: string) => {","91","    return removeUserFromGroup({","92","      name: this.props.group.name,","93","      login,","94","      organization: this.props.organization","95","    }).then(() => {","96","      this.setState((state: State) => ({","97","        selectedUsers: without(state.selectedUsers, login)","98","      }));","99","    });","100","  };","101","","113","  renderElement = (login: string): React.ReactNode => {","114","    const user = find(this.state.users, { login });","115","    return (","116","      <div className=\"select-list-list-item\">","117","        {user === undefined ? (","118","          login","119","        ) : (","120","          <>","121","            {user.name}","122","            <br \/>","123","            <span className=\"note\">{user.login}<\/span>","124","          <\/>","125","        )}","126","      <\/div>","127","    );","128","  };","129","","131","    const modalHeader = translate('users.update');","132","","139","          <Modal contentLabel={modalHeader} onRequestClose={this.handleModalClose}>","140","            <header className=\"modal-head\">","141","              <h2>{modalHeader}<\/h2>","142","            <\/header>","143","","144","            <div className=\"modal-body\">","145","              <SelectList","146","                elements={this.state.users.map(user => user.login)}","147","                onSearch={this.handleSearch}","148","                onSelect={this.handleSelect}","149","                onUnselect={this.handleUnselect}","150","                renderElement={this.renderElement}","151","                selectedElements={this.state.selectedUsers}","152","              \/>","153","            <\/div>","154","","155","            <footer className=\"modal-foot\">","156","              <ResetButtonLink onClick={this.handleModalClose}>{translate('Done')}<\/ResetButtonLink>","157","            <\/footer>","158","          <\/Modal>"]}]}},"6b837953f06bfd5181580144c955284f168c844e":{"changes":{"server\/sonar-docs\/package.json":"MODIFY","server\/sonar-docs\/src\/templates\/page.js":"MODIFY"},"diff":{"server\/sonar-docs\/package.json":[{"add":["43","    \"moduleFileExtensions\": [\"js\"],","44","    \"testPathIgnorePatterns\": [\"<rootDir>\/node_modules\", \"<rootDir>\/.cache\"],"],"delete":["43","    \"moduleFileExtensions\": [","44","      \"js\"","45","    ],","46","    \"testPathIgnorePatterns\": [","47","      \"<rootDir>\/node_modules\",","48","      \"<rootDir>\/.cache\"","49","    ],"]}],"server\/sonar-docs\/src\/templates\/page.js":[{"add":["27","  baseUrl = '';","28","","30","    if (window) {","31","      this.baseUrl = window.location.origin + '\/';","32","    }","70","          <link","71","            rel=\"canonical\"","72","            href={this.baseUrl + this.props.location.pathname.replace(version, 'latest')}","73","          \/>"],"delete":["65","          <link rel=\"canonical\" href={this.props.location.pathname.replace('latest', version)} \/>"]}]}},"db035e56b216401f4fb27bc74bc8861cb4874802":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":[{"add":["25","import javax.annotation.CheckForNull;","26","import javax.annotation.Nullable;","52","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","56","import static org.sonar.server.ws.WsParameterBuilder.QualifierParameterContext.newQualifierParameterContext;","86","      .addPagingParams(100, MAX_LIMIT)"],"delete":["45","import javax.annotation.CheckForNull;","46","import javax.annotation.Nullable;","47","","55","import static org.sonar.server.ws.WsParameterBuilder.QualifierParameterContext.newQualifierParameterContext;","86","      .addPagingParams(100)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":[{"add":["44","import org.sonar.server.component.ws.SearchAction.SearchRequest;","55","import org.sonarqube.ws.MediaTypes;","125","    WebService.Param pageSize = action.param(\"ps\");","126","    assertThat(pageSize.isRequired()).isFalse();","127","    assertThat(pageSize.defaultValue()).isEqualTo(\"100\");","128","    assertThat(pageSize.maximumValue()).isEqualTo(500);","129","    assertThat(pageSize.description()).isEqualTo(\"Page size. Must be greater than 0 and less than 500\");","130",""],"delete":["52","import org.sonarqube.ws.MediaTypes;","55","import org.sonar.server.component.ws.SearchAction.SearchRequest;"]}]}},"116d1f01a872b83be5aedf8a700be10556c091d8":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/ActiveRuleParamDtoFunctions.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleUpdater.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleUpdaterMediumTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/ActiveRuleDao.java":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/ActiveRuleParamDtoFunctions.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/RuleUpdater.java":[{"add":["21","import com.google.common.base.Function;","24","import com.google.common.base.Predicate;","27","import java.util.Collection;","31","import java.util.Map;","33","import javax.annotation.Nonnull;","44","import org.sonar.db.qualityprofile.ActiveRuleDtoFunctions.ActiveRuleDtoToId;","51","import static com.google.common.collect.FluentIterable.from;","53","import static org.sonar.db.qualityprofile.ActiveRuleParamDtoFunctions.ActiveRuleDtoParamToKey;","247","      Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParamsByActiveRule = getActiveRuleParamsByActiveRule(dbSession, customRule);","249","      deleteOrUpdateParameters(dbSession, update, customRule, paramKeys, activeRuleParamsByActiveRule);","253","  private Multimap<ActiveRuleDto, ActiveRuleParamDto> getActiveRuleParamsByActiveRule(DbSession dbSession, RuleDto customRule) {","254","    List<ActiveRuleDto> activeRuleDtos = dbClient.activeRuleDao().selectByRule(dbSession, customRule);","255","    Map<Integer, ActiveRuleDto> activeRuleById = from(activeRuleDtos).uniqueIndex(ActiveRuleDtoToId.INSTANCE);","256","    List<Integer> activeRuleIds = from(activeRuleDtos)","257","      .transform(ActiveRuleDtoToId.INSTANCE)","258","      .toList();","259","    List<ActiveRuleParamDto> activeRuleParamDtos = dbClient.activeRuleDao().selectParamsByActiveRuleIds(dbSession, activeRuleIds);","260","    return from(activeRuleParamDtos)","261","      .index(new ActiveRuleParamToActiveRule(activeRuleById));","262","  }","263","","265","    Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParamsByActiveRule) {","276","        updateOrInsertActiveRuleParams(dbSession, ruleParamDto, activeRuleParamsByActiveRule);","279","        deleteActiveRuleParams(dbSession, key, activeRuleParamsByActiveRule.values());","285","  private void updateOrInsertActiveRuleParams(DbSession dbSession, RuleParamDto ruleParamDto, Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParamsByActiveRule){","286","    from(activeRuleParamsByActiveRule.keySet())","287","      .filter(new UpdateOrInsertActiveRuleParams(dbSession, dbClient, ruleParamDto, activeRuleParamsByActiveRule))","288","      .toList();","289","  }","290","","291","  private void deleteActiveRuleParams(DbSession dbSession, String key, Collection<ActiveRuleParamDto> activeRuleParamDtos){","292","    from(activeRuleParamDtos)","293","      .filter(new DeleteActiveRuleParams(dbSession, dbClient, key))","294","      .toList();","295","  }","296","","297","  private static class ActiveRuleParamToActiveRule implements Function<ActiveRuleParamDto, ActiveRuleDto> {","298","    private final Map<Integer, ActiveRuleDto> activeRuleById;","299","","300","    private ActiveRuleParamToActiveRule(Map<Integer, ActiveRuleDto> activeRuleById) {","301","      this.activeRuleById = activeRuleById;","302","    }","303","","304","    @Override","305","    public ActiveRuleDto apply(@Nonnull ActiveRuleParamDto input) {","306","      return activeRuleById.get(input.getActiveRuleId());","307","    }","308","  }","309","","310","  private static class UpdateOrInsertActiveRuleParams implements Predicate<ActiveRuleDto> {","311","    private final DbSession dbSession;","312","    private final DbClient dbClient;","313","    private final RuleParamDto ruleParamDto;","314","    private final Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParams;","315","","316","    private UpdateOrInsertActiveRuleParams(DbSession dbSession, DbClient dbClient, RuleParamDto ruleParamDto, Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParams) {","317","      this.dbSession = dbSession;","318","      this.dbClient = dbClient;","319","      this.ruleParamDto = ruleParamDto;","320","      this.activeRuleParams = activeRuleParams;","321","    }","322","","323","    @Override","324","    public boolean apply(@Nonnull ActiveRuleDto activeRuleDto) {","325","      Map<String, ActiveRuleParamDto> activeRuleParamByKey = from(activeRuleParams.get(activeRuleDto))","326","        .uniqueIndex(ActiveRuleDtoParamToKey.INSTANCE);","327","      ActiveRuleParamDto activeRuleParamDto = activeRuleParamByKey.get(ruleParamDto.getName());","328","      if (activeRuleParamDto != null) {","329","        dbClient.activeRuleDao().updateParam(dbSession, activeRuleDto, activeRuleParamDto.setValue(ruleParamDto.getDefaultValue()));","330","      } else {","331","        dbClient.activeRuleDao().insertParam(dbSession, activeRuleDto, ActiveRuleParamDto.createFor(ruleParamDto).setValue(ruleParamDto.getDefaultValue()));","332","      }","333","      return true;","334","    }","335","  }","336","","337","  private static class DeleteActiveRuleParams implements Predicate<ActiveRuleParamDto> {","338","    private final DbSession dbSession;","339","    private final DbClient dbClient;","340","    private final String key;","341","","342","    public DeleteActiveRuleParams(DbSession dbSession, DbClient dbClient, String key) {","343","      this.dbSession = dbSession;","344","      this.dbClient = dbClient;","345","      this.key = key;","346","    }","347","","348","    @Override","349","    public boolean apply(@Nonnull ActiveRuleParamDto activeRuleParamDto) {","350","      if (activeRuleParamDto.getKey().equals(key)) {","351","        dbClient.activeRuleDao().deleteParamById(dbSession, activeRuleParamDto.getId());","352","      }","353","      return true;","354","    }","355","  }","356","","362",""],"delete":["24","import com.google.common.collect.ArrayListMultimap;","240","      Multimap<RuleDto, ActiveRuleDto> activeRules = ArrayListMultimap.create();","241","      Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParams = ArrayListMultimap.create();","242","      for (ActiveRuleDto activeRuleDto : dbClient.activeRuleDao().selectByRule(dbSession, customRule)) {","243","        activeRules.put(customRule, activeRuleDto);","244","        for (ActiveRuleParamDto activeRuleParamDto : dbClient.activeRuleDao().selectParamsByActiveRuleId(dbSession, activeRuleDto.getId())) {","245","          activeRuleParams.put(activeRuleDto, activeRuleParamDto);","246","        }","247","      }","248","","250","      deleteOrUpdateParameters(dbSession, update, customRule, paramKeys, activeRules, activeRuleParams);","255","    Multimap<RuleDto, ActiveRuleDto> activeRules, Multimap<ActiveRuleDto, ActiveRuleParamDto> activeRuleParams) {","266","        for (ActiveRuleDto activeRuleDto : activeRules.get(customRule)) {","267","          for (ActiveRuleParamDto activeRuleParamDto : activeRuleParams.get(activeRuleDto)) {","268","            if (activeRuleParamDto.getKey().equals(key)) {","269","              dbClient.activeRuleDao().updateParam(dbSession, activeRuleDto, activeRuleParamDto.setValue(value));","270","            } else {","271","              dbClient.activeRuleDao().insertParam(dbSession, activeRuleDto, ActiveRuleParamDto.createFor(ruleParamDto).setValue(value));","272","            }","273","          }","274","        }","277","        for (ActiveRuleDto activeRuleDto : activeRules.get(customRule)) {","278","          for (ActiveRuleParamDto activeRuleParamDto : activeRuleParams.get(activeRuleDto)) {","279","            if (activeRuleParamDto.getKey().equals(key)) {","280","              dbClient.activeRuleDao().deleteParam(dbSession, activeRuleDto, activeRuleParamDto);","281","            }","282","          }","283","        }"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleUpdaterMediumTest.java":[{"add":["473","    assertThat(activeRuleParams).hasSize(2);"],"delete":["473","    \/\/ FIXME why 4 parameters are returned ??? (This issue already exists in 5.4)","474","    \/\/ assertThat(activeRuleParams).hasSize(2);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualityprofile\/ActiveRuleDao.java":[{"add":["152","    deleteParamById(session, activeRuleParam.getId());","153","  }","154","","155","  public void deleteParamById(DbSession session, int id){","156","    mapper(session).deleteParameter(id);"],"delete":["152","    mapper(session).deleteParameter(activeRuleParam.getId());"]}]}},"d761e6fb62e79902569219090402e529bc373c3d":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v62\/UpdateQualityGateConditionsOnCoverage.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v62\/UpdateQualityGateConditionsOnCoverageTest.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v62\/UpdateQualityGateConditionsOnCoverage.java":[{"add":["21","import com.google.common.base.Throwables;","23","import com.google.common.collect.Multimap;","26","import java.util.Collection;","27","import java.util.Collections;","38","import org.sonar.server.platform.db.migration.step.Upsert;","41","import static org.sonar.core.util.stream.MoreCollectors.index;","103","      Multimap<Long, QualityGateCondition> qualityGateConditionsByMetricId = qualityGateConditions.stream()","104","        .collect(index(QualityGateCondition::getMetricId, Function.identity()));","111","    private void processConditions(String coverageMetricKey, String overallMetricKey, String itMetricKey, Multimap<Long, QualityGateCondition> qualityGateConditionsByMetricId,","114","        Collection<QualityGateCondition> conditionsOnCoverage = getConditionsByMetricKey(coverageMetricKey, qualityGateConditionsByMetricId);","115","        Collection<QualityGateCondition> conditionsOnOverallCoverage = getConditionsByMetricKey(overallMetricKey, qualityGateConditionsByMetricId);","116","        Collection<QualityGateCondition> conditionsOnItCoverage = getConditionsByMetricKey(itMetricKey, qualityGateConditionsByMetricId);","117","        if (conditionsOnCoverage.isEmpty() && conditionsOnOverallCoverage.isEmpty() && conditionsOnItCoverage.isEmpty()) {","120","        if (!conditionsOnOverallCoverage.isEmpty()) {","121","          removeQualityGateConditions(conditionsOnCoverage);","122","          removeQualityGateConditions(conditionsOnItCoverage);","123","          updateQualityGateConditions(conditionsOnOverallCoverage, coverageMetricKey);","124","        } else if (!conditionsOnCoverage.isEmpty()) {","125","          removeQualityGateConditions(conditionsOnItCoverage);","126","        } else {","127","          updateQualityGateConditions(conditionsOnItCoverage, coverageMetricKey);","134","    private Collection<QualityGateCondition> getConditionsByMetricKey(String metricKey, Multimap<Long, QualityGateCondition> qualityGateConditionsByMetricId) {","137","        return Collections.emptyList();","139","      return qualityGateConditionsByMetricId.get(metric.getId());","157","    private void updateQualityGateConditions(Collection<QualityGateCondition> conditions, String metricKey) throws SQLException {","158","      Upsert upsert = context.prepareUpsert(\"update quality_gate_conditions set metric_id=? where id=?\");","159","      conditions.forEach(condition -> {","160","        try {","161","          upsert","162","            .setLong(1, metricsByMetricKeys.get(metricKey).getId())","163","            .setLong(2, condition.getId())","164","            .execute()","165","            .commit();","166","        } catch (SQLException e) {","167","          Throwables.propagate(e);","168","        }","169","      });","172","    private void removeQualityGateConditions(Collection<QualityGateCondition> conditions) throws SQLException {","173","      if (conditions.isEmpty()) {","176","      Upsert upsert = context.prepareUpsert(\"delete from quality_gate_conditions where id=?\");","177","      conditions.forEach(condition -> {","178","        try {","179","          upsert.setLong(1, condition.getId())","180","            .execute()","181","            .commit();","182","        } catch (SQLException e) {","183","          Throwables.propagate(e);","184","        }","185","      });"],"delete":["26","import java.util.Optional;","98","      Map<Long, QualityGateCondition> qualityGateConditionsByMetricId = qualityGateConditions.stream()","99","        .collect(uniqueIndex(QualityGateCondition::getMetricId, Function.identity()));","106","    private void processConditions(String coverageMetricKey, String overallMetricKey, String itMetricKey, Map<Long, QualityGateCondition> qualityGateConditionsByMetricId,","109","        Optional<QualityGateCondition> conditionOnCoverage = getConditionByMetricKey(coverageMetricKey, qualityGateConditionsByMetricId);","110","        Optional<QualityGateCondition> conditionOnOverallCoverage = getConditionByMetricKey(overallMetricKey, qualityGateConditionsByMetricId);","111","        Optional<QualityGateCondition> conditionOnItCoverage = getConditionByMetricKey(itMetricKey, qualityGateConditionsByMetricId);","112","        if (!conditionOnCoverage.isPresent() && !conditionOnOverallCoverage.isPresent() && !conditionOnItCoverage.isPresent()) {","115","        if (conditionOnOverallCoverage.isPresent()) {","116","          removeQualityGateCondition(conditionOnCoverage);","117","          removeQualityGateCondition(conditionOnItCoverage);","118","          updateQualityGateCondition(conditionOnOverallCoverage.get().getId(), coverageMetricKey);","119","        } else if (conditionOnCoverage.isPresent()) {","120","          removeQualityGateCondition(conditionOnItCoverage);","121","        } else if (conditionOnItCoverage.isPresent()) {","122","          updateQualityGateCondition(conditionOnItCoverage.get().getId(), coverageMetricKey);","129","    private Optional<QualityGateCondition> getConditionByMetricKey(String metricKey, Map<Long, QualityGateCondition> qualityGateConditionsByMetricId) {","132","        return Optional.empty();","134","      return Optional.ofNullable(qualityGateConditionsByMetricId.get(metric.getId()));","152","    private void updateQualityGateCondition(long id, String metricKey) throws SQLException {","153","      context.prepareUpsert(\"update quality_gate_conditions set metric_id=? where id=?\")","154","        .setLong(1, metricsByMetricKeys.get(metricKey).getId())","155","        .setLong(2, id)","156","        .execute()","157","        .commit();","160","    private void removeQualityGateCondition(Optional<QualityGateCondition> condition) throws SQLException {","161","      if (!condition.isPresent()) {","164","      context.prepareUpsert(\"delete from quality_gate_conditions where id=?\").setLong(1, condition.get().getId())","165","        .execute()","166","        .commit();"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v62\/UpdateQualityGateConditionsOnCoverageTest.java":[{"add":["60","    Map<String, Long> metricIdsByMetricKeys = insertSampleMetrics();","72","    Map<String, Long> metricIdsByMetricKeys = insertSampleMetrics();","85","    Map<String, Long> metricIdsByMetricKeys = insertSampleMetrics();","98","    Map<String, Long> metricIdsByMetricKeys = insertSampleMetrics();","110","    Map<String, Long> metricIdsByMetricKeys = insertSampleMetrics();","123","    Map<String, Long> metricIdsByMetricKeys = insertSampleMetrics();","210","  public void move_conditions_linked_to_same_metric() throws Exception {","211","    insertMetric(\"coverage\");","212","    long metricId = insertMetric(\"overall_coverage\");","213","    long qualityGate = insertQualityGate(\"qualityGate\");","214","    insertQualityGateCondition(qualityGate, metricId, null, \"GT\", \"7\", \"15\");","215","    insertQualityGateCondition(qualityGate, metricId, 1L, \"GT\", \"10\", null);","216","","217","    underTest.execute();","218","","219","    assertThat(dbTester.countRowsOfTable(TABLE_QUALITY_GATE_CONDITIONS)).isEqualTo(2);","220","    verifyConditions(qualityGate,","221","      new QualityGateCondition(\"coverage\", null, \"GT\", \"7\", \"15\"),","222","      new QualityGateCondition(\"coverage\", 1L, \"GT\", \"10\", null));","223","  }","224","","225","  @Test","241","  private Map<String, Long> insertSampleMetrics() {","275","    String sql = format(\"select id as \\\"id\\\" from %s where qgate_id='%s' and metric_id='%s'\", TABLE_QUALITY_GATE_CONDITIONS, qualityGateId, metricId);","276","    sql += period == null ? \"\" : format(\" and period='%s'\", period);","278","      .selectFirst(sql)"],"delete":["60","    Map<String, Long> metricIdsByMetricKeys = inserSampleMetrics();","72","    Map<String, Long> metricIdsByMetricKeys = inserSampleMetrics();","85","    Map<String, Long> metricIdsByMetricKeys = inserSampleMetrics();","98","    Map<String, Long> metricIdsByMetricKeys = inserSampleMetrics();","110","    Map<String, Long> metricIdsByMetricKeys = inserSampleMetrics();","123","    Map<String, Long> metricIdsByMetricKeys = inserSampleMetrics();","225","  private Map<String, Long> inserSampleMetrics() {","260","      .selectFirst(format(\"select id as \\\"id\\\" from %s where qgate_id='%s' and metric_id='%s'\", TABLE_QUALITY_GATE_CONDITIONS, qualityGateId, metricId))"]}]}},"6dec8a61556090d4cdeac8fb130b2ba01809bca9":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/facets\/language-facet.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/facets\/language-facet.js":[{"add":["60","      values: this.sortValues(this.getValues())"],"delete":["60","      values: this.getValues()"]}]}},"750fd412e0b11a071c5a3d2677cda289713d82e2":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/IssuesModeTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/repository\/QualityProfileProviderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/QualityProfileProvider.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/IssuesModeTest.java":[{"add":["208","  ","209","  \/\/ SONAR-8518","210","  @Test","211","  public void shoud_support_sonar_profile_prop() throws IOException {","212","    restoreProfile(\"one-issue-per-line.xml\");","213","    restoreProfile(\"empty.xml\");","214","    orchestrator.getServer().provisionProject(\"sample\", \"xoo-sample\");","215","    orchestrator.getServer().associateProjectToQualityProfile(\"sample\", \"xoo\", \"empty\");","216","    ","217","    SonarScanner runner = configureRunner(\"shared\/xoo-sample\", ","218","      \"sonar.verbose\", \"true\",","219","      \"sonar.analysis.mode\", \"issues\",","220","      \"sonar.profile\", \"one-issue-per-line\");","221","    BuildResult result = orchestrator.executeBuild(runner);","222","    ItUtils.assertIssuesInJsonReport(result, 17, 0, 0);","223","  }"],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/repository\/QualityProfileProviderTest.java":[{"add":["80","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props);","91","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props);","104","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props);","120","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props);"],"delete":["33","import org.sonar.scanner.analysis.DefaultAnalysisMode;","58","  private DefaultAnalysisMode mode;","59","  @Mock","83","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props, mode);","94","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props, mode);","107","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props, mode);","117","  public void testIgnoreSonarProfileIssuesMode() {","118","    when(mode.isIssues()).thenReturn(true);","119","    when(loader.load(eq(\"project\"), (String) eq(null))).thenReturn(response);","120","    when(props.property(ModuleQProfiles.SONAR_PROFILE_PROP)).thenReturn(\"custom\");","121","","122","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props, mode);","123","    assertResponse(qps);","124","","125","    verify(loader).load(eq(\"project\"), (String) eq(null));","126","    verifyNoMoreInteractions(loader);","127","  }","128","","129","  @Test","136","    ModuleQProfiles qps = qualityProfileProvider.provide(key, loader, projectRepo, props, mode);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/QualityProfileProvider.java":[{"add":["37","  public ModuleQProfiles provide(ProjectKey projectKey, QualityProfileLoader loader, ProjectRepositories projectRepositories, AnalysisProperties props) {","42","        profileList = loader.loadDefault(getSonarProfile(props));","44","        profileList = loader.load(projectKey.get(), getSonarProfile(props));","54","  private static String getSonarProfile(AnalysisProperties props) {","56","    if (props.properties().containsKey(ModuleQProfiles.SONAR_PROFILE_PROP)) {"],"delete":["29","import org.sonar.scanner.analysis.DefaultAnalysisMode;","38","  public ModuleQProfiles provide(ProjectKey projectKey, QualityProfileLoader loader, ProjectRepositories projectRepositories, AnalysisProperties props, DefaultAnalysisMode mode) {","43","        profileList = loader.loadDefault(getSonarProfile(props, mode));","45","        profileList = loader.load(projectKey.get(), getSonarProfile(props, mode));","55","  private static String getSonarProfile(AnalysisProperties props, DefaultAnalysisMode mode) {","57","    if (!mode.isIssues() && props.properties().containsKey(ModuleQProfiles.SONAR_PROFILE_PROP)) {"]}]}},"770be1eac18e8a7f99f0596938f38054e2abfb40":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateConditionDaoTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/qualitygate\/ProjectQgateAssociationQuery.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/qualitygate\/ProjectQgateAssociationQueryTest.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateConditionDaoTest.java":[{"add":["40","  QualityGateConditionDao underTest = dbTester.getDbClient().gateConditionDao();","47","    underTest.insert(newCondition);","55","    assertThat(underTest.selectForQualityGate(1L)).hasSize(3);","56","    assertThat(underTest.selectForQualityGate(2L)).hasSize(2);","62","    QualityGateConditionDto selectById = underTest.selectById(1L);","71","    assertThat(underTest.selectById(42L)).isNull();","77","    underTest.delete(new QualityGateConditionDto().setId(1L));","84","    underTest.update(new QualityGateConditionDto().setId(1L).setMetricId(7L).setOperator(\">\").setPeriod(1).setWarningThreshold(\"50\").setErrorThreshold(\"80\"));","91","    underTest.deleteConditionsWithInvalidMetrics();"],"delete":["40","  QualityGateConditionDao dao = dbTester.getDbClient().gateConditionDao();","47","    dao.insert(newCondition);","55","    assertThat(dao.selectForQualityGate(1L)).hasSize(3);","56","    assertThat(dao.selectForQualityGate(2L)).hasSize(2);","62","    QualityGateConditionDto selectById = dao.selectById(1L);","71","    assertThat(dao.selectById(42L)).isNull();","77","    dao.delete(new QualityGateConditionDto().setId(1L));","84","    dao.update(new QualityGateConditionDto().setId(1L).setMetricId(7L).setOperator(\">\").setPeriod(1).setWarningThreshold(\"50\").setErrorThreshold(\"80\"));","91","    dao.deleteConditionsWithInvalidMetrics();"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/qualitygate\/ProjectQgateAssociationQuery.java":[{"add":["44","  private final String projectSearchSql;","62","  private String projectSearchToSql(@Nullable String value) {","63","    if (value == null) {","64","      return null;","66","","67","    return value","68","      .replaceAll(\"%\", \"\\\\\\\\%\")","69","      .replaceAll(\"_\", \"\\\\\\\\_\")","70","      .toLowerCase() + \"%\";","90","  public String projectSearchSql() {","91","    return projectSearchSql;","92","  }","93","","147","          \"Membership is not valid (got \" + membership + \"). Available values are \" + AVAILABLE_MEMBERSHIP);","165","      Preconditions.checkNotNull(gateId, \"Gate ID cannot be null.\");"],"delete":["44","  final String projectSearchSql;","62","  private String projectSearchToSql(@Nullable String s) {","63","    String sql = null;","64","    if (s != null) {","65","      sql = StringUtils.replace(StringUtils.lowerCase(s), \"%\", \"\/%\");","66","      sql = StringUtils.replace(sql, \"_\", \"\/_\");","67","      sql = sql + \"%\";","69","    return sql;","142","          \"Membership is not valid (got \" + membership + \"). Availables values are \" + AVAILABLE_MEMBERSHIP);","160","      Preconditions.checkNotNull(gateId, \"Gate ID cant be null.\");"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualitygate\/ProjectQgateAssociationQueryTest.java":[{"add":["22","import org.junit.Rule;","24","import org.junit.rules.ExpectedException;","30","  @Rule","31","  public ExpectedException expectedException = ExpectedException.none();","32","","33","  @Test","34","  public void handle_underscore_and_percent() {","35","    ProjectQgateAssociationQuery underTest = ProjectQgateAssociationQuery.builder()","36","      .projectSearch(\"project-_%-search\")","37","      .gateId(\"1\").build();","38","","39","    assertThat(underTest.projectSearchSql()).isEqualTo(\"project-\\\\_\\\\%-search%\");","40","  }","41","","44","    expectedException.expect(NullPointerException.class);","45","    expectedException.expectMessage(\"Gate ID cannot be null\");","47","    ProjectQgateAssociationQuery.Builder builder = ProjectQgateAssociationQuery.builder()","48","      .gateId(null);","49","","50","    builder.build();","55","    expectedException.expect(IllegalArgumentException.class);","56","    expectedException.expectMessage(\"Membership is not valid (got unknown). Available values are [all, selected, deselected]\");","57","","60","    builder.membership(\"unknown\");","62","    builder.build();"],"delete":["25","import static org.junit.Assert.fail;","31","    ProjectQgateAssociationQuery.Builder builder = ProjectQgateAssociationQuery.builder();","32","    builder.gateId(null);","34","    try {","35","      builder.build();","36","      fail();","37","    } catch (Exception e) {","38","      assertThat(e).isInstanceOf(NullPointerException.class).hasMessage(\"Gate ID cant be null.\");","39","    }","46","    builder.membership(\"unknwown\");","48","    try {","49","      builder.build();","50","      fail();","51","    } catch (Exception e) {","52","      assertThat(e).isInstanceOf(IllegalArgumentException.class).hasMessage(\"Membership is not valid (got unknwown). Availables values are [all, selected, deselected]\");","53","    }","55",""]}]}},"ea05fdeff86b320bba6178d6f074f8d146692fcb":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/source.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["295","      const sourcesRequest =","296","        component.q === 'FIL' || component.q === 'UTS' ? this.loadSources() : Promise.resolve([]);","297","      sourcesRequest.then(","335","      .loadIssues(","336","        this.props.component,","337","        firstSourceLine && firstSourceLine.line,","338","        lastSourceLine && lastSourceLine.line","339","      )"],"delete":["295","      this.loadSources().then(","333","      .loadIssues(this.props.component, firstSourceLine.line, lastSourceLine.line)"]}],"server\/sonar-web\/src\/main\/less\/components\/source.less":[{"add":["89",".source-line-last .source-line-code {"],"delete":["89",".source-line-last .source-line-code-inner {"]}]}},"4df67277be75c9b41f5b434f03c2fbf6dbb8b426":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImplTest.java":[{"add":["23","import org.assertj.core.groups.Tuple;","35","import org.sonar.db.qualityprofile.ActiveRuleParamDto;","38","import org.sonar.db.rule.RuleParamDto;","47","import static org.assertj.core.groups.Tuple.tuple;","52","import static org.sonar.api.rules.RulePriority.MINOR;","194","  \/\/ SONAR-10473","195","  @Test","196","  public void activate_rule_on_built_in_profile_resets_severity_to_default_if_not_overridden() {","197","    RuleDefinitionDto rule = db.rules().insert(r -> r.setSeverity(Severity.MAJOR).setLanguage(\"xoo\"));","198","","199","    BuiltInQualityProfilesDefinition.Context context = new BuiltInQualityProfilesDefinition.Context();","200","    NewBuiltInQualityProfile newQp = context.createBuiltInQualityProfile(\"Sonar way\", \"xoo\");","201","    newQp.activateRule(rule.getRepositoryKey(), rule.getRuleKey());","202","    newQp.done();","203","    BuiltInQProfile builtIn = builtInProfileRepository.create(context.profile(\"xoo\", \"Sonar way\"), rule);","204","    underTest.update(db.getSession(), builtIn, persistedProfile);","205","","206","    List<ActiveRuleDto> activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","207","    assertThatRuleIsNewlyActivated(activeRules, rule, MAJOR);","208","","209","    \/\/ emulate an upgrade of analyzer that changes the default severity of the rule","210","    rule.setSeverity(Severity.MINOR);","211","    db.rules().update(rule);","212","","213","    underTest.update(db.getSession(), builtIn, persistedProfile);","214","    activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","215","    assertThatRuleIsNewlyActivated(activeRules, rule, MINOR);","216","  }","217","","218","  @Test","219","  public void activate_rule_on_built_in_profile_resets_params_to_default_if_not_overridden() {","220","    RuleDefinitionDto rule = db.rules().insert(r -> r.setLanguage(\"xoo\"));","221","    RuleParamDto ruleParam = db.rules().insertRuleParam(rule, p -> p.setName(\"min\").setDefaultValue(\"10\"));","222","","223","    BuiltInQualityProfilesDefinition.Context context = new BuiltInQualityProfilesDefinition.Context();","224","    NewBuiltInQualityProfile newQp = context.createBuiltInQualityProfile(\"Sonar way\", \"xoo\");","225","    newQp.activateRule(rule.getRepositoryKey(), rule.getRuleKey());","226","    newQp.done();","227","    BuiltInQProfile builtIn = builtInProfileRepository.create(context.profile(\"xoo\", \"Sonar way\"), rule);","228","    underTest.update(db.getSession(), builtIn, persistedProfile);","229","","230","    List<ActiveRuleDto> activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","231","    assertThat(activeRules).hasSize(1);","232","    assertThatRuleHasParams(db, activeRules.get(0), tuple(\"min\", \"10\"));","233","","234","    \/\/ emulate an upgrade of analyzer that changes the default value of parameter min","235","    ruleParam.setDefaultValue(\"20\");","236","    db.getDbClient().ruleDao().updateRuleParam(db.getSession(), rule, ruleParam);","237","","238","    underTest.update(db.getSession(), builtIn, persistedProfile);","239","    activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","240","    assertThat(activeRules).hasSize(1);","241","    assertThatRuleHasParams(db, activeRules.get(0), tuple(\"min\", \"20\"));","242","  }","243","","286","  private static void assertThatRuleHasParams(DbTester db, ActiveRuleDto activeRule, Tuple... expectedParams) {","287","    assertThat(db.getDbClient().activeRuleDao().selectParamsByActiveRuleId(db.getSession(), activeRule.getId()))","288","      .extracting(ActiveRuleParamDto::getKey, ActiveRuleParamDto::getValue)","289","      .containsExactlyInAnyOrder(expectedParams);","290","  }","291",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":[{"add":["160","   * Update severity and params","167","    \/\/ First apply severity","168","    String severity;","170","      \/\/ load severity from parent profile, else from default values","171","      severity = firstNonNull(","173","        rule.get().getSeverityString());","174","    } else if (context.getRulesProfile().isBuiltIn()) {","175","      \/\/ for builtin quality profiles, the severity from profile, when null use the default severity of the rule","176","      severity = firstNonNull(request.getSeverity(), rule.get().getSeverityString());","177","    } else {","178","      \/\/ load severity from request, else keep existing one (if already activated), else from parent, else from default","179","      severity = firstNonNull(","181","        activeRule == null ? null : activeRule.get().getSeverityString(),","183","        rule.get().getSeverityString());","184","    }","185","    change.setSeverity(severity);","186","","187","    \/\/ Apply param values","188","    for (RuleParamDto ruleParamDto : rule.getParams()) {","189","      String paramKey = ruleParamDto.getName();","190","      String paramValue;","191","      if (request.isReset()) {","192","        \/\/ load params from parent profile, else from default values","193","        paramValue = firstNonNull(","194","          parentActiveRule != null ? parentActiveRule.getParamValue(paramKey) : null,","195","          rule.getParamDefaultValue(paramKey));","196","      } else if (context.getRulesProfile().isBuiltIn()) {","197","        \/\/ use the value defined in the profile definition, else the rule default value","198","        paramValue = firstNonNull(","199","          context.getRequestedParamValue(request, paramKey),","200","          rule.getParamDefaultValue(paramKey));","201","      } else {","203","        String activeRuleValue = activeRule == null ? null : activeRule.getParamValue(paramKey);","204","        paramValue = context.hasRequestedParamValue(request, paramKey) ?","205","          \/\/ If the request contains the parameter then we're using either value from request, or parent value, or default value","212","          activeRuleValue,","213","          parentValue,","214","          rule.getParamDefaultValue(paramKey));","217","      change.setParameter(paramKey, validateParam(ruleParamDto, paramValue));"],"delete":["160","   * Severity and parameter values are :","161","   * 1. defined by end-user","162","   * 2. else inherited from parent profile","163","   * 3. else defined by rule defaults","164","   * <p\/>","165","   * On custom rules, it's always rule parameters that are used","173","      \/\/ load severity and params from parent profile, else from default values","174","      change.setSeverity(firstNonNull(","176","        rule.get().getSeverityString()));","177","","178","      for (RuleParamDto ruleParamDto : rule.getParams()) {","179","        String paramKey = ruleParamDto.getName();","180","        change.setParameter(paramKey, validateParam(ruleParamDto, firstNonNull(","181","          parentActiveRule != null ? parentActiveRule.getParamValue(paramKey) : null,","182","          rule.getParamDefaultValue(paramKey))));","183","      }","184","","185","    } else if (activeRule != null) {","186","      \/\/ already activated -> load severity and parameters from request, else keep existing ones, else from parent,","187","      \/\/ else from default","188","      change.setSeverity(firstNonNull(","190","        activeRule.get().getSeverityString(),","192","        rule.get().getSeverityString()));","193","      for (RuleParamDto ruleParamDto : rule.getParams()) {","194","        String paramKey = ruleParamDto.getName();","196","        String paramValue = context.hasRequestedParamValue(request, paramKey) ?","197","        \/\/ If the request contains the parameter then we're using either value from request, or parent value, or default value","204","            activeRule.getParamValue(paramKey),","205","            parentValue,","206","            rule.getParamDefaultValue(paramKey));","207","        change.setParameter(paramKey, validateParam(ruleParamDto, paramValue));","210","    } else {","211","      \/\/ not activated -> load severity and parameters from request, else from parent, else from defaults","212","      change.setSeverity(firstNonNull(","213","        request.getSeverity(),","214","        parentActiveRule != null ? parentActiveRule.get().getSeverityString() : null,","215","        rule.get().getSeverityString()));","216","      for (RuleParamDto ruleParamDto : rule.getParams()) {","217","        String paramKey = ruleParamDto.getName();","218","        change.setParameter(paramKey, validateParam(ruleParamDto,","219","          firstNonNull(","220","            context.getRequestedParamValue(request, paramKey),","221","            parentActiveRule != null ? parentActiveRule.getParamValue(paramKey) : null,","222","            rule.getParamDefaultValue(paramKey))));","223","      }"]}]}},"f5380b151910ed0cf86bc01fa9cbfccdd64a2adf":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/empty.json":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityWithCwe.json":"MODIFY","server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/securityreport\/ws\/show-example.json":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sansWithCwe.json":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/owaspNoCwe.json":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityNoCwe.json":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/index\/IssueIndex.java":[{"add":["34","import java.util.Set;","91","import static java.util.stream.Collectors.toList;","154","import static org.sonar.server.security.SecurityStandardHelper.SANS_TOP_25_CWE_MAPPING;","158","import static org.sonar.server.security.SecurityStandardHelper.SONARSOURCE_CWE_MAPPING;","192","  private static final String AGG_VULNERABILITIES = \"vulnerabilities\";","193","  private static final String AGG_SEVERITIES = \"severities\";","194","  private static final String AGG_OPEN_SECURITY_HOTSPOTS = \"openSecurityHotspots\";","195","  private static final String AGG_TO_REVIEW_SECURITY_HOTSPOTS = \"toReviewSecurityHotspots\";","196","  private static final String AGG_WONT_FIX_SECURITY_HOTSPOTS = \"wontFixSecurityHotspots\";","197","  private static final String AGG_CWES = \"cwes\";","198","  private static final BoolQueryBuilder NON_RESOLVED_VULNERABILITIES_FILTER = boolQuery()","199","    .filter(termQuery(FIELD_ISSUE_TYPE, VULNERABILITY.name()))","200","    .mustNot(existsQuery(FIELD_ISSUE_RESOLUTION));","201","  private static final BoolQueryBuilder NON_RESOLVED_HOTSTPOS_FILTER = boolQuery()","202","    .filter(termQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name()))","203","    .mustNot(existsQuery(FIELD_ISSUE_RESOLUTION));","204","  private static final BoolQueryBuilder TO_REVIEW_HOTSPOTS_FILTER = boolQuery()","205","    .filter(termQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name()))","206","    .filter(termQuery(FIELD_ISSUE_STATUS, Issue.STATUS_RESOLVED))","207","    .filter(termQuery(FIELD_ISSUE_RESOLUTION, Issue.RESOLUTION_FIXED));","208","  private static final BoolQueryBuilder WONT_FIX_HOTSPOTS_FILTER = boolQuery()","209","    .filter(termQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name()))","210","    .filter(termQuery(FIELD_ISSUE_STATUS, Issue.STATUS_RESOLVED))","211","    .filter(termQuery(FIELD_ISSUE_RESOLUTION, Issue.RESOLUTION_WONT_FIX));","278","  private static final String AGG_COUNT = \"count\";","386","      query.rules().stream().map(RuleDefinitionDto::getId).collect(toList())));","826","                AggregationBuilders.count(AGG_COUNT).field(FIELD_ISSUE_KEY))","835","          long count = ((InternalValueCount) branchBucket.getAggregations().get(AGG_COUNT)).getValue();","874","    Stream.of(SANS_TOP_25_INSECURE_INTERACTION, SANS_TOP_25_RISKY_RESOURCE, SANS_TOP_25_POROUS_DEFENSES)","875","      .forEach(sansCategory -> request.addAggregation(createAggregation(FIELD_ISSUE_SANS_TOP_25, sansCategory, includeCwe, Optional.of(SANS_TOP_25_CWE_MAPPING))));","881","    SONARSOURCE_CWE_MAPPING.keySet()","882","      .forEach(","883","        sonarsourceCategory -> request.addAggregation(createAggregation(FIELD_ISSUE_SONARSOURCE_SECURITY, sonarsourceCategory, includeCwe, Optional.of(SONARSOURCE_CWE_MAPPING))));","889","    Stream.concat(IntStream.rangeClosed(1, 10).mapToObj(i -> \"a\" + i), Stream.of(UNKNOWN_STANDARD))","890","      .forEach(owaspCategory -> request.addAggregation(createAggregation(FIELD_ISSUE_OWASP_TOP_10, owaspCategory, includeCwe, Optional.empty())));","894","  private static AggregationBuilder createAggregation(String categoryField, String category, boolean includeCwe, Optional<Map<String, Set<String>>> categoryToCwesMap) {","895","    return addSecurityReportSubAggregations(AggregationBuilders","896","      .filter(category, boolQuery()","897","        .filter(termQuery(categoryField, category))),","898","      includeCwe, categoryToCwesMap.map(m -> m.get(category)));","899","  }","900","","911","      Stream<StringTerms.Bucket> stream = ((StringTerms) categoryBucket.getAggregations().get(AGG_CWES)).getBuckets().stream();","912","      children = stream.map(cweBucket -> processSecurityReportCategorySearchResults(cweBucket, cweBucket.getKeyAsString(), null)).collect(toList());","920","    List<StringTerms.Bucket> severityBuckets = ((StringTerms) ((InternalFilter) categoryBucket.getAggregations().get(AGG_VULNERABILITIES)).getAggregations().get(AGG_SEVERITIES))","922","    long vulnerabilities = severityBuckets.stream().mapToLong(b -> ((InternalValueCount) b.getAggregations().get(AGG_COUNT)).getValue()).sum();","925","      .filter(b -> ((InternalValueCount) b.getAggregations().get(AGG_COUNT)).getValue() != 0)","929","    long openSecurityHotspots = ((InternalValueCount) ((InternalFilter) categoryBucket.getAggregations().get(AGG_OPEN_SECURITY_HOTSPOTS)).getAggregations().get(AGG_COUNT))","931","    long toReviewSecurityHotspots = ((InternalValueCount) ((InternalFilter) categoryBucket.getAggregations().get(AGG_TO_REVIEW_SECURITY_HOTSPOTS)).getAggregations().get(AGG_COUNT))","933","    long wontFixSecurityHotspots = ((InternalValueCount) ((InternalFilter) categoryBucket.getAggregations().get(AGG_WONT_FIX_SECURITY_HOTSPOTS)).getAggregations().get(AGG_COUNT))","940","  private static AggregationBuilder addSecurityReportSubAggregations(AggregationBuilder categoriesAggs, boolean includeCwe, Optional<Set<String>> cwesInCategory) {","943","      final TermsAggregationBuilder cwesAgg = AggregationBuilders.terms(AGG_CWES)","944","        .field(FIELD_ISSUE_CWE)","945","        \/\/ 100 should be enough to display all CWEs. If not, the UI will be broken anyway","946","        .size(MAX_FACET_SIZE);","947","      cwesInCategory.ifPresent(set -> {","948","        cwesAgg.includeExclude(new IncludeExclude(set.toArray(new String[0]), new String[0]));","949","      });","951","        .subAggregation(addSecurityReportIssueCountAggregations(cwesAgg));","959","        AggregationBuilders.filter(AGG_VULNERABILITIES, NON_RESOLVED_VULNERABILITIES_FILTER)","961","            AggregationBuilders.terms(AGG_SEVERITIES).field(FIELD_ISSUE_SEVERITY)","963","                AggregationBuilders.count(AGG_COUNT).field(FIELD_ISSUE_KEY))))","964","      .subAggregation(AggregationBuilders.filter(AGG_OPEN_SECURITY_HOTSPOTS, NON_RESOLVED_HOTSTPOS_FILTER)","966","          AggregationBuilders.count(AGG_COUNT).field(FIELD_ISSUE_KEY)))","967","      .subAggregation(AggregationBuilders.filter(AGG_TO_REVIEW_SECURITY_HOTSPOTS, TO_REVIEW_HOTSPOTS_FILTER)","969","          AggregationBuilders.count(AGG_COUNT).field(FIELD_ISSUE_KEY)))","970","      .subAggregation(AggregationBuilders.filter(AGG_WONT_FIX_SECURITY_HOTSPOTS, WONT_FIX_HOTSPOTS_FILTER)","972","          AggregationBuilders.count(AGG_COUNT).field(FIELD_ISSUE_KEY)));","991","          .should(NON_RESOLVED_VULNERABILITIES_FILTER)","992","          .should(NON_RESOLVED_HOTSTPOS_FILTER)","993","          .should(TO_REVIEW_HOTSPOTS_FILTER)","994","          .should(WONT_FIX_HOTSPOTS_FILTER)","995","          .minimumShouldMatch(1))"],"delete":["34","import java.util.stream.Collectors;","84","import org.sonar.server.security.SecurityStandardHelper;","256","  private static final String COUNT = \"count\";","364","      query.rules().stream().map(RuleDefinitionDto::getId).collect(Collectors.toList())));","804","                AggregationBuilders.count(COUNT).field(FIELD_ISSUE_KEY))","813","          long count = ((InternalValueCount) branchBucket.getAggregations().get(COUNT)).getValue();","852","    Stream.of(SANS_TOP_25_INSECURE_INTERACTION, SANS_TOP_25_RISKY_RESOURCE, SANS_TOP_25_POROUS_DEFENSES).forEach(sansCategory -> {","853","      AggregationBuilder sansCategoryAggs = AggregationBuilders","854","        .filter(sansCategory, boolQuery()","855","          .filter(termQuery(FIELD_ISSUE_SANS_TOP_25, sansCategory)));","856","      request.addAggregation(addSecurityReportSubAggregations(sansCategoryAggs, includeCwe));","857","    });","863","    SecurityStandardHelper.SONARSOURCE_CWE_MAPPING.keySet().forEach(sansCategory -> {","864","      AggregationBuilder sansCategoryAggs = AggregationBuilders","865","        .filter(sansCategory, boolQuery()","866","          .filter(termQuery(FIELD_ISSUE_SONARSOURCE_SECURITY, sansCategory)));","867","      request.addAggregation(addSecurityReportSubAggregations(sansCategoryAggs, includeCwe));","868","    });","874","    Stream.concat(IntStream.rangeClosed(1, 10).mapToObj(i -> \"a\" + i), Stream.of(UNKNOWN_STANDARD)).forEach(owaspCategory -> {","875","      AggregationBuilder owaspCategoryAggs = AggregationBuilders","876","        .filter(owaspCategory, boolQuery()","877","          .filter(termQuery(FIELD_ISSUE_OWASP_TOP_10, owaspCategory)));","878","      request.addAggregation(addSecurityReportSubAggregations(owaspCategoryAggs, includeCwe));","879","    });","892","","894","      ((StringTerms) categoryBucket.getAggregations().get(\"cwe\")).getBuckets()","895","        .forEach(cweBucket -> children.add(processSecurityReportCategorySearchResults(cweBucket, cweBucket.getKeyAsString(), null)));","903","    List<StringTerms.Bucket> severityBuckets = ((StringTerms) ((InternalFilter) categoryBucket.getAggregations().get(\"vulnerabilities\")).getAggregations().get(\"severity\"))","905","    long vulnerabilities = severityBuckets.stream().mapToLong(b -> ((InternalValueCount) b.getAggregations().get(COUNT)).getValue()).sum();","908","      .filter(b -> ((InternalValueCount) b.getAggregations().get(COUNT)).getValue() != 0)","912","    long openSecurityHotspots = ((InternalValueCount) ((InternalFilter) categoryBucket.getAggregations().get(\"openSecurityHotspots\")).getAggregations().get(COUNT))","914","    long toReviewSecurityHotspots = ((InternalValueCount) ((InternalFilter) categoryBucket.getAggregations().get(\"toReviewSecurityHotspots\")).getAggregations().get(COUNT))","916","    long wontFixSecurityHotspots = ((InternalValueCount) ((InternalFilter) categoryBucket.getAggregations().get(\"wontFixSecurityHotspots\")).getAggregations().get(COUNT))","923","  private static AggregationBuilder addSecurityReportSubAggregations(AggregationBuilder categoriesAggs, boolean includeCwe) {","927","        .subAggregation(addSecurityReportIssueCountAggregations(AggregationBuilders.terms(\"cwe\").field(FIELD_ISSUE_CWE)));","935","        AggregationBuilders.filter(\"vulnerabilities\", boolQuery()","936","          .filter(termQuery(FIELD_ISSUE_TYPE, VULNERABILITY.name()))","937","          .mustNot(existsQuery(FIELD_ISSUE_RESOLUTION)))","939","            AggregationBuilders.terms(\"severity\").field(FIELD_ISSUE_SEVERITY)","941","                AggregationBuilders.count(COUNT).field(FIELD_ISSUE_KEY))))","942","      .subAggregation(AggregationBuilders.filter(\"openSecurityHotspots\", boolQuery()","943","        .filter(termQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name()))","944","        .mustNot(existsQuery(FIELD_ISSUE_RESOLUTION)))","946","          AggregationBuilders.count(COUNT).field(FIELD_ISSUE_KEY)))","947","      .subAggregation(AggregationBuilders.filter(\"toReviewSecurityHotspots\", boolQuery()","948","        .filter(termQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name()))","949","        .filter(termQuery(FIELD_ISSUE_STATUS, Issue.STATUS_RESOLVED))","950","        .filter(termQuery(FIELD_ISSUE_RESOLUTION, Issue.RESOLUTION_FIXED)))","952","          AggregationBuilders.count(COUNT).field(FIELD_ISSUE_KEY)))","953","      .subAggregation(AggregationBuilders.filter(\"wontFixSecurityHotspots\", boolQuery()","954","        .filter(termQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name()))","955","        .filter(termQuery(FIELD_ISSUE_STATUS, Issue.STATUS_RESOLVED))","956","        .filter(termQuery(FIELD_ISSUE_RESOLUTION, Issue.RESOLUTION_WONT_FIX)))","958","          AggregationBuilders.count(COUNT).field(FIELD_ISSUE_KEY)));","977","          .filter(termsQuery(FIELD_ISSUE_TYPE, SECURITY_HOTSPOT.name(), VULNERABILITY.name()))","978","          .mustNot(termQuery(FIELD_ISSUE_STATUS, Issue.STATUS_CLOSED)))"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/empty.json":[{"add":["109","      \"activeRules\": 1,","110","      \"totalRules\": 2"],"delete":["109","      \"activeRules\": 0,","110","      \"totalRules\": 1"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest.java":[{"add":["92","  private RuleDefinitionDto rule5;","102","    rule1 = newRule(newHashSet(\"owaspTop10:a2\", \"cwe:123\", \"cwe:89\"), RuleType.SECURITY_HOTSPOT);","104","    rule2 = newRule(newHashSet(\"owaspTop10:a1\", \"cwe:22\", \"cwe:190\"), RuleType.SECURITY_HOTSPOT);","106","    rule3 = newRule(newHashSet(\"owaspTop10:a3\", \"cwe:759\", \"cwe:000\"), RuleType.SECURITY_HOTSPOT);","107","    \/\/ cwe with unknown, not activated","108","    rule4 = newRule(newHashSet(\"cwe:999\"), RuleType.SECURITY_HOTSPOT);","109","    \/\/ TopSans25 insecure","110","    rule5 = newRule(newHashSet(\"cwe:78\"), RuleType.VULNERABILITY);","113","    db.qualityProfiles().activateRule(qualityProfile, rule5);","248","    IssueDto issue4 = newIssue(rule5, project, file)","252","      .setType(RuleType.VULNERABILITY);","293","    IssueDto issue4 = newIssue(rule5, project1Branch1, fileOnProject1Branch1)","297","      .setType(RuleType.VULNERABILITY);","384","  private RuleDefinitionDto newRule(Set<String> standards, RuleType type) {","386","      .setType(type)","388","      .setSecurityStandards(standards);"],"delete":["101","    rule1 = newRule(newHashSet(\"owaspTop10:a2\", \"cwe:123\", \"cwe:89\"));","103","    rule2 = newRule(newHashSet(\"owaspTop10:a1\", \"cwe:22\", \"cwe:190\"));","105","    rule3 = newRule(newHashSet(\"owaspTop10:a3\", \"cwe:759\", \"cwe:000\"));","106","    \/\/ cwe with unknown","107","    rule4 = newRule(newHashSet(\"cwe:999\"));","244","    IssueDto issue4 = newIssue(rule1, project, file)","248","      .setType(RuleType.SECURITY_HOTSPOT);","289","    IssueDto issue4 = newIssue(rule1, project1Branch1, fileOnProject1Branch1)","293","      .setType(RuleType.SECURITY_HOTSPOT);","380","  private RuleDefinitionDto newRule(Set tags) {","382","      .setType(RuleType.SECURITY_HOTSPOT)","384","      .setSecurityStandards(tags);"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityWithCwe.json":[{"add":["201","      \"activeRules\": 1,","202","      \"totalRules\": 1"],"delete":["139","        },","140","        {","141","          \"cwe\": \"123\",","142","          \"vulnerabilities\": 1,","143","          \"vulnerabilityRating\": 3,","144","          \"toReviewSecurityHotspots\": 1,","145","          \"openSecurityHotspots\": 1,","146","          \"wontFixSecurityHotspots\": 1,","147","          \"activeRules\": 1,","148","          \"totalRules\": 1","211","      \"activeRules\": 0,","212","      \"totalRules\": 0"]}],"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/securityreport\/ws\/show-example.json":[{"add":["131","      \"activeRules\": 1,","132","      \"totalRules\": 2"],"delete":["131","      \"activeRules\": 0,","132","      \"totalRules\": 1"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sansWithCwe.json":[{"add":["28","      \"wontFixSecurityHotspots\": 0,","36","          \"wontFixSecurityHotspots\": 0,","41","      \"activeRules\": 2,","42","      \"totalRules\": 2"],"delete":["28","      \"wontFixSecurityHotspots\": 1,","36","          \"wontFixSecurityHotspots\": 1,","37","          \"activeRules\": 1,","38","          \"totalRules\": 1","39","        },","40","        {","41","          \"cwe\": \"123\",","42","          \"vulnerabilities\": 1,","43","          \"vulnerabilityRating\": 3,","44","          \"toReviewSecurityHotspots\": 1,","45","          \"openSecurityHotspots\": 1,","46","          \"wontFixSecurityHotspots\": 1,","51","      \"activeRules\": 1,","52","      \"totalRules\": 1"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/owaspNoCwe.json":[{"add":["110","      \"activeRules\": 1,","111","      \"totalRules\": 2"],"delete":["110","      \"activeRules\": 0,","111","      \"totalRules\": 1"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/securityreport\/ws\/ShowActionTest\/sonarsourceSecurityNoCwe.json":[{"add":["190","      \"activeRules\": 1,","191","      \"totalRules\": 1"],"delete":["190","      \"activeRules\": 0,","191","      \"totalRules\": 0"]}]}},"b658f0cefa459ef82072c080f0acf92b438fca8e":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["21","import java.util.ArrayList;","25","import org.mockito.ArgumentCaptor;","182","","183","    Class<ArrayList<String>> listClass = (Class<ArrayList<String>>)(Class)ArrayList.class;","184","    ArgumentCaptor<ArrayList<String>> argument = ArgumentCaptor.forClass(listClass);","185","","186","    verify(purgeListener).onIssuesRemoval(argument.capture());","187","    assertThat(argument.getValue()).containsOnly(\"ISSUE-1\", \"ISSUE-2\");"],"delete":["35","import static java.util.Arrays.asList;","181","    verify(purgeListener).onIssuesRemoval(asList(\"ISSUE-1\", \"ISSUE-2\"));"]}]}},"0dcc152f6804e619c042cea729c166c37e897607":{"changes":{"server\/sonar-webserver-auth\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImplTest.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfile.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImpl.java":"MODIFY","server\/sonar-webserver-auth\/src\/testFixtures\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryRule.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileInsertImpl.java":"MODIFY","server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImpl.java":"MODIFY"},"diff":{"server\/sonar-webserver-auth\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImplTest.java":[{"add":["28","import org.sonar.api.rule.RuleKey;","32","import org.sonar.db.rule.RuleDefinitionDto;","36","import static java.util.Collections.emptyList;","37","import static java.util.Collections.singletonList;","41","import static org.sonar.db.rule.RuleTesting.EXTERNAL_XOO;","42","import static org.sonar.server.qualityprofile.BuiltInQProfile.ActiveRule;","51","  public DbTester db = DbTester.create();","53","  private DbClient dbClient = db.getDbClient();","54","","55","  @Test","56","  public void create_qprofile_with_rule() {","57","    RuleDefinitionDto rule1 = db.rules().insert();","58","    RuleDefinitionDto rule2 = db.rules().insert();","59","    RuleDefinitionDto ruleNotToBeActivated = db.rules().insert();","60","    List<DummyProfileDefinition> definitions = singletonList(new DummyProfileDefinition(\"foo\", \"foo\", false,","61","      asList(rule1.getKey(), rule2.getKey())));","62","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","63","","64","    underTest.initialize();","65","","66","    assertThat(underTest.get())","67","      .extracting(BuiltInQProfile::getName)","68","      .containsExactlyInAnyOrder(\"foo\");","69","    assertThat(underTest.get().get(0).getActiveRules())","70","      .extracting(ActiveRule::getRuleId, ActiveRule::getRuleKey)","71","      .containsExactlyInAnyOrder(","72","        tuple(rule1.getId(), rule1.getKey()),","73","        tuple(rule2.getId(), rule2.getKey())","74","      );","75","  }","76","","77","  @Test","78","  public void make_single_profile_of_a_language_default_even_if_not_flagged_as_so() {","79","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", false));","80","","81","    underTest.initialize();","82","","83","    assertThat(underTest.get())","84","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","85","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","86","  }","87","","88","  @Test","89","  public void make_single_profile_of_a_language_default_even_if_flagged_as_so() {","90","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", true));","91","","92","    underTest.initialize();","93","","94","    assertThat(underTest.get())","95","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","96","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","97","  }","98","","99","  @Test","100","  public void make_first_profile_of_a_language_default_when_none_flagged_as_so() {","101","    List<DummyProfileDefinition> definitions = new ArrayList<>(","102","      asList(new DummyProfileDefinition(\"foo\", \"foo1\", false), new DummyProfileDefinition(\"foo\", \"foo2\", false)));","103","    String firstName = definitions.get(0).getName();","104","    String secondName = definitions.get(1).getName();","105","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","106","","107","    underTest.initialize();","108","","109","    assertThat(underTest.get())","110","      .extracting(BuiltInQProfile::getName, BuiltInQProfile::isDefault)","111","      .containsExactlyInAnyOrder(tuple(firstName, true), tuple(secondName, false));","112","  }","113","","114","  @Test","115","  public void create_profile_Sonar_Way_as_default_if_none_other_is_defined_default_for_a_given_language() {","116","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","117","      dbClient, new Languages(FOO_LANGUAGE),","118","      new DummyProfileDefinition(\"foo\", \"doh\", false), new DummyProfileDefinition(\"foo\", \"boo\", false),","119","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", false));","120","","121","    underTest.initialize();","122","","123","    assertThat(underTest.get())","124","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","125","      .filteredOn(BuiltInQProfile::isDefault)","126","      .extracting(BuiltInQProfile::getName)","127","      .containsExactly(SONAR_WAY_QP_NAME);","128","  }","129","","130","  @Test","131","  public void do_not_create_Sonar_Way_as_default_if_other_profile_is_defined_as_default() {","132","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","133","      dbClient, new Languages(FOO_LANGUAGE),","134","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", true));","135","","136","    underTest.initialize();","137","","138","    assertThat(underTest.get())","139","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","140","      .filteredOn(BuiltInQProfile::isDefault)","141","      .extracting(BuiltInQProfile::getName)","142","      .containsExactly(\"goo\");","143","  }","144","","145","  @Test","146","  public void match_Sonar_Way_default_with_case_sensitivity() {","147","    String sonarWayInOtherCase = SONAR_WAY_QP_NAME.toUpperCase();","148","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","149","      dbClient, new Languages(FOO_LANGUAGE),","150","      new DummyProfileDefinition(\"foo\", \"goo\", false), new DummyProfileDefinition(\"foo\", sonarWayInOtherCase, false));","151","","152","    underTest.initialize();","153","","154","    assertThat(underTest.get())","155","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","156","      .filteredOn(BuiltInQProfile::isDefault)","157","      .extracting(BuiltInQProfile::getName)","158","      .containsExactly(\"goo\");","159","  }","160","","161","  @Test","162","  public void create_no_BuiltInQProfile_when_all_definitions_apply_to_non_defined_languages() {","163","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(mock(DbClient.class), new Languages(), new DummyProfileDefinition(\"foo\", \"P1\", false));","164","","165","    underTest.initialize();","166","","167","    assertThat(underTest.get()).isEmpty();","168","  }","169","","170","  @Test","171","  public void create_qprofile_with_deprecated_rule() {","172","    RuleDefinitionDto rule1 = db.rules().insert();","173","    db.rules().insertDeprecatedKey(d -> d.setRuleId(rule1.getId()).setOldRepositoryKey(\"oldRepo\").setOldRuleKey(\"oldKey\"));","174","    RuleDefinitionDto rule2 = db.rules().insert();","175","    List<DummyProfileDefinition> definitions = singletonList(new DummyProfileDefinition(\"foo\", \"foo\", false,","176","      asList(RuleKey.of(\"oldRepo\", \"oldKey\"), rule2.getKey())));","177","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","178","","179","    underTest.initialize();","180","","181","    assertThat(underTest.get())","182","      .extracting(BuiltInQProfile::getName)","183","      .containsExactlyInAnyOrder(\"foo\");","184","    assertThat(underTest.get().get(0).getActiveRules())","185","      .extracting(ActiveRule::getRuleId, ActiveRule::getRuleKey)","186","      .containsExactlyInAnyOrder(","187","        tuple(rule1.getId(), rule1.getKey()),","188","        tuple(rule2.getId(), rule2.getKey())","189","      );","190","  }","191","","192","  @Test","193","  public void fail_with_ISE_when_rule_does_not_exist() {","194","    List<DummyProfileDefinition> definitions = singletonList(new DummyProfileDefinition(\"foo\", \"foo\", false, singletonList(EXTERNAL_XOO)));","195","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","196","","197","    expectedException.expect(IllegalStateException.class);","198","    expectedException.expectMessage(String.format(\"Rule with key '%s' not found\", EXTERNAL_XOO.toString()));","199","","200","    underTest.initialize();","201","  }","202","","203","  @Test","204","  public void fail_with_ISE_when_two_profiles_with_different_name_are_default_for_the_same_language() {","205","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE),","206","      new DummyProfileDefinition(\"foo\", \"foo1\", true), new DummyProfileDefinition(\"foo\", \"foo2\", true));","207","","208","    expectedException.expect(IllegalStateException.class);","209","    expectedException.expectMessage(\"Several Quality profiles are flagged as default for the language foo: [foo1, foo2]\");","210","","211","    underTest.initialize();","212","  }","249","    private final List<RuleKey> activeRuleKeys;","251","    private DummyProfileDefinition(String language, String name, boolean defaultProfile, List<RuleKey> activeRuleKeys) {","255","      this.activeRuleKeys = activeRuleKeys;","256","    }","257","","258","    private DummyProfileDefinition(String language, String name, boolean defaultProfile) {","259","      this(language, name, defaultProfile, emptyList());","264","      NewBuiltInQualityProfile builtInQualityProfile = context.createBuiltInQualityProfile(name, language);","265","      activeRuleKeys.stream().forEach(activeRuleKey -> builtInQualityProfile.activateRule(activeRuleKey.repository(), activeRuleKey.rule()));","266","      builtInQualityProfile.setDefault(defaultProfile);","267","      builtInQualityProfile.done();"],"delete":["22","import java.util.Collections;","30","import org.sonar.api.utils.System2;","47","  public DbTester dbTester = DbTester.create(System2.INSTANCE);","49","  private DbClient dbClient = dbTester.getDbClient();","78","    ","79","    underTest.initialize();","80","  }","81","","82","  @Test","83","  public void initialize_creates_no_BuiltInQProfile_when_all_definitions_apply_to_non_defined_languages() {","84","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(mock(DbClient.class), new Languages(), new DummyProfileDefinition(\"foo\", \"P1\", false));","87","","88","    assertThat(underTest.get()).isEmpty();","89","  }","90","","91","  @Test","92","  public void initialize_makes_single_profile_of_a_language_default_even_if_not_flagged_as_so() {","93","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", false));","94","","95","    underTest.initialize();","96","","97","    assertThat(underTest.get())","98","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","99","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","100","  }","101","","102","  @Test","103","  public void initialize_makes_single_profile_of_a_language_default_even_if_flagged_as_so() {","104","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), new DummyProfileDefinition(\"foo\", \"foo1\", true));","105","","106","    underTest.initialize();","107","","108","    assertThat(underTest.get())","109","      .extracting(BuiltInQProfile::getLanguage, BuiltInQProfile::isDefault)","110","      .containsExactly(tuple(FOO_LANGUAGE.getKey(), true));","111","  }","112","","113","  @Test","114","  public void initialize_makes_first_profile_of_a_language_default_when_none_flagged_as_so() {","115","    List<DummyProfileDefinition> definitions = new ArrayList<>(","116","      asList(new DummyProfileDefinition(\"foo\", \"foo1\", false), new DummyProfileDefinition(\"foo\", \"foo2\", false)));","117","    Collections.shuffle(definitions);","118","    String firstName = definitions.get(0).getName();","119","    String secondName = definitions.get(1).getName();","120","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE), definitions.toArray(new BuiltInQualityProfilesDefinition[0]));","121","","122","    underTest.initialize();","123","","124","    assertThat(underTest.get())","125","      .extracting(BuiltInQProfile::getName, BuiltInQProfile::isDefault)","126","      .containsExactlyInAnyOrder(tuple(firstName, true), tuple(secondName, false));","127","  }","128","","129","  @Test","130","  public void initialize_fails_with_ISE_when_two_profiles_with_different_name_are_default_for_the_same_language() {","131","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(dbClient, new Languages(FOO_LANGUAGE),","132","      new DummyProfileDefinition(\"foo\", \"foo1\", true), new DummyProfileDefinition(\"foo\", \"foo2\", true));","133","","134","    expectedException.expect(IllegalStateException.class);","135","    expectedException.expectMessage(\"Several Quality profiles are flagged as default for the language foo: [foo1, foo2]\");","136","","137","    underTest.initialize();","138","  }","139","","140","  @Test","141","  public void initialize_creates_profile_Sonar_Way_as_default_if_none_other_is_defined_default_for_a_given_language() {","142","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","143","      dbClient, new Languages(FOO_LANGUAGE),","144","      new DummyProfileDefinition(\"foo\", \"doh\", false), new DummyProfileDefinition(\"foo\", \"boo\", false),","145","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", false));","146","","147","    underTest.initialize();","148","","149","    assertThat(underTest.get())","150","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","151","      .filteredOn(BuiltInQProfile::isDefault)","152","      .extracting(BuiltInQProfile::getName)","153","      .containsExactly(SONAR_WAY_QP_NAME);","154","  }","155","","156","  @Test","157","  public void initialize_does_not_create_Sonar_Way_as_default_if_other_profile_is_defined_as_default() {","158","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","159","      dbClient, new Languages(FOO_LANGUAGE),","160","      new DummyProfileDefinition(\"foo\", SONAR_WAY_QP_NAME, false), new DummyProfileDefinition(\"foo\", \"goo\", true));","161","","162","    underTest.initialize();","163","","164","    assertThat(underTest.get())","165","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","166","      .filteredOn(BuiltInQProfile::isDefault)","167","      .extracting(BuiltInQProfile::getName)","168","      .containsExactly(\"goo\");","169","  }","170","","171","  @Test","172","  public void initialize_matches_Sonar_Way_default_with_case_sensitivity() {","173","    String sonarWayInOtherCase = SONAR_WAY_QP_NAME.toUpperCase();","174","    BuiltInQProfileRepository underTest = new BuiltInQProfileRepositoryImpl(","175","      dbClient, new Languages(FOO_LANGUAGE),","176","      new DummyProfileDefinition(\"foo\", \"goo\", false), new DummyProfileDefinition(\"foo\", sonarWayInOtherCase, false));","177","","178","    underTest.initialize();","179","","180","    assertThat(underTest.get())","181","      .filteredOn(b -> FOO_LANGUAGE.getKey().equals(b.getLanguage()))","182","      .filteredOn(BuiltInQProfile::isDefault)","183","      .extracting(BuiltInQProfile::getName)","184","      .containsExactly(\"goo\");","192","    private DummyProfileDefinition(String language, String name, boolean defaultProfile) {","200","      context.createBuiltInQualityProfile(name, language)","201","        .setDefault(defaultProfile).done();"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfile.java":[{"add":["24","import javax.annotation.CheckForNull;","25","import javax.annotation.Nullable;","30","import static org.sonar.api.server.profile.BuiltInQualityProfilesDefinition.BuiltInActiveRule;","31","import static org.sonar.api.server.profile.BuiltInQualityProfilesDefinition.OverriddenParam;","32","","70","    private final RuleKey ruleKey;","71","    private final String severity;","72","    private final List<OverriddenParam> params;","74","    ActiveRule(int ruleId, BuiltInActiveRule builtIn) {","75","      this(ruleId, RuleKey.of(builtIn.repoKey(), builtIn.ruleKey()), builtIn.overriddenSeverity(), builtIn.overriddenParams());","76","    }","77","","78","    ActiveRule(int ruleId, RuleKey ruleKey, @Nullable String severity, List<OverriddenParam> params) {","80","      this.ruleKey = ruleKey;","81","      this.severity = severity;","82","      this.params = params;","90","      return ruleKey;","93","    @CheckForNull","94","    public String getSeverity() {","95","      return severity;","96","    }","97","","98","    public List<OverriddenParam> getParams() {","99","      return params;"],"delete":["65","    private final BuiltInQualityProfilesDefinition.BuiltInActiveRule builtIn;","67","    ActiveRule(int ruleId, BuiltInQualityProfilesDefinition.BuiltInActiveRule builtIn) {","69","      this.builtIn = builtIn;","77","      return RuleKey.of(builtIn.repoKey(), builtIn.ruleKey());","80","    public BuiltInQualityProfilesDefinition.BuiltInActiveRule getBuiltIn() {","81","      return builtIn;","120","    Builder addRule(BuiltInQualityProfilesDefinition.BuiltInActiveRule rule, int ruleId) {","121","      this.activeRules.add(new ActiveRule(ruleId, rule));","122","      return this;","123","    }","124",""]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImpl.java":[{"add":["83","    Map<String, String> params = ar.getParams().stream()","85","    return RuleActivation.create(ar.getRuleId(), ar.getSeverity(), params);"],"delete":["83","    Map<String, String> params = ar.getBuiltIn().overriddenParams().stream()","85","    return RuleActivation.create(ar.getRuleId(), ar.getBuiltIn().overriddenSeverity(), params);"]}],"server\/sonar-webserver-auth\/src\/testFixtures\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryRule.java":[{"add":["97","      builder.addRule(new BuiltInQProfile.ActiveRule(ruleDefinition.getId(), rule));"],"delete":["97","      builder.addRule(rule, ruleDefinition.getId());"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileInsertImpl.java":[{"add":["150","    dto.setSeverity(firstNonNull(activeRule.getSeverity(), ruleDefinitionDto.getSeverityString()));","165","    Map<String, String> valuesByParamKey = activeRule.getParams()"],"delete":["150","    dto.setSeverity(firstNonNull(activeRule.getBuiltIn().overriddenSeverity(), ruleDefinitionDto.getSeverityString()));","165","    Map<String, String> valuesByParamKey = activeRule.getBuiltIn().overriddenParams()"]}],"server\/sonar-webserver-auth\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileRepositoryImpl.java":[{"add":["22","import com.google.common.collect.Multimap;","26","import java.util.HashMap;","46","import org.sonar.db.rule.DeprecatedRuleKeyDto;","103","      String.join(\"\", languagesWithoutBuiltInQProfiles));","125","    Map<RuleKey, RuleDefinitionDto> rulesByRuleKey = loadRuleDefinitionsByRuleKey();","126","    Map<String, List<BuiltInQProfile.Builder>> buildersByLanguage = rulesProfilesByLanguage","127","      .entrySet()","128","      .stream()","129","      .collect(MoreCollectors.uniqueIndex(","130","        Map.Entry::getKey,","131","        rulesProfilesByLanguageAndName -> toQualityProfileBuilders(rulesProfilesByLanguageAndName, rulesByRuleKey)));","132","    return buildersByLanguage","133","      .entrySet()","134","      .stream()","135","      .filter(BuiltInQProfileRepositoryImpl::ensureAtMostOneDeclaredDefault)","136","      .map(entry -> toQualityProfiles(entry.getValue()))","137","      .flatMap(Collection::stream)","138","      .collect(MoreCollectors.toList());","139","  }","141","  private Map<RuleKey, RuleDefinitionDto> loadRuleDefinitionsByRuleKey() {","143","      List<RuleDefinitionDto> ruleDefinitions = dbClient.ruleDao().selectAllDefinitions(dbSession);","144","      Multimap<Integer, DeprecatedRuleKeyDto> deprecatedRuleKeysByRuleId = dbClient.ruleDao().selectAllDeprecatedRuleKeys(dbSession).stream()","145","        .collect(MoreCollectors.index(DeprecatedRuleKeyDto::getRuleId));","146","      Map<RuleKey, RuleDefinitionDto> rulesByRuleKey = new HashMap<>();","147","      for (RuleDefinitionDto ruleDefinition : ruleDefinitions) {","148","        rulesByRuleKey.put(ruleDefinition.getKey(), ruleDefinition);","149","        deprecatedRuleKeysByRuleId.get(ruleDefinition.getId()).forEach(t -> rulesByRuleKey.put(RuleKey.of(t.getOldRepositoryKey(), t.getOldRuleKey()), ruleDefinition));","150","      }","151","      return rulesByRuleKey;","200","      builder.addRule(new BuiltInQProfile.ActiveRule(ruleDefinition.getId(), ruleDefinition.getKey(),","201","        builtInActiveRule.overriddenSeverity(), builtInActiveRule.overriddenParams()));"],"delete":["100","      languagesWithoutBuiltInQProfiles.stream().collect(Collectors.joining()));","124","      Map<RuleKey, RuleDefinitionDto> rulesByRuleKey = dbClient.ruleDao().selectAllDefinitions(dbSession)","125","        .stream()","126","        .collect(MoreCollectors.uniqueIndex(RuleDefinitionDto::getKey));","127","      Map<String, List<BuiltInQProfile.Builder>> buildersByLanguage = rulesProfilesByLanguage","128","        .entrySet()","129","        .stream()","130","        .collect(MoreCollectors.uniqueIndex(","131","          Map.Entry::getKey,","132","          rulesProfilesByLanguageAndName -> toQualityProfileBuilders(rulesProfilesByLanguageAndName, rulesByRuleKey)));","133","      return buildersByLanguage","134","        .entrySet()","135","        .stream()","136","        .filter(BuiltInQProfileRepositoryImpl::ensureAtMostOneDeclaredDefault)","137","        .map(entry -> toQualityProfiles(entry.getValue()))","138","        .flatMap(Collection::stream)","139","        .collect(MoreCollectors.toList());","188","      builder.addRule(builtInActiveRule, ruleDefinition.getId());"]}]}},"1c870c915125912fec3569cf283b58a2a35281a5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/issues.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/CrossComponentSourceViewerWrapper-test.tsx.snap":[{"add":["2","exports[`Should handle no access rights 1`] = `","3","<Alert","4","  className=\"spacer-top\"","5","  variant=\"warning\"","6",">","7","  code_viewer.no_source_code_displayed_due_to_security","8","<\/Alert>","9","`;","10",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/api\/issues.ts":[{"add":["181","  });"],"delete":["181","  }, throwGlobalError);"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/CrossComponentSourceViewerWrapper-test.tsx":[{"add":["68","it('Should handle no access rights', async () => {","69","  (getIssueFlowSnippets as jest.Mock).mockRejectedValueOnce({ status: 403 });","70","","71","  const wrapper = shallowRender();","72","  await waitAndUpdate(wrapper);","73","","74","  expect(wrapper.state().notAccessible).toBe(true);","75","  expect(wrapper).toMatchSnapshot();","76","});","77",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/CrossComponentSourceViewerWrapper.tsx":[{"add":["20","import { Alert } from 'sonar-ui-common\/components\/ui\/Alert';","22","import { translate } from 'sonar-ui-common\/helpers\/l10n';","25","import throwGlobalError from '..\/..\/..\/app\/utils\/throwGlobalError';","64","  notAccessible: boolean;","72","    loading: true,","73","    notAccessible: false","129","      (response: Response) => {","130","        if (response.status !== 403) {","131","          throwGlobalError(response);","132","        }","134","          this.setState({ loading: false, notAccessible: response.status === 403 });","207","    const { loading, notAccessible } = this.state;","217","    if (notAccessible) {","218","      return (","219","        <Alert className=\"spacer-top\" variant=\"warning\">","220","          {translate('code_viewer.no_source_code_displayed_due_to_security')}","221","        <\/Alert>","222","      );","223","    }","224",""],"delete":["68","    loading: true","124","      () => {","126","          this.setState({ loading: false });","199","    const { loading } = this.state;"]}]}},"a47d4a1f0a15b34581364f2a45faee2544f92132":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/search_projects-example.json":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":[{"add":["153","      tuple(\"6.5\", \"Value 'leakPeriodDate' is added to parameter 'f'\"));","206","    ComponentDto project2 = insertProject(organization1Dto, c -> c","210","    ComponentDto project3 = insertProject(organization2Dto, c -> c","217","    String jsonResult = ws.newRequest().setParam(Param.FACETS, COVERAGE).execute().getInput();","218","    SearchProjectsWsResponse protobufResult = ws.newRequest().setParam(Param.FACETS, COVERAGE).executeProtobuf(SearchProjectsWsResponse.class);","220","    assertJson(jsonResult).withStrictArrayOrder().ignoreFields(\"id\").isSimilarTo(ws.getDef().responseExampleAsString());","221","    assertJson(ws.getDef().responseExampleAsString()).ignoreFields(\"id\").withStrictArrayOrder().isSimilarTo(jsonResult);","222","    assertThat(protobufResult.getComponentsList()).extracting(Component::getId).containsExactly(project1.uuid(), project2.uuid(), project3.uuid());"],"delete":["153","      tuple(\"6.5\", \"Value 'leakPeriodDate' is added to parameter 'f'\"),","154","      tuple(\"6.6\", \"The 'id' field is removed from the response\"));","207","    insertProject(organization1Dto, c -> c","211","    insertProject(organization2Dto, c -> c","218","    String result = ws.newRequest()","219","      .setParam(Param.FACETS, COVERAGE)","220","      .execute().getInput();","222","    assertJson(result).withStrictArrayOrder().isSimilarTo(ws.getDef().responseExampleAsString());","223","    assertJson(ws.getDef().responseExampleAsString()).withStrictArrayOrder().isSimilarTo(result);"]}],"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/component\/ws\/search_projects-example.json":[{"add":["9","      \"id\": \"AU-Tpxb--iU5OvuD2FLy\",","21","      \"id\": \"AU-TpxcA-iU5OvuD2FLz\",","30","      \"id\": \"AU-TpxcA-iU5OvuD2FL0\","],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsAction.java":[{"add":["117","        new Change(\"6.5\", format(\"Value '%s' is added to parameter '%s'\", LEAK_PERIOD_DATE, FIELDS)))","425","        .setId(dbComponent.uuid())"],"delete":["117","        new Change(\"6.5\", format(\"Value '%s' is added to parameter '%s'\", LEAK_PERIOD_DATE, FIELDS)),","118","        new Change(\"6.6\", \"The 'id' field is removed from the response\"))"]}]}},"357067b1cb44bcb96e1f8c29d54a4f2da536d921":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTables.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest\/ce_tables.sql":"ADD","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74Test.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChange.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["250","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuid(rootUuid);","254","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuid(rootUuid);","258","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuid(rootUuid);","262","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuid(rootUuid);","266","    purgeMapper.deleteCeActivityByRootUuid(rootUuid);","273","    purgeMapper.deleteCeScannerContextOfCeQueueByRootUuid(rootUuid);","277","    purgeMapper.deleteCeTaskCharacteristicsOfCeQueueByRootUuid(rootUuid);","281","    purgeMapper.deleteCeTaskInputOfCeQueueByRootUuid(rootUuid);","285","    purgeMapper.deleteCeTaskMessageOfCeQueueByRootUuid(rootUuid);","289","    purgeMapper.deleteCeQueueByRootUuid(rootUuid);"],"delete":["250","    purgeMapper.deleteCeScannerContextOfCeActivityByProjectUuid(rootUuid);","254","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByProjectUuid(rootUuid);","258","    purgeMapper.deleteCeTaskInputOfCeActivityByProjectUuid(rootUuid);","262","    purgeMapper.deleteCeTaskMessageOfCeActivityByProjectUuid(rootUuid);","266","    purgeMapper.deleteCeActivityByProjectUuid(rootUuid);","273","    purgeMapper.deleteCeScannerContextOfCeQueueByProjectUuid(rootUuid);","277","    purgeMapper.deleteCeTaskCharacteristicsOfCeQueueByProjectUuid(rootUuid);","281","    purgeMapper.deleteCeTaskInputOfCeQueueByProjectUuid(rootUuid);","285","    purgeMapper.deleteCeTaskMessageOfCeQueueByProjectUuid(rootUuid);","289","    purgeMapper.deleteCeQueueByProjectUuid(rootUuid);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["314","  <delete id=\"deleteCeScannerContextOfCeActivityByRootUuid\">","317","      task_uuid in (","318","        select","319","          uuid","320","        from ce_activity","321","        where","322","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","323","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","324","      )","327","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByRootUuid\">","330","      task_uuid in (","331","        select","332","          uuid","333","        from ce_activity","334","        where","335","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","336","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","337","      )","340","  <delete id=\"deleteCeTaskInputOfCeActivityByRootUuid\">","343","      task_uuid in (","344","        select","345","          uuid","346","        from ce_activity","347","        where","348","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","349","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","350","      )","353","  <delete id=\"deleteCeTaskMessageOfCeActivityByRootUuid\">","356","      task_uuid in (","357","        select","358","          uuid","359","        from ce_activity","360","        where","361","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","362","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","363","      )","366","  <delete id=\"deleteCeActivityByRootUuid\">","367","      delete from ce_activity","368","      where","369","        component_uuid=#{rootUuid,jdbcType=VARCHAR}","370","        or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","373","  <delete id=\"deleteCeScannerContextOfCeQueueByRootUuid\">","376","      task_uuid in (","377","        select","378","          uuid","379","        from ce_queue","380","        where","381","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","382","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","383","      )","386","  <delete id=\"deleteCeTaskCharacteristicsOfCeQueueByRootUuid\">","389","      task_uuid in (","390","        select","391","          uuid","392","        from ce_queue","393","        where","394","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","395","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","396","      )","399","  <delete id=\"deleteCeTaskInputOfCeQueueByRootUuid\">","402","      task_uuid in (","403","        select","404","          uuid","405","        from ce_queue","406","        where","407","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","408","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","409","      )","412","  <delete id=\"deleteCeTaskMessageOfCeQueueByRootUuid\">","415","      task_uuid in (","416","        select","417","          uuid","418","        from ce_queue","419","        where","420","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","421","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","422","      )","425","  <delete id=\"deleteCeQueueByRootUuid\">","426","    delete from ce_queue","427","    where","428","      component_uuid=#{rootUuid,jdbcType=VARCHAR}","429","      or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}"],"delete":["314","  <delete id=\"deleteCeScannerContextOfCeActivityByProjectUuid\">","317","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","320","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByProjectUuid\">","323","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","326","  <delete id=\"deleteCeTaskInputOfCeActivityByProjectUuid\">","329","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","332","  <delete id=\"deleteCeTaskMessageOfCeActivityByProjectUuid\">","335","      task_uuid in (select uuid from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","338","  <delete id=\"deleteCeActivityByProjectUuid\">","339","      delete from ce_activity where main_component_uuid=#{projectUuid,jdbcType=VARCHAR}","342","  <delete id=\"deleteCeScannerContextOfCeQueueByProjectUuid\">","345","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","348","  <delete id=\"deleteCeTaskCharacteristicsOfCeQueueByProjectUuid\">","351","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","354","  <delete id=\"deleteCeTaskInputOfCeQueueByProjectUuid\">","357","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","360","  <delete id=\"deleteCeTaskMessageOfCeQueueByProjectUuid\">","363","      task_uuid in (select uuid from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR})","366","  <delete id=\"deleteCeQueueByProjectUuid\">","367","    delete from ce_queue where main_component_uuid=#{projectUuid,jdbcType=VARCHAR}"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTables.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest\/ce_tables.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["92","  void deleteCeTaskCharacteristicsOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","94","  void deleteCeTaskInputOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","96","  void deleteCeScannerContextOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","98","  void deleteCeTaskMessageOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","100","  void deleteCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","102","  void deleteCeScannerContextOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","104","  void deleteCeTaskCharacteristicsOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","106","  void deleteCeTaskInputOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","108","  void deleteCeTaskMessageOfCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);","110","  void deleteCeQueueByRootUuid(@Param(\"rootUuid\") String rootUuid);"],"delete":["92","  void deleteCeTaskCharacteristicsOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","94","  void deleteCeTaskInputOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","96","  void deleteCeTaskMessageOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","98","  void deleteCeScannerContextOfCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","100","  void deleteCeActivityByProjectUuid(@Param(\"projectUuid\") String projectUuid);","102","  void deleteCeScannerContextOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","104","  void deleteCeTaskCharacteristicsOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","106","  void deleteCeTaskInputOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","108","  void deleteCeTaskMessageOfCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);","110","  void deleteCeQueueByProjectUuid(@Param(\"projectUuid\") String projectUuid);"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74Test.java":[{"add":["37","    verifyMigrationCount(underTest, 17);"],"delete":["37","    verifyMigrationCount(underTest, 16);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["76","import static org.sonar.db.component.ComponentTesting.newBranchDto;","141","    assertThat(uuidsIn(\"projects\")).containsOnly(project.uuid(), longBranch.uuid(), recentShortBranch.uuid());","167","    assertThat(uuidsIn(\"projects\")).containsOnly(project.uuid(), longBranch.uuid(), recentPullRequest.uuid());","333","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","334","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","335","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","336","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","337","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","339","    CeActivityDto projectTask = insertCeActivity(project);","340","    insertCeTaskInput(projectTask.getUuid());","341","    CeActivityDto branchTask = insertCeActivity(branch);","342","    insertCeTaskInput(branchTask.getUuid());","343","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","344","    insertCeTaskInput(anotherBranchTask.getUuid());","345","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","346","    insertCeTaskInput(anotherProjectTask.getUuid());","350","    underTest.deleteProject(dbSession, branch.uuid());","353","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","354","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","355","","356","    underTest.deleteProject(dbSession, project.uuid());","357","    dbSession.commit();","358","","359","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","360","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","365","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","366","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","367","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","368","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","369","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","371","    CeActivityDto projectTask = insertCeActivity(project);","372","    insertCeScannerContext(projectTask.getUuid());","373","    CeActivityDto branchTask = insertCeActivity(branch);","374","    insertCeScannerContext(branchTask.getUuid());","375","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","376","    insertCeScannerContext(anotherBranchTask.getUuid());","377","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","378","    insertCeScannerContext(anotherProjectTask.getUuid());","382","    underTest.deleteProject(dbSession, branch.uuid());","385","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","386","    assertThat(taskUuidsIn(\"ce_scanner_context\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","387","","388","    underTest.deleteProject(dbSession, project.uuid());","389","    dbSession.commit();","390","","391","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","392","    assertThat(taskUuidsIn(\"ce_scanner_context\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","397","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","398","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","399","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","400","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","401","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","403","    CeActivityDto projectTask = insertCeActivity(project);","404","    insertCeTaskCharacteristics(projectTask.getUuid(), 3);","405","    CeActivityDto branchTask = insertCeActivity(branch);","406","    insertCeTaskCharacteristics(branchTask.getUuid(), 2);","407","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","408","    insertCeTaskCharacteristics(anotherBranchTask.getUuid(), 6);","409","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","410","    insertCeTaskCharacteristics(anotherProjectTask.getUuid(), 2);","414","    underTest.deleteProject(dbSession, branch.uuid());","417","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","418","    assertThat(taskUuidsIn(\"ce_task_characteristics\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","419","","420","    underTest.deleteProject(dbSession, project.uuid());","421","    dbSession.commit();","422","","423","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","424","    assertThat(taskUuidsIn(\"ce_task_characteristics\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","425","  }","426","","427","  @Test","428","  public void delete_row_in_ce_task_message_referring_to_a_row_in_ce_activity_when_deleting_project() {","429","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","430","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","431","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","432","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","433","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","434","","435","    CeActivityDto projectTask = insertCeActivity(project);","436","    insertCeTaskMessages(projectTask.getUuid(), 3);","437","    CeActivityDto branchTask = insertCeActivity(branch);","438","    insertCeTaskMessages(branchTask.getUuid(), 2);","439","    CeActivityDto anotherBranchTask = insertCeActivity(anotherBranch);","440","    insertCeTaskMessages(anotherBranchTask.getUuid(), 6);","441","    CeActivityDto anotherProjectTask = insertCeActivity(anotherProject);","442","    insertCeTaskMessages(anotherProjectTask.getUuid(), 2);","443","    insertCeTaskMessages(\"non existing task\", 5);","444","    dbSession.commit();","445","","446","    underTest.deleteProject(dbSession, branch.uuid());","447","    dbSession.commit();","448","","449","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","450","    assertThat(taskUuidsIn(\"ce_task_message\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","451","","452","    underTest.deleteProject(dbSession, project.uuid());","453","    dbSession.commit();","454","","455","    assertThat(uuidsIn(\"ce_activity\")).containsOnly(anotherProjectTask.getUuid());","456","    assertThat(taskUuidsIn(\"ce_task_message\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","480","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","481","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","482","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","483","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","484","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","486","    CeQueueDto projectTask = insertCeQueue(project);","487","    insertCeTaskInput(projectTask.getUuid());","488","    CeQueueDto branchTask = insertCeQueue(branch);","489","    insertCeTaskInput(branchTask.getUuid());","490","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","491","    insertCeTaskInput(anotherBranchTask.getUuid());","492","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","493","    insertCeTaskInput(anotherProjectTask.getUuid());","497","    underTest.deleteProject(dbSession, branch.uuid());","500","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","501","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","502","","503","    underTest.deleteProject(dbSession, project.uuid());","504","    dbSession.commit();","505","","506","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","507","    assertThat(taskUuidsIn(\"ce_task_input\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","512","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","513","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","514","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","515","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","516","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","518","    CeQueueDto projectTask = insertCeQueue(project);","519","    insertCeScannerContext(projectTask.getUuid());","520","    CeQueueDto branchTask = insertCeQueue(branch);","521","    insertCeScannerContext(branchTask.getUuid());","522","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","523","    insertCeScannerContext(anotherBranchTask.getUuid());","524","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","525","    insertCeScannerContext(anotherProjectTask.getUuid());","529","    underTest.deleteProject(dbSession, branch.uuid());","532","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","533","    assertThat(taskUuidsIn(\"ce_scanner_context\"))","534","      .containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","535","","536","    underTest.deleteProject(dbSession, project.uuid());","537","    dbSession.commit();","538","","539","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","540","    assertThat(taskUuidsIn(\"ce_scanner_context\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","545","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","546","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","547","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","548","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","549","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","551","    CeQueueDto projectTask = insertCeQueue(project);","552","    insertCeTaskCharacteristics(projectTask.getUuid(), 3);","553","    CeQueueDto branchTask = insertCeQueue(branch);","554","    insertCeTaskCharacteristics(branchTask.getUuid(), 1);","555","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","556","    insertCeTaskCharacteristics(anotherBranchTask.getUuid(), 5);","557","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","558","    insertCeTaskCharacteristics(anotherProjectTask.getUuid(), 2);","562","    underTest.deleteProject(dbSession, branch.uuid());","565","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","566","    assertThat(taskUuidsIn(\"ce_task_characteristics\"))","567","      .containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","568","","569","    underTest.deleteProject(dbSession, project.uuid());","570","    dbSession.commit();","571","","572","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","573","    assertThat(taskUuidsIn(\"ce_task_characteristics\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","578","    ComponentDto project = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","579","    ComponentDto branch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","580","    ComponentDto anotherBranch = ComponentTesting.newProjectBranch(project, newBranchDto(project));","581","    ComponentDto anotherProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","582","    dbClient.componentDao().insert(dbSession, project, branch, anotherBranch, anotherProject);","584","    CeQueueDto projectTask = insertCeQueue(project);","585","    insertCeTaskMessages(projectTask.getUuid(), 3);","586","    CeQueueDto branchTask = insertCeQueue(branch);","587","    insertCeTaskMessages(branchTask.getUuid(), 1);","588","    CeQueueDto anotherBranchTask = insertCeQueue(anotherBranch);","589","    insertCeTaskMessages(anotherBranchTask.getUuid(), 5);","590","    CeQueueDto anotherProjectTask = insertCeQueue(anotherProject);","591","    insertCeTaskMessages(anotherProjectTask.getUuid(), 2);","595","    underTest.deleteProject(dbSession, branch.uuid());","598","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid());","599","    assertThat(taskUuidsIn(\"ce_task_message\"))","600","      .containsOnly(projectTask.getUuid(), anotherBranchTask.getUuid(), anotherProjectTask.getUuid(), \"non existing task\");","602","    underTest.deleteProject(dbSession, project.uuid());","605","    assertThat(uuidsIn(\"ce_queue\")).containsOnly(anotherProjectTask.getUuid());","606","    assertThat(taskUuidsIn(\"ce_task_message\")).containsOnly(anotherProjectTask.getUuid(), \"non existing task\");","847","    assertThat(uuidsIn(\"projects\"))","873","    assertThat(uuidsIn(\"projects\"))","889","    assertThat(uuidsIn(\"projects\"))","893","    assertThat(uuidsIn(\"projects\"))","913","    assertThat(uuidsIn(\"projects\"))","918","    assertThat(uuidsIn(\"projects\"))","1093","  private Stream<String> uuidsIn(String tableName) {","1094","    return db.select(\"select uuid as \\\"UUID\\\" from \" + tableName)","1095","      .stream()","1096","      .map(row -> (String) row.get(\"UUID\"));","1097","  }","1098","","1099","  private Stream<String> taskUuidsIn(String tableName) {","1100","    return db.select(\"select task_uuid as \\\"UUID\\\" from \" + tableName)","1101","      .stream()","1102","      .map(row -> (String) row.get(\"UUID\"));","1103","  }","1104",""],"delete":["140","    assertThat(getUuidsInTableProjects()).containsOnly(project.uuid(), longBranch.uuid(), recentShortBranch.uuid());","166","    assertThat(getUuidsInTableProjects()).containsOnly(project.uuid(), longBranch.uuid(), recentPullRequest.uuid());","299","  @Test","300","  public void delete_branch_and_associated_data() {","301","    ComponentDto project = db.components().insertMainBranch();","302","    ComponentDto branch = db.components().insertProjectBranch(project);","303","","304","    CeQueueDto projectCeQueue = insertCeQueue(project);","305","    CeActivityDto projectCeActivity = insertCeActivity(project);","306","    CeQueueDto branchCeQueue = insertCeQueue(branch);","307","    CeActivityDto branchCeActivity = insertCeActivity(branch);","308","    Stream.of(projectCeQueue.getUuid(), projectCeActivity.getUuid(), branchCeQueue.getUuid(), branchCeActivity.getUuid())","309","      .forEach(taskUuid -> {","310","        insertCeScannerContext(taskUuid);","311","        insertCeTaskCharacteristics(taskUuid, 2);","312","        insertCeTaskMessages(taskUuid, 3);","313","        insertCeTaskInput(taskUuid);","314","      });","315","","316","    underTest.deleteBranch(dbSession, branch.uuid());","317","    dbSession.commit();","318","","319","    assertThat(uuidsOfTable(\"projects\")).containsOnly(project.uuid());","320","    assertThat(uuidsOfTable(\"project_branches\")).containsOnly(project.uuid());","321","    \/\/ deleteBranch is bugged and does not delete from ce_* tables (see SONAR-10642)","322","    assertThat(uuidsOfTable(\"ce_queue\"))","323","      .containsOnly(projectCeQueue.getUuid(), branchCeQueue.getUuid())","324","      .hasSize(2);","325","    assertThat(uuidsOfTable(\"ce_activity\"))","326","      .containsOnly(projectCeActivity.getUuid(), branchCeActivity.getUuid())","327","      .hasSize(2);","328","    String[] allTaskUuids = {projectCeQueue.getUuid(), projectCeActivity.getUuid(), branchCeQueue.getUuid(), branchCeActivity.getUuid()};","329","    assertThat(taskUuidsOfTable(\"ce_scanner_context\"))","330","      .containsOnly(allTaskUuids)","331","      .hasSize(4);","332","    assertThat(taskUuidsOfTable(\"ce_task_characteristics\"))","333","      .containsOnly(allTaskUuids)","334","      .hasSize(8);","335","    assertThat(taskUuidsOfTable(\"ce_task_message\"))","336","      .containsOnly(allTaskUuids)","337","      .hasSize(12);","338","    assertThat(taskUuidsOfTable(\"ce_task_input\"))","339","      .containsOnly(allTaskUuids)","340","      .hasSize(4);","341","  }","342","","376","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","377","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","378","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","380","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","381","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","382","    insertCeTaskInput(toBeDeleted.getUuid());","383","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","384","    insertCeTaskInput(toNotDelete.getUuid());","388","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","391","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","392","      .extracting(row -> (String) row.get(\"UUID\"))","393","      .containsOnly(toNotDelete.getUuid());","394","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_input\"))","395","      .extracting(row -> (String) row.get(\"UUID\"))","396","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","401","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","402","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","403","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","405","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","406","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","407","    insertCeScannerContext(toBeDeleted.getUuid());","408","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","409","    insertCeScannerContext(toNotDelete.getUuid());","413","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","416","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","417","      .extracting(row -> (String) row.get(\"UUID\"))","418","      .containsOnly(toNotDelete.getUuid());","419","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_scanner_context\"))","420","      .extracting(row -> (String) row.get(\"UUID\"))","421","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","426","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","427","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","428","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","430","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","431","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","432","    insertCeTaskCharacteristics(toBeDeleted.getUuid(), 3);","433","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","434","    insertCeTaskCharacteristics(toNotDelete.getUuid(), 2);","438","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","441","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","442","      .extracting(row -> (String) row.get(\"UUID\"))","443","      .containsOnly(toNotDelete.getUuid());","444","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_characteristics\"))","445","      .extracting(row -> (String) row.get(\"UUID\"))","446","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","470","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","471","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","472","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","474","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","475","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","476","    insertCeTaskInput(toBeDeleted.getUuid());","477","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","478","    insertCeTaskInput(toNotDelete.getUuid());","482","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","485","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","486","      .extracting(row -> (String) row.get(\"UUID\"))","487","      .containsOnly(toNotDelete.getUuid());","488","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_input\"))","489","      .extracting(row -> (String) row.get(\"UUID\"))","490","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","495","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","496","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","497","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","499","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","500","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","501","    insertCeScannerContext(toBeDeleted.getUuid());","502","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","503","    insertCeScannerContext(toNotDelete.getUuid());","507","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","510","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","511","      .extracting(row -> (String) row.get(\"UUID\"))","512","      .containsOnly(toNotDelete.getUuid());","513","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_scanner_context\"))","514","      .extracting(row -> (String) row.get(\"UUID\"))","515","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","520","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","521","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","522","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","524","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","525","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","526","    insertCeTaskCharacteristics(toBeDeleted.getUuid(), 3);","527","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","528","    insertCeTaskCharacteristics(toNotDelete.getUuid(), 2);","532","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","535","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","536","      .extracting(row -> (String) row.get(\"UUID\"))","537","      .containsOnly(toNotDelete.getUuid());","538","    assertThat(db.select(\"select task_uuid as \\\"UUID\\\" from ce_task_characteristics\"))","539","      .extracting(row -> (String) row.get(\"UUID\"))","540","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","545","    ComponentDto projectToBeDeleted = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","546","    ComponentDto anotherLivingProject = ComponentTesting.newPrivateProjectDto(db.getDefaultOrganization());","547","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","549","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","550","    CeQueueDto toBeDeleted = insertCeQueue(projectToBeDeleted);","551","    insertCeTaskMessages(toBeDeleted.getUuid(), 3);","552","    CeQueueDto toNotDelete = insertCeQueue(anotherLivingProject);","553","    insertCeTaskMessages(toNotDelete.getUuid(), 2);","557","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","560","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_queue\"))","561","      .extracting(row -> (String) row.get(\"UUID\"))","562","      .containsOnly(toNotDelete.getUuid());","563","    assertThat(db.select(\"select task_uuid as \\\"TASK_UUID\\\" from ce_task_message\"))","564","      .extracting(row -> (String) row.get(\"TASK_UUID\"))","565","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","566","  }","568","  @Test","569","  public void delete_row_in_ce_task_message_referring_to_a_row_in_ce_activity_when_deleting_project() {","570","    ComponentDto projectToBeDeleted = ComponentTesting.newPublicProjectDto(db.getDefaultOrganization());","571","    ComponentDto anotherLivingProject = ComponentTesting.newPublicProjectDto(db.getDefaultOrganization());","572","    dbClient.componentDao().insert(dbSession, projectToBeDeleted, anotherLivingProject);","573","","574","    \/\/ Insert 2 rows in CE_ACTIVITY : one for the project that will be deleted, and one on another project","575","    CeActivityDto toBeDeleted = insertCeActivity(projectToBeDeleted);","576","    insertCeTaskMessages(toBeDeleted.getUuid(), 3);","577","    CeActivityDto toNotDelete = insertCeActivity(anotherLivingProject);","578","    insertCeTaskMessages(toNotDelete.getUuid(), 2);","579","    insertCeTaskMessages(\"non existing task\", 5);","582","    underTest.deleteProject(dbSession, projectToBeDeleted.uuid());","583","    dbSession.commit();","584","","585","    assertThat(db.select(\"select uuid as \\\"UUID\\\" from ce_activity\"))","586","      .extracting(row -> (String) row.get(\"UUID\"))","587","      .containsOnly(toNotDelete.getUuid());","588","    assertThat(db.select(\"select task_uuid as \\\"TASK_UUID\\\" from ce_task_message\"))","589","      .extracting(row -> (String) row.get(\"TASK_UUID\"))","590","      .containsOnly(toNotDelete.getUuid(), \"non existing task\");","831","    assertThat(getUuidsInTableProjects())","857","    assertThat(getUuidsInTableProjects())","861","  private Stream<String> getUuidsInTableProjects() {","862","    return db.select(\"select uuid as \\\"UUID\\\" from projects\").stream().map(row -> (String) row.get(\"UUID\"));","863","  }","864","","877","    assertThat(getUuidsInTableProjects())","881","    assertThat(getUuidsInTableProjects())","901","    assertThat(getUuidsInTableProjects())","906","    assertThat(getUuidsInTableProjects())"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/CleanOrphanRowsInCeTablesTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v74\/DbVersion74.java":[{"add":["45","      .add(2323, \"Clean orphans from deleted branches and PRs in CE_* tables\", CleanOrphanRowsInCeTables.class)"],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/step\/DataChange.java":[{"add":["23","import org.sonar.api.config.Configuration;","65","  protected static boolean isSonarCloud(Configuration configuration) {","66","    return configuration.getBoolean(\"sonar.sonarcloud.enabled\").orElse(false);","67","  }","68",""],"delete":[]}]}}}