{"d17f0721a3a82e2f2b0fb424c8076159f9331bf0":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QualityProfileDaoTest.java":[{"add":["151","  public void test_updateLastUsedDate_if_never_been_set_yet() {","152","    QProfileDto initial = QualityProfileTesting.newQualityProfileDto()","153","      .setLastUsed(null);","154","    underTest.insert(dbSession, initial);","155","","156","    int count = underTest.updateLastUsedDate(dbSession, initial, 15_000L);","157","","158","    assertThat(count).isEqualTo(1);","159","    QProfileDto reloaded = underTest.selectByUuid(dbSession, initial.getKee());","160","    assertThat(reloaded.getLastUsed()).isEqualTo(15_000L);","161","  }","162","","163","  @Test","164","  public void test_updateLastUsedDate_if_more_recent() {"],"delete":["151","  public void test_updateLastUsedDate() {"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualityprofile\/QualityProfileMapper.xml":[{"add":["100","      and (last_used is null or last_used &lt; #{lastUsedDate, jdbcType=BIGINT})"],"delete":["100","      and last_used &lt; #{lastUsedDate, jdbcType=BIGINT}"]}]}},"eb64f5e0e1e9abcd2701ab7a02624341b3d8960d":{"changes":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":"MODIFY","\/dev\/null":"DELETE","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest.java":"ADD","sonar-db\/src\/test\/resources\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest\/schema.sql":"ADD","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1017_increase_projects_name_columns_size.rb":"ADD","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSize.java":"ADD","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/schema-h2.ddl":[{"add":["247","  \"NAME\" VARCHAR(2000),"],"delete":["247","  \"NAME\" VARCHAR(256),"]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/MigrationStepModule.java":[{"add":["64","import org.sonar.db.version.v54.IncreaseProjectsNameColumnsSize;","134","      RemovePreviewPermission.class,","135","      IncreaseProjectsNameColumnsSize.class"],"delete":["133","      RemovePreviewPermission.class"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest.java":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/resources\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSizeTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/db\/migrate\/1017_increase_projects_name_columns_size.rb":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/MigrationStepModuleTest.java":[{"add":["31","    assertThat(container.size()).isEqualTo(51);"],"delete":["31","    assertThat(container.size()).isEqualTo(50);"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 1017;"],"delete":["31","  public static final int LAST_VERSION = 1016;"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v54\/IncreaseProjectsNameColumnsSize.java":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":["378","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1017');"],"delete":["378","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1016');"]}]}},"4fa52cd10f951bd2a0e66acd480e49158099c435":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":[{"add":["403","    const key = e.currentTarget.className.match(\/sym-\\d+\/);","404","    if (key) {","405","      this.$('.sym.highlighted').removeClass('highlighted');","406","      if (!highlighted) {","407","        this.$('.sym.' + key[0]).addClass('highlighted');","408","      }"],"delete":["403","    const key = e.currentTarget.className.split(\/\\s+\/)[0];","404","    this.$('.sym.highlighted').removeClass('highlighted');","405","    if (!highlighted) {","406","      this.$('.sym.' + key).addClass('highlighted');"]}]}},"f419b7847f39d9d8e80d4a766904ccd4f5bd6010":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/utils.js":[{"add":["144","      total: existing.total,","145","      page: existing.page","155","        addComponentChildren(componentKey, r.components, r.total, r.page);","204","        addComponentChildren(componentKey, r.components, r.total, r.page);"],"delete":["144","      total: existing.total","154","        addComponentChildren(componentKey, r.components, r.total);","203","        addComponentChildren(componentKey, r.components, r.total);"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.js":[{"add":["31","export function addComponentChildren (componentKey, children, total, page) {","32","  childrenBucket[componentKey] = { children, total, page };"],"delete":["31","export function addComponentChildren (componentKey, children, total) {","32","  childrenBucket[componentKey] = { children, total };"]}]}},"0b8e4aad2693dbea56400bacd43fd8a4aec72389":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/popups\/templates\/source-viewer-coverage-popup.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/popups\/templates\/source-viewer-coverage-popup.hbs":[{"add":["1","  <div class=\"bubble-popup-title\">","2","    {{t 'source_viewer.covered'}}","3","    {{#if row.conditions}}","4","      ({{default row.coveredConditions 0}} of {{row.conditions}} {{t 'source_viewer.conditions'}})","5","    {{\/if}}","6","  <\/div>","18","                data-key=\"{{..\/file.key}}\" data-method=\"{{name}}\">"],"delete":["2","    <div class=\"bubble-popup-title\">","3","      {{t 'source_viewer.covered'}}","4","      {{#if row.conditions}}","5","        ({{default row.coveredConditions 0}} of {{row.conditions}} {{t 'source_viewer.conditions'}})","6","      {{\/if}}","7","    <\/div>","18","                 data-key=\"{{..\/file.key}}\" data-method=\"{{name}}\">"]}]}},"9dcc70602f4222e167dc12a084db38ded895845f":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/ComponentSourceSnippetViewer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/utils.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/__snapshots__\/ComponentSourceSnippetViewer-test.tsx.snap":[{"add":[],"delete":["36","","37","exports[`should render correctly with secondary locations 1`] = `","38","<div","39","  className=\"component-source-container\"","40",">","41","  <SourceViewerHeaderSlim","42","    branchLike={","43","      Object {","44","        \"analysisDate\": \"2018-01-01\",","45","        \"isMain\": true,","46","        \"name\": \"master\",","47","      }","48","    }","49","    expandable={true}","50","    loading={false}","51","    onExpand={[Function]}","52","    sourceViewerFile={","53","      Object {","54","        \"key\": \"a\",","55","        \"measures\": Object {","56","          \"coverage\": \"85.2\",","57","          \"duplicationDensity\": \"1.0\",","58","          \"issues\": \"12\",","59","          \"lines\": \"56\",","60","        },","61","        \"path\": \"a\",","62","        \"project\": \"my-project\",","63","        \"projectName\": \"MyProject\",","64","        \"q\": \"FIL\",","65","        \"uuid\": \"foo-bar\",","66","      }","67","    }","68","  \/>","69","  <div","70","    id=\"snippet-wrapper-0\"","71","    key=\"0\"","72","  >","73","    <SnippetViewer","74","      branchLike={","75","        Object {","76","          \"analysisDate\": \"2018-01-01\",","77","          \"isMain\": true,","78","          \"name\": \"master\",","79","        }","80","      }","81","      component={","82","        Object {","83","          \"key\": \"a\",","84","          \"measures\": Object {","85","            \"coverage\": \"85.2\",","86","            \"duplicationDensity\": \"1.0\",","87","            \"issues\": \"12\",","88","            \"lines\": \"56\",","89","          },","90","          \"path\": \"a\",","91","          \"project\": \"my-project\",","92","          \"projectName\": \"MyProject\",","93","          \"q\": \"FIL\",","94","          \"uuid\": \"foo-bar\",","95","        }","96","      }","97","      expandBlock={[Function]}","98","      handleCloseIssues={[Function]}","99","      handleLinePopupToggle={[Function]}","100","      handleOpenIssues={[Function]}","101","      handleSymbolClick={[Function]}","102","      highlightedLocationMessage={","103","        Object {","104","          \"index\": 0,","105","          \"text\": \"\",","106","        }","107","      }","108","      highlightedSymbols={Array []}","109","      index={0}","110","      issue={","111","        Object {","112","          \"actions\": Array [],","113","          \"component\": \"main.js\",","114","          \"componentLongName\": \"main.js\",","115","          \"componentQualifier\": \"FIL\",","116","          \"componentUuid\": \"foo1234\",","117","          \"creationDate\": \"2017-03-01T09:36:01+0100\",","118","          \"flows\": Array [],","119","          \"fromHotspot\": false,","120","          \"key\": \"AVsae-CQS-9G3txfbFN2\",","121","          \"line\": 25,","122","          \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","123","          \"organization\": \"myorg\",","124","          \"project\": \"myproject\",","125","          \"projectKey\": \"foo\",","126","          \"projectName\": \"Foo\",","127","          \"projectOrganization\": \"org\",","128","          \"rule\": \"javascript:S1067\",","129","          \"ruleName\": \"foo\",","130","          \"secondaryLocations\": Array [","131","            Object {","132","              \"component\": \"main.js\",","133","              \"textRange\": Object {","134","                \"endLine\": 2,","135","                \"endOffset\": 2,","136","                \"startLine\": 1,","137","                \"startOffset\": 1,","138","              },","139","            },","140","            Object {","141","              \"component\": \"main.js\",","142","              \"textRange\": Object {","143","                \"endLine\": 2,","144","                \"endOffset\": 2,","145","                \"startLine\": 1,","146","                \"startOffset\": 1,","147","              },","148","            },","149","          ],","150","          \"severity\": \"MAJOR\",","151","          \"status\": \"OPEN\",","152","          \"textRange\": Object {","153","            \"endLine\": 5,","154","            \"endOffset\": 10,","155","            \"startLine\": 5,","156","            \"startOffset\": 5,","157","          },","158","          \"transitions\": Array [],","159","          \"type\": \"BUG\",","160","        }","161","      }","162","      issuesByLine={Object {}}","163","      last={false}","164","      loadDuplications={[Function]}","165","      locations={Array []}","166","      locationsByLine={Object {}}","167","      onIssueChange={[MockFunction]}","168","      onIssuePopupToggle={[MockFunction]}","169","      onLocationSelect={[MockFunction]}","170","      openIssuesByLine={Object {}}","171","      renderDuplicationPopup={[Function]}","172","      scroll={[MockFunction]}","173","      snippet={","174","        Array [","175","          Object {","176","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","177","            \"coverageStatus\": \"covered\",","178","            \"coveredConditions\": 2,","179","            \"duplicated\": false,","180","            \"isNew\": true,","181","            \"line\": 3,","182","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","183","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","184","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","185","          },","186","          Object {","187","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","188","            \"coverageStatus\": \"covered\",","189","            \"coveredConditions\": 2,","190","            \"duplicated\": false,","191","            \"isNew\": true,","192","            \"line\": 4,","193","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","194","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","195","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","196","          },","197","          Object {","198","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","199","            \"coverageStatus\": \"covered\",","200","            \"coveredConditions\": 2,","201","            \"duplicated\": false,","202","            \"isNew\": true,","203","            \"line\": 5,","204","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","205","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","206","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","207","          },","208","          Object {","209","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","210","            \"coverageStatus\": \"covered\",","211","            \"coveredConditions\": 2,","212","            \"duplicated\": false,","213","            \"isNew\": true,","214","            \"line\": 6,","215","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","216","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","217","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","218","          },","219","          Object {","220","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","221","            \"coverageStatus\": \"covered\",","222","            \"coveredConditions\": 2,","223","            \"duplicated\": false,","224","            \"isNew\": true,","225","            \"line\": 7,","226","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","227","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","228","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","229","          },","230","          Object {","231","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","232","            \"coverageStatus\": \"covered\",","233","            \"coveredConditions\": 2,","234","            \"duplicated\": false,","235","            \"isNew\": true,","236","            \"line\": 8,","237","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","238","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","239","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","240","          },","241","          Object {","242","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","243","            \"coverageStatus\": \"covered\",","244","            \"coveredConditions\": 2,","245","            \"duplicated\": false,","246","            \"isNew\": true,","247","            \"line\": 9,","248","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","249","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","250","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","251","          },","252","          Object {","253","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","254","            \"coverageStatus\": \"covered\",","255","            \"coveredConditions\": 2,","256","            \"duplicated\": false,","257","            \"isNew\": true,","258","            \"line\": 10,","259","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","260","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","261","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","262","          },","263","          Object {","264","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","265","            \"coverageStatus\": \"covered\",","266","            \"coveredConditions\": 2,","267","            \"duplicated\": false,","268","            \"isNew\": true,","269","            \"line\": 11,","270","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","271","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","272","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","273","          },","274","          Object {","275","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","276","            \"coverageStatus\": \"covered\",","277","            \"coveredConditions\": 2,","278","            \"duplicated\": false,","279","            \"isNew\": true,","280","            \"line\": 12,","281","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","282","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","283","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","284","          },","285","          Object {","286","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","287","            \"coverageStatus\": \"covered\",","288","            \"coveredConditions\": 2,","289","            \"duplicated\": false,","290","            \"isNew\": true,","291","            \"line\": 13,","292","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","293","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","294","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","295","          },","296","          Object {","297","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","298","            \"coverageStatus\": \"covered\",","299","            \"coveredConditions\": 2,","300","            \"duplicated\": false,","301","            \"isNew\": true,","302","            \"line\": 14,","303","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","304","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","305","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","306","          },","307","        ]","308","      }","309","    \/>","310","  <\/div>","311","  <div","312","    id=\"snippet-wrapper-1\"","313","    key=\"1\"","314","  >","315","    <SnippetViewer","316","      branchLike={","317","        Object {","318","          \"analysisDate\": \"2018-01-01\",","319","          \"isMain\": true,","320","          \"name\": \"master\",","321","        }","322","      }","323","      component={","324","        Object {","325","          \"key\": \"a\",","326","          \"measures\": Object {","327","            \"coverage\": \"85.2\",","328","            \"duplicationDensity\": \"1.0\",","329","            \"issues\": \"12\",","330","            \"lines\": \"56\",","331","          },","332","          \"path\": \"a\",","333","          \"project\": \"my-project\",","334","          \"projectName\": \"MyProject\",","335","          \"q\": \"FIL\",","336","          \"uuid\": \"foo-bar\",","337","        }","338","      }","339","      expandBlock={[Function]}","340","      handleCloseIssues={[Function]}","341","      handleLinePopupToggle={[Function]}","342","      handleOpenIssues={[Function]}","343","      handleSymbolClick={[Function]}","344","      highlightedLocationMessage={","345","        Object {","346","          \"index\": 0,","347","          \"text\": \"\",","348","        }","349","      }","350","      highlightedSymbols={Array []}","351","      index={1}","352","      issue={","353","        Object {","354","          \"actions\": Array [],","355","          \"component\": \"main.js\",","356","          \"componentLongName\": \"main.js\",","357","          \"componentQualifier\": \"FIL\",","358","          \"componentUuid\": \"foo1234\",","359","          \"creationDate\": \"2017-03-01T09:36:01+0100\",","360","          \"flows\": Array [],","361","          \"fromHotspot\": false,","362","          \"key\": \"AVsae-CQS-9G3txfbFN2\",","363","          \"line\": 25,","364","          \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","365","          \"organization\": \"myorg\",","366","          \"project\": \"myproject\",","367","          \"projectKey\": \"foo\",","368","          \"projectName\": \"Foo\",","369","          \"projectOrganization\": \"org\",","370","          \"rule\": \"javascript:S1067\",","371","          \"ruleName\": \"foo\",","372","          \"secondaryLocations\": Array [","373","            Object {","374","              \"component\": \"main.js\",","375","              \"textRange\": Object {","376","                \"endLine\": 2,","377","                \"endOffset\": 2,","378","                \"startLine\": 1,","379","                \"startOffset\": 1,","380","              },","381","            },","382","            Object {","383","              \"component\": \"main.js\",","384","              \"textRange\": Object {","385","                \"endLine\": 2,","386","                \"endOffset\": 2,","387","                \"startLine\": 1,","388","                \"startOffset\": 1,","389","              },","390","            },","391","          ],","392","          \"severity\": \"MAJOR\",","393","          \"status\": \"OPEN\",","394","          \"textRange\": Object {","395","            \"endLine\": 5,","396","            \"endOffset\": 10,","397","            \"startLine\": 5,","398","            \"startOffset\": 5,","399","          },","400","          \"transitions\": Array [],","401","          \"type\": \"BUG\",","402","        }","403","      }","404","      issuesByLine={Object {}}","405","      last={false}","406","      loadDuplications={[Function]}","407","      locations={Array []}","408","      locationsByLine={Object {}}","409","      onIssueChange={[MockFunction]}","410","      onIssuePopupToggle={[MockFunction]}","411","      onLocationSelect={[MockFunction]}","412","      openIssuesByLine={Object {}}","413","      renderDuplicationPopup={[Function]}","414","      scroll={[MockFunction]}","415","      snippet={","416","        Array [","417","          Object {","418","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","419","            \"coverageStatus\": \"covered\",","420","            \"coveredConditions\": 2,","421","            \"duplicated\": false,","422","            \"isNew\": true,","423","            \"line\": 32,","424","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","425","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","426","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","427","          },","428","          Object {","429","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","430","            \"coverageStatus\": \"covered\",","431","            \"coveredConditions\": 2,","432","            \"duplicated\": false,","433","            \"isNew\": true,","434","            \"line\": 33,","435","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","436","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","437","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","438","          },","439","          Object {","440","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","441","            \"coverageStatus\": \"covered\",","442","            \"coveredConditions\": 2,","443","            \"duplicated\": false,","444","            \"isNew\": true,","445","            \"line\": 34,","446","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","447","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","448","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","449","          },","450","          Object {","451","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","452","            \"coverageStatus\": \"covered\",","453","            \"coveredConditions\": 2,","454","            \"duplicated\": false,","455","            \"isNew\": true,","456","            \"line\": 35,","457","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","458","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","459","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","460","          },","461","          Object {","462","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","463","            \"coverageStatus\": \"covered\",","464","            \"coveredConditions\": 2,","465","            \"duplicated\": false,","466","            \"isNew\": true,","467","            \"line\": 36,","468","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","469","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","470","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","471","          },","472","        ]","473","      }","474","    \/>","475","  <\/div>","476","  <div","477","    id=\"snippet-wrapper-2\"","478","    key=\"2\"","479","  >","480","    <SnippetViewer","481","      branchLike={","482","        Object {","483","          \"analysisDate\": \"2018-01-01\",","484","          \"isMain\": true,","485","          \"name\": \"master\",","486","        }","487","      }","488","      component={","489","        Object {","490","          \"key\": \"a\",","491","          \"measures\": Object {","492","            \"coverage\": \"85.2\",","493","            \"duplicationDensity\": \"1.0\",","494","            \"issues\": \"12\",","495","            \"lines\": \"56\",","496","          },","497","          \"path\": \"a\",","498","          \"project\": \"my-project\",","499","          \"projectName\": \"MyProject\",","500","          \"q\": \"FIL\",","501","          \"uuid\": \"foo-bar\",","502","        }","503","      }","504","      expandBlock={[Function]}","505","      handleCloseIssues={[Function]}","506","      handleLinePopupToggle={[Function]}","507","      handleOpenIssues={[Function]}","508","      handleSymbolClick={[Function]}","509","      highlightedLocationMessage={","510","        Object {","511","          \"index\": 0,","512","          \"text\": \"\",","513","        }","514","      }","515","      highlightedSymbols={Array []}","516","      index={2}","517","      issue={","518","        Object {","519","          \"actions\": Array [],","520","          \"component\": \"main.js\",","521","          \"componentLongName\": \"main.js\",","522","          \"componentQualifier\": \"FIL\",","523","          \"componentUuid\": \"foo1234\",","524","          \"creationDate\": \"2017-03-01T09:36:01+0100\",","525","          \"flows\": Array [],","526","          \"fromHotspot\": false,","527","          \"key\": \"AVsae-CQS-9G3txfbFN2\",","528","          \"line\": 25,","529","          \"message\": \"Reduce the number of conditional operators (4) used in the expression\",","530","          \"organization\": \"myorg\",","531","          \"project\": \"myproject\",","532","          \"projectKey\": \"foo\",","533","          \"projectName\": \"Foo\",","534","          \"projectOrganization\": \"org\",","535","          \"rule\": \"javascript:S1067\",","536","          \"ruleName\": \"foo\",","537","          \"secondaryLocations\": Array [","538","            Object {","539","              \"component\": \"main.js\",","540","              \"textRange\": Object {","541","                \"endLine\": 2,","542","                \"endOffset\": 2,","543","                \"startLine\": 1,","544","                \"startOffset\": 1,","545","              },","546","            },","547","            Object {","548","              \"component\": \"main.js\",","549","              \"textRange\": Object {","550","                \"endLine\": 2,","551","                \"endOffset\": 2,","552","                \"startLine\": 1,","553","                \"startOffset\": 1,","554","              },","555","            },","556","          ],","557","          \"severity\": \"MAJOR\",","558","          \"status\": \"OPEN\",","559","          \"textRange\": Object {","560","            \"endLine\": 5,","561","            \"endOffset\": 10,","562","            \"startLine\": 5,","563","            \"startOffset\": 5,","564","          },","565","          \"transitions\": Array [],","566","          \"type\": \"BUG\",","567","        }","568","      }","569","      issuesByLine={Object {}}","570","      last={false}","571","      loadDuplications={[Function]}","572","      locations={Array []}","573","      locationsByLine={Object {}}","574","      onIssueChange={[MockFunction]}","575","      onIssuePopupToggle={[MockFunction]}","576","      onLocationSelect={[MockFunction]}","577","      openIssuesByLine={Object {}}","578","      renderDuplicationPopup={[Function]}","579","      scroll={[MockFunction]}","580","      snippet={","581","        Array [","582","          Object {","583","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","584","            \"coverageStatus\": \"covered\",","585","            \"coveredConditions\": 2,","586","            \"duplicated\": false,","587","            \"isNew\": true,","588","            \"line\": 52,","589","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","590","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","591","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","592","          },","593","          Object {","594","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","595","            \"coverageStatus\": \"covered\",","596","            \"coveredConditions\": 2,","597","            \"duplicated\": false,","598","            \"isNew\": true,","599","            \"line\": 53,","600","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","601","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","602","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","603","          },","604","          Object {","605","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","606","            \"coverageStatus\": \"covered\",","607","            \"coveredConditions\": 2,","608","            \"duplicated\": false,","609","            \"isNew\": true,","610","            \"line\": 54,","611","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","612","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","613","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","614","          },","615","          Object {","616","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","617","            \"coverageStatus\": \"covered\",","618","            \"coveredConditions\": 2,","619","            \"duplicated\": false,","620","            \"isNew\": true,","621","            \"line\": 55,","622","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","623","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","624","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","625","          },","626","          Object {","627","            \"code\": \"<span class=\\\\\"k\\\\\">import<\/span> java.util.<span class=\\\\\"sym-9 sym\\\\\">ArrayList<\/span>;\",","628","            \"coverageStatus\": \"covered\",","629","            \"coveredConditions\": 2,","630","            \"duplicated\": false,","631","            \"isNew\": true,","632","            \"line\": 56,","633","            \"scmAuthor\": \"simon.brandhof@sonarsource.com\",","634","            \"scmDate\": \"2018-12-11T10:48:39+0100\",","635","            \"scmRevision\": \"80f564becc0c0a1c9abaa006eca83a4fd278c3f0\",","636","          },","637","        ]","638","      }","639","    \/>","640","  <\/div>","641","<\/div>","642","`;"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/utils-test.ts":[{"add":["162","","163","  it('should handle last component', () => {","164","    const results = createSnippets(","165","      [","166","        mockFlowLocation({","167","          textRange: { startLine: 16, startOffset: 10, endLine: 16, endOffset: 14 }","168","        }),","169","        mockFlowLocation({","170","          textRange: { startLine: 19, startOffset: 2, endLine: 19, endOffset: 3 }","171","        })","172","      ],","173","      true","174","    );","175","","176","    expect(results).toHaveLength(1);","177","    expect(results[0]).toEqual({ index: 0, start: 14, end: 28 });","178","  });"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/__tests__\/ComponentSourceSnippetViewer-test.tsx":[{"add":["67","  const wrapper = shallowRender({ issue, snippetGroup });","68","  expect(wrapper.state('snippets')).toHaveLength(3);","69","  expect(wrapper.state('snippets')[0]).toEqual({ index: 0, start: 3, end: 14 });","70","  expect(wrapper.state('snippets')[1]).toEqual({ index: 1, start: 32, end: 36 });","71","  expect(wrapper.state('snippets')[2]).toEqual({ index: 2, start: 52, end: 56 });"],"delete":["67","  expect(shallowRender({ issue, snippetGroup })).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/crossComponentSourceViewer\/utils.ts":[{"add":["68","        ((issue && index === 0) || (last && index === locations.length - 1)","69","          ? LINES_BELOW_LAST","70","          : LINES_BELOW);"],"delete":["68","        (issue || (last && index === locations.length - 1) ? LINES_BELOW_LAST : LINES_BELOW);"]}]}},"1e175c1f25b46050a4be209688eff36c71ad6c6e":{"changes":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStepTest.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":"MODIFY"},"diff":{"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsInt.java":[{"add":["22","  private int onCurrentAnalysis = 0;","23","  private int offCurrentAnalysis = 0;","25","  MetricStatsInt increment(boolean onCurrentAnalysis) {","26","    if (onCurrentAnalysis) {","27","      this.onCurrentAnalysis += 1;","29","      this.offCurrentAnalysis += 1;","34","  public int getOnCurrentAnalysis() {","35","    return onCurrentAnalysis;","39","    return onCurrentAnalysis + offCurrentAnalysis;","45","      \"on=\" + onCurrentAnalysis +","46","      \", off=\" + offCurrentAnalysis +"],"delete":["22","  private int onLeak = 0;","23","  private int offLeak = 0;","25","  MetricStatsInt increment(boolean onLeak) {","26","    if (onLeak) {","27","      this.onLeak += 1;","29","      this.offLeak += 1;","34","  public int getOnLeak() {","35","    return onLeak;","39","    return onLeak + offLeak;","45","      \"onLeak=\" + onLeak +","46","      \", offLeak=\" + offLeak +"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/DistributedMetricStatsInt.java":[{"add":["30","  DistributedMetricStatsInt increment(String label, boolean onCurrentAnalysis) {","31","    this.globalStats.increment(onCurrentAnalysis);","32","    statsPerLabel.computeIfAbsent(label, l -> new MetricStatsInt()).increment(onCurrentAnalysis);","44","  public int getOnCurrentAnalysis() {","45","    return globalStats.getOnCurrentAnalysis();"],"delete":["30","  DistributedMetricStatsInt increment(String label, boolean onLeak) {","31","    this.globalStats.increment(onLeak);","32","    statsPerLabel.computeIfAbsent(label, l -> new MetricStatsInt()).increment(onLeak);","44","  public int getOnLeak() {","45","    return globalStats.getOnLeak();"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotificationTest.java":[{"add":["182","  public void set_statistics_when_no_issues_created_on_current_analysis() {","224","  public void set_statistics_when_some_issues_are_no_created_on_current_analysis() {"],"delete":["182","  public void set_statistics_when_no_issues_created_in_current_analysis() {","224","  public void set_statistics_when_some_issues_are_no_created_in_current_analysis() {"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesNotification.java":[{"add":["160","    setDefaultMessage(stats.getDistributedMetricStats(RULE_TYPE).getOnCurrentAnalysis() + \" new issues on \" + projectName + \".\\n\");","173","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis);","181","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(ruleStats.getValue().getOnCurrentAnalysis()));","189","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis);","195","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(componentStats.getValue().getOnCurrentAnalysis()));","203","    for (Map.Entry<String, MetricStatsInt> tagStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis)) {","204","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(tagStats.getValue().getOnCurrentAnalysis()));","212","    List<Map.Entry<String, MetricStatsInt>> entries = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnCurrentAnalysis);","219","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(assigneeStats.getValue().getOnCurrentAnalysis()));","242","    setFieldValue(RULE_TYPE + COUNT, String.valueOf(distributedMetricStats.getOnCurrentAnalysis()));","246","        String.valueOf(distributedMetricStats.getForLabel(ruleType.name()).map(MetricStatsInt::getOnCurrentAnalysis).orElse(0))));"],"delete":["160","    setDefaultMessage(stats.getDistributedMetricStats(RULE_TYPE).getOnLeak() + \" new issues on \" + projectName + \".\\n\");","173","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","181","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(ruleStats.getValue().getOnLeak()));","189","    List<Map.Entry<String, MetricStatsInt>> fiveBiggest = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","195","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(componentStats.getValue().getOnLeak()));","203","    for (Map.Entry<String, MetricStatsInt> tagStats : fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak)) {","204","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(tagStats.getValue().getOnLeak()));","212","    List<Map.Entry<String, MetricStatsInt>> entries = fiveBiggest(stats.getDistributedMetricStats(metric), MetricStatsInt::getOnLeak);","219","      setFieldValue(metric + DOT + i + COUNT, String.valueOf(assigneeStats.getValue().getOnLeak()));","242","    setFieldValue(RULE_TYPE + COUNT, String.valueOf(distributedMetricStats.getOnLeak()));","246","        String.valueOf(distributedMetricStats.getForLabel(ruleType.name()).map(MetricStatsInt::getOnLeak).orElse(0))));"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatisticsTest.java":[{"add":["98","  public void add_counts_issue_per_RuleType_on_current_analysis_globally_and_per_assignee() {","107","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 1, 1)));","111","  public void add_counts_issue_per_RuleType_off_current_analysis_globally_and_per_assignee() {","120","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 0, 1)));","124","  public void add_counts_issue_per_component_on_current_analysis_globally_and_per_assignee() {","134","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 1, 1)));","138","  public void add_counts_issue_per_component_off_current_analysis_globally_and_per_assignee() {","149","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 0, 1)));","167","  public void add_counts_issue_per_ruleKey_on_current_analysis_globally_and_per_assignee() {","179","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 1, 1)));","183","  public void add_counts_issue_per_ruleKey_off_current_analysis_globally_and_per_assignee() {","194","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 0, 1)));","212","  public void add_counts_issue_per_assignee_on_current_analysis_globally_and_per_assignee() {","219","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 1, 1));","223","      assertThat(assigneeStats.getOnCurrentAnalysis()).isEqualTo(1);","230","          assertThat(forLabel.getOnCurrentAnalysis()).isEqualTo(1);","240","  public void add_counts_issue_per_assignee_off_current_analysis_globally_and_per_assignee() {","247","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 0, 1));","251","      assertThat(assigneeStats.getOnCurrentAnalysis()).isEqualTo(0);","258","          assertThat(forLabel.getOnCurrentAnalysis()).isEqualTo(0);","278","  public void add_counts_issue_per_tags_on_current_analysis_globally_and_per_assignee() {","286","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 1, 1)));","290","  public void add_counts_issue_per_tags_off_current_analysis_globally_and_per_assignee() {","298","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 0, 1)));","316","  public void add_sums_effort_on_current_analysis_globally_and_per_assignee() {","329","        assertThat(distribution.getOnCurrentAnalysis()).isEqualTo(expected);","330","        assertThat(distribution.getOffCurrentAnalysis()).isEqualTo(0);","336","  public void add_sums_effort_off_current_analysis_globally_and_per_assignee() {","349","        assertThat(distribution.getOnCurrentAnalysis()).isEqualTo(0);","350","        assertThat(distribution.getOffCurrentAnalysis()).isEqualTo(expected);","390","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","391","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{on=1, off=0}}}, \" +","392","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","393","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{on=1, off=0}}}, \" +","394","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","395","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{on=1, off=0}}}, \" +","396","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","397","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{on=1, off=0}}}, \" +","398","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","399","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{on=1, off=0}}}}, \" +","400","        \"effortStats=MetricStatsLong{on=\" + effort + \", off=0}}}, \" +","402","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","403","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{on=1, off=0}}}, \" +","404","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","405","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{on=1, off=0}}}, \" +","406","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","407","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{on=1, off=0}}}, \" +","408","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","409","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{on=1, off=0}}}, \" +","410","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{on=1, off=0}, \" +","411","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{on=1, off=0}}}}, \" +","412","        \"effortStats=MetricStatsLong{on=\" + effort + \", off=0}}}\");","424","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onCurrentAnalysis, int total) {","428","    assertThat(stats.getOnCurrentAnalysis()).isEqualTo(onCurrentAnalysis);"],"delete":["98","  public void add_counts_issue_per_RuleType_on_leak_globally_and_per_assignee() {","107","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 1, 0, 1)));","111","  public void add_counts_issue_per_RuleType_off_leak_globally_and_per_assignee() {","120","      .forEach(distribution -> Arrays.stream(RuleType.values()).forEach(ruleType -> assertStats(distribution, ruleType.name(), 0, 1, 1)));","124","  public void add_counts_issue_per_component_on_leak_globally_and_per_assignee() {","134","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 1, 0, 1)));","138","  public void add_counts_issue_per_component_off_leak_globally_and_per_assignee() {","149","      .forEach(distribution -> componentUuids.forEach(componentUuid -> assertStats(distribution, componentUuid, 0, 1, 1)));","167","  public void add_counts_issue_per_ruleKey_on_leak_globally_and_per_assignee() {","179","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 1, 0, 1)));","183","  public void add_counts_issue_per_ruleKey_off_leak_globally_and_per_assignee() {","194","      .forEach(distribution -> ruleKeys.forEach(ruleKey -> assertStats(distribution, RuleKey.of(repository, ruleKey).toString(), 0, 1, 1)));","212","  public void add_counts_issue_per_assignee_on_leak_globally_and_per_assignee() {","219","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 1, 0, 1));","223","      assertThat(assigneeStats.getOnLeak()).isEqualTo(1);","230","          assertThat(forLabel.getOnLeak()).isEqualTo(1);","240","  public void add_counts_issue_per_assignee_off_leak_globally_and_per_assignee() {","247","    assignees.forEach(assignee -> assertStats(globalDistribution, assignee, 0, 1, 1));","251","      assertThat(assigneeStats.getOnLeak()).isEqualTo(0);","258","          assertThat(forLabel.getOnLeak()).isEqualTo(0);","278","  public void add_counts_issue_per_tags_on_leak_globally_and_per_assignee() {","286","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 1, 0, 1)));","290","  public void add_counts_issue_per_tags_off_leak_globally_and_per_assignee() {","298","      .forEach(distribution -> tags.forEach(tag -> assertStats(distribution, tag, 0, 1, 1)));","316","  public void add_sums_effort_on_leak_globally_and_per_assignee() {","329","        assertThat(distribution.getOnLeak()).isEqualTo(expected);","330","        assertThat(distribution.getOffLeak()).isEqualTo(0);","336","  public void add_sums_effort_off_leak_globally_and_per_assignee() {","349","        assertThat(distribution.getOnLeak()).isEqualTo(0);","350","        assertThat(distribution.getOffLeak()).isEqualTo(expected);","390","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","391","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","392","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","393","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","394","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","395","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","396","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","397","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","398","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","399","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","400","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}, \" +","402","        \"RULE_TYPE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","403","        \"statsPerLabel={\" + randomRuleTypeExceptHotspot.name() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","404","        \"TAG=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","405","        \"statsPerLabel={\" + tag + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","406","        \"COMPONENT=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","407","        \"statsPerLabel={\" + componentUuid + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","408","        \"ASSIGNEE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","409","        \"statsPerLabel={\" + assignee + \"=MetricStatsInt{onLeak=1, offLeak=0}}}, \" +","410","        \"RULE=DistributedMetricStatsInt{globalStats=MetricStatsInt{onLeak=1, offLeak=0}, \" +","411","        \"statsPerLabel={\" + ruleKey.toString() + \"=MetricStatsInt{onLeak=1, offLeak=0}}}}, \" +","412","        \"effortStats=MetricStatsLong{onLeak=\" + effort + \", offLeak=0}}}\");","424","  private void assertStats(DistributedMetricStatsInt distribution, String label, int onLeak, int offLeak, int total) {","428","    assertThat(stats.getOnLeak()).isEqualTo(onLeak);"]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStep.java":[{"add":["110","    Predicate<DefaultIssue> onCurrentAnalysis = i -> i.isNew() && i.creationDate().getTime() >= truncateToSeconds(analysisDate);","111","    NewIssuesStatistics newIssuesStats = new NewIssuesStatistics(onCurrentAnalysis);","122","    if (newIssuesStats.hasIssuesOnCurrentAnalysis()) {","182","      .setDebt(Duration.create(globalStatistics.effort().getOnCurrentAnalysis()));","195","      .filter(e -> e.getValue().hasIssuesOnCurrentAnalysis())","207","          .setDebt(Duration.create(assigneeStatistics.effort().getOnCurrentAnalysis()));","223","      .stream().filter(e -> e.getValue().hasIssuesOnCurrentAnalysis()).collect(toList());"],"delete":["82","  private Map<String, Component> componentsByDbKey;","83","","112","    Predicate<DefaultIssue> isOnLeakPredicate = i -> i.isNew() && i.creationDate().getTime() >= truncateToSeconds(analysisDate);","113","    NewIssuesStatistics newIssuesStats = new NewIssuesStatistics(isOnLeakPredicate);","124","    if (newIssuesStats.hasIssuesOnLeak()) {","184","      .setDebt(Duration.create(globalStatistics.effort().getOnLeak()));","197","      .filter(e -> e.getValue().hasIssuesOnLeak())","209","          .setDebt(Duration.create(assigneeStatistics.effort().getOnLeak()));","225","      .stream().filter(e -> e.getValue().hasIssuesOnLeak()).collect(toList());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/SendIssueNotificationsStepTest.java":[{"add":["227","    assertThat(severity.getOnCurrentAnalysis()).isEqualTo(efforts.length);","417","    assertThat(severity.getOnCurrentAnalysis()).isEqualTo(assigned.length);","466","    assertThat(severity.getOnCurrentAnalysis()).isEqualTo(efforts.length);"],"delete":["227","    assertThat(severity.getOnLeak()).isEqualTo(efforts.length);","417","    assertThat(severity.getOnLeak()).isEqualTo(assigned.length);","466","    assertThat(severity.getOnLeak()).isEqualTo(efforts.length);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/MetricStatsLong.java":[{"add":["22","  private long onCurrentAnalysis = 0;","23","  private long offCurrentAnalysis = 0;","25","  MetricStatsLong add(long toAdd, boolean onCurrentAnalysis) {","26","    if (onCurrentAnalysis) {","27","      this.onCurrentAnalysis += toAdd;","29","      this.offCurrentAnalysis += toAdd;","34","  public long getOnCurrentAnalysis() {","35","    return onCurrentAnalysis;","38","  public long getOffCurrentAnalysis() {","39","    return offCurrentAnalysis;","43","    return onCurrentAnalysis + offCurrentAnalysis;","49","      \"on=\" + onCurrentAnalysis +","50","      \", off=\" + offCurrentAnalysis +"],"delete":["22","  private long onLeak = 0;","23","  private long offLeak = 0;","25","  MetricStatsLong add(long toAdd, boolean onLeak) {","26","    if (onLeak) {","27","      this.onLeak += toAdd;","29","      this.offLeak += toAdd;","34","  public long getOnLeak() {","35","    return onLeak;","38","  public long getOffLeak() {","39","    return offLeak;","43","    return onLeak + offLeak;","49","      \"onLeak=\" + onLeak +","50","      \", offLeak=\" + offLeak +"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/issue\/notification\/NewIssuesStatistics.java":[{"add":["36","  private final Predicate<DefaultIssue> onCurrentAnalysisPredicate;","40","  public NewIssuesStatistics(Predicate<DefaultIssue> onCurrentAnalysisPredicate) {","41","    this.onCurrentAnalysisPredicate = onCurrentAnalysisPredicate;","42","    this.globalStatistics = new Stats(onCurrentAnalysisPredicate);","49","      assigneesStatistics.computeIfAbsent(userUuid, a -> new Stats(onCurrentAnalysisPredicate)).add(issue);","65","  public boolean hasIssuesOnCurrentAnalysis() {","66","    return globalStatistics.hasIssuesOnCurrentAnalysis();","91","    private final Predicate<DefaultIssue> onCurrentAnalysisPredicate;","95","    public Stats(Predicate<DefaultIssue> onCurrentAnalysisPredicate) {","96","      this.onCurrentAnalysisPredicate = onCurrentAnalysisPredicate;","105","      boolean onCurrentAnalysis = onCurrentAnalysisPredicate.test(issue);","106","      distributions.get(RULE_TYPE).increment(issue.type().name(), onCurrentAnalysis);","109","        distributions.get(COMPONENT).increment(componentUuid, onCurrentAnalysis);","113","        distributions.get(RULE).increment(ruleKey.toString(), onCurrentAnalysis);","117","        distributions.get(ASSIGNEE).increment(assigneeUuid, onCurrentAnalysis);","120","        distributions.get(TAG).increment(tag, onCurrentAnalysis);","124","        effortStats.add(effort.toMinutes(), onCurrentAnalysis);","140","    public boolean hasIssuesOnCurrentAnalysis() {","141","      return getDistributedMetricStats(RULE_TYPE).getOnCurrentAnalysis() > 0;"],"delete":["36","  private final Predicate<DefaultIssue> onLeakPredicate;","40","  public NewIssuesStatistics(Predicate<DefaultIssue> onLeakPredicate) {","41","    this.onLeakPredicate = onLeakPredicate;","42","    this.globalStatistics = new Stats(onLeakPredicate);","49","      assigneesStatistics.computeIfAbsent(userUuid, a -> new Stats(onLeakPredicate)).add(issue);","65","  public boolean hasIssuesOnLeak() {","66","    return globalStatistics.hasIssuesOnLeak();","91","    private final Predicate<DefaultIssue> onLeakPredicate;","95","    public Stats(Predicate<DefaultIssue> onLeakPredicate) {","96","      this.onLeakPredicate = onLeakPredicate;","105","      boolean isOnLeak = onLeakPredicate.test(issue);","106","      distributions.get(RULE_TYPE).increment(issue.type().name(), isOnLeak);","109","        distributions.get(COMPONENT).increment(componentUuid, isOnLeak);","113","        distributions.get(RULE).increment(ruleKey.toString(), isOnLeak);","117","        distributions.get(ASSIGNEE).increment(assigneeUuid, isOnLeak);","120","        distributions.get(TAG).increment(tag, isOnLeak);","124","        effortStats.add(effort.toMinutes(), isOnLeak);","140","    public boolean hasIssuesOnLeak() {","141","      return getDistributedMetricStats(RULE_TYPE).getOnLeak() > 0;"]}]}},"2ec01b5375b038baae335785a2622c439de2d399":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/config\/DefaultConfigurationTest.java":[{"add":["116","    assertThat(getStringArray(\"\\\"a\\nb\\\",c\")).containsExactly(\"a\\nb\", \"c\");","117","    assertThat(getStringArray(\"\\\"a\\\",\\n  b\\n\")).containsExactly(\"a\", \"b\");","118","    assertThat(getStringArray(\"a\\n,b\\n\")).containsExactly(\"a\", \"b\");","119","    assertThat(getStringArray(\"a\\n,,b\\n\")).containsExactly(\"a\", \"\", \"b\");","120","    assertThat(getStringArray(\"a,\\n\\nb,c\")).containsExactly(\"a\", \"b\", \"c\");","121","    assertThat(getStringArray(\"a,b\\n\\nc,d\")).containsExactly(\"a\", \"b\\nc\", \"d\");"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/config\/DefaultConfiguration.java":[{"add":["26","import java.util.Iterator;","119","      .withIgnoreEmptyLines()","120","      .withIgnoreSurroundingSpaces()","126","      processRecords(result, records);","133","  \/**","134","   * In most cases we expect a single record. <br>Having multiple records means the input value was splitted over multiple lines (this is common in Maven).","135","   * For example:","136","   * <pre>","137","   *   &lt;sonar.exclusions&gt;","138","   *     src\/foo,","139","   *     src\/bar,","140","   *     src\/biz","141","   *   &lt;sonar.exclusions&gt;","142","   * <\/pre>","143","   * In this case records will be merged to form a single list of items. Last item of a record is appended to first item of next record.","144","   * <p>","145","   * This is a very curious case, but we try to preserve line break in the middle of an item:","146","   * <pre>","147","   *   &lt;sonar.exclusions&gt;","148","   *     a","149","   *     b,","150","   *     c","151","   *   &lt;sonar.exclusions&gt;","152","   * <\/pre>","153","   * will produce ['a\\nb', 'c']","154","   *\/","155","  private static void processRecords(List<String> result, List<CSVRecord> records) {","156","    for (CSVRecord csvRecord : records) {","157","      Iterator<String> it = csvRecord.iterator();","158","      if (!result.isEmpty()) {","159","        String next = it.next();","160","        if (!next.isEmpty()) {","161","          int lastItemIdx = result.size() - 1;","162","          String previous = result.get(lastItemIdx);","163","          if (previous.isEmpty()) {","164","            result.set(lastItemIdx, next);","165","          } else {","166","            result.set(lastItemIdx, previous + \"\\n\" + next);","167","          }","168","        }","169","      }","170","      it.forEachRemaining(result::add);","171","    }","172","  }","173",""],"delete":["118","      .withIgnoreSurroundingSpaces(true)","124","      records.get(0).iterator().forEachRemaining(result::add);"]}]}},"6cd23f9e6c49c4731da4c878c9891dd3cec8d08d":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoader.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoaderTest.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoader.java":[{"add":["21","import org.sonar.batch.util.BatchUtils;","22","","29","","31","","81","    builder.append(\"&qprofile=\").append(BatchUtils.encodeForUrl(qualityProfileKey));"],"delete":["77","    builder.append(\"&qprofile=\").append(qualityProfileKey);"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/rule\/DefaultActiveRulesLoaderTest.java":[{"add":["49","  public void feed_real_response_encode_qp() throws IOException {","53","    String req1 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c%2B-test_c%2B-values-17445&p=1&ps=500\";","54","    String req2 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c%2B-test_c%2B-values-17445&p=2&ps=500\";","58","    Collection<LoadedActiveRule> activeRules = loader.load(\"c+-test_c+-values-17445\", null);","66","  "],"delete":["22","","50","  public void feed_real_response() throws IOException {","54","    String req1 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-26368&p=1&ps=500\";","55","    String req2 = \"\/api\/rules\/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-26368&p=2&ps=500\";","59","    Collection<LoadedActiveRule> activeRules = loader.load(\"java-sonar-way-26368\", null);","67",""]}]}},"6225c854d869db28adc7c74f0b18e0dfdefebff6":{"changes":{"server\/sonar-web\/src\/main\/js\/widgets\/issue-filter\/widget.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/widgets\/issue-filter\/widget.js":[{"add":["304","          facetMode: facetMode,","305","          additionalFields: '_all'"],"delete":["304","          facetMode: facetMode"]}]}},"6f6f00faf62ea79215031534671bc4f1d9a55856":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocationTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocation.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocationTest.java":[{"add":["22","import org.hamcrest.Description;","23","import org.hamcrest.Matcher;","24","import org.hamcrest.TypeSafeMatcher;","32","import static org.junit.rules.ExpectedException.none;","37","  public ExpectedException thrown = none();","44","  public void should_build() {","45","    assertThat(new DefaultIssueLocation()","46","      .on(inputFile)","47","      .message(\"pipo bimbo\")","48","      .message()","49","    ).isEqualTo(\"pipo bimbo\");","50","  }","51","","52","  @Test","73","  @Test","74","  public void prevent_null_character_in_message_text() {","75","    thrown.expect(IllegalArgumentException.class);","76","    thrown.expectMessage(\"Character \\\\u0000 is not supported in issue message\");","77","","78","    new DefaultIssueLocation()","79","      .message(\"pipo \" + '\\u0000' + \" bimbo\");","80","  }","81","","82","  @Test","83","  public void prevent_null_character_in_message_text_when_builder_has_been_initialized() {","84","    thrown.expect(IllegalArgumentException.class);","85","    thrown.expectMessage(customMatcher(\"Character \\\\u0000 is not supported in issue message\", \", on component: src\/Foo.php\"));","86","","87","    new DefaultIssueLocation()","88","      .on(inputFile)","89","      .message(\"pipo \" + '\\u0000' + \" bimbo\");","90","  }","91","","92","  private Matcher<String> customMatcher(String startWith, String endWith) {","93","    return new TypeSafeMatcher<String>() {","94","      @Override","95","      public void describeTo(Description description) {","96","        description.appendText(\"Invalid message\");","97","      }","98","","99","      @Override","100","      protected boolean matchesSafely(final String item) {","101","        return item.startsWith(startWith) && item.endsWith(endWith);","102","      }","103","    };","104","  }","105",""],"delete":["33","  public ExpectedException thrown = ExpectedException.none();"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":[{"add":["23","import org.junit.Rule;","25","import org.junit.rules.ExpectedException;","32","import static org.junit.rules.ExpectedException.none;","37","  @Rule","38","  public ExpectedException thrown = none();","39","","69","  public void fail_if_message_contains_null_character(){","70","    ORCHESTRATOR.getServer().provisionProject(SAMPLE_PROJECT_KEY, SAMPLE_PROJECT_KEY);","71","    ItUtils.restoreProfile(ORCHESTRATOR, getClass().getResource(\"\/issue\/IssueCreationTest\/with-custom-message.xml\"));","72","    ORCHESTRATOR.getServer().associateProjectToQualityProfile(SAMPLE_PROJECT_KEY, \"xoo\", \"with-custom-message\");","73","","74","    thrown.expect(java.lang.IllegalStateException.class);","75","","76","    runProjectAnalysis(ORCHESTRATOR, \"shared\/xoo-sample\", \"sonar.customMessage.message\", \"a \\u0000 0message\");","77","  }","78","","79","  @Test"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/issue\/internal\/DefaultIssueLocation.java":[{"add":["28","import javax.annotation.Nullable;","29","","30","import static com.google.common.base.Preconditions.checkArgument;","32","import static org.apache.commons.lang.StringUtils.abbreviate;","33","import static org.apache.commons.lang.StringUtils.trim;","43","    checkArgument(component != null, \"Component can't be null\");","62","    if (message.contains(\"\\u0000\")) {","63","      throw new IllegalArgumentException(unsupportedCharacterError(message, component));","64","    }","65","    this.message = abbreviate(trim(message), MESSAGE_MAX_SIZE);","69","  private static String unsupportedCharacterError(String message, @Nullable InputComponent component) {","70","    String error = \"Character \\\\u0000 is not supported in issue message '\" + message + \"'\";","71","    if (component != null) {","72","      error += \", on component: \" + component.toString();","73","    }","74","    return error;","75","  }","76","","92","  public static void main (String[] args) {","93","","94","    new DefaultIssueLocation().message(\"pipo\");","95","","96","  }","97",""],"delete":["22","import org.apache.commons.lang.StringUtils;","39","    Preconditions.checkArgument(component != null, \"Component can't be null\");","58","    this.message = StringUtils.abbreviate(StringUtils.trim(message), MESSAGE_MAX_SIZE);"]}]}},"337a26aea27d440e56e1a34ef660be0edadd629c":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStepTest.java":[{"add":["159","    OrganizationDto organization = db.organizations().insert();","160","    ComponentDto otherProject = db.components().insertPublicProject(organization);","163","        .setProjectKey(otherProject.getDbKey())","167","    expectedException.expectMessage(\"ProjectKey in report (\" + otherProject.getDbKey() + \") is not consistent with projectKey under which the report has been submitted (\" + PROJECT_KEY + \")\");","173","  public void execute_sets_branch_even_if_MessageException_is_thrown_because_projectKey_in_report_is_different_from_componentKey_in_CE_task() {","174","    OrganizationDto organization = db.organizations().insert();","175","    ComponentDto otherProject = db.components().insertPublicProject(organization);","178","        .setProjectKey(otherProject.getDbKey())","179","        .build());","180","","181","    try {","182","      underTest.execute();","183","    } catch (MessageException e) {","184","      assertThat(analysisMetadataHolder.getBranch()).isNotNull();","185","    }","186","  }","187","","188","  @Test","189","  public void execute_sets_analysis_date_even_if_MessageException_is_thrown_because_projectKey_is_different_from_componentKey_in_CE_task() {","190","    OrganizationDto organization = db.organizations().insert();","191","    ComponentDto otherProject = db.components().insertPublicProject(organization);","192","    reportReader.setMetadata(","193","      ScannerReport.Metadata.newBuilder()","194","        .setProjectKey(otherProject.getDbKey())"],"delete":["161","        .setProjectKey(\"some other key\")","165","    expectedException.expectMessage(\"ProjectKey in report (some other key) is not consistent with projectKey under which the report as been submitted (\" + PROJECT_KEY + \")\");","171","  public void execute_sets_analysis_date_even_if_MessageException_is_thrown_because_projectKey_is_different_from_componentKey_in_CE_task() {","174","        .setProjectKey(\"some other key\")"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/LoadReportAnalysisMetadataHolderStep.java":[{"add":["90","    Runnable projectValidation = loadProject(reportMetadata, organization);","93","    projectValidation.run();","102","  \/**","103","   * @return a {@link Runnable} to execute some checks on the project at the end of the step","104","   *\/","105","  private Runnable loadProject(ScannerReport.Metadata reportMetadata, Organization organization) {","107","    String componentKey = ceTask.getComponentKey();","108","    if (componentKey == null) {","109","      throw MessageException.of(format(","110","        \"Compute Engine task component key is null. Project with UUID %s must have been deleted since report was uploaded. Can not proceed.\",","111","        ceTask.getComponentUuid()));","112","    }","115","    return () -> {","116","      if (!componentKey.equals(reportProjectKey)) {","117","        throw MessageException.of(format(","118","          \"ProjectKey in report (%s) is not consistent with projectKey under which the report has been submitted (%s)\",","119","          reportProjectKey,","120","          componentKey));","121","      }","122","      if (!dto.getOrganizationUuid().equals(organization.getUuid())) {","123","        throw MessageException.of(format(\"Project is not in the expected organization: %s\", organization.getKey()));","124","      }","125","      if (dto.getMainBranchProjectUuid() != null) {","126","        throw MessageException.of(\"Project should not reference a branch\");","127","      }","128","    };"],"delete":["90","    loadProject(reportMetadata, organization);","101","  private void loadProject(ScannerReport.Metadata reportMetadata, Organization organization) {","103","    checkProjectKeyConsistency(reportProjectKey);","105","    if (!dto.getOrganizationUuid().equals(organization.getUuid())) {","106","      throw MessageException.of(format(\"Project is not in the expected organization: %s\", organization.getKey()));","107","    }","108","    if (dto.getMainBranchProjectUuid() != null) {","109","      throw MessageException.of(\"Project should not reference a branch\");","110","    }","166","  private void checkProjectKeyConsistency(String reportProjectKey) {","167","    String componentKey = ceTask.getComponentKey();","168","    if (componentKey == null) {","169","      throw MessageException.of(format(","170","        \"Compute Engine task component key is null. Project with UUID %s must have been deleted since report was uploaded. Can not proceed.\",","171","        ceTask.getComponentUuid()));","172","    }","173","    if (!componentKey.equals(reportProjectKey)) {","174","      throw MessageException.of(format(","175","        \"ProjectKey in report (%s) is not consistent with projectKey under which the report as been submitted (%s)\",","176","        reportProjectKey,","177","        componentKey));","178","    }","179","  }","180",""]}]}},"9391fdfd8207d9fb3adba94024528dd3890ceee3":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/source\/FileSourceDto.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/source\/FileSourceDtoTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStepTest.java":"MODIFY"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/source\/FileSourceDto.java":[{"add":["34","import static java.lang.String.format;","35","","90","  public DbFileSources.Data decodeSourceData(byte[] binaryData) {","91","    try {","92","      return decodeSourceDataImpl(new ByteArrayInputStream(binaryData));","93","    } catch (IOException e) {","94","      throw new IllegalStateException(","95","        format(\"Fail to decompress and deserialize source data [id=%s,fileUuid=%s,projectUuid=%s]\", id, fileUuid, projectUuid),","96","        e);","97","    }","106","      return decodeSourceDataImpl(binaryInput);","109","    }","110","  }","111","","112","  private static DbFileSources.Data decodeSourceDataImpl(InputStream binaryInput) throws IOException {","113","    try (LZ4BlockInputStream lz4Input = new LZ4BlockInputStream(binaryInput)) {","114","      return DbFileSources.Data.parseFrom(lz4Input);"],"delete":["88","  public static DbFileSources.Data decodeSourceData(byte[] binaryData) {","89","    \/\/ stream is always closed","90","    return decodeSourceData(new ByteArrayInputStream(binaryData));","98","    LZ4BlockInputStream lz4Input = null;","100","      lz4Input = new LZ4BlockInputStream(binaryInput);","101","      return DbFileSources.Data.parseFrom(lz4Input);","104","    } finally {","105","      IOUtils.closeQuietly(lz4Input);"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/source\/FileSourceDtoTest.java":[{"add":["23","import org.junit.Rule;","25","import org.junit.rules.ExpectedException;","31","  @Rule","32","  public ExpectedException expectedException = ExpectedException.none();","49","","50","  @Test","51","  public void getSourceData_throws_ISE_with_id_fileUuid_and_projectUuid_in_message_when_data_cant_be_read() {","52","    long id = 12L;","53","    String fileUuid = \"file uuid\";","54","    String projectUuid = \"project uuid\";","55","    FileSourceDto underTest = new FileSourceDto()","56","        .setBinaryData(new byte[]{1, 2, 3, 4, 5})","57","        .setId(id)","58","        .setFileUuid(fileUuid)","59","        .setProjectUuid(projectUuid);","60","","61","    expectedException.expect(IllegalStateException.class);","62","    expectedException.expectMessage(\"Fail to decompress and deserialize source data [id=\" + id + \",fileUuid=\" + fileUuid + \",projectUuid=\" + projectUuid + \"]\");","63","","64","    underTest.getSourceData();","65","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/step\/PersistFileSourcesStepTest.java":[{"add":["113","    DbFileSources.Data data = fileSourceDto.getSourceData();","151","    DbFileSources.Data data = fileSourceDto.getSourceData();","182","    DbFileSources.Data data = fileSourceDto.getSourceData();","207","    DbFileSources.Data data = fileSourceDto.getSourceData();","232","    DbFileSources.Data data = fileSourceDto.getSourceData();","253","    DbFileSources.Data data = fileSourceDto.getSourceData();"],"delete":["113","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","151","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","182","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","207","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","232","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());","253","    DbFileSources.Data data = FileSourceDto.decodeSourceData(fileSourceDto.getBinaryData());"]}]}},"e481af9138fa10ce01b0dfe9f7b0bd961f8408d7":{"changes":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/ScannerMediumTester.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/branch\/BranchMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/MetadataPublisherTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositoriesProvider.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisher.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProvider.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/DefaultBranchConfiguration.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProviderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfiguration.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfigurationProviderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/MetadataPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisherTest.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/ScannerMediumTester.java":[{"add":["397","    private String longLivingSonarReferenceBranch = null;","412","    public String targetScmBranch() {","418","    public String longLivingSonarReferenceBranch() {","419","      return longLivingSonarReferenceBranch;","443","  public ScannerMediumTester setLongLivingSonarReferenceBranch(String longLivingSonarReferenceBranch) {","444","    this.branchConfiguration.longLivingSonarReferenceBranch = longLivingSonarReferenceBranch;","445","    return this;","446","  }","447",""],"delete":["54","import org.sonar.core.config.ScannerProperties;","58","import org.sonar.scanner.report.ReportPublisher;","399","    private String branchBase = null;","414","    public String branchTarget() {","420","    public String branchBase() {","421","      return branchBase;"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/branch\/BranchMediumTest.java":[{"add":["97","      .setLongLivingSonarReferenceBranch(branchTarget)"],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/MetadataPublisherTest.java":[{"add":["187","    when(branches.longLivingSonarReferenceBranch()).thenReturn(branchTarget);"],"delete":["38","import org.sonar.api.config.internal.MapSettings;","39","import org.sonar.core.config.ScannerProperties;","189","    when(branches.branchTarget()).thenReturn(branchTarget);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositoriesProvider.java":[{"add":["38","      project = loader.load(projectKey.get(), isIssuesMode, branchConfig.longLivingSonarReferenceBranch());"],"delete":["38","      project = loader.load(projectKey.get(), isIssuesMode, branchConfig.branchBase());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisher.java":[{"add":["58","    String targetScmBranch = branchConfiguration.targetScmBranch();","59","    if (scmConfiguration.isDisabled() || !branchConfiguration.isShortOrPullRequest() || targetScmBranch == null) {","69","    int count = writeChangedLines(provider, writer, targetScmBranch);","74","  private int writeChangedLines(ScmProvider provider, ScannerReportWriter writer, String targetScmBranch) {","80","    Map<Path, Set<Integer>> pathSetMap = provider.branchChangedLines(targetScmBranch, rootBaseDir, changedFiles.keySet());"],"delete":["58","    if (scmConfiguration.isDisabled() || !branchConfiguration.isShortOrPullRequest() || branchConfiguration.branchTarget() == null) {","68","    int count = writeChangedLines(provider, writer);","73","  private int writeChangedLines(ScmProvider provider, ScannerReportWriter writer) {","74","    String targetBranchName = branchConfiguration.branchTarget();","75","    if (targetBranchName == null) {","76","      return 0;","77","    }","83","    Map<Path, Set<Integer>> pathSetMap = provider.branchChangedLines(targetBranchName, rootBaseDir, changedFiles.keySet());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ProjectScanContainer.java":[{"add":["281","      LOG.info(\"Pull request {} for merge into {} from {}\", branchConfig.pullRequestKey(), pullRequestBaseToDisplayName(branchConfig.targetScmBranch()), branchConfig.branchName());"],"delete":["281","      LOG.info(\"Pull request {} for merge into {} from {}\", branchConfig.pullRequestKey(), pullRequestBaseToDisplayName(branchConfig.branchBase()), branchConfig.branchName());"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProvider.java":[{"add":["65","    if (branchConfiguration.isShortOrPullRequest() && branchConfiguration.targetScmBranch() != null) {","69","        Collection<Path> changedFiles = scmProvider.branchChangedFiles(branchConfiguration.targetScmBranch(), rootBaseDir);"],"delete":["65","    if (branchConfiguration.isShortOrPullRequest() && branchConfiguration.branchTarget() != null) {","69","        Collection<Path> changedFiles = scmProvider.branchChangedFiles(branchConfiguration.branchTarget(), rootBaseDir);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/DefaultBranchConfiguration.java":[{"add":["39","  public String targetScmBranch() {","45","  public String longLivingSonarReferenceBranch() {"],"delete":["39","  public String branchTarget() {","45","  public String branchBase() {"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scm\/ScmChangedFilesProviderTest.java":[{"add":["69","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","79","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","91","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","121","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");","131","    when(branchConfiguration.targetScmBranch()).thenReturn(\"target\");"],"delete":["69","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","79","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","91","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","121","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");","131","    when(branchConfiguration.branchTarget()).thenReturn(\"target\");"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfiguration.java":[{"add":["43","   * For long\/short living branches, this is the value of sonar.branch.name, and fallback on the default branch name configured in SQ","44","   * For PR: the name of the branch containing PR changes (sonar.pullrequest.branch)","45","   * Only @null if the branch feature is not available.","51","   * The long living server branch from which we should load project settings\/quality profiles\/compare changed files\/...","52","   * For long living branches, this is the sonar.branch.target (default to default branch) in case of first analysis,","53","   * otherwise it's the branch itself.","54","   * For short living branches, we look at sonar.branch.target (default to default branch). If it exists but is a short living branch or PR, we will","55","   * transitively use its own target.","56","   * For PR, we look at sonar.pullrequest.base (default to default branch). If it exists but is a short living branch or PR, we will","57","   * transitively use its own target.","58","   * Only @null if the branch feature is not available.","61","  String longLivingSonarReferenceBranch();","64","   * Raw value of sonar.branch.target or sonar.pullrequest.base (fallback to the default branch), will be used by the SCM to compute changed files and changed lines.","65","   * @null for long living branches and if the branch feature is not available","68","  String targetScmBranch();","76",""],"delete":["43","   * The name of the branch.","49","   * The name of the target branch to merge into.","52","  String branchTarget();","55","   * The name of the base branch to determine project repository and changed files.","56","   *","57","   * Note: this is important for the scanner during the analysis of long living branches.","58","   * For short living branches, branchBase is always the same as branchTarget.","59","   * For long living branches, branchBase is the target in case of first analysis,","60","   * otherwise it's the branch itself.","63","  String branchBase();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/branch\/BranchConfigurationProviderTest.java":[{"add":["100","    assertThat(result.targetScmBranch()).isNull();"],"delete":["100","    assertThat(result.branchTarget()).isNull();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/MetadataPublisher.java":[{"add":["136","    String referenceBranch = branchConfiguration.longLivingSonarReferenceBranch();","137","    if (referenceBranch != null) {","138","      builder.setMergeBranchName(referenceBranch);"],"delete":["136","    String branchTarget = branchConfiguration.branchTarget();","137","    if (branchTarget != null) {","138","      builder.setMergeBranchName(branchTarget);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/report\/ChangedLinesPublisherTest.java":[{"add":["70","    when(branchConfiguration.targetScmBranch()).thenReturn(TARGET_BRANCH);","94","    when(branchConfiguration.targetScmBranch()).thenReturn(null);"],"delete":["70","    when(branchConfiguration.branchTarget()).thenReturn(TARGET_BRANCH);","94","    when(branchConfiguration.branchTarget()).thenReturn(null);"]}]}},"0d7956367e37a47c21cb05a52b118b38a2c17b66":{"changes":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModuleTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModule.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModuleTest.java":[{"add":[],"delete":["23","import java.util.Collections;","62","    assertThat(module.sources()).isEqualTo(Collections.singletonList(\"file1\"));","63","    assertThat(module.tests()).isEqualTo(Collections.singletonList(\"test1\"));"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputModule.java":[{"add":[],"delete":["25","import java.util.ArrayList;","28","import java.util.List;","49","  private final List<String> sources;","50","  private final List<String> tests;","74","    this.sources = Collections.unmodifiableList(new ArrayList<>(definition.sources()));","75","    this.tests = Collections.unmodifiableList(new ArrayList<>(definition.tests()));","157","  \/**","158","   * @return Source files and folders.","159","   *\/","160","  public List<String> sources() {","161","    return sources;","162","  }","163","","164","  public List<String> tests() {","165","    return tests;","166","  }","167",""]}]}},"3ed96a6b902132626d4f6f4a76139613d7cbb81d":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesDao.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundred.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/queue\/ReportSubmitterTest.java":"MODIFY","server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/favorite\/FavoriteUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77Test.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesMapper.java":"MODIFY","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest\/schema.sql":"ADD","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":"MODIFY","server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/favorite\/FavoriteUpdater.java":"MODIFY","\/dev\/null":"DELETE","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/favorite\/ws\/AddAction.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest.java":"ADD"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesDao.java":[{"add":["162","  public List<PropertyDto> selectByKeyAndUserIdAndComponentQualifier(DbSession session, String key, int userId, String qualifier) {","163","    return getMapper(session).selectByKeyAndUserIdAndComponentQualifier(key, userId, qualifier);","164","  }","165",""],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundred.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/queue\/ReportSubmitterTest.java":[{"add":["31","import org.sonar.api.i18n.I18n;","46","import org.sonar.server.es.TestProjectIndexers;","57","import static java.util.stream.IntStream.rangeClosed;","86","  public DbTester db = DbTester.create();","90","","92","  private TestProjectIndexers projectIndexers = new TestProjectIndexers();","94","  private ComponentUpdater componentUpdater = new ComponentUpdater(db.getDbClient(), mock(I18n.class), mock(System2.class), permissionTemplateService,","95","    new FavoriteUpdater(db.getDbClient()), projectIndexers);","163","    when(permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY))).thenReturn(true);","168","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","171","      && submit.getComponent().filter(cpt -> cpt.getUuid().equals(createdProject.uuid()) && cpt.getMainComponentUuid().equals(createdProject.uuid())).isPresent()","176","  public void add_project_as_favorite_when_project_creator_permission_on_permission_template() {","177","    UserDto user = db.users().insertUser();","178","    OrganizationDto organization = db.organizations().insert();","179","    userSession","180","      .logIn(user)","181","      .addPermission(OrganizationPermission.SCAN, organization.getUuid())","182","      .addPermission(PROVISION_PROJECTS, organization);","183","    mockSuccessfulPrepareSubmitCall();","184","    when(permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY))).thenReturn(true);","185","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","186","","187","    underTest.submit(organization.getKey(), PROJECT_KEY, null, PROJECT_NAME, emptyMap(), IOUtils.toInputStream(\"{binary}\"));","188","","189","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","190","    assertThat(db.favorites().hasFavorite(createdProject, user.getId())).isTrue();","191","  }","192","","193","  @Test","194","  public void do_no_add_favorite_when_no_project_creator_permission_on_permission_template() {","205","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","206","    assertThat(db.favorites().hasNoFavorite(createdProject)).isTrue();","207","  }","208","","209","  @Test","210","  public void do_no_add_favorite_when_already_100_favorite_projects_and_no_project_creator_permission_on_permission_template() {","211","    UserDto user = db.users().insertUser();","212","    rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","213","    OrganizationDto organization = db.organizations().insert();","214","    userSession","215","      .logIn(user)","216","      .addPermission(OrganizationPermission.SCAN, organization.getUuid())","217","      .addPermission(PROVISION_PROJECTS, organization);","218","    mockSuccessfulPrepareSubmitCall();","219","    when(permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY))).thenReturn(true);","220","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","221","","222","    underTest.submit(organization.getKey(), PROJECT_KEY, null, PROJECT_NAME, emptyMap(), IOUtils.toInputStream(\"{binary}\"));","223","","224","    ComponentDto createdProject = db.getDbClient().componentDao().selectByKey(db.getSession(), PROJECT_KEY).get();","225","    assertThat(db.favorites().hasNoFavorite(createdProject)).isTrue();"],"delete":["45","import org.sonar.server.component.NewComponent;","62","import static org.mockito.ArgumentMatchers.isNull;","70","import static org.sonar.db.component.ComponentTesting.newPrivateProjectDto;","86","  public DbTester db = DbTester.create(System2.INSTANCE);","91","  private ComponentUpdater componentUpdater = mock(ComponentUpdater.class);","93","  private FavoriteUpdater favoriteUpdater = mock(FavoriteUpdater.class);","109","","110","    ComponentDto project = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","112","    when(componentUpdater.create(any(), any(), any())).thenReturn(project);","131","","132","    ComponentDto project = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","134","    when(componentUpdater.createWithoutCommit(any(), any(), any())).thenReturn(project);","141","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(project));","155","    verifyZeroInteractions(favoriteUpdater);","168","","170","    ComponentDto createdProject = newPrivateProjectDto(organization, PROJECT_UUID).setDbKey(PROJECT_KEY);","171","    when(componentUpdater.createWithoutCommit(any(), any(), isNull())).thenReturn(createdProject);","172","    when(","173","      permissionTemplateService.wouldUserHaveScanPermissionWithDefaultTemplate(any(DbSession.class), eq(organization.getUuid()), any(), eq(PROJECT_KEY)))","174","        .thenReturn(true);","181","      && submit.getComponent().filter(cpt -> cpt.getUuid().equals(PROJECT_UUID) && cpt.getMainComponentUuid().equals(PROJECT_UUID)).isPresent()","183","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(createdProject));","187","  public void no_favorite_when_no_project_creator_permission_on_permission_template() {","191","","192","    ComponentDto createdProject = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","193","    when(componentUpdater.createWithoutCommit(any(), any(), isNull())).thenReturn(createdProject);","201","    verifyZeroInteractions(favoriteUpdater);","202","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(createdProject));","210","","211","    ComponentDto project = newPrivateProjectDto(db.getDefaultOrganization(), PROJECT_UUID).setDbKey(PROJECT_KEY);","213","    when(componentUpdater.createWithoutCommit(any(), any(), any())).thenReturn(project);","220","    verify(componentUpdater).commitAndIndex(any(DbSession.class), eq(project));","252","","255","","323","    when(componentUpdater.create(any(DbSession.class), any(NewComponent.class), eq(null))).thenReturn(new ComponentDto().setUuid(PROJECT_UUID).setDbKey(PROJECT_KEY));"]}],"server\/sonar-server-common\/src\/test\/java\/org\/sonar\/server\/favorite\/FavoriteUpdaterTest.java":[{"add":["21","import java.util.stream.IntStream;","30","import org.sonar.db.user.UserDto;","39","  public DbTester db = DbTester.create();","48","    ComponentDto project = db.components().insertPrivateProject();","49","    UserDto user = db.users().insertUser();","50","    assertNoFavorite(project, user);","52","    underTest.add(dbSession, project, user.getId(), true);","54","    assertFavorite(project, user);","59","    ComponentDto project = db.components().insertPrivateProject();","61","    underTest.add(dbSession, project, null, true);","62","","63","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","64","      .setComponentId(project.getId())","65","      .build(), dbSession)).isEmpty();","66","  }","67","","68","  @Test","69","  public void do_not_add_favorite_when_already_100_favorite_projects() {","70","    UserDto user = db.users().insertUser();","71","    IntStream.rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","72","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","73","      .setUserId(user.getId())","74","      .build(), dbSession)).hasSize(100);","75","    ComponentDto project = db.components().insertPrivateProject();","76","","77","    underTest.add(dbSession, project, user.getId(), false);","78","","79","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","80","      .setUserId(user.getId())","81","      .build(), dbSession)).hasSize(100);","82","  }","83","","84","  @Test","85","  public void do_not_add_favorite_when_already_100_favorite_portfolios() {","86","    UserDto user = db.users().insertUser();","87","    IntStream.rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","88","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","89","      .setUserId(user.getId())","90","      .build(), dbSession)).hasSize(100);","91","    ComponentDto project = db.components().insertPrivateProject();","92","","93","    underTest.add(dbSession, project, user.getId(), false);","94","","95","    assertThat(dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()","96","      .setUserId(user.getId())","97","      .build(), dbSession)).hasSize(100);","98","  }","99","","100","  @Test","101","  public void fail_when_more_than_100_projects_favorites() {","102","    UserDto user = db.users().insertUser();","103","    IntStream.rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","104","    ComponentDto project = db.components().insertPrivateProject();","105","","106","    expectedException.expect(IllegalArgumentException.class);","107","    expectedException.expectMessage(\"You cannot have more than 100 favorites on components with qualifier 'TRK'\");","108","","109","    underTest.add(dbSession, project, user.getId(), true);","114","    ComponentDto project = db.components().insertPrivateProject();","115","    UserDto user = db.users().insertUser();","116","    underTest.add(dbSession, project, user.getId(), true);","117","    assertFavorite(project, user);","120","    expectedException.expectMessage(String.format(\"Component '%s' is already a favorite\", project.getKey()));","122","    underTest.add(dbSession, project, user.getId(), true);","125","  private void assertFavorite(ComponentDto project, UserDto user) {","127","      .setUserId(user.getId())","128","      .setComponentId(project.getId())","132","  private void assertNoFavorite(ComponentDto project, UserDto user) {","134","      .setUserId(user.getId())","135","      .setComponentId(project.getId())"],"delete":["24","import org.sonar.api.utils.System2;","29","import org.sonar.db.component.ComponentTesting;","30","import org.sonar.db.organization.OrganizationTesting;","36","  private static final long COMPONENT_ID = 23L;","37","  private static final String COMPONENT_KEY = \"K1\";","38","  private static final ComponentDto COMPONENT = ComponentTesting.newPrivateProjectDto(OrganizationTesting.newOrganizationDto())","39","    .setId(COMPONENT_ID)","40","    .setDbKey(COMPONENT_KEY);","41","  private static final int USER_ID = 42;","46","  public DbTester db = DbTester.create(System2.INSTANCE);","55","    assertNoFavorite();","57","    underTest.add(dbSession, COMPONENT, USER_ID);","59","    assertFavorite();","64","    underTest.add(dbSession, COMPONENT, null);","66","    assertNoFavorite();","71","    underTest.add(dbSession, COMPONENT, USER_ID);","72","    assertFavorite();","75","    expectedException.expectMessage(\"Component 'K1' is already a favorite\");","77","    underTest.add(dbSession, COMPONENT, USER_ID);","80","  private void assertFavorite() {","82","      .setUserId(USER_ID)","83","      .setComponentId(COMPONENT_ID)","87","  private void assertNoFavorite() {","89","      .setUserId(USER_ID)","90","      .setComponentId(COMPONENT_ID)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["27","import org.sonar.db.DbSession;","31","import org.sonar.db.user.UserDto;","52","import static java.util.stream.IntStream.rangeClosed;","58","import static org.mockito.Mockito.when;","88","  private PermissionTemplateService permissionTemplateService = mock(PermissionTemplateService.class);","93","      new ComponentUpdater(db.getDbClient(), i18n, system2, permissionTemplateService, new FavoriteUpdater(db.getDbClient()),","239","  public void add_project_to_user_favorites_if_project_creator_is_defined_in_permission_template() {","240","    OrganizationDto organization = db.organizations().insert();","241","    UserDto user = db.users().insertUser();","242","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","243","    userSession.logIn(user).addPermission(PROVISION_PROJECTS, organization);","244","","245","    ws.newRequest()","246","      .setParam(\"key\", DEFAULT_PROJECT_KEY)","247","      .setParam(\"name\", DEFAULT_PROJECT_NAME)","248","      .setParam(\"organization\", organization.getKey())","249","      .executeProtobuf(CreateWsResponse.class);","250","","251","    ComponentDto project = db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get();","252","    assertThat(db.favorites().hasFavorite(project, user.getId())).isTrue();","253","  }","254","","255","  @Test","256","  public void do_not_add_project_to_user_favorites_if_project_creator_is_defined_in_permission_template_and_already_100_favorites() {","257","    OrganizationDto organization = db.organizations().insert();","258","    UserDto user = db.users().insertUser();","259","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class))).thenReturn(true);","260","    rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","261","    userSession.logIn(user).addPermission(PROVISION_PROJECTS, organization);","262","","263","    ws.newRequest()","264","      .setParam(\"key\", DEFAULT_PROJECT_KEY)","265","      .setParam(\"name\", DEFAULT_PROJECT_NAME)","266","      .setParam(\"organization\", organization.getKey())","267","      .executeProtobuf(CreateWsResponse.class);","268","","269","    ComponentDto project = db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get();","270","    assertThat(db.favorites().hasNoFavorite(project)).isTrue();","271","  }","272","","273","  @Test"],"delete":["88","      new ComponentUpdater(db.getDbClient(), i18n, system2, mock(PermissionTemplateService.class), new FavoriteUpdater(db.getDbClient()),"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77Test.java":[{"add":["38","    verifyMigrationCount(underTest, 10);"],"delete":["38","    verifyMigrationCount(underTest, 9);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/property\/PropertiesMapper.java":[{"add":["40","  List<PropertyDto> selectByKeyAndUserIdAndComponentQualifier(@Param(\"key\") String key, @Param(\"userId\") int userId, @Param(\"qualifier\") String qualifier);","41",""],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest\/schema.sql":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":[{"add":["42","import org.sonar.db.component.ComponentTesting;","55","import static org.sonar.db.property.PropertyTesting.newPropertyDto;","405","      .extracting(PropertyDto::getValue, PropertyDto::getResourceId)","406","      .containsExactlyInAnyOrder(","407","        tuple(\"value\", project1.getId()),","408","        tuple(\"value\", project2.getId()),","409","        tuple(\"value\", null));","410","  }","411","","412","  @Test","413","  public void selectByKeyAndUserIdAndComponentQualifier() {","414","    UserDto user1 = db.users().insertUser();","415","    UserDto user2 = db.users().insertUser();","416","    ComponentDto project1 = db.components().insertPrivateProject();","417","    ComponentDto file1 = db.components().insertComponent(ComponentTesting.newFileDto(project1));","418","    ComponentDto project2 = db.components().insertPrivateProject();","419","    db.properties().insertProperties(","420","      newPropertyDto(\"key\", \"1\", project1, user1),","421","      newPropertyDto(\"key\", \"2\", project2, user1),","422","      newPropertyDto(\"key\", \"3\", file1, user1),","423","      newPropertyDto(\"another key\", \"4\", project1, user1),","424","      newPropertyDto(\"key\", \"5\", project1, user2),","425","      newGlobalPropertyDto(\"key\", \"global\"));","426","","427","    assertThat(underTest.selectByKeyAndUserIdAndComponentQualifier(db.getSession(), \"key\", user1.getId(), \"TRK\"))","428","      .extracting(PropertyDto::getValue).containsExactlyInAnyOrder(\"1\", \"2\");","429","    assertThat(underTest.selectByKeyAndUserIdAndComponentQualifier(db.getSession(), \"key\", user1.getId(), \"FIL\"))","430","      .extracting(PropertyDto::getValue).containsExactlyInAnyOrder(\"3\");","431","    assertThat(underTest.selectByKeyAndUserIdAndComponentQualifier(db.getSession(), \"key\", user2.getId(), \"FIL\")).isEmpty();"],"delete":["403","    .extracting(PropertyDto::getValue, PropertyDto::getResourceId)","404","    .containsExactlyInAnyOrder(","405","      tuple(\"value\", project1.getId()),","406","      tuple(\"value\", project2.getId()),","407","      tuple(\"value\", null)","408","    );"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DbVersion77.java":[{"add":["37","      .add(2608, \"Delete favorites on not supported components\", DeleteFavouritesOnNotSupportedComponentQualifiers.class)","38","      .add(2609, \"Delete exceeding favorites when there are more than 100 for a user\", DeleteFavoritesExceedingOneHundred.class);"],"delete":["37","      .add(2608, \"Delete favorites on not supported components\", DeleteFavouritesOnNotSupportedComponentQualifiers.class);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ComponentUpdater.java":[{"add":["74","   * - Index component in es indexes","133","  private void createMainBranch(DbSession session, String componentUuid) {","160","      favoriteUpdater.add(dbSession, componentDto, userId, false);"],"delete":["74","   * - Index component if es indexes","133","  private BranchDto createMainBranch(DbSession session, String componentUuid) {","140","","142","    return branch;","162","      favoriteUpdater.add(dbSession, componentDto, userId);"]}],"server\/sonar-server-common\/src\/main\/java\/org\/sonar\/server\/favorite\/FavoriteUpdater.java":[{"add":["43","  public void add(DbSession dbSession, ComponentDto componentDto, @Nullable Integer userId, boolean failIfTooManyFavorites) {","54","","55","    List<PropertyDto> existingFavorites = dbClient.propertiesDao().selectByKeyAndUserIdAndComponentQualifier(dbSession, PROP_FAVORITE_KEY, userId, componentDto.qualifier());","56","    if (existingFavorites.size() >= 100) {","57","      checkArgument(!failIfTooManyFavorites, \"You cannot have more than 100 favorites on components with qualifier '%s'\", componentDto.qualifier());","58","      return;","59","    }"],"delete":["43","  public void add(DbSession dbSession, ComponentDto componentDto, @Nullable Integer userId) {"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ComponentUpdaterTest.java":[{"add":["28","import org.sonar.db.DbSession;","42","import static java.util.stream.IntStream.rangeClosed;","218","    when(permissionTemplateService.hasDefaultTemplateWithPermissionOnProjectCreator(any(DbSession.class), any(ComponentDto.class)))","219","      .thenReturn(true);","220","","221","    ComponentDto dto = underTest.create(db.getSession(), project, userDto.getId());","222","","223","    assertThat(db.favorites().hasFavorite(dto, userDto.getId())).isTrue();","224","  }","225","","226","  @Test","227","  public void do_not_add_project_to_user_favorites_if_project_creator_is_defined_in_permission_template_and_already_100_favorites() {","228","    UserDto user = db.users().insertUser();","229","    rangeClosed(1, 100).forEach(i -> db.favorites().add(db.components().insertPrivateProject(), user.getId()));","230","    NewComponent project = NewComponent.newComponentBuilder()","231","      .setKey(DEFAULT_PROJECT_KEY)","232","      .setName(DEFAULT_PROJECT_NAME)","233","      .setOrganizationUuid(db.getDefaultOrganization().getUuid())","234","      .build();","240","      user.getId());","242","    assertThat(db.favorites().hasFavorite(dto, user.getId())).isFalse();"],"delete":["221","      userDto.getId());","223","    assertThat(db.favorites().hasFavorite(dto, userDto.getId())).isTrue();"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/favorite\/ws\/AddAction.java":[{"add":["63","        \"Only 100 components by qualifier can be added as favorite.<br>\" +","67","        new Change(\"7.7\", \"It's no longer possible to have more than 100 favorites by qualifier\"),","68","        new Change(\"7.7\", \"It's no longer possible to set a directory as favorite\"),","93","        favoriteUpdater.add(dbSession, componentDto, userSession.isLoggedIn() ? userSession.getUserId() : null, true);"],"delete":["66","        new Change(\"7.7\", \"It's no more possible to set a directory as favorite\"),","91","        favoriteUpdater.add(dbSession, componentDto, userSession.isLoggedIn() ? userSession.getUserId() : null);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":[{"add":["130","  <select id=\"selectByKeyAndUserIdAndComponentQualifier\" parameterType=\"map\" resultType=\"ScrapProperty\">","131","    select","132","    <include refid=\"columnsToScrapPropertyDto\"\/>","133","    from","134","    properties p","135","      inner join projects prj on prj.id=p.resource_id and prj.qualifier = #{qualifier, jdbcType=VARCHAR}","136","    where","137","      p.prop_key = #{key, jdbcType=VARCHAR}","138","      and p.user_id = #{userId, jdbcType=INTEGER}","139","  <\/select>","140",""],"delete":[]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v77\/DeleteFavoritesExceedingOneHundredTest.java":[{"add":[],"delete":[]}]}},"a1e8a7d90fc41f3174b5b28405a3fa8bdeebe247":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/styles\/components\/page.css":[{"add":["32","  z-index: var(--normalZIndex);","260","  position: relative;","261","  z-index: var(--normalZIndex);","313","  position: relative;","314","  z-index: var(--aboveNormalZIndex);"],"delete":[]}]}},"4214a7a047224ad450230ce914598c6b5e137392":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RegisterQualityProfiles.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RegisterQualityProfiles.java":[{"add":[],"delete":["160","        LOGGER.info(\"Built-in quality profile [{}] does not have any active rules\", qp.getName());"]}]}},"7baab045db52d14f103bcce623caa12a6dd19101":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/report\/MetadataPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/branch\/BranchMediumTest.java":"ADD"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/batch\/report\/MetadataPublisher.java":[{"add":["57","    String branch = root.getBranch();"],"delete":["21","import org.sonar.api.CoreProperties;","58","    String branch = root.properties().get(CoreProperties.PROJECT_BRANCH_PROPERTY);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/batch\/mediumtest\/branch\/BranchMediumTest.java":[{"add":[],"delete":[]}]}},"9a62922f872af2d3dbbe514cd9c47137d66acded":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializerTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializer.java":[{"add":["21","import org.sonar.api.platform.Server;","22","import org.sonar.api.platform.ServerStartHandler;","35","public class CeQueueInitializer implements ServerStartHandler {","41","  private boolean done = false;","51","  public void onServerStart(Server server) {","52","    if (!done) {","53","      initCe();","54","      this.done = true;","55","    }","56","  }","57","","58","  private void initCe() {"],"delete":["21","import org.picocontainer.Startable;","34","public class CeQueueInitializer implements Startable {","49","  public void start() {","61","  @Override","62","  public void stop() {","63","    \/\/ nothing to do","64","  }","65",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/platformlevel\/PlatformLevel4.java":[{"add":["715","      \/\/ Compute engine (must be after Views and Developer Cockpit)","716","      CeModule.class,","717","      CeQueueModule.class,","718","      CeTaskProcessorModule.class,","719","      CeWsModule.class,","720","      ReportProcessingModule.class,","721",""],"delete":["707","      \/\/ Compute engine","708","      CeModule.class,","709","      CeQueueModule.class,","710","      CeTaskProcessorModule.class,","711","      CeWsModule.class,","712","      ReportProcessingModule.class,","713",""]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/queue\/CeQueueInitializerTest.java":[{"add":["28","import org.sonar.api.platform.Server;","36","import org.sonar.server.computation.queue.report.ReportFiles;","42","import static org.mockito.Mockito.reset;","43","import static org.mockito.Mockito.verifyZeroInteractions;","54","  Server server = mock(Server.class);","68","    underTest.onServerStart(server);","75","    underTest.onServerStart(server);","84","    underTest.onServerStart(server);","90","  @Test","91","  public void onServerStart_has_no_effect_if_called_twice_to_support_medium_test_doing_startup_tasks_multiple_times() {","92","","93","    underTest.onServerStart(server);","94","","95","    reset(cleaner, scheduler);","96","","97","    underTest.onServerStart(server);","98","","99","    verifyZeroInteractions(cleaner, scheduler);","100","","101","  }","102",""],"delete":["33","import org.sonar.server.computation.queue.report.ReportFiles;","64","    underTest.start();","71","    underTest.start();","80","    underTest.start();"]}]}},"72f20e1066197e64b7e5d348d9f1bc2466073f2e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["258","        .forEach(q::should);"],"delete":["258","        .forEach(q::filter);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":[{"add":["225","  public void when_searching_for_several_tags_combine_them_with_OR() throws IOException {","226","    OrganizationDto organization = dbTester.organizations().insert();","227","    RuleDefinitionDto bothTagsRule = createJavaRule();","228","    insertMetadata(organization, bothTagsRule, setTags(\"tag1\", \"tag2\"));","229","    RuleDefinitionDto oneTagRule = createJavaRule();","230","    insertMetadata(organization, oneTagRule, setTags(\"tag1\"));","231","    RuleDefinitionDto otherTagRule = createJavaRule();","232","    insertMetadata(organization, otherTagRule, setTags(\"tag2\"));","233","    RuleDefinitionDto noTagRule = createJavaRule();","234","    insertMetadata(organization, noTagRule, setTags());","235","    indexRules();","236","","237","    Consumer<TestRequest> request = r -> r","238","      .setParam(\"f\", \"repo,name\")","239","      .setParam(\"tags\", \"tag1,tag2\")","240","      .setParam(\"organization\", organization.getKey());","241","    verify(request, bothTagsRule, oneTagRule, otherTagRule);","242","  }","243","","244","  @Test","302","  public void should_not_return_tags_of_foreign_organization() throws IOException {","303","    OrganizationDto organizationWithSpecificTags = dbTester.organizations().insert();","304","    OrganizationDto myOrganization = dbTester.organizations().insert();","305","    RuleDefinitionDto rule = dbTester.rules().insert(setSystemTags(\"system1\", \"system2\"));","306","    insertMetadata(organizationWithSpecificTags, rule, setTags(\"tag1\", \"tag2\"));","307","    indexRules();","308","","309","    SearchResponse result = ws.newRequest()","310","      .setParam(\"facets\", \"tags\")","311","      .setParam(\"f\", \"tags\")","312","      .setParam(\"organization\", myOrganization.getKey())","313","      .executeProtobuf(SearchResponse.class);","314","","315","    assertThat(result.getRulesList()).extracting(Rule::getKey).containsExactly(rule.getKey().toString());","316","    assertThat(result.getFacets().getFacets(0).getValuesList())","317","      .extracting(v -> tuple(v.getVal(), v.getCount()))","318","      .containsExactly(","319","        tuple(\"system1\", 1L),","320","        tuple(\"system2\", 1L)","321","      );","322","  }","323","","324","  @Test"],"delete":[]}]}},"49ee415f4a13e435f5d86a125666532b8fb029a9":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueMessage.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueMessage-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueMessage.tsx":[{"add":["40","    <div className=\"issue-message break-word\">"],"delete":["40","    <div className=\"issue-message\">"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueMessage-test.tsx.snap":[{"add":["4","  className=\"issue-message break-word\"","23","  className=\"issue-message break-word\"","51","  className=\"issue-message break-word\"","79","  className=\"issue-message break-word\""],"delete":["4","  className=\"issue-message\"","23","  className=\"issue-message\"","51","  className=\"issue-message\"","79","  className=\"issue-message\""]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/init\/misc.css":[{"add":["582","","583",".break-word {","584","  word-break: break-word;","585","}"],"delete":[]}]}},"12f9ab1d2fbe3850c87e08e2792865a06856ef16":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/about\/components\/AboutApp.js":[{"add":["80","      \/\/ $FlowFixMe","81","      document.documentElement.classList.add('white-page');","89","    \/\/ $FlowFixMe","90","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["165","    \/\/ $FlowFixMe","166","    document.documentElement.classList.add('white-page');","225","    \/\/ $FlowFixMe","226","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/QualityGatesApp.js":[{"add":["41","    \/\/ $FlowFixMe","42","    document.documentElement.classList.add('white-page');","52","    \/\/ $FlowFixMe","53","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":[{"add":["79","    \/\/ $FlowFixMe","80","    document.documentElement.classList.add('white-page');","104","    \/\/ $FlowFixMe","105","    document.documentElement.classList.remove('white-page');"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["103","    \/\/ $FlowFixMe","105","    \/\/ $FlowFixMe","106","    document.documentElement.classList.add('white-page');","139","    \/\/ $FlowFixMe","141","    \/\/ $FlowFixMe","142","    document.documentElement.classList.remove('white-page');"],"delete":[]}]}},"23af6b337c69be5ceef1060ac507e72a3eadf615":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/Form.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["1113","project_deletion.resource_deleted=Project \"{0}\" has been successfully deleted."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/Form.tsx":[{"add":["24","import addGlobalSuccessMessage from '..\/..\/app\/utils\/addGlobalSuccessMessage';","39","        addGlobalSuccessMessage(","40","          translateWithParameters('project_deletion.resource_deleted', component.name)","41","        );"],"delete":[]}]}},"b226884e6334d06b73005852500a16074e2b3495":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/CoveredFilesActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/index\/UserIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/AddMemberActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/RemoveMemberActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexDebtTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/index\/ComponentIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ShowActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleCreatorTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/telemetry\/TelemetryDaemonTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/TagsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/InheritanceActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projecttag\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangeParentActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchResult.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/DeleteActionTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/internal\/TestSystem2.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/ScmAccountToUserLoaderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/DeactivateActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileComparisonTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/Facets.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexSearchTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/test\/index\/TestIndex.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionComponentsTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/ListActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchIdResult.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/OrganizationCreationImplTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/index\/TestIndexTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/ws\/SearchAction.java":[{"add":["44","import org.sonar.api.utils.System2;","120","  private final System2 system2;","123","    SearchResponseLoader searchResponseLoader, SearchResponseFormat searchResponseFormat, System2 system2) {","129","    this.system2 = system2;","339","      facets = new Facets(result, system2.getDefaultTimeZone());","376","  private Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {","387","    return new Facets(orderedFacets, system2.getDefaultTimeZone());"],"delete":["121","    SearchResponseLoader searchResponseLoader, SearchResponseFormat searchResponseFormat) {","336","      facets = new Facets(result);","373","  private static Facets reorderFacets(@Nullable Facets facets, Collection<String> orderedNames) {","384","    return new Facets(orderedFacets);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/CoveredFilesActionTest.java":[{"add":["26","import org.sonar.api.utils.System2;","61","  private TestIndex testIndex = new TestIndex(es.client(), System2.INSTANCE);"],"delete":["60","  private TestIndex testIndex = new TestIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/index\/UserIndexTest.java":[{"add":["28","import org.sonar.api.utils.System2;","54","    underTest = new UserIndex(esTester.client(), System2.INSTANCE);"],"delete":["53","    underTest = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/AddMemberActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","71","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["70","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/RemoveMemberActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","83","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["82","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionTest.java":[{"add":["108","  private RuleIndex ruleIndex = new RuleIndex(es.client() ,system2);"],"delete":["108","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexDebtTest.java":[{"add":["33","import org.sonar.api.utils.internal.TestSystem2;","59","  private System2 system2 = new TestSystem2().setNow(1_500_000_000_000L).setDefaultTimeZone(TimeZone.getTimeZone(\"GMT-01:00\"));","74","    underTest = new IssueIndex(es.client(), system2, userSessionRule, new AuthorizationTypeSupport(userSessionRule));","194","    return new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(additionalFacet))), system2.getDefaultTimeZone());","208","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"assignees\"))), system2.getDefaultTimeZone());","225","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"authors\"))), system2.getDefaultTimeZone());","236","    Map<String, Long> createdAt = new Facets(underTest.search(query.build(), searchOptions), system2.getDefaultTimeZone()).get(\"createdAt\");","257","      new SearchOptions().addFacets(asList(\"projectUuids\"))), system2.getDefaultTimeZone());"],"delete":["52","import static org.mockito.Mockito.mock;","53","import static org.mockito.Mockito.when;","60","  private System2 system2 = System2.INSTANCE;","75","    System2 system = mock(System2.class);","76","    when(system.getDefaultTimeZone()).thenReturn(TimeZone.getTimeZone(\"+01:00\"));","77","    when(system.now()).thenReturn(System.currentTimeMillis());","78","    underTest = new IssueIndex(es.client(), system, userSessionRule, new AuthorizationTypeSupport(userSessionRule));","198","    return new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(additionalFacet))));","212","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"assignees\"))));","229","    Facets facets = new Facets(underTest.search(newQueryBuilder().build(), new SearchOptions().addFacets(asList(\"authors\"))));","240","    Map<String, Long> createdAt = new Facets(underTest.search(query.build(), searchOptions)).get(\"createdAt\");","261","      new SearchOptions().addFacets(asList(\"projectUuids\"))));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":[{"add":["100","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSessionRule), System2.INSTANCE);"],"delete":["100","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSessionRule));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTest.java":[{"add":["37","import org.sonar.api.utils.System2;","114","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["113","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/index\/ComponentIndex.java":[{"add":["45","import org.sonar.api.utils.System2;","74","  private final System2 system2;","76","  public ComponentIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport, System2 system2) {","79","    this.system2 = system2;","105","    return new SearchIdResult<>(requestBuilder.get(), id -> id, system2.getDefaultTimeZone());"],"delete":["74","  public ComponentIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport) {","102","    return new SearchIdResult<>(requestBuilder.get(), id -> id);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchMembersActionTest.java":[{"add":["29","import org.sonar.api.utils.System2;","73","  private WsActionTester ws = new WsActionTester(new SearchMembersAction(dbClient, new UserIndex(es.client(), System2.INSTANCE), organizationProvider, userSession, new AvatarResolverImpl()));"],"delete":["72","  private WsActionTester ws = new WsActionTester(new SearchMembersAction(dbClient, new UserIndex(es.client()), organizationProvider, userSession, new AvatarResolverImpl()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexTest.java":[{"add":["62","  protected ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["62","  protected ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/index\/RuleIndexTest.java":[{"add":["106","    underTest = new RuleIndex(es.client(), system2);"],"delete":["106","    underTest = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/SearchActionTest.java":[{"add":["68","  private UserIndex index = new UserIndex(esTester.client(), system2);"],"delete":["68","  private UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/index\/UserIndex.java":[{"add":["37","import org.sonar.api.utils.System2;","60","  private final System2 system2;","62","  public UserIndex(EsClient esClient, System2 system2) {","64","    this.system2 = system2;","128","    return new SearchResult<>(request.get(), UserDoc::new, system2.getDefaultTimeZone());"],"delete":["60","  public UserIndex(EsClient esClient) {","125","    return new SearchResult<>(request.get(), UserDoc::new);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ShowActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","76","  private RuleIndex ruleIndex = new RuleIndex(es.client(), System2.INSTANCE);"],"delete":["75","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleCreatorTest.java":[{"add":["70","  private RuleIndex ruleIndex = new RuleIndex(es.client(), system2);"],"delete":["70","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RuleUpdaterTest.java":[{"add":["81","  private RuleIndex ruleIndex = new RuleIndex(es.client(), system2);"],"delete":["81","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/CreateActionTest.java":[{"add":["100","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["100","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/RegisterRulesTest.java":[{"add":["103","    ruleIndex = new RuleIndex(esTester.client(), system);"],"delete":["103","    ruleIndex = new RuleIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/telemetry\/TelemetryDaemonTest.java":[{"add":["101","  private TelemetryDaemon underTest = new TelemetryDaemon(new TelemetryDataLoader(server, db.getDbClient(), pluginRepository, new UserIndex(es.client(), system2),","102","    new ProjectMeasuresIndex(es.client(), null, system2)), client, settings.asConfig(), internalProperties, system2);"],"delete":["101","  private TelemetryDaemon underTest = new TelemetryDaemon(new TelemetryDataLoader(server, db.getDbClient(), pluginRepository, new UserIndex(es.client()),","102","    new ProjectMeasuresIndex(es.client(), null)), client, settings.asConfig(), internalProperties, system2);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchProjectsActionTest.java":[{"add":["130","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["130","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":[{"add":["52","import org.sonar.api.utils.System2;","159","  private final System2 system2;","161","  public ProjectMeasuresIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport, System2 system2) {","164","    this.system2 = system2;","181","    return new SearchIdResult<>(requestBuilder.get(), id -> id, system2.getDefaultTimeZone());"],"delete":["159","  public ProjectMeasuresIndex(EsClient client, AuthorizationTypeSupport authorizationTypeSupport) {","178","    return new SearchIdResult<>(requestBuilder.get(), id -> id);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/TagsActionTest.java":[{"add":["27","import org.sonar.api.utils.System2;","57","  private RuleIndex ruleIndex = new RuleIndex(esClient, System2.INSTANCE);"],"delete":["56","  private RuleIndex ruleIndex = new RuleIndex(esClient);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/InheritanceActionTest.java":[{"add":["103","      new RuleIndex(esClient, System2.INSTANCE),"],"delete":["103","      new RuleIndex(esClient),"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorTest.java":[{"add":["85","  private RuleIndex ruleIndex = new RuleIndex(es.client(), system2);"],"delete":["85","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/CreateActionTest.java":[{"add":["79","  private UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);"],"delete":["79","  private UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/projecttag\/ws\/SearchActionTest.java":[{"add":["30","import org.sonar.api.utils.System2;","68","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["67","  private ProjectMeasuresIndex index = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangeParentActionTest.java":[{"add":["106","    ruleIndex = new RuleIndex(esClient, System2.INSTANCE);"],"delete":["106","    ruleIndex = new RuleIndex(esClient);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionTest.java":[{"add":["104","  private WsActionTester ws = new WsActionTester(new SearchAction(userSessionRule, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat, System2.INSTANCE));"],"delete":["104","  private WsActionTester ws = new WsActionTester(new SearchAction(userSessionRule, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchResult.java":[{"add":["23","import java.util.TimeZone;","34","  public SearchResult(SearchResponse response, Function<Map<String, Object>, DOC> converter, TimeZone timeZone) {","35","    this.facets = new Facets(response, timeZone);"],"delete":["33","  public SearchResult(SearchResponse response, Function<Map<String, Object>, DOC> converter) {","34","    this.facets = new Facets(response);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/DeleteActionTest.java":[{"add":["87","  private UserIndex userIndex = new UserIndex(es.client(), System2.INSTANCE);"],"delete":["87","  private UserIndex userIndex = new UserIndex(es.client());"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/utils\/internal\/TestSystem2.java":[{"add":["21","import java.util.TimeZone;","27","  private TimeZone defaultTimeZone = getDefaultTimeZone();","41","","42","  public TestSystem2 setDefaultTimeZone(TimeZone defaultTimeZone) {","43","    this.defaultTimeZone = defaultTimeZone;","44","    return this;","45","  }","46","","47","  @Override","48","  public TimeZone getDefaultTimeZone() {","49","    return defaultTimeZone;","50","  }"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/issue\/ScmAccountToUserLoaderTest.java":[{"add":["24","import org.sonar.api.utils.System2;","54","    UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);","78","    UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);","87","    UserIndex index = new UserIndex(esTester.client(), System2.INSTANCE);"],"delete":["53","    UserIndex index = new UserIndex(esTester.client());","77","    UserIndex index = new UserIndex(esTester.client());","86","    UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndex.java":[{"add":["57","import org.sonar.api.utils.System2;","134","  private final System2 system2;","136","  public RuleIndex(EsClient client, System2 system2) {","138","    this.system2 = system2;","163","    return new SearchIdResult<>(esSearch.get(), RuleKey::parse, system2.getDefaultTimeZone());"],"delete":["134","  public RuleIndex(EsClient client) {","160","    return new SearchIdResult<>(esSearch.get(), RuleKey::parse);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ws\/DeactivateActionTest.java":[{"add":["85","  private UserIndex index = new UserIndex(esTester.client(), system2);"],"delete":["85","  private UserIndex index = new UserIndex(esTester.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImpl.java":[{"add":["33","import org.sonar.api.utils.System2;","74","  private final System2 system2;","77","    WebhookPayloadFactory webhookPayloadFactory, IssueIndex issueIndex, System2 system2) {","83","    this.system2 = system2;","172","  private QualityGate createQualityGate(ComponentDto branch, IssueIndex issueIndex) {","181","    LinkedHashMap<String, Long> typeFacet = new Facets(searchResponse, system2.getDefaultTimeZone())"],"delete":["75","    WebhookPayloadFactory webhookPayloadFactory, IssueIndex issueIndex) {","169","  private static QualityGate createQualityGate(ComponentDto branch, IssueIndex issueIndex) {","178","    LinkedHashMap<String, Long> typeFacet = new Facets(searchResponse)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/webhook\/IssueChangeWebhookImplTest.java":[{"add":["147","  private IssueChangeWebhookImpl underTest = new IssueChangeWebhookImpl(spiedOnDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, issueIndex, System2.INSTANCE);","150","  private IssueChangeWebhookImpl mockedUnderTest = new IssueChangeWebhookImpl(mockedDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, spiedOnIssueIndex, System2.INSTANCE);"],"delete":["147","  private IssueChangeWebhookImpl underTest = new IssueChangeWebhookImpl(spiedOnDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, issueIndex);","150","  private IssueChangeWebhookImpl mockedUnderTest = new IssueChangeWebhookImpl(mockedDbClient, webHooks, projectConfigurationLoader, webhookPayloadFactory, spiedOnIssueIndex);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/QProfileComparisonTest.java":[{"add":["76","      new RuleIndex(esTester.client(), System2.INSTANCE),"],"delete":["76","      new RuleIndex(esTester.client()),"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/index\/IssueIndexTest.java":[{"add":["44","import org.sonar.api.utils.internal.TestSystem2;","101","  private System2 system2 = new TestSystem2().setNow(1_500_000_000_000L).setDefaultTimeZone(TimeZone.getTimeZone(\"GMT-01:00\"));","779","    Map<String, Long> buckets = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","799","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","815","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","833","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","851","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","864","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","883","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","897","    Map<String, Long> createdAt = new Facets(result, system2.getDefaultTimeZone()).get(\"createdAt\");","1416","    Facets facets = new Facets(result, system2.getDefaultTimeZone());","1423","    Facets facets = new Facets(result, system2.getDefaultTimeZone());"],"delete":["36","import org.junit.Before;","73","import static org.mockito.Mockito.mock;","74","import static org.mockito.Mockito.when;","103","  private System2 system2 = mock(System2.class);","113","  @Before","114","  public void setUp() {","115","    when(system2.getDefaultTimeZone()).thenReturn(TimeZone.getTimeZone(\"GMT-1:00\"));","116","    when(system2.now()).thenReturn(System.currentTimeMillis());","117","  }","118","","787","    Map<String, Long> buckets = new Facets(result).get(\"createdAt\");","807","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","823","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","841","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","859","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","872","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","891","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","905","    Map<String, Long> createdAt = new Facets(result).get(\"createdAt\");","1424","    Facets facets = new Facets(result);","1431","    Facets facets = new Facets(result);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/Facets.java":[{"add":["22","import java.util.Date;","27","import java.util.TimeZone;","51","  private final TimeZone timeZone;","53","  public Facets(LinkedHashMap<String, LinkedHashMap<String, Long>> facetsByName, TimeZone timeZone) {","55","    this.timeZone = timeZone;","58","  public Facets(SearchResponse response, TimeZone timeZone) {","60","    this.timeZone = timeZone;","136","      String day = dateTimeToDate(value.getKeyAsString(), timeZone);","145","  private static String dateTimeToDate(String timestamp, TimeZone timeZone) {","146","    Date date = parseDateTime(timestamp);","147","    return date.toInstant().atZone(timeZone.toZoneId()).toLocalDate().toString();","148","  }","149",""],"delete":["40","import static org.sonar.api.utils.DateUtils.formatDate;","51","  public Facets(LinkedHashMap<String, LinkedHashMap<String, Long>> facetsByName) {","55","  public Facets(SearchResponse response) {","132","      String day = formatDate(parseDateTime(value.getKeyAsString()));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/index\/ComponentIndexSearchTest.java":[{"add":["60","  private ComponentIndex underTest = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["60","  private ComponentIndex underTest = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":[{"add":["98","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["98","  private ComponentIndex index = new ComponentIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/test\/index\/TestIndex.java":[{"add":["27","import org.sonar.api.utils.System2;","44","  private final System2 system2;","46","  public TestIndex(EsClient client, System2 system2) {","48","    this.system2 = system2;","70","    return new SearchResult<>(searchRequest.get(), TestDoc::new, system2.getDefaultTimeZone());","84","    return new SearchResult<>(searchRequest.get(), TestDoc::new, system2.getDefaultTimeZone());","113","    return new SearchResult<>(searchRequest.get(), TestDoc::new, system2.getDefaultTimeZone());"],"delete":["44","  public TestIndex(EsClient client) {","67","    return new SearchResult<>(searchRequest.get(), TestDoc::new);","81","    return new SearchResult<>(searchRequest.get(), TestDoc::new);","110","    return new SearchResult<>(searchRequest.get(), TestDoc::new);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/CreateActionTest.java":[{"add":["92","  private RuleIndex ruleIndex = new RuleIndex(es.client(), System2.INSTANCE);"],"delete":["92","  private RuleIndex ruleIndex = new RuleIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/SearchActionComponentsTest.java":[{"add":["106","  private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat, System2.INSTANCE));"],"delete":["106","  private WsActionTester ws = new WsActionTester(new SearchAction(userSession, issueIndex, issueQueryFactory, searchResponseLoader, searchResponseFormat));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":[{"add":["29","import org.sonar.api.utils.System2;","69","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession), System2.INSTANCE);"],"delete":["68","  private ProjectMeasuresIndex underTest = new ProjectMeasuresIndex(es.client(), new AuthorizationTypeSupport(userSession));"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/ws\/ListActionTest.java":[{"add":["27","import org.sonar.api.utils.System2;","77","  private TestIndex testIndex = new TestIndex(es.client(), System2.INSTANCE);"],"delete":["76","  private TestIndex testIndex = new TestIndex(es.client());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/es\/SearchIdResult.java":[{"add":["24","import java.util.TimeZone;","36","  public SearchIdResult(SearchResponse response, Function<String, ID> converter, TimeZone timeZone) {","37","    this.facets = new Facets(response, timeZone);"],"delete":["35","  public SearchIdResult(SearchResponse response, Function<String, ID> converter) {","36","    this.facets = new Facets(response);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/OrganizationCreationImplTest.java":[{"add":["106","  private UserIndex userIndex = new UserIndex(es.client(), system2);"],"delete":["106","  private UserIndex userIndex = new UserIndex(es.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/issue\/ws\/TagsActionTest.java":[{"add":["70","  private RuleIndex ruleIndex = new RuleIndex(esTester.client(), System2.INSTANCE);"],"delete":["70","  private RuleIndex ruleIndex = new RuleIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/QProfilesWsMediumTest.java":[{"add":["86","  private RuleIndex ruleIndex = new RuleIndex(esTester.client(), System2.INSTANCE);"],"delete":["86","  private RuleIndex ruleIndex = new RuleIndex(esTester.client());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/test\/index\/TestIndexTest.java":[{"add":["26","import org.sonar.api.utils.System2;","39","  TestIndex underTest = new TestIndex(es.client(), System2.INSTANCE);"],"delete":["38","  TestIndex underTest = new TestIndex(es.client());"]}]}},"e6fea33be6dd9333abdd82444317a708804d2f85":{"changes":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/measure\/MeasureMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":"MODIFY","server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentTreeQuery.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/measure\/MeasureMapper.xml":[{"add":["123","    and p.enabled = ${_true}","124","    <if test=\"query.qualifiers != null\">","125","      and p.qualifier in","126","      <foreach collection=\"query.qualifiers\" item=\"qualifier\" open=\"(\" close=\")\" separator=\",\">","127","        #{qualifier,jdbcType=VARCHAR}","128","      <\/foreach>","129","    <\/if>","130","    <if test=\"query.nameOrKeyQuery != null\">","131","      and (","132","      p.kee = #{query.nameOrKeyQuery,jdbcType=VARCHAR}","133","      or","134","      upper(p.name) like #{query.nameOrKeyUpperLikeQuery,jdbcType=VARCHAR} escape '\/'","135","      )","136","    <\/if>"],"delete":["123","    <include refid=\"org.sonar.db.component.ComponentMapper.selectDescendantsFilters\"\/>"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeConfigurationTest.java":[{"add":["32","import static java.util.Collections.emptyList;","38","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 0, Optional.empty(), System2.INSTANCE, emptyList());","41","    conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), -1, Optional.empty(), System2.INSTANCE, emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.of(10), System2.INSTANCE, emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), emptyList(), 30, Optional.empty(), System2.INSTANCE, emptyList());","72","  public void delete_files_but_not_directories_by_default() {","78","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), emptyList());","80","    assertThat(underTest.getScopesWithoutHistoricalData())","81","      .containsExactlyInAnyOrder(Scopes.FILE);","86","  public void delete_directory_if_enabled_in_settings() {","90","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), emptyList());","92","    assertThat(underTest.getScopesWithoutHistoricalData())","93","      .containsExactlyInAnyOrder(Scopes.DIRECTORY, Scopes.FILE);"],"delete":["21","import java.util.Collections;","38","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 0, Optional.empty(), System2.INSTANCE, Collections.emptyList());","41","    conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], -1, Optional.empty(), System2.INSTANCE, Collections.emptyList());","49","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 30, Optional.empty(), System2.INSTANCE, Collections.emptyList());","59","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 30, Optional.of(10), System2.INSTANCE, Collections.emptyList());","67","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(1L, \"1\"), new String[0], 30, Optional.empty(), System2.INSTANCE, Collections.emptyList());","72","  public void do_not_delete_directory_by_default() {","78","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), Collections.emptyList());","80","    assertThat(underTest.scopesWithoutHistoricalData()).contains(Scopes.FILE)","81","      .doesNotContain(Scopes.DIRECTORY);","86","  public void delete_directory_if_in_settings() {","90","    PurgeConfiguration underTest = PurgeConfiguration.newDefaultPurgeConfiguration(settings.asConfig(), new IdUuidPair(42L, \"any-uuid\"), Collections.emptyList());","92","    assertThat(underTest.scopesWithoutHistoricalData()).contains(Scopes.DIRECTORY, Scopes.FILE);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeConfiguration.java":[{"add":["32","import static java.util.Arrays.asList;","33","import static java.util.Collections.singletonList;","34","","38","  private final Collection<String> scopesWithoutHistoricalData;","44","  public PurgeConfiguration(IdUuidPair rootProjectId, Collection<String> scopesWithoutHistoricalData, int maxAgeInDaysOfClosedIssues,","55","    Collection<String> scopesWithoutHistoricalData = singletonList(Scopes.FILE);","57","      scopesWithoutHistoricalData = asList(Scopes.FILE, Scopes.DIRECTORY);","59","    return new PurgeConfiguration(idUuidPair, scopesWithoutHistoricalData, config.getInt(PurgeConstants.DAYS_BEFORE_DELETING_CLOSED_ISSUES).get(),","67","  public Collection<String> getScopesWithoutHistoricalData() {"],"delete":["35","  private final String[] scopesWithoutHistoricalData;","41","  public PurgeConfiguration(IdUuidPair rootProjectId, String[] scopesWithoutHistoricalData, int maxAgeInDaysOfClosedIssues,","52","    String[] scopes = new String[] {Scopes.FILE};","54","      scopes = new String[] {Scopes.DIRECTORY, Scopes.FILE};","56","    return new PurgeConfiguration(idUuidPair, scopes, config.getInt(PurgeConstants.DAYS_BEFORE_DELETING_CLOSED_ISSUES).get(),","64","  public String[] scopesWithoutHistoricalData() {"]}],"server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml":[{"add":["4","            uuid=\"PROJECT_UUID\"","6","            project_uuid=\"PROJECT_UUID\"","26","            root_uuid=\"PROJECT_UUID\"","27","            tags=\"[null]\"","44","            uuid=\"DIR_UUID\"","45","            uuid_path=\".PROJECT_UUID.\"","46","            project_uuid=\"PROJECT_UUID\"","47","            module_uuid=\"PROJECT_UUID\"","66","            root_uuid=\"PROJECT_UUID\"","67","            tags=\"[null]\"","84","            uuid=\"FILE_UUID\"","85","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","86","            project_uuid=\"PROJECT_UUID\"","87","            module_uuid=\"PROJECT_UUID\"","88","            module_uuid_path=\".PROJECT_UUID.\"","106","            root_uuid=\"PROJECT_UUID\"","107","            tags=\"[null]\"","108","            b_changed=\"[false]\"","109","            b_copy_component_uuid=\"[null]\"","110","            b_description=\"[null]\"","111","            b_enabled=\"[false]\"","112","            b_uuid_path=\"[null]\"","113","            b_language=\"[null]\"","114","            b_long_name=\"[null]\"","115","            b_module_uuid=\"[null]\"","116","            b_module_uuid_path=\"[null]\"","117","            b_name=\"[null]\"","118","            b_path=\"[null]\"","119","            b_qualifier=\"[null]\"","120","  \/>","121","","122","  <!-- unit test file -->","123","  <projects organization_uuid=\"org1\"","124","            uuid=\"TEST_FILE_UUID\"","125","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","126","            project_uuid=\"PROJECT_UUID\"","127","            module_uuid=\"PROJECT_UUID\"","128","            module_uuid_path=\".PROJECT_UUID.\"","129","            main_branch_project_uuid=\"[null]\"","130","            created_at=\"[null]\"","131","            long_name=\"[null]\"","132","            scope=\"FIL\"","133","            qualifier=\"UTS\"","134","            kee=\"project:my\/dir\/FileTest.java\"","135","            name=\"my\/dir\/FileTest.java\"","136","            description=\"[null]\"","137","            private=\"[false]\"","138","            language=\"java\"","139","            copy_component_uuid=\"[null]\"","140","            developer_uuid=\"[null]\"","141","            path=\"[null]\"","142","            deprecated_kee=\"[null]\"","143","            authorization_updated_at=\"[null]\"","144","            id=\"4\"","145","            enabled=\"[true]\"","146","            root_uuid=\"PROJECT_UUID\"","147","            tags=\"[null]\"","165","             component_uuid=\"PROJECT_UUID\"","189","  <project_measures id=\"1\"","190","                    analysis_uuid=\"u1\"","191","                    metric_id=\"10\"","192","                    value=\"[null]\"","193","                    text_value=\"[null]\"","194","                    measure_data=\"[null]\"","195","                    variation_value_1=\"[null]\"","196","                    variation_value_2=\"[null]\"","197","                    variation_value_3=\"[null]\"","198","                    variation_value_4=\"[null]\"","199","                    variation_value_5=\"[null]\"","200","                    alert_status=\"[null]\"","201","                    alert_text=\"[null]\"","202","                    person_id=\"[null]\"","203","                    description=\"[null]\"","204","                    component_uuid=\"PROJECT_UUID\"\/>","205","  <project_measures id=\"2\"","206","                    analysis_uuid=\"u1\"","207","                    metric_id=\"10\"","208","                    value=\"[null]\"","209","                    text_value=\"[null]\"","210","                    measure_data=\"[null]\"","211","                    variation_value_1=\"[null]\"","212","                    variation_value_2=\"[null]\"","213","                    variation_value_3=\"[null]\"","214","                    variation_value_4=\"[null]\"","215","                    variation_value_5=\"[null]\"","216","                    alert_status=\"[null]\"","217","                    alert_text=\"[null]\"","218","                    person_id=\"[null]\"","219","                    description=\"[null]\"","220","                    component_uuid=\"DIR_UUID\"\/>","221","  <project_measures id=\"3\"","222","                    analysis_uuid=\"u1\"","223","                    metric_id=\"10\"","224","                    value=\"[null]\"","225","                    text_value=\"[null]\"","226","                    measure_data=\"[null]\"","227","                    variation_value_1=\"[null]\"","228","                    variation_value_2=\"[null]\"","229","                    variation_value_3=\"[null]\"","230","                    variation_value_4=\"[null]\"","231","                    variation_value_5=\"[null]\"","232","                    alert_status=\"[null]\"","233","                    alert_text=\"[null]\"","234","                    person_id=\"[null]\"","235","                    description=\"[null]\"","236","                    component_uuid=\"FILE_UUID\"\/>","237","  <project_measures id=\"4\"","238","                    analysis_uuid=\"u1\"","239","                    metric_id=\"10\"","240","                    value=\"[null]\"","241","                    text_value=\"[null]\"","242","                    measure_data=\"[null]\"","243","                    variation_value_1=\"[null]\"","244","                    variation_value_2=\"[null]\"","245","                    variation_value_3=\"[null]\"","246","                    variation_value_4=\"[null]\"","247","                    variation_value_5=\"[null]\"","248","                    alert_status=\"[null]\"","249","                    alert_text=\"[null]\"","250","                    person_id=\"[null]\"","251","                    description=\"[null]\"","252","                    component_uuid=\"TEST_FILE_UUID\"\/>","253","","256","             uuid=\"u2\"","257","             component_uuid=\"PROJECT_UUID\"","281","  <project_measures id=\"5\"","282","                    analysis_uuid=\"u2\"","283","                    metric_id=\"10\"","284","                    value=\"[null]\"","285","                    text_value=\"[null]\"","286","                    measure_data=\"[null]\"","287","                    variation_value_1=\"[null]\"","288","                    variation_value_2=\"[null]\"","289","                    variation_value_3=\"[null]\"","290","                    variation_value_4=\"[null]\"","291","                    variation_value_5=\"[null]\"","292","                    alert_status=\"[null]\"","293","                    alert_text=\"[null]\"","294","                    person_id=\"[null]\"","295","                    description=\"[null]\"","296","                    component_uuid=\"PROJECT_UUID\"\/>","297","  <!--<project_measures id=\"6\"-->","298","                    <!--analysis_uuid=\"u2\"-->","299","                    <!--metric_id=\"10\"-->","300","                    <!--value=\"[null]\"-->","301","                    <!--text_value=\"[null]\"-->","302","                    <!--measure_data=\"[null]\"-->","303","                    <!--variation_value_1=\"[null]\"-->","304","                    <!--variation_value_2=\"[null]\"-->","305","                    <!--variation_value_3=\"[null]\"-->","306","                    <!--variation_value_4=\"[null]\"-->","307","                    <!--variation_value_5=\"[null]\"-->","308","                    <!--alert_status=\"[null]\"-->","309","                    <!--alert_text=\"[null]\"-->","310","                    <!--person_id=\"[null]\"-->","311","                    <!--description=\"[null]\"-->","312","                    <!--component_uuid=\"DIR_UUID\"\/>-->","313","  <!--<project_measures id=\"7\"-->","314","                    <!--analysis_uuid=\"u2\"-->","315","                    <!--metric_id=\"10\"-->","316","                    <!--value=\"[null]\"-->","317","                    <!--text_value=\"[null]\"-->","318","                    <!--measure_data=\"[null]\"-->","319","                    <!--variation_value_1=\"[null]\"-->","320","                    <!--variation_value_2=\"[null]\"-->","321","                    <!--variation_value_3=\"[null]\"-->","322","                    <!--variation_value_4=\"[null]\"-->","323","                    <!--variation_value_5=\"[null]\"-->","324","                    <!--alert_status=\"[null]\"-->","325","                    <!--alert_text=\"[null]\"-->","326","                    <!--person_id=\"[null]\"-->","327","                    <!--description=\"[null]\"-->","328","                    <!--component_uuid=\"FILE_UUID\"\/>-->","329","  <!--<project_measures id=\"8\"-->","330","                    <!--analysis_uuid=\"u2\"-->","331","                    <!--metric_id=\"10\"-->","332","                    <!--value=\"[null]\"-->","333","                    <!--text_value=\"[null]\"-->","334","                    <!--measure_data=\"[null]\"-->","335","                    <!--variation_value_1=\"[null]\"-->","336","                    <!--variation_value_2=\"[null]\"-->","337","                    <!--variation_value_3=\"[null]\"-->","338","                    <!--variation_value_4=\"[null]\"-->","339","                    <!--variation_value_5=\"[null]\"-->","340","                    <!--alert_status=\"[null]\"-->","341","                    <!--alert_text=\"[null]\"-->","342","                    <!--person_id=\"[null]\"-->","343","                    <!--description=\"[null]\"-->","344","                    <!--component_uuid=\"TEST_FILE_UUID\"\/>-->","345",""],"delete":["0","<!--","1","","2","What has been changed : purge_status=1 on snapshot 4 (PRJ) and snapshots 5 and 6 (DIR\/FIL) are deleted","3","","4","-->","5","","10","            uuid=\"ABCD\"","12","            project_uuid=\"ABCD\"","24","            tags=\"[null]\"","33","            root_uuid=\"ABCD\"","50","            uuid=\"EFGH\"","51","            uuid_path=\".ABCD.\"","52","            project_uuid=\"ABCD\"","53","            module_uuid=\"ABCD\"","64","            tags=\"[null]\"","73","            root_uuid=\"ABCD\"","90","            uuid=\"GHIJ\"","91","            uuid_path=\".ABCD.EFGH.\"","92","            project_uuid=\"ABCD\"","93","            module_uuid=\"ABCD\"","94","            module_uuid_path=\".ABCD.\"","104","            tags=\"[null]\"","113","            root_uuid=\"ABCD\"","131","             component_uuid=\"ABCD\"","157","             uuid=\"u4\"","158","             component_uuid=\"ABCD\""]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["376","    <if test=\"query.scopes != null\">","377","      and p.scope in","378","      <foreach collection=\"query.scopes\" item=\"scope\" open=\"(\" close=\")\" separator=\",\">","379","        #{scope,jdbcType=VARCHAR}","380","      <\/foreach>","381","    <\/if>"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentTreeQuery.java":[{"add":["44","  @CheckForNull","45","  private final ArrayList<String> scopes;","52","    this.scopes = builder.scopes == null ? null : newArrayList(builder.scopes);","63","  public Collection<String> getScopes() {","64","    return scopes;","65","  }","66","","67","  @CheckForNull","108","    @CheckForNull","109","    private Collection<String> scopes;","132","    public Builder setScopes(Collection<String> scopes) {","133","      this.scopes = scopes;","134","      return this;","135","    }","136",""],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["56","import static java.util.Collections.emptyList;","135","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"PROJECT_UUID\"), asList(Scopes.DIRECTORY, Scopes.FILE),","141","    dbTester.assertDbUnit(getClass(), \"shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml\", \"projects\", \"snapshots\", \"project_measures\");","360","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"1\"), emptyList(),","630","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, THE_PROJECT_UUID), emptyList(), 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","634","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, rootProjectUuid), emptyList(), 30, Optional.of(30), system2, asList(disabledComponentUuids));"],"delete":["134","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"ABCD\"), new String[] {Scopes.DIRECTORY, Scopes.FILE},","140","    dbTester.assertDbUnit(getClass(), \"shouldDeleteHistoricalDataOfDirectoriesAndFiles-result.xml\", \"projects\", \"snapshots\");","359","    PurgeConfiguration conf = new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, \"1\"), new String[0],","629","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, THE_PROJECT_UUID), new String[0], 30, Optional.of(30), System2.INSTANCE, Collections.emptyList());","633","    return new PurgeConfiguration(new IdUuidPair(THE_PROJECT_ID, rootProjectUuid), new String[0], 30, Optional.of(30), system2, asList(disabledComponentUuids));"]}],"server\/sonar-db-dao\/src\/test\/resources\/org\/sonar\/db\/purge\/PurgeDaoTest\/shouldDeleteHistoricalDataOfDirectoriesAndFiles.xml":[{"add":["4","            uuid=\"PROJECT_UUID\"","6","            project_uuid=\"PROJECT_UUID\"","26","            root_uuid=\"PROJECT_UUID\"","27","            tags=\"[null]\"","29","            b_copy_component_uuid=\"[null]\"","44","            uuid=\"DIR_UUID\"","45","            uuid_path=\".PROJECT_UUID.\"","46","            project_uuid=\"PROJECT_UUID\"","47","            module_uuid=\"PROJECT_UUID\"","66","            root_uuid=\"PROJECT_UUID\"","67","            tags=\"[null]\"","69","            b_copy_component_uuid=\"[null]\"","84","            uuid=\"FILE_UUID\"","85","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","86","            project_uuid=\"PROJECT_UUID\"","87","            module_uuid=\"PROJECT_UUID\"","88","            module_uuid_path=\".PROJECT_UUID.\"","106","            root_uuid=\"PROJECT_UUID\"","107","            tags=\"[null]\"","109","            b_copy_component_uuid=\"[null]\"","110","            b_description=\"[null]\"","111","            b_enabled=\"[false]\"","112","            b_uuid_path=\"[null]\"","113","            b_language=\"[null]\"","114","            b_long_name=\"[null]\"","115","            b_module_uuid=\"[null]\"","116","            b_module_uuid_path=\"[null]\"","117","            b_name=\"[null]\"","118","            b_path=\"[null]\"","119","            b_qualifier=\"[null]\"","120","  \/>","121","","122","  <!-- unit test file -->","123","  <projects organization_uuid=\"org1\"","124","            uuid=\"TEST_FILE_UUID\"","125","            uuid_path=\".PROJECT_UUID.DIR_UUID.\"","126","            project_uuid=\"PROJECT_UUID\"","127","            module_uuid=\"PROJECT_UUID\"","128","            module_uuid_path=\".PROJECT_UUID.\"","129","            main_branch_project_uuid=\"[null]\"","130","            created_at=\"[null]\"","131","            long_name=\"[null]\"","132","            scope=\"FIL\"","133","            qualifier=\"UTS\"","134","            kee=\"project:my\/dir\/FileTest.java\"","135","            name=\"my\/dir\/FileTest.java\"","136","            description=\"[null]\"","137","            private=\"[false]\"","138","            language=\"java\"","139","            copy_component_uuid=\"[null]\"","140","            developer_uuid=\"[null]\"","141","            path=\"[null]\"","142","            deprecated_kee=\"[null]\"","143","            authorization_updated_at=\"[null]\"","144","            id=\"4\"","145","            enabled=\"[true]\"","146","            root_uuid=\"PROJECT_UUID\"","147","            tags=\"[null]\"","148","            b_changed=\"[false]\"","149","            b_copy_component_uuid=\"[null]\"","165","             component_uuid=\"PROJECT_UUID\"","189","  <project_measures id=\"1\"","190","                    analysis_uuid=\"u1\"","191","                    metric_id=\"10\"","192","                    value=\"[null]\"","193","                    text_value=\"[null]\"","194","                    measure_data=\"[null]\"","195","                    variation_value_1=\"[null]\"","196","                    variation_value_2=\"[null]\"","197","                    variation_value_3=\"[null]\"","198","                    variation_value_4=\"[null]\"","199","                    variation_value_5=\"[null]\"","200","                    alert_status=\"[null]\"","201","                    alert_text=\"[null]\"","202","                    person_id=\"[null]\"","203","                    description=\"[null]\"","204","                    component_uuid=\"PROJECT_UUID\"\/>","205","  <project_measures id=\"2\"","206","                    analysis_uuid=\"u1\"","207","                    metric_id=\"10\"","208","                    value=\"[null]\"","209","                    text_value=\"[null]\"","210","                    measure_data=\"[null]\"","211","                    variation_value_1=\"[null]\"","212","                    variation_value_2=\"[null]\"","213","                    variation_value_3=\"[null]\"","214","                    variation_value_4=\"[null]\"","215","                    variation_value_5=\"[null]\"","216","                    alert_status=\"[null]\"","217","                    alert_text=\"[null]\"","218","                    person_id=\"[null]\"","219","                    description=\"[null]\"","220","                    component_uuid=\"DIR_UUID\"\/>","221","  <project_measures id=\"3\"","222","                    analysis_uuid=\"u1\"","223","                    metric_id=\"10\"","224","                    value=\"[null]\"","225","                    text_value=\"[null]\"","226","                    measure_data=\"[null]\"","227","                    variation_value_1=\"[null]\"","228","                    variation_value_2=\"[null]\"","229","                    variation_value_3=\"[null]\"","230","                    variation_value_4=\"[null]\"","231","                    variation_value_5=\"[null]\"","232","                    alert_status=\"[null]\"","233","                    alert_text=\"[null]\"","234","                    person_id=\"[null]\"","235","                    description=\"[null]\"","236","                    component_uuid=\"FILE_UUID\"\/>","237","  <project_measures id=\"4\"","238","                    analysis_uuid=\"u1\"","239","                    metric_id=\"10\"","240","                    value=\"[null]\"","241","                    text_value=\"[null]\"","242","                    measure_data=\"[null]\"","243","                    variation_value_1=\"[null]\"","244","                    variation_value_2=\"[null]\"","245","                    variation_value_3=\"[null]\"","246","                    variation_value_4=\"[null]\"","247","                    variation_value_5=\"[null]\"","248","                    alert_status=\"[null]\"","249","                    alert_text=\"[null]\"","250","                    person_id=\"[null]\"","251","                    description=\"[null]\"","252","                    component_uuid=\"TEST_FILE_UUID\"\/>","253","","256","             uuid=\"u2\"","257","             component_uuid=\"PROJECT_UUID\"","281","  <project_measures id=\"5\"","282","                    analysis_uuid=\"u2\"","283","                    metric_id=\"10\"","284","                    value=\"[null]\"","285","                    text_value=\"[null]\"","286","                    measure_data=\"[null]\"","287","                    variation_value_1=\"[null]\"","288","                    variation_value_2=\"[null]\"","289","                    variation_value_3=\"[null]\"","290","                    variation_value_4=\"[null]\"","291","                    variation_value_5=\"[null]\"","292","                    alert_status=\"[null]\"","293","                    alert_text=\"[null]\"","294","                    person_id=\"[null]\"","295","                    description=\"[null]\"","296","                    component_uuid=\"PROJECT_UUID\"\/>","297","  <project_measures id=\"6\"","298","                    analysis_uuid=\"u2\"","299","                    metric_id=\"10\"","300","                    value=\"[null]\"","301","                    text_value=\"[null]\"","302","                    measure_data=\"[null]\"","303","                    variation_value_1=\"[null]\"","304","                    variation_value_2=\"[null]\"","305","                    variation_value_3=\"[null]\"","306","                    variation_value_4=\"[null]\"","307","                    variation_value_5=\"[null]\"","308","                    alert_status=\"[null]\"","309","                    alert_text=\"[null]\"","310","                    person_id=\"[null]\"","311","                    description=\"[null]\"","312","                    component_uuid=\"DIR_UUID\"\/>","313","  <project_measures id=\"7\"","314","                    analysis_uuid=\"u2\"","315","                    metric_id=\"10\"","316","                    value=\"[null]\"","317","                    text_value=\"[null]\"","318","                    measure_data=\"[null]\"","319","                    variation_value_1=\"[null]\"","320","                    variation_value_2=\"[null]\"","321","                    variation_value_3=\"[null]\"","322","                    variation_value_4=\"[null]\"","323","                    variation_value_5=\"[null]\"","324","                    alert_status=\"[null]\"","325","                    alert_text=\"[null]\"","326","                    person_id=\"[null]\"","327","                    description=\"[null]\"","328","                    component_uuid=\"FILE_UUID\"\/>","329","  <project_measures id=\"8\"","330","                    analysis_uuid=\"u2\"","331","                    metric_id=\"10\"","332","                    value=\"[null]\"","333","                    text_value=\"[null]\"","334","                    measure_data=\"[null]\"","335","                    variation_value_1=\"[null]\"","336","                    variation_value_2=\"[null]\"","337","                    variation_value_3=\"[null]\"","338","                    variation_value_4=\"[null]\"","339","                    variation_value_5=\"[null]\"","340","                    alert_status=\"[null]\"","341","                    alert_text=\"[null]\"","342","                    person_id=\"[null]\"","343","                    description=\"[null]\"","344","                    component_uuid=\"TEST_FILE_UUID\"\/>","345",""],"delete":["4","            uuid=\"ABCD\"","6","            project_uuid=\"ABCD\"","26","            root_uuid=\"ABCD\"","42","            uuid=\"EFGH\"","43","            uuid_path=\".ABCD.\"","44","            project_uuid=\"ABCD\"","45","            module_uuid=\"ABCD\"","64","            root_uuid=\"ABCD\"","80","            uuid=\"GHIJ\"","81","            uuid_path=\".ABCD.EFGH.\"","82","            project_uuid=\"ABCD\"","83","            module_uuid=\"ABCD\"","84","            module_uuid_path=\".ABCD.\"","102","            root_uuid=\"ABCD\"","119","             component_uuid=\"ABCD\"","145","             uuid=\"u4\"","146","             component_uuid=\"ABCD\""]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["65","    deleteDataOfComponentsWithoutHistoricalData(session, rootUuid, conf.getScopesWithoutHistoricalData(), commands);","120","  private void deleteDataOfComponentsWithoutHistoricalData(DbSession dbSession, String rootUuid, Collection<String> scopesWithoutHistoricalData, PurgeCommands purgeCommands) {","121","    if (scopesWithoutHistoricalData.isEmpty()) {","135","          .setScopes(scopesWithoutHistoricalData)"],"delete":["23","import java.util.Arrays;","66","    deleteDataOfComponentsWithoutHistoricalData(session, rootUuid, conf.scopesWithoutHistoricalData(), commands);","121","  private void deleteDataOfComponentsWithoutHistoricalData(DbSession dbSession, String rootUuid, String[] scopesWithoutHistoricalData, PurgeCommands purgeCommands) {","122","    if (scopesWithoutHistoricalData.length == 0) {","136","          .setQualifiers(Arrays.asList(scopesWithoutHistoricalData))"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["36","import org.sonar.api.resources.Scopes;","1284","  public void select_descendants_with_children_strategy() {","1290","    ComponentDto fileInProject = newFileDto(project, null, FILE_1_UUID).setDbKey(\"file-key-1\").setName(\"File One\");","1291","    db.components().insertComponent(fileInProject);","1292","    ComponentDto file1InModule = newFileDto(module, null, FILE_2_UUID).setDbKey(\"file-key-2\").setName(\"File Two\");","1293","    db.components().insertComponent(file1InModule);","1294","    ComponentDto file2InModule = newFileDto(module, null, FILE_3_UUID).setDbKey(\"file-key-3\").setName(\"File Three\");","1295","    db.components().insertComponent(file2InModule);","1347","","1348","    \/\/ test filtering by scope","1349","    query = newTreeQuery(project.uuid()).setScopes(asList(Scopes.FILE)).build();","1350","    assertThat(underTest.selectDescendants(dbSession, query))","1351","      .extracting(ComponentDto::uuid)","1352","      .containsExactlyInAnyOrder(fileInProject.uuid());","1353","    query = newTreeQuery(project.uuid()).setScopes(asList(Scopes.PROJECT)).build();","1354","    assertThat(underTest.selectDescendants(dbSession, query))","1355","      .extracting(ComponentDto::uuid)","1356","      .containsExactlyInAnyOrder(module.uuid());"],"delete":["1283","  public void select_descendants_with_children_stragegy() {","1289","    ComponentDto file1 = newFileDto(project, null, FILE_1_UUID).setDbKey(\"file-key-1\").setName(\"File One\");","1290","    db.components().insertComponent(file1);","1291","    ComponentDto file2 = newFileDto(module, null, FILE_2_UUID).setDbKey(\"file-key-2\").setName(\"File Two\");","1292","    db.components().insertComponent(file2);","1293","    ComponentDto file3 = newFileDto(module, null, FILE_3_UUID).setDbKey(\"file-key-3\").setName(\"File Three\");","1294","    db.components().insertComponent(file3);"]}]}},"f463897daea037addd0ee5d1a45c046b784e1fc5":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectDataLoaderMediumTest.java":"MODIFY","sonar-batch-protocol\/src\/main\/java\/org\/sonar\/batch\/protocol\/input\/ProjectRepositories.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectActionTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/component\/FilePathWithHashDto.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectDataLoaderMediumTest.java":[{"add":["34","import org.sonar.db.DbClient;","63","  ProjectDataLoader underTest;","69","    underTest = tester.get(ProjectDataLoader.class);","86","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId()));","88","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId()));","91","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","92","","96","      \"sonar.jira.login.secured\", \"john\"));","108","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId()));","110","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId()));","113","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(true));","116","      \"sonar.jira.project.key\", \"SONAR\"));","143","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","146","      \"sonar.jira.login.secured\", \"john\"));","150","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","173","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","176","      \"sonar.jira.login.secured\", \"john\"));","179","      \"sonar.jira.login.secured\", \"john\"));","213","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","216","      \"sonar.jira.login.secured\", \"john\"));","220","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","224","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","257","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","260","      \"sonar.jira.login.secured\", \"john\"));","264","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","267","      \"sonar.jira.login.secured\", \"john\"));","284","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","287","      \"sonar.jira.login.secured\", \"john\"));","314","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","320","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","348","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","354","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","380","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","386","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","413","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","419","      \"sonar.coverage.exclusions\", \"**\/*.java\"));","431","      underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","447","      underTest.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(false));","469","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","497","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(project.key()));","524","    ProjectRepositories ref = underTest.load(ProjectDataQuery.create().setModuleKey(module.key()));"],"delete":["42","import org.sonar.server.db.DbClient;","63","  ProjectDataLoader loader;","69","    loader = tester.get(ProjectDataLoader.class);","86","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId())","87","      );","89","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId())","90","      );","93","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","97","      \"sonar.jira.login.secured\", \"john\"","98","      ));","110","      dbSession, new PropertyDto().setKey(\"sonar.jira.project.key\").setValue(\"SONAR\").setResourceId(project.getId())","111","      );","113","      dbSession, new PropertyDto().setKey(\"sonar.jira.login.secured\").setValue(\"john\").setResourceId(project.getId())","114","      );","117","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(true));","120","      \"sonar.jira.project.key\", \"SONAR\"","121","      ));","148","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","151","      \"sonar.jira.login.secured\", \"john\"","152","      ));","156","      \"sonar.coverage.exclusions\", \"**\/*.java\"","157","      ));","180","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","183","      \"sonar.jira.login.secured\", \"john\"","184","      ));","187","      \"sonar.jira.login.secured\", \"john\"","188","      ));","222","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","225","      \"sonar.jira.login.secured\", \"john\"","226","      ));","230","      \"sonar.coverage.exclusions\", \"**\/*.java\"","231","      ));","235","      \"sonar.coverage.exclusions\", \"**\/*.java\"","236","      ));","269","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","272","      \"sonar.jira.login.secured\", \"john\"","273","      ));","277","      \"sonar.coverage.exclusions\", \"**\/*.java\"","278","      ));","281","      \"sonar.jira.login.secured\", \"john\"","282","      ));","299","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","302","      \"sonar.jira.login.secured\", \"john\"","303","      ));","330","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","336","      \"sonar.coverage.exclusions\", \"**\/*.java\"","337","      ));","365","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","371","      \"sonar.coverage.exclusions\", \"**\/*.java\"","372","      ));","398","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","404","      \"sonar.coverage.exclusions\", \"**\/*.java\"","405","      ));","432","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(subModule.key()));","438","      \"sonar.coverage.exclusions\", \"**\/*.java\"","439","      ));","451","      loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","467","      loader.load(ProjectDataQuery.create().setModuleKey(project.key()).setIssuesMode(false));","489","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","517","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(project.key()));","544","    ProjectRepositories ref = loader.load(ProjectDataQuery.create().setModuleKey(module.key()));"]}],"sonar-batch-protocol\/src\/main\/java\/org\/sonar\/batch\/protocol\/input\/ProjectRepositories.java":[{"add":["62","","71","  public ProjectRepositories addFileData(String moduleKey, @Nullable String path, FileData fileData) {","72","    if (path == null || (fileData.hash() == null && fileData.revision() == null)) {","73","      return this;","74","    }","75",""],"delete":["62","  ","71","  public ProjectRepositories addFileData(String moduleKey, String path, FileData fileData) {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/batch\/ProjectActionTest.java":[{"add":["25","import org.sonar.batch.protocol.input.FileData;","27","import org.sonar.server.ws.TestResponse;","28","import org.sonar.server.ws.WsActionTester;","29","import org.sonarqube.ws.MediaTypes;","30","import org.sonarqube.ws.WsBatch.WsProjectResponse;","33","import static org.mockito.Matchers.any;","36","import static org.sonar.test.JsonAssert.assertJson;","42","  WsActionTester ws;","46","    ws = new WsActionTester(new ProjectAction(projectDataLoader));","59","    TestResponse response = ws.newRequest()","62","      .setParam(\"preview\", \"false\")","63","      .execute();","64","    assertJson(response.getInput()).isSimilarTo(\"{\\\"settingsByModule\\\": {}}\");","71","  \/**","72","   * SONAR-7084","73","   *\/","74","  @Test","75","  public void do_not_fail_when_a_path_is_null() throws Exception {","76","    String projectKey = \"org.codehaus.sonar:sonar\";","77","","78","    ProjectRepositories projectRepositories = new ProjectRepositories().addFileData(\"module-1\", null, new FileData(null, null));","79","    when(projectDataLoader.load(any(ProjectDataQuery.class))).thenReturn(projectRepositories);","80","","81","    TestResponse result = ws.newRequest()","82","      .setMediaType(MediaTypes.PROTOBUF)","83","      .setParam(\"key\", projectKey)","84","      .setParam(\"profile\", \"Default\")","85","      .execute();","86","","87","    WsProjectResponse wsProjectResponse = WsProjectResponse.parseFrom(result.getInputStream());","88","    assertThat(wsProjectResponse.getFileDataByModuleAndPath()).isEmpty();","89","  }"],"delete":["26","import org.sonar.server.ws.WsTester;","36","  WsTester tester;","40","    tester = new WsTester(new BatchWs(mock(BatchIndex.class), new ProjectAction(projectDataLoader)));","53","    WsTester.TestRequest request = tester.newGetRequest(\"batch\", \"project\")","56","      .setParam(\"preview\", \"false\");","57","    request.execute().assertJson(\"{\\\"settingsByModule\\\": {}}\");"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/component\/FilePathWithHashDto.java":[{"add":["22","import javax.annotation.CheckForNull;","23","","48","  @CheckForNull"],"delete":[]}]}},"4ecd4bdcbc24f97a2d77aafb6273ce805976baaf":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreator.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreatorTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreator.java":[{"add":["36","import static org.apache.commons.lang.StringUtils.substring;","42","  private static final int MAX_LENGTH_AD_HOC_NAME = 200;","43","  private static final int MAX_LENGTH_AD_HOC_DESC = 16_777_215;","87","        metadata.setAdHocName(substring(adHoc.getName(), 0, MAX_LENGTH_AD_HOC_NAME));","91","        metadata.setAdHocDescription(substring(adHoc.getDescription(), 0, MAX_LENGTH_AD_HOC_DESC));"],"delete":["84","        metadata.setAdHocName(adHoc.getName());","88","        metadata.setAdHocDescription(adHoc.getDescription());"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/issue\/AdHocRuleCreatorTest.java":[{"add":["37","import static org.apache.commons.lang.StringUtils.repeat;","103","  public void truncate_metadata_name_and_desc_if_longer_than_max_value() {","104","    OrganizationDto organization = db.organizations().insert();","105","    NewAdHocRule addHocRule = new NewAdHocRule(ScannerReport.AdHocRule.newBuilder()","106","      .setEngineId(\"eslint\")","107","      .setRuleId(\"no-cond-assign\")","108","      .setName(repeat(\"a\", 201))","109","      .setDescription(repeat(\"a\", 16_777_216))","110","      .setSeverity(Constants.Severity.BLOCKER)","111","      .setType(ScannerReport.IssueType.BUG)","112","      .build());","113","","114","    RuleDto rule = underTest.persistAndIndex(dbSession, addHocRule, organization);","115","","116","    assertThat(rule.getMetadata().getAdHocName()).isEqualTo(repeat(\"a\", 200));","117","    assertThat(rule.getMetadata().getAdHocDescription()).isEqualTo(repeat(\"a\", 16_777_215));","118","  }","119","","120","  @Test"],"delete":[]}]}},"d06fdc6045943e9833c1dddbb05a3071ef7bae79":{"changes":{"\/dev\/null":"DELETE","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsers.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/DbVersion66.java":"MODIFY","server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest.java":"ADD","server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest\/users.sql":"ADD"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsers.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/DbVersion66.java":[{"add":[],"delete":["24","import org.sonar.server.platform.db.migration.version.v65.FixEmptyIdentityProviderInUsers;"]}],"server\/sonar-db-migration\/src\/test\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/test\/resources\/org\/sonar\/server\/platform\/db\/migration\/version\/v66\/FixEmptyIdentityProviderInUsersTest\/users.sql":[{"add":[],"delete":[]}]}},"5c78e445609eaf1c6bb00b0c863623ea497237a0":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateFinder.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ui\/ws\/ComponentActionTest.java":[{"add":["40","import org.sonar.db.component.BranchType;","257","  public void quality_gate_for_a_long_living_branch() {","258","    OrganizationDto organization = db.organizations().insert(o -> o.setKey(\"my-org\"));","259","    db.qualityGates().createDefaultQualityGate(organization);","260","    ComponentDto project = db.components().insertPrivateProject(organization);","261","    ComponentDto longLivingBranch = db.components().insertProjectBranch(project, b -> b.setBranchType(BranchType.LONG));","262","    QualityGateDto qualityGateDto = db.qualityGates().insertQualityGate(organization, qg -> qg.setName(\"Sonar way\"));","263","    db.qualityGates().associateProjectToQualityGate(project, qualityGateDto);","264","    userSession.addProjectPermission(UserRole.USER, project);","265","    init();","266","","267","    String json = ws.newRequest()","268","      .setParam(\"componentKey\", longLivingBranch.getKey())","269","      .setParam(\"branch\", longLivingBranch.getBranch())","270","      .execute()","271","      .getInput();","272","","273","    verify(json, \"return_quality_gate.json\");","274","  }","275","","276","  @Test","610","  private void verify(String json, String jsonFile) {","611","    assertJson(json).isSimilarTo(getClass().getResource(ComponentActionTest.class.getSimpleName() + \"\/\" + jsonFile));"],"delete":["589","  private void verify(String json, String expectedJson) {","590","    assertJson(json).isSimilarTo(getClass().getResource(ComponentActionTest.class.getSimpleName() + \"\/\" + expectedJson));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentAction.java":[{"add":["108","    NewAction action = context.createAction(\"component\")","118","    action.createParam(PARAM_COMPONENT)","123","    action","129","    action","143","      ComponentDto project = component.getMainBranchProjectUuid() == null ? component : componentFinder.getByUuid(session, component.getMainBranchProjectUuid());","156","      writeQualityGate(json, session, org, project);"],"delete":["108","    NewAction projectNavigation = context.createAction(\"component\")","118","    projectNavigation.createParam(PARAM_COMPONENT)","123","    projectNavigation","129","    projectNavigation","155","      writeQualityGate(json, session, org, component);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualitygate\/QualityGateFinder.java":[{"add":["45","   * It will first try to get the quality gate explicitly defined on a project, if none it will try to return default quality gate of the organization"],"delete":["45","   * It will first try to get the quality gate explicitly defined on a project, if none it will try to return default quality gate ofI the organization"]}]}},"14fde3c0c46e717ac44a0b482f21f82149e2e837":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":[{"add":["101","  private ProjectLock lock;","111","    lock = getComponentByType(ProjectLock.class);","112","    lock.tryLock();"],"delete":["110","    getComponentByType(ProjectLock.class).tryLock();","127","      ProjectLock lock = getComponentByType(ProjectLock.class);"]}]}},"ca42beccae145e371dd465cf5db2e34f1469b46c":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ServerUserSessionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ServerUserSession.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/ServerUserSessionTest.java":[{"add":["42","import static java.util.Arrays.asList;","451","  public void keepAuthorizedComponents_on_branches() {","452","    user = db.users().insertUser();","453","    db.users().insertProjectPermissionOnUser(user, UserRole.ADMIN, privateProject);","454","    ComponentDto privateBranchProject = db.components().insertProjectBranch(privateProject);","455","    UserSession underTest = newUserSession(user);","456","","457","    assertThat(underTest.keepAuthorizedComponents(UserRole.ADMIN, asList(privateProject, privateBranchProject)))","458","      .containsExactlyInAnyOrder(privateProject, privateBranchProject);","459","  }","460","","461","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/ServerUserSession.java":[{"add":["190","        .map(c -> defaultIfEmpty(c.getMainBranchProjectUuid(), c.projectUuid()))","195","        .filter(c -> authorizedProjectUuids.contains(c.projectUuid()) || authorizedProjectUuids.contains(c.getMainBranchProjectUuid()))"],"delete":["190","        .map(ComponentDto::projectUuid)","195","        .filter(c -> authorizedProjectUuids.contains(c.projectUuid()))"]}]}},"2022f77214c6456941f10591e435db8ebead08c0":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoaderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/NopSettingLoader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/SettingLoader.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/NopSettingLoaderTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/ThreadLocalSettings.java":[{"add":["37","import static java.util.Collections.unmodifiableMap;","41"," * Merge of system settings (including conf\/sonar.properties) and the global properties stored","42"," * in the db table \"properties\". These settings do not contain the settings specific to a project.","169","    Map<String, String> result = new HashMap<>();","170","    loadAll(result);","171","    systemProps.forEach((key, value) -> result.put((String) key, (String) value));","172","    return unmodifiableMap(result);","175","  private void loadAll(Map<String, String> appendTo) {","177","      Map<String, String> cache = settingLoader.loadAll();","178","      appendTo.putAll(cache);","181","      appendTo.putAll(getPropertiesDbFailureCache);"],"delete":["22","import com.google.common.collect.ImmutableMap;","41"," * Merge of {@link SystemSettings} and the global properties stored in the db table \"properties\". These","42"," * settings do not contain the settings specific to a project.","169","    ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();","170","    loadAll(builder);","171","    systemProps.forEach((key, value) -> builder.put((String) key, (String) value));","172","    return builder.build();","175","  private void loadAll(ImmutableMap.Builder<String, String> builder) {","177","      ImmutableMap.Builder<String, String> cacheBuilder = ImmutableMap.builder();","178","      settingLoader.loadAll(cacheBuilder);","179","      Map<String, String> cache = cacheBuilder.build();","180","      builder.putAll(cache);","183","      builder.putAll(getPropertiesDbFailureCache);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoaderTest.java":[{"add":["21","import java.util.Map;","51","","63","    Map<String, String> map = underTest.loadAll();","64","    assertThat(map).isEmpty();","67","  @Test","68","  public void test_loadAll() {","69","    insertPropertyIntoDb(\"foo\", \"1\");","70","    insertPropertyIntoDb(\"bar\", \"2\");","71","","72","    Map<String, String> map = underTest.loadAll();","73","","74","    assertThat(map).containsOnly(entry(\"foo\", \"1\"), entry(\"bar\", \"2\"));","75","  }"],"delete":["21","import com.google.common.collect.ImmutableMap;","62","    ImmutableMap.Builder<String, String> map = ImmutableMap.builder();","63","    underTest.loadAll(map);","64","   assertThat(map.build().isEmpty()).isTrue();","67"," @Test","68"," public void test_loadAll() {","69","  insertPropertyIntoDb(\"foo\", \"1\");","70","  insertPropertyIntoDb(\"bar\", \"2\");","71","  ImmutableMap.Builder<String, String> map = ImmutableMap.builder();","72","  underTest.loadAll(map);","73","  assertThat(map.build()).containsOnly(entry(\"foo\", \"1\"), entry(\"bar\", \"2\"));","74"," }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/DatabaseSettingLoader.java":[{"add":["21","import java.util.Map;","22","import org.sonar.core.util.stream.MoreCollectors;","47","  public Map<String, String> loadAll() {","49","      return dbClient.propertiesDao().selectGlobalProperties(dbSession)","50","        .stream()","51","        .collect(MoreCollectors.uniqueIndex(PropertyDto::getKey, p -> defaultString(p.getValue())));"],"delete":["21","import com.google.common.collect.ImmutableMap;","46","  public void loadAll(ImmutableMap.Builder<String, String> appendTo) {","48","      dbClient.propertiesDao().selectGlobalProperties(dbSession)","49","        .forEach(p -> appendTo.put(p.getKey(), defaultString(p.getValue())));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/NopSettingLoader.java":[{"add":["21","import java.util.Collections;","22","import java.util.Map;","31","  public Map<String, String> loadAll() {","32","    return Collections.emptyMap();"],"delete":["21","import com.google.common.collect.ImmutableMap;","30","  public void loadAll(ImmutableMap.Builder<String, String> appendTo) {","31","    \/\/ nothing to load"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/setting\/SettingLoader.java":[{"add":["21","import java.util.Map;","29","  Map<String,String> loadAll();"],"delete":["21","import com.google.common.collect.ImmutableMap;","29","  void loadAll(ImmutableMap.Builder<String, String> appendTo);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/NopSettingLoaderTest.java":[{"add":["33","    assertThat(underTest.loadAll()).isEmpty();"],"delete":["21","import com.google.common.collect.ImmutableMap;","23","import org.sonar.server.setting.NopSettingLoader;","35","    ImmutableMap.Builder<String,String> map = ImmutableMap.builder();","36","    underTest.loadAll(map);","37","    assertThat(map.build()).isEmpty();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ThreadLocalSettingsTest.java":[{"add":["37","import static java.util.Collections.unmodifiableMap;","111","  \/**","112","   * SONAR-8216 System info page fails when a setting is defined both in sonar.properties and in DB","113","   *\/","114","  @Test","115","  public void getProperties_does_not_fail_on_duplicated_key() {","116","    insertPropertyIntoDb(\"foo\", \"from_db\");","117","    underTest = create(ImmutableMap.of(\"foo\", \"from_system\"));","118","","119","    assertThat(underTest.get(\"foo\")).hasValue(\"from_system\");","120","    assertThat(underTest.getProperties().get(\"foo\")).isEqualTo(\"from_system\");","121","  }","122","","273","    doThrow(toBeThrown).when(settingLoaderMock).loadAll();","284","    doThrow(toBeThrown).when(settingLoaderMock).loadAll();","299","    doAnswer(invocationOnMock -> ImmutableMap.of(key, value1))","300","      .doThrow(toBeThrown)","301","      .doAnswer(invocationOnMock -> ImmutableMap.of(key, value2))","303","      .loadAll();","401","    public Map<String, String> loadAll() {","402","      return unmodifiableMap(map);"],"delete":["41","import static org.mockito.Matchers.any;","261","    doThrow(toBeThrown).when(settingLoaderMock).loadAll(any(ImmutableMap.Builder.class));","272","    doThrow(toBeThrown).when(settingLoaderMock).loadAll(any(ImmutableMap.Builder.class));","287","    doAnswer(invocationOnMock -> {","288","      ImmutableMap.Builder<String, String> builder = (ImmutableMap.Builder<String, String>) invocationOnMock.getArguments()[0];","289","      builder.put(key, value1);","290","      return null;","291","    }).doThrow(toBeThrown)","292","      .doAnswer(invocationOnMock -> {","293","        ImmutableMap.Builder<String, String> builder = (ImmutableMap.Builder<String, String>) invocationOnMock.getArguments()[0];","294","        builder.put(key, value2);","295","        return null;","296","      })","298","      .loadAll(any(ImmutableMap.Builder.class));","396","    public void loadAll(ImmutableMap.Builder<String, String> appendTo) {","397","      appendTo.putAll(map);"]}]}},"4a5eaf2240d43f26441b0028ebd7e753ade22293":{"changes":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/TrackedIssue.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/StatusDetection.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/IssueTransformer.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issuesmode\/ScanOnlyChangedTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositories.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/LocalIssueTracking.java":"MODIFY"},"diff":{"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/TrackedIssue.java":[{"add":["26","","84","  \/**","85","   * Component key shared by all part of SonarQube (batch, server, WS...). ","86","   * It doesn't include the branch.","87","   *\/","92","  \/**","93","   * Component key shared by all part of SonarQube (batch, server, WS...). ","94","   * It doesn't include the branch.","95","   *\/"],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/StatusDetection.java":[{"add":["34","  InputFile.Status status(String projectKeyWithBranch, String relativePath, String hash) {","35","    FileData fileDataPerPath = projectSettings.fileData(projectKeyWithBranch, relativePath);"],"delete":["34","  InputFile.Status status(String projectKey, String relativePath, String hash) {","35","    FileData fileDataPerPath = projectSettings.fileData(projectKey, relativePath);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/IssueTransformer.java":[{"add":["43","  public static TrackedIssue toTrackedIssue(ServerIssue serverIssue, String componentKey) {","53","    \/\/ key in serverIssue might have branch, so don't use it","54","    issue.setComponentKey(componentKey);"],"delete":["31","import org.sonar.core.component.ComponentKeys;","44","  public static TrackedIssue toTrackedIssue(ServerIssue serverIssue) {","54","    issue.setComponentKey(ComponentKeys.createEffectiveKey(serverIssue.getModuleKey(), serverIssue.hasPath() ? serverIssue.getPath() : null));"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/issuesmode\/ScanOnlyChangedTest.java":[{"add":["32","import java.util.Arrays;","33","import java.util.Collection;","41","import org.junit.Rule;","44","import org.junit.runner.RunWith;","45","import org.junit.runners.Parameterized;","46","import org.junit.runners.Parameterized.Parameter;","47","import org.junit.runners.Parameterized.Parameters;","54","import org.sonar.scanner.mediumtest.ScannerMediumTester.TaskBuilder;","63","@RunWith(Parameterized.class)","67","  \/*","68","   * Run with branch too to reproduce SONAR-9141 and SONAR-9160","69","   *\/","70","  @Parameters(name = \"branch enabled:{0} projectKey: {1}\")","71","  public static Collection<Object[]> data() {","72","    return Arrays.asList(new Object[][] {","73","      {false, \"sample\"}, {true, \"sample:branch\"}, {false, \"sample:project\"}","74","    });","77","  @Parameter(0)","78","  public boolean branch;","79","","80","  @Parameter(1)","81","  public String projectKey;","82","","83","  @Rule","84","  public TemporaryFolder temp = new TemporaryFolder();","85","","86","  @Rule","87","  public LogTester logTester = new LogTester();","88","","89","  private ScannerMediumTester tester;","90","","95","    String md5sum = new FileMetadata()","108","      .addFileData(projectKey, filePath, new FileData(md5sum, null))","112","        .setModuleKey(projectKey)","125","        .setModuleKey(projectKey)","152","    TaskBuilder taskBuilder = tester","154","      .property(\"sonar.report.export.path\", \"report.json\");","155","    if (branch) {","156","      taskBuilder.property(\"sonar.branch\", \"branch\");","157","    } else {","158","      taskBuilder.property(\"sonar.projectKey\", projectKey);","159","    }","161","    TaskResult result = taskBuilder.start();","176","  @Test","177","  public void testScanAll() throws Exception {","178","    File projectDir = copyProject(\"\/mediumtest\/xoo\/sample\");","179","","180","    TaskBuilder taskBuilder = tester","181","      .newScanTask(new File(projectDir, \"sonar-project.properties\"))","182","      .property(\"sonar.scanAllFiles\", \"true\");","183","    if (branch) {","184","      taskBuilder.property(\"sonar.branch\", \"branch\");","185","    } else {","186","      taskBuilder.property(\"sonar.projectKey\", projectKey);","187","    }","188","","189","    TaskResult result = taskBuilder.start();","190","","191","    assertNumberIssues(result, 16, 2, 0);","192","","193","    \/*","194","     * 8 new per line","195","     *\/","196","    assertNumberIssuesOnFile(result, \"HelloJava.xoo\", 8);","197","  }","198","","230","","231","  private static Long date(String date) {","232","    try {","233","      return sdf.parse(date).getTime();","234","    } catch (ParseException e) {","235","      throw new IllegalStateException(e);","236","    }","237","  }"],"delete":["56","  @org.junit.Rule","57","  public TemporaryFolder temp = new TemporaryFolder();","58","","59","  @org.junit.Rule","60","  public LogTester logTester = new LogTester();","61","","64","  private ScannerMediumTester tester;","65","","66","  private static Long date(String date) {","67","    try {","68","      return sdf.parse(date).getTime();","69","    } catch (ParseException e) {","70","      throw new IllegalStateException(e);","71","    }","78","    String hash = new FileMetadata()","91","      .addFileData(\"sample\", filePath, new FileData(hash, null))","95","        .setModuleKey(\"sample\")","108","        .setModuleKey(\"sample\")","132","  public void testScanAll() throws Exception {","133","    File projectDir = copyProject(\"\/mediumtest\/xoo\/sample\");","134","","135","    TaskResult result = tester","136","      .newScanTask(new File(projectDir, \"sonar-project.properties\"))","137","      .property(\"sonar.scanAllFiles\", \"true\")","138","      .start();","139","","140","    assertNumberIssues(result, 16, 2, 0);","141","","142","    \/*","143","     * 8 new per line","144","     *\/","145","    assertNumberIssuesOnFile(result, \"HelloJava.xoo\", 8);","146","  }","147","","148","  @Test","152","    TaskResult result = tester","154","      .start();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/repository\/ProjectRepositories.java":[{"add":["70","  public FileData fileData(String projectKeyWithBranch, String path) {","71","    return fileDataByModuleAndPath.get(projectKeyWithBranch, path);"],"delete":["70","  public FileData fileData(String projectKey, String path) {","71","    return fileDataByModuleAndPath.get(projectKey, path);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/issue\/tracking\/LocalIssueTracking.java":[{"add":["86","        copyServerIssues(serverIssues, trackedIssues, component.key());","97","        addUnmatchedFromServer(track.getUnmatchedBases(), trackedIssues, component.key());","106","      addIssuesOnDeletedComponents(trackedIssues, component.key());","145","  private void copyServerIssues(Collection<ServerIssueFromWs> serverIssues, List<TrackedIssue> trackedIssues, String componentKey) {","148","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue, componentKey);","207","  private void addUnmatchedFromServer(Iterable<ServerIssueFromWs> unmatchedIssues, Collection<TrackedIssue> mergeTo, String componentKey) {","210","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue, componentKey);","223","  private void addIssuesOnDeletedComponents(Collection<TrackedIssue> issues, String componentKey) {","225","      TrackedIssue dead = IssueTransformer.toTrackedIssue(previous, componentKey);"],"delete":["86","        copyServerIssues(serverIssues, trackedIssues);","97","        addUnmatchedFromServer(track.getUnmatchedBases(), trackedIssues);","106","      addIssuesOnDeletedComponents(trackedIssues);","145","  private void copyServerIssues(Collection<ServerIssueFromWs> serverIssues, List<TrackedIssue> trackedIssues) {","148","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue);","207","  private void addUnmatchedFromServer(Iterable<ServerIssueFromWs> unmatchedIssues, Collection<TrackedIssue> mergeTo) {","210","      TrackedIssue unmatched = IssueTransformer.toTrackedIssue(unmatchedPreviousIssue);","223","  private void addIssuesOnDeletedComponents(Collection<TrackedIssue> issues) {","225","      TrackedIssue dead = IssueTransformer.toTrackedIssue(previous);"]}]}},"6cedf507a95545611c31813a427f43291beeadfc":{"changes":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilder.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/FileSystemMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/AbstractPhaseExecutor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/deprecated\/test\/TestPlanBuilder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/internal\/SensorContextTester.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilder.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/coverage\/internal\/DefaultCoverage.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorContext.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ModuleScanContainer.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilderTest.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilderTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/IssuesPhaseExecutor.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/report\/JSONReportTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/PublishPhaseExecutor.java":"MODIFY","\/dev\/null":"DELETE","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/phases\/CoverageExclusionsTest.java":"ADD","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputComponentStore.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/source\/ZeroCoverageSensor.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ComponentsPublisher.java":"MODIFY","sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorageTest.java":"MODIFY","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/CoverageExclusions.java":"ADD","sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":"MODIFY"},"diff":{"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilder.java":[{"add":["200","    inputFile.setPublished(publish);"],"delete":["200","    inputFile.setPublish(publish);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/fs\/FileSystemMediumTest.java":[{"add":["120","    assertThat(file.isPublished()).isTrue();","377","    assertThat(file.isPublished()).isTrue();","412","    assertThat(unknownInputFile.isPublished()).isFalse();"],"delete":["120","    assertThat(file.publish()).isTrue();","377","    assertThat(file.publish()).isTrue();","412","    assertThat(unknownInputFile.publish()).isFalse();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/AbstractPhaseExecutor.java":[{"add":["23","import org.sonar.api.batch.fs.internal.DefaultInputFile;","26","import org.sonar.api.utils.log.Logger;","27","import org.sonar.api.utils.log.Loggers;","37","  private static final Logger LOG = Loggers.get(AbstractPhaseExecutor.class);","38","","49","  private final CoverageExclusions coverageExclusions;","53","    IssueExclusionsLoader issueExclusionsLoader, FileIndexer fileIndexer, CoverageExclusions coverageExclusions) {","64","    this.coverageExclusions = coverageExclusions;","75","    \/\/ Index the filesystem","84","    \/\/ Initialize coverage exclusions","85","    initCoverageExclusions();","86","","98","  private void initCoverageExclusions() {","99","    if (coverageExclusions.shouldExecute()) {","100","      String stepName = \"Init coverage exclusions\";","101","      eventBus.fireEvent(new BatchStepEvent(stepName, true));","102","      coverageExclusions.log();","103","","104","      for (InputFile inputFile : fs.inputFiles(fs.predicates().all())) {","105","        boolean excluded = coverageExclusions.isExcluded(inputFile);","106","        if (excluded) {","107","          ((DefaultInputFile) inputFile).setExcludedForCoverage(true);","108","          LOG.debug(\"File {} excluded for coverage\", inputFile.relativePath());","109","        }","110","      }","111","","112","      eventBus.fireEvent(new BatchStepEvent(stepName, false));","113","    }","114","","115","  }","116",""],"delete":["47","    IssueExclusionsLoader issueExclusionsLoader, FileIndexer fileIndexer) {","68","    \/\/ Index and lock the filesystem"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/deprecated\/test\/TestPlanBuilder.java":[{"add":["45","        inputFile.setPublished(true);"],"delete":["45","        inputFile.setPublish(true);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/internal\/SensorContextTester.java":[{"add":["354","    file.setPublished(true);"],"delete":["354","    file.setPublish(true);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilder.java":[{"add":["70","      inputFile.setPublished(true);"],"delete":["70","      inputFile.setPublish(true);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/sensor\/coverage\/internal\/DefaultCoverage.java":[{"add":["26","import org.sonar.api.batch.fs.internal.DefaultInputFile;","77","    if (isExcluded()) {","78","      return this;","79","    }","103","    if (isExcluded()) {","104","      return this;","105","    }","148","    if (!isExcluded()) {","149","      storage.store(this);","150","    }","151","  }","152","","153","  private boolean isExcluded() {","154","    return ((DefaultInputFile) inputFile).isExcludedForCoverage();"],"delete":["141","    storage.store(this);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scm\/ScmPublisher.java":[{"add":["97","      if (!inputFile.isPublished()) {"],"delete":["97","      if (!inputFile.publish()) {"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/mediumtest\/coverage\/CoverageMediumTest.java":[{"add":["205","  \/\/ SONAR-9557","206","  @Test","207","  public void exclusionsAndForceToZeroOnModules() throws IOException {","208","","209","    File baseDir = temp.getRoot();","210","    File srcDir = new File(baseDir, \"module1\/src\");","211","    srcDir.mkdir();","212","","213","    File xooFile1 = new File(srcDir, \"sample1.xoo\");","214","    File measuresFile1 = new File(srcDir, \"sample1.xoo.measures\");","215","    FileUtils.write(xooFile1, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","216","    FileUtils.write(measuresFile1, \"executable_lines_data:2=1;3=1;4=0\");","217","","218","    File xooFile2 = new File(srcDir, \"sample2.xoo\");","219","    File measuresFile2 = new File(srcDir, \"sample2.xoo.measures\");","220","    FileUtils.write(xooFile2, \"function foo() {\\n  if (a && b) {\\nalert('hello');\\n}\\n}\");","221","    FileUtils.write(measuresFile2, \"executable_lines_data:2=1;3=1;4=0\");","222","","223","    TaskResult result = tester.newTask()","224","      .properties(ImmutableMap.<String, String>builder()","225","        .put(\"sonar.task\", \"scan\")","226","        .put(\"sonar.projectBaseDir\", baseDir.getAbsolutePath())","227","        .put(\"sonar.projectKey\", \"com.foo.project\")","228","        .put(\"sonar.modules\", \"module1\")","229","        .put(\"sonar.sources\", \"src\")","230","        .put(\"sonar.coverage.exclusions\", \"**\/sample2.xoo\")","231","        .build())","232","      .execute();","233","","234","    InputFile file1 = result.inputFile(\"src\/sample1.xoo\");","235","    assertThat(result.coverageFor(file1, 1)).isNull();","236","","237","    assertThat(result.coverageFor(file1, 2).getHits()).isFalse();","238","    assertThat(result.coverageFor(file1, 2).getConditions()).isEqualTo(0);","239","    assertThat(result.coverageFor(file1, 2).getCoveredConditions()).isEqualTo(0);","240","","241","    assertThat(result.coverageFor(file1, 3).getHits()).isFalse();","242","    assertThat(result.coverageFor(file1, 4)).isNull();","243","","244","    InputFile file2 = result.inputFile(\"src\/sample2.xoo\");","245","    assertThat(result.coverageFor(file2, 1)).isNull();","246","    assertThat(result.coverageFor(file2, 2)).isNull();","247","    assertThat(result.coverageFor(file2, 3)).isNull();","248","    assertThat(result.coverageFor(file2, 4)).isNull();","249","","250","    Map<String, List<org.sonar.scanner.protocol.output.ScannerReport.Measure>> allMeasures = result.allMeasures();","251","","252","    assertThat(allMeasures.get(\"com.foo.project:module1:src\/sample1.xoo\")).extracting(\"metricKey\", \"intValue.value\")","253","      .contains(tuple(CoreMetrics.LINES_TO_COVER_KEY, 2),","254","        tuple(CoreMetrics.UNCOVERED_LINES_KEY, 2));","255","","256","    assertThat(allMeasures.get(\"com.foo.project:module1:src\/sample1.xoo\")).extracting(\"metricKey\").doesNotContain(CoreMetrics.CONDITIONS_TO_COVER_KEY,","257","      CoreMetrics.UNCOVERED_CONDITIONS_KEY);","258","","259","    assertThat(allMeasures.get(\"com.foo.project:module1:src\/sample2.xoo\")).extracting(\"metricKey\").doesNotContain(CoreMetrics.LINES_TO_COVER_KEY,","260","      CoreMetrics.CONDITIONS_TO_COVER_KEY,","261","      CoreMetrics.UNCOVERED_CONDITIONS_KEY, CoreMetrics.UNCOVERED_LINES_KEY);","262","  }","263",""],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorContext.java":[{"add":["177","    file.setPublished(true);"],"delete":["177","    file.setPublish(true);"]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/batch\/fs\/internal\/DefaultInputFile.java":[{"add":["56","  private boolean published;","57","  private boolean excludedForCoverage;","69","    this.published = false;","70","    this.excludedForCoverage = false;","104","  public DefaultInputFile setPublished(boolean published) {","105","    this.published = published;","109","  public boolean isPublished() {","110","    return published;","111","  }","112","","113","  public DefaultInputFile setExcludedForCoverage(boolean excludedForCoverage) {","114","    this.excludedForCoverage = excludedForCoverage;","115","    return this;","116","  }","117","","118","  public boolean isExcludedForCoverage() {","119","    return excludedForCoverage;"],"delete":["56","  private boolean publish;","68","    this.publish = false;","102","  \/**","103","   * @since 6.3","104","   *\/","105","  public DefaultInputFile setPublish(boolean publish) {","106","    this.publish = publish;","110","  \/**","111","   * @since 6.3","112","   *\/","113","  public boolean publish() {","114","    return publish;"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/ModuleScanContainer.java":[{"add":["49","import org.sonar.scanner.phases.CoverageExclusions;"],"delete":["72","import org.sonar.scanner.sensor.coverage.CoverageExclusions;"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/batch\/fs\/internal\/TestInputFileBuilderTest.java":[{"add":["57","    assertThat(file.isPublished()).isTrue();"],"delete":["57","    assertThat(file.publish()).isTrue();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputFileBuilderTest.java":[{"add":["72","    assertThat(inputFile.isPublished()).isFalse();"],"delete":["72","    assertThat(inputFile.publish()).isFalse();"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/IssuesPhaseExecutor.java":[{"add":["44","    IssueExclusionsLoader issueExclusionsLoader, IssueTransition localIssueTracking, InputModuleHierarchy moduleHierarchy, FileIndexer fileIndexer,","45","    CoverageExclusions coverageExclusions) {","46","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, moduleHierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer,","47","      coverageExclusions);"],"delete":["44","    IssueExclusionsLoader issueExclusionsLoader, IssueTransition localIssueTracking, InputModuleHierarchy moduleHierarchy, FileIndexer fileIndexer) {","45","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, moduleHierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer);"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/scan\/report\/JSONReportTest.java":[{"add":["97","    inputFile.setPublished(true);"],"delete":["97","    inputFile.setPublish(true);"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/PublishPhaseExecutor.java":[{"add":["42","    IssueExclusionsLoader issueExclusionsLoader, CpdExecutor cpdExecutor, ScmPublisher scm, InputModuleHierarchy hierarchy, FileIndexer fileIndexer,","43","    CoverageExclusions coverageExclusions) {","44","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, hierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer, coverageExclusions);"],"delete":["42","    IssueExclusionsLoader issueExclusionsLoader, CpdExecutor cpdExecutor, ScmPublisher scm, InputModuleHierarchy hierarchy, FileIndexer fileIndexer) {","43","    super(initializersExecutor, postJobsExecutor, sensorsExecutor, sensorContext, hierarchy, eventBus, fs, profileVerifier, issueExclusionsLoader, fileIndexer);"]}],"\/dev\/null":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/phases\/CoverageExclusionsTest.java":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/scan\/filesystem\/InputComponentStore.java":[{"add":["80","      .filter(DefaultInputFile::isPublished)::iterator;"],"delete":["80","      .filter(DefaultInputFile::publish)::iterator;"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/source\/ZeroCoverageSensor.java":[{"add":["30","import org.sonar.api.batch.fs.internal.DefaultInputFile;","62","  public ZeroCoverageSensor(MeasureCache measureCache) {","76","      if (((DefaultInputFile) f).isExcludedForCoverage()) {"],"delete":["41","import org.sonar.scanner.sensor.coverage.CoverageExclusions;","61","  private final CoverageExclusions coverageExclusions;","63","  public ZeroCoverageSensor(MeasureCache measureCache, CoverageExclusions exclusions) {","65","    this.coverageExclusions = exclusions;","78","      if (coverageExclusions.isExcluded(f)) {"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/report\/ComponentsPublisher.java":[{"add":["142","      return !inputFile.isPublished();"],"delete":["142","      return !inputFile.publish();"]}],"sonar-scanner-engine\/src\/test\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorageTest.java":[{"add":["80","      moduleIssues, settings.asConfig(), reportPublisher, measureCache,"],"delete":["48","import org.sonar.scanner.sensor.coverage.CoverageExclusions;","52","import static org.mockito.Matchers.any;","79","    CoverageExclusions coverageExclusions = mock(CoverageExclusions.class);","80","    when(coverageExclusions.isExcluded(any(InputFile.class))).thenReturn(false);","84","      moduleIssues, settings.asConfig(), coverageExclusions, reportPublisher, measureCache,"]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/phases\/CoverageExclusions.java":[{"add":[],"delete":[]}],"sonar-scanner-engine\/src\/main\/java\/org\/sonar\/scanner\/sensor\/DefaultSensorStorage.java":[{"add":["21","import com.google.common.annotations.VisibleForTesting;","22","import java.util.Arrays;","23","import java.util.Collection;","24","import java.util.HashMap;","25","import java.util.HashSet;","26","import java.util.List;","27","import java.util.Map;","28","import java.util.Set;","29","import java.util.TreeMap;","30","import java.util.stream.Collectors;","31","import java.util.stream.Stream;","32","import org.sonar.api.batch.fs.InputComponent;","33","import org.sonar.api.batch.fs.InputFile;","34","import org.sonar.api.batch.fs.TextRange;","35","import org.sonar.api.batch.fs.internal.DefaultInputFile;","36","import org.sonar.api.batch.measure.Metric;","37","import org.sonar.api.batch.measure.MetricFinder;","38","import org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage;","39","import org.sonar.api.batch.sensor.cpd.internal.DefaultCpdTokens;","40","import org.sonar.api.batch.sensor.error.AnalysisError;","41","import org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting;","42","import org.sonar.api.batch.sensor.internal.SensorStorage;","43","import org.sonar.api.batch.sensor.issue.Issue;","44","import org.sonar.api.batch.sensor.measure.Measure;","45","import org.sonar.api.batch.sensor.measure.internal.DefaultMeasure;","46","import org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable;","47","import org.sonar.api.config.Configuration;","48","import org.sonar.api.measures.CoreMetrics;","49","import org.sonar.api.utils.KeyValueFormat;","50","import org.sonar.api.utils.log.Logger;","51","import org.sonar.api.utils.log.Loggers;","52","import org.sonar.core.metric.ScannerMetrics;","53","import org.sonar.duplications.block.Block;","54","import org.sonar.duplications.internal.pmd.PmdBlockChunker;","55","import org.sonar.scanner.cpd.deprecated.DefaultCpdBlockIndexer;","56","import org.sonar.scanner.cpd.index.SonarCpdBlockIndex;","57","import org.sonar.scanner.issue.ModuleIssues;","58","import org.sonar.scanner.protocol.output.FileStructure;","59","import org.sonar.scanner.protocol.output.ScannerReport;","60","import org.sonar.scanner.protocol.output.ScannerReportWriter;","61","import org.sonar.scanner.report.ReportPublisher;","62","import org.sonar.scanner.report.ScannerReportUtils;","63","import org.sonar.scanner.repository.ContextPropertiesCache;","64","import org.sonar.scanner.scan.measure.MeasureCache;","65","","153","  public DefaultSensorStorage(MetricFinder metricFinder, ModuleIssues moduleIssues, Configuration settings,","202","      ((DefaultInputFile) newMeasure.inputComponent()).setPublished(true);","218","      ((DefaultInputFile) component).setPublished(true);","253","      if (((DefaultInputFile) component).isExcludedForCoverage()) {","354","      ((DefaultInputFile) issue.primaryLocation().inputComponent()).setPublished(true);","363","    inputFile.setPublished(true);","388","    inputFile.setPublished(true);","420","    inputFile.setPublished(true);","443","    inputFile.setPublished(true);","456","    ((DefaultInputFile) analysisError.inputFile()).setPublished(true);"],"delete":["68","import java.util.Arrays;","69","import java.util.Collection;","70","import java.util.HashMap;","71","import java.util.HashSet;","72","import java.util.List;","73","import java.util.Map;","74","import java.util.Set;","75","import java.util.TreeMap;","76","import java.util.stream.Collectors;","77","import java.util.stream.Stream;","78","","79","import org.sonar.api.batch.fs.InputComponent;","80","import org.sonar.api.batch.fs.InputFile;","81","import org.sonar.api.batch.fs.TextRange;","82","import org.sonar.api.batch.fs.internal.DefaultInputFile;","83","import org.sonar.api.batch.measure.Metric;","84","import org.sonar.api.batch.measure.MetricFinder;","85","import org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage;","86","import org.sonar.api.batch.sensor.cpd.internal.DefaultCpdTokens;","87","import org.sonar.api.batch.sensor.error.AnalysisError;","88","import org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting;","89","import org.sonar.api.batch.sensor.internal.SensorStorage;","90","import org.sonar.api.batch.sensor.issue.Issue;","91","import org.sonar.api.batch.sensor.measure.Measure;","92","import org.sonar.api.batch.sensor.measure.internal.DefaultMeasure;","93","import org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable;","94","import org.sonar.api.config.Configuration;","95","import org.sonar.api.measures.CoreMetrics;","96","import org.sonar.api.utils.KeyValueFormat;","97","import org.sonar.api.utils.log.Logger;","98","import org.sonar.api.utils.log.Loggers;","99","import org.sonar.core.metric.ScannerMetrics;","100","import org.sonar.duplications.block.Block;","101","import org.sonar.duplications.internal.pmd.PmdBlockChunker;","102","import org.sonar.scanner.cpd.deprecated.DefaultCpdBlockIndexer;","103","import org.sonar.scanner.cpd.index.SonarCpdBlockIndex;","104","import org.sonar.scanner.issue.ModuleIssues;","105","import org.sonar.scanner.protocol.output.FileStructure;","106","import org.sonar.scanner.protocol.output.ScannerReport;","107","import org.sonar.scanner.protocol.output.ScannerReportWriter;","108","import org.sonar.scanner.report.ReportPublisher;","109","import org.sonar.scanner.report.ScannerReportUtils;","110","import org.sonar.scanner.repository.ContextPropertiesCache;","111","import org.sonar.scanner.scan.measure.MeasureCache;","112","import org.sonar.scanner.sensor.coverage.CoverageExclusions;","113","","114","import com.google.common.annotations.VisibleForTesting;","115","","145","  private final CoverageExclusions coverageExclusions;","157","  public DefaultSensorStorage(MetricFinder metricFinder, ModuleIssues moduleIssues, Configuration settings, CoverageExclusions coverageExclusions,","163","    this.coverageExclusions = coverageExclusions;","207","      ((DefaultInputFile) newMeasure.inputComponent()).setPublish(true);","223","      ((DefaultInputFile) component).setPublish(true);","258","      if (coverageExclusions.isExcluded((InputFile) component)) {","359","      ((DefaultInputFile) issue.primaryLocation().inputComponent()).setPublish(true);","368","    inputFile.setPublish(true);","393","    inputFile.setPublish(true);","425","    inputFile.setPublish(true);","426","    if (coverageExclusions.isExcluded(inputFile)) {","427","      return;","428","    }","451","    inputFile.setPublish(true);","464","    ((DefaultInputFile) analysisError.inputFile()).setPublish(true);"]}]}},"51fe1d71e419026cf331f6f0ddac3cfac2f6b0cb":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilterTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePatternTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactoryTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/package-info.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/container\/ReportComputeEngineContainerPopulator.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactory.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePattern.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IntegrateIssuesVisitorTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilter.java":"ADD"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilterTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePatternTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactoryTest.java":[{"add":["38","import org.sonar.server.computation.issue.filter.IssueFilter;","44","import static org.mockito.Matchers.any;","45","import static org.mockito.Matchers.eq;","67","  IssueFilter issueFilter = mock(IssueFilter.class);","68","","69","  TrackerRawInputFactory underTest = new TrackerRawInputFactory(treeRootHolder, reportReader, fileSourceRepository, commonRuleEngine, issueFilter);","93","  public void load_issues_from_report() throws Exception {","94","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(true);","126","  public void ignore_issue_from_report() throws Exception {","127","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(false);","128","    fileSourceRepository.addLines(FILE_REF, \"line 1;\", \"line 2;\");","129","    ScannerReport.Issue reportIssue = ScannerReport.Issue.newBuilder()","130","      .setTextRange(TextRange.newBuilder().setStartLine(2).build())","131","      .setMsg(\"the message\")","132","      .setRuleRepository(\"java\")","133","      .setRuleKey(\"S001\")","134","      .setSeverity(Constants.Severity.BLOCKER)","135","      .setGap(3.14)","136","      .build();","137","    reportReader.putIssues(FILE.getReportAttributes().getRef(), asList(reportIssue));","138","    Input<DefaultIssue> input = underTest.create(FILE);","139","","140","    Collection<DefaultIssue> issues = input.getIssues();","141","    assertThat(issues).isEmpty();","142","  }","143","","144","  @Test","162","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(true);","176","  @Test","177","  public void ignore_issue_from_common_rule() throws Exception {","178","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(false);","179","    fileSourceRepository.addLines(FILE_REF, \"line 1;\", \"line 2;\");","180","    DefaultIssue ceIssue = new DefaultIssue()","181","      .setRuleKey(RuleKey.of(CommonRuleKeys.commonRepositoryForLang(\"java\"), \"InsufficientCoverage\"))","182","      .setMessage(\"not enough coverage\")","183","      .setGap(10.0);","184","    when(commonRuleEngine.process(FILE)).thenReturn(asList(ceIssue));","185","","186","    Input<DefaultIssue> input = underTest.create(FILE);","187","","188","    assertThat(input.getIssues()).isEmpty();","189","  }","190",""],"delete":["64","  TrackerRawInputFactory underTest = new TrackerRawInputFactory(treeRootHolder, reportReader, fileSourceRepository, commonRuleEngine);","88","  public void load_issues() throws Exception {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/package-info.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/container\/ReportComputeEngineContainerPopulator.java":[{"add":["72","import org.sonar.server.computation.issue.filter.IssueFilter;","175","      IssueFilter.class,"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/TrackerRawInputFactory.java":[{"add":["40","import org.sonar.server.computation.issue.filter.IssueFilter;","53","  private final IssueFilter issueFilter;","56","    SourceLinesRepository sourceLinesRepository, CommonRuleEngine commonRuleEngine, IssueFilter issueFilter) {","61","    this.issueFilter = issueFilter;","91","        if (issueFilter.accept(commonRuleIssue, component)) {","92","          result.add(init(commonRuleIssue));","93","        }","102","            if (issueFilter.accept(issue, component)) {","103","              result.add(issue);","104","            }"],"delete":["54","    SourceLinesRepository sourceLinesRepository, CommonRuleEngine commonRuleEngine) {","88","        result.add(init(commonRuleIssue));","97","            result.add(issue);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssuePattern.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/issue\/IntegrateIssuesVisitorTest.java":[{"add":["47","import org.sonar.server.computation.issue.filter.IssueFilter;","56","import static org.mockito.Matchers.any;","60","import static org.mockito.Mockito.when;","108","  IssueFilter issueFilter = mock(IssueFilter.class);","109","","112","    fileSourceRepository, new CommonRuleEngineImpl(), issueFilter), new Tracker<DefaultIssue, DefaultIssue>());","126","    when(issueFilter.accept(any(DefaultIssue.class), eq(FILE))).thenReturn(true);"],"delete":["107","    fileSourceRepository, new CommonRuleEngineImpl()), new Tracker<DefaultIssue, DefaultIssue>());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/issue\/filter\/IssueFilter.java":[{"add":[],"delete":[]}]}},"89562bc1246dd24f82e624ed6a319e5f42169980":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/buckets-test.tsx":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/bucket.ts":[{"add":["45","  const previous = getComponentChildren(componentKey);","46","  if (previous) {","47","    children = [...previous.children, ...children];","48","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/buckets-test.tsx":[{"add":[],"delete":[]}]}},"4ce8eea9aef0854d57e6a0644b363cbed524b5bd":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/style.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/style.css":[{"add":["122",".measure-details-viewer .issue-list {","123","  \/* no math, just a good guess *\/","124","  min-width: 600px;","125","  width: 800px;","126","}","127","","128","@media (max-width: 1320px) {","129","  .measure-details-viewer .issue-list {","130","    width: calc(60vw - 80px);","131","  }","132","}","133",""],"delete":[]}]}},"af92d629474b292b231724ce179c58565650cdf0":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/OrganizationNavigation.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/__tests__\/__snapshots__\/OrganizationNavigation-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/nav\/ContextNavBar.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNav.css":[{"add":[],"delete":["19",".navbar-context-justified {","20","  display: flex;","21","  justify-content: space-between;","22","}"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/OrganizationNavigation.tsx":[{"add":["35","    <ContextNavBar height={theme.contextNavHeightRaw} id=\"context-navigation\">","36","      <div className=\"navbar-context-justified\">","37","        <OrganizationNavigationHeaderContainer organization={organization} \/>","38","        <OrganizationNavigationMeta organization={organization} \/>","39","      <\/div>"],"delete":["35","    <ContextNavBar id=\"context-navigation\" height={theme.contextNavHeightRaw}>","36","      <OrganizationNavigationHeaderContainer organization={organization} \/>","37","      <OrganizationNavigationMeta organization={organization} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/navigation\/__tests__\/__snapshots__\/OrganizationNavigation-test.tsx.snap":[{"add":["7","  <div","8","    className=\"navbar-context-justified\"","9","  >","10","    <Connect(OrganizationNavigationHeader)","11","      organization={","12","        Object {","13","          \"key\": \"foo\",","14","          \"name\": \"Foo\",","15","          \"projectVisibility\": \"public\",","16","        }","18","    \/>","19","    <Connect(OrganizationNavigationMeta)","20","      organization={","21","        Object {","22","          \"key\": \"foo\",","23","          \"name\": \"Foo\",","24","          \"projectVisibility\": \"public\",","25","        }","27","    \/>","28","  <\/div>"],"delete":["7","  <Connect(OrganizationNavigationHeader)","8","    organization={","9","      Object {","10","        \"key\": \"foo\",","11","        \"name\": \"Foo\",","12","        \"projectVisibility\": \"public\",","14","    }","15","  \/>","16","  <Connect(OrganizationNavigationMeta)","17","    organization={","18","      Object {","19","        \"key\": \"foo\",","20","        \"name\": \"Foo\",","21","        \"projectVisibility\": \"public\",","23","    }","24","  \/>"]}],"server\/sonar-web\/src\/main\/js\/components\/nav\/ContextNavBar.css":[{"add":["34",".navbar-context-justified {","35","  display: flex;","36","  justify-content: space-between;","37","}","38",""],"delete":[]}]}},"0928b5632fd08edb53614a125bc52b3f5bee2b7d":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Tooltip-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Tooltip-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/controls\/Tooltip.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/__snapshots__\/Tooltip-test.tsx.snap":[{"add":[],"delete":["14","exports[`should open & close 1`] = `","15","<React.Fragment>","16","  <div","17","    id=\"tooltip\"","18","    onMouseEnter={[Function]}","19","    onMouseLeave={[Function]}","20","  \/>","21","  <TooltipPortal>","22","    <ScreenPositionFixer","23","      ready={false}","24","    \/>","25","  <\/TooltipPortal>","26","<\/React.Fragment>","27","`;","28","","29","exports[`should open & close 2`] = `","30","<React.Fragment>","31","  <div","32","    id=\"tooltip\"","33","    onMouseEnter={[Function]}","34","    onMouseLeave={[Function]}","35","  \/>","36","<\/React.Fragment>","37","`;","38",""]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/__tests__\/Tooltip-test.tsx":[{"add":["54","  expect(wrapper.find('TooltipPortal').exists()).toBe(true);","60","  expect(wrapper.find('TooltipPortal').exists()).toBe(false);","64","it('should not open when mouse goes away quickly', () => {","65","  const onShow = jest.fn();","66","  const onHide = jest.fn();","67","  const wrapper = shallow(","68","    <TooltipInner onHide={onHide} onShow={onShow} overlay={<span id=\"overlay\" \/>}>","69","      <div id=\"tooltip\" \/>","70","    <\/TooltipInner>","71","  );","72","","73","  wrapper.find('#tooltip').simulate('mouseenter');","74","  wrapper.find('#tooltip').simulate('mouseleave');","75","  jest.runOnlyPendingTimers();","76","  wrapper.update();","77","","78","  expect(wrapper.find('TooltipPortal').exists()).toBe(false);","79","});","80",""],"delete":["54","  expect(wrapper).toMatchSnapshot();","60","  expect(wrapper).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/components\/controls\/Tooltip.tsx":[{"add":["69","  mouseEnterTimeout?: number;","70","  mouseLeaveTimeout?: number;","120","    this.clearTimeouts();","133","  clearTimeouts = () => {","134","    window.clearTimeout(this.mouseEnterTimeout);","135","    window.clearTimeout(this.mouseLeaveTimeout);","208","    this.mouseEnterTimeout = window.setTimeout(() => {","210","        \/\/ for some reason even after the `this.mouseEnterTimeout` is cleared, it still triggers","211","        \/\/ to workaround this issue, check that its value is not `undefined`","212","        \/\/ (if it's `undefined`, it means the timer has been reset)","213","        if (this.props.visible === undefined && this.mouseEnterTimeout !== undefined) {","225","    if (this.mouseEnterTimeout !== undefined) {","226","      window.clearTimeout(this.mouseEnterTimeout);","227","      this.mouseEnterTimeout = undefined;","231","      this.mouseLeaveTimeout = window.setTimeout(() => {"],"delete":["69","  mouseEnterInterval?: number;","70","  mouseLeaveInterval?: number;","120","    this.clearIntervals();","133","  clearIntervals = () => {","134","    window.clearInterval(this.mouseEnterInterval);","135","    window.clearInterval(this.mouseLeaveInterval);","208","    this.mouseEnterInterval = window.setTimeout(() => {","210","        if (this.props.visible === undefined) {","222","    if (this.mouseEnterInterval !== undefined) {","223","      window.clearInterval(this.mouseEnterInterval);","224","      this.mouseEnterInterval = undefined;","228","      this.mouseLeaveInterval = window.setTimeout(() => {"]}]}},"364d28538c3560e555dd40874ab52e8f041c5829":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentNavigationAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ui\/ws\/ComponentNavigationAction.java":[{"add":["232","    boolean showManualMeasures = isAdmin && !Qualifiers.DIRECTORY.equals(component.qualifier());","237","    json.prop(\"showManualMeasures\", showManualMeasures);"],"delete":["236","    json.prop(\"showManualMeasures\", isAdmin);"]}]}},"7bbdfa88edf67c8c118aa1900f71a4ddf7163db1":{"changes":{"server\/sonar-web\/src\/main\/js\/store\/users\/actions.js":"MODIFY","server\/sonar-web\/src\/main\/js\/store\/users\/reducer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/Onboarding.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/store\/users\/actions.js":[{"add":["23","export const SKIP_ONBOARDING = 'SKIP_ONBOARDING';","35","export const skipOnboarding = () => ({ type: SKIP_ONBOARDING });","36",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/store\/users\/reducer.js":[{"add":["21","import { RECEIVE_CURRENT_USER, RECEIVE_USER, SKIP_ONBOARDING } from '.\/actions';","59","  if (action.type === SKIP_ONBOARDING) {","60","    return state ? { ...state, showOnboardingTutorial: false } : null;","61","  }"],"delete":["21","import { RECEIVE_CURRENT_USER, RECEIVE_USER } from '.\/actions';"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/global\/GlobalNav.js":[{"add":["32","import { skipOnboarding } from '..\/..\/..\/..\/store\/users\/actions';","39","  currentUser: { isLoggedIn: boolean, showOnboardingTutorial: boolean },","40","  skipOnboarding: () => void,","99","    this.props.skipOnboarding();","158","const mapDispatchToProps = { skipOnboarding };","159","","160","export default connect(mapStateToProps, mapDispatchToProps)(GlobalNav);"],"delete":["38","  currentUser: { isLoggedIn: boolean, showOnboardingTutorial: true },","155","export default connect(mapStateToProps)(GlobalNav);"]}],"server\/sonar-web\/src\/main\/js\/apps\/tutorials\/onboarding\/Onboarding.js":[{"add":["141","  handleReset = () => this.setState({ finished: false, projectKey: undefined });"],"delete":["141","  handleReset = () => this.setState({ finished: false });"]}]}},"57fe683ca1f0cc1307a601e44ae367159257a66d":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineCode-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineIssuesList-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/IssueView.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/ListItem.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentAction.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineIssuesList.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineCode-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueCommentAction-test.js":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineIssuesList-test.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineCode-test.js.snap":[{"add":["45","    onPopupToggle={[Function]}","46","    openPopup={null}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerCode.js":[{"add":["70","    onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","71","    openPopup: ?{ issue: string, name: string},","178","        onPopupToggle={this.props.onPopupToggle}","179","        openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueTitleBar.js":[{"add":["36","  currentPopup: ?string,"],"delete":["36","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["88","  openPopup: ?{","89","    issue: string,","90","    name: string","91","  },","123","      openPopup: null,","601","  handlePopupToggle = (issue \/*: string *\/, popupName \/*: string *\/, open \/*: ?boolean *\/) => {","602","    this.setState((state \/*: State *\/) => {","603","      const samePopup =","604","        state.openPopup && state.openPopup.name === popupName && state.openPopup.issue === issue;","605","      if (open !== false && !samePopup) {","606","        return { openPopup: { issue, name: popupName } };","607","      } else if (open !== true && samePopup) {","608","        return { openPopup: null };","609","      }","610","      return state;","611","    });","612","  };","613","","812","            onPopupToggle={this.handlePopupToggle}","813","            openPopup={this.state.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/__snapshots__\/LineIssuesList-test.js.snap":[{"add":["13","    onPopupToggle={[Function]}","14","    openPopup={null}","24","    onPopupToggle={[Function]}","25","    openPopup={null}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/IssueView.js":[{"add":["32","  currentPopup: ?string,"],"delete":["32","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueActionsBar.js":[{"add":["34","  currentPopup: ?string,"],"delete":["34","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/ListItem.js":[{"add":["35","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","36","  openPopup: ?string,","111","          onPopupToggle={this.props.onPopupToggle}","112","          openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/IssuesList.js":[{"add":["34","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","35","  openPopup: ?{ issue: string, name: string},","45","    const { checked, component, issues, openPopup, selectedIssue } = this.props;","59","            onPopupToggle={this.props.onPopupToggle}","60","            openPopup={openPopup && openPopup.issue === issue.key ? openPopup.name : null}"],"delete":["43","    const { checked, component, issues, selectedIssue } = this.props;"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueTitleBar-test.js":[{"add":["43","    <IssueTitleBar issue={issue} currentPopup={null} onFail={jest.fn()} togglePopup={jest.fn()} \/>","52","      currentPopup={null}"],"delete":["43","    <IssueTitleBar issue={issue} currentPopup=\"\" onFail={jest.fn()} togglePopup={jest.fn()} \/>","52","      currentPopup=\"\""]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentAction.js":[{"add":["31","  currentPopup: ?string,"],"delete":["31","  currentPopup: string,"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["101","  openPopup: ?{","102","    issue: string,","103","    name: string","104","  },","157","      openPopup: null,","477","  handlePopupToggle = (issue \/*: string *\/, popupName \/*: string *\/, open \/*: ?boolean *\/) => {","478","    this.setState((state \/*: State *\/) => {","479","      const samePopup =","480","        state.openPopup && state.openPopup.name === popupName && state.openPopup.issue === issue;","481","      if (open !== false && !samePopup) {","482","        return { openPopup: { issue, name: popupName } };","483","      } else if (open !== true && samePopup) {","484","        return { openPopup: null };","485","      }","486","      return state;","487","    });","488","  };","489","","591","        onPopupToggle={this.handlePopupToggle}","592","        openPopup={this.state.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/Line.js":[{"add":["64","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","65","  openPopup: ?{ issue: string, name: string},","154","          onPopupToggle={this.props.onPopupToggle}","155","          openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineIssuesList.js":[{"add":["29","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","30","  openPopup: ?{ issue: string, name: string},","39","    const { issues, onIssueClick, openPopup, selectedIssue } = this.props;","49","            onPopupToggle={this.props.onPopupToggle}","50","            openPopup={openPopup && openPopup.issue === issue.key ? openPopup.name : null}"],"delete":["37","    const { issues, onIssueClick, selectedIssue } = this.props;"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.js":[{"add":["37","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","38","  openPopup: ?string,","122","    this.props.onPopupToggle(this.props.issue.key, popupName, open);","153","        currentPopup={this.props.openPopup}"],"delete":["41","\/*::","42","type State = {","43","  currentPopup: string","44","};","45","*\/","46","","48","  \/*:: mounted: boolean; *\/","50","  \/*:: state: State; *\/","60","  constructor(props \/*: Props *\/) {","61","    super(props);","62","    this.state = {","63","      currentPopup: ''","64","    };","65","  }","66","","68","    this.mounted = true;","87","    this.mounted = false;","137","    if (this.mounted) {","138","      this.setState((prevState \/*: State *\/) => {","139","        if (prevState.currentPopup !== popupName && open !== false) {","140","          return { currentPopup: popupName };","141","        } else if (prevState.currentPopup === popupName && open !== true) {","142","          return { currentPopup: '' };","143","        }","144","        return prevState;","145","      });","146","    }","177","        currentPopup={this.state.currentPopup}"]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/LineCode.js":[{"add":["42","  onPopupToggle: (issue: string, popupName: string, open: ?boolean ) => void,","43","  openPopup: ?{ issue: string, name: string},","225","            onPopupToggle={this.props.onPopupToggle}","226","            openPopup={this.props.openPopup}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineCode-test.js":[{"add":["38","      onPopupToggle={jest.fn()}","39","      openPopup={null}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueCommentAction-test.js":[{"add":["28","      currentPopup={null}","42","      currentPopup={null}"],"delete":["28","      currentPopup=\"\"","42","      currentPopup=\"\""]}],"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/components\/__tests__\/LineIssuesList-test.js":[{"add":["28","    <LineIssuesList","29","      issues={issues}","30","      line={line}","31","      onIssueClick={onIssueClick}","32","      onPopupToggle={jest.fn()}","33","      openPopup={null}","34","      selectedIssue=\"foo\"","35","    \/>"],"delete":["28","    <LineIssuesList issues={issues} line={line} onIssueClick={onIssueClick} selectedIssue=\"foo\" \/>"]}]}},"3ba0210407680ae481d91658f0b623d5353a2663":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestRequest.java":"MODIFY","pom.xml":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestResponse.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestRequest.java":[{"add":["25","import com.google.protobuf.GeneratedMessageV3;","151","  public <T extends GeneratedMessageV3> T executeProtobuf(Class<T> protobufClass) {"],"delete":["25","import com.google.protobuf.GeneratedMessage;","151","  public <T extends GeneratedMessage> T executeProtobuf(Class<T> protobufClass) {"]}],"pom.xml":[{"add":["90","    <protobuf.version>3.5.1<\/protobuf.version>","271","          <version>0.5.1<\/version>"],"delete":["90","    <protobuf.version>3.0.0-beta-2<\/protobuf.version>","271","          <version>0.5.0<\/version>"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ws\/TestResponse.java":[{"add":["21","import com.google.protobuf.GeneratedMessageV3;","42","  public <T extends GeneratedMessageV3> T getInputObject(Class<T> protobufClass) {"],"delete":["21","import com.google.protobuf.GeneratedMessage;","42","  public <T extends GeneratedMessage> T getInputObject(Class<T> protobufClass) {"]}]}},"87f55940473777bd4080595a8369a7cf958745c4":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.js":[{"add":["254","              notAccessible: false,","273","      if (this.mounted) {","274","        if (response.status === 403) {","275","          this.setState({ loading: false, notAccessible: true });","276","        } else if (response.status === 404) {","277","          this.setState({ loading: false, notExist: true });","278","        }","669","    if (notAccessible) {","670","      return (","671","        <div className=\"alert alert-warning spacer-top\">","672","          {translate('code_viewer.no_source_code_displayed_due_to_security')}","673","        <\/div>","674","      );","675","    }","676",""],"delete":["272","      if (this.mounted && response.status === 404) {","273","        this.setState({ loading: false, notExist: true });","681","        {notAccessible && (","682","          <div className=\"alert alert-warning spacer-top\">","683","            {translate('code_viewer.no_source_code_displayed_due_to_security')}","684","          <\/div>","685","        )}"]}]}},"e4535bb930c1dc1e2383c3815fa34aceec2f1e02":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/styles.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/Definition.js":[{"add":["154","          <div className=\"settings-definition-state\">","155","            {loading &&","156","              <span className=\"text-info\">","157","                <i className=\"spinner spacer-right\" \/>","158","                {translate('settings.state.saving')}","159","              <\/span>}","160","","161","            {!loading &&","162","              this.props.validationMessage != null &&","163","              <span className=\"text-danger\">","164","                <i className=\"icon-alert-error spacer-right\" \/>","165","                <span>","166","                  {translateWithParameters(","167","                    'settings.state.validation_failed',","168","                    this.props.validationMessage","169","                  )}","170","                <\/span>","171","              <\/span>}","172","","173","            {!loading &&","174","              this.state.success &&","175","              <span className=\"text-success\">","176","                <i className=\"icon-check spacer-right\" \/>","177","                {translate('settings.state.saved')}","178","              <\/span>}","179","          <\/div>","180",""],"delete":["168","","169","          <div className=\"settings-definition-state\">","170","            {loading &&","171","              <span className=\"text-info\">","172","                <span className=\"settings-definition-state-icon\">","173","                  <i className=\"spinner\" \/>","174","                <\/span>","175","                {translate('settings.state.saving')}","176","              <\/span>}","177","","178","            {!loading &&","179","              this.props.validationMessage != null &&","180","              <span className=\"text-danger\">","181","                <span className=\"settings-definition-state-icon\">","182","                  <i className=\"icon-alert-error\" \/>","183","                <\/span>","184","                {translateWithParameters(","185","                  'settings.state.validation_failed',","186","                  this.props.validationMessage","187","                )}","188","              <\/span>}","189","","190","            {!loading &&","191","              this.state.success &&","192","              <span className=\"text-success\">","193","                <span className=\"settings-definition-state-icon\">","194","                  <i className=\"icon-check\" \/>","195","                <\/span>","196","                {translate('settings.state.saved')}","197","              <\/span>}","198","          <\/div>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/styles.css":[{"add":["49","  min-height: 32px;","50","  padding-bottom: 4px;","53",".settings-definition-state > span {","54","  display: flex;"],"delete":["30","  padding-top: 35px;","50","  position: absolute;","51","  top: 0;","52","  left: 0;","53","  right: 0;","54","  line-height: 24px;","55","  overflow: hidden;","56","  text-overflow: ellipsis;","57","  white-space: nowrap;","60",".settings-definition-state-icon {","61","  display: inline-block;","62","  vertical-align: middle;","63","  width: 24px;","64","  height: 24px;","65","  margin-right: 8px;","66","  text-align: center;","67","}","68","","69",".settings-definition-state-icon > .icon-alert-error,","70",".settings-definition-state-icon > .spinner {","71","  position: relative;","72","  top: -2px;"]}]}},"ad082b3d7b15c604eabe253087d9c1a33464f637":{"changes":{"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2Test.java":"ADD","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMembershipMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualitygate\/QualityGateConditionMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateConditionDaoTest.java":"MODIFY","sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"sonar-plugin-api-impl\/src\/test\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2Test.java":[{"add":[],"delete":[]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/user\/GroupMembershipMapper.xml":[{"add":["59","    ORDER BY u.login, g.name, g.created_at","74","    ORDER BY u.login, g.name, g.created_at"],"delete":["59","    ORDER BY u.login, g.name, g.id","74","    ORDER BY u.login, g.name, g.id"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/qualitygate\/QualityGateConditionMapper.xml":[{"add":["19","    order by created_at asc"],"delete":["19","    order by id asc"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicDaoTest.java":[{"add":["58","    PermissionTemplateCharacteristicDto templatePermission3 = underTest.insert(dbSession, new PermissionTemplateCharacteristicDto()","59","      .setPermission(UserRole.USER)","60","      .setTemplateId(3L)","61","      .setWithProjectCreator(false)","62","      .setCreatedAt(1_000_000_001L)","63","      .setUpdatedAt(2_000_000_000L));","71","    List<PermissionTemplateCharacteristicDto> result = underTest.selectByTemplateIds(dbSession, newArrayList(1L, 2L, 3L));","73","      .hasSize(3)","76","      .containsExactly(templatePermission1.getId(), templatePermission2.getId(), templatePermission3.getId());"],"delete":["65","    List<PermissionTemplateCharacteristicDto> result = underTest.selectByTemplateIds(dbSession, newArrayList(1L, 2L));","67","      .hasSize(2)","70","      .containsOnly(templatePermission1.getId(), templatePermission2.getId());"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/property\/PropertiesDaoTest.java":[{"add":["37","import org.sonar.api.impl.utils.AlwaysIncreasingSystem2;","64","  private static final long INITIAL_DATE = 1_444_000L;","66","  private AlwaysIncreasingSystem2 system2 = new AlwaysIncreasingSystem2(INITIAL_DATE, 1);","510","    return new Object[][]{","568","    insertProperty(\"key1\", \"value\", null, null);","569","    insertProperty(\"key2\", \"value\", null, null);","570","    insertProperty(\"key3\", \"value\", null, null);","571","","574","      .containsExactly(key);","577","      .containsExactly(key, anotherKey);","580","      .containsExactly(key, anotherKey);","581","","582","    assertThat(underTest.selectGlobalPropertiesByKeys(session, newHashSet(\"key2\", \"key1\", \"key3\")))","583","      .extracting(\"key\")","584","      .containsExactly(\"key1\", \"key2\", \"key3\");","585","","609","      tuple(key, project.getId()),","610","      tuple(key, project2.getId()),","611","      tuple(anotherKey, project2.getId()));","635","      tuple(key, project.getId()),","636","      tuple(key, project2.getId()));","639","      tuple(key, project.getId()),","640","      tuple(key, project2.getId()),","641","      tuple(anotherKey, project2.getId()));","700","      .hasCreatedAt(INITIAL_DATE + 2);","705","      .hasCreatedAt(INITIAL_DATE + 3);","710","      .hasCreatedAt(INITIAL_DATE + 4);","715","      .hasCreatedAt(INITIAL_DATE + 5);","720","      .hasCreatedAt(INITIAL_DATE + 6);","736","      .hasCreatedAt(INITIAL_DATE + 2);","741","      .hasCreatedAt(INITIAL_DATE + 3);","746","      .hasCreatedAt(INITIAL_DATE + 4);","751","      .hasCreatedAt(INITIAL_DATE + 5);","756","      .hasCreatedAt(INITIAL_DATE + 6);","772","      .hasCreatedAt(INITIAL_DATE + 2);","777","      .hasCreatedAt(INITIAL_DATE + 3);","782","      .hasCreatedAt(INITIAL_DATE + 4);","787","      .hasCreatedAt(INITIAL_DATE + 5);","792","      .hasCreatedAt(INITIAL_DATE + 6);","797","  public void saveProperty_deletes_then_inserts_global_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) {","798","    long id = insertProperty(\"global\", oldValue, null, null);","808","      .hasCreatedAt(INITIAL_DATE + 3);","820","  public void saveProperty_deletes_then_inserts_component_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) {","822","    long id = insertProperty(\"global\", oldValue, resourceId, null);","831","      .hasCreatedAt(INITIAL_DATE + 3);","843","  public void saveProperty_deletes_then_inserts_user_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) {","845","    long id = insertProperty(\"global\", oldValue, null, userId);","855","      .hasCreatedAt(INITIAL_DATE + 3);","867","    return new Object[][]{","1098","      .hasCreatedAt(INITIAL_DATE + 2);","1103","      .hasCreatedAt(INITIAL_DATE + 3);","1108","      .hasCreatedAt(INITIAL_DATE + 4);","1113","      .hasCreatedAt(INITIAL_DATE + 5);","1118","      .hasCreatedAt(INITIAL_DATE + 6);","1122","  public void saveGlobalProperties_delete_and_insert_new_value_when_property_exists_in_db() {","1123","    long id = insertProperty(\"to_be_updated\", \"old_value\", null, null);","1134","      .hasCreatedAt(INITIAL_DATE + 3);","1148","  public void renamePropertyKey_updates_global_component_and_user_properties() {","1149","    long id1 = insertProperty(\"foo\", \"bar\", null, null);","1150","    long id2 = insertProperty(\"old_name\", \"doc1\", null, null);","1151","    long id3 = insertProperty(\"old_name\", \"doc2\", 15L, null);","1152","    long id4 = insertProperty(\"old_name\", \"doc3\", 16L, null);","1153","    long id5 = insertProperty(\"old_name\", \"doc4\", null, 100);","1154","    long id6 = insertProperty(\"old_name\", \"doc5\", null, 101);","1163","      .hasCreatedAt(INITIAL_DATE + 2);","1169","      .hasCreatedAt(INITIAL_DATE + 3);","1175","      .hasCreatedAt(INITIAL_DATE + 4);","1181","      .hasCreatedAt(INITIAL_DATE + 5);","1187","      .hasCreatedAt(INITIAL_DATE + 6);","1193","      .hasCreatedAt(INITIAL_DATE + 7);","1197","  public void rename_to_same_key_has_no_effect() {","1198","    long id = insertProperty(\"foo\", \"bar\", null, null);","1201","      .hasCreatedAt(INITIAL_DATE + 2);","1210","      .hasCreatedAt(INITIAL_DATE + 2);"],"delete":["25","import java.sql.SQLException;","38","import org.sonar.api.utils.System2;","56","import static org.mockito.Mockito.mock;","57","import static org.mockito.Mockito.when;","67","  private static final long DATE_1 = 1_555_000L;","68","  private static final long DATE_2 = 1_666_000L;","69","  private static final long DATE_3 = 1_777_000L;","70","  private static final long DATE_4 = 1_888_000L;","71","  private static final long DATE_5 = 1_999_000L;","73","  private System2 system2 = mock(System2.class);","517","    return new Object[][] {","577","      .containsOnly(key);","580","      .containsOnly(key, anotherKey);","583","      .containsOnly(key, anotherKey);","607","        tuple(key, project.getId()),","608","        tuple(key, project2.getId()),","609","        tuple(anotherKey, project2.getId()));","633","        tuple(key, project.getId()),","634","        tuple(key, project2.getId()));","637","        tuple(key, project.getId()),","638","        tuple(key, project2.getId()),","639","        tuple(anotherKey, project2.getId()));","688","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","689","","700","      .hasCreatedAt(DATE_1);","705","      .hasCreatedAt(DATE_2);","710","      .hasCreatedAt(DATE_3);","715","      .hasCreatedAt(DATE_4);","720","      .hasCreatedAt(DATE_5);","725","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","726","","738","      .hasCreatedAt(DATE_1);","743","      .hasCreatedAt(DATE_2);","748","      .hasCreatedAt(DATE_3);","753","      .hasCreatedAt(DATE_4);","758","      .hasCreatedAt(DATE_5);","763","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","764","","776","      .hasCreatedAt(DATE_1);","781","      .hasCreatedAt(DATE_2);","786","      .hasCreatedAt(DATE_3);","791","      .hasCreatedAt(DATE_4);","796","      .hasCreatedAt(DATE_5);","801","  public void saveProperty_deletes_then_inserts_global_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) throws SQLException {","802","    long id = insertProperty(\"global\", oldValue, null, null, DATE_1);","803","    when(system2.now()).thenReturn(DATE_4);","813","      .hasCreatedAt(DATE_4);","825","  public void saveProperty_deletes_then_inserts_component_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) throws SQLException {","827","    long id = insertProperty(\"global\", oldValue, resourceId, null, DATE_1);","828","    when(system2.now()).thenReturn(DATE_4);","834","","838","      .hasCreatedAt(DATE_4);","850","  public void saveProperty_deletes_then_inserts_user_properties_when_they_exist_in_db(@Nullable String oldValue, @Nullable String newValue) throws SQLException {","852","    long id = insertProperty(\"global\", oldValue, null, userId, DATE_1);","853","    when(system2.now()).thenReturn(DATE_4);","863","      .hasCreatedAt(DATE_4);","875","    return new Object[][] {","1095","    when(system2.now()).thenReturn(DATE_1, DATE_2, DATE_3, DATE_4, DATE_5);","1096","","1108","      .hasCreatedAt(DATE_1);","1113","      .hasCreatedAt(DATE_2);","1118","      .hasCreatedAt(DATE_3);","1123","      .hasCreatedAt(DATE_4);","1128","      .hasCreatedAt(DATE_5);","1132","  public void saveGlobalProperties_delete_and_insert_new_value_when_property_exists_in_db() throws SQLException {","1133","    long id = insertProperty(\"to_be_updated\", \"old_value\", null, null, DATE_1);","1134","    when(system2.now()).thenReturn(DATE_3);","1145","      .hasCreatedAt(DATE_3);","1159","  public void renamePropertyKey_updates_global_component_and_user_properties() throws SQLException {","1160","    long id1 = insertProperty(\"foo\", \"bar\", null, null, DATE_1);","1161","    long id2 = insertProperty(\"old_name\", \"doc1\", null, null, DATE_1);","1162","    long id3 = insertProperty(\"old_name\", \"doc2\", 15L, null, DATE_1);","1163","    long id4 = insertProperty(\"old_name\", \"doc3\", 16L, null, DATE_1);","1164","    long id5 = insertProperty(\"old_name\", \"doc4\", null, 100, DATE_1);","1165","    long id6 = insertProperty(\"old_name\", \"doc5\", null, 101, DATE_1);","1174","      .hasCreatedAt(DATE_1);","1180","      .hasCreatedAt(DATE_1);","1186","      .hasCreatedAt(DATE_1);","1192","      .hasCreatedAt(DATE_1);","1198","      .hasCreatedAt(DATE_1);","1204","      .hasCreatedAt(DATE_1);","1208","  public void rename_to_same_key_has_no_effect() throws SQLException {","1209","    long now = 1_890_999L;","1210","    long id = insertProperty(\"foo\", \"bar\", null, null, now);","1213","      .hasCreatedAt(now);","1222","      .hasCreatedAt(now);","1253","  private long insertProperty(String key, @Nullable String value, @Nullable Long resourceId, @Nullable Integer userId, long createdAt) {","1254","    when(system2.now()).thenReturn(createdAt);","1255","    return insertProperty(key, value, resourceId, userId);","1256","  }","1257",""]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/permission\/template\/PermissionTemplateCharacteristicMapper.xml":[{"add":["28","    order by ptc.created_at","37","    order by ptc.created_at"],"delete":["28","    order by id","37","    order by id"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/qualitygate\/QualityGateConditionDaoTest.java":[{"add":["21","import java.util.Collection;","22","import java.util.Comparator;","56","    int qg1Conditions = 2 + new Random().nextInt(5);","58","","62","    Collection<QualityGateConditionDto> conditions = underTest.selectForQualityGate(dbSession, qg1Id);","63","    assertThat(conditions).hasSize(qg1Conditions);","64","    assertThat(conditions)","65","      .extracting(\"id\")","66","      .containsExactly(conditions.stream()","67","        .sorted(Comparator.comparing(QualityGateConditionDto::getCreatedAt))","68","        .map(QualityGateConditionDto::getId).toArray());","69","","70","    conditions = underTest.selectForQualityGate(dbSession, qg2Id);","71","    assertThat(conditions).hasSize(qg2Conditions);","72","    assertThat(conditions)","73","      .extracting(\"id\")","74","      .containsExactly(conditions.stream()","75","        .sorted(Comparator.comparing(QualityGateConditionDto::getCreatedAt))","76","        .map(QualityGateConditionDto::getId)","77","        .toArray());","78",""],"delete":["54","    int qg1Conditions = 1 + new Random().nextInt(5);","59","    assertThat(underTest.selectForQualityGate(dbSession, qg1Id)).hasSize(qg1Conditions);","60","    assertThat(underTest.selectForQualityGate(dbSession, qg2Id)).hasSize(qg2Conditions);"]}],"sonar-plugin-api-impl\/src\/main\/java\/org\/sonar\/api\/impl\/utils\/TestSystem2.java":[{"add":["34","  public TestSystem2 tick() {","35","    throwExceptionIfNowLesserOrEqualZero();","36","    this.now = this.now + 1;","37","    return this;","38","  }","39","","42","    throwExceptionIfNowLesserOrEqualZero();","43","    return now;","44","  }","45","","46","  private void throwExceptionIfNowLesserOrEqualZero() {"],"delete":["39","    return now;"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["301","    ORDER BY LOWER(p.name), p.name, p.created_at"],"delete":["301","    ORDER BY LOWER(p.name), p.name, p.id"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/property\/PropertiesMapper.xml":[{"add":["141","    order by p.created_at"],"delete":["141","    order by p.id"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":[{"add":["64","      ca.created_at desc, id desc","77","    order by created_at desc, id desc","87","        order by ca.created_at desc, ca.id desc"],"delete":["64","      ca.id desc","77","    order by id desc","87","        order by ca.id desc"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":[{"add":["38","import org.junit.Before;","70","  private static final long INITIAL_TIME = 1_450_000_000_000L;","71","","72","  private TestSystem2 system2 = new TestSystem2().setNow(INITIAL_TIME);","80","  @Before","81","  public void setup() {","82","    system2.setNow(INITIAL_TIME);","83","  }","84","","103","    assertThat(dto.getCreatedAt()).isEqualTo(INITIAL_TIME + 1);","451","  public void test_selectByQuery_verify_order_if_same_date() {","452","    system2.setNow(INITIAL_TIME);","453","    insert(\"TASK_1\", REPORT, MAINCOMPONENT_1, SUCCESS);","454","    system2.setNow(INITIAL_TIME);","455","    insert(\"TASK_2\", REPORT, MAINCOMPONENT_1, FAILED);","456","    system2.setNow(INITIAL_TIME);","457","    insert(\"TASK_3\", REPORT, MAINCOMPONENT_2, SUCCESS);","458","    system2.setNow(INITIAL_TIME);","459","    insert(\"TASK_4\", \"views\", null, SUCCESS);","460","","461","    \/\/ no filters","462","    CeTaskQuery query = new CeTaskQuery().setStatuses(Collections.emptyList());","463","    List<CeActivityDto> dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(10));","464","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_4\", \"TASK_3\", \"TASK_2\", \"TASK_1\");","465","","466","    \/\/ select by component uuid","467","    query = new CeTaskQuery().setMainComponentUuid(MAINCOMPONENT_1);","468","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","469","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_2\", \"TASK_1\");","470","","471","    \/\/ select by status","472","    query = new CeTaskQuery().setStatuses(singletonList(SUCCESS.name()));","473","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","474","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_4\", \"TASK_3\", \"TASK_1\");","475","","476","    \/\/ select by type","477","    query = new CeTaskQuery().setType(REPORT);","478","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","479","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_3\", \"TASK_2\", \"TASK_1\");","480","    query = new CeTaskQuery().setType(\"views\");","481","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","482","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_4\");","483","","484","    \/\/ select by multiple conditions","485","    query = new CeTaskQuery().setType(REPORT).setOnlyCurrents(true).setMainComponentUuid(MAINCOMPONENT_1);","486","    dtos = underTest.selectByQuery(db.getSession(), query, forPage(1).andSize(100));","487","    assertThat(dtos).extracting(\"uuid\").containsExactly(\"TASK_2\");","488","  }","489","","490","  @Test","756","    system2.tick();","769","    creating.setCreatedAt(system2.now());"],"delete":["69","  private TestSystem2 system2 = new TestSystem2().setNow(1_450_000_000_000L);","95","    assertThat(dto.getCreatedAt()).isEqualTo(1_450_000_000_000L);","720","    creating.setCreatedAt(1_300_000_000_000L);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["28","import java.util.Date;","46","import org.sonar.api.impl.utils.AlwaysIncreasingSystem2;","98","","99","  private System2 system2 = AlwaysIncreasingSystem2.INSTANCE;","100","","102","  public DbTester db = DbTester.create(system2);","235","    return new Object[][]{","336","      .extracting(ComponentDto::getKey, ComponentDto::getBranch)","337","      .containsExactlyInAnyOrder(","338","        tuple(projectBranch.getKey(), \"my_branch\"),","339","        tuple(applicationBranch.getKey(), \"my_branch\"));","343","      .extracting(ComponentDto::getDbKey)","344","      .isEmpty();","769","    return new Object[][]{","998","    return new Object[][]{","1178","  public void selectByQuery_verify_order() {","1179","    OrganizationDto organization = db.organizations().insert();","1180","","1181","    Date firstDate = new Date(system2.now());","1182","    Date secondDate = new Date(system2.now());","1183","    Date thirdDate = new Date(system2.now());","1184","","1185","    ComponentDto project3 = db.components().insertPrivateProject(organization, \"project3\", componentDto -> componentDto.setCreatedAt(thirdDate));","1186","    ComponentDto project1 = db.components().insertPrivateProject(organization, \"project1\", componentDto -> componentDto.setCreatedAt(firstDate));","1187","    ComponentDto project2 = db.components().insertPrivateProject(organization, \"project2\", componentDto -> componentDto.setCreatedAt(secondDate));","1188","","1189","    Supplier<ComponentQuery.Builder> query = () -> ComponentQuery.builder()","1190","      .setQualifiers(PROJECT)","1191","      .setOnProvisionedOnly(true);","1192","","1193","    List<ComponentDto> results = underTest.selectByQuery(dbSession, organization.getUuid(), query.get().build(), 0, 10);","1194","    assertThat(results)","1195","      .extracting(ComponentDto::uuid)","1196","      .containsExactly(","1197","        project1.uuid(),","1198","        project2.uuid(),","1199","        project3.uuid()","1200","      );","1201","    assertThat(results)","1202","      .extracting(ComponentDto::getCreatedAt)","1203","      .containsExactly(","1204","        firstDate,","1205","        secondDate,","1206","        thirdDate","1207","      );","1208","  }","1209","","1210","  @Test"],"delete":["97","  public DbTester db = DbTester.create(System2.INSTANCE);","230","    return new Object[][] {","331","        .extracting(ComponentDto::getKey, ComponentDto::getBranch)","332","        .containsExactlyInAnyOrder(","333","          tuple(projectBranch.getKey(), \"my_branch\"),","334","          tuple(applicationBranch.getKey(), \"my_branch\"));","338","        .extracting(ComponentDto::getDbKey)","339","        .isEmpty();","764","    return new Object[][] {","993","    return new Object[][] {"]}]}},"57606ff108c1c541f3e152a31bbbfdc0261b2dc6":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/scrolling.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Component.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/scrolling.ts":[{"add":["30","  return isWindow(element) ? window.pageYOffset : element.scrollTop;"],"delete":["30","  return isWindow(element) ? window.scrollY : element.scrollTop;"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/Component.tsx":[{"add":["65","      window.scrollTo(0, bottom - window.innerHeight + window.pageYOffset + BOTTOM_OFFSET);","67","      window.scrollTo(0, top + window.pageYOffset - TOP_OFFSET);"],"delete":["65","      window.scrollTo(0, bottom - window.innerHeight + window.scrollY + BOTTOM_OFFSET);","67","      window.scrollTo(0, top + window.scrollY - TOP_OFFSET);"]}]}},"8b36b92c75be2da2d16e9d14e3fe2254f6dc4368":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/RailsAppsDeployer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/index\/CachesManager.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/BatchPluginJarExploder.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/report\/ReportPublisher.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/EmbeddedTomcat.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/PluginDownloader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginJarExploder.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/GlobalTempFolderProvider.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileCopier.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginRepository.java":"MODIFY","sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/report\/ReportFiles.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/cache\/DefaultProjectCacheStatus.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/RailsAppsDeployer.java":[{"add":["113","        org.sonar.core.util.FileUtils.deleteDirectory(appsDir);"],"delete":["113","        FileUtils.deleteDirectory(appsDir);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatContexts.java":[{"add":["138","      org.sonar.core.util.FileUtils.cleanDirectory(dir);"],"delete":["138","      FileUtils.cleanDirectory(dir);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/DefaultServerFileSystem.java":[{"add":["76","      org.sonar.core.util.FileUtils.cleanDirectory(deprecated);"],"delete":["76","      FileUtils.cleanDirectory(deprecated);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/index\/CachesManager.java":[{"add":["24","import java.io.File;","25","import java.util.Properties;","29","import org.sonar.api.utils.TempFolder;","31","import static org.sonar.core.util.FileUtils.deleteQuietly;","86","    deleteQuietly(tempDir);"],"delete":["21","import org.sonar.api.utils.TempFolder;","22","","26","import org.apache.commons.io.FileUtils;","31","import java.io.File;","32","import java.util.Properties;","87","    FileUtils.deleteQuietly(tempDir);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/BatchPluginJarExploder.java":[{"add":["33","import static org.sonar.core.util.FileUtils.deleteQuietly;","34","","74","        deleteQuietly(lockFile);"],"delete":["72","        FileUtils.deleteQuietly(lockFile);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/report\/ReportPublisher.java":[{"add":["25","import java.io.File;","26","import java.io.IOException;","27","import java.io.InputStream;","28","import java.io.Writer;","29","import java.net.URL;","30","import java.nio.charset.StandardCharsets;","31","import java.util.LinkedHashMap;","32","import java.util.Map;","33","import javax.annotation.Nullable;","53","import static org.sonar.core.util.FileUtils.deleteQuietly;","76","    ImmutableProjectReactor projectReactor, DefaultAnalysisMode analysisMode, TempFolder temp, ReportPublisherStep[] publishers) {","96","      deleteQuietly(reportDir);","177",""],"delete":["44","import javax.annotation.Nullable;","45","import java.io.File;","46","import java.io.IOException;","47","import java.io.InputStream;","48","import java.io.Writer;","49","import java.net.URL;","50","import java.nio.charset.StandardCharsets;","51","import java.util.LinkedHashMap;","52","import java.util.Map;","75","                         ImmutableProjectReactor projectReactor, DefaultAnalysisMode analysisMode, TempFolder temp, ReportPublisherStep[] publishers) {","95","      FileUtils.deleteQuietly(reportDir);","176","      "]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/EmbeddedTomcat.java":[{"add":["30","import static org.sonar.core.util.FileUtils.deleteQuietly;","31","","100","    deleteQuietly(tomcatBasedir());"],"delete":["26","import org.apache.commons.io.FileUtils;","99","    FileUtils.deleteQuietly(tomcatBasedir());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/PluginDownloader.java":[{"add":["50","import static org.sonar.core.util.FileUtils.deleteQuietly;","96","        org.sonar.core.util.FileUtils.cleanDirectory(downloadDir);"],"delete":["44","import static org.apache.commons.io.FileUtils.cleanDirectory;","47","import static org.apache.commons.io.FileUtils.deleteQuietly;","97","        cleanDirectory(downloadDir);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginJarExploder.java":[{"add":["21","import java.io.File;","27","import org.sonar.core.platform.PluginJarExploder;","51","      org.sonar.core.util.FileUtils.cleanDirectory(toDir);"],"delete":["25","import org.sonar.core.platform.PluginJarExploder;","29","import java.io.File;","30","","31","import static org.apache.commons.io.FileUtils.cleanDirectory;","53","      cleanDirectory(toDir);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":[{"add":["23","import org.picocontainer.injectors.ProviderAdapter;","24","import org.sonar.api.batch.bootstrap.ProjectReactor;","25","import org.sonar.core.util.FileUtils;","40","      FileUtils.cleanDirectory(dir);"],"delete":["21","import org.apache.commons.io.FileUtils;","22","import org.picocontainer.injectors.ProviderAdapter;","23","import org.sonar.api.batch.bootstrap.ProjectReactor;","24","","27","import java.nio.file.Files;","42","      FileUtils.deleteDirectory(dir);","43","      Files.createDirectories(dir.toPath());"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/bootstrap\/GlobalTempFolderProvider.java":[{"add":["28","import org.apache.commons.lang.StringUtils;","29","import org.picocontainer.ComponentLifecycle;","30","import org.picocontainer.PicoContainer;","31","import org.picocontainer.injectors.ProviderAdapter;","32","import org.sonar.api.CoreProperties;","33","import org.sonar.api.utils.System2;","34","import org.sonar.api.utils.TempFolder;","35","import org.sonar.api.utils.internal.DefaultTempFolder;","36","import org.sonar.api.utils.log.Logger;","37","import org.sonar.api.utils.log.Loggers;","38","","39","import static org.sonar.core.util.FileUtils.deleteQuietly;","114","          deleteQuietly(p.toFile());"],"delete":["21","import org.picocontainer.ComponentLifecycle;","22","","23","import org.picocontainer.PicoContainer;","24","import org.picocontainer.injectors.ProviderAdapter;","25","import org.sonar.api.utils.System2;","26","import org.sonar.api.utils.log.Logger;","27","import org.sonar.api.utils.log.Loggers;","28","import org.apache.commons.io.FileUtils;","29","import org.sonar.api.utils.TempFolder;","30","import org.apache.commons.lang.StringUtils;","31","import org.sonar.api.CoreProperties;","32","import org.sonar.api.utils.internal.DefaultTempFolder;","33","","115","          FileUtils.deleteQuietly(p.toFile());"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/QProfileCopier.java":[{"add":["28","import org.apache.commons.io.FileUtils;","29","import org.apache.commons.io.IOUtils;","30","import org.apache.commons.lang.StringUtils;","31","import org.sonar.api.server.ServerSide;","32","import org.sonar.api.utils.TempFolder;","33","import org.sonar.db.DbClient;","34","import org.sonar.db.DbSession;","35","import org.sonar.db.qualityprofile.QualityProfileDto;","60","      org.sonar.core.util.FileUtils.deleteQuietly(backupFile);"],"delete":["21","import org.apache.commons.io.FileUtils;","22","import org.apache.commons.io.IOUtils;","23","import org.apache.commons.lang.StringUtils;","24","import org.sonar.api.server.ServerSide;","25","import org.sonar.api.utils.TempFolder;","26","import org.sonar.db.DbSession;","27","import org.sonar.db.qualityprofile.QualityProfileDto;","28","import org.sonar.db.DbClient;","29","","61","      FileUtils.deleteQuietly(backupFile);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/plugins\/ServerPluginRepository.java":[{"add":["55","import static org.sonar.core.util.FileUtils.deleteQuietly;","161","      org.sonar.core.util.FileUtils.deleteQuietly(info.getNonNullJarFile());"],"delete":["55","import static org.apache.commons.io.FileUtils.deleteQuietly;","161","      deleteQuietly(info.getNonNullJarFile());"]}],"sonar-core\/src\/main\/java\/org\/sonar\/core\/util\/DefaultHttpDownloader.java":[{"add":["54","import static org.sonar.core.util.FileUtils.deleteQuietly;","55","","150","      deleteQuietly(toFile);"],"delete":["31","","46","","48","","50","import org.apache.commons.io.FileUtils;","152","      FileUtils.deleteQuietly(toFile);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/report\/ReportFiles.java":[{"add":["51","      org.sonar.core.util.FileUtils.deleteQuietly(file);","58","    org.sonar.core.util.FileUtils.deleteQuietly(fileForUuid(taskUuid));","65","        org.sonar.core.util.FileUtils.cleanDirectory(dir);"],"delete":["51","      FileUtils.deleteQuietly(file);","58","    FileUtils.deleteQuietly(fileForUuid(taskUuid));","65","        FileUtils.cleanDirectory(dir);"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/cache\/DefaultProjectCacheStatus.java":[{"add":["29","import org.sonar.home.cache.PersistentCache;","30","","31","import static org.sonar.core.util.FileUtils.deleteQuietly;","57","    deleteQuietly(getStatusFilePath().toFile());","71","      deleteQuietly(p.toFile());"],"delete":["21","import org.apache.commons.io.FileUtils;","22","","23","import org.sonar.home.cache.PersistentCache;","24","","58","    FileUtils.deleteQuietly(getStatusFilePath().toFile());","72","      FileUtils.deleteQuietly(p.toFile());"]}]}},"6ec3fcf19a77c31b9fe137eabc56334948d39ac8":{"changes":{"\/dev\/null":"DELETE","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/DatabaseVersion.java":[{"add":["31","  public static final int LAST_VERSION = 1001;"],"delete":["31","  public static final int LAST_VERSION = 1002;"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/rows-h2.sql":[{"add":[],"delete":["364","INSERT INTO SCHEMA_MIGRATIONS(VERSION) VALUES ('1002');"]}]}},"df64c184d1427f74592459b42093e8b0b6878c98":{"changes":{"\/dev\/null":"DELETE","server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCount.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCountTest.java":"MODIFY","server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/DbTester.java":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCount.java":[{"add":["51","      massUpdate.select(\"select uuid,line_hashes from file_sources where line_count = ? and project_uuid = ?\")","54","      massUpdate.update(\"update file_sources set line_count = ? where uuid = ?\");","61","    String rowUuid = row.getString(1);","66","    update.setString(2, rowUuid);"],"delete":["51","      massUpdate.select(\"select id,line_hashes from file_sources where line_count = ? and project_uuid = ?\")","54","      massUpdate.update(\"update file_sources set line_count = ? where id = ?\");","61","    int rowId = row.getInt(1);","66","    update.setInt(2, rowId);"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/dbmigration\/PopulateFileSourceLineCountTest.java":[{"add":["32","import org.sonar.core.util.SequenceUuidFactory;","33","import org.sonar.core.util.UuidFactory;","48","  public DbTester db = DbTester.create(System2.INSTANCE);","49","","50","  private UuidFactory uuidFactory = new SequenceUuidFactory();","184","      \"UUID\", uuidFactory.create(),"],"delete":["46","  public DbTester db = DbTester.createForSchema(System2.INSTANCE, PopulateFileSourceLineCountTest.class, \"file_sources.sql\");"]}],"server\/sonar-db-dao\/src\/testFixtures\/java\/org\/sonar\/db\/DbTester.java":[{"add":[],"delete":["152","  public static DbTester createForSchema(System2 system2, Class testClass, String filename) {","153","    String path = StringUtils.replaceChars(testClass.getCanonicalName(), '.', '\/');","154","    String schemaPath = path + \"\/\" + filename;","155","    return new DbTester(system2, schemaPath).setDisableDefaultOrganization(true);","156","  }","157",""]}]}},"95d91e6fff76d8561e5d9dd71379dde8bc6258fa":{"changes":{"pom.xml":"MODIFY","sonar-application\/dependency-check-suppressions.xml":"ADD","sonar-plugin-api-deps\/pom.xml":"MODIFY"},"diff":{"pom.xml":[{"add":["88","    <jjwt.version>0.9.0<\/jjwt.version>","239","          <version>3.0.1<\/version>","242","            <suppressionFile>dependency-check-suppressions.xml<\/suppressionFile>","243","            <enableExperimental>true<\/enableExperimental>","820","        <version>${jjwt.version}<\/version>"],"delete":["88","","239","          <version>1.2.11<\/version>","242","            <suppressionFile>cve-false-positives.xml<\/suppressionFile>","819","        <version>0.6.0<\/version>"]}],"sonar-application\/dependency-check-suppressions.xml":[{"add":[],"delete":[]}],"sonar-plugin-api-deps\/pom.xml":[{"add":["196","","197","  <profiles>","198","    <!--","199","    This module contains deprecated dependencies (containing vulnerability issues) for plugins built for SonarQube < 5.2","200","    It will be removed for 7.0","201","    -->","202","    <profile>","203","      <!--","204","      check if maven dependencies have vulnerabilities listed in CVE","205","      Standalone command: mvn org.owasp:dependency-check-maven:check","206","      See http:\/\/jeremylong.github.io\/DependencyCheck","207","      -->","208","      <id>securityCheck<\/id>","209","      <build>","210","        <plugins>","211","          <plugin>","212","            <groupId>org.owasp<\/groupId>","213","            <artifactId>dependency-check-maven<\/artifactId>","214","            <executions>","215","              <execution>","216","                <goals>","217","                  <goal>check<\/goal>","218","                <\/goals>","219","                <configuration>","220","                  <skip>true<\/skip>","221","                <\/configuration>","222","              <\/execution>","223","            <\/executions>","224","          <\/plugin>","225","        <\/plugins>","226","      <\/build>","227","    <\/profile>","228","  <\/profiles>","229",""],"delete":[]}]}},"db035e56b216401f4fb27bc74bc8861cb4874802":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SearchAction.java":[{"add":["25","import javax.annotation.CheckForNull;","26","import javax.annotation.Nullable;","52","import static org.sonar.server.es.SearchOptions.MAX_LIMIT;","56","import static org.sonar.server.ws.WsParameterBuilder.QualifierParameterContext.newQualifierParameterContext;","86","      .addPagingParams(100, MAX_LIMIT)"],"delete":["45","import javax.annotation.CheckForNull;","46","import javax.annotation.Nullable;","47","","55","import static org.sonar.server.ws.WsParameterBuilder.QualifierParameterContext.newQualifierParameterContext;","86","      .addPagingParams(100)"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SearchActionTest.java":[{"add":["44","import org.sonar.server.component.ws.SearchAction.SearchRequest;","55","import org.sonarqube.ws.MediaTypes;","125","    WebService.Param pageSize = action.param(\"ps\");","126","    assertThat(pageSize.isRequired()).isFalse();","127","    assertThat(pageSize.defaultValue()).isEqualTo(\"100\");","128","    assertThat(pageSize.maximumValue()).isEqualTo(500);","129","    assertThat(pageSize.description()).isEqualTo(\"Page size. Must be greater than 0 and less than 500\");","130",""],"delete":["52","import org.sonarqube.ws.MediaTypes;","55","import org.sonar.server.component.ws.SearchAction.SearchRequest;"]}]}},"b70f2903e70aad17ed54153f11dc0ab7e325e930":{"changes":{"it\/it-tests\/src\/test\/java\/it\/Category4Suite.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/ws\/WsTest.java":"ADD"},"diff":{"it\/it-tests\/src\/test\/java\/it\/Category4Suite.java":[{"add":["44","import it.ws.WsTest;","88","  WsLocalCallTest.class,","89","  WsTest.class"],"delete":["87","  WsLocalCallTest.class"]}],"it\/it-tests\/src\/test\/java\/it\/ws\/WsTest.java":[{"add":[],"delete":[]}]}},"8f9cf4f2994f90fa69c2dd4f2b49a81ae98a6a25":{"changes":{"server\/sonar-web\/src\/main\/js\/helpers\/issues.ts":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/helpers\/issues.ts":[{"add":["109","function prepareClosed(issue: RawIssue) {","110","  return issue.status === 'CLOSED'","111","    ? { flows: undefined, line: undefined, textRange: undefined }","112","    : {};"],"delete":["109","function prepareClosed(issue: RawIssue): { flows?: undefined } {","110","  return issue.status === 'CLOSED' ? { flows: undefined } : {};"]}]}},"279deef3e8534bba914245ccf10610a459073640":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainerNotFound.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AzureDevOps.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectKey\/__tests__\/__snapshots__\/Key-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Account.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Home.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileContainer-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/Notifications.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/BranchAnalysis.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/CreateOrganization.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/__snapshots__\/CreateOrganization-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/PageTracker-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/AdminContainer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationEdit.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/__tests__\/__snapshots__\/Home-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/PageTracker-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/components\/__tests__\/__snapshots__\/Account-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/__snapshots__\/BackgroundTasksApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Details.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/Extension-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectsContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/UsersApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavHeader-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/AdminContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/__snapshots__\/Extension-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationPage.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/CreateProjectPageSonarCloud-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Security.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/AllProjects-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarQube.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Home.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/CreateOrganization-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AsAService.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarCloud.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/__tests__\/__snapshots__\/AppContainer-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.tsx":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/BackgroundTasksApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/users\/__tests__\/__snapshots__\/UsersApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/WebApiApp-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationPage-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/EncryptionApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavHeader.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/__tests__\/__snapshots__\/Details-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SonarLintIntegration.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectQualityGate\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Template.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileContainer.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/Extension.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/NotFound.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/common\/OrganizationHelmet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/__tests__\/__snapshots__\/OrganizationMembers-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/App-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SQHome.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/OrganizationMembers.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationEdit-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Contact.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/__tests__\/__snapshots__\/Notifications-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projectKey\/Key.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/PageTracker.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Pricing.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/ComponentContainerNotFound.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AzureDevOps.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/ProjectActivityApp.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","58","      <Helmet defer={false} title={translate('project_activity.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","58","      <Helmet title={translate('project_activity.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectKey\/__tests__\/__snapshots__\/Key-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","50","  <Helmet","51","    defer={false}","88","  <Helmet","89","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","50","  <HelmetWrapper","51","    defer={true}","88","  <HelmetWrapper","89","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Account.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","54","        <Helmet defaultTitle={title} defer={false} titleTemplate={`%s - ${title}`} \/>"],"delete":["20","import Helmet from 'react-helmet';","54","        <Helmet defaultTitle={title} titleTemplate={'%s - ' + title} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Home.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","37","      <Helmet defer={false} title={translate('permission_templates.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","37","      <Helmet title={translate('permission_templates.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/__tests__\/ProfileContainer-test.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';"],"delete":["21","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/Notifications.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","47","      <Helmet defer={false} title={translate('my_account.notifications')} \/>"],"delete":["21","import Helmet from 'react-helmet';","47","      <Helmet title={translate('my_account.notifications')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","28","  <Helmet"],"delete":["7","  <HelmetWrapper","28","  <HelmetWrapper"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/BranchAnalysis.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/CreateOrganization.tsx":[{"add":["23","import { Helmet } from 'react-helmet-async';","427","        <Helmet defer={false} title={header} titleTemplate=\"%s\" \/>"],"delete":["23","import { Helmet } from 'react-helmet';","427","        <Helmet title={header} titleTemplate=\"%s\" \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/__snapshots__\/CreateOrganization-test.tsx.snap":[{"add":["4","  <Helmet","5","    defer={false}","94","  <Helmet","95","    defer={false}","220","  <Helmet","221","    defer={false}","280","  <Helmet","281","    defer={false}","408","  <Helmet","409","    defer={false}"],"delete":["4","  <HelmetWrapper","5","    defer={true}","94","  <HelmetWrapper","95","    defer={true}","220","  <HelmetWrapper","221","    defer={true}","280","  <HelmetWrapper","281","    defer={true}","408","  <HelmetWrapper","409","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/PageTracker-test.tsx":[{"add":["57","  expect(wrapper.find('Helmet').prop('onChangeClientState')).toBe(wrapper.instance().trackPage);","72","  expect(wrapper.find('Helmet').prop('onChangeClientState')).toBe(wrapper.instance().trackPage);"],"delete":["57","  expect(wrapper.find('HelmetWrapper').prop('onChangeClientState')).toBe(","58","    wrapper.instance().trackPage","59","  );","74","  expect(wrapper.find('HelmetWrapper').prop('onChangeClientState')).toBe(","75","    wrapper.instance().trackPage","76","  );"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/AdminContainer-test.tsx.snap":[{"add":["4","  <Helmet","6","    defer={false}"],"delete":["4","  <HelmetWrapper","6","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationEdit.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","115","        <Helmet defer={false} title={title} \/>"],"delete":["21","import Helmet from 'react-helmet';","115","        <Helmet title={title} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/__tests__\/__snapshots__\/Home-test.tsx.snap":[{"add":["49","      <Helmet","58","      <\/Helmet>"],"delete":["49","      <HelmetWrapper","58","      <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/__tests__\/__snapshots__\/PageTracker-test.tsx.snap":[{"add":["3","<Helmet","4","  defer={false}","10","<Helmet","11","  defer={false}"],"delete":["3","<HelmetWrapper","4","  defer={true}","10","<HelmetWrapper","11","  defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/components\/__tests__\/__snapshots__\/Account-test.tsx.snap":[{"add":["9","  <Helmet","11","    defer={false}"],"delete":["9","  <HelmetWrapper","11","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","149","        <Helmet defer={false} title={translate('custom_metrics.page')} \/>"],"delete":["20","import { Helmet } from 'react-helmet';","149","        <Helmet title={translate('custom_metrics.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["9","  <Helmet","10","    defer={false}","48","  <Helmet","49","    defer={false}"],"delete":["9","  <HelmetWrapper","10","    defer={true}","48","  <HelmetWrapper","49","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectQualityProfiles\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","133","        <Helmet defer={false} title={translate('project_quality_profiles.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","133","        <Helmet title={translate('project_quality_profiles.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/__tests__\/__snapshots__\/BackgroundTasksApp-test.tsx.snap":[{"add":["19","  <Helmet","20","    defer={false}"],"delete":["19","  <HelmetWrapper","20","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectActivity\/components\/__tests__\/__snapshots__\/ProjectActivityApp-test.tsx.snap":[{"add":["10","  <Helmet","11","    defer={false}"],"delete":["10","  <HelmetWrapper","11","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/overview\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["46","  <Helmet","47","    defer={false}","55","  <\/Helmet>","100","  <Helmet","101","    defer={false}","109","  <\/Helmet>"],"delete":["46","  <HelmetWrapper","47","    defer={true}","55","  <\/HelmetWrapper>","100","  <HelmetWrapper","101","    defer={true}","109","  <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/Details.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","140","              <Helmet defer={false} title={qualityGate.name} \/>"],"delete":["20","import Helmet from 'react-helmet';","140","              <Helmet title={qualityGate.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/Extension-test.tsx":[{"add":["30","jest.mock('react-helmet-async', () => ({","31","  Helmet: () => null","32","}));","33",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["22","import { Helmet } from 'react-helmet-async';","561","        <Helmet defer={false} title={translate('coding_rules.page')}>"],"delete":["22","import { Helmet } from 'react-helmet';","561","        <Helmet title={translate('coding_rules.page')}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/projects\/ProjectsContainer.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","37","  <Helmet","38","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","37","  <HelmetWrapper","38","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectLinks\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","94","        <Helmet defer={false} title={translate('project_links.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","94","        <Helmet title={translate('project_links.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","135","        <Helmet defaultTitle={translate('maintenance.page')} defer={false} \/>"],"delete":["21","import Helmet from 'react-helmet';","135","        <Helmet defaultTitle={translate('maintenance.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectDeletion\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","32","      <Helmet defer={false} title={translate('deletion.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","32","      <Helmet title={translate('deletion.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/UsersApp.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","122","        <Helmet defer={false} title={translate('users.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","122","        <Helmet title={translate('users.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/__tests__\/__snapshots__\/ComponentNavHeader-test.tsx.snap":[{"add":["4","  <Helmet"],"delete":["4","  <HelmetWrapper"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/AdminContainer.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","122","        <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} \/>"],"delete":["20","import Helmet from 'react-helmet';","122","        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/__tests__\/__snapshots__\/Extension-test.tsx.snap":[{"add":["43","    <Helmet","45","    \/>","92","    <Helmet","94","    \/>"],"delete":["43","    <HelmetWrapper","44","      defer={true}","45","      encodeSpecialCharacters={true}","47","    >","48","      <SideEffect(NullComponent)","49","        defer={true}","50","        encodeSpecialCharacters={true}","51","        title=\"Foo\"","52","      >","53","        <NullComponent","54","          defer={true}","55","          encodeSpecialCharacters={true}","56","          title=\"Foo\"","57","        \/>","58","      <\/SideEffect(NullComponent)>","59","    <\/HelmetWrapper>","106","    <HelmetWrapper","107","      defer={true}","108","      encodeSpecialCharacters={true}","110","    >","111","      <SideEffect(NullComponent)","112","        defer={true}","113","        encodeSpecialCharacters={true}","114","        title=\"Foo\"","115","      >","116","        <NullComponent","117","          defer={true}","118","          encodeSpecialCharacters={true}","119","          title=\"Foo\"","120","        \/>","121","      <\/SideEffect(NullComponent)>","122","    <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/OrganizationPage.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","99","        <Helmet","100","          defaultTitle={organization.name}","101","          defer={false}","102","          titleTemplate={`%s - ${organization.name}`}","103","        \/>"],"delete":["21","import Helmet from 'react-helmet';","99","        <Helmet defaultTitle={organization.name} titleTemplate={'%s - ' + organization.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["3","<Helmet","4","  defer={false}","11","<Helmet","12","  defer={false}","19","<Helmet","20","  defer={false}"],"delete":["3","<HelmetWrapper","4","  defer={true}","11","<HelmetWrapper","12","  defer={true}","19","<HelmetWrapper","20","  defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/__tests__\/__snapshots__\/CreateProjectPageSonarCloud-test.tsx.snap":[{"add":["4","  <Helmet","33","  <Helmet","105","  <Helmet","170","  <Helmet"],"delete":["4","  <HelmetWrapper","33","  <HelmetWrapper","105","  <HelmetWrapper","170","  <HelmetWrapper"]}],"server\/sonar-web\/src\/main\/js\/apps\/groups\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","143","        <Helmet defer={false} title={translate('user_groups.page')} \/>"],"delete":["20","import { Helmet } from 'react-helmet';","143","        <Helmet title={translate('user_groups.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","122","        <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} \/>"],"delete":["20","import Helmet from 'react-helmet';","122","        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/components\/Security.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","34","      <Helmet defer={false} title={translate('my_account.security')} \/>"],"delete":["20","import Helmet from 'react-helmet';","34","      <Helmet title={translate('my_account.security')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","373","        <Helmet defer={false} title={translate('permissions.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","373","        <Helmet title={translate('permissions.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectsManagement\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","185","        <Helmet defer={false} title={translate('projects_management')} \/>"],"delete":["21","import Helmet from 'react-helmet';","185","        <Helmet title={translate('projects_management')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/AllProjects-test.tsx.snap":[{"add":["35","  <Helmet","36","    defer={false}","181","  <Helmet","182","    defer={false}","273","  <Helmet","274","    defer={false}","296","  <Helmet","297","    defer={false}","322","  <Helmet","323","    defer={false}"],"delete":["35","  <HelmetWrapper","36","    defer={true}","181","  <HelmetWrapper","182","    defer={true}","273","  <HelmetWrapper","274","    defer={true}","296","  <HelmetWrapper","297","    defer={true}","322","  <HelmetWrapper","323","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';"],"delete":["21","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarQube.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["30","  <Helmet","31","    defer={false}","372","  <Helmet","373","    defer={false}"],"delete":["30","  <HelmetWrapper","31","    defer={true}","372","  <HelmetWrapper","373","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Home.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["9","  <Helmet","10","    defer={false}","46","  <Helmet","47","    defer={false}","62","  <Helmet","63","    defer={false}"],"delete":["9","  <HelmetWrapper","10","    defer={true}","46","  <HelmetWrapper","47","    defer={true}","62","  <HelmetWrapper","63","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/organization\/__tests__\/CreateOrganization-test.tsx":[{"add":["23","import { HelmetProvider } from 'react-helmet-async';","315","  return mount<CreateOrganization>(<HelmetProvider>{createComponent(props)}<\/HelmetProvider>);"],"delete":["314","  return mount<CreateOrganization>(createComponent(props));"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/AsAService.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/create\/project\/CreateProjectPageSonarCloud.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/app\/utils\/startReactApp.tsx":[{"add":["23","import { HelmetProvider } from 'react-helmet-async';","99","    <HelmetProvider>","100","      <Provider store={store}>","101","        <IntlProvider defaultLocale={lang} locale={lang}>","102","          <ThemeProvider theme={theme}>","103","            <Router history={history} onUpdate={handleUpdate}>","104","              <Route","105","                path=\"\/account\/issues\"","106","                onEnter={(_, replace) => {","107","                  replace({ pathname: '\/issues', query: { myIssues: 'true', resolved: 'false' } });","108","                }}","109","              \/>","111","              <Route","112","                path=\"\/codingrules\"","113","                onEnter={(_, replace) => {","114","                  replace('\/coding_rules' + window.location.hash);","115","                }}","116","              \/>","118","              <Route","119","                path=\"\/dashboard\/index\/:key\"","120","                onEnter={(nextState, replace) => {","121","                  replace({ pathname: '\/dashboard', query: { id: nextState.params.key } });","122","                }}","123","              \/>","125","              <Route","126","                path=\"\/issues\/search\"","127","                onEnter={(_, replace) => {","128","                  replace('\/issues' + window.location.hash);","129","                }}","130","              \/>","132","              <Redirect from=\"\/admin\" to=\"\/admin\/settings\" \/>","133","              <Redirect from=\"\/background_tasks\" to=\"\/admin\/background_tasks\" \/>","134","              <Redirect from=\"\/component\/index\" to=\"\/component\" \/>","135","              <Redirect from=\"\/component_issues\" to=\"\/project\/issues\" \/>","136","              <Redirect from=\"\/dashboard\/index\" to=\"\/dashboard\" \/>","137","              <Redirect","138","                from=\"\/documentation\/analysis\/languages\/vb\"","139","                to=\"\/documentation\/analysis\/languages\/vbnet\/\"","140","              \/>","141","              <Redirect from=\"\/governance\" to=\"\/portfolio\" \/>","142","              <Redirect from=\"\/groups\" to=\"\/admin\/groups\" \/>","143","              <Redirect from=\"\/extension\/governance\/portfolios\" to=\"\/portfolios\" \/>","144","              <Redirect from=\"\/metrics\" to=\"\/admin\/custom_metrics\" \/>","145","              <Redirect from=\"\/permission_templates\" to=\"\/admin\/permission_templates\" \/>","146","              <Redirect from=\"\/profiles\/index\" to=\"\/profiles\" \/>","147","              <Redirect from=\"\/projects_admin\" to=\"\/admin\/projects_management\" \/>","148","              <Redirect from=\"\/quality_gates\/index\" to=\"\/quality_gates\" \/>","149","              <Redirect from=\"\/roles\/global\" to=\"\/admin\/permissions\" \/>","150","              <Redirect from=\"\/admin\/roles\/global\" to=\"\/admin\/permissions\" \/>","151","              <Redirect from=\"\/settings\" to=\"\/admin\/settings\" \/>","152","              <Redirect from=\"\/settings\/encryption\" to=\"\/admin\/settings\/encryption\" \/>","153","              <Redirect from=\"\/settings\/index\" to=\"\/admin\/settings\" \/>","154","              <Redirect from=\"\/sessions\/login\" to=\"\/sessions\/new\" \/>","155","              <Redirect from=\"\/system\" to=\"\/admin\/system\" \/>","156","              <Redirect from=\"\/system\/index\" to=\"\/admin\/system\" \/>","157","              <Redirect from=\"\/view\" to=\"\/portfolio\" \/>","158","              <Redirect from=\"\/users\" to=\"\/admin\/users\" \/>","160","              <Route","161","                path=\"markdown\/help\"","162","                component={lazyLoad(() => import('..\/components\/MarkdownHelp'))}","163","              \/>","165","              <Route component={lazyLoad(() => import('..\/components\/SimpleContainer'))}>","166","                <Route path=\"maintenance\">{maintenanceRoutes}<\/Route>","167","                <Route path=\"setup\">{setupRoutes}<\/Route>","170","              <Route component={MigrationContainer}>","171","                <Route component={lazyLoad(() => import('..\/components\/SimpleSessionsContainer'))}>","172","                  <RouteWithChildRoutes path=\"\/sessions\" childRoutes={sessionsRoutes} \/>","173","                <\/Route>","175","                <Route path=\"\/\" component={App}>","176","                  <IndexRoute component={lazyLoad(() => import('..\/components\/Landing'))} \/>","177","                  <RouteWithChildRoutes path=\"about\" childRoutes={aboutRoutes} \/>","178","","179","                  <Route component={GlobalContainer}>","180","                    <RouteWithChildRoutes path=\"account\" childRoutes={accountRoutes} \/>","181","                    {!isSonarCloud() && (","182","                      <RouteWithChildRoutes path=\"coding_rules\" childRoutes={codingRulesRoutes} \/>","184","                    <RouteWithChildRoutes path=\"documentation\" childRoutes={documentationRoutes} \/>","185","                    <Route path=\"explore\" component={Explore}>","186","                      <Route path=\"issues\" component={ExploreIssues} \/>","187","                      <Route path=\"projects\" component={ExploreProjects} \/>","192","                        import('..\/components\/extensions\/GlobalPageExtension')","195","                    <Route path=\"issues\" component={IssuesPageSelector} \/>","196","                    <RouteWithChildRoutes path=\"onboarding\" childRoutes={onboardingRoutes} \/>","197","                    {isSonarCloud() && (","198","                      <Route","199","                        path=\"create-organization\"","200","                        component={lazyLoad(() =>","201","                          import('..\/..\/apps\/create\/organization\/CreateOrganization')","202","                        )}","203","                      \/>","205","                    <RouteWithChildRoutes path=\"organizations\" childRoutes={organizationsRoutes} \/>","206","                    <RouteWithChildRoutes path=\"projects\" childRoutes={projectsRoutes} \/>","207","                    <RouteWithChildRoutes path=\"quality_gates\" childRoutes={qualityGatesRoutes} \/>","208","                    <Route","209","                      path=\"portfolios\"","210","                      component={lazyLoad(() => import('..\/components\/extensions\/PortfoliosPage'))}","211","                    \/>","212","                    {!isSonarCloud() && (","213","                      <RouteWithChildRoutes path=\"profiles\" childRoutes={qualityProfilesRoutes} \/>","214","                    )}","215","                    <RouteWithChildRoutes path=\"web_api\" childRoutes={webAPIRoutes} \/>","216","","217","                    <Route component={lazyLoad(() => import('..\/components\/ComponentContainer'))}>","218","                      <RouteWithChildRoutes path=\"code\" childRoutes={codeRoutes} \/>","219","                      <RouteWithChildRoutes","220","                        path=\"component_measures\"","221","                        childRoutes={componentMeasuresRoutes}","222","                      \/>","223","                      <RouteWithChildRoutes path=\"dashboard\" childRoutes={overviewRoutes} \/>","224","                      <RouteWithChildRoutes path=\"portfolio\" childRoutes={portfolioRoutes} \/>","225","                      <RouteWithChildRoutes","226","                        path=\"project\/activity\"","227","                        childRoutes={projectActivityRoutes}","228","                      \/>","229","                      <Route","230","                        path=\"project\/extension\/:pluginKey\/:extensionKey\"","231","                        component={lazyLoad(() =>","232","                          import('..\/components\/extensions\/ProjectPageExtension')","233","                        )}","234","                      \/>","235","                      <Route path=\"project\/issues\" component={Issues} \/>","236","                      <RouteWithChildRoutes","237","                        path=\"project\/quality_gate\"","238","                        childRoutes={projectQualityGateRoutes}","239","                      \/>","240","                      <RouteWithChildRoutes","241","                        path=\"project\/quality_profiles\"","242","                        childRoutes={projectQualityProfilesRoutes}","243","                      \/>","244","                      <Route","245","                        component={lazyLoad(() => import('..\/components\/ProjectAdminContainer'))}>","246","                        {!isSonarCloud() && (","247","                          <RouteWithChildRoutes","248","                            path=\"custom_measures\"","249","                            childRoutes={customMeasuresRoutes}","250","                          \/>","251","                        )}","252","                        <Route","253","                          path=\"project\/admin\/extension\/:pluginKey\/:extensionKey\"","254","                          component={lazyLoad(() =>","255","                            import('..\/components\/extensions\/ProjectAdminPageExtension')","256","                          )}","257","                        \/>","258","                        <RouteWithChildRoutes","259","                          path=\"project\/background_tasks\"","260","                          childRoutes={backgroundTasksRoutes}","261","                        \/>","262","                        <RouteWithChildRoutes","263","                          path=\"project\/baseline\"","264","                          childRoutes={projectBaselineRoutes}","265","                        \/>","266","                        <RouteWithChildRoutes","267","                          path=\"project\/branches\"","268","                          childRoutes={projectBranchesRoutes}","269","                        \/>","270","                        <RouteWithChildRoutes","271","                          path=\"project\/settings\"","272","                          childRoutes={settingsRoutes}","273","                        \/>","274","                        <RouteWithChildRoutes","275","                          path=\"project_roles\"","276","                          childRoutes={projectPermissionsRoutes}","277","                        \/>","278","                        <RouteWithChildRoutes","279","                          path=\"project\/webhooks\"","280","                          childRoutes={webhooksRoutes}","281","                        \/>","282","                        <Route","283","                          path=\"project\/deletion\"","284","                          component={lazyLoad(() => import('..\/..\/apps\/projectDeletion\/App'))}","285","                        \/>","286","                        <Route","287","                          path=\"project\/links\"","288","                          component={lazyLoad(() => import('..\/..\/apps\/projectLinks\/App'))}","289","                        \/>","290","                        <Route","291","                          path=\"project\/key\"","292","                          component={lazyLoad(() => import('..\/..\/apps\/projectKey\/Key'))}","293","                        \/>","294","                      <\/Route>","295","                    <\/Route>","296","","297","                    <Route","298","                      component={lazyLoad(() => import('..\/components\/AdminContainer'))}","299","                      path=\"admin\">","300","                      <Route","301","                        path=\"extension\/:pluginKey\/:extensionKey\"","302","                        component={lazyLoad(() =>","303","                          import('..\/components\/extensions\/GlobalAdminPageExtension')","304","                        )}","305","                      \/>","306","                      <RouteWithChildRoutes","307","                        path=\"background_tasks\"","308","                        childRoutes={backgroundTasksRoutes}","309","                      \/>","310","                      <RouteWithChildRoutes","311","                        path=\"custom_metrics\"","312","                        childRoutes={customMetricsRoutes}","313","                      \/>","314","                      {!isSonarCloud() && (","315","                        <>","316","                          <RouteWithChildRoutes path=\"groups\" childRoutes={groupsRoutes} \/>","317","                          <RouteWithChildRoutes","318","                            path=\"permission_templates\"","319","                            childRoutes={permissionTemplatesRoutes}","320","                          \/>","321","                          <RouteWithChildRoutes","322","                            path=\"permissions\"","323","                            childRoutes={globalPermissionsRoutes}","324","                          \/>","325","                          <RouteWithChildRoutes","326","                            path=\"projects_management\"","327","                            childRoutes={projectsManagementRoutes}","328","                          \/>","329","                        <\/>","330","                      )}","331","                      <RouteWithChildRoutes path=\"settings\" childRoutes={settingsRoutes} \/>","332","                      <RouteWithChildRoutes path=\"system\" childRoutes={systemRoutes} \/>","333","                      <RouteWithChildRoutes path=\"marketplace\" childRoutes={marketplaceRoutes} \/>","334","                      <RouteWithChildRoutes path=\"users\" childRoutes={usersRoutes} \/>","335","                      <RouteWithChildRoutes path=\"webhooks\" childRoutes={webhooksRoutes} \/>","336","                    <\/Route>","338","                  <Route","339","                    path=\"not_found\"","340","                    component={lazyLoad(() => import('..\/components\/NotFound'))}","341","                  \/>","342","                  <Route path=\"*\" component={lazyLoad(() => import('..\/components\/NotFound'))} \/>","345","            <\/Router>","346","          <\/ThemeProvider>","347","        <\/IntlProvider>","348","      <\/Provider>","349","    <\/HelmetProvider>,"],"delete":["98","    <Provider store={store}>","99","      <IntlProvider defaultLocale={lang} locale={lang}>","100","        <ThemeProvider theme={theme}>","101","          <Router history={history} onUpdate={handleUpdate}>","102","            <Route","103","              path=\"\/account\/issues\"","104","              onEnter={(_, replace) => {","105","                replace({ pathname: '\/issues', query: { myIssues: 'true', resolved: 'false' } });","106","              }}","107","            \/>","109","            <Route","110","              path=\"\/codingrules\"","111","              onEnter={(_, replace) => {","112","                replace('\/coding_rules' + window.location.hash);","113","              }}","114","            \/>","116","            <Route","117","              path=\"\/dashboard\/index\/:key\"","118","              onEnter={(nextState, replace) => {","119","                replace({ pathname: '\/dashboard', query: { id: nextState.params.key } });","120","              }}","121","            \/>","123","            <Route","124","              path=\"\/issues\/search\"","125","              onEnter={(_, replace) => {","126","                replace('\/issues' + window.location.hash);","127","              }}","128","            \/>","130","            <Redirect from=\"\/admin\" to=\"\/admin\/settings\" \/>","131","            <Redirect from=\"\/background_tasks\" to=\"\/admin\/background_tasks\" \/>","132","            <Redirect from=\"\/component\/index\" to=\"\/component\" \/>","133","            <Redirect from=\"\/component_issues\" to=\"\/project\/issues\" \/>","134","            <Redirect from=\"\/dashboard\/index\" to=\"\/dashboard\" \/>","135","            <Redirect","136","              from=\"\/documentation\/analysis\/languages\/vb\"","137","              to=\"\/documentation\/analysis\/languages\/vbnet\/\"","138","            \/>","139","            <Redirect from=\"\/governance\" to=\"\/portfolio\" \/>","140","            <Redirect from=\"\/groups\" to=\"\/admin\/groups\" \/>","141","            <Redirect from=\"\/extension\/governance\/portfolios\" to=\"\/portfolios\" \/>","142","            <Redirect from=\"\/metrics\" to=\"\/admin\/custom_metrics\" \/>","143","            <Redirect from=\"\/permission_templates\" to=\"\/admin\/permission_templates\" \/>","144","            <Redirect from=\"\/profiles\/index\" to=\"\/profiles\" \/>","145","            <Redirect from=\"\/projects_admin\" to=\"\/admin\/projects_management\" \/>","146","            <Redirect from=\"\/quality_gates\/index\" to=\"\/quality_gates\" \/>","147","            <Redirect from=\"\/roles\/global\" to=\"\/admin\/permissions\" \/>","148","            <Redirect from=\"\/admin\/roles\/global\" to=\"\/admin\/permissions\" \/>","149","            <Redirect from=\"\/settings\" to=\"\/admin\/settings\" \/>","150","            <Redirect from=\"\/settings\/encryption\" to=\"\/admin\/settings\/encryption\" \/>","151","            <Redirect from=\"\/settings\/index\" to=\"\/admin\/settings\" \/>","152","            <Redirect from=\"\/sessions\/login\" to=\"\/sessions\/new\" \/>","153","            <Redirect from=\"\/system\" to=\"\/admin\/system\" \/>","154","            <Redirect from=\"\/system\/index\" to=\"\/admin\/system\" \/>","155","            <Redirect from=\"\/view\" to=\"\/portfolio\" \/>","156","            <Redirect from=\"\/users\" to=\"\/admin\/users\" \/>","158","            <Route","159","              path=\"markdown\/help\"","160","              component={lazyLoad(() => import('..\/components\/MarkdownHelp'))}","161","            \/>","163","            <Route component={lazyLoad(() => import('..\/components\/SimpleContainer'))}>","164","              <Route path=\"maintenance\">{maintenanceRoutes}<\/Route>","165","              <Route path=\"setup\">{setupRoutes}<\/Route>","166","            <\/Route>","167","","168","            <Route component={MigrationContainer}>","169","              <Route component={lazyLoad(() => import('..\/components\/SimpleSessionsContainer'))}>","170","                <RouteWithChildRoutes path=\"\/sessions\" childRoutes={sessionsRoutes} \/>","173","              <Route path=\"\/\" component={App}>","174","                <IndexRoute component={lazyLoad(() => import('..\/components\/Landing'))} \/>","175","                <RouteWithChildRoutes path=\"about\" childRoutes={aboutRoutes} \/>","177","                <Route component={GlobalContainer}>","178","                  <RouteWithChildRoutes path=\"account\" childRoutes={accountRoutes} \/>","179","                  {!isSonarCloud() && (","180","                    <RouteWithChildRoutes path=\"coding_rules\" childRoutes={codingRulesRoutes} \/>","181","                  )}","182","                  <RouteWithChildRoutes path=\"documentation\" childRoutes={documentationRoutes} \/>","183","                  <Route path=\"explore\" component={Explore}>","184","                    <Route path=\"issues\" component={ExploreIssues} \/>","185","                    <Route path=\"projects\" component={ExploreProjects} \/>","186","                  <\/Route>","187","                  <Route","188","                    path=\"extension\/:pluginKey\/:extensionKey\"","189","                    component={lazyLoad(() =>","190","                      import('..\/components\/extensions\/GlobalPageExtension')","192","                  \/>","193","                  <Route path=\"issues\" component={IssuesPageSelector} \/>","194","                  <RouteWithChildRoutes path=\"onboarding\" childRoutes={onboardingRoutes} \/>","195","                  {isSonarCloud() && (","196","                    <Route","197","                      path=\"create-organization\"","198","                      component={lazyLoad(() =>","199","                        import('..\/..\/apps\/create\/organization\/CreateOrganization')","200","                      )}","201","                    \/>","202","                  )}","203","                  <RouteWithChildRoutes path=\"organizations\" childRoutes={organizationsRoutes} \/>","204","                  <RouteWithChildRoutes path=\"projects\" childRoutes={projectsRoutes} \/>","205","                  <RouteWithChildRoutes path=\"quality_gates\" childRoutes={qualityGatesRoutes} \/>","206","                  <Route","207","                    path=\"portfolios\"","208","                    component={lazyLoad(() => import('..\/components\/extensions\/PortfoliosPage'))}","209","                  \/>","210","                  {!isSonarCloud() && (","211","                    <RouteWithChildRoutes path=\"profiles\" childRoutes={qualityProfilesRoutes} \/>","212","                  )}","213","                  <RouteWithChildRoutes path=\"web_api\" childRoutes={webAPIRoutes} \/>","214","","215","                  <Route component={lazyLoad(() => import('..\/components\/ComponentContainer'))}>","216","                    <RouteWithChildRoutes path=\"code\" childRoutes={codeRoutes} \/>","217","                    <RouteWithChildRoutes","218","                      path=\"component_measures\"","219","                      childRoutes={componentMeasuresRoutes}","220","                    \/>","221","                    <RouteWithChildRoutes path=\"dashboard\" childRoutes={overviewRoutes} \/>","222","                    <RouteWithChildRoutes path=\"portfolio\" childRoutes={portfolioRoutes} \/>","223","                    <RouteWithChildRoutes","224","                      path=\"project\/activity\"","225","                      childRoutes={projectActivityRoutes}","226","                    \/>","227","                    <Route","228","                      path=\"project\/extension\/:pluginKey\/:extensionKey\"","229","                      component={lazyLoad(() =>","230","                        import('..\/components\/extensions\/ProjectPageExtension')","231","                      )}","232","                    \/>","233","                    <Route path=\"project\/issues\" component={Issues} \/>","234","                    <RouteWithChildRoutes","235","                      path=\"project\/quality_gate\"","236","                      childRoutes={projectQualityGateRoutes}","237","                    \/>","238","                    <RouteWithChildRoutes","239","                      path=\"project\/quality_profiles\"","240","                      childRoutes={projectQualityProfilesRoutes}","241","                    \/>","242","                    <Route","243","                      component={lazyLoad(() => import('..\/components\/ProjectAdminContainer'))}>","244","                      {!isSonarCloud() && (","245","                        <RouteWithChildRoutes","246","                          path=\"custom_measures\"","247","                          childRoutes={customMeasuresRoutes}","248","                        \/>","249","                      )}","250","                      <Route","251","                        path=\"project\/admin\/extension\/:pluginKey\/:extensionKey\"","252","                        component={lazyLoad(() =>","253","                          import('..\/components\/extensions\/ProjectAdminPageExtension')","254","                        )}","255","                      \/>","256","                      <RouteWithChildRoutes","257","                        path=\"project\/background_tasks\"","258","                        childRoutes={backgroundTasksRoutes}","259","                      \/>","260","                      <RouteWithChildRoutes","261","                        path=\"project\/baseline\"","262","                        childRoutes={projectBaselineRoutes}","263","                      \/>","264","                      <RouteWithChildRoutes","265","                        path=\"project\/branches\"","266","                        childRoutes={projectBranchesRoutes}","267","                      \/>","268","                      <RouteWithChildRoutes path=\"project\/settings\" childRoutes={settingsRoutes} \/>","269","                      <RouteWithChildRoutes","270","                        path=\"project_roles\"","271","                        childRoutes={projectPermissionsRoutes}","272","                      \/>","273","                      <RouteWithChildRoutes path=\"project\/webhooks\" childRoutes={webhooksRoutes} \/>","274","                      <Route","275","                        path=\"project\/deletion\"","276","                        component={lazyLoad(() => import('..\/..\/apps\/projectDeletion\/App'))}","277","                      \/>","278","                      <Route","279","                        path=\"project\/links\"","280","                        component={lazyLoad(() => import('..\/..\/apps\/projectLinks\/App'))}","281","                      \/>","282","                      <Route","283","                        path=\"project\/key\"","284","                        component={lazyLoad(() => import('..\/..\/apps\/projectKey\/Key'))}","285","                      \/>","287","                  <\/Route>","288","","289","                  <Route","290","                    component={lazyLoad(() => import('..\/components\/AdminContainer'))}","291","                    path=\"admin\">","295","                        import('..\/components\/extensions\/GlobalAdminPageExtension')","298","                    <RouteWithChildRoutes","299","                      path=\"background_tasks\"","300","                      childRoutes={backgroundTasksRoutes}","301","                    \/>","302","                    <RouteWithChildRoutes path=\"custom_metrics\" childRoutes={customMetricsRoutes} \/>","303","                    {!isSonarCloud() && (","304","                      <>","305","                        <RouteWithChildRoutes path=\"groups\" childRoutes={groupsRoutes} \/>","306","                        <RouteWithChildRoutes","307","                          path=\"permission_templates\"","308","                          childRoutes={permissionTemplatesRoutes}","309","                        \/>","310","                        <RouteWithChildRoutes","311","                          path=\"permissions\"","312","                          childRoutes={globalPermissionsRoutes}","313","                        \/>","314","                        <RouteWithChildRoutes","315","                          path=\"projects_management\"","316","                          childRoutes={projectsManagementRoutes}","317","                        \/>","318","                      <\/>","320","                    <RouteWithChildRoutes path=\"settings\" childRoutes={settingsRoutes} \/>","321","                    <RouteWithChildRoutes path=\"system\" childRoutes={systemRoutes} \/>","322","                    <RouteWithChildRoutes path=\"marketplace\" childRoutes={marketplaceRoutes} \/>","323","                    <RouteWithChildRoutes path=\"users\" childRoutes={usersRoutes} \/>","324","                    <RouteWithChildRoutes path=\"webhooks\" childRoutes={webhooksRoutes} \/>","327","                <Route","328","                  path=\"not_found\"","329","                  component={lazyLoad(() => import('..\/components\/NotFound'))}","330","                \/>","331","                <Route path=\"*\" component={lazyLoad(() => import('..\/components\/NotFound'))} \/>","333","            <\/Route>","334","          <\/Router>","335","        <\/ThemeProvider>","336","      <\/IntlProvider>","337","    <\/Provider>,"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/__tests__\/__snapshots__\/AppContainer-test.tsx.snap":[{"add":["10","  <Helmet","11","    defer={false}","46","  <Helmet","47","    defer={false}","82","  <Helmet","83","    defer={false}","118","  <Helmet","119","    defer={false}","152","  <Helmet","153","    defer={false}","188","  <Helmet","189","    defer={false}"],"delete":["10","  <HelmetWrapper","11","    defer={true}","46","  <HelmetWrapper","47","    defer={true}","82","  <HelmetWrapper","83","    defer={true}","118","  <HelmetWrapper","119","    defer={true}","152","  <HelmetWrapper","153","    defer={true}","188","  <HelmetWrapper","189","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","160","        <Helmet defer={false} title={translate('api_documentation.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","160","        <Helmet title={translate('api_documentation.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/components\/AppContainer.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","95","        <Helmet defer={false} title={translate('settings.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","95","        <Helmet title={translate('settings.page')} \/>"]}],"server\/sonar-web\/package.json":[{"add":["29","    \"react-helmet-async\": \"1.0.4\",","68","    \"@types\/react-helmet\": \"5.0.14\","],"delete":["29","    \"react-helmet\": \"5.2.0\",","68","    \"@types\/react-helmet\": \"5.0.8\","]}],"server\/sonar-web\/src\/main\/js\/apps\/background-tasks\/components\/BackgroundTasksApp.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","220","        <Helmet defer={false} title={translate('background_tasks.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","220","        <Helmet title={translate('background_tasks.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/__tests__\/__snapshots__\/UsersApp-test.tsx.snap":[{"add":["10","  <Helmet","11","    defer={false}","51","  <Helmet","52","    defer={false}"],"delete":["10","  <HelmetWrapper","11","    defer={true}","51","  <HelmetWrapper","52","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["4","  <Helmet","6","    defer={false}","65","  <Helmet","67","    defer={false}","126","  <Helmet","128","    defer={false}","167","  <Helmet","169","    defer={false}","208","  <Helmet","210","    defer={false}","242","  <Helmet","244","    defer={false}","283","  <Helmet","285","    defer={false}","313","  <Helmet","315","    defer={false}","347","  <Helmet","349","    defer={false}","381","  <Helmet","383","    defer={false}","409","  <Helmet","411","    defer={false}","459","  <Helmet","461","    defer={false}"],"delete":["4","  <HelmetWrapper","6","    defer={true}","65","  <HelmetWrapper","67","    defer={true}","126","  <HelmetWrapper","128","    defer={true}","167","  <HelmetWrapper","169","    defer={true}","208","  <HelmetWrapper","210","    defer={true}","242","  <HelmetWrapper","244","    defer={true}","283","  <HelmetWrapper","285","    defer={true}","313","  <HelmetWrapper","315","    defer={true}","347","  <HelmetWrapper","349","    defer={true}","381","  <HelmetWrapper","383","    defer={true}","409","  <HelmetWrapper","411","    defer={true}","459","  <HelmetWrapper","461","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/__tests__\/__snapshots__\/WebApiApp-test.tsx.snap":[{"add":["9","  <Helmet","10","    defer={false}"],"delete":["9","  <HelmetWrapper","10","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","123","        <Helmet defer={false} title={translate('system_info.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","123","        <Helmet title={translate('system_info.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationPage-test.tsx.snap":[{"add":["21","  <Helmet","23","    defer={false}"],"delete":["21","  <HelmetWrapper","23","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/settings\/encryption\/EncryptionApp.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","73","        <Helmet defer={false} title={translate('property.category.security.encryption')} \/>"],"delete":["20","import Helmet from 'react-helmet';","73","        <Helmet title={translate('property.category.security.encryption')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/App.tsx":[{"add":["23","import { Helmet } from 'react-helmet-async';","271","        <Helmet","272","          defer={false}","273","          title={sourceViewer !== undefined ? sourceViewer.name : defaultTitle}","274","        \/>"],"delete":["23","import Helmet from 'react-helmet';","271","        <Helmet title={sourceViewer !== undefined ? sourceViewer.name : defaultTitle} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/nav\/component\/ComponentNavHeader.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/__tests__\/__snapshots__\/Details-test.tsx.snap":[{"add":["10","    <Helmet","11","      defer={false}"],"delete":["10","    <HelmetWrapper","11","      defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SonarLintIntegration.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.tsx":[{"add":["22","import { Helmet } from 'react-helmet-async';","1171","        <Helmet defer={false} title={openIssue ? openIssue.message : translate('issues.page')} \/>"],"delete":["22","import Helmet from 'react-helmet';","1171","        <Helmet title={openIssue ? openIssue.message : translate('issues.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectQualityGate\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","135","        <Helmet defer={false} title={translate('project_quality_gate.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","135","        <Helmet title={translate('project_quality_gate.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/organizations\/UserOrganizations.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/App.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","126","        <Helmet defer={false} title={translate('webhooks.page')} \/>"],"delete":["20","import { Helmet } from 'react-helmet';","126","        <Helmet title={translate('webhooks.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/Template.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","200","        <Helmet defer={false} title={this.props.template.name} \/>"],"delete":["20","import Helmet from 'react-helmet';","200","        <Helmet title={this.props.template.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.tsx":[{"add":["22","import { Helmet } from 'react-helmet-async';","312","        <Helmet defer={false} title={this.getHelmetTitle(query, displayOverview, metric)} \/>"],"delete":["22","import Helmet from 'react-helmet';","312","        <Helmet title={this.getHelmetTitle(query, displayOverview, metric)} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/components\/ProfileContainer.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","84","        <Helmet defer={false} title={profile.name} \/>"],"delete":["20","import Helmet from 'react-helmet';","84","        <Helmet title={profile.name} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/extensions\/Extension.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/global\/components\/App.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","275","        <Helmet defer={false} title={translate('global_permissions.permission')} \/>"],"delete":["21","import Helmet from 'react-helmet';","275","        <Helmet title={translate('global_permissions.permission')} \/>"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/NotFound.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/components\/common\/OrganizationHelmet.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","29","  return (","30","    <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} \/>","31","  );"],"delete":["20","import Helmet from 'react-helmet';","29","  return <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} \/>;"]}],"server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/App.tsx":[{"add":["23","import { Helmet } from 'react-helmet-async';","176","        <Helmet","177","          defer={false}","178","          title={isIndex || !page.title ? mainTitle : `${page.title} | ${mainTitle}`}>"],"delete":["23","import Helmet from 'react-helmet';","176","        <Helmet title={isIndex || !page.title ? mainTitle : `${page.title} | ${mainTitle}`}>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/__tests__\/__snapshots__\/OrganizationMembers-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","35","  <Helmet","36","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","35","  <HelmetWrapper","36","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","29","  <Helmet","30","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","29","  <HelmetWrapper","30","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/code\/components\/__tests__\/App-test.tsx":[{"add":["50","  expect(wrapper.find('Helmet')).toMatchSnapshot();","63","  expect(wrapper.find('Helmet')).toMatchSnapshot();","76","  expect(wrapper.find('Helmet')).toMatchSnapshot();"],"delete":["50","  expect(wrapper.find('HelmetWrapper')).toMatchSnapshot();","63","  expect(wrapper.find('HelmetWrapper')).toMatchSnapshot();","76","  expect(wrapper.find('HelmetWrapper')).toMatchSnapshot();"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/SQHome.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizationMembers\/OrganizationMembers.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","201","        <Helmet defer={false} title={translate('organization.members.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","201","        <Helmet title={translate('organization.members.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/organizations\/components\/__tests__\/__snapshots__\/OrganizationEdit-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","166","  <Helmet","167","    defer={false}","326","  <Helmet","327","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","166","  <HelmetWrapper","167","    defer={true}","326","  <HelmetWrapper","327","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';","366","        <Helmet defer={false} title={translate('projects.page')} \/>"],"delete":["21","import Helmet from 'react-helmet';","366","        <Helmet title={translate('projects.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Contact.tsx":[{"add":["21","import { Helmet } from 'react-helmet-async';"],"delete":["21","import { Helmet } from 'react-helmet';"]}],"server\/sonar-web\/src\/main\/js\/apps\/account\/notifications\/__tests__\/__snapshots__\/Notifications-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","85","  <Helmet","86","    defer={false}","164","  <Helmet","165","    defer={false}"],"delete":["6","  <HelmetWrapper","7","    defer={true}","85","  <HelmetWrapper","86","    defer={true}","164","  <HelmetWrapper","165","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/project\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","90","  <Helmet","91","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","90","  <HelmetWrapper","91","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/apps\/documentation\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["6","  <Helmet","7","    defer={false}","44","  <Helmet","45","    defer={false}","53","  <\/Helmet>","170","  <Helmet","179","  <\/Helmet>"],"delete":["6","  <HelmetWrapper","7","    defer={true}","44","  <HelmetWrapper","45","    defer={true}","53","  <\/HelmetWrapper>","170","  <HelmetWrapper","179","  <\/HelmetWrapper>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projectKey\/Key.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","43","        <Helmet defer={false} title={translate('update_key.page')} \/>"],"delete":["20","import Helmet from 'react-helmet';","43","        <Helmet title={translate('update_key.page')} \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/webhooks\/components\/__tests__\/__snapshots__\/App-test.tsx.snap":[{"add":["7","  <Helmet","8","    defer={false}","33","  <Helmet","34","    defer={false}"],"delete":["7","  <HelmetWrapper","8","    defer={true}","33","  <HelmetWrapper","34","    defer={true}"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/PageTracker.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';","76","        defer={false}"],"delete":["20","import Helmet from 'react-helmet';"]}],"server\/sonar-web\/yarn.lock":[{"add":["702","\"@babel\/runtime@^7.3.4\":","703","  version \"7.7.7\"","704","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@babel\/runtime\/-\/runtime-7.7.7.tgz#194769ca8d6d7790ec23605af9ee3e42a0aa79cf\"","705","  integrity sha1-GUdpyo1td5DsI2Ba+e4+QqCqec8=","706","  dependencies:","707","    regenerator-runtime \"^0.13.2\"","708","","1248","\"@types\/react-helmet@5.0.14\":","1249","  version \"5.0.14\"","1250","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/react-helmet\/-\/react-helmet-5.0.14.tgz#a07979ccb2cee088e74e735c84058fc8607d32e4\"","1251","  integrity sha1-oHl5zLLO4IjnTnNchAWPyGB9MuQ=","4162","exenv@^1.2.0:","8233","prop-types@15.7.2, prop-types@^15.5.10, prop-types@^15.5.6, prop-types@^15.5.8, prop-types@^15.6.0, prop-types@^15.6.1, prop-types@^15.6.2, prop-types@^15.7.2:","8542","react-fast-compare@^2.0.4:","8543","  version \"2.0.4\"","8544","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-fast-compare\/-\/react-fast-compare-2.0.4.tgz#e84b4d455b0fec113e0402c329352715196f81f9\"","8545","  integrity sha1-6EtNRVsP7BE+BALDKTUnFRlvgfk=","8546","","8547","react-helmet-async@1.0.4:","8548","  version \"1.0.4\"","8549","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-helmet-async\/-\/react-helmet-async-1.0.4.tgz#079ef10b7fefcaee6240fefd150711e62463cc97\"","8550","  integrity sha1-B57xC3\/vyu5iQP79FQcR5iRjzJc=","8552","    \"@babel\/runtime\" \"^7.3.4\"","8553","    invariant \"^2.2.4\"","8554","    prop-types \"^15.7.2\"","8555","    react-fast-compare \"^2.0.4\"","8556","    shallowequal \"^1.1.0\"","9329","shallowequal@^1.1.0:"],"delete":["1241","\"@types\/react-helmet@5.0.8\":","1242","  version \"5.0.8\"","1243","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/@types\/react-helmet\/-\/react-helmet-5.0.8.tgz#f080eea6652e44f60b4574463d238f268d81d9af\"","1244","  integrity sha1-8IDupmUuRPYLRXRGPSOPJo2B2a8=","4155","exenv@^1.2.0, exenv@^1.2.1:","8226","prop-types@15.7.2, prop-types@^15.5.10, prop-types@^15.5.4, prop-types@^15.5.6, prop-types@^15.5.8, prop-types@^15.6.0, prop-types@^15.6.1, prop-types@^15.6.2, prop-types@^15.7.2:","8535","react-helmet@5.2.0:","8536","  version \"5.2.0\"","8537","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-helmet\/-\/react-helmet-5.2.0.tgz#a81811df21313a6d55c5f058c4aeba5d6f3d97a7\"","8538","  integrity sha1-qBgR3yExOm1VxfBYxK66XW89l6c=","8540","    deep-equal \"^1.0.1\"","8541","    object-assign \"^4.1.1\"","8542","    prop-types \"^15.5.4\"","8543","    react-side-effect \"^1.1.0\"","8618","react-side-effect@^1.1.0:","8619","  version \"1.1.5\"","8620","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/react-side-effect\/-\/react-side-effect-1.1.5.tgz#f26059e50ed9c626d91d661b9f3c8bb38cd0ff2d\"","8621","  integrity sha1-8mBZ5Q7ZxibZHWYbnzyLs4zQ\/y0=","8622","  dependencies:","8623","    exenv \"^1.2.1\"","8624","    shallowequal \"^1.0.1\"","8625","","9324","shallowequal@^1.0.1:"]}],"server\/sonar-web\/src\/main\/js\/apps\/about\/sonarcloud\/Pricing.tsx":[{"add":["20","import { Helmet } from 'react-helmet-async';"],"delete":["20","import Helmet from 'react-helmet';"]}]}},"a280429889a21f2f258041caa42264570017c31a":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/IssuesModeTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":"MODIFY","sonar-home\/src\/main\/java\/org\/sonar\/home\/cache\/DirectoryLock.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/ProjectLockTest.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/filesystem\/FileIndexer.java":"MODIFY","sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleanerTest.java":"ADD","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectLock.java":"MODIFY","sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleaner.java":"ADD","sonar-home\/src\/test\/java\/org\/sonar\/home\/cache\/DirectoryLockTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/IssuesModeTest.java":[{"add":["397","    \/\/ use same working dir, because lock file is in it","398","    String workDirPath = temp.newFolder().getAbsolutePath();","399","    SonarRunner runner = configureRunner(\"shared\/xoo-sample\",","400","      \"sonar.working.directory\", workDirPath);","401","","404","    runConcurrentIssues(workDirPath);","407","  private void runConcurrentIssues(final String workDirPath) throws Exception {","419","          SonarScanner runner = configureRunnerIssues(\"shared\/xoo-sample\", homeDir,","420","            \"sonar.it.enableWaitingSensor\", \"true\",","421","            \"sonar.working.directory\", workDirPath);"],"delete":["392","  @Ignore","393","  \/\/ Disabled until SONAR-7124 is fixed","399","    SonarRunner runner = configureRunner(\"shared\/xoo-sample\");","402","    runConcurrentIssues();","405","  private void runConcurrentIssues() throws Exception {","417","          SonarScanner runner = configureRunnerIssues(\"shared\/xoo-sample\", homeDir, \"sonar.it.enableWaitingSensor\", \"true\");"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/MutableProjectReactorProvider.java":[{"add":[],"delete":["21","import java.io.File;","22","import java.io.IOException;","25","import org.sonar.core.util.FileUtils;","33","      cleanDirectory(reactor.getRoot().getWorkDir());","37","","38","  private static void cleanDirectory(File dir) {","39","    try {","40","      FileUtils.cleanDirectory(dir);","41","    } catch (IOException e) {","42","      throw new IllegalStateException(\"Failed to recreate working directory: \" + dir.getAbsolutePath(), e);","43","    }","44","  }"]}],"sonar-home\/src\/main\/java\/org\/sonar\/home\/cache\/DirectoryLock.java":[{"add":["28","  public static final String LOCK_FILE_NAME = \".sonar_lock\";"],"delete":["22","import java.io.PrintWriter;","24","import java.io.StringWriter;","27","import java.nio.file.Files;","31","  static final String LOCK_FILE_NAME = \".sonar_lock\";","95","","96","    try {","97","      Files.delete(lockFilePath);","98","    } catch (IOException e) {","99","      \/\/ ignore, as an error happens if another process just started to acquire the same lock","100","      StringWriter errors = new StringWriter();","101","      e.printStackTrace(new PrintWriter(errors));","102","      logger.debug(\"Couldn't delete lock file: \" + lockFilePath.toString() + \" \" + errors.toString());","103","    }"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/ProjectLockTest.java":[{"add":["24","import org.sonar.home.cache.DirectoryLock;","50","","55","    when(projectDefinition.getWorkDir()).thenReturn(file);","62","    Path lockFilePath = tempFolder.getRoot().toPath().resolve(DirectoryLock.LOCK_FILE_NAME);","68","    assertThat(Files.exists(lockFilePath)).isTrue();","78","","96","","98","  public void unLockWithNoLock() {"],"delete":["28","import java.nio.file.Paths;","50","  ","55","    when(projectDefinition.getBaseDir()).thenReturn(file);","62","    Path lockFilePath = tempFolder.getRoot().toPath().resolve(ProjectLock.LOCK_FILE_NAME);","68","    assertThat(Files.exists(lockFilePath)).isFalse();","78","  ","96","  ","98","  public void errorLock() {","99","    lock = setUpTest(Paths.get(\"path\", \"that\", \"wont\", \"exist\", \"ever\").toFile());","100","    exception.expect(IllegalStateException.class);","101","    exception.expectMessage(\"Failed to create lock in\");","102","    lock.tryLock();","103","  }","104","  ","105","  @Test","106","  public void errorDeleteLock() {","107","    lock = setUpTest(Paths.get(\"path\", \"that\", \"wont\", \"exist\", \"ever\").toFile());"]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectScanContainer.java":[{"add":["113","    getComponentByType(WorkDirectoryCleaner.class).execute();","142","      WorkDirectoryCleaner.class,"],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/filesystem\/FileIndexer.java":[{"add":["34","import org.sonar.home.cache.DirectoryLock;","219","      if (!Files.isHidden(file) && !DirectoryLock.LOCK_FILE_NAME.equals(file.getFileName().toString())) {"],"delete":["33","import org.sonar.batch.scan.ProjectLock;","219","      if (!Files.isHidden(file) && !ProjectLock.LOCK_FILE_NAME.equals(file.getFileName().toString())) {"]}],"sonar-batch\/src\/test\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleanerTest.java":[{"add":[],"delete":[]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectLock.java":[{"add":["26","import java.io.IOException;","28","import java.nio.file.Files;","32","  private final DirectoryLock lock;","35","    Path directory = projectReactor.getRoot().getWorkDir().toPath();","36","    try {","37","      if (!Files.exists(directory)) {","38","        Files.createDirectories(directory);","39","      }","40","    } catch (IOException e) {","41","      throw new IllegalStateException(\"Failed to create work directory\", e);","42","    }","45","  "],"delete":["22","","31","  public static final String LOCK_FILE_NAME = \".sonar_lock\";","32","","33","  private DirectoryLock lock;","36","    Path directory = projectReactor.getRoot().getBaseDir().toPath();","39",""]}],"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/WorkDirectoryCleaner.java":[{"add":[],"delete":[]}],"sonar-home\/src\/test\/java\/org\/sonar\/home\/cache\/DirectoryLockTest.java":[{"add":[],"delete":["52","    assertThat(temp.getRoot().list()).isEmpty();","61","    assertThat(temp.getRoot().list()).isEmpty();"]}]}},"489725dae8e137b669d596a9c9a53e86e6eee2ac":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["154","        locationsNavigator: false,"],"delete":[]}]}},"1ec8e8ec1c3bf3b1f687036b94bbe963fb91cc44":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/custom-rule-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-delete-rule.hbs":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/delete-rule-view.js":"ADD","server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule-details-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/custom-rule-view.js":[{"add":["21","import DeleteRuleView from '.\/delete-rule-view';","37","    const deleteRuleView = new DeleteRuleView({","38","      model: this.model","39","    }).render();","40","","41","    deleteRuleView.on('delete', () => {","42","      this.model.collection.remove(this.model);","43","      this.destroy();"],"delete":["19","import $ from 'jquery';","23","import confirmDialog from '..\/confirm-dialog';","24","import { translate } from '..\/..\/..\/helpers\/l10n';","39","    const that = this;","40","    confirmDialog({","41","      title: translate('delete'),","42","      html: translate('are_you_sure'),","43","      yesHandler () {","44","        const url = '\/api\/rules\/delete';","45","        const options = { key: that.model.id };","46","        $.post(url, options).done(function () {","47","          that.model.collection.remove(that.model);","48","          that.destroy();","49","        });","50","      }"]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/templates\/rule\/coding-rules-delete-rule.hbs":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule\/delete-rule-view.js":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/rule-details-view.js":[{"add":["31","import DeleteRuleView from '.\/rule\/delete-rule-view';","148","    const deleteRuleView = new DeleteRuleView({","149","      model: this.model","150","    }).render();","151","","152","    deleteRuleView.on('delete', () => {","153","      this.options.app.controller.fetchList();"],"delete":["33","import confirmDialog from '.\/confirm-dialog';","34","import { translate, translateWithParameters } from '..\/..\/helpers\/l10n';","149","    const that = this;","150","    const ruleType = this.model.has('templateKey') ? 'custom' : 'manual';","151","    confirmDialog({","152","      title: translate('delete'),","153","      html: translateWithParameters(`coding_rules.delete.${ruleType}.confirm`, this.model.get('name')),","154","      yesHandler () {","155","        const url = '\/api\/rules\/delete';","156","        const options = { key: that.model.id };","157","        $.post(url, options).done(function () {","158","          that.options.app.controller.fetchList();","159","        });","160","      }"]}]}},"387eec46dbf1ecf3fd0bfc37e156b1475bf5546d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChange.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QProfileChangeDaoTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChangeTest.java":"ADD"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChange.java":[{"add":["91","  public QProfileChangeDto toDto(@Nullable String login) {","95","    dto.setLogin(login);"],"delete":["91","  public QProfileChangeDto toDto() {"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/qualityprofile\/QProfileChangeDaoTest.java":[{"add":["187","  public void selectByQuery_mapping() {","188","    when(system2.now()).thenReturn(A_DATE);","189","    when(uuidFactory.create()).thenReturn(\"C1\");","190","    insertChange(\"P1\", \"ACTIVATED\", \"Oscar\", \"data\");","191","","192","    List<QProfileChangeDto> result = underTest.selectByQuery(dbSession, new QProfileChangeQuery(\"P1\"));","193","","194","    assertThat(result).hasSize(1);","195","    QProfileChangeDto change = result.get(0);","196","    assertThat(change.getProfileKey()).isEqualTo(\"P1\");","197","    assertThat(change.getLogin()).isEqualTo(\"Oscar\");","198","    assertThat(change.getData()).isEqualTo(\"data\");","199","    assertThat(change.getChangeType()).isEqualTo(\"ACTIVATED\");","200","    assertThat(change.getKey()).isEqualTo(\"C1\");","201","    assertThat(change.getCreatedAt()).isEqualTo(A_DATE);","202","  }","203","","204","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":[{"add":["254","    db.qProfileChangeDao().insert(dbSession, change.toDto(userSession.getLogin()));"],"delete":["254","    db.qProfileChangeDao().insert(dbSession, change.toDto());"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ActiveRuleChangeTest.java":[{"add":[],"delete":[]}]}},"06310fbb1aff7750fa55a4eebd6fc8eada97f95a":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest.java":"MODIFY","server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest\/search_profile_active_rules.json":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest.java":[{"add":["71","  DbSession dbSession;","81","    dbSession = tester.get(DbClient.class).openSession(false);","86","    dbSession.close();","100","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","101","    ruleDao.insert(dbSession, RuleTesting.newXooX2());","102","    dbSession.commit();","120","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","121","    ruleDao.insert(dbSession, RuleTesting.newXooX2());","122","    dbSession.commit();","132","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","133","    ruleDao.insert(dbSession, RuleTesting.newXooX2().setDescription(\"A *Xoo* rule\").setDescriptionFormat(RuleDto.Format.MARKDOWN));","134","    dbSession.commit();","144","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","145","    dbSession.commit();","158","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","159","    dbSession.commit();","172","    ruleDao.insert(dbSession, RuleTesting.newDto(RuleKey.of(\"other\", \"rule\"))).setLanguage(\"unknown\");","173","    dbSession.commit();","184","    insertDebtCharacteristics(dbSession);","186","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","197","    dbSession.commit();","208","    insertDebtCharacteristics(dbSession);","210","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","221","    dbSession.commit();","231","    insertDebtCharacteristics(dbSession);","233","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","244","    dbSession.commit();","254","    insertDebtCharacteristics(dbSession);","256","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","267","    dbSession.commit();","277","    insertDebtCharacteristics(dbSession);","279","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","290","    ruleDao.insert(dbSession, RuleTesting.newXooX2()","301","    ruleDao.insert(dbSession, RuleTesting.newXooX3()","312","    ruleDao.insert(dbSession, RuleTesting.newDto(RuleKey.of(\"xoo\", \"x4\")).setLanguage(\"xoo\")","323","    dbSession.commit();","336","    ruleDao.insert(dbSession, templateRule);","337","    ruleDao.insert(dbSession, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","338","    dbSession.commit();","350","    ruleDao.insert(dbSession, templateRule);","351","    ruleDao.insert(dbSession, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","352","    dbSession.commit();","364","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","367","    ruleDao.insert(dbSession, rule);","370","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","371","    dbSession.commit();","385","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","388","    tester.get(QualityProfileDao.class).insert(dbSession, profile2);","390","    dbSession.commit();","393","    ruleDao.insert(dbSession, rule);","394","","395","    RuleParamDto param = RuleParamDto.createFor(rule)","396","      .setDefaultValue(\"some value\")","397","      .setType(\"string\")","398","      .setDescription(\"My small description\")","399","      .setName(\"my_var\");","400","    ruleDao.insertRuleParam(dbSession, rule, param);","401","","402","    RuleParamDto param2 = RuleParamDto.createFor(rule)","403","      .setDefaultValue(\"other value\")","404","      .setType(\"integer\")","405","      .setDescription(\"My small description\")","406","      .setName(\"the_var\");","407","    ruleDao.insertRuleParam(dbSession, rule, param2);","408","","409","    \/\/ SONAR-7083","410","    RuleParamDto param3 = RuleParamDto.createFor(rule)","411","      .setDefaultValue(null)","412","      .setType(\"string\")","413","      .setDescription(\"Empty Param\")","414","      .setName(\"empty_var\");","415","    ruleDao.insertRuleParam(dbSession, rule, param3);","418","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","420","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule2);","422","    ActiveRuleParamDto activeRuleParam = ActiveRuleParamDto.createFor(param)","423","      .setValue(\"The VALUE\");","424","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule2, activeRuleParam);","425","","426","    ActiveRuleParamDto activeRuleParam2 = ActiveRuleParamDto.createFor(param2)","427","      .setValue(\"The Other Value\");","428","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule2, activeRuleParam2);","429","","430","    ActiveRuleParamDto activeRuleParam3 = ActiveRuleParamDto.createFor(param3)","431","      .setValue(null);","432","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule2, activeRuleParam3);","433","","434","    dbSession.commit();","455","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","458","    tester.get(QualityProfileDao.class).insert(dbSession, profile2);","460","    dbSession.commit();","463","    ruleDao.insert(dbSession, rule);","466","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","468","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule2);","470","    dbSession.commit();","484","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","486","    ruleDao.insert(dbSession, rule);","487","    dbSession.commit();","494","    ruleDao.insertRuleParam(dbSession, rule, param);","501","    ruleDao.insertRuleParam(dbSession, rule, param2);","504","    tester.get(ActiveRuleDao.class).insert(dbSession, activeRule);","508","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule, activeRuleParam);","512","    tester.get(ActiveRuleDao.class).insertParam(dbSession, activeRule, activeRuleParam2);","513","    dbSession.commit();","527","    tester.get(QualityProfileDao.class).insert(dbSession, profile);","529","    ruleDao.insert(dbSession, rule);","530","    dbSession.commit();","540","    ruleDao.insert(dbSession, RuleTesting.newXooX1()","543","    ruleDao.insert(dbSession, RuleTesting.newXooX2()","546","    dbSession.commit();","572","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","573","    ruleDao.insert(dbSession, RuleTesting.newXooX2().setStatus(RuleStatus.BETA));","574","    ruleDao.insert(dbSession, RuleTesting.newXooX3().setStatus(RuleStatus.DEPRECATED));","575","    dbSession.commit();","585","    ruleDao.insert(dbSession, RuleTesting.newXooX1().setName(\"Dodgy - Consider returning a zero length array rather than null \"));","586","    ruleDao.insert(dbSession, RuleTesting.newXooX2().setName(\"Bad practice - Creates an empty zip file entry\"));","587","    ruleDao.insert(dbSession, RuleTesting.newXooX3().setName(\"XPath rule\"));","588","    dbSession.commit();","612","    ruleDao.insert(dbSession, RuleTesting.newXooX1());","613","    ruleDao.insert(dbSession, RuleTesting.newXooX2());","614","    dbSession.commit();","615","    dbSession.clearCache();"],"delete":["71","  DbSession session;","81","    session = tester.get(DbClient.class).openSession(false);","86","    session.close();","100","    ruleDao.insert(session, RuleTesting.newXooX1());","101","    ruleDao.insert(session, RuleTesting.newXooX2());","102","    session.commit();","120","    ruleDao.insert(session, RuleTesting.newXooX1());","121","    ruleDao.insert(session, RuleTesting.newXooX2());","122","    session.commit();","132","    ruleDao.insert(session, RuleTesting.newXooX1());","133","    ruleDao.insert(session, RuleTesting.newXooX2().setDescription(\"A *Xoo* rule\").setDescriptionFormat(RuleDto.Format.MARKDOWN));","134","    session.commit();","144","    ruleDao.insert(session, RuleTesting.newXooX1());","145","    session.commit();","158","    ruleDao.insert(session, RuleTesting.newXooX1());","159","    session.commit();","172","    ruleDao.insert(session, RuleTesting.newDto(RuleKey.of(\"other\", \"rule\"))).setLanguage(\"unknown\");","173","    session.commit();","184","    insertDebtCharacteristics(session);","186","    ruleDao.insert(session, RuleTesting.newXooX1()","197","    session.commit();","208","    insertDebtCharacteristics(session);","210","    ruleDao.insert(session, RuleTesting.newXooX1()","221","    session.commit();","231","    insertDebtCharacteristics(session);","233","    ruleDao.insert(session, RuleTesting.newXooX1()","244","    session.commit();","254","    insertDebtCharacteristics(session);","256","    ruleDao.insert(session, RuleTesting.newXooX1()","267","    session.commit();","277","    insertDebtCharacteristics(session);","279","    ruleDao.insert(session, RuleTesting.newXooX1()","290","    ruleDao.insert(session, RuleTesting.newXooX2()","301","    ruleDao.insert(session, RuleTesting.newXooX3()","312","    ruleDao.insert(session, RuleTesting.newDto(RuleKey.of(\"xoo\", \"x4\")).setLanguage(\"xoo\")","323","    session.commit();","336","    ruleDao.insert(session, templateRule);","337","    ruleDao.insert(session, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","338","    session.commit();","350","    ruleDao.insert(session, templateRule);","351","    ruleDao.insert(session, RuleTesting.newXooX2()).setTemplateId(templateRule.getId());","352","    session.commit();","364","    tester.get(QualityProfileDao.class).insert(session, profile);","367","    ruleDao.insert(session, rule);","370","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","371","    session.commit();","385","    tester.get(QualityProfileDao.class).insert(session, profile);","388","    tester.get(QualityProfileDao.class).insert(session, profile2);","390","    session.commit();","393","    ruleDao.insert(session, rule);","396","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","398","    tester.get(ActiveRuleDao.class).insert(session, activeRule2);","400","    session.commit();","421","    tester.get(QualityProfileDao.class).insert(session, profile);","424","    tester.get(QualityProfileDao.class).insert(session, profile2);","426","    session.commit();","429","    ruleDao.insert(session, rule);","432","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","434","    tester.get(ActiveRuleDao.class).insert(session, activeRule2);","436","    session.commit();","450","    tester.get(QualityProfileDao.class).insert(session, profile);","452","    ruleDao.insert(session, rule);","453","    session.commit();","460","    ruleDao.insertRuleParam(session, rule, param);","467","    ruleDao.insertRuleParam(session, rule, param2);","470","    tester.get(ActiveRuleDao.class).insert(session, activeRule);","474","    tester.get(ActiveRuleDao.class).insertParam(session, activeRule, activeRuleParam);","478","    tester.get(ActiveRuleDao.class).insertParam(session, activeRule, activeRuleParam2);","479","    session.commit();","493","    tester.get(QualityProfileDao.class).insert(session, profile);","495","    ruleDao.insert(session, rule);","496","    session.commit();","506","    ruleDao.insert(session, RuleTesting.newXooX1()","509","    ruleDao.insert(session, RuleTesting.newXooX2()","512","    session.commit();","538","    ruleDao.insert(session, RuleTesting.newXooX1());","539","    ruleDao.insert(session, RuleTesting.newXooX2().setStatus(RuleStatus.BETA));","540","    ruleDao.insert(session, RuleTesting.newXooX3().setStatus(RuleStatus.DEPRECATED));","541","    session.commit();","551","    ruleDao.insert(session, RuleTesting.newXooX1().setName(\"Dodgy - Consider returning a zero length array rather than null \"));","552","    ruleDao.insert(session, RuleTesting.newXooX2().setName(\"Bad practice - Creates an empty zip file entry\"));","553","    ruleDao.insert(session, RuleTesting.newXooX3().setName(\"XPath rule\"));","554","    session.commit();","578","    ruleDao.insert(session, RuleTesting.newXooX1());","579","    ruleDao.insert(session, RuleTesting.newXooX2());","580","    session.commit();","581","    session.clearCache();"]}],"server\/sonar-server\/src\/test\/resources\/org\/sonar\/server\/rule\/ws\/SearchActionMediumTest\/search_profile_active_rules.json":[{"add":["1","  \"total\": 1,","2","  \"p\": 1,","3","  \"ps\": 100,","15","        \"params\": [","16","          {","17","            \"key\": \"the_var\",","18","            \"value\": \"The Other Value\"","19","          },","20","          {","21","            \"key\": \"my_var\",","22","            \"value\": \"The VALUE\"","23","          },","24","          {","25","            \"key\": \"empty_var\",","26","            \"value\": \"\"","27","          }","28","        ]"],"delete":["1","  \"total\":1,","2","  \"p\":1,","3","  \"ps\":100,","15","        \"params\": []"]}]}},"0ec0be546e4a0bf1956b016a986e1f57ca465618":{"changes":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/issues.html.erb":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/resources\/org\/sonar\/server\/dashboard\/widget\/issues.html.erb":[{"add":["23","     period_date = (@snapshot.period_datetime(@dashboard_configuration.period_index) + 1).strftime('%FT%T%z')"],"delete":["23","     period_date = @snapshot.period_datetime(@dashboard_configuration.period_index).strftime('%FT%T%z')"]}]}},"6d95cb9f19193a9d6eb4424d1ff6dba7efd75c3f":{"changes":{"server\/sonar-web\/src\/main\/js\/widgets\/timeMachine\/index.js":"MODIFY","it\/it-tests\/src\/test\/resources\/measureHistory\/HistoryUiTest\/history-timemachine-widget\/time-machine-widget.html":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/widgets\/timeMachine\/index.js":[{"add":["33","  \/\/ use [].slice instead of Array.from, because this code might be executed with polyfill","34","  const elements = [].slice.call(document.querySelectorAll(selector));"],"delete":["33","  const elements = Array.from(document.querySelectorAll(selector));"]}],"it\/it-tests\/src\/test\/resources\/measureHistory\/HistoryUiTest\/history-timemachine-widget\/time-machine-widget.html":[{"add":["38","\t<td>waitForElementPresent<\/td>","39","\t<td>css=svg path<\/td>"],"delete":["38","\t<td>assertElementPresent<\/td>","39","\t<td>css=img[alt=&quot;Chart?cht=sl&amp;chdi=80x15&amp;chv=20141019000000,6&quot;]<\/td>"]}]}}}