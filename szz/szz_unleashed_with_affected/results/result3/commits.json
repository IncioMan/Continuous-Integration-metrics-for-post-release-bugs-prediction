{"6392893e41bc802900c2023c87e64753c00ce887":{"changes":{"\/dev\/null":"DELETE","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/startup\/LogServerIdTest.java":"ADD","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/startup\/LogServerId.java":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/startup\/LogServerIdTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/startup\/LogServerId.java":[{"add":["21","import javax.annotation.CheckForNull;","22","import javax.annotation.Nullable;","23","import org.picocontainer.Startable;","26","import org.sonar.db.DbClient;","27","import org.sonar.db.DbSession;","30","public final class LogServerId implements Startable {","32","  private final DbClient dbClient;","34","  public LogServerId(DbClient dbClient) {","35","    this.dbClient = dbClient;","38","  @Override","40","    try (DbSession dbSession = dbClient.openSession(false)) {","41","      String propertyKey = CoreProperties.PERMANENT_SERVER_ID;","42","      PropertyDto serverIdProp = selectProperty(dbSession, propertyKey);","43","      if (serverIdProp != null) {","44","        \/\/ a server ID has been generated, let's print out the other useful information that can help debugging license issues","45","        PropertyDto organisationProp = selectProperty(dbSession, CoreProperties.ORGANISATION);","46","        PropertyDto ipAddressProp = selectProperty(dbSession, CoreProperties.SERVER_ID_IP_ADDRESS);","48","        StringBuilder message = new StringBuilder(\"Server information:\\n\");","49","        message.append(\"  - ID           : \");","50","        addQuotedValue(serverIdProp, message);","51","        message.append(\"  - Organisation : \");","52","        addQuotedValue(organisationProp, message);","53","        message.append(\"  - Registered IP: \");","54","        addQuotedValue(ipAddressProp, message);","56","        Loggers.get(LogServerId.class).info(message.toString());","57","      }","61","  @Override","62","  public void stop() {","63","    \/\/ nothing to do","64","  }","65","","66","  @CheckForNull","67","  private PropertyDto selectProperty(DbSession dbSession, String propertyKey) {","68","    return dbClient.propertiesDao().selectGlobalProperty(dbSession, propertyKey);","69","  }","70","","71","  private static void addQuotedValue(@Nullable PropertyDto property, StringBuilder message) {","72","    if (property == null || property.getValue() == null) {","73","      message.append('-');","74","    } else {","75","      message.append(\"\\\"\");","76","      message.append(property.getValue());","77","      message.append(\"\\\"\");","78","    }","79","    message.append('\\n');"],"delete":["21","import com.google.common.annotations.VisibleForTesting;","23","import org.sonar.api.utils.log.Logger;","25","import org.sonar.db.property.PropertiesDao;","28","\/**","29"," * @since 3.5","30"," *\/","31","public final class LogServerId {","33","  private final PropertiesDao propertiesDao;","35","  public LogServerId(PropertiesDao propertiesDao) {","36","    this.propertiesDao = propertiesDao;","40","    logServerId(Loggers.get(LogServerId.class));","41","  }","43","  @VisibleForTesting","44","  void logServerId(Logger logger) {","45","    PropertyDto serverIdProp = propertiesDao.selectGlobalProperty(CoreProperties.PERMANENT_SERVER_ID);","46","    if (serverIdProp != null) {","47","      \/\/ a server ID has been generated, let's print out the other useful informations that can help debugging license issues","48","      PropertyDto organisationProp = propertiesDao.selectGlobalProperty(CoreProperties.ORGANISATION);","49","      PropertyDto ipAddressProp = propertiesDao.selectGlobalProperty(CoreProperties.SERVER_ID_IP_ADDRESS);","51","      StringBuilder message = new StringBuilder(\"Server information:\\n\");","52","      message.append(\"  - ID            : \");","53","      addQuotedValue(serverIdProp, message);","54","      message.append(\"  - Organisation  : \");","55","      addQuotedValue(organisationProp, message);","56","      message.append(\"  - Registered IP : \");","57","      addQuotedValue(ipAddressProp, message);","58","","59","      logger.info(message.toString());","63","  private static void addQuotedValue(PropertyDto property, StringBuilder message) {","64","    message.append(\"\\\"\");","65","    message.append(property.getValue());","66","    message.append(\"\\\"\\n\");"]}]}},"b4b91a8cba33b1767c4374bb32d7ce40f5c31953":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/SourceViewer\/SourceViewerBase.tsx":[{"add":["98","  duplicatedFiles?: { [ref: string]: DuplicatedFile };","104","  issueLocationsByLine: { [line: number]: LinearIssueLocation[] };","105","  issuePopup?: { issue: string; name: string };","117","  sources?: SourceLine[];","247","                displayDuplications: false,","248","                duplicatedFiles: undefined,","249","                duplications: undefined,","250","                duplicationsByLine: {},","251","                hasSourcesAfter: sources.length > LINES,","252","                highlightedLine: undefined,","253","                highlightedSymbols: [],","254","                issueLocationsByLine: locationsByLine(issues),","257","                linePopup: undefined,","261","                openIssuesByLine: {},","262","                issuePopup: undefined,","264","                sources: this.computeCoverageStatus(finalSources),"],"delete":["100","  duplicatedFiles?: { [ref: string]: DuplicatedFile };","106","  issueLocationsByLine: { [line: number]: LinearIssueLocation[] };","114","  issuePopup?: { issue: string; name: string };","116","  sources?: SourceLine[];","249","                issueLocationsByLine: locationsByLine(issues),","253","                hasSourcesAfter: sources.length > LINES,","254","                sources: this.computeCoverageStatus(finalSources),"]}]}},"571f821f9fe5e9c5522c8803b6a95825e318ef01":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.js.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/issues.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.js.snap":[{"add":["37","    onClick={[Function]}","38","    role=\"Listitem\"","39","    tabIndex={0}","135","    onClick={[Function]}","136","    role=\"Listitem\"","137","    tabIndex={0}","175","    onClick={[Function]}","176","    role=\"Listitem\"","177","    tabIndex={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.js":[{"add":["48","  handleCommentClick = (event \/*: Event & {target: HTMLElement}*\/) => {","49","    if (event.target.tagName === 'A') {","50","      event.stopPropagation();","51","    }","52","  };","53","","95","          onClick={this.handleCommentClick}","96","          role=\"Listitem\"","97","          tabIndex={0}"],"delete":[]}],"server\/sonar-web\/src\/main\/less\/components\/issues.less":[{"add":["215","  .no-outline;"],"delete":[]}]}},"64fa9230e6346dd4bacb1855705630e877fd9f17":{"changes":{"it\/it-tests\/src\/test\/java\/it\/analysis\/BatchTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/analysis\/BatchTest.java":[{"add":["163","    assertThat(project.getMeasureIntValue(\"directories\")).isEqualTo(2);"],"delete":["163","    assertThat(project.getMeasureIntValue(\"directories\")).isEqualTo(3);"]}]}},"aefa1e5ffb6e9348a5545872b48a81d470c87690":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":"MODIFY","server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":"MODIFY","server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeCommands.java":[{"add":["26","import javax.annotation.Nullable;","284","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuidOrBefore(rootUuid, null);","288","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore(rootUuid, null);","292","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuidOrBefore(rootUuid, null);","296","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuidOrBefore(rootUuid, null);","300","    purgeMapper.deleteCeActivityByRootUuidOrBefore(rootUuid, null);","305","  void deleteCeActivityBefore(@Nullable String rootUuid, long createdAt) {","306","    profiler.start(\"deleteCeActivityBefore (ce_scanner_context)\");","307","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","308","    session.commit();","309","    profiler.stop();","310","    profiler.start(\"deleteCeActivityBefore (ce_task_characteristics)\");","311","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","312","    session.commit();","313","    profiler.stop();","314","    profiler.start(\"deleteCeActivityBefore (ce_task_input)\");","315","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","316","    session.commit();","317","    profiler.stop();","318","    profiler.start(\"deleteCeActivityBefore (ce_task_message)\");","319","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","320","    session.commit();","321","    profiler.stop();","322","    profiler.start(\"deleteCeActivityBefore (ce_activity)\");","323","    purgeMapper.deleteCeActivityByRootUuidOrBefore(rootUuid, createdAt);","324","    session.commit();","325","    profiler.stop();","326","  }","327","","328","  void deleteCeScannerContextBefore(@Nullable String rootUuid, long createdAt) {","329","    \/\/ assuming CeScannerContext of rows in table CE_QUEUE can't be older than createdAt","330","    profiler.start(\"deleteCeScannerContextBefore\");","331","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuidOrBefore(rootUuid, createdAt);","332","    session.commit();","333","  }","334",""],"delete":["283","    purgeMapper.deleteCeScannerContextOfCeActivityByRootUuid(rootUuid);","287","    purgeMapper.deleteCeTaskCharacteristicsOfCeActivityByRootUuid(rootUuid);","291","    purgeMapper.deleteCeTaskInputOfCeActivityByRootUuid(rootUuid);","295","    purgeMapper.deleteCeTaskMessageOfCeActivityByRootUuid(rootUuid);","299","    purgeMapper.deleteCeActivityByRootUuid(rootUuid);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/purge\/PurgeMapper.xml":[{"add":["346","  <delete id=\"deleteCeScannerContextOfCeActivityByRootUuidOrBefore\">","349","    task_uuid in (","350","      select","351","        uuid","352","      from ce_activity","353","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","354","    )","357","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore\">","360","    task_uuid in (","361","      select","362","        uuid","363","      from ce_activity","364","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","365","    )","368","  <delete id=\"deleteCeTaskInputOfCeActivityByRootUuidOrBefore\">","371","    task_uuid in (","372","      select","373","        uuid","374","      from ce_activity","375","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","376","    )","379","  <delete id=\"deleteCeTaskMessageOfCeActivityByRootUuidOrBefore\">","382","    task_uuid in (","383","      select","384","        uuid","385","      from ce_activity","386","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","387","    )","390","  <delete id=\"deleteCeActivityByRootUuidOrBefore\">","391","    delete from ce_activity","392","      <include refid=\"whereClauseCeActivityByRootUuidOrBefore\" \/>","393","  <\/delete>","394","","395","  <sql id=\"whereClauseCeActivityByRootUuidOrBefore\">","396","    where","397","    <choose>","398","      <when test=\"rootUuid != null and createdAtBefore != null\">","399","        created_at &lt; #{createdAtBefore,jdbcType=BIGINT}","400","        and (","401","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","402","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","403","        )","404","      <\/when>","405","      <when test=\"createdAtBefore != null\">","406","        created_at &lt; #{createdAtBefore,jdbcType=BIGINT}","407","      <\/when>","408","      <when test=\"rootUuid != null\">","411","      <\/when>","412","      <!-- safety net when both variables are null to never generate a","413","           delete statement deleting the whole table -->","414","      <otherwise>","415","        1 = 2","416","      <\/otherwise>","417","    <\/choose>","418","  <\/sql>"],"delete":["346","  <delete id=\"deleteCeScannerContextOfCeActivityByRootUuid\">","349","      task_uuid in (","350","        select","351","          uuid","352","        from ce_activity","353","        where","354","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","355","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","356","      )","359","  <delete id=\"deleteCeTaskCharacteristicsOfCeActivityByRootUuid\">","362","      task_uuid in (","363","        select","364","          uuid","365","        from ce_activity","366","        where","367","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","368","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","369","      )","372","  <delete id=\"deleteCeTaskInputOfCeActivityByRootUuid\">","375","      task_uuid in (","376","        select","377","          uuid","378","        from ce_activity","379","        where","380","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","381","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","382","      )","385","  <delete id=\"deleteCeTaskMessageOfCeActivityByRootUuid\">","388","      task_uuid in (","389","        select","390","          uuid","391","        from ce_activity","392","        where","393","          component_uuid=#{rootUuid,jdbcType=VARCHAR}","394","          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}","395","      )","398","  <delete id=\"deleteCeActivityByRootUuid\">","399","      delete from ce_activity","400","      where","403","  <\/delete>"]}],"server\/sonar-ce\/src\/test\/java\/org\/sonar\/ce\/queue\/PurgeCeActivitiesTest.java":[{"add":["22","import org.mockito.InOrder;","23","import org.mockito.Mockito;","24","import org.sonar.db.DbClient;","25","import org.sonar.db.DbSession;","26","import org.sonar.db.purge.PurgeDao;","27","import org.sonar.db.purge.PurgeProfiler;","34","  private DbClient dbClient = mock(DbClient.class);","35","  private PurgeDao purgeDao = mock(PurgeDao.class);","36","  private DbSession dbSession = mock(DbSession.class);","37","  private PurgeProfiler profiler = mock(PurgeProfiler.class);","38","  private PurgeCeActivities underTest = new PurgeCeActivities(dbClient, profiler);","41","  public void starts_calls_purgeDao_and_commit() {","42","    when(dbClient.purgeDao()).thenReturn(purgeDao);","43","    when(dbClient.openSession(false)).thenReturn(dbSession);","47","    InOrder inOrder = Mockito.inOrder(purgeDao, dbSession);","48","    inOrder.verify(purgeDao).purgeCeActivities(dbSession, profiler);","49","    inOrder.verify(purgeDao).purgeCeScannerContexts(dbSession, profiler);","50","    inOrder.verify(dbSession).commit();","51","    inOrder.verify(dbSession).close();","52","    inOrder.verifyNoMoreInteractions();"],"delete":["21","import java.nio.charset.Charset;","22","import java.time.LocalDateTime;","23","import java.time.ZoneOffset;","24","import java.util.Collections;","25","import java.util.List;","26","import java.util.Optional;","27","import org.apache.commons.io.IOUtils;","28","import org.junit.Rule;","30","import org.sonar.api.utils.System2;","31","import org.sonar.core.util.UuidFactoryFast;","32","import org.sonar.db.DbTester;","33","import org.sonar.db.ce.CeActivityDto;","34","import org.sonar.db.ce.CeQueueDto;","35","import org.sonar.db.ce.CeTaskCharacteristicDto;","36","import org.sonar.db.ce.CeTaskInputDao;","37","import org.sonar.db.ce.CeTaskTypes;","39","import static java.time.ZoneOffset.UTC;","40","import static org.apache.commons.lang.RandomStringUtils.randomAlphanumeric;","41","import static org.assertj.core.api.Assertions.assertThat;","47","  private System2 system2 = mock(System2.class);","48","","49","  @Rule","50","  public DbTester dbTester = DbTester.create(system2);","51","","52","  private PurgeCeActivities underTest = new PurgeCeActivities(dbTester.getDbClient(), system2);","55","  public void delete_activity_older_than_180_days_and_their_scanner_context() {","56","    LocalDateTime now = LocalDateTime.now();","57","    insertWithDate(\"VERY_OLD\", now.minusDays(180).minusMonths(10));","58","    insertWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(180).minusDays(1));","59","    insertWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(180));","60","    insertWithDate(\"RECENT\", now.minusDays(1));","61","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","65","    assertThat(selectActivity(\"VERY_OLD\").isPresent()).isFalse();","66","    assertThat(selectTaskInput(\"VERY_OLD\").isPresent()).isFalse();","67","    assertThat(selectTaskCharecteristic(\"VERY_OLD\")).hasSize(0);","68","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","69","","70","    assertThat(selectActivity(\"JUST_OLD_ENOUGH\").isPresent()).isFalse();","71","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH\").isPresent()).isFalse();","72","    assertThat(selectTaskCharecteristic(\"JUST_OLD_ENOUGH\")).hasSize(0);","73","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","74","","75","    assertThat(selectActivity(\"NOT_OLD_ENOUGH\").isPresent()).isTrue();","76","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH\").isPresent()).isTrue();","77","    assertThat(selectTaskCharecteristic(\"NOT_OLD_ENOUGH\")).hasSize(1);","78","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isFalse(); \/\/ because more than 4 weeks old","79","","80","    assertThat(selectActivity(\"RECENT\").isPresent()).isTrue();","81","    assertThat(selectTaskInput(\"RECENT\").isPresent()).isTrue();","82","    assertThat(selectTaskCharecteristic(\"RECENT\")).hasSize(1);","83","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","84","","85","  }","86","","87","  @Test","88","  public void delete_ce_scanner_context_older_than_28_days() {","89","    LocalDateTime now = LocalDateTime.now();","90","    insertWithDate(\"VERY_OLD\", now.minusDays(28).minusMonths(12));","91","    insertWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(28).minusDays(1));","92","    insertWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(28));","93","    insertWithDate(\"RECENT\", now.minusDays(1));","94","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","95","","96","    underTest.start();","97","","98","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","99","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","100","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","101","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","102","  }","103","","104","  private Optional<CeActivityDto> selectActivity(String taskUuid) {","105","    return dbTester.getDbClient().ceActivityDao().selectByUuid(dbTester.getSession(), taskUuid);","106","  }","107","","108","  private List<CeTaskCharacteristicDto> selectTaskCharecteristic(String taskUuid) {","109","    return dbTester.getDbClient().ceTaskCharacteristicsDao().selectByTaskUuids(dbTester.getSession(), Collections.singletonList(taskUuid));","110","  }","111","","112","  private Optional<CeTaskInputDao.DataStream> selectTaskInput(String taskUuid) {","113","    return dbTester.getDbClient().ceTaskInputDao().selectData(dbTester.getSession(), taskUuid);","114","  }","115","","116","  private boolean scannerContextExists(String uuid) {","117","    return dbTester.countSql(\"select count(1) from ce_scanner_context where task_uuid = '\" + uuid + \"'\") == 1;","118","  }","119","","120","  private void insertWithDate(String uuid, LocalDateTime dateTime) {","121","    long date = dateTime.toInstant(UTC).toEpochMilli();","122","    CeQueueDto queueDto = new CeQueueDto();","123","    queueDto.setUuid(uuid);","124","    queueDto.setTaskType(CeTaskTypes.REPORT);","125","","126","    CeActivityDto dto = new CeActivityDto(queueDto);","127","    dto.setStatus(CeActivityDto.Status.SUCCESS);","128","    when(system2.now()).thenReturn(date);","129","    CeTaskCharacteristicDto ceTaskCharacteristicDto = new CeTaskCharacteristicDto()","130","      .setUuid(UuidFactoryFast.getInstance().create())","131","      .setValue(randomAlphanumeric(10))","132","      .setKey(randomAlphanumeric(10))","133","      .setTaskUuid(dto.getUuid());","134","","135","    dbTester.getDbClient().ceTaskInputDao().insert(dbTester.getSession(), dto.getUuid(), IOUtils.toInputStream(randomAlphanumeric(10), Charset.forName(\"UTF-8\")));","136","    dbTester.getDbClient().ceActivityDao().insert(dbTester.getSession(), dto);","137","    dbTester.getDbClient().ceTaskCharacteristicsDao().insert(dbTester.getSession(), Collections.singletonList(ceTaskCharacteristicDto));","138","    dbTester.getSession().commit();","139","","140","    insertScannerContext(uuid, date);","141","  }","142","","143","  private void insertScannerContext(String uuid, long createdAt) {","144","    dbTester.executeInsert(","145","      \"CE_SCANNER_CONTEXT\",","146","      \"task_uuid\", uuid,","147","      \"created_at\", createdAt,","148","      \"updated_at\", 1,","149","      \"context_data\", \"YoloContent\".getBytes());","150","    dbTester.commit();"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeMapper.java":[{"add":["96","  List<IdUuidPair> selectDisabledComponentsWithoutIssues(@Param(\"projectUuid\") String projectUuid);","106","  void deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","107","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","109","  void deleteCeTaskInputOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","110","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","112","  void deleteCeScannerContextOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","113","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","115","  void deleteCeTaskMessageOfCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","116","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);","118","  \/**","119","   * Delete rows in CE_ACTIVITY of tasks of the specified component and\/or created before specified date.","120","   *\/","121","  void deleteCeActivityByRootUuidOrBefore(@Nullable @Param(\"rootUuid\") String rootUuid,","122","    @Nullable @Param(\"createdAtBefore\") Long createdAtBefore);"],"delete":["96","  List<IdUuidPair>  selectDisabledComponentsWithoutIssues(@Param(\"projectUuid\") String projectUuid);","106","  void deleteCeTaskCharacteristicsOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","108","  void deleteCeTaskInputOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","110","  void deleteCeScannerContextOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","112","  void deleteCeTaskMessageOfCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);","114","  void deleteCeActivityByRootUuid(@Param(\"rootUuid\") String rootUuid);"]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/purge\/PurgeDaoTest.java":[{"add":["24","import java.time.LocalDateTime;","25","import java.time.ZoneOffset;","32","import java.util.function.Consumer;","55","import org.sonar.db.ce.CeTaskInputDao;","57","import org.sonar.db.ce.CeTaskTypes;","80","import static java.time.ZoneOffset.UTC;","1033","  public void delete_ce_analysis_older_than_180_and_scanner_context_older_than_40_days_of_specified_project_when_purging_project() {","1034","    LocalDateTime now = LocalDateTime.now();","1035","    ComponentDto project1 = db.components().insertPublicProject();","1036","    Consumer<CeQueueDto> belongsToProject1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(project1.uuid());","1037","    ComponentDto project2 = db.components().insertPublicProject();","1038","    Consumer<CeQueueDto> belongsToProject2 = t -> t.setMainComponentUuid(project2.uuid()).setComponentUuid(project2.uuid());","1039","","1040","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_1\", now.minusDays(180).minusMonths(10), belongsToProject1);","1041","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_1\", now.minusDays(180).minusDays(1), belongsToProject1);","1042","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_1\", now.minusDays(180), belongsToProject1);","1043","    insertCeActivityAndChildDataWithDate(\"RECENT_1\", now.minusDays(1), belongsToProject1);","1044","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_2\", now.minusDays(180).minusMonths(10), belongsToProject2);","1045","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_2\", now.minusDays(180).minusDays(1), belongsToProject2);","1046","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_2\", now.minusDays(180), belongsToProject2);","1047","    insertCeActivityAndChildDataWithDate(\"RECENT_2\", now.minusDays(1), belongsToProject2);","1048","","1049","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1050","    underTest.purge(db.getSession(), newConfigurationWith30Days(System2.INSTANCE, project1.uuid(), project1.uuid()),","1051","      PurgeListener.EMPTY, new PurgeProfiler());","1052","","1053","    assertThat(selectActivity(\"VERY_OLD_1\")).isEmpty();","1054","    assertThat(selectTaskInput(\"VERY_OLD_1\")).isEmpty();","1055","    assertThat(selectTaskCharacteristic(\"VERY_OLD_1\")).hasSize(0);","1056","    assertThat(scannerContextExists(\"VERY_OLD_1\")).isFalse();","1057","    assertThat(selectActivity(\"VERY_OLD_2\")).isNotEmpty();","1058","    assertThat(selectTaskInput(\"VERY_OLD_2\")).isNotEmpty();","1059","    assertThat(selectTaskCharacteristic(\"VERY_OLD_2\")).hasSize(1);","1060","    assertThat(scannerContextExists(\"VERY_OLD_2\")).isTrue();","1061","","1062","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1063","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1064","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_1\")).hasSize(0);","1065","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_1\")).isFalse();","1066","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_2\")).isNotEmpty();","1067","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_2\")).isNotEmpty();","1068","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_2\")).hasSize(1);","1069","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_2\")).isTrue();","1070","","1071","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1072","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1073","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_1\")).hasSize(1);","1074","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse();  \/\/ because more than 4 weeks old","1075","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1076","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1077","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_2\")).hasSize(1);","1078","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_2\")).isTrue();","1079","","1080","    assertThat(selectActivity(\"RECENT_1\")).isNotEmpty();","1081","    assertThat(selectTaskInput(\"RECENT_1\")).isNotEmpty();","1082","    assertThat(selectTaskCharacteristic(\"RECENT_1\")).hasSize(1);","1083","    assertThat(scannerContextExists(\"RECENT_1\")).isTrue();","1084","    assertThat(selectActivity(\"RECENT_2\")).isNotEmpty();","1085","    assertThat(selectTaskInput(\"RECENT_2\")).isNotEmpty();","1086","    assertThat(selectTaskCharacteristic(\"RECENT_2\")).hasSize(1);","1087","    assertThat(scannerContextExists(\"RECENT_2\")).isTrue();","1088","  }","1089","","1090","  @Test","1091","  public void delete_ce_analysis_older_than_180_and_scanner_context_older_than_40_days_of_project_and_branches_when_purging_project() {","1092","    LocalDateTime now = LocalDateTime.now();","1093","    ComponentDto project1 = db.components().insertPublicProject();","1094","    ComponentDto branch1 = db.components().insertProjectBranch(project1);","1095","    Consumer<CeQueueDto> belongsToProject1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(project1.uuid());","1096","    Consumer<CeQueueDto> belongsToBranch1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(branch1.uuid());","1097","","1098","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_1\", now.minusDays(180).minusMonths(10), belongsToProject1);","1099","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_1\", now.minusDays(180).minusDays(1), belongsToProject1);","1100","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_1\", now.minusDays(180), belongsToProject1);","1101","    insertCeActivityAndChildDataWithDate(\"RECENT_1\", now.minusDays(1), belongsToProject1);","1102","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_2\", now.minusDays(180).minusMonths(10), belongsToBranch1);","1103","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_2\", now.minusDays(180).minusDays(1), belongsToBranch1);","1104","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_2\", now.minusDays(180), belongsToBranch1);","1105","    insertCeActivityAndChildDataWithDate(\"RECENT_2\", now.minusDays(1), belongsToBranch1);","1106","","1107","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1108","    underTest.purge(db.getSession(), newConfigurationWith30Days(System2.INSTANCE, project1.uuid(), project1.uuid()),","1109","      PurgeListener.EMPTY, new PurgeProfiler());","1110","","1111","    assertThat(selectActivity(\"VERY_OLD_1\")).isEmpty();","1112","    assertThat(selectTaskInput(\"VERY_OLD_1\")).isEmpty();","1113","    assertThat(selectTaskCharacteristic(\"VERY_OLD_1\")).hasSize(0);","1114","    assertThat(scannerContextExists(\"VERY_OLD_1\")).isFalse();","1115","    assertThat(selectActivity(\"VERY_OLD_2\")).isEmpty();","1116","    assertThat(selectTaskInput(\"VERY_OLD_2\")).isEmpty();","1117","    assertThat(selectTaskCharacteristic(\"VERY_OLD_2\")).isEmpty();","1118","    assertThat(scannerContextExists(\"VERY_OLD_2\")).isFalse();","1119","","1120","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1121","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_1\")).isEmpty();","1122","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_1\")).hasSize(0);","1123","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_1\")).isFalse();","1124","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1125","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1126","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1127","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_2\")).isFalse();","1128","","1129","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1130","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1131","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_1\")).hasSize(1);","1132","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isFalse(); \/\/ because more than 4 weeks old","1133","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1134","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1135","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_2\")).hasSize(1);","1136","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_2\")).isFalse(); \/\/ because more than 4 weeks old","1137","","1138","    assertThat(selectActivity(\"RECENT_1\")).isNotEmpty();","1139","    assertThat(selectTaskInput(\"RECENT_1\")).isNotEmpty();","1140","    assertThat(selectTaskCharacteristic(\"RECENT_1\")).hasSize(1);","1141","    assertThat(scannerContextExists(\"RECENT_1\")).isTrue();","1142","    assertThat(selectActivity(\"RECENT_2\")).isNotEmpty();","1143","    assertThat(selectTaskInput(\"RECENT_2\")).isNotEmpty();","1144","    assertThat(selectTaskCharacteristic(\"RECENT_2\")).hasSize(1);","1145","    assertThat(scannerContextExists(\"RECENT_2\")).isTrue();","1146","  }","1147","","1148","  @Test","1149","  public void delete_ce_analysis_of_branch_older_than_180_and_scanner_context_older_than_40_days_when_purging_branch() {","1150","    LocalDateTime now = LocalDateTime.now();","1151","    ComponentDto project1 = db.components().insertPublicProject();","1152","    ComponentDto branch1 = db.components().insertProjectBranch(project1);","1153","    Consumer<CeQueueDto> belongsToProject1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(project1.uuid());","1154","    Consumer<CeQueueDto> belongsToBranch1 = t -> t.setMainComponentUuid(project1.uuid()).setComponentUuid(branch1.uuid());","1155","","1156","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_1\", now.minusDays(180).minusMonths(10), belongsToProject1);","1157","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_1\", now.minusDays(180).minusDays(1), belongsToProject1);","1158","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_1\", now.minusDays(180), belongsToProject1);","1159","    insertCeActivityAndChildDataWithDate(\"RECENT_1\", now.minusDays(1), belongsToProject1);","1160","    insertCeActivityAndChildDataWithDate(\"VERY_OLD_2\", now.minusDays(180).minusMonths(10), belongsToBranch1);","1161","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH_2\", now.minusDays(180).minusDays(1), belongsToBranch1);","1162","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH_2\", now.minusDays(180), belongsToBranch1);","1163","    insertCeActivityAndChildDataWithDate(\"RECENT_2\", now.minusDays(1), belongsToBranch1);","1164","","1165","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1166","    underTest.purge(db.getSession(), newConfigurationWith30Days(System2.INSTANCE, branch1.uuid(), branch1.uuid()),","1167","      PurgeListener.EMPTY, new PurgeProfiler());","1168","","1169","    assertThat(selectActivity(\"VERY_OLD_1\")).isNotEmpty();","1170","    assertThat(selectTaskInput(\"VERY_OLD_1\")).isNotEmpty();","1171","    assertThat(selectTaskCharacteristic(\"VERY_OLD_1\")).hasSize(1);","1172","    assertThat(scannerContextExists(\"VERY_OLD_1\")).isTrue();","1173","    assertThat(selectActivity(\"VERY_OLD_2\")).isEmpty();","1174","    assertThat(selectTaskInput(\"VERY_OLD_2\")).isEmpty();","1175","    assertThat(selectTaskCharacteristic(\"VERY_OLD_2\")).isEmpty();","1176","    assertThat(scannerContextExists(\"VERY_OLD_2\")).isFalse();","1177","","1178","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_1\")).isNotEmpty();","1179","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_1\")).isNotEmpty();","1180","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_1\")).hasSize(1);","1181","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_1\")).isTrue();","1182","    assertThat(selectActivity(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1183","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1184","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH_2\")).isEmpty();","1185","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH_2\")).isFalse();","1186","","1187","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1188","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_1\")).isNotEmpty();","1189","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_1\")).hasSize(1);","1190","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_1\")).isTrue();","1191","    assertThat(selectActivity(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1192","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH_2\")).isNotEmpty();","1193","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH_2\")).hasSize(1);","1194","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH_2\")).isFalse(); \/\/ because more than 4 weeks old","1195","","1196","    assertThat(selectActivity(\"RECENT_1\")).isNotEmpty();","1197","    assertThat(selectTaskInput(\"RECENT_1\")).isNotEmpty();","1198","    assertThat(selectTaskCharacteristic(\"RECENT_1\")).hasSize(1);","1199","    assertThat(scannerContextExists(\"RECENT_1\")).isTrue();","1200","    assertThat(selectActivity(\"RECENT_2\")).isNotEmpty();","1201","    assertThat(selectTaskInput(\"RECENT_2\")).isNotEmpty();","1202","    assertThat(selectTaskCharacteristic(\"RECENT_2\")).hasSize(1);","1203","    assertThat(scannerContextExists(\"RECENT_2\")).isTrue();","1204","  }","1205","","1206","  @Test","1445","  @Test","1446","  public void purgeCeActivities_deletes_activity_older_than_180_days_and_their_scanner_context() {","1447","    LocalDateTime now = LocalDateTime.now();","1448","    insertCeActivityAndChildDataWithDate(\"VERY_OLD\", now.minusDays(180).minusMonths(10));","1449","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(180).minusDays(1));","1450","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(180));","1451","    insertCeActivityAndChildDataWithDate(\"RECENT\", now.minusDays(1));","1452","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1453","","1454","    underTest.purgeCeActivities(db.getSession(), new PurgeProfiler());","1455","","1456","    assertThat(selectActivity(\"VERY_OLD\")).isEmpty();","1457","    assertThat(selectTaskInput(\"VERY_OLD\")).isEmpty();","1458","    assertThat(selectTaskCharacteristic(\"VERY_OLD\")).hasSize(0);","1459","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","1460","","1461","    assertThat(selectActivity(\"JUST_OLD_ENOUGH\")).isEmpty();","1462","    assertThat(selectTaskInput(\"JUST_OLD_ENOUGH\")).isEmpty();","1463","    assertThat(selectTaskCharacteristic(\"JUST_OLD_ENOUGH\")).hasSize(0);","1464","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","1465","","1466","    assertThat(selectActivity(\"NOT_OLD_ENOUGH\")).isNotEmpty();","1467","    assertThat(selectTaskInput(\"NOT_OLD_ENOUGH\")).isNotEmpty();","1468","    assertThat(selectTaskCharacteristic(\"NOT_OLD_ENOUGH\")).hasSize(1);","1469","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","1470","","1471","    assertThat(selectActivity(\"RECENT\")).isNotEmpty();","1472","    assertThat(selectTaskInput(\"RECENT\")).isNotEmpty();","1473","    assertThat(selectTaskCharacteristic(\"RECENT\")).hasSize(1);","1474","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","1475","  }","1476","","1477","  @Test","1478","  public void purgeCeScannerContexts_deletes_ce_scanner_context_older_than_28_days() {","1479","    LocalDateTime now = LocalDateTime.now();","1480","    insertCeActivityAndChildDataWithDate(\"VERY_OLD\", now.minusDays(28).minusMonths(12));","1481","    insertCeActivityAndChildDataWithDate(\"JUST_OLD_ENOUGH\", now.minusDays(28).minusDays(1));","1482","    insertCeActivityAndChildDataWithDate(\"NOT_OLD_ENOUGH\", now.minusDays(28));","1483","    insertCeActivityAndChildDataWithDate(\"RECENT\", now.minusDays(1));","1484","    when(system2.now()).thenReturn(now.toInstant(ZoneOffset.UTC).toEpochMilli());","1485","","1486","    underTest.purgeCeScannerContexts(db.getSession(), new PurgeProfiler());","1487","","1488","    assertThat(scannerContextExists(\"VERY_OLD\")).isFalse();","1489","    assertThat(scannerContextExists(\"JUST_OLD_ENOUGH\")).isFalse();","1490","    assertThat(scannerContextExists(\"NOT_OLD_ENOUGH\")).isTrue();","1491","    assertThat(scannerContextExists(\"RECENT\")).isTrue();","1492","  }","1493","","1494","  private Optional<CeActivityDto> selectActivity(String taskUuid) {","1495","    return db.getDbClient().ceActivityDao().selectByUuid(db.getSession(), taskUuid);","1496","  }","1497","","1498","  private List<CeTaskCharacteristicDto> selectTaskCharacteristic(String taskUuid) {","1499","    return db.getDbClient().ceTaskCharacteristicsDao().selectByTaskUuids(db.getSession(), Collections.singletonList(taskUuid));","1500","  }","1501","","1502","  private Optional<CeTaskInputDao.DataStream> selectTaskInput(String taskUuid) {","1503","    return db.getDbClient().ceTaskInputDao().selectData(db.getSession(), taskUuid);","1504","  }","1505","","1506","  private boolean scannerContextExists(String uuid) {","1507","    return db.countSql(\"select count(1) from ce_scanner_context where task_uuid = '\" + uuid + \"'\") == 1;","1508","  }","1509","","1510","  @SafeVarargs","1511","  private final void insertCeActivityAndChildDataWithDate(String ceActivityUuid, LocalDateTime dateTime,","1512","    Consumer<CeQueueDto>... queueDtoConsumers) {","1513","    long date = dateTime.toInstant(UTC).toEpochMilli();","1514","    CeQueueDto queueDto = new CeQueueDto();","1515","    queueDto.setUuid(ceActivityUuid);","1516","    queueDto.setTaskType(CeTaskTypes.REPORT);","1517","    Arrays.stream(queueDtoConsumers).forEach(t -> t.accept(queueDto));","1518","    CeActivityDto dto = new CeActivityDto(queueDto);","1519","    dto.setStatus(CeActivityDto.Status.SUCCESS);","1520","","1521","    when(system2.now()).thenReturn(date);","1522","    insertCeTaskInput(dto.getUuid());","1523","    insertCeTaskCharacteristics(dto.getUuid(), 1);","1524","    insertCeScannerContext(dto.getUuid());","1525","    insertCeTaskMessages(dto.getUuid(), 2);","1526","    db.getDbClient().ceActivityDao().insert(db.getSession(), dto);","1527","    db.getSession().commit();","1528","  }","1529",""],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/purge\/PurgeDao.java":[{"add":["30","import javax.annotation.Nullable;","31","import org.sonar.api.utils.DateUtils;","72","    purgeOldCeActivities(rootUuid, commands);","73","    purgeOldCeScannerContexts(rootUuid, commands);","79","  private void purgeStaleBranches(PurgeCommands commands, PurgeConfiguration conf, PurgeMapper mapper, String rootUuid) {","180","  public void purgeCeActivities(DbSession session, PurgeProfiler profiler) {","181","    PurgeMapper mapper = session.getMapper(PurgeMapper.class);","182","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","183","    purgeOldCeActivities(null, commands);","184","  }","185","","186","  private void purgeOldCeActivities(@Nullable String rootUuid, PurgeCommands commands) {","187","    Date sixMonthsAgo = DateUtils.addDays(new Date(system2.now()), -180);","188","    commands.deleteCeActivityBefore(rootUuid, sixMonthsAgo.getTime());","189","  }","190","","191","  public void purgeCeScannerContexts(DbSession session, PurgeProfiler profiler) {","192","    PurgeMapper mapper = session.getMapper(PurgeMapper.class);","193","    PurgeCommands commands = new PurgeCommands(session, mapper, profiler);","194","    purgeOldCeScannerContexts(null, commands);","195","  }","196","","197","  private void purgeOldCeScannerContexts(@Nullable String rootUuid, PurgeCommands commands) {","198","    Date fourWeeksAgo = DateUtils.addDays(new Date(system2.now()), -28);","199","    commands.deleteCeScannerContextBefore(rootUuid, fourWeeksAgo.getTime());","200","  }","201","","202","","247","  private void deleteRootComponent(String rootUuid, PurgeMapper mapper, PurgeCommands commands) {"],"delete":["75","  private static void purgeStaleBranches(PurgeCommands commands, PurgeConfiguration conf, PurgeMapper mapper, String rootUuid) {","220","  private static void deleteRootComponent(String rootUuid, PurgeMapper mapper, PurgeCommands commands) {"]}],"server\/sonar-ce\/src\/main\/java\/org\/sonar\/ce\/queue\/PurgeCeActivities.java":[{"add":["25","import org.sonar.db.purge.PurgeProfiler;","31","  private final PurgeProfiler profiler;","33","  public PurgeCeActivities(DbClient dbClient, PurgeProfiler profiler) {","35","    this.profiler = profiler;","41","      dbClient.purgeDao().purgeCeActivities(dbSession, profiler);","42","      dbClient.purgeDao().purgeCeScannerContexts(dbSession, profiler);"],"delete":["21","import java.util.Date;","22","import java.util.Set;","25","import org.sonar.api.utils.DateUtils;","26","import org.sonar.api.utils.System2;","27","import org.sonar.api.utils.log.Logger;","28","import org.sonar.api.utils.log.Loggers;","31","import org.sonar.db.ce.CeActivityDto;","32","","33","import static java.util.stream.Stream.concat;","34","import static org.sonar.core.util.stream.MoreCollectors.toSet;","39","  private static final Logger LOGGER = Loggers.get(PurgeCeActivities.class);","40","","42","  private final System2 system2;","44","  public PurgeCeActivities(DbClient dbClient, System2 system2) {","46","    this.system2 = system2;","52","      Date sixMonthsAgo = DateUtils.addDays(new Date(system2.now()), -180);","53","","54","      LOGGER.info(\"Delete the Compute Engine tasks created before {}\", sixMonthsAgo.getTime());","55","      Set<String> ceActivityUuids = dbClient.ceActivityDao().selectOlderThan(dbSession, sixMonthsAgo.getTime())","56","        .stream()","57","        .map(CeActivityDto::getUuid)","58","        .collect(toSet());","59","      dbClient.ceActivityDao().deleteByUuids(dbSession, ceActivityUuids);","60","      dbClient.ceTaskCharacteristicsDao().deleteByTaskUuids(dbSession, ceActivityUuids);","61","      dbClient.ceTaskInputDao().deleteByUuids(dbSession, ceActivityUuids);","62","","63","      Date fourWeeksAgo = DateUtils.addDays(new Date(system2.now()), -28);","64","","65","      LOGGER.info(\"Delete the Scanner contexts tasks created before {}\", fourWeeksAgo.getTime());","66","      Set<String> scannerContextUuids = dbClient.ceScannerContextDao().selectOlderThan(dbSession, fourWeeksAgo.getTime());","67","      dbClient.ceScannerContextDao().deleteByUuids(","68","        dbSession,","69","        concat(ceActivityUuids.stream(), scannerContextUuids.stream()).collect(toSet()));"]}]}},"7fc68e34923e3fe08b1b0dc81f7def4ab76d2b1e":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/web\/SecurityServletFilter.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/settings\/DeprecatedPropertiesWsTest.java":"MODIFY","server\/sonar-web\/src\/main\/webapp\/WEB-INF\/web.xml":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/platform\/web\/SecurityServletFilter.java":[{"add":[],"delete":["35"," * The list of headers is mirrored in environment.rb as a workaround to Rack swallowing the headers.."]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/SetActionTest.java":[{"add":["377","  public void persist_global_setting_with_non_ascii_characters() {","378","    callForGlobalSetting(\"my.key\", \"ﬁ±∞\u2026\");","379","","380","    assertGlobalSetting(\"my.key\", \"ﬁ±∞\u2026\");","381","    assertThat(settingsChangeNotifier.wasCalled).isTrue();","382","  }","383","","384","  @Test"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/setting\/ws\/ValuesActionTest.java":[{"add":["725","  public void return_simple_value_with_non_ascii_characters() throws Exception {","726","    setAuthenticatedUser();","727","    definitions.addComponent(PropertyDefinition","728","      .builder(\"foo\")","729","      .build());","730","    propertyDb.insertProperties(newGlobalPropertyDto().setKey(\"foo\").setValue(\"ﬁ±∞\u2026\"));","731","","732","    ValuesWsResponse result = executeRequestForGlobalProperties(\"foo\");","733","","734","    assertThat(result.getSettings(0).getValue()).isEqualTo(\"ﬁ±∞\u2026\");","735","  }","736","","737","  @Test"],"delete":[]}],"it\/it-tests\/src\/test\/java\/it\/settings\/DeprecatedPropertiesWsTest.java":[{"add":["355","  private static Response call(Request.Builder requestBuilder) {"],"delete":["355","  public static Response call(Request.Builder requestBuilder) {"]}],"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/web.xml":[{"add":["18","    <filter-name>SetCharacterEncodingFilter<\/filter-name>","19","    <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter<\/filter-class>","20","    <init-param>","21","      <param-name>encoding<\/param-name>","22","      <param-value>UTF-8<\/param-value>","23","    <\/init-param>","24","  <\/filter>","25","  <filter>","48","    <filter-name>SetCharacterEncodingFilter<\/filter-name>","49","    <url-pattern>\/*<\/url-pattern>","50","  <\/filter-mapping>","51","  <filter-mapping>"],"delete":[]}]}},"29cdfd46a27145d44d14e5862be245aa9baf61b2":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentDeletePopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentDeletePopup-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":[{"add":["3","<DropdownOverlay","4","  placement=\"bottom-right\"","5",">"],"delete":["3","<DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueCommentLine.tsx":[{"add":["26","import { PopupPlacement } from '..\/..\/ui\/popups';","107","                    placement={PopupPlacement.BottomRight}"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueCommentLine-test.tsx.snap":[{"add":["69","            placement=\"bottom-right\"","194","            placement=\"bottom-right\""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentDeletePopup.tsx":[{"add":["23","import { PopupPlacement } from '..\/..\/ui\/popups';","31","    <DropdownOverlay placement={PopupPlacement.BottomRight}>"],"delete":["30","    <DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentDeletePopup-test.tsx.snap":[{"add":["3","<DropdownOverlay","4","  placement=\"bottom-right\"","5",">"],"delete":["3","<DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":[{"add":["24","import { PopupPlacement } from '..\/..\/ui\/popups';","31","  placement?: PopupPlacement;","73","      <DropdownOverlay placement={this.props.placement}>"],"delete":["30","  popupPosition?: {};","72","      <DropdownOverlay>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":[{"add":["26","import { PopupPlacement } from '..\/..\/ui\/popups';","74","      <DropdownOverlay placement={PopupPlacement.BottomRight}>"],"delete":["73","      <DropdownOverlay>"]}]}},"26c5dfb16763787a4ffe2219def80ebb3b20bdfd":{"changes":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueActionTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/issue\/IssueActionTest.java":[{"add":["72","    assertThat(comment.htmlText()).isEqualTo(\"this is my <strong>comment<\/strong>\");","81","    assertThat(reloaded.comments().get(0).htmlText()).isEqualTo(\"this is my <strong>comment<\/strong>\");"],"delete":["72","    assertThat(comment.htmlText()).isEqualTo(\"this is my <em>comment<\/em>\");","81","    assertThat(reloaded.comments().get(0).htmlText()).isEqualTo(\"this is my <em>comment<\/em>\");"]}]}},"a0b8503e9504a4e149ec076d34ea82dfb6b91f86":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-restore-built-in-profiles.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-profiles\/templates\/quality-profiles-restore-built-in-profiles.hbs":[{"add":["2","    <h2>{{t 'quality_profiles.restore_built_in_profiles'}}<\/h2>"],"delete":["2","    <h2>{{t 'quality_profiles.new_profile'}}<\/h2>"]}]}},"a7575340afac655b86e8897258546fc9f55d6341":{"changes":{"server\/sonar-web\/src\/main\/js\/main\/processes.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/main\/processes.js":[{"add":["163","    failBackgroundProcess(jqXHR.processId, message ? escapeHtml(message) : null);"],"delete":["163","    failBackgroundProcess(jqXHR.processId, escapeHtml(message));"]}]}},"fe77597e418fb06ce2e10fe786f9dfd667aa2c19":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/shared\/avatar.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/shared\/avatar.js":[{"add":["33","    const emailHash = md5.md5((this.props.email || '').toLowerCase()).trim();"],"delete":["33","    const emailHash = md5.md5(this.props.email || '').trim();"]}]}},"a19ab13f452c7e745cd5bbf2179f24b1076c7096":{"changes":{"build.gradle":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":"MODIFY"},"diff":{"build.gradle":[{"add":["166","      dependencySet(group: 'org.apache.tomcat.embed', version: '8.5.38') {"],"delete":["166","      dependencySet(group: 'org.apache.tomcat.embed', version: '8.5.37') {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/app\/TomcatConnectors.java":[{"add":["57","    \/\/ see https:\/\/tomcat.apache.org\/tomcat-8.5-doc\/config\/http.html","58","    connector.setProperty(\"relaxedQueryChars\", \"\\\"<>[\\\\]^`{|}\");"],"delete":[]}]}},"68ac319d78630e20a13e6b540fee4a9011f40ef1":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/UserUpdaterTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/UserUpdater.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/UserDto.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/user\/UserUpdaterTest.java":[{"add":["260","  public void fail_to_create_user_with_space_in_login() {","261","    try {","262","      userUpdater.create(NewUser.create()","263","        .setLogin(\"mari us\")","264","        .setName(\"Marius\")","265","        .setEmail(\"marius@mail.com\")","266","        .setPassword(\"password\"));","267","      fail();","268","    } catch (BadRequestException e) {","269","      assertThat(e.errors().messages()).containsOnly(Message.of(\"user.bad_login\"));","270","    }","271","  }","272","","273","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/user\/UserUpdater.java":[{"add":["279","      } else if (!login.matches(\"\\\\A\\\\w[\\\\w\\\\.\\\\-_@]+\\\\z\")) {"],"delete":["279","      } else if (!login.matches(\"\\\\A\\\\w[\\\\w\\\\.\\\\-_@\\\\s]+\\\\z\")) {"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/user\/UserDto.java":[{"add":["61","  \/**","62","   * Spaces were authorized before SQ 5.4.","63","   * For versions 5.4+ it's not possible to create a login with a space character.","64","   *\/"],"delete":[]}]}},"f9bb435740391633129ceee0732c531942e48115":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/actions.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/actions-test.ts":"ADD"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/actions.ts":[{"add":["102","    return { locationsNavigator: true, selectedFlowIndex: nextIndex, selectedLocationIndex: 0 };"],"delete":["102","    return { selectedFlowIndex: nextIndex, selectedLocationIndex: 0 };"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/__tests__\/actions-test.ts":[{"add":[],"delete":[]}]}},"5cb50b88707b28319bd457a2602b6bfc7445f8d9":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueAssign-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueAssign-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueAssign.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/BulkChangeModal-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/AssigneeFacet.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/Item.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/BulkChangeModal-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/__snapshots__\/IssueAssign-test.tsx.snap":[{"add":["60","exports[`should render a fallback assignee display if assignee info are not available 1`] = `","61","<div","62","  className=\"dropdown\"","63",">","64","  <Toggler","65","    closeOnEscape={true}","66","    onRequestClose={[Function]}","67","    open={false}","68","    overlay={","69","      <Connect(withCurrentUser(SetAssigneePopup))","70","        issue={","71","          Object {","72","            \"projectOrganization\": \"org\",","73","          }","74","        }","75","        onSelect={[MockFunction]}","76","      \/>","77","    }","78","  >","79","    <ButtonLink","80","      className=\"issue-action issue-action-with-options js-issue-assign\"","81","      onClick={[Function]}","82","    >","83","      <span","84","        className=\"issue-meta-label\"","85","      >","86","        unassigned","87","      <\/span>","88","      <DropdownIcon","89","        className=\"little-spacer-left\"","90","      \/>","91","    <\/ButtonLink>","92","  <\/Toggler>","93","<\/div>","94","`;","95",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/__tests__\/IssueAssign-test.tsx":[{"add":["39","it('should render a fallback assignee display if assignee info are not available', () => {","40","  expect(shallowRender({ issue: { projectOrganization: 'org' } })).toMatchSnapshot();","41","});","42","","53","  return shallow<IssueAssign>("],"delete":["49","  return shallow("]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/BulkChangeModal.tsx":[{"add":["163","      results.map(r => {","164","        const userInfo = r.name || r.login;","165","","166","        return {","167","          avatar: r.avatar,","168","          label: isUserActive(r) ? userInfo : translateWithParameters('user.x_deleted', userInfo),","169","          value: r.login","170","        };","171","      })"],"delete":["163","      results.map(r => ({","164","        avatar: r.avatar,","165","        label: isUserActive(r) ? r.name : translateWithParameters('user.x_deleted', r.login),","166","        value: r.login","167","      }))"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/components\/IssueAssign.tsx":[{"add":["49","    const assigneeName = issue.assigneeName || issue.assignee;","51","    if (assigneeName) {","64","              ? translateWithParameters('user.x_deleted', assigneeName)","65","              : assigneeName}"],"delete":["49","    const assignee =","50","      issue.assigneeActive !== false ? issue.assigneeName || issue.assignee : issue.assignee;","52","    if (assignee) {","65","              ? translateWithParameters('user.x_deleted', assignee)","66","              : assignee}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/BulkChangeModal-test.tsx":[{"add":["35","jest.mock('..\/..\/utils', () => ({","36","  searchAssignees: jest.fn().mockResolvedValue({","37","    results: [","38","      {","39","        active: true,","40","        avatar: '##toto',","41","        login: 'toto@toto',","42","        name: 'toto'","43","      },","44","      {","45","        active: false,","46","        avatar: '##toto',","47","        login: 'login@login',","48","        name: 'toto'","49","      },","50","      {","51","        active: true,","52","        avatar: '##toto',","53","        login: 'login@login'","54","      }","55","    ]","56","  })","57","}));","58","","83","it('should properly handle the search for assignee', async () => {","84","  const issues: T.Issue[] = [];","85","  for (let i = MAX_PAGE_SIZE + 1; i > 0; i--) {","86","    issues.push(mockIssue());","87","  }","88","","89","  const wrapper = getWrapper(issues);","90","  const result = await wrapper.instance().handleAssigneeSearch('toto');","91","  expect(result).toMatchSnapshot();","92","});","93","","95","  return shallow<BulkChangeModal>("],"delete":["60","  return shallow("]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/AssigneeFacet.tsx":[{"add":["106","    if (!user) {","107","      return assignee;","108","    }","109","","110","    const userName = user.name || user.login;","111","","112","    return (","114","        <Avatar className=\"little-spacer-right\" hash={user.avatar} name={userName} size={16} \/>","115","        {isUserActive(user) ? userName : translateWithParameters('user.x_deleted', userName)}"],"delete":["106","    return user ? (","108","        <Avatar","109","          className=\"little-spacer-right\"","110","          hash={user.avatar}","111","          name={user.name || user.login}","112","          size={16}","113","        \/>","114","        {isUserActive(user) ? user.name : translateWithParameters('user.x_deleted', user.login)}","116","    ) : (","117","      assignee"]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-measures\/components\/Item.tsx":[{"add":["88","    const userName = measure.user.name || measure.user.login;","120","              ? userName","121","              : translateWithParameters('user.x_deleted', userName)}"],"delete":["119","              ? measure.user.name || measure.user.login","120","              : translateWithParameters('user.x_deleted', measure.user.login)}"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/__tests__\/__snapshots__\/BulkChangeModal-test.tsx.snap":[{"add":["124","","125","exports[`should properly handle the search for assignee 1`] = `","126","Array [","127","  Object {","128","    \"avatar\": \"##toto\",","129","    \"label\": \"toto\",","130","    \"value\": \"toto@toto\",","131","  },","132","  Object {","133","    \"avatar\": \"##toto\",","134","    \"label\": \"user.x_deleted.toto\",","135","    \"value\": \"login@login\",","136","  },","137","  Object {","138","    \"avatar\": \"##toto\",","139","    \"label\": \"user.x_deleted.login@login\",","140","    \"value\": \"login@login\",","141","  },","142","]","143","`;"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":[{"add":["79","                {this.state.changelog.map((item, idx) => {","80","                  const userName = item.userName || item.user;","81","","82","                  return (","83","                    <tr key={idx}>","84","                      <td className=\"thin text-left text-top nowrap\">","85","                        <DateTimeFormatter date={item.creationDate} \/>","86","                      <\/td>","87","                      <td className=\"text-left text-top\">","88","                        {userName && (","89","                          <p>","90","                            <Avatar","91","                              className=\"little-spacer-right\"","92","                              hash={item.avatar}","93","                              name={userName}","94","                              size={16}","95","                            \/>","96","                            {item.isUserActive","97","                              ? userName","98","                              : translateWithParameters('user.x_deleted', userName)}","99","                          <\/p>","100","                        )}","101","                        {item.diffs.map(diff => (","102","                          <IssueChangelogDiff diff={diff} key={diff.key} \/>","103","                        ))}","104","                      <\/td>","105","                    <\/tr>","106","                  );","107","                })}"],"delete":["79","                {this.state.changelog.map((item, idx) => (","80","                  <tr key={idx}>","81","                    <td className=\"thin text-left text-top nowrap\">","82","                      <DateTimeFormatter date={item.creationDate} \/>","83","                    <\/td>","84","                    <td className=\"text-left text-top\">","85","                      <p>","86","                        <Avatar","87","                          className=\"little-spacer-right\"","88","                          hash={item.avatar}","89","                          name={(item.isUserActive && item.userName) || item.user}","90","                          size={16}","91","                        \/>","92","                        {item.isUserActive","93","                          ? item.userName || item.user","94","                          : translateWithParameters('user.x_deleted', item.user)}","95","                      <\/p>","96","                      {item.diffs.map(diff => (","97","                        <IssueChangelogDiff diff={diff} key={diff.key} \/>","98","                      ))}","99","                    <\/td>","100","                  <\/tr>","101","                ))}"]}]}},"0b2bd218c88655f24bc541086dfee18d3364a9e1":{"changes":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteActionTest.java":"MODIFY","server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DatabaseUtils.java":[{"add":["49","import static com.google.common.base.Preconditions.checkArgument;","341","","342","  \/**","343","   * @throws IllegalArgumentException if the collection is not null and has strictly more","344","   * than {@link #PARTITION_SIZE_FOR_ORACLE} values.","345","   *\/","346","  public static void checkThatNotTooManyConditions(@Nullable Collection<?> values, String message) {","347","    if (values != null) {","348","      checkArgument(values.size() <= PARTITION_SIZE_FOR_ORACLE, message);","349","    }","350","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDao.java":[{"add":["47","import static org.sonar.db.DatabaseUtils.checkThatNotTooManyConditions;","59","    checkThatNotTooManyComponents(query);","67","    checkThatNotTooManyComponents(query);","107","  \/**","108","   * Same as {@link #selectByQuery(DbSession, String, ComponentQuery, int, int)} except","109","   * that the filter on organization is disabled.","110","   *\/","115","  \/**","116","   * @throws IllegalArgumentException if parameter query#getComponentIds() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","117","   * @throws IllegalArgumentException if parameter query#getComponentKeys() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","118","   * @throws IllegalArgumentException if parameter query#getComponentUuids() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","119","   *\/","125","  \/**","126","   * Same as {@link #countByQuery(DbSession, String, ComponentQuery)} except","127","   * that the filter on organization is disabled.","128","   *\/","133","  \/**","134","   * @throws IllegalArgumentException if parameter query#getComponentIds() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","135","   * @throws IllegalArgumentException if parameter query#getComponentKeys() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","136","   * @throws IllegalArgumentException if parameter query#getComponentUuids() has more than {@link org.sonar.db.DatabaseUtils#PARTITION_SIZE_FOR_ORACLE} values","137","   *\/","368","","369","  private static void checkThatNotTooManyComponents(ComponentQuery query) {","370","    checkThatNotTooManyConditions(query.getComponentIds(), \"Too many component ids in query\");","371","    checkThatNotTooManyConditions(query.getComponentKeys(), \"Too many component keys in query\");","372","    checkThatNotTooManyConditions(query.getComponentUuids(), \"Too many component UUIDs in query\");","373","  }","374",""],"delete":["65",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchAction.java":[{"add":["32","import org.sonar.db.DatabaseUtils;","45","import static java.lang.String.format;","93","    action.setChangelog(","94","      new Change(\"6.4\", \"The 'uuid' field is deprecated in the response\"),","95","      new Change(\"6.7.2\", format(\"Parameters %s and %s accept maximum %d values\", PARAM_PROJECTS, PARAM_PROJECT_IDS, DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)));","135","      \/\/ Limitation of ComponentDao#selectByQuery(), max 1000 values are accepted.","136","      \/\/ Restricting size of HTTP parameter allows to not fail with SQL error","137","      .setMaxValuesAllowed(DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)","146","      \/\/ Limitation of ComponentDao#selectByQuery(), max 1000 values are accepted.","147","      \/\/ Restricting size of HTTP parameter allows to not fail with SQL error","148","      .setMaxValuesAllowed(DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)"],"delete":["91","    action.setChangelog(new Change(\"6.4\", \"The 'uuid' field is deprecated in the response\"));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsAction.java":[{"add":["36","import org.sonar.db.DatabaseUtils;","72","      .setDescription(\"Return list of projects for which the current user has 'Administer' permission. Maximum 1'000 projects are returned.\")","196","            .setComponentIds(ImmutableSet.copyOf(componentIds.subList(0, Math.min(componentIds.size(), DatabaseUtils.PARTITION_SIZE_FOR_ORACLE))))"],"delete":["71","      .setDescription(\"Return list of projects for which the current user has 'Administer' permission.\")","195","            .setComponentIds(ImmutableSet.copyOf(componentIds))"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchActionTest.java":[{"add":["24","import java.util.Collections;","305","  public void request_throws_IAE_if_more_than_1000_projects() {","306","    expectedException.expect(IllegalArgumentException.class);","307","    expectedException.expectMessage(\"'projects' can contains only 1000 values, got 1001\");","308","","309","    call(SearchRequest.builder()","310","      .setProjects(Collections.nCopies(1_001, \"foo\"))","311","      .build());","312","  }","313","","314","  @Test","315","  public void request_throws_IAE_if_more_than_1000_project_ids() {","316","    expectedException.expect(IllegalArgumentException.class);","317","    expectedException.expectMessage(\"'projectIds' can contains only 1000 values, got 1001\");","318","","319","    call(SearchRequest.builder()","320","      .setProjectIds(Collections.nCopies(1_001, \"foo\"))","321","      .build());","322","  }","323","","324","  @Test"],"delete":["22","import java.io.IOException;","23","import java.net.URISyntaxException;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteAction.java":[{"add":["21","import java.util.List;","22","import javax.annotation.CheckForNull;","23","import javax.annotation.Nullable;","24","import org.sonar.api.server.ws.Change;","38","import static java.lang.Math.min;","80","      .setHandler(this)","81","      .setChangelog(new Change(\"6.7.2\", \"Only the 1'000 first items in project filters are taken into account\"));","93","      .setDescription(\"Comma-separated list of project ids. Only the 1'000 first ids are used. Others are silently ignored.\")","155","      .setProjects(restrictTo1000Values(request.paramAsStrings(PARAM_PROJECTS)))","156","      .setProjectIds(restrictTo1000Values(request.paramAsStrings(PARAM_PROJECT_IDS)))","159","","160","  @CheckForNull","161","  private static List<String> restrictTo1000Values(@Nullable List<String> values) {","162","    if (values == null) {","163","      return null;","164","    }","165","    return values.subList(0, min(values.size(), 1_000));","166","  }"],"delete":["75","      .setHandler(this);","87","      .setDescription(\"Comma-separated list of project ids\")","149","      .setProjects(request.paramAsStrings(PARAM_PROJECTS))","150","      .setProjectIds(request.paramAsStrings(PARAM_PROJECT_IDS))"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":[{"add":["21","import java.util.Collections;","23","import org.apache.commons.lang.StringUtils;","106","  public void bulk_apply_template_by_template_uuid() {","139","  public void request_throws_IAE_if_more_than_1000_projects() {","140","    expectedException.expect(IllegalArgumentException.class);","141","    expectedException.expectMessage(\"'projects' can contains only 1000 values, got 1001\");","142","","143","    newRequest()","144","      .setParam(PARAM_ORGANIZATION, organization.getKey())","145","      .setParam(PARAM_TEMPLATE_NAME, template1.getName())","146","      .setParam(PARAM_PROJECTS, StringUtils.join(Collections.nCopies(1_001, \"foo\"), \",\"))","147","      .execute();","148","  }","149","","150","  @Test","151","  public void bulk_apply_template_by_template_name() {","166","  public void apply_template_by_qualifiers() {","185","  public void apply_template_by_query_on_name_and_key_public_project() {","205","  public void apply_template_by_query_on_name_and_key() {","226","  public void apply_template_by_project_keys() {","243","  public void apply_template_by_provisioned_only() {","261","  public void apply_template_by_analyzed_before() {","281","  public void apply_template_by_visibility() {"],"delete":["104","  public void bulk_apply_template_by_template_uuid() throws Exception {","137","  public void bulk_apply_template_by_template_name() throws Exception {","152","  public void apply_template_by_qualifiers() throws Exception {","171","  public void apply_template_by_query_on_name_and_key_public_project() throws Exception {","191","  public void apply_template_by_query_on_name_and_key() throws Exception {","212","  public void apply_template_by_project_keys() throws Exception {","229","  public void apply_template_by_provisioned_only() throws Exception {","247","  public void apply_template_by_analyzed_before() throws Exception {","267","  public void apply_template_by_visibility() throws Exception {"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/SearchMyProjectsActionTest.java":[{"add":["21","import java.util.stream.IntStream;","117","    SearchMyProjectsWsResponse result = callWs();","124","  public void return_only_first_1000_projects() {","125","    OrganizationDto organization = db.organizations().insert();","126","    IntStream.range(0, 1_010).forEach(i -> {","127","      ComponentDto project = db.components().insertComponent(newPrivateProjectDto(organization));","128","      db.users().insertProjectPermissionOnUser(user, UserRole.ADMIN, project);","129","    });","130","","131","    SearchMyProjectsWsResponse result = callWs();","132","","133","    assertThat(result.getPaging().getTotal()).isEqualTo(1_000);","134","  }","135","","136","  @Test","147","    SearchMyProjectsWsResponse result = callWs();","180","    SearchMyProjectsWsResponse result = callWs();","195","    SearchMyProjectsWsResponse result = callWs();","207","    SearchMyProjectsWsResponse result = callWs();","226","    SearchMyProjectsWsResponse result = callWs();","248","    SearchMyProjectsWsResponse result = callWs();","265","    callWs();","287","  private SearchMyProjectsWsResponse callWs() {"],"delete":["116","    SearchMyProjectsWsResponse result = call_ws();","133","    SearchMyProjectsWsResponse result = call_ws();","166","    SearchMyProjectsWsResponse result = call_ws();","181","    SearchMyProjectsWsResponse result = call_ws();","193","    SearchMyProjectsWsResponse result = call_ws();","212","    SearchMyProjectsWsResponse result = call_ws();","234","    SearchMyProjectsWsResponse result = call_ws();","251","    call_ws();","273","  private SearchMyProjectsWsResponse call_ws() {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateAction.java":[{"add":["27","import org.sonar.api.server.ws.Change;","32","import org.sonar.db.DatabaseUtils;","49","import static java.lang.String.format;","96","      .setChangelog(new Change(\"6.7.2\", format(\"Parameter %s accepts maximum %d values\", PARAM_PROJECTS, DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)))","116","      \/\/ Limitation of ComponentDao#selectByQuery(), max 1000 values are accepted.","117","      \/\/ Restricting size of HTTP parameter allows to not fail with SQL error","118","      .setMaxValuesAllowed(DatabaseUtils.PARTITION_SIZE_FOR_ORACLE)"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/BulkDeleteActionTest.java":[{"add":["23","import java.util.List;","25","import org.apache.commons.lang.StringUtils;","34","import org.sonar.core.util.stream.MoreCollectors;","213","  \/**","214","   * SONAR-10356","215","   *\/","216","  @Test","217","  public void delete_only_the_1000_first_projects() {","218","    userSession.logIn().addPermission(ADMINISTER, org1);","219","    List<String> keys = IntStream.range(0, 1_010).mapToObj(i -> \"key\" + i).collect(MoreCollectors.toArrayList());","220","    keys.forEach(key -> db.components().insertPrivateProject(org1, p -> p.setDbKey(key)));","221","","222","    ws.newRequest()","223","      .setParam(\"organization\", org1.getKey())","224","      .setParam(\"projects\", StringUtils.join(keys, \",\"))","225","      .execute();","226","","227","    verify(componentCleanerService, times(1_000)).delete(any(DbSession.class), any(ComponentDto.class));","228","  }","229",""],"delete":["21","import java.io.IOException;"]}],"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DatabaseUtilsTest.java":[{"add":["334","","335","  @Test","336","  public void checkThatNotTooManyConditions_does_not_fail_if_less_than_1000_conditions() {","337","    DatabaseUtils.checkThatNotTooManyConditions(null, \"unused\");","338","    DatabaseUtils.checkThatNotTooManyConditions(Collections.emptySet(), \"unused\");","339","    DatabaseUtils.checkThatNotTooManyConditions(Collections.nCopies(10, \"foo\"), \"unused\");","340","    DatabaseUtils.checkThatNotTooManyConditions(Collections.nCopies(1_000, \"foo\"), \"unused\");","341","  }","342","","343","  @Test","344","  public void checkThatNotTooManyConditions_throws_IAE_if_strictly_more_than_1000_conditions() {","345","    expectedException.expect(IllegalArgumentException.class);","346","    expectedException.expectMessage(\"the message\");","347","","348","    DatabaseUtils.checkThatNotTooManyConditions(Collections.nCopies(1_001, \"foo\"), \"the message\");","349","  }"],"delete":[]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["29","import java.util.stream.IntStream;","30","import java.util.stream.LongStream;","724","  public void selectByQuery_provisioned() {","782","  public void countByQuery_with_organization_throws_NPE_of_organizationUuid_is_null() {","783","    expectedException.expect(NullPointerException.class);","784","    expectedException.expectMessage(\"organizationUuid can't be null\");","785","","786","    underTest.countByQuery(dbSession, null, ALL_PROJECTS_COMPONENT_QUERY);","787","  }","788","","789","  @Test","790","  public void countByQuery_throws_IAE_if_too_many_component_ids() {","791","    Set<Long> ids = LongStream.range(0L, 1_010L).boxed().collect(Collectors.toSet());","792","    ComponentQuery.Builder query = ComponentQuery.builder()","793","      .setQualifiers(Qualifiers.PROJECT)","794","      .setComponentIds(ids);","795","","796","    assertThatCountByQueryThrowsIAE(query, \"Too many component ids in query\");","797","  }","798","","799","  @Test","800","  public void countByQuery_throws_IAE_if_too_many_component_keys() {","801","    Set<String> keys = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","802","    ComponentQuery.Builder query = ComponentQuery.builder()","803","      .setQualifiers(Qualifiers.PROJECT)","804","      .setComponentKeys(keys);","805","","806","    assertThatCountByQueryThrowsIAE(query, \"Too many component keys in query\");","807","  }","808","","809","  @Test","810","  public void countByQuery_throws_IAE_if_too_many_component_uuids() {","811","    Set<String> uuids = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","812","    ComponentQuery.Builder query = ComponentQuery.builder()","813","      .setQualifiers(Qualifiers.PROJECT)","814","      .setComponentUuids(uuids);","815","","816","    assertThatCountByQueryThrowsIAE(query, \"Too many component UUIDs in query\");","817","  }","818","","819","  private void assertThatCountByQueryThrowsIAE(ComponentQuery.Builder query, String expectedMessage) {","820","    expectedException.expect(IllegalArgumentException.class);","821","    expectedException.expectMessage(expectedMessage);","822","","823","    underTest.countByQuery(dbSession, query.build());","824","  }","825","","826","  @Test","1056","  public void selectByQuery_throws_IAE_if_too_many_component_ids() {","1057","    Set<Long> ids = LongStream.range(0L, 1_010L).boxed().collect(Collectors.toSet());","1058","    ComponentQuery.Builder query = ComponentQuery.builder()","1059","      .setQualifiers(Qualifiers.PROJECT)","1060","      .setComponentIds(ids);","1062","    assertThatSelectByQueryThrowsIAE(query, \"Too many component ids in query\");","1063","  }","1064","","1065","  @Test","1066","  public void selectByQuery_throws_IAE_if_too_many_component_keys() {","1067","    Set<String> keys = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","1068","    ComponentQuery.Builder query = ComponentQuery.builder()","1069","      .setQualifiers(Qualifiers.PROJECT)","1070","      .setComponentKeys(keys);","1071","","1072","    assertThatSelectByQueryThrowsIAE(query, \"Too many component keys in query\");","1073","  }","1074","","1075","  @Test","1076","  public void selectByQuery_throws_IAE_if_too_many_component_uuids() {","1077","    Set<String> uuids = IntStream.range(0, 1_010).mapToObj(String::valueOf).collect(Collectors.toSet());","1078","    ComponentQuery.Builder query = ComponentQuery.builder()","1079","      .setQualifiers(Qualifiers.PROJECT)","1080","      .setComponentUuids(uuids);","1081","","1082","    assertThatSelectByQueryThrowsIAE(query, \"Too many component UUIDs in query\");","1083","  }","1084","","1085","  private void assertThatSelectByQueryThrowsIAE(ComponentQuery.Builder query, String expectedMessage) {","1086","    expectedException.expect(IllegalArgumentException.class);","1087","    expectedException.expectMessage(expectedMessage);","1088","","1089","    underTest.selectByQuery(dbSession, query.build(), 0, Integer.MAX_VALUE);"],"delete":["722","  public void select_provisioned() {","1009","  public void countByQuery_with_organization_throws_NPE_of_organizationUuid_is_null() {","1010","    expectedException.expect(NullPointerException.class);","1011","    expectedException.expectMessage(\"organizationUuid can't be null\");","1013","    underTest.countByQuery(dbSession, null, ALL_PROJECTS_COMPONENT_QUERY);"]}]}},"243c757d0aa23bd907aeedb39154458c3894b2a3":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/charts\/BubbleChart.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/charts\/BubbleChart.tsx":[{"add":["212","      \/\/ as we modified the `x` using `transform`, check that it is inside the range again","213","      return x > 0 && x < xScale.range()[1] ? (","233","      \/\/ as we modified the `y` using `transform`, check that it is inside the range again","234","      return y > 0 && y < yScale.range()[0] ? (","303","              height={availableHeight + 4}","304","              width={availableWidth + 4}"],"delete":["212","      return x > 0 ? (","232","      return y > 0 && y < this.props.height - 80 ? (","301","              height={this.props.height - this.props.padding[0] - this.props.padding[2] + 4}","302","              width={width + 4}"]}]}},"c0c77159e1a512a1724b73550f4ede36619d1560":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReader.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReaderTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/RangeOffsetConverter.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReader.java":[{"add":["105","        if (range.getEndLine() == line) {","106","          syntaxHighlightingIterator.remove();","107","        }"],"delete":["105","        syntaxHighlightingIterator.remove();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/source\/HighlightingLineReaderTest.java":[{"add":["46","import static org.sonar.scanner.protocol.output.ScannerReport.SyntaxHighlightingRule.HighlightingType.CPP_DOC;","48","import static org.sonar.scanner.protocol.output.ScannerReport.SyntaxHighlightingRule.HighlightingType.KEYWORD;","117","  public void supports_highlighting_over_multiple_lines_including_an_empty_one() {","118","    List<ScannerReport.SyntaxHighlightingRule> syntaxHighlightingList = new ArrayList<>();","119","    addHighlighting(syntaxHighlightingList, 1, 0, 1, 7, KEYWORD); \/\/ package","120","    addHighlighting(syntaxHighlightingList, 2, 0, 4, 6, CPP_DOC); \/\/ comment over 3 lines","121","    addHighlighting(syntaxHighlightingList, 5, 0, 5, 6, KEYWORD); \/\/ public","122","    addHighlighting(syntaxHighlightingList, 5, 7, 5, 12, KEYWORD); \/\/ class","123","    HighlightingLineReader highlightingLineReader = new HighlightingLineReader(FILE, syntaxHighlightingList.iterator(), new RangeOffsetConverter());","124","","125","    DbFileSources.Line.Builder[] builders = new DbFileSources.Line.Builder[] {","126","      addSourceLine(highlightingLineReader, 1, \"package example;\"),","127","      addSourceLine(highlightingLineReader, 2, \"\/*\"),","128","      addSourceLine(highlightingLineReader, 3, \"\"),","129","      addSourceLine(highlightingLineReader, 4, \" foo*\/\"),","130","      addSourceLine(highlightingLineReader, 5, \"public class One {\"),","131","      addSourceLine(highlightingLineReader, 6, \"}\")","132","    };","133","","134","    assertThat(builders)","135","      .extracting(\"highlighting\")","136","      .containsExactly(","137","        \"0,7,k\",","138","        \"0,2,cppd\",","139","        \"\",","140","        \"0,6,cppd\",","141","        \"0,6,k;7,12,k\",","142","        \"\");","143","  }","144","","145","  private DbFileSources.Line.Builder addSourceLine(HighlightingLineReader highlightingLineReader, int line, String source) {","146","    DbFileSources.Line.Builder lineBuilder = sourceData.addLinesBuilder().setSource(source).setLine(line);","147","    highlightingLineReader.read(lineBuilder);","148","    return lineBuilder;","149","  }","150","","151","  private void addHighlighting(List<ScannerReport.SyntaxHighlightingRule> syntaxHighlightingList,","152","    int startLine, int startOffset,","153","    int endLine, int endOffset,","154","    HighlightingType type) {","155","    TextRange.Builder textRangeBuilder = TextRange.newBuilder();","156","    ScannerReport.SyntaxHighlightingRule.Builder ruleBuilder = ScannerReport.SyntaxHighlightingRule.newBuilder();","157","    syntaxHighlightingList.add(ruleBuilder","158","      .setRange(textRangeBuilder","159","        .setStartLine(startLine).setEndLine(endLine)","160","        .setStartOffset(startOffset).setEndOffset(endOffset)","161","        .build())","162","      .setType(type)","163","      .build());","164","  }","165","","166","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/source\/RangeOffsetConverter.java":[{"add":["38","    StringBuilder element = new StringBuilder();"],"delete":["31","    StringBuilder element = new StringBuilder();","32",""]}]}},"91720513ee12439d09703cc8837c3f5d40668ef1":{"changes":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectReactorBuilder.java":"MODIFY"},"diff":{"sonar-batch\/src\/main\/java\/org\/sonar\/batch\/scan\/ProjectReactorBuilder.java":[{"add":["25","import java.nio.file.Path;","26","import java.nio.file.Paths;","405","    Path filePath = Paths.get(path);","406","    if (!filePath.isAbsolute()) {","407","      filePath = baseDir.toPath().resolve(path);","409","    return filePath.normalize().toFile();"],"delete":["25","import java.io.IOException;","401","","405","    File file = new File(path);","406","    if (!file.isAbsolute()) {","407","      try {","408","        file = new File(baseDir, path).getCanonicalFile();","409","      } catch (IOException e) {","410","        throw new IllegalStateException(\"Unable to resolve path \\\"\" + path + \"\\\"\", e);","411","      }","413","    return file;"]}]}},"0f580cd4d12411346be5c5de801207c847457099":{"changes":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStep.java":"MODIFY","server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":"MODIFY"},"diff":{"server\/sonar-ce-task-projectanalysis\/src\/main\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStep.java":[{"add":["102","    if (analysisMetadataHolder.isFirstAnalysis() || !analysisMetadataHolder.isLongLivingBranch()) {"],"delete":["102","    if (analysisMetadataHolder.isFirstAnalysis()) {"]}],"server\/sonar-ce-task-projectanalysis\/src\/test\/java\/org\/sonar\/ce\/task\/projectanalysis\/step\/LoadPeriodsStepTest.java":[{"add":["114","    when(analysisMetadataHolder.isLongLivingBranch()).thenReturn(true);","848","  @Test","849","  @UseDataProvider(\"anyValidLeakPeriodSettingValue\")","850","  public void leak_period_setting_is_ignored_for_SLB_or_PR(String leakPeriodSettingValue) {","851","    when(analysisMetadataHolder.isLongLivingBranch()).thenReturn(false);","852","","853","    settings.setProperty(\"sonar.leak.period\", leakPeriodSettingValue);","854","    underTest.execute(new TestComputationStepContext());","855","","856","    assertThat(periodsHolder.hasPeriod()).isFalse();","857","  }","858",""],"delete":[]}]}},"80cd084762f29bce14dad599f441610c6f4fc514":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/Issue.css":[{"add":["125","  display: flex;","133","  flex-shrink: 0;","144","  flex-shrink: 0;","151","  flex: 1;","152","  min-width: 0;","153","  margin-left: 5px;","154","  margin-right: 5px;","157","  overflow: hidden;","163","  flex-shrink: 0;"],"delete":["125","  display: table;","126","  width: 100%;","134","  display: table-cell;","135","  vertical-align: top;","137","  width: 1px;","147","  display: table-cell;","148","  vertical-align: top;","149","  width: 1px;","156","  display: table-cell;","157","  vertical-align: top;","158","  padding-left: 5px;","159","  padding-right: 5px;","167","  display: table-cell;","168","  vertical-align: top;","169","  width: 1px;"]}]}},"92a5bd4f512a7d9db533d04b051b92c3a3bec6c7":{"changes":{"\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/users\/templates\/users-list.hbs":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/users\/templates\/users-list.hbs":[{"add":["3","      <th>&nbsp;<\/th>"],"delete":["3","      {{#ifShowAvatars}}","4","        <th>&nbsp;<\/th>","5","      {{\/ifShowAvatars}}"]}]}},"3ee8ec8dec07179ea5eb72cf7e3a5cc584f5734c":{"changes":{"\/dev\/null":"DELETE","tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/AuthorizationSuite.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/ProjectPermissionsTest.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/AuthorizationSuite.java":[{"add":["36","  ProjectPermissionsTest.class,"],"delete":["36",""]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModule.java":[{"add":["41","      SearchMembersAction.class,","42","      \/\/ Update of project visibility is used on on-premise instances, not only on SonarCloud \/ Organizations","43","      UpdateProjectVisibilityAction.class);","51","        UpdateAction.class);"],"delete":["41","      SearchMembersAction.class);","49","        UpdateAction.class,","50","        UpdateProjectVisibilityAction.class);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/authorization\/ProjectPermissionsTest.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/OrganizationsWsModuleTest.java":[{"add":["41","      .hasSize(COMPONENTS_IN_EMPTY_COMPONENT_CONTAINER + 5);"],"delete":["41","      .hasSize(COMPONENTS_IN_EMPTY_COMPONENT_CONTAINER + 4);"]}]}},"61686cb47293d5d6f5da78593676de662ac94e55":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/update-center\/templates\/update-center-plugin.hbs":"MODIFY","server\/sonar-web\/src\/main\/less\/init\/type.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/update-center\/templates\/update-center-plugin.hbs":[{"add":["75","          <li class=\"little-spacer-bottom text-limited\" title=\"{{license}}\">","76","            Licensed under","77","            <span class=\"js-plugin-license\">{{license}}<\/span>","78","          <\/li>"],"delete":["75","          <li class=\"little-spacer-bottom\">Licensed under <span class=\"js-plugin-license\">{{license}}<\/span><\/li>"]}],"server\/sonar-web\/src\/main\/less\/init\/type.less":[{"add":["118",".text-limited {","119","  display: inline-block;","120","  max-width: 16vw;","121","  .text-ellipsis;","122","}","123",""],"delete":[]}]}},"35d4defcf214eec9f04f00860538199f82f997c1":{"changes":{"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchResult-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/app\/components\/search\/__tests__\/__snapshots__\/SearchResult-test.tsx.snap":[{"add":["28","        className=\"navbar-search-item-link\"","29","        onMouseEnter={[Function]}","31","        <span","32","          className=\"navbar-search-item-icons little-spacer-right\"","33","        >","34","          <FavoriteIcon","35","            favorite={true}","36","            size={12}","37","          \/>","38","          <QualifierIcon","39","            className=\"little-spacer-right\"","40","            qualifier=\"TRK\"","41","          \/>","42","        <\/span>","43","        <span","44","          className=\"navbar-search-item-match\"","45","        >","46","          foo","47","        <\/span>","80","        className=\"navbar-search-item-link\"","81","        onMouseEnter={[Function]}","83","        <span","84","          className=\"navbar-search-item-icons little-spacer-right\"","85","        >","86","          <QualifierIcon","87","            className=\"little-spacer-right\"","88","            qualifier=\"TRK\"","89","          \/>","90","        <\/span>","91","        <span","92","          className=\"navbar-search-item-match\"","93","          dangerouslySetInnerHTML={","94","            Object {","95","              \"__html\": \"f<mark>o<\/mark>o\",","96","            }","97","          }","131","        className=\"navbar-search-item-link\"","132","        onMouseEnter={[Function]}","134","        <span","135","          className=\"navbar-search-item-icons little-spacer-right\"","136","        >","137","          <ClockIcon","138","            size={12}","139","          \/>","140","          <QualifierIcon","141","            className=\"little-spacer-right\"","142","            qualifier=\"TRK\"","143","          \/>","144","        <\/span>","145","        <span","146","          className=\"navbar-search-item-match\"","147","        >","148","          foo","149","        <\/span>","150","        <div","151","          className=\"navbar-search-item-right text-muted-2\"","152","        >","153","          bar","154","        <\/div>","187","        className=\"navbar-search-item-link\"","188","        onMouseEnter={[Function]}","190","        <span","191","          className=\"navbar-search-item-icons little-spacer-right\"","192","        >","193","          <ClockIcon","194","            size={12}","195","          \/>","196","          <QualifierIcon","197","            className=\"little-spacer-right\"","198","            qualifier=\"TRK\"","199","          \/>","200","        <\/span>","201","        <span","202","          className=\"navbar-search-item-match\"","203","        >","204","          foo","205","        <\/span>","238","        className=\"navbar-search-item-link\"","239","        onMouseEnter={[Function]}","241","        <span","242","          className=\"navbar-search-item-icons little-spacer-right\"","243","        >","244","          <ClockIcon","245","            size={12}","246","          \/>","247","          <QualifierIcon","248","            className=\"little-spacer-right\"","249","            qualifier=\"BRC\"","250","          \/>","251","        <\/span>","252","        <span","253","          className=\"navbar-search-item-match\"","254","        >","255","          qwe","256","        <\/span>","257","        <div","258","          className=\"navbar-search-item-right text-muted-2\"","259","        >","260","          foo","261","        <\/div>","294","        className=\"navbar-search-item-link\"","295","        onMouseEnter={[Function]}","297","        <span","298","          className=\"navbar-search-item-icons little-spacer-right\"","299","        >","300","          <ClockIcon","301","            size={12}","302","          \/>","303","          <QualifierIcon","304","            className=\"little-spacer-right\"","305","            qualifier=\"TRK\"","306","          \/>","307","        <\/span>","308","        <span","309","          className=\"navbar-search-item-match\"","310","        >","311","          foo","312","        <\/span>","345","        className=\"navbar-search-item-link\"","346","        onMouseEnter={[Function]}","348","        <span","349","          className=\"navbar-search-item-icons little-spacer-right\"","350","        >","351","          <QualifierIcon","352","            className=\"little-spacer-right\"","353","            qualifier=\"TRK\"","354","          \/>","355","        <\/span>","356","        <span","357","          className=\"navbar-search-item-match\"","358","        >","359","          foo","360","        <\/span>","394","        className=\"navbar-search-item-link\"","395","        onMouseEnter={[Function]}","397","        <span","398","          className=\"navbar-search-item-icons little-spacer-right\"","399","        >","400","          <QualifierIcon","401","            className=\"little-spacer-right\"","402","            qualifier=\"TRK\"","403","          \/>","404","        <\/span>","405","        <span","406","          className=\"navbar-search-item-match\"","407","        >","408","          foo","409","        <\/span>"],"delete":["13","      className=\"navbar-search-item-link\"","16","      onMouseEnter={[Function]}","30","        className=\"navbar-search-item-icons little-spacer-right\"","32","        <FavoriteIcon","33","          favorite={true}","34","          size={12}","35","        \/>","36","        <QualifierIcon","37","          className=\"little-spacer-right\"","38","          qualifier=\"TRK\"","39","        \/>","40","      <\/span>","41","      <span","42","        className=\"navbar-search-item-match\"","43","      >","44","        foo","62","      className=\"navbar-search-item-link\"","65","      onMouseEnter={[Function]}","79","        className=\"navbar-search-item-icons little-spacer-right\"","81","        <QualifierIcon","82","          className=\"little-spacer-right\"","83","          qualifier=\"TRK\"","86","      <span","87","        className=\"navbar-search-item-match\"","88","        dangerouslySetInnerHTML={","89","          Object {","90","            \"__html\": \"f<mark>o<\/mark>o\",","91","          }","92","        }","93","      \/>","110","      className=\"navbar-search-item-link\"","113","      onMouseEnter={[Function]}","127","        className=\"navbar-search-item-icons little-spacer-right\"","129","        <ClockIcon","130","          size={12}","131","        \/>","132","        <QualifierIcon","133","          className=\"little-spacer-right\"","134","          qualifier=\"TRK\"","135","        \/>","137","      <span","138","        className=\"navbar-search-item-match\"","139","      >","140","        foo","141","      <\/span>","142","      <div","143","        className=\"navbar-search-item-right text-muted-2\"","144","      >","145","        bar","146","      <\/div>","163","      className=\"navbar-search-item-link\"","166","      onMouseEnter={[Function]}","180","        className=\"navbar-search-item-icons little-spacer-right\"","182","        <ClockIcon","183","          size={12}","184","        \/>","185","        <QualifierIcon","186","          className=\"little-spacer-right\"","187","          qualifier=\"TRK\"","188","        \/>","189","      <\/span>","190","      <span","191","        className=\"navbar-search-item-match\"","192","      >","193","        foo","211","      className=\"navbar-search-item-link\"","214","      onMouseEnter={[Function]}","228","        className=\"navbar-search-item-icons little-spacer-right\"","230","        <ClockIcon","231","          size={12}","232","        \/>","233","        <QualifierIcon","234","          className=\"little-spacer-right\"","235","          qualifier=\"BRC\"","236","        \/>","238","      <span","239","        className=\"navbar-search-item-match\"","240","      >","241","        qwe","242","      <\/span>","243","      <div","244","        className=\"navbar-search-item-right text-muted-2\"","245","      >","246","        foo","247","      <\/div>","264","      className=\"navbar-search-item-link\"","267","      onMouseEnter={[Function]}","281","        className=\"navbar-search-item-icons little-spacer-right\"","283","        <ClockIcon","284","          size={12}","285","        \/>","286","        <QualifierIcon","287","          className=\"little-spacer-right\"","288","          qualifier=\"TRK\"","289","        \/>","290","      <\/span>","291","      <span","292","        className=\"navbar-search-item-match\"","293","      >","294","        foo","312","      className=\"navbar-search-item-link\"","315","      onMouseEnter={[Function]}","329","        className=\"navbar-search-item-icons little-spacer-right\"","331","        <QualifierIcon","332","          className=\"little-spacer-right\"","333","          qualifier=\"TRK\"","334","        \/>","335","      <\/span>","336","      <span","337","        className=\"navbar-search-item-match\"","338","      >","339","        foo","358","      className=\"navbar-search-item-link\"","361","      onMouseEnter={[Function]}","375","        className=\"navbar-search-item-icons little-spacer-right\"","377","        <QualifierIcon","378","          className=\"little-spacer-right\"","379","          qualifier=\"TRK\"","380","        \/>","381","      <\/span>","382","      <span","383","        className=\"navbar-search-item-match\"","384","      >","385","        foo"]}],"server\/sonar-web\/src\/main\/js\/app\/components\/search\/SearchResult.tsx":[{"add":["127","            <span className=\"navbar-search-item-link\" onMouseEnter={this.handleMouseEnter}>","128","              <span className=\"navbar-search-item-icons little-spacer-right\">","129","                {component.isFavorite && <FavoriteIcon favorite={true} size={12} \/>}","130","                {!component.isFavorite && component.isRecentlyBrowsed && <ClockIcon size={12} \/>}","131","                <QualifierIcon className=\"little-spacer-right\" qualifier={component.qualifier} \/>","132","              <\/span>","133","","134","              {component.match ? (","135","                <span","136","                  className=\"navbar-search-item-match\"","137","                  dangerouslySetInnerHTML={{ __html: component.match }}","138","                \/>","139","              ) : (","140","                <span className=\"navbar-search-item-match\">{component.name}<\/span>","141","              )}","142","","143","              {this.renderOrganization(component)}","144","              {this.renderProject(component)}"],"delete":["124","            className=\"navbar-search-item-link\"","127","            onMouseEnter={this.handleMouseEnter}","129","            <span className=\"navbar-search-item-icons little-spacer-right\">","130","              {component.isFavorite && <FavoriteIcon favorite={true} size={12} \/>}","131","              {!component.isFavorite && component.isRecentlyBrowsed && <ClockIcon size={12} \/>}","132","              <QualifierIcon className=\"little-spacer-right\" qualifier={component.qualifier} \/>","134","","135","            {component.match ? (","136","              <span","137","                className=\"navbar-search-item-match\"","138","                dangerouslySetInnerHTML={{ __html: component.match }}","139","              \/>","140","            ) : (","141","              <span className=\"navbar-search-item-match\">{component.name}<\/span>","142","            )}","143","","144","            {this.renderOrganization(component)}","145","            {this.renderProject(component)}"]}]}},"818a1ed6d1a180adc065b7aac6214255c4e7576b":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":[{"add":["97","    assertThat(psParam.defaultValue()).isEqualTo(\"100\");","118","    String response = executeJsonRequest(null, 25);","226","    assertThat(response.getPaging()).extracting(Paging::getPageIndex, Paging::getPageSize, Paging::getTotal).containsOnly(1, 100, 5);"],"delete":["97","    assertThat(psParam.defaultValue()).isEqualTo(\"25\");","118","    String response = executeJsonRequest(null, null);","226","    assertThat(response.getPaging()).extracting(Paging::getPageIndex, Paging::getPageSize, Paging::getTotal).containsOnly(1, 25, 5);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":[{"add":["69","    action.addPagingParams(100);"],"delete":["69","    action.addPagingParams(25);"]}]}},"c26ae42214c23da0ced318d2a8bb9ce6589c72ff":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/Form-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/Form.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/__tests__\/Form-test.tsx":[{"add":["59","","60","it('should create new domain', () => {","61","  const wrapper = shallow(","62","    <Form","63","      confirmButtonText=\"confirmButtonText\"","64","      domains={['Coverage', 'Issues']}","65","      header=\"header\"","66","      onClose={jest.fn()}","67","      onSubmit={jest.fn()}","68","      types={['INT', 'STRING']}","69","    \/>","70","  );","71","","72","  const optionsBefore = [","73","    { label: 'Coverage', value: 'Coverage' },","74","    { label: 'Issues', value: 'Issues' }","75","  ];","76","  expect(getSelect().prop('options')).toEqual(optionsBefore);","77","","78","  getSelect().prop<Function>('onChange')({ value: 'Another' });","79","  wrapper.update();","80","","81","  expect(getSelect().prop('options')).toEqual([","82","    ...optionsBefore,","83","    { label: 'Another', value: 'Another' }","84","  ]);","85","","86","  function getSelect() {","87","    return wrapper.dive().find('Creatable');","88","  }","89","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/custom-metrics\/components\/Form.tsx":[{"add":["92","    const domains = [...this.props.domains];","93","    if (this.state.domain) {","94","      domains.push(this.state.domain);","95","    }","96","","153","                  options={domains.map(domain => ({ label: domain, value: domain }))}"],"delete":["148","                  options={this.props.domains.map(domain => ({ label: domain, value: domain }))}"]}]}},"0359411125578632c70ccf458625d0163c2b8b16":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/code\/actions\/index.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/code\/actions\/index.js":[{"add":["131","function requestChildren (componentKey, metrics, page) {","132","  return getChildren(componentKey, metrics, { p: page, ps: PAGE_SIZE }).then(r => {","133","    if (r.paging.total > r.paging.pageSize * r.paging.pageIndex) {","134","      return requestChildren(componentKey, metrics, page + 1).then(moreComponents => {","135","        return [...r.components, ...moreComponents];","136","      })","137","    }","138","    return r.components;","139","  });","140","}","141","","142","function requestAllChildren (componentKey, metrics) {","143","  return requestChildren(componentKey, metrics, 1);","144","}","145","","150","      return requestAllChildren(rootDir.key, metrics).then(components => {","151","        const nextChildren = _.without([...children, ...components], rootDir);","152","        const nextTotal = total + components.length - \/* root dir *\/ 1;"],"delete":["135","      return getChildren(rootDir.key, metrics).then(r => {","136","        const nextChildren = _.without([...children, ...r.components], rootDir);","137","        const nextTotal = total + r.components.length - \/* root dir *\/ 1;"]}]}},"084e85d714534f8c22355f7744ce546ae982a7d8":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/init.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/search-navigator.less":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/page.less":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/init.js":[{"add":["63","      $('#footer').addClass('page-footer-with-sidebar');","125","    $('#footer').removeClass('page-footer-with-sidebar');"],"delete":["63","      $('#footer').addClass('search-navigator-footer');","125","    $('#footer').removeClass('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/App.js":[{"add":["140","      footer.classList.add('page-footer-with-sidebar');","189","      footer.classList.remove('page-footer-with-sidebar');"],"delete":["140","      footer.classList.add('search-navigator-footer');","189","      footer.classList.remove('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/less\/components\/search-navigator.less":[{"add":[],"delete":["49",".search-navigator-footer {","50","  @padding-left: @sideWidth + 10px;","51","  padding-left: @padding-left !important;","52","}","53",""]}],"server\/sonar-web\/src\/main\/less\/components\/page.less":[{"add":["125",".page-footer-with-sidebar {","126","  padding-left: ~\"calc(50vw - 370px + 10px)\" !important;","127","","128","  div {","129","    max-width: 980px;","130","  }","131","}","132","","298","","299","  .page-footer-with-sidebar {","300","    padding-left: 300px + 10px !important;","301","  }"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/web-api\/components\/WebApiApp.tsx":[{"add":["61","      footer.classList.add('page-footer-with-sidebar');","74","      footer.classList.remove('page-footer-with-sidebar');"],"delete":["61","      footer.classList.add('search-navigator-footer');","74","      footer.classList.remove('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/js\/apps\/component-measures\/components\/App.js":[{"add":["77","      footer.classList.add('page-footer-with-sidebar');","95","      footer.classList.remove('page-footer-with-sidebar');"],"delete":["77","      footer.classList.add('search-navigator-footer');","95","      footer.classList.remove('search-navigator-footer');"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/AllProjects.js":[{"add":["61","    footer && footer.classList.add('page-footer-with-sidebar');","72","    footer && footer.classList.remove('page-footer-with-sidebar');"],"delete":["61","    footer && footer.classList.add('search-navigator-footer');","72","    footer && footer.classList.remove('search-navigator-footer');"]}]}},"417280ac3f309cc5ac019849a616c34ac042ccd4":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SuggestionsAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/SuggestionsActionTest.java":[{"add":["395","  public void should_not_return_suggestion_on_non_existing_project() {","396","    ComponentDto project = db.components().insertComponent(newPrivateProjectDto(organization));","397","","398","    componentIndexer.indexOnStartup(null);","399","    authorizationIndexerTester.allowOnlyAnyone(project);","400","","401","    db.getDbClient().componentDao().delete(db.getSession(), project.getId());","402","    db.commit();","403","","404","    SuggestionsWsResponse response = ws.newRequest()","405","      .setMethod(\"POST\")","406","      .setParam(PARAM_QUERY, project.getDbKey())","407","      .executeProtobuf(SuggestionsWsResponse.class);","408","","409","    \/\/ assert match in qualifier \"TRK\"","410","    assertThat(response.getResultsList())","411","      .filteredOn(q -> q.getItemsCount() > 0)","412","      .isEmpty();","413","  }","414","","415","  @Test"],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/component\/ws\/SuggestionsAction.java":[{"add":["338","      || (QUALIFIERS_FOR_WHICH_TO_RETURN_PROJECT.contains(result.qualifier()) && projectsByUuids.get(result.projectUuid()) == null)","339","    ) {","351","    if (QUALIFIERS_FOR_WHICH_TO_RETURN_PROJECT.contains(result.qualifier())) {"],"delete":["336","    boolean returnProject = QUALIFIERS_FOR_WHICH_TO_RETURN_PROJECT.contains(result.qualifier());","339","      || (returnProject && projectsByUuids.get(result.projectUuid()) == null)) {","351","    if (returnProject) {"]}]}},"bb6bb844e6a8ac1bb2fd9fdafa73e4005c994806":{"changes":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDao.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusAction.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityMapper.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusActionTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":"MODIFY","server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":"MODIFY"},"diff":{"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityDao.java":[{"add":["82","  public Optional<CeActivityDto> selectLastByComponentUuidAndTaskType(DbSession dbSession, String componentUuid, String taskType) {","83","    return Optional.ofNullable(mapper(dbSession).selectLastByComponentUuidAndTaskType(componentUuid, taskType));"],"delete":["82","  public Optional<CeActivityDto> selectLastByComponentUuid(DbSession dbSession, String componentUuid) {","83","    return Optional.ofNullable(mapper(dbSession).selectLastByComponentUuid(componentUuid));","84","  }","85","","86","  public Optional<CeActivityDto> selectLastByMainComponentUuid(DbSession dbSession, String mainComponentUuid) {","87","    return Optional.ofNullable(mapper(dbSession).selectLastByMainComponentUuid(mainComponentUuid));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusAction.java":[{"add":["34","import org.sonar.db.ce.CeTaskTypes;","104","      CeActivityDto lastActivity = dbClient.ceActivityDao()","105","        .selectLastByComponentUuidAndTaskType(dbSession, component.uuid(), CeTaskTypes.REPORT).orElse(null);"],"delete":["103","      CeActivityDto lastActivity = dbClient.ceActivityDao().selectLastByComponentUuid(dbSession, component.uuid()).orElse(null);"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/ce\/CeActivityMapper.java":[{"add":["47","  CeActivityDto selectLastByComponentUuidAndTaskType(@Param(\"componentUuid\") String componentUuid, @Param(\"taskType\") String taskType);"],"delete":["47","  CeActivityDto selectLastByComponentUuid(@Param(\"componentUuid\") String componentUuid);","48","","49","  @CheckForNull","50","  CeActivityDto selectLastByMainComponentUuid(@Param(\"mainComponentUuid\") String mainComponentUuid);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/AnalysisStatusActionTest.java":[{"add":["51","import static org.sonar.db.ce.CeTaskTypes.REPORT;","166","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis, REPORT);","176","    insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis2, REPORT);","177","    insertActivity(\"task-uuid\" + counter++, project, SUCCESS, null, \"PROJECT_EXPORT\");","193","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis, REPORT);","204","    insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis2, REPORT);","205","    insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, null, \"PROJECT_EXPORT\");","225","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis, REPORT);","236","    insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis2, REPORT);","237","    insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, null, \"PROJECT_EXPORT\");","253","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis, REPORT);","258","    CeActivityDto branchActivity = insertActivity(\"task-uuid\" + counter++, branchWithWarning, SUCCESS, branchAnalysis, REPORT);","263","    insertActivity(\"task-uuid\" + counter++, branchWithoutWarning, SUCCESS, branchWithoutWarningAnalysis, REPORT);","270","    CeActivityDto prActivity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, prAnalysis, REPORT);","346","  private CeActivityDto insertActivity(String taskUuid, ComponentDto component, CeActivityDto.Status status,","347","    @Nullable SnapshotDto analysis, String taskType) {","349","    queueDto.setTaskType(taskType);","357","    activityDto.setTaskType(taskType);","358","    activityDto.setComponentUuid(component.uuid());"],"delete":["37","import org.sonar.db.ce.CeTaskTypes;","166","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis);","176","    insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis2);","192","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis);","203","    insertActivity(\"task-uuid\" + counter++, branch, SUCCESS, analysis2);","223","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis);","234","    insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, analysis2);","250","    CeActivityDto activity = insertActivity(\"task-uuid\" + counter++, project, SUCCESS, analysis);","255","    CeActivityDto branchActivity = insertActivity(\"task-uuid\" + counter++, branchWithWarning, SUCCESS, branchAnalysis);","260","    insertActivity(\"task-uuid\" + counter++, branchWithoutWarning, SUCCESS, branchWithoutWarningAnalysis);","267","    CeActivityDto prActivity = insertActivity(\"task-uuid\" + counter++, pullRequest, SUCCESS, prAnalysis);","343","  private CeActivityDto insertActivity(String taskUuid, ComponentDto component, CeActivityDto.Status status, @Nullable SnapshotDto analysis) {","345","    queueDto.setTaskType(CeTaskTypes.REPORT);"]}],"server\/sonar-db-dao\/src\/main\/resources\/org\/sonar\/db\/ce\/CeActivityMapper.xml":[{"add":["235","  <select id=\"selectLastByComponentUuidAndTaskType\" parameterType=\"map\" resultType=\"org.sonar.db.ce.CeActivityDto\">","243","      and ca.task_type = #{taskType,jdbcType=VARCHAR}"],"delete":["235","  <select id=\"selectLastByComponentUuid\" parameterType=\"map\" resultType=\"org.sonar.db.ce.CeActivityDto\">","246","  <select id=\"selectLastByMainComponentUuid\" parameterType=\"map\" resultType=\"org.sonar.db.ce.CeActivityDto\">","247","    select","248","      <include refid=\"columns\"\/>","249","    from ce_activity ca","250","    left outer join ce_scanner_context csc on","251","      ca.uuid = csc.task_uuid","252","    where","253","      ca.main_component_uuid = #{mainComponentUuid,jdbcType=VARCHAR}","254","      and ca.main_is_last = ${_true}","255","  <\/select>","256",""]}],"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/ce\/CeActivityDaoTest.java":[{"add":["673","  @Test","674","  public void selectLastByComponentUuidAndTaskType_returns_task_of_given_type() {","675","    insert(\"TASK_1\", \"VIEW_REFRESH\", MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","676","    insert(\"TASK_2\", CeTaskTypes.REPORT, MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","677","    insert(\"TASK_3\", \"PROJECT_EXPORT\", MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","678","    insert(\"TASK_4\", \"PROJECT_IMPORT\", MAINCOMPONENT_1, MAINCOMPONENT_1, SUCCESS);","679","    db.commit();","680","","681","    Optional<CeActivityDto> result = underTest.selectLastByComponentUuidAndTaskType(db.getSession(), MAINCOMPONENT_1, \"PROJECT_EXPORT\");","682","","683","    assertThat(result).hasValueSatisfying(value -> assertThat(value.getUuid()).isEqualTo(\"TASK_3\"));","684","  }","685","","686","  @Test","687","  public void selectLastByComponentUuidAndTaskType_returns_empty_if_task_of_given_type_does_not_exist() {","688","    insert(\"TASK_1\", CeTaskTypes.REPORT, MAINCOMPONENT_1, SUCCESS);","689","    db.commit();","690","","691","    Optional<CeActivityDto> result = underTest.selectLastByComponentUuidAndTaskType(db.getSession(), MAINCOMPONENT_1, \"PROJECT_EXPORT\");","692","","693","    assertThat(result).isEmpty();","694","  }","695",""],"delete":[]}]}},"3e9c3f32a1cddd69533815255e0b66f9325a4352":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/JwtHttpHandlerTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/authentication\/JwtHttpHandlerTest.java":[{"add":["36","import org.sonar.api.config.Settings;","155","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got 0\");","165","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got -10\");","175","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must not be greater than 3 months (129600 minutes). Got 172800 minutes\");"],"delete":["35","import org.sonar.api.config.Settings;","155","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got 0.\");","165","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must be strictly positive. Got -10.\");","175","    expectedException.expectMessage(\"Property sonar.web.sessionTimeoutInMinutes must not be greater than 129600. Got 172800.\");"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/authentication\/JwtHttpHandler.java":[{"add":["182","      checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s\", SESSION_TIMEOUT_IN_MINUTES_PROPERTY, minutes);","186","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES, \"Property %s must not be greater than 3 months (%s minutes). Got %s minutes\","],"delete":["182","      checkArgument(minutes > 0, \"Property %s must be strictly positive. Got %s.\", SESSION_TIMEOUT_IN_MINUTES_PROPERTY, minutes);","186","    checkArgument(minutes <= MAX_SESSION_TIMEOUT_IN_MINUTES, \"Property %s must not be greater than %s. Got %s.\","]}]}},"a5095b9e5a19e470f345d96fda4d915b64ab8d35":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/DetailsContent.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/quality-gates\/components\/DetailsContent.tsx":[{"add":["68","              \/\/ pass unique key to re-mount the component when the quality gate changes","69","              key={qualityGate.id}"],"delete":[]}]}},"b09c52cd3808a9726ec9bd9d510a59dcb1fcea54":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/roles_controller.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/app\/controllers\/roles_controller.rb":[{"add":["24","  before_filter :admin_required"],"delete":[]}]}},"d8e27d0f4c166e5baea63c06d4bd2e19f5ceca70":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/source-viewer\/templates\/source-viewer.hbs":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/main.js":[{"add":["73","      'mouseleave .source-line-filtered .source-line-filtered-container': 'hideFilteredTooltip',","74","      'click @ui.sourceBeforeSpinner': 'loadSourceBefore',","75","      'click @ui.sourceAfterSpinner': 'loadSourceAfter'","547","    \/\/ no op","551","    \/\/ no op","555","    \/\/ no op","602","  loadSourceBefore (e) {","603","    e.preventDefault();","605","    this.$('.js-component-viewer-loading-before').removeClass('hidden');","606","    this.$('.js-component-viewer-source-before').addClass('hidden');","651","  loadSourceAfter (e) {","652","    e.preventDefault();","654","    this.$('.js-component-viewer-loading-after').removeClass('hidden');","655","    this.$('.js-component-viewer-source-after').addClass('hidden');"],"delete":["73","      'mouseleave .source-line-filtered .source-line-filtered-container': 'hideFilteredTooltip'","85","    this.loadSourceBeforeThrottled = _.throttle(this.loadSourceBefore, 1000);","86","    this.loadSourceAfterThrottled = _.throttle(this.loadSourceAfter, 1000);","547","    const that = this;","548","    let p = this.$el.scrollParent();","549","    if (p.is(document) || p.is('body')) {","550","      p = $(window);","551","    }","552","    p.on('scroll.source-viewer', function () {","553","      that.onScroll();","554","    });","558","    let p = this.$el.scrollParent();","559","    if (p.is(document) || p.is('body')) {","560","      p = $(window);","561","    }","562","    p.off('scroll.source-viewer');","566","    let p = this.$el.scrollParent();","567","    if (p.is(document) || p.is('body')) {","568","      p = $(window);","569","    }","570","    const pTopOffset = p.offset() != null ? p.offset().top : 0;","571","    const pPosition = p.scrollTop() + pTopOffset;","572","    if (this.model.get('hasSourceBefore') && (pPosition <= this.ui.sourceBeforeSpinner.offset().top)) {","573","      this.loadSourceBeforeThrottled();","574","    }","575","    if (this.model.get('hasSourceAfter') && (pPosition + p.height() >= this.ui.sourceAfterSpinner.offset().top)) {","576","      return this.loadSourceAfterThrottled();","577","    }","624","  loadSourceBefore () {","670","  loadSourceAfter () {"]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2987","source_viewer.load_more_code=Load More Code"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/source-viewer\/templates\/source-viewer.hbs":[{"add":["8","        <button class=\"js-component-viewer-source-before\">","9","          {{t 'source_viewer.load_more_code'}}","10","        <\/button>","11","        <div class=\"js-component-viewer-loading-before hidden\">","12","          <i class=\"spinner\"><\/i>","13","          <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>","14","        <\/div>","97","        <button class=\"js-component-viewer-source-after\">","98","          {{t 'source_viewer.load_more_code'}}","99","        <\/button>","100","        <div class=\"js-component-viewer-loading-after hidden\">","101","          <i class=\"spinner\"><\/i>","102","          <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>","103","        <\/div>"],"delete":["8","        <i class=\"spinner js-component-viewer-source-before\"><\/i>","9","        <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>","92","        <i class=\"spinner js-component-viewer-source-after\"><\/i>","93","        <span class=\"note spacer-left\">{{t 'source_viewer.loading_more_code'}}<\/span>"]}]}},"90e2bc7b5149d2d64a1987a11cf50dfce1b8457d":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndexer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleIndexer.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleDoc.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleDoc.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleExtensionDoc.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleIndexer.java":[{"add":["125","    return new IndexRequest(INDEX_TYPE_RULE.getIndex(), INDEX_TYPE_RULE.getType())","126","      .id(rule.getId())","127","      .routing(rule.getRouting())","128","      .source(rule.getFields());","132","    return new IndexRequest(INDEX_TYPE_RULE_EXTENSION.getIndex(), INDEX_TYPE_RULE_EXTENSION.getType())","133","      .id(ruleExtension.getId())","134","      .routing(ruleExtension.getRouting())"],"delete":["125","    return new IndexRequest(INDEX_TYPE_RULE.getIndex(), INDEX_TYPE_RULE.getType(), rule.key().toString()).source(rule.getFields());","129","    return new IndexRequest(INDEX_TYPE_RULE_EXTENSION.getIndex(), INDEX_TYPE_RULE_EXTENSION.getType(), ruleExtension.getId())"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleIndexer.java":[{"add":["90","          bulk.addDeletion(INDEX_TYPE_ACTIVE_RULE, String.valueOf(c.getActiveRule().getId()), c.getKey().getRuleKey().toString());","131","    return new IndexRequest(INDEX_TYPE_ACTIVE_RULE.getIndex(), INDEX_TYPE_ACTIVE_RULE.getType())","132","      .id(doc.getId())","133","      .routing(doc.getRouting())"],"delete":["90","          bulk.addDeletion(INDEX_TYPE_ACTIVE_RULE, String.valueOf(c.getActiveRule().getId()));","131","    return new IndexRequest(INDEX_TYPE_ACTIVE_RULE.getIndex(), INDEX_TYPE_ACTIVE_RULE.getType(), doc.getId())"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleDoc.java":[{"add":["51","    return keyAsString();","60","    return RuleKey.parse(keyAsString());","61","  }","62","","63","  private String keyAsString() {","64","    return getField(RuleIndexDefinition.FIELD_RULE_KEY);"],"delete":["51","    return null;","60","    return RuleKey.parse(this.getField(RuleIndexDefinition.FIELD_RULE_KEY));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/index\/ActiveRuleDoc.java":[{"add":["53","    return getRuleKeyAsString();","62","    return RuleKey.parse(getRuleKeyAsString());","63","  }","64","","65","  private String getRuleKeyAsString() {","66","    return getField(FIELD_ACTIVE_RULE_RULE_KEY);"],"delete":["53","    return null;","62","    return RuleKey.parse(getField(FIELD_ACTIVE_RULE_RULE_KEY));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/rule\/index\/RuleExtensionDoc.java":[{"add":["46","    return getRuleKey().toString();"],"delete":["46","    return null;"]}]}},"88883041bd25b9772873612bd3a84cbbcde0a2c6":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/bulk-change-modal-view.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/bulk-change-modal-view.js":[{"add":["68","    const url = `\/api\/qualityprofiles\/${this.options.action}_rules`;"],"delete":["68","    const url = `${window.baseUrl}\/api\/qualityprofiles\/${this.options.action}_rules`;"]}]}},"a1b9bc1ced0bb2dd67e60583254f836cb477ed42":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/__snapshots__\/Measure-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/Rating.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/Rating-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardOverall-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/__snapshots__\/Rating-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/app\/styles\/boxed-group.css":"MODIFY","\/dev\/null":"DELETE","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardLeak-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/Measure-test.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/measure\/Measure.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":[{"add":["28","  measures: { [key: string]: string };"],"delete":["28","  measures?: { [key: string]: string };","32","  if (measures == undefined) {","33","    return null;","34","  }","35",""]}],"server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/__snapshots__\/Measure-test.tsx.snap":[{"add":["33","exports[`renders undefined measure 1`] = `","34","<span>","35","  \u2013","36","<\/span>","37","`;","38",""],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/Rating.tsx":[{"add":["28","  value: string | number | undefined;","32","  if (value == undefined) {","33","    return <span>{'\u2013'}<\/span>;","34","  }"],"delete":["28","  value: string | number;"]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/Rating-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardOverall-test.tsx":[{"add":[],"delete":["53","it('should display loading', () => {","54","  expect(","55","    shallow(<ProjectCardOverall project={{ ...PROJECT, measures: {} }} \/>)","56","      .find('.boxed-group')","57","      .hasClass('boxed-group-loading')","58","  ).toBeTruthy();","59","  expect(","60","    shallow(<ProjectCardOverall project={{ ...PROJECT, measures: { sqale_rating: '1.0' } }} \/>)","61","      .find('.boxed-group')","62","      .hasClass('boxed-group-loading')","63","  ).toBeTruthy();","64","});","65",""]}],"server\/sonar-web\/src\/main\/js\/components\/ui\/__tests__\/__snapshots__\/Rating-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/app\/styles\/boxed-group.css":[{"add":[],"delete":["61","","62",".boxed-group-loading {","63","  position: relative;","64","  transition: border-color 0.25s;","65","}","66","","67",".boxed-group-loading:before,","68",".boxed-group-loading:after {","69","  position: absolute;","70","  z-index: 1;","71","  border: 2px solid transparent;","72","  box-sizing: border-box;","73","  content: '';","74","}","75","","76",".boxed-group-loading:before {","77","  width: 100%;","78","  height: 100%;","79","  top: 0;","80","  left: 0;","81","  border-top-color: #4b9fd5;","82","  border-right-color: #4b9fd5;","83","  animation: 3s top-left-border 0s infinite;","84","}","85","","86",".boxed-group-loading:after {","87","  width: 0;","88","  height: 0;","89","  bottom: 0;","90","  right: 0;","91","  border-bottom-color: #4b9fd5;","92","  border-left-color: #4b9fd5;","93","  animation: 3s border-bottom-border 0s infinite;","94","}","95","","96","@keyframes top-left-border {","97","  0% {","98","    width: 0;","99","    height: 0;","100","  }","101","","102","  25% {","103","    width: 100%;","104","    height: 0;","105","  }","106","","107","  50%,","108","  100% {","109","    width: 100%;","110","    height: 100%;","111","  }","112","}","113","","114","@keyframes border-bottom-border {","115","  0%,","116","  50% {","117","    width: 0;","118","    height: 0;","119","    border-width: 0;","120","  }","121","","122","  51% {","123","    border-width: 2px;","124","  }","125","","126","  75% {","127","    width: 100%;","128","    height: 0;","129","  }","130","","131","  100% {","132","    width: 100%;","133","    height: 100%;","134","  }","135","}"]}],"\/dev\/null":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":[{"add":["44","    <div data-key={project.key} className=\"boxed-group project-card\">","57","        {project.analysisDate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","62","        {project.analysisDate &&","63","        project.leakPeriodDate && (","65","            <DateFromNow date={project.leakPeriodDate!}>","66","              {fromNow => (","67","                <span className=\"project-card-leak-date pull-right\">","68","                  {translateWithParameters('projects.leak_period_x', fromNow)}","69","                <\/span>","70","              )}","71","            <\/DateFromNow>","72","            <DateTimeFormatter date={project.analysisDate!}>","73","              {formattedDate => (","74","                <span>{translateWithParameters('projects.last_analysis_on_x', formattedDate)}<\/span>","75","              )}","76","            <\/DateTimeFormatter>","81","      {project.analysisDate && project.leakPeriodDate ? (","83","          <ProjectCardLeakMeasures measures={measures} \/>","88","            {project.analysisDate ? ("],"delete":["20","import * as classNames from 'classnames';","41","  const isProjectAnalyzed = project.analysisDate != null;","43","  const hasLeakPeriodStart = project.leakPeriodDate != undefined;","46","  \/\/ check for particular measures because only some measures can be loaded","47","  \/\/ if coming from visualizations tab","48","  const areProjectMeasuresLoaded = measures != undefined && measures['new_bugs'];","49","","50","  const displayQualityGate = areProjectMeasuresLoaded && isProjectAnalyzed;","51","  const className = classNames('boxed-group', 'project-card', {","52","    'boxed-group-loading': isProjectAnalyzed && hasLeakPeriodStart && !areProjectMeasuresLoaded","53","  });","54","","56","    <div data-key={project.key} className={className}>","69","        {displayQualityGate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","74","        {isProjectAnalyzed &&","75","        hasLeakPeriodStart && (","77","            {hasLeakPeriodStart && (","78","              <DateFromNow date={project.leakPeriodDate!}>","79","                {fromNow => (","80","                  <span className=\"project-card-leak-date pull-right\">","81","                    {translateWithParameters('projects.leak_period_x', fromNow)}","82","                  <\/span>","83","                )}","84","              <\/DateFromNow>","85","            )}","86","            {isProjectAnalyzed && (","87","              <DateTimeFormatter date={project.analysisDate!}>","88","                {formattedDate => (","89","                  <span>","90","                    {translateWithParameters('projects.last_analysis_on_x', formattedDate)}","91","                  <\/span>","92","                )}","93","              <\/DateTimeFormatter>","94","            )}","99","      {isProjectAnalyzed && hasLeakPeriodStart ? (","101","          {areProjectMeasuresLoaded && <ProjectCardLeakMeasures measures={measures} \/>}","106","            {isProjectAnalyzed ? ("]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":[{"add":["43","    <div data-key={project.key} className=\"boxed-group project-card\">","56","        {project.analysisDate && <ProjectCardQualityGate status={measures['alert_status']} \/>}","74","      {project.analysisDate ? (","76","          {<ProjectCardOverallMeasures measures={measures} \/>}"],"delete":["20","import * as classNames from 'classnames';","40","  const isProjectAnalyzed = project.analysisDate != undefined;","44","  \/\/ check for particular measures because only some measures can be loaded","45","  \/\/ if coming from visualizations tab","46","  const areProjectMeasuresLoaded =","47","    measures != undefined &&","48","    measures['reliability_rating'] != undefined &&","49","    measures['sqale_rating'] != undefined;","50","","51","  const displayQualityGate = areProjectMeasuresLoaded && isProjectAnalyzed;","52","  const className = classNames('boxed-group', 'project-card', {","53","    'boxed-group-loading': isProjectAnalyzed && !areProjectMeasuresLoaded","54","  });","55","","57","    <div data-key={project.key} className={className}>","70","        {displayQualityGate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","88","      {isProjectAnalyzed ? (","90","          {areProjectMeasuresLoaded && <ProjectCardOverallMeasures measures={measures} \/>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/ProjectCardLeak-test.tsx":[{"add":[],"delete":["54","it('should display loading', () => {","55","  const measures = { alert_status: 'OK', reliability_rating: '1.0', sqale_rating: '1.0' };","56","  expect(","57","    shallow(<ProjectCardLeak project={{ ...PROJECT, measures }} \/>)","58","      .find('.boxed-group')","59","      .hasClass('boxed-group-loading')","60","  ).toBeTruthy();","61","});","62",""]}],"server\/sonar-web\/src\/main\/js\/components\/measure\/__tests__\/Measure-test.tsx":[{"add":["65","","66","it('renders undefined measure', () => {","67","  const measure = { metric: { key: 'foo', name: 'Foo', type: 'PERCENT' } };","68","  expect(shallow(<Measure measure={measure} \/>)).toMatchSnapshot();","69","});"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/components\/measure\/Measure.tsx":[{"add":["37","    return <span>{'\u2013'}<\/span>;"],"delete":["37","    return null;"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":[{"add":["29","  measures: { [key: string]: string | undefined };"],"delete":["29","  measures?: { [key: string]: string };"]}]}},"3fcc98a73d6afb99388e39f46272909a6d6600b2":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivation.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorContext.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorMediumTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivation.java":[{"add":["85","    parameters.put(key, sanitizedValue);"],"delete":["85","    if (value == null) {","86","      parameters.remove(key);","87","    } else {","88","      parameters.put(key, sanitizedValue);","89","    }"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorContext.java":[{"add":["121","  boolean hasRequestParamValue(RuleActivation request, String key) {","122","    return request.getParameters().containsKey(key);","123","  }","124",""],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/RuleActivatorMediumTest.java":[{"add":["204","      \/\/ Max should be set to default value, min has no value it should be ignored","288","  public void update_activation_remove_parameter_value_having_default_value() {","289","    \/\/ initial activation","290","    activate(new RuleActivation(XOO_X1).setSeverity(BLOCKER).setParameter(\"max\", \"20\"), XOO_P1_KEY);","291","","292","    \/\/ update","293","    activate(new RuleActivation(XOO_X1).setParameter(\"max\", null), XOO_P1_KEY);","294","","295","    verifyHasActiveRuleInDb(ActiveRuleKey.of(XOO_P1_KEY, XOO_X1), BLOCKER, null, ImmutableMap.of(\"max\", \"10\"));","296","  }","297","","298","  @Test","299","  public void update_activation_remove_parameter_value_without_default_value() {","300","    \/\/ initial activation -> param \"min\" has a no default value","301","    activate(new RuleActivation(XOO_X1).setSeverity(BLOCKER).setParameter(\"min\", \"5\"), XOO_P1_KEY);","302","","303","    \/\/ update param \"min\" with empty value","304","    activate(new RuleActivation(XOO_X1).setParameter(\"min\", null), XOO_P1_KEY);","305","","306","    verifyHasActiveRuleInDb(ActiveRuleKey.of(XOO_P1_KEY, XOO_X1), BLOCKER, null, ImmutableMap.of(\"max\", \"10\"));","307","  }","308","","309","  @Test"],"delete":["204","      \/\/ Max should be set to default value, min has not value it should be ignored"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":[{"add":["185","        String paramValue = context.hasRequestParamValue(request, paramKey) ?","186","        \/\/ If the request contains the parameter then we're using either value from request, or parent value, or default value","187","          firstNonNull(","188","            context.requestParamValue(request, paramKey),","189","            context.parentParamValue(paramKey),","190","            context.defaultParamValue(paramKey))","191","          \/\/ If the request doesn't contain the parameter, then we're using either value in DB, or parent value, or default value","192","          : firstNonNull(","193","            context.currentParamValue(paramKey),","194","            context.parentParamValue(paramKey),","195","            context.defaultParamValue(paramKey));","196","        change.setParameter(paramKey, validateParam(ruleParamDto, paramValue));"],"delete":["185","        change.setParameter(paramKey, validateParam(ruleParamDto, firstNonNull(","186","          context.requestParamValue(request, paramKey),","187","          context.currentParamValue(paramKey),","188","          context.parentParamValue(paramKey),","189","          context.defaultParamValue(paramKey))));"]}]}},"446a27fd0bb4c449db017760dc11ec92da35cb3c":{"changes":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/PopulateDeprecatedRuleKeysRuleUuidColumn.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/PopulateActiveRulesRuleUuidColumn.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/PopulateGroupsUsersUserUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/PopulateQProfileEditUsersUserUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/PopulateActiveRuleParametersActiveRuleUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/util\/OrphanData.java":"ADD","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/organizations\/PopulateOrganizationsDefaultGroupUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/PopulateOrganizationMembersUserUuid.java":"MODIFY","server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/PopulateQProfileEditGroupsGroupUuid.java":"MODIFY"},"diff":{"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/deprecatedrulekeys\/PopulateDeprecatedRuleKeysRuleUuidColumn.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","49","    OrphanData.delete(context, \"deprecated_rule_keys\", \"rule_uuid\");"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select uuid from deprecated_rule_keys where rule_uuid is null\");","51","    massUpdate.update(\"delete from deprecated_rule_keys where uuid = ?\");","52","","53","    massUpdate.execute((row, update) -> {","54","      update.setString(1, row.getString(1));","55","      return true;","56","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/rules\/activerules\/PopulateActiveRulesRuleUuidColumn.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","49","    OrphanData.delete(context, \"active_rules\", \"rule_uuid\");"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select uuid from active_rules where rule_uuid is null\");","51","    massUpdate.update(\"delete from active_rules where uuid = ?\");","52","","53","    massUpdate.execute((row, update) -> {","54","      update.setString(1, row.getString(1));","55","      return true;","56","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/groupsusers\/PopulateGroupsUsersUserUuid.java":[{"add":["52","    remoteOrphanEntries(context);","53","  }","54","","55","  private static void remoteOrphanEntries(Context context) throws SQLException {","56","    MassUpdate massUpdate = context.prepareMassUpdate();"],"delete":["52","    massUpdate = context.prepareMassUpdate();","60",""]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/qprofileeditusers\/PopulateQProfileEditUsersUserUuid.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","52","    OrphanData.delete(context, \"qprofile_edit_users\", \"user_uuid\");"],"delete":["51","    massUpdate = context.prepareMassUpdate();","52","","53","    massUpdate.select(\"select uuid from qprofile_edit_users where user_uuid is null\");","54","    massUpdate.update(\"delete from qprofile_edit_users where uuid = ?\");","55","","56","    massUpdate.execute((row, update) -> {","57","      update.setString(1, row.getString(1));","58","      return true;","59","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/activerules\/PopulateActiveRuleParametersActiveRuleUuid.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","48","    OrphanData.delete(context, \"active_rule_parameters\", \"active_rule_uuid\");"],"delete":["47","    massUpdate = context.prepareMassUpdate();","48","","49","    massUpdate.select(\"select uuid from active_rule_parameters where active_rule_uuid is null\");","50","    massUpdate.update(\"delete from active_rule_parameters where uuid = ?\");","51","","52","    massUpdate.execute((row, update) -> {","53","      update.setString(1, row.getString(1));","54","      return true;","55","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/util\/OrphanData.java":[{"add":[],"delete":[]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/organizations\/PopulateOrganizationsDefaultGroupUuid.java":[{"add":["32","  private static void removeOrphans(Context context) throws SQLException {","33","    MassUpdate massUpdate = context.prepareMassUpdate();","34","","35","    massUpdate.select(\"select o.uuid, g.uuid from organizations o join groups g on o.default_group_id = g.id\");","36","    massUpdate.update(\"update organizations set default_group_uuid = ? where uuid = ?\");","37","","38","    massUpdate.execute((row, update) -> {","39","      update.setString(1, row.getString(2));","40","      update.setString(2, row.getString(1));","41","      return true;","42","    });","43","  }","44","","61","    removeOrphans(context);"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select o.uuid, g.uuid \" +","51","      \"from organizations o \" +","52","      \"join groups g on o.default_group_id = g.id\");","53","","54","    massUpdate.update(\"update organizations set default_group_uuid = ? where uuid = ?\");","55","","56","    massUpdate.execute((row, update) -> {","57","      update.setString(1, row.getString(2));","58","      update.setString(2, row.getString(1));","59","      return true;","60","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/users\/fk\/organizationmembers\/PopulateOrganizationMembersUserUuid.java":[{"add":["53","    MassUpdate.Handler removeOrphanHandler = (row, update) -> {","54","      update.setString(1, row.getString(1));","55","      update.setLong(2, row.getLong(2));","56","","57","      return true;","58","    };","64","    massUpdate.execute(removeOrphanHandler);"],"delete":["58","    massUpdate.execute((row, update) -> {","59","      update.setString(1, row.getString(1));","60","      update.setLong(2, row.getLong(2));","61","","62","      return true;","63","    });"]}],"server\/sonar-db-migration\/src\/main\/java\/org\/sonar\/server\/platform\/db\/migration\/version\/v84\/groups\/qprofileeditgroups\/PopulateQProfileEditGroupsGroupUuid.java":[{"add":["25","import org.sonar.server.platform.db.migration.version.v84.util.OrphanData;","49","    OrphanData.delete(context, \"qprofile_edit_groups\", \"group_uuid\");"],"delete":["48","    massUpdate = context.prepareMassUpdate();","49","","50","    massUpdate.select(\"select qeg.uuid from qprofile_edit_groups qeg where qeg.group_uuid is null\");","51","","52","    massUpdate.update(\"delete from qprofile_edit_groups where uuid = ?\");","53","","54","    massUpdate.execute((row, update) -> {","55","      update.setString(1, row.getString(1));","56","      return true;","57","    });"]}]}},"f4bf76e488ab3d48cb12295d2aad77d9cf61cfb0":{"changes":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":"MODIFY","server\/sonar-web\/package.json":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":"MODIFY","server\/sonar-web\/yarn.lock":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentPopup-test.tsx.snap":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/ChangelogPopup-test.tsx.snap":[{"add":["6","  <div","7","    className=\"menu is-container issue-changelog\"","8","  >","9","    <table","10","      className=\"spaced\"","12","      <tbody>","13","        <tr>","14","          <td","15","            className=\"thin text-left text-top nowrap\"","17","            <DateTimeFormatter","18","              date=\"2017-03-01T09:36:01+0100\"","19","            \/>","20","          <\/td>","21","          <td","22","            className=\"text-left text-top\"","23","          >","24","            created_by john.david.dalton@gmail.com","25","          <\/td>","26","        <\/tr>","27","        <tr","28","          key=\"0\"","29","        >","30","          <td","31","            className=\"thin text-left text-top nowrap\"","32","          >","33","            <DateTimeFormatter","34","              date=\"2017-03-01T09:36:01+0100\"","35","            \/>","36","          <\/td>","37","          <td","38","            className=\"text-left text-top\"","39","          >","40","            <p>","41","              <Connect(Avatar)","42","                className=\"little-spacer-right\"","43","                hash=\"gravatarhash\"","44","                name=\"John Doe\"","45","                size={16}","47","              John Doe","48","            <\/p>","49","            <IssueChangelogDiff","50","              diff={","51","                Object {","52","                  \"key\": \"severity\",","53","                  \"newValue\": \"MINOR\",","54","                  \"oldValue\": \"CRITICAL\",","56","              }","57","              key=\"severity\"","58","            \/>","59","          <\/td>","60","        <\/tr>","61","      <\/tbody>","62","    <\/table>","63","  <\/div>","71","  <div","72","    className=\"menu is-container issue-changelog\"","73","  >","74","    <table","75","      className=\"spaced\"","77","      <tbody>","78","        <tr>","79","          <td","80","            className=\"thin text-left text-top nowrap\"","82","            <DateTimeFormatter","83","              date=\"2017-03-01T09:36:01+0100\"","84","            \/>","85","          <\/td>","86","          <td","87","            className=\"text-left text-top\"","88","          >","89","            created_by john.david.dalton@gmail.com","90","          <\/td>","91","        <\/tr>","92","        <tr","93","          key=\"0\"","94","        >","95","          <td","96","            className=\"thin text-left text-top nowrap\"","97","          >","98","            <DateTimeFormatter","99","              date=\"2017-03-01T09:36:01+0100\"","100","            \/>","101","          <\/td>","102","          <td","103","            className=\"text-left text-top\"","104","          >","105","            <p>","106","              <Connect(Avatar)","107","                className=\"little-spacer-right\"","108","                name=\"john.doe\"","109","                size={16}","111","              user.x_deleted.john.doe","112","            <\/p>","113","            <IssueChangelogDiff","114","              diff={","115","                Object {","116","                  \"key\": \"severity\",","117","                  \"newValue\": \"MINOR\",","118","                  \"oldValue\": \"CRITICAL\",","120","              }","121","              key=\"severity\"","122","            \/>","123","          <\/td>","124","        <\/tr>","125","      <\/tbody>","126","    <\/table>","127","  <\/div>"],"delete":["6","  <ClickEventBoundary>","7","    <div","8","      className=\"menu is-container issue-changelog\"","10","      <table","11","        className=\"spaced\"","12","      >","13","        <tbody>","14","          <tr>","15","            <td","16","              className=\"thin text-left text-top nowrap\"","17","            >","18","              <DateTimeFormatter","19","                date=\"2017-03-01T09:36:01+0100\"","20","              \/>","21","            <\/td>","22","            <td","23","              className=\"text-left text-top\"","24","            >","25","              created_by john.david.dalton@gmail.com","26","            <\/td>","27","          <\/tr>","28","          <tr","29","            key=\"0\"","31","            <td","32","              className=\"thin text-left text-top nowrap\"","33","            >","34","              <DateTimeFormatter","35","                date=\"2017-03-01T09:36:01+0100\"","37","            <\/td>","38","            <td","39","              className=\"text-left text-top\"","40","            >","41","              <p>","42","                <Connect(Avatar)","43","                  className=\"little-spacer-right\"","44","                  hash=\"gravatarhash\"","45","                  name=\"John Doe\"","46","                  size={16}","47","                \/>","48","                John Doe","49","              <\/p>","50","              <IssueChangelogDiff","51","                diff={","52","                  Object {","53","                    \"key\": \"severity\",","54","                    \"newValue\": \"MINOR\",","55","                    \"oldValue\": \"CRITICAL\",","56","                  }","58","                key=\"severity\"","59","              \/>","60","            <\/td>","61","          <\/tr>","62","        <\/tbody>","63","      <\/table>","64","    <\/div>","65","  <\/ClickEventBoundary>","73","  <ClickEventBoundary>","74","    <div","75","      className=\"menu is-container issue-changelog\"","77","      <table","78","        className=\"spaced\"","79","      >","80","        <tbody>","81","          <tr>","82","            <td","83","              className=\"thin text-left text-top nowrap\"","84","            >","85","              <DateTimeFormatter","86","                date=\"2017-03-01T09:36:01+0100\"","87","              \/>","88","            <\/td>","89","            <td","90","              className=\"text-left text-top\"","91","            >","92","              created_by john.david.dalton@gmail.com","93","            <\/td>","94","          <\/tr>","95","          <tr","96","            key=\"0\"","98","            <td","99","              className=\"thin text-left text-top nowrap\"","100","            >","101","              <DateTimeFormatter","102","                date=\"2017-03-01T09:36:01+0100\"","104","            <\/td>","105","            <td","106","              className=\"text-left text-top\"","107","            >","108","              <p>","109","                <Connect(Avatar)","110","                  className=\"little-spacer-right\"","111","                  name=\"john.doe\"","112","                  size={16}","113","                \/>","114","                user.x_deleted.john.doe","115","              <\/p>","116","              <IssueChangelogDiff","117","                diff={","118","                  Object {","119","                    \"key\": \"severity\",","120","                    \"newValue\": \"MINOR\",","121","                    \"oldValue\": \"CRITICAL\",","122","                  }","124","                key=\"severity\"","125","              \/>","126","            <\/td>","127","          <\/tr>","128","        <\/tbody>","129","      <\/table>","130","    <\/div>","131","  <\/ClickEventBoundary>"]}],"server\/sonar-web\/package.json":[{"add":["37","    \"sonar-ui-common\": \"0.0.30\","],"delete":["37","    \"sonar-ui-common\": \"0.0.25\","]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/CommentPopup.tsx":[{"add":["75","        <div className=\"issue-comment-bubble-popup\">","76","          <div className=\"issue-comment-form-text\">","77","            <textarea","78","              autoFocus={true}","79","              onChange={this.handleCommentChange}","80","              onKeyDown={this.handleKeyboard}","81","              placeholder={this.props.placeholder}","82","              rows={2}","83","              value={this.state.textComment}","84","            \/>","85","          <\/div>","86","          <div className=\"issue-comment-form-footer\">","87","            <div className=\"issue-comment-form-actions\">","88","              <Button","89","                className=\"js-issue-comment-submit little-spacer-right\"","90","                disabled={this.state.textComment.trim().length < 1}","91","                onClick={this.handleCommentClick}>","92","                {comment && translate('save')}","93","                {!comment && translate('issue.comment.submit')}","94","              <\/Button>","95","              <ResetButtonLink className=\"js-issue-comment-cancel\" onClick={this.handleCancelClick}>","96","                {autoTriggered ? translate('skip') : translate('cancel')}","97","              <\/ResetButtonLink>","99","            <div className=\"issue-comment-form-tips\">","100","              <MarkdownTips \/>","103","        <\/div>"],"delete":["21","import ClickEventBoundary from 'sonar-ui-common\/components\/controls\/ClickEventBoundary';","76","        <ClickEventBoundary>","77","          <div className=\"issue-comment-bubble-popup\">","78","            <div className=\"issue-comment-form-text\">","79","              <textarea","80","                autoFocus={true}","81","                onChange={this.handleCommentChange}","82","                onKeyDown={this.handleKeyboard}","83","                placeholder={this.props.placeholder}","84","                rows={2}","85","                value={this.state.textComment}","86","              \/>","88","            <div className=\"issue-comment-form-footer\">","89","              <div className=\"issue-comment-form-actions\">","90","                <Button","91","                  className=\"js-issue-comment-submit little-spacer-right\"","92","                  disabled={this.state.textComment.trim().length < 1}","93","                  onClick={this.handleCommentClick}>","94","                  {comment && translate('save')}","95","                  {!comment && translate('issue.comment.submit')}","96","                <\/Button>","97","                <ResetButtonLink","98","                  className=\"js-issue-comment-cancel\"","99","                  onClick={this.handleCancelClick}>","100","                  {autoTriggered ? translate('skip') : translate('cancel')}","101","                <\/ResetButtonLink>","102","              <\/div>","103","              <div className=\"issue-comment-form-tips\">","104","                <MarkdownTips \/>","105","              <\/div>","108","        <\/ClickEventBoundary>"]}],"server\/sonar-web\/yarn.lock":[{"add":["9389","sonar-ui-common@0.0.30:","9390","  version \"0.0.30\"","9391","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/sonar-ui-common\/-\/sonar-ui-common-0.0.30.tgz#23cf7184b7fdf9711805b176540c6dd304ba669b\"","9392","  integrity sha1-I89xhLf9+XEYBbF2VAxt0wS6Zps="],"delete":["9389","sonar-ui-common@0.0.25:","9390","  version \"0.0.25\"","9391","  resolved \"https:\/\/repox.jfrog.io\/repox\/api\/npm\/npm\/sonar-ui-common\/-\/sonar-ui-common-0.0.25.tgz#c448e83dece5198592f3d6097f570fd9188dcee0\"","9392","  integrity sha1-xEjoPezlGYWS89YJf1cP2RiNzuA="]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/ChangelogPopup.tsx":[{"add":["65","        <div className=\"menu is-container issue-changelog\">","66","          <table className=\"spaced\">","67","            <tbody>","68","              <tr>","69","                <td className=\"thin text-left text-top nowrap\">","70","                  <DateTimeFormatter date={issue.creationDate} \/>","71","                <\/td>","72","                <td className=\"text-left text-top\">","73","                  {author ? `${translate('created_by')} ${author}` : translate('created')}","74","                <\/td>","75","              <\/tr>","77","              {this.state.changelog.map((item, idx) => {","78","                const userName = item.userName || item.user;","80","                return (","81","                  <tr key={idx}>","82","                    <td className=\"thin text-left text-top nowrap\">","83","                      <DateTimeFormatter date={item.creationDate} \/>","84","                    <\/td>","85","                    <td className=\"text-left text-top\">","86","                      {userName && (","87","                        <p>","88","                          <Avatar","89","                            className=\"little-spacer-right\"","90","                            hash={item.avatar}","91","                            name={userName}","92","                            size={16}","93","                          \/>","94","                          {item.isUserActive","95","                            ? userName","96","                            : translateWithParameters('user.x_deleted', userName)}","97","                        <\/p>","98","                      )}","99","                      {item.diffs.map(diff => (","100","                        <IssueChangelogDiff diff={diff} key={diff.key} \/>","101","                      ))}","102","                    <\/td>","103","                  <\/tr>","104","                );","105","              })}","106","            <\/tbody>","107","          <\/table>","108","        <\/div>"],"delete":["20","import ClickEventBoundary from 'sonar-ui-common\/components\/controls\/ClickEventBoundary';","66","        <ClickEventBoundary>","67","          <div className=\"menu is-container issue-changelog\">","68","            <table className=\"spaced\">","69","              <tbody>","70","                <tr>","71","                  <td className=\"thin text-left text-top nowrap\">","72","                    <DateTimeFormatter date={issue.creationDate} \/>","73","                  <\/td>","74","                  <td className=\"text-left text-top\">","75","                    {author ? `${translate('created_by')} ${author}` : translate('created')}","76","                  <\/td>","77","                <\/tr>","79","                {this.state.changelog.map((item, idx) => {","80","                  const userName = item.userName || item.user;","82","                  return (","83","                    <tr key={idx}>","84","                      <td className=\"thin text-left text-top nowrap\">","85","                        <DateTimeFormatter date={item.creationDate} \/>","86","                      <\/td>","87","                      <td className=\"text-left text-top\">","88","                        {userName && (","89","                          <p>","90","                            <Avatar","91","                              className=\"little-spacer-right\"","92","                              hash={item.avatar}","93","                              name={userName}","94","                              size={16}","95","                            \/>","96","                            {item.isUserActive","97","                              ? userName","98","                              : translateWithParameters('user.x_deleted', userName)}","99","                          <\/p>","100","                        )}","101","                        {item.diffs.map(diff => (","102","                          <IssueChangelogDiff diff={diff} key={diff.key} \/>","103","                        ))}","104","                      <\/td>","105","                    <\/tr>","106","                  );","107","                })}","108","              <\/tbody>","109","            <\/table>","110","          <\/div>","111","        <\/ClickEventBoundary>"]}],"server\/sonar-web\/src\/main\/js\/components\/issue\/popups\/__tests__\/__snapshots__\/CommentPopup-test.tsx.snap":[{"add":["4","  <div","5","    className=\"issue-comment-bubble-popup\"","6","  >","8","      className=\"issue-comment-form-text\"","9","    >","10","      <textarea","11","        autoFocus={true}","12","        onChange={[Function]}","13","        onKeyDown={[Function]}","14","        placeholder=\"\"","15","        rows={2}","16","        value=\"*test*\"","17","      \/>","18","    <\/div>","19","    <div","20","      className=\"issue-comment-form-footer\"","23","        className=\"issue-comment-form-actions\"","25","        <Button","26","          className=\"js-issue-comment-submit little-spacer-right\"","27","          disabled={false}","28","          onClick={[Function]}","29","        >","30","          save","31","        <\/Button>","32","        <ResetButtonLink","33","          className=\"js-issue-comment-cancel\"","34","          onClick={[Function]}","35","        >","36","          cancel","37","        <\/ResetButtonLink>","40","        className=\"issue-comment-form-tips\"","42","        <MarkdownTips \/>","45","  <\/div>","51","  <div","52","    className=\"issue-comment-bubble-popup\"","53","  >","55","      className=\"issue-comment-form-text\"","56","    >","57","      <textarea","58","        autoFocus={true}","59","        onChange={[Function]}","60","        onKeyDown={[Function]}","61","        placeholder=\"placeholder test\"","62","        rows={2}","63","        value=\"\"","64","      \/>","65","    <\/div>","66","    <div","67","      className=\"issue-comment-form-footer\"","70","        className=\"issue-comment-form-actions\"","72","        <Button","73","          className=\"js-issue-comment-submit little-spacer-right\"","74","          disabled={true}","75","          onClick={[Function]}","76","        >","77","          issue.comment.submit","78","        <\/Button>","79","        <ResetButtonLink","80","          className=\"js-issue-comment-cancel\"","81","          onClick={[Function]}","82","        >","83","          cancel","84","        <\/ResetButtonLink>","87","        className=\"issue-comment-form-tips\"","89","        <MarkdownTips \/>","92","  <\/div>"],"delete":["4","  <ClickEventBoundary>","6","      className=\"issue-comment-bubble-popup\"","9","        className=\"issue-comment-form-text\"","11","        <textarea","12","          autoFocus={true}","13","          onChange={[Function]}","14","          onKeyDown={[Function]}","15","          placeholder=\"\"","16","          rows={2}","17","          value=\"*test*\"","18","        \/>","21","        className=\"issue-comment-form-footer\"","23","        <div","24","          className=\"issue-comment-form-actions\"","25","        >","26","          <Button","27","            className=\"js-issue-comment-submit little-spacer-right\"","28","            disabled={false}","29","            onClick={[Function]}","30","          >","31","            save","32","          <\/Button>","33","          <ResetButtonLink","34","            className=\"js-issue-comment-cancel\"","35","            onClick={[Function]}","36","          >","37","            cancel","38","          <\/ResetButtonLink>","39","        <\/div>","40","        <div","41","          className=\"issue-comment-form-tips\"","42","        >","43","          <MarkdownTips \/>","44","        <\/div>","47","  <\/ClickEventBoundary>","53","  <ClickEventBoundary>","55","      className=\"issue-comment-bubble-popup\"","58","        className=\"issue-comment-form-text\"","60","        <textarea","61","          autoFocus={true}","62","          onChange={[Function]}","63","          onKeyDown={[Function]}","64","          placeholder=\"placeholder test\"","65","          rows={2}","66","          value=\"\"","67","        \/>","70","        className=\"issue-comment-form-footer\"","72","        <div","73","          className=\"issue-comment-form-actions\"","74","        >","75","          <Button","76","            className=\"js-issue-comment-submit little-spacer-right\"","77","            disabled={true}","78","            onClick={[Function]}","79","          >","80","            issue.comment.submit","81","          <\/Button>","82","          <ResetButtonLink","83","            className=\"js-issue-comment-cancel\"","84","            onClick={[Function]}","85","          >","86","            cancel","87","          <\/ResetButtonLink>","88","        <\/div>","89","        <div","90","          className=\"issue-comment-form-tips\"","91","        >","92","          <MarkdownTips \/>","93","        <\/div>","96","  <\/ClickEventBoundary>"]}]}},"68776c0a9456b77f051baf474810e7a4e2c32694":{"changes":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentValidatorTest.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentValidator.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/SubmitAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/CreateAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/ReportSubmitter.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDto.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImpl.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/OrganizationProjectSuite.java":"MODIFY","server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ResourceDto.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/NewComponentTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentTreeBuilder.java":"MODIFY","tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectInfoTest.java":"ADD"},"diff":{"server\/sonar-db-dao\/src\/test\/java\/org\/sonar\/db\/component\/ComponentValidatorTest.java":[{"add":["35","    String name = repeat(\"a\", 500);","41","  public void fail_when_name_longer_than_500_characters() {","45","    ComponentValidator.checkComponentName(repeat(\"a\", 500 + 1));"],"delete":["35","    String name = repeat(\"a\", 2000);","41","  public void fail_when_name_longer_than_2000_characters() {","45","    ComponentValidator.checkComponentName(repeat(\"a\", 2000 + 1));"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentValidator.java":[{"add":["21","import javax.annotation.Nullable;","22","","28","  \/\/ b_name column is 500 characters wide","29","  public static final int MAX_COMPONENT_NAME_LENGTH = 500;","30","  public static final int MAX_COMPONENT_DESCRIPTION_LENGTH = 2_000;","31","  private static final int MAX_COMPONENT_TAGS_LENGTH = 500;","45","  public static String checkComponentLongName(@Nullable String value) {","46","    if (value == null) {","47","      return null;","48","    }","49","    checkArgument(value.length() <= MAX_COMPONENT_NAME_LENGTH, \"Component name length (%s) is longer than the maximum authorized (%s). '%s' was provided.\",","50","      value.length(), MAX_COMPONENT_NAME_LENGTH, value);","51","    return value;","52","  }","53","","54","  public static String checkDescription(@Nullable String value) {","55","    if (value == null) {","56","      return null;","57","    }","58","","59","    checkArgument(value.length() <= MAX_COMPONENT_NAME_LENGTH, \"Component description length (%s) is longer than the maximum authorized (%s). '%s' was provided.\",","60","      value.length(), MAX_COMPONENT_DESCRIPTION_LENGTH, value);","61","    return value;","62","  }","63","","64","  public static String checkTags(@Nullable String value) {","65","    if (value == null) {","66","      return null;","67","    }","68","","69","    checkArgument(value.length() <= MAX_COMPONENT_NAME_LENGTH, \"Component tags length (%s) is longer than the maximum authorized (%s). '%s' was provided.\",","70","      value.length(), MAX_COMPONENT_TAGS_LENGTH, value);","71","    return value;","72","  }","73",""],"delete":["26","  public static final int MAX_COMPONENT_NAME_LENGTH = 2000;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/SubmitAction.java":[{"add":["35","import static org.apache.commons.lang.StringUtils.abbreviate;","36","import static org.apache.commons.lang.StringUtils.defaultIfBlank;","90","      .setDescription(\"Optional name of the project, used only if the project does not exist yet. If name is longer than %d, it is abbreviated.\", MAX_COMPONENT_NAME_LENGTH)","113","    String projectName = abbreviate(defaultIfBlank(wsRequest.param(PARAM_PROJECT_NAME), projectKey), MAX_COMPONENT_NAME_LENGTH);"],"delete":["88","      .setMaximumLength(MAX_COMPONENT_NAME_LENGTH)","89","      .setDescription(\"Optional name of the project, used only if the project does not exist yet.\")","112","    String projectName = StringUtils.defaultIfBlank(wsRequest.param(PARAM_PROJECT_NAME), projectKey);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/project\/ws\/CreateAction.java":[{"add":["21","import javax.annotation.CheckForNull;","22","import javax.annotation.Nullable;","36","import static org.apache.commons.lang.StringUtils.abbreviate;","90","      .setDescription(\"Name of the project. If name is longer than %d, it is abbreviated.\", MAX_COMPONENT_NAME_LENGTH)","139","      .setName(abbreviate(request.mandatoryParam(PARAM_NAME), MAX_COMPONENT_NAME_LENGTH))"],"delete":["34","import javax.annotation.CheckForNull;","35","import javax.annotation.Nullable;","36","","90","      .setDescription(\"Name of the project\")","92","      .setMaximumLength(MAX_COMPONENT_NAME_LENGTH)","140","      .setName(request.mandatoryParam(PARAM_NAME))"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/queue\/ReportSubmitter.java":[{"add":["53","import static org.apache.commons.lang.StringUtils.defaultIfBlank;","163","      .setName(defaultIfBlank(projectName, projectKey))"],"delete":["29","import org.apache.commons.lang.StringUtils;","163","      .setName(StringUtils.defaultIfBlank(projectName, projectKey))"]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ComponentDto.java":[{"add":["38","import static org.sonar.db.component.ComponentValidator.checkComponentLongName;","341","    this.longName = checkComponentLongName(longName);"],"delete":["340","    this.longName = longName;"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImpl.java":[{"add":["31","import static org.apache.commons.lang.StringUtils.abbreviate;","33","import static org.sonar.db.component.ComponentValidator.MAX_COMPONENT_DESCRIPTION_LENGTH;","34","import static org.sonar.db.component.ComponentValidator.MAX_COMPONENT_NAME_LENGTH;","191","      this.name = abbreviate(requireNonNull(name, NAME_CANNOT_BE_NULL), MAX_COMPONENT_NAME_LENGTH);","196","      this.description = abbreviate(trimToNull(description), MAX_COMPONENT_DESCRIPTION_LENGTH);"],"delete":["188","      this.name = requireNonNull(name, NAME_CANNOT_BE_NULL);","193","      this.description = trimToNull(description);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/project\/ws\/CreateActionTest.java":[{"add":["21","import com.google.common.base.Strings;","214","    assertThat(result.getProject().getVisibility()).isEqualTo(\"public\");","215","  }","216","","217","  @Test","218","  public void abbreviate_project_name_if_very_long() {","219","    OrganizationDto organization = db.organizations().insert();","220","    userSession.addPermission(PROVISION_PROJECTS, organization);","221","    String longName = Strings.repeat(\"a\", 1_000);","222","","223","    ws.newRequest()","224","      .setParam(\"key\", DEFAULT_PROJECT_KEY)","225","      .setParam(\"name\", longName)","226","      .setParam(\"organization\", organization.getKey())","227","      .executeProtobuf(CreateWsResponse.class);","228","","229","    assertThat(db.getDbClient().componentDao().selectByKey(db.getSession(), DEFAULT_PROJECT_KEY).get().name())","230","      .isEqualTo(Strings.repeat(\"a\", 497) + \"...\");","353","    assertThat(name.description()).isEqualTo(\"Name of the project. If name is longer than 500, it is abbreviated.\");"],"delete":["21","import org.assertj.core.api.AssertionsForClassTypes;","214","    AssertionsForClassTypes.assertThat(result.getProject().getVisibility()).isEqualTo(\"public\");","337","    assertThat(name.maximumLength()).isEqualTo(2000);"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/OrganizationProjectSuite.java":[{"add":["38","  ProjectInfoTest.class,"],"delete":[]}],"server\/sonar-db-dao\/src\/main\/java\/org\/sonar\/db\/component\/ResourceDto.java":[{"add":["26","import static org.sonar.db.component.ComponentValidator.checkComponentLongName;","28","import static org.sonar.db.component.ComponentValidator.checkDescription;","146","    this.longName = checkComponentLongName(longName);","182","    this.description = checkDescription(description);"],"delete":["144","    this.longName = longName;","180","    this.description = description;"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/SubmitActionTest.java":[{"add":["21","import com.google.common.base.Strings;","116","  public void abbreviate_long_name() {","117","    String longName = Strings.repeat(\"a\", 1_000);","118","    String expectedName = Strings.repeat(\"a\", 497) + \"...\";","119","    when(reportSubmitter.submit(eq(organizationKey), eq(\"my_project\"), isNull(), eq(expectedName),","120","      anyMap(), any())).thenReturn(A_CE_TASK);","121","","122","    Ce.SubmitResponse submitResponse = tester.newRequest()","123","      .setParam(\"projectKey\", \"my_project\")","124","      .setParam(\"projectName\", longName)","125","      .setPart(\"report\", new ByteArrayInputStream(\"{binary}\".getBytes()), \"foo.bar\")","126","      .setMethod(\"POST\")","127","      .executeProtobuf(Ce.SubmitResponse.class);","128","","129","    verify(reportSubmitter).submit(eq(organizationKey), eq(\"my_project\"), isNull(), eq(expectedName),","130","      anyMap(), any());","131","","132","    assertThat(submitResponse.getTaskId()).isEqualTo(\"TASK_1\");","133","    assertThat(submitResponse.getProjectId()).isEqualTo(\"PROJECT_1\");","134","  }","135","","136","  @Test"],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/NewComponentTest.java":[{"add":["92","      .setName(repeat(\"a\", 501));","96","      \"Component name length (501) is longer than the maximum authorized (500)\");"],"delete":["92","      .setName(repeat(\"a\", 2001));","96","      \"Component name length (2001) is longer than the maximum authorized (2000)\");"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentImplTest.java":[{"add":["28","import static com.google.common.base.Strings.repeat;","40","  public ExpectedException expectedException = ExpectedException.none();","53","    expectedException.expect(NullPointerException.class);","60","    expectedException.expect(NullPointerException.class);","67","    expectedException.expect(NullPointerException.class);","79","    expectedException.expect(NullPointerException.class);","86","    expectedException.expect(NullPointerException.class);","93","    expectedException.expect(NullPointerException.class);","100","    expectedException.expect(NullPointerException.class);","173","  public void keep_500_first_characters_of_name() {","174","    String veryLongString = repeat(\"a\", 3_000);","175","","176","    ComponentImpl underTest = buildSimpleComponent(FILE, \"file\")","177","      .setName(veryLongString)","178","      .build();","179","","180","    String expectedName = repeat(\"a\", 500-3) + \"...\";","181","    assertThat(underTest.getName()).isEqualTo(expectedName);","182","  }","183","","184","  @Test","185","  public void keep_2000_first_characters_of_description() {","186","    String veryLongString = repeat(\"a\", 3_000);","187","","188","    ComponentImpl underTest = buildSimpleComponent(FILE, \"file\")","189","      .setDescription(veryLongString)","190","      .build();","191","","192","    String expectedDescription = repeat(\"a\", 2_000-3) + \"...\";","193","    assertThat(underTest.getDescription()).isEqualTo(expectedDescription);","194","  }","195","","196","  @Test"],"delete":["39","  public ExpectedException thrown = ExpectedException.none();","52","    thrown.expect(NullPointerException.class);","59","    thrown.expect(NullPointerException.class);","66","    thrown.expect(NullPointerException.class);","78","    thrown.expect(NullPointerException.class);","85","    thrown.expect(NullPointerException.class);","92","    thrown.expect(NullPointerException.class);","99","    thrown.expect(NullPointerException.class);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/component\/ComponentTreeBuilder.java":[{"add":["151","        .setDescription(component.getDescription());"],"delete":["151","        .setDescription(trimToNull(component.getDescription()));"]}],"tests\/src\/test\/java\/org\/sonarqube\/tests\/project\/ProjectInfoTest.java":[{"add":[],"delete":[]}]}},"5bf3e8320b4a341c2b47406dd1ca4772aa046b72":{"changes":{"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/HttpConnectorTest.java":"MODIFY","sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":"MODIFY"},"diff":{"sonar-ws\/src\/test\/java\/org\/sonarqube\/ws\/client\/HttpConnectorTest.java":[{"add":["27","import javax.net.ssl.SSLSocketFactory;","284","    assertThat(underTest.okHttpClient().getSslSocketFactory()).isInstanceOf(SSLSocketFactory.getDefault().getClass());"],"delete":["283","    \/\/ do not override the default TLS context provided by java 8","284","    assertThat(underTest.okHttpClient().getSslSocketFactory()).isNull();"]}],"sonar-ws\/src\/main\/java\/org\/sonarqube\/ws\/client\/HttpConnector.java":[{"add":["99","    this.okHttpClient.setSslSocketFactory(createSslSocketFactory(javaVersion));","100","  }","101","","102","  private static SSLSocketFactory createSslSocketFactory(JavaVersion javaVersion) {","103","    try {","104","      SSLSocketFactory sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();","105","      return enableTls12InJava7(sslSocketFactory, javaVersion);","106","    } catch (Exception e) {","107","      throw new IllegalStateException(\"Fail to init TLS context\", e);","108","    }","109","  }","110","","111","  private static SSLSocketFactory enableTls12InJava7(SSLSocketFactory sslSocketFactory, JavaVersion javaVersion) {","119","      return new Tls12Java7SocketFactory(sslSocketFactory);","121","    return sslSocketFactory;"],"delete":["106","      try {","107","        this.okHttpClient.setSslSocketFactory(new Tls12Java7SocketFactory((SSLSocketFactory) SSLSocketFactory.getDefault()));","108","      } catch (Exception e) {","109","        throw new IllegalStateException(\"Fail to init TLS context\", e);","110","      }"]}]}},"8e325b86c9247da1659fbd23f5358156468dd795":{"changes":{"it\/it-tests\/src\/test\/java\/it\/user\/LocalAuthenticationTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/authentication\/UserIdentity.java":"MODIFY","sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/authentication\/UserIdentityTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/user\/RealmAuthenticationTest.java":"MODIFY","it\/it-tests\/src\/test\/java\/it\/user\/BaseIdentityProviderTest.java":"MODIFY"},"diff":{"it\/it-tests\/src\/test\/java\/it\/user\/LocalAuthenticationTest.java":[{"add":["188","  public void allow_user_login_with_2_characters() throws Exception {","189","    userRule.createUser(\"jo\", \"password\");","190","","191","    assertThat(checkAuthenticationWithAuthenticateWebService(\"jo\", \"password\")).isTrue();","192","  }","193","","194","  @Test"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/server\/authentication\/UserIdentity.java":[{"add":["30","import static com.google.common.base.Preconditions.checkArgument;","31","import static com.google.common.base.Preconditions.checkNotNull;","32","import static com.google.common.collect.FluentIterable.from;","33","import static org.apache.commons.lang.StringUtils.isNotBlank;","34","import static org.sonar.api.user.UserGroupValidation.validateGroupName;","35","","195","      checkArgument(login.length() <= 255 && login.length() >= 2, \"User login size is incorrect (Between 2 and 255 characters)\");"],"delete":["21","import static com.google.common.base.Preconditions.checkArgument;","22","import static com.google.common.base.Preconditions.checkNotNull;","23","import static com.google.common.collect.FluentIterable.from;","24","import static org.apache.commons.lang.StringUtils.isNotBlank;","25","import static org.sonar.api.user.UserGroupValidation.validateGroupName;","26","","195","      checkArgument(login.length() <= 255 && login.length() >= 3, \"User login size is incorrect (Between 3 and 255 characters)\");"]}],"sonar-plugin-api\/src\/test\/java\/org\/sonar\/api\/server\/authentication\/UserIdentityTest.java":[{"add":["26","import static com.google.common.collect.Sets.newHashSet;","27","import static org.assertj.core.api.Assertions.assertThat;","28","","77","    thrown.expectMessage(\"User login size is incorrect (Between 2 and 255 characters)\");","89","    thrown.expectMessage(\"User login size is incorrect (Between 2 and 255 characters)\");","92","      .setLogin(\"j\")"],"delete":["21","import static com.google.common.collect.Sets.newHashSet;","22","import static org.assertj.core.api.Assertions.assertThat;","23","","77","    thrown.expectMessage(\"User login size is incorrect (Between 3 and 255 characters)\");","89","    thrown.expectMessage(\"User login size is incorrect (Between 3 and 255 characters)\");","92","      .setLogin(\"12\")"]}],"it\/it-tests\/src\/test\/java\/it\/user\/RealmAuthenticationTest.java":[{"add":["50","import util.user.UserRule;","85","  @ClassRule","86","  public static UserRule USER_RULE = UserRule.from(orchestrator);","87","","94","    USER_RULE.resetUsers();","330","  @Test","331","  public void allow_user_login_with_2_characters() {","332","    String username = \"jo\";","333","    String password = \"1234567\";","334","    updateUsersInExtAuth(ImmutableMap.of(username + \".password\", password));","335","","336","    assertThat(loginAttempt(username, password)).isEqualTo(AUTHORIZED);","337","  }","338",""],"delete":["90","    resetUsers(USER_LOGIN, TECH_USER);","91","  }","92","","93","  private void resetUsers(String... logins) {","94","    for (String login : logins) {","95","      String result = orchestrator.getServer().adminWsClient().get(\"\/api\/users\/search?q=\" + login);","96","      if (result.contains(login)) {","97","        orchestrator.getServer().adminWsClient().userClient().deactivate(login);","98","      }","99","    }"]}],"it\/it-tests\/src\/test\/java\/it\/user\/BaseIdentityProviderTest.java":[{"add":["82","    userRule.resetUsers();","85","      \"sonar.auth.fake-base-id-provider.throwUnauthorizedMessage\", \"sonar.auth.fake-base-id-provider.enabledGroupsSync\", \"sonar.auth.fake-base-id-provider.groups\",","86","      \"sonar.auth.fake-base-id-provider.allowsUsersToSignUp\");","250","  @Test","251","  public void allow_user_login_with_2_characters() throws Exception {","252","    enablePlugin();","253","    String login = \"jo\";","254","    setUserCreatedByAuthPlugin(login, USER_PROVIDER_ID, USER_NAME, USER_EMAIL);","255","    userRule.verifyUserDoesNotExist(login);","256","","257","    \/\/ First connection, user is created","258","    authenticateWithFakeAuthProvider();","259","","260","    userRule.verifyUserExists(login, USER_NAME, USER_EMAIL, false);","261","  }","262",""],"delete":["82","    userRule.deactivateUsers(USER_LOGIN);","85","      \"sonar.auth.fake-base-id-provider.throwUnauthorizedMessage\", \"sonar.auth.fake-base-id-provider.enabledGroupsSync\", \"sonar.auth.fake-base-id-provider.groups\");"]}]}},"e184f159ade71372942f2840b62f6b71eeefb4c5":{"changes":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Migration53Mapper.java":"ADD","sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeysTest.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/v53\/Migration53Mapper.xml":"ADD","sonar-db\/src\/main\/java\/org\/sonar\/db\/MyBatis.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeys.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Component.java":"ADD"},"diff":{"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Migration53Mapper.java":[{"add":[],"delete":[]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeysTest.java":[{"add":["41","    migration = new RemoveDuplicatedComponentKeys(db.database(), db.getDbClient());"],"delete":["41","    migration = new RemoveDuplicatedComponentKeys(db.database());"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/version\/v53\/Migration53Mapper.xml":[{"add":[],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/MyBatis.java":[{"add":["134","import org.sonar.db.version.v53.Migration53Mapper;","238","      Migration45Mapper.class, Migration50Mapper.class, Migration53Mapper.class"],"delete":["237","      Migration45Mapper.class, Migration50Mapper.class"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v52\/RemoveDuplicatedComponentKeys.java":[{"add":["31","import org.sonar.db.DbClient;","32","import org.sonar.db.DbSession;","36","import org.sonar.db.version.v53.Component;","37","import org.sonar.db.version.v53.Migration53Mapper;","50","  private final DbClient dbClient;","52","  public RemoveDuplicatedComponentKeys(Database db, DbClient dbClient) {","54","    this.dbClient = dbClient;","62","    DbSession readSession = dbClient.openSession(false);","63","    Migration53Mapper mapper = readSession.getMapper(Migration53Mapper.class);","64","","68","      RemoveDuplicatedComponentHandler handler = new RemoveDuplicatedComponentHandler(mapper, componentUpdate, issuesUpdate);","81","      dbClient.closeSession(readSession);","88","    private final Migration53Mapper mapper;","94","    public RemoveDuplicatedComponentHandler(Migration53Mapper mapper, Upsert componentUpdate, Upsert issuesUpdate) {","95","      this.mapper = mapper;","102","      String componentKey = row.getString(1);","103","      List<Component> components = mapper.selectComponentsByKey(componentKey);","106","      for (Component componentToRemove : FluentIterable.from(components).filter(Predicates.not(new MatchComponentId(refComponent.getId())))) {","108","          .setLong(1, componentToRemove.getId())","111","          .setString(1, refComponent.getUuid())","112","          .setString(2, refComponent.getProjectUuid())","113","          .setString(3, componentToRemove.getUuid())","130","      return input.isEnabled();","144","      return input.getId() == this.id;"],"delete":["47","  public RemoveDuplicatedComponentKeys(Database db) {","59","      RemoveDuplicatedComponentHandler handler = new RemoveDuplicatedComponentHandler(context, componentUpdate, issuesUpdate);","78","    private final Context context;","84","    public RemoveDuplicatedComponentHandler(Context context, Upsert componentUpdate, Upsert issuesUpdate) {","85","      this.context = context;","92","      List<Component> components = context","93","        .prepareSelect(\"SELECT p.id, p.uuid, p.project_uuid, p.enabled FROM projects p WHERE p.kee=? ORDER BY id\")","94","        .setString(1, row.getString(1))","95","        .list(ComponentRowReader.INSTANCE);","98","      for (Component componentToRemove : FluentIterable.from(components).filter(Predicates.not(new MatchComponentId(refComponent.id)))) {","100","          .setLong(1, componentToRemove.id)","103","          .setString(1, refComponent.uuid)","104","          .setString(2, refComponent.projectUuid)","105","          .setString(3, componentToRemove.uuid)","122","      return input.enabled;","136","      return input.id == this.id;","140","  private enum ComponentRowReader implements Select.RowReader<Component> {","141","    INSTANCE;","142","","143","    @Override","144","    public Component read(Select.Row row) throws SQLException {","145","      return new Component(row.getLong(1), row.getString(2), row.getString(3), row.getBoolean(4));","146","    }","147","  }","148","","149","  private static class Component {","150","    private final long id;","151","    private final String uuid;","152","    private final String projectUuid;","153","    private final boolean enabled;","154","","155","    public Component(long id, String uuid, String projectUuid, boolean enabled) {","156","      this.id = id;","157","      this.uuid = uuid;","158","      this.projectUuid = projectUuid;","159","      this.enabled = enabled;","160","    }","161","  }"]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v53\/Component.java":[{"add":[],"delete":[]}]}},"8de6cde7ea0ff5aaf43d59e4dff13484f83b7cf8":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryDataTest.java":"MODIFY","sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryData.java":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryDataTest.java":[{"add":["25","import java.util.List;","31","import org.sonar.api.utils.log.LogTester;","32","import org.sonar.api.utils.log.LoggerLevel;","48","  @Rule","49","  public LogTester logTester = new LogTester().setLevel(LoggerLevel.DEBUG);","50","","87","      List<String> debugLogs = logTester.logs(LoggerLevel.DEBUG);","88","      assertThat(debugLogs.stream()","89","        .anyMatch(s -> s.startsWith(\"Invalid FILE_SOURCES.DATA on row with ID 1, data will be ignored\"))).isTrue();"],"delete":[]}],"sonar-db\/src\/main\/java\/org\/sonar\/db\/version\/v51\/FeedFileSourcesBinaryData.java":[{"add":["23","import com.google.common.base.Throwables;","151","      Loggers.get(FeedFileSourcesBinaryData.class).debug(","152","        \"Invalid FILE_SOURCES.DATA on row with ID {}, data will be ignored. {}\", fileSourceId, Throwables.getStackTraceAsString(e));"],"delete":["150","      Loggers.get(FeedFileSourcesBinaryData.class).error(","151","        String.format(\"Invalid FILE_SOURCES.DATA on row with ID %s, data will be ignored: %s\", fileSourceId, data), e);"]}]}},"dd207a8d9aba5a03af76dbc67bc451ece2afc35b":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/PermissionsWsParametersBuilder.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveGroupAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/UsersAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveUserAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/GroupsAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddGroupAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/ApplyTemplateAction.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddUserAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/PermissionsWsParametersBuilder.java":[{"add":["83","  public static void createProjectParameters(NewAction action) {"],"delete":["83","  public static void createProjectParameter(NewAction action) {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveGroupAction.java":[{"add":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","72","    createProjectParameters(action);"],"delete":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","72","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/UsersAction.java":[{"add":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","85","    createProjectParameters(action);"],"delete":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","85","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/RemoveUserAction.java":[{"add":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","67","    createProjectParameters(action);"],"delete":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","67","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/GroupsAction.java":[{"add":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","84","    createProjectParameters(action);"],"delete":["47","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","84","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddGroupAction.java":[{"add":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","70","    createProjectParameters(action);"],"delete":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","70","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsAction.java":[{"add":["44","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","82","    createProjectParameters(action);"],"delete":["44","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","82","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/template\/ApplyTemplateAction.java":[{"add":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","66","    createProjectParameters(action);"],"delete":["35","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","66","    createProjectParameter(action);"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/permission\/ws\/AddUserAction.java":[{"add":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameters;","67","    createProjectParameters(action);"],"delete":["33","import static org.sonar.server.permission.ws.PermissionsWsParametersBuilder.createProjectParameter;","67","    createProjectParameter(action);"]}]}},"68eefa86f059bd37b25566e2a3f8ef7b9d72d0f2":{"changes":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogActionTest.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogAction.java":[{"add":["38","import static org.sonar.api.utils.DateUtils.parseEndingDateOrDateTime;","39","import static org.sonar.api.utils.DateUtils.parseStartingDateOrDateTime;","44","  static final String PARAM_SINCE = \"since\";","45","  static final String PARAM_TO = \"to\";","87","      Date since = parseStartingDateOrDateTime(request.param(PARAM_SINCE));","91","      Date to = parseEndingDateOrDateTime(request.param(PARAM_TO));"],"delete":["42","  private static final String PARAM_SINCE = \"since\";","43","  private static final String PARAM_TO = \"to\";","85","      Date since = request.paramAsDateTime(PARAM_SINCE);","89","      Date to = request.paramAsDateTime(PARAM_TO);"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/ws\/ChangelogActionTest.java":[{"add":["26","import org.mockito.ArgumentCaptor;","40","import static org.assertj.core.api.Assertions.assertThat;","44","import static org.mockito.Mockito.verify;","46","import static org.sonar.api.utils.DateUtils.parseDate;","49","import static org.sonar.server.qualityprofile.ws.ChangelogAction.PARAM_SINCE;","50","import static org.sonar.server.qualityprofile.ws.ChangelogAction.PARAM_TO;","103","  @Test","104","  public void changelog_inclusive_for_dates() throws Exception {","105","    when(profileFactory.find(any(DbSession.class), eq(QProfileRef.fromKey(XOO_P1_KEY)))).thenReturn(QProfileTesting.newXooP1());","106","    when(changelogLoader.load(any(DbSession.class), any(QProfileChangeQuery.class))).thenReturn(new ChangelogLoader.Changelog(0, Collections.emptyList()));","107","","108","    wsTester.newGetRequest(QProfilesWs.API_ENDPOINT, \"changelog\")","109","      .setParam(PARAM_PROFILE_KEY, XOO_P1_KEY)","110","      .setParam(PARAM_SINCE, \"2016-09-01\")","111","      .setParam(PARAM_TO, \"2016-09-01\")","112","      .execute();","113","","114","    ArgumentCaptor<QProfileChangeQuery> argumentCaptor = ArgumentCaptor.forClass(QProfileChangeQuery.class);","115","    verify(changelogLoader).load(any(DbSession.class), argumentCaptor.capture());","116","    assertThat(argumentCaptor.getValue().getFromIncluded()).isEqualTo(parseDate(\"2016-09-01\").getTime());","117","    assertThat(argumentCaptor.getValue().getToExcluded()).isEqualTo(parseDate(\"2016-09-02\").getTime());","118","  }","119",""],"delete":["52","  private DbSession dbSession = dbTester.getSession();"]}]}},"629f228080b114ea57d311e41d3b4c76cb493195":{"changes":{"it\/it-tests\/src\/test\/java\/it\/projectSearch\/SearchProjectsTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectsTextSearchQueryFactory.java":"ADD","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":"ADD"},"diff":{"it\/it-tests\/src\/test\/java\/it\/projectSearch\/SearchProjectsTest.java":[{"add":["27","import org.sonarqube.ws.Common.FacetValue;","32","import static com.sonar.orchestrator.build.SonarScanner.create;","33","import static java.util.Collections.singletonList;","35","import static org.assertj.core.groups.Tuple.tuple;","57","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-sample\")));","73","  @Test","74","  public void filter_by_text_query() throws IOException {","75","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-sample\"), \"sonar.projectKey\", \"project1\", \"sonar.projectName\", \"apachee\"));","76","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-sample\"), \"sonar.projectKey\", \"project2\", \"sonar.projectName\", \"Apache\"));","77","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-multi-modules-sample\"), \"sonar.projectKey\", \"project3\", \"sonar.projectName\", \"Apache Foundation\"));","78","    orchestrator.executeBuild(create(projectDir(\"shared\/xoo-multi-modules-sample\"), \"sonar.projectKey\", \"project4\", \"sonar.projectName\", \"Windows\"));","79","","80","    \/\/ Search only by text query","81","    assertThat(searchProjects(\"query = \\\"apache\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project2\", \"project3\", \"project1\");","82","    assertThat(searchProjects(\"query = \\\"pAch\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project2\", \"project3\", \"project1\");","83","    assertThat(searchProjects(\"query = \\\"hee\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project1\");","84","    assertThat(searchProjects(\"query = \\\"project1\\\"\").getComponentsList()).extracting(Component::getKey).containsExactly(\"project1\");","85","    assertThat(searchProjects(\"query = \\\"unknown\\\"\").getComponentsList()).isEmpty();","86","","87","    \/\/ Search by metric criteria and text query","88","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"pAch\\\" AND ncloc > 50\").build()).getComponentsList())","89","      .extracting(Component::getKey).containsExactly(\"project3\");","90","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"nd\\\" AND ncloc > 50\").build()).getComponentsList())","91","      .extracting(Component::getKey).containsExactly(\"project3\", \"project4\");","92","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"unknown\\\" AND ncloc > 50\").build()).getComponentsList()).isEmpty();;","93","","94","    \/\/ Check facets","95","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"apache\\\"\").setFacets(singletonList(\"ncloc\")).build()).getFacets().getFacets(0).getValuesList())","96","      .extracting(FacetValue::getVal, FacetValue::getCount)","97","      .containsOnly(tuple(\"*-1000.0\", 3L), tuple(\"1000.0-10000.0\", 0L), tuple(\"10000.0-100000.0\", 0L), tuple(\"100000.0-500000.0\", 0L), tuple(\"500000.0-*\", 0L));","98","    assertThat(searchProjects(SearchProjectsRequest.builder().setFilter(\"query = \\\"unknown\\\"\").setFacets(singletonList(\"ncloc\")).build()).getFacets().getFacets(0)","99","      .getValuesList()).extracting(FacetValue::getVal, FacetValue::getCount)","100","      .containsOnly(tuple(\"*-1000.0\", 0L), tuple(\"1000.0-10000.0\", 0L), tuple(\"10000.0-100000.0\", 0L), tuple(\"100000.0-500000.0\", 0L), tuple(\"500000.0-*\", 0L));","101","  }"],"delete":["22","import com.sonar.orchestrator.build.SonarScanner;","54","    orchestrator.executeBuild(SonarScanner.create(projectDir(\"shared\/xoo-sample\")));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndex.java":[{"add":["279","    return Optional.of(ProjectsTextSearchQueryFactory.createQuery(queryText.get()));"],"delete":["49","import org.sonar.server.es.textsearch.ComponentTextSearchFeatureRepertoire;","50","import org.sonar.server.es.textsearch.ComponentTextSearchQueryFactory;","281","    ComponentTextSearchQueryFactory.ComponentTextSearchQuery componentTextSearchQuery = ComponentTextSearchQueryFactory.ComponentTextSearchQuery.builder()","282","      .setQueryText(queryText.get())","283","      .setFieldKey(FIELD_KEY)","284","      .setFieldName(FIELD_NAME)","285","      .build();","286","    return Optional.of(ComponentTextSearchQueryFactory.createQuery(componentTextSearchQuery, ComponentTextSearchFeatureRepertoire.values()));"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/measure\/index\/ProjectsTextSearchQueryFactory.java":[{"add":[],"delete":[]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/measure\/index\/ProjectMeasuresIndexTextSearchTest.java":[{"add":[],"delete":[]}]}},"6b837953f06bfd5181580144c955284f168c844e":{"changes":{"server\/sonar-docs\/package.json":"MODIFY","server\/sonar-docs\/src\/templates\/page.js":"MODIFY"},"diff":{"server\/sonar-docs\/package.json":[{"add":["43","    \"moduleFileExtensions\": [\"js\"],","44","    \"testPathIgnorePatterns\": [\"<rootDir>\/node_modules\", \"<rootDir>\/.cache\"],"],"delete":["43","    \"moduleFileExtensions\": [","44","      \"js\"","45","    ],","46","    \"testPathIgnorePatterns\": [","47","      \"<rootDir>\/node_modules\",","48","      \"<rootDir>\/.cache\"","49","    ],"]}],"server\/sonar-docs\/src\/templates\/page.js":[{"add":["27","  baseUrl = '';","28","","30","    if (window) {","31","      this.baseUrl = window.location.origin + '\/';","32","    }","70","          <link","71","            rel=\"canonical\"","72","            href={this.baseUrl + this.props.location.pathname.replace(version, 'latest')}","73","          \/>"],"delete":["65","          <link rel=\"canonical\" href={this.props.location.pathname.replace('latest', version)} \/>"]}]}},"def7c630eb2d99ff42c819816f10289b99e3bc08":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStepTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStep.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStepTest.java":[{"add":["57","  private static final int PROJECT_REF = 1;","58","  private static final int MODULE_REF = 11;","59","  private static final int SUB_MODULE_REF = 111;","60","  private static final int DIR_REF = 1111;","61","  private static final int FILE1_REF = 11111;","62","  private static final int FILE2_REF = 11112;","64","  private static final String PROJECT_UUID = \"PROJECT\";","65","  private static final String MODULE_UUID = \"MODULE\";","66","  private static final String SUB_MODULE_UUID = \"SUB_MODULE\";","67","  private static final String DIR_UUID = \"DIR\";","68","  private static final String FILE1_UUID = \"FILE1\";","69","  private static final String FILE2_UUID = \"FILE2\";","71","  private static final String VIEW_UUID = \"VIEW\";","72","  private static final String SUBVIEW_UUID = \"SUBVIEW\";","74","  private static final int VIEW_REF = 10;","75","  private static final int SUBVIEW_REF = 101;","76","  private static final int PROJECT_VIEW_REF = 1011;","78","  private static final Metric FLOAT_METRIC = new MetricImpl(10, \"float_metric\", \"Float Metric\", Metric.MetricType.FLOAT);","79","  private static final Metric STRING_METRIC = new MetricImpl(11, \"string_metric\", \"String Metric\", Metric.MetricType.STRING);","162","  public void test_float_metric_type() throws Exception {","169","  public void test_int_metric_type() throws Exception {","176","  public void test_long_metric_type() throws Exception {","183","  public void test_percent_metric_type() throws Exception {","190","  public void test_string_metric_type() throws Exception {","197","  public void test_string_metric_type_with_null_value() throws Exception {","198","    CustomMeasureDto dto = new CustomMeasureDto();","199","    dto.setTextValue(null);","200","","201","    Measure measure = dtoToMeasure(dto, new MetricImpl(1, \"m\", \"M\", Metric.MetricType.STRING));","202","    assertThat(measure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);","203","  }","204","","205","  @Test","206","  public void test_data_metric_type_with_null_value() throws Exception {","207","    CustomMeasureDto dto = new CustomMeasureDto();","208","    dto.setTextValue(null);","209","","210","    Measure measure = dtoToMeasure(dto, new MetricImpl(1, \"m\", \"M\", Metric.MetricType.DATA));","211","    assertThat(measure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);","212","  }","213","","214","  @Test","215","  public void test_ditrib_metric_type_with_null_value() throws Exception {","216","    CustomMeasureDto dto = new CustomMeasureDto();","217","    dto.setTextValue(null);","218","","219","    Measure measure = dtoToMeasure(dto, new MetricImpl(1, \"m\", \"M\", Metric.MetricType.DISTRIB));","220","    assertThat(measure.getValueType()).isEqualTo(Measure.ValueType.NO_VALUE);","221","  }","222","","223","  @Test","224","  public void test_LEVEL_metric_type() throws Exception {","231","  public void test_boolean_metric_type() throws Exception {"],"delete":["57","  static final int PROJECT_REF = 1;","58","  static final int MODULE_REF = 11;","59","  static final int SUB_MODULE_REF = 111;","60","  static final int DIR_REF = 1111;","61","  static final int FILE1_REF = 11111;","62","  static final int FILE2_REF = 11112;","64","  static final String PROJECT_UUID = \"PROJECT\";","65","  static final String MODULE_UUID = \"MODULE\";","66","  static final String SUB_MODULE_UUID = \"SUB_MODULE\";","67","  static final String DIR_UUID = \"DIR\";","68","  static final String FILE1_UUID = \"FILE1\";","69","  static final String FILE2_UUID = \"FILE2\";","71","  static final String VIEW_UUID = \"VIEW\";","72","  static final String SUBVIEW_UUID = \"SUBVIEW\";","74","  static final int VIEW_REF = 10;","75","  static final int SUBVIEW_REF = 101;","76","  static final int PROJECT_VIEW_REF = 1011;","78","  static final Metric FLOAT_METRIC = new MetricImpl(10, \"float_metric\", \"Float Metric\", Metric.MetricType.FLOAT);","79","  static final Metric STRING_METRIC = new MetricImpl(11, \"string_metric\", \"String Metric\", Metric.MetricType.STRING);","83","","86","","89","","94","","166","  public void test_float_value_type() throws Exception {","173","  public void test_int_value_type() throws Exception {","180","  public void test_long_value_type() throws Exception {","187","  public void test_percent_value_type() throws Exception {","194","  public void test_string_value_type() throws Exception {","201","  public void test_LEVEL_value_type() throws Exception {","208","  public void test_boolean_value_type() throws Exception {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/computation\/task\/projectanalysis\/step\/CustomMeasuresCopyStep.java":[{"add":["99","        String textValue = dto.getTextValue();","100","        if (textValue == null) {","101","          return Measure.newMeasureBuilder().createNoValue();","102","        }","103","        return Measure.newMeasureBuilder().create(textValue);"],"delete":["99","        return Measure.newMeasureBuilder().create(dto.getTextValue());"]}]}},"3df08566ce8ae085a6d785bf47b411f27247f55c":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/main-view.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/maintenance-main.hbs":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/system.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/_maintenance-status-offline.hbs":"ADD"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2643","maintenance.sonarqube_is_offline=SonarQube is offline","2644","maintenance.sonarqube_is_offline.text=The connection to SonarQube is lost. Please contact your system administrator."],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/main-view.js":[{"add":["21","import { getSystemStatus, getMigrationStatus, migrateDatabase } from '..\/..\/api\/system';","22","import { getBaseUrl } from '..\/..\/helpers\/urls';","38","  getStatus() {","39","    return this.options.setup ? getMigrationStatus() : getSystemStatus();","40","  },","41","","43","    return this.getStatus().then(","44","      r => {","45","        if (r.status === 'STARTING') {","46","          this.wasStarting = true;","47","        }","48","        \/\/ unset `status` in case if was `OFFLINE` previously","49","        this.model.set({ status: undefined, ...r });","50","        this.render();","51","        if (this.model.get('status') === 'UP' || this.model.get('state') === 'NO_MIGRATION') {","52","          this.stopPolling();","53","        }","54","        if (this.model.get('status') === 'UP' && this.wasStarting) {","55","          this.loadPreviousPage();","56","        }","57","        if (this.model.get('state') === 'MIGRATION_SUCCEEDED') {","58","          this.loadPreviousPage();","59","        }","60","      },","61","      () => {","62","        this.model.set({ status: 'OFFLINE' });","63","        this.render();","65","    );","73","    migrateDatabase().then(","74","      r => {","75","        this.model.set(r);","76","        this.render();","77","      },","78","      () => {}","79","    );","83","    document","84","      .querySelector('.page-simple')","85","      .classList.toggle('panel-warning', this.model.get('state') === 'MIGRATION_REQUIRED');","90","      window.location = this.options.returnTo || getBaseUrl();"],"delete":["19","import $ from 'jquery';","20","import Backbone from 'backbone';","32","    this.requestOptions = {","33","      type: 'GET',","34","      url: window.baseUrl + '\/api\/system\/' + (this.options.setup ? 'db_migration_status' : 'status')","35","    };","43","    return Backbone.ajax(this.requestOptions).done(r => {","44","      if (r.status === 'STARTING') {","45","        this.wasStarting = true;","47","      this.model.set(r);","48","      this.render();","49","      if (this.model.get('status') === 'UP' || this.model.get('state') === 'NO_MIGRATION') {","50","        this.stopPolling();","51","      }","52","      if (this.model.get('status') === 'UP' && this.wasStarting) {","53","        this.loadPreviousPage();","54","      }","55","      if (this.model.get('state') === 'MIGRATION_SUCCEEDED') {","56","        this.loadPreviousPage();","57","      }","58","    });","66","    Backbone.ajax({","67","      url: window.baseUrl + '\/api\/system\/migrate_db',","68","      type: 'POST'","69","    }).done(r => {","70","      this.model.set(r);","71","      this.render();","72","    });","76","    $('.page-simple').toggleClass(","77","      'panel-warning',","78","      this.model.get('state') === 'MIGRATION_REQUIRED'","79","    );","84","      window.location = this.options.returnTo || window.baseUrl;"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/maintenance-main.hbs":[{"add":["0","{{#eq status 'OFFLINE'}}","2","  {{> '_maintenance-status-offline'}}","6","  {{#unless setup}}","8","    {{#eq status 'UP'}}{{> '_maintenance-status-up'}}{{\/eq}}","9","    {{#eq status 'STARTING'}}{{> '_maintenance-status-starting'}}{{\/eq}}","10","    {{#eq status 'DOWN'}}{{> '_maintenance-status-down'}}{{\/eq}}","11","    {{#eq status 'DB_MIGRATION_NEEDED'}}{{> '_maintenance-status-migration'}}{{\/eq}}","12","    {{#eq status 'DB_MIGRATION_RUNNING'}}{{> '_maintenance-status-migration'}}{{\/eq}}","13","","14","  {{else}}","15","","16","    {{#eq state 'NO_MIGRATION'}}{{> '_maintenance-state-no-migration'}}{{\/eq}}","17","    {{#eq state 'MIGRATION_REQUIRED'}}{{> '_maintenance-state-migration-required'}}{{\/eq}}","18","    {{#eq state 'NOT_SUPPORTED'}}{{> '_maintenance-state-migration-not-supported'}}{{\/eq}}","19","    {{#eq state 'MIGRATION_RUNNING'}}{{> '_maintenance-state-migration-running'}}{{\/eq}}","20","    {{#eq state 'MIGRATION_SUCCEEDED'}}{{> '_maintenance-state-migration-succeeded'}}{{\/eq}}","21","    {{#eq state 'MIGRATION_FAILED'}}{{> '_maintenance-state-migration-failed'}}{{\/eq}}","22","","23","  {{\/unless}}","24","","25","{{\/eq}}"],"delete":["0","{{#unless setup}}","2","  {{#eq status 'UP'}}{{> '_maintenance-status-up'}}{{\/eq}}","3","  {{#eq status 'STARTING'}}{{> '_maintenance-status-starting'}}{{\/eq}}","4","  {{#eq status 'DOWN'}}{{> '_maintenance-status-down'}}{{\/eq}}","5","  {{#eq status 'DB_MIGRATION_NEEDED'}}{{> '_maintenance-status-migration'}}{{\/eq}}","6","  {{#eq status 'DB_MIGRATION_RUNNING'}}{{> '_maintenance-status-migration'}}{{\/eq}}","10","  {{#eq state 'NO_MIGRATION'}}{{> '_maintenance-state-no-migration'}}{{\/eq}}","11","  {{#eq state 'MIGRATION_REQUIRED'}}{{> '_maintenance-state-migration-required'}}{{\/eq}}","12","  {{#eq state 'NOT_SUPPORTED'}}{{> '_maintenance-state-migration-not-supported'}}{{\/eq}}","13","  {{#eq state 'MIGRATION_RUNNING'}}{{> '_maintenance-state-migration-running'}}{{\/eq}}","14","  {{#eq state 'MIGRATION_SUCCEEDED'}}{{> '_maintenance-state-migration-succeeded'}}{{\/eq}}","15","  {{#eq state 'MIGRATION_FAILED'}}{{> '_maintenance-state-migration-failed'}}{{\/eq}}","17","{{\/unless}}"]}],"server\/sonar-web\/src\/main\/js\/api\/system.ts":[{"add":["19","import { getJSON, post, postJSON } from '..\/helpers\/request';","72","export function getMigrationStatus(): Promise<any> {","73","  return getJSON('\/api\/system\/db_migration_status');","74","}","75","","76","export function migrateDatabase() {","77","  return postJSON('\/api\/system\/migrate_db');","78","}","79",""],"delete":["19","import { getJSON, post } from '..\/helpers\/request';"]}],"server\/sonar-web\/src\/main\/js\/apps\/maintenance\/templates\/_maintenance-status-offline.hbs":[{"add":[],"delete":[]}]}},"9538f9ae5502b33651f1d916ee69aaf74c121231":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeNotif-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeItem-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/SystemUpgradeNotif.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeNotif-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/styles.css":"MODIFY","sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeIntermediate-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeIntermediate.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeForm-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeIntermediate-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/style.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/__tests__\/utils-test.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeItem.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeForm-test.tsx.snap":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeForm.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeItem-test.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeNotif.tsx":"ADD","server\/sonar-web\/src\/main\/js\/apps\/system\/utils.ts":"MODIFY","server\/sonar-web\/src\/main\/js\/api\/system.ts":"MODIFY","server\/sonar-web\/src\/main\/less\/components\/alerts.less":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeNotif-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeItem-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/SystemUpgradeNotif.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeNotif-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/styles.css":[{"add":["63","","64",".system-upgrade-version {","65","  padding: 8px;","66","}","67","","68",".system-upgrade-version ~ .system-upgrade-version {","69","  margin-top: 10px;","70","  padding-top: 18px;","71","  border-top: solid 1px #e6e6e6;","72","}","73","","74",".system-upgrade-intermediate {","75","  padding: 6px 10px;","76","}"],"delete":[]}],"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2236","system.download_x=Download {0}","2237","system.hide_intermediate_versions=Hide intermediate versions","2238","system.how_to_upgrade=How to upgrade?","2240","system.latest_version=Latest Version","2241","system.latest_lts_version=Latest LTS Version","2246","system.new_version_available=A new version of SonarQube is available.","2247","system.release_notes=Release Notes","2248","system.released_x=Released {0}","2251","system.see_sonarqube_downloads=See All SonarQube Downloads","2253","system.show_intermediate_versions=Show intermediate versions","2254","system.system_upgrade=System Upgrade","2255","system.version_is_availble={version} is available"],"delete":["2068","marketplace.system_upgrades=System Upgrades","2226",""]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeIntermediate-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeIntermediate.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeForm-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeIntermediate-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/style.css":[{"add":[],"delete":["32","","33",".marketplace-notifs .alert {","34","  padding: 8px;","35","}","36","","37",".marketplace-notifs .alert:last-child {","38","  margin-bottom: 16px;","39","}"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/__tests__\/utils-test.ts":[{"add":["20","import { ClusterSysInfo, SysInfo, SystemUpgrade } from '..\/..\/..\/api\/system';","86","","87","describe('sortUpgrades', () => {","88","  it('should sort correctly versions', () => {","89","    expect(","90","      u.sortUpgrades([","91","        { version: '5.4.2' },","92","        { version: '5.10' },","93","        { version: '5.1' },","94","        { version: '5.4' }","95","      ] as SystemUpgrade[])","96","    ).toEqual([{ version: '5.10' }, { version: '5.4.2' }, { version: '5.4' }, { version: '5.1' }]);","97","    expect(","98","      u.sortUpgrades([","99","        { version: '5.10' },","100","        { version: '5.1.2' },","101","        { version: '6.0' },","102","        { version: '6.9' }","103","      ] as SystemUpgrade[])","104","    ).toEqual([{ version: '6.9' }, { version: '6.0' }, { version: '5.10' }, { version: '5.1.2' }]);","105","  });","106","});","107","","108","describe('groupUpgrades', () => {","109","  it('should group correctly', () => {","110","    expect(","111","      u.groupUpgrades([","112","        { version: '5.10' },","113","        { version: '5.4.2' },","114","        { version: '5.4' },","115","        { version: '5.1' }","116","      ] as SystemUpgrade[])","117","    ).toEqual([","118","      [{ version: '5.10' }, { version: '5.4.2' }, { version: '5.4' }, { version: '5.1' }]","119","    ]);","120","    expect(","121","      u.groupUpgrades([","122","        { version: '6.9' },","123","        { version: '6.7' },","124","        { version: '6.0' },","125","        { version: '5.10' },","126","        { version: '5.4.2' }","127","      ] as SystemUpgrade[])","128","    ).toEqual([","129","      [{ version: '6.9' }, { version: '6.7' }, { version: '6.0' }],","130","      [{ version: '5.10' }, { version: '5.4.2' }]","131","    ]);","132","  });","133","});"],"delete":["20","import { ClusterSysInfo, SysInfo } from '..\/..\/..\/api\/system';"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeItem.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/marketplace\/App.tsx":[{"add":["187","    this.setState({ editionStatus });","213","        <div className=\"page-notifs\">"],"delete":["187","    this.setState({ editionStatus: editionStatus });","213","        <div className=\"marketplace-notifs\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/__snapshots__\/SystemUpgradeForm-test.tsx.snap":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeForm.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/App.tsx":[{"add":["25","import SystemUpgradeNotif from '.\/system-upgrade\/SystemUpgradeNotif';","120","        <SystemUpgradeNotif \/>"],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/__tests__\/SystemUpgradeItem-test.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/components\/system-upgrade\/SystemUpgradeNotif.tsx":[{"add":[],"delete":[]}],"server\/sonar-web\/src\/main\/js\/apps\/system\/utils.ts":[{"add":["19","import { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';","33","  SysValueObject,","34","  SystemUpgrade","188","","189","export function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {","190","  return sortBy(upgrades, [","191","    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),","192","    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),","193","    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)","194","  ]);","195","}","196","","197","export function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {","198","  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);","199","  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));","200","  return sortedMajor.map(key => groupedVersions[key]);","201","}"],"delete":["19","import { each, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';","33","  SysValueObject"]}],"server\/sonar-web\/src\/main\/js\/api\/system.ts":[{"add":["60","export interface SystemUpgrade {","61","  version: string;","62","  description: string;","63","  releaseDate: string;","64","  changeLogUrl: string;","65","  downloadUrl: string;","66","  plugins: any;","67","}","68","","81","export function getSystemUpgrades(): Promise<{","82","  upgrades: SystemUpgrade[];","83","  updateCenterRefresh: string;","84","}> {","85","  return getJSON('\/api\/system\/upgrades');","86","}","87",""],"delete":[]}],"server\/sonar-web\/src\/main\/less\/components\/alerts.less":[{"add":["67","","68",".page-notifs .alert {","69","  display: flex;","70","  justify-content: space-between;","71","  padding: 8px 10px;","72","}","73","","74",".page-notifs .alert:last-child {","75","  margin-bottom: 16px;","76","}"],"delete":[]}]}},"f2a73bce4278b987c7ad008a1ea83621a97550f5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeak-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverall-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverallMeasures-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/styles.css":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeakMeasures-test.tsx.snap":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeakMeasures.tsx":[{"add":["34","      <div className=\"project-card-measure\" data-key=\"new_reliability_rating\">","116","      <div className=\"project-card-measure project-card-ncloc\" data-key=\"new_lines\">"],"delete":["34","      <div className=\"project-card-measure smaller-card\" data-key=\"new_reliability_rating\">","116","      <div className=\"project-card-measure smaller-card project-card-ncloc\" data-key=\"new_lines\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeak-test.tsx.snap":[{"add":["11","      className=\"project-card-header\"","12","    >","13","      <h2","14","        className=\"project-card-name\"","15","      >","16","        <Connect(ProjectCardOrganization)","17","          organization={","18","            Object {","19","              \"key\": \"org\",","20","              \"name\": \"org\",","21","            }","22","          }","23","        \/>","24","        <Link","25","          onlyActiveOnIndex={false}","26","          style={Object {}}","27","          to={","28","            Object {","29","              \"pathname\": \"\/dashboard\",","30","              \"query\": Object {","31","                \"id\": \"foo\",","32","              },","33","            }","34","          }","35","        >","36","          Foo","37","        <\/Link>","38","      <\/h2>","39","      <ProjectCardQualityGate","40","        status=\"OK\"","41","      \/>","42","      <div","43","        className=\"project-card-header-right\"","44","      \/>","45","    <\/div>"],"delete":["10","    <h2","11","      className=\"project-card-name\"","12","    >","13","      <Connect(ProjectCardOrganization)","14","        organization={","15","          Object {","16","            \"key\": \"org\",","17","            \"name\": \"org\",","18","          }","19","        }","20","      \/>","21","      <Link","22","        onlyActiveOnIndex={false}","23","        style={Object {}}","24","        to={","25","          Object {","26","            \"pathname\": \"\/dashboard\",","27","            \"query\": Object {","28","              \"id\": \"foo\",","29","            },","30","          }","31","        }","32","      >","33","        Foo","34","      <\/Link>","35","    <\/h2>","36","    <ProjectCardQualityGate","37","      status=\"OK\"","38","    \/>","40","      className=\"pull-right text-right\"","41","    \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverall-test.tsx.snap":[{"add":["11","      className=\"project-card-header\"","12","    >","13","      <h2","14","        className=\"project-card-name\"","15","      >","16","        <Connect(ProjectCardOrganization)","17","          organization={","18","            Object {","19","              \"key\": \"org\",","20","              \"name\": \"org\",","21","            }","22","          }","23","        \/>","24","        <Link","25","          onlyActiveOnIndex={false}","26","          style={Object {}}","27","          to={","28","            Object {","29","              \"pathname\": \"\/dashboard\",","30","              \"query\": Object {","31","                \"id\": \"foo\",","32","              },","33","            }","34","          }","35","        >","36","          Foo","37","        <\/Link>","38","      <\/h2>","39","      <ProjectCardQualityGate","40","        status=\"OK\"","41","      \/>","42","      <div","43","        className=\"project-card-header-right\"","44","      \/>","45","    <\/div>"],"delete":["10","    <h2","11","      className=\"project-card-name\"","12","    >","13","      <Connect(ProjectCardOrganization)","14","        organization={","15","          Object {","16","            \"key\": \"org\",","17","            \"name\": \"org\",","18","          }","19","        }","20","      \/>","21","      <Link","22","        onlyActiveOnIndex={false}","23","        style={Object {}}","24","        to={","25","          Object {","26","            \"pathname\": \"\/dashboard\",","27","            \"query\": Object {","28","              \"id\": \"foo\",","29","            },","30","          }","31","        }","32","      >","33","        Foo","34","      <\/Link>","35","    <\/h2>","36","    <ProjectCardQualityGate","37","      status=\"OK\"","38","    \/>","40","      className=\"pull-right text-right\"","41","    \/>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardOverallMeasures-test.tsx.snap":[{"add":["57","    className=\"project-card-measure\""],"delete":["57","    className=\"project-card-measure smaller-card\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/styles.css":[{"add":["67",".project-card-header {","68","  display: flex;","69","  align-items: center;","70","}","71","","72",".project-card-header-right {","73","  margin-left: auto;","74","}","75","","78","  overflow: hidden;","79","  text-overflow: ellipsis;","80","  white-space: nowrap;","157","  white-space: nowrap;"],"delete":["111",".project-card-measure.smaller-card {","112","  width: 90px;","113","}","114",""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardLeak.tsx":[{"add":["44","    <div className=\"boxed-group project-card\" data-key={project.key}>","46","        <div className=\"project-card-header\">","47","          {project.isFavorite != null && (","48","            <Favorite","49","              className=\"spacer-right\"","50","              component={project.key}","51","              favorite={project.isFavorite}","52","              qualifier=\"TRK\"","53","            \/>","55","          <h2 className=\"project-card-name\">","56","            {!organization && (","57","              <ProjectCardOrganizationContainer organization={project.organization} \/>","58","            )}","59","            <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","60","          <\/h2>","61","          {project.analysisDate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","62","          <div className=\"project-card-header-right\">","63","            {isPrivate && (","64","              <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","65","            )}","66","            {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}","67","          <\/div>"],"delete":["44","    <div data-key={project.key} className=\"boxed-group project-card\">","46","        {project.isFavorite != null && (","47","          <Favorite","48","            className=\"spacer-right\"","49","            component={project.key}","50","            favorite={project.isFavorite}","51","            qualifier=\"TRK\"","52","          \/>","53","        )}","54","        <h2 className=\"project-card-name\">","55","          {!organization && (","56","            <ProjectCardOrganizationContainer organization={project.organization} \/>","58","          <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","59","        <\/h2>","60","        {project.analysisDate && <ProjectCardQualityGate status={measures!['alert_status']} \/>}","61","        <div className=\"pull-right text-right\">","62","          {isPrivate && (","63","            <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","64","          )}","65","          {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverall.tsx":[{"add":["43","    <div className=\"boxed-group project-card\" data-key={project.key}>","45","        <div className=\"project-card-header\">","46","          {project.isFavorite !== undefined && (","47","            <Favorite","48","              className=\"spacer-right\"","49","              component={project.key}","50","              favorite={project.isFavorite}","51","              qualifier=\"TRK\"","52","            \/>","54","          <h2 className=\"project-card-name\">","55","            {!organization && (","56","              <ProjectCardOrganizationContainer organization={project.organization} \/>","57","            )}","58","            <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","59","          <\/h2>","60","          {project.analysisDate && <ProjectCardQualityGate status={measures['alert_status']} \/>}","61","          <div className=\"project-card-header-right\">","62","            {isPrivate && (","63","              <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","64","            )}","65","            {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}","66","          <\/div>"],"delete":["43","    <div data-key={project.key} className=\"boxed-group project-card\">","45","        {project.isFavorite !== undefined && (","46","          <Favorite","47","            className=\"spacer-right\"","48","            component={project.key}","49","            favorite={project.isFavorite}","50","            qualifier=\"TRK\"","51","          \/>","52","        )}","53","        <h2 className=\"project-card-name\">","54","          {!organization && (","55","            <ProjectCardOrganizationContainer organization={project.organization} \/>","57","          <Link to={{ pathname: '\/dashboard', query: { id: project.key } }}>{project.name}<\/Link>","58","        <\/h2>","59","        {project.analysisDate && <ProjectCardQualityGate status={measures['alert_status']} \/>}","60","        <div className=\"pull-right text-right\">","61","          {isPrivate && (","62","            <PrivateBadge className=\"spacer-left\" qualifier=\"TRK\" tooltipPlacement=\"left\" \/>","63","          )}","64","          {hasTags && <TagsList className=\"spacer-left note\" tags={project.tags} \/>}"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/__tests__\/__snapshots__\/ProjectCardLeakMeasures-test.tsx.snap":[{"add":["7","    className=\"project-card-measure\"","143","    className=\"project-card-measure project-card-ncloc\"","173","    className=\"project-card-measure\"","307","    className=\"project-card-measure project-card-ncloc\""],"delete":["7","    className=\"project-card-measure smaller-card\"","143","    className=\"project-card-measure smaller-card project-card-ncloc\"","173","    className=\"project-card-measure smaller-card\"","307","    className=\"project-card-measure smaller-card project-card-ncloc\""]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/components\/ProjectCardOverallMeasures.tsx":[{"add":["42","      <div className=\"project-card-measure\" data-key=\"reliability_rating\">"],"delete":["42","      <div className=\"project-card-measure smaller-card\" data-key=\"reliability_rating\">"]}]}},"464e95be6c8d4ed4e83dd4811b332047ec6dfee5":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/ProjectFacet.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/projects\/store\/utils.js":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/issues\/components\/AppContainer.js":[{"add":["23","import { uniq } from 'lodash';","27","import { getOrganizations } from '..\/..\/..\/api\/organizations';","28","import { receiveOrganizations } from '..\/..\/..\/store\/organizations\/duck';","41","const fetchIssueOrganizations = issues => dispatch => {","42","  if (!issues.length) {","43","    return Promise.resolve();","44","  }","45","","46","  const organizationKeys = uniq(issues.map(issue => issue.organization));","47","  return getOrganizations(organizationKeys).then(","48","    response => dispatch(receiveOrganizations(response.organizations)),","49","    onFail(dispatch)","50","  );","51","};","52","","53","const fetchIssues = (query: Query) => dispatch =>","54","  searchIssues({ ...query, additionalFields: '_all' })","55","    .then(response => {","56","      const parsedIssues = response.issues.map(issue =>","57","        parseIssueFromResponse(issue, response.components, response.users, response.rules)","58","      );","59","      return { ...response, issues: parsedIssues };","60","    })","61","    .then(response => dispatch(fetchIssueOrganizations(response.issues)).then(() => response))","62","    .catch(onFail(dispatch));"],"delete":["38","const fetchIssues = (query: Query) => (dispatch: Dispatch<*>) =>","39","  searchIssues({ ...query, additionalFields: '_all' }).then(response => {","40","    const parsedIssues = response.issues.map(issue =>","41","      parseIssueFromResponse(issue, response.components, response.users, response.rules)","42","    );","43","    return { ...response, issues: parsedIssues };","44","  }, onFail(dispatch));"]}],"server\/sonar-web\/src\/main\/js\/apps\/issues\/sidebar\/ProjectFacet.js":[{"add":["30","import { searchProjects, getTree } from '..\/..\/..\/api\/components';","80","      : searchProjects({","81","          ps: 50,","82","          filter: query ? `query = \"${query}\"` : ''","83","        }).then(response =>"],"delete":["30","import { searchComponents, getTree } from '..\/..\/..\/api\/components';","80","      : searchComponents({ ps: 50, q: query, qualifiers: 'TRK' }).then(response =>"]}],"server\/sonar-web\/src\/main\/js\/apps\/projects\/store\/utils.js":[{"add":["163","export const convertToFilter = (query, isFavorite) => {"],"delete":["163","const convertToFilter = (query, isFavorite) => {"]}]}},"fb15f6fc29a3c76008b153de2c37ad270398eabf":{"changes":{"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DefaultDatabaseTest.java":"MODIFY","server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DefaultDatabase.java":"MODIFY","server\/sonar-db-core\/build.gradle":"MODIFY"},"diff":{"server\/sonar-db-core\/src\/test\/java\/org\/sonar\/db\/DefaultDatabaseTest.java":[{"add":["21","import com.tngtech.java.junit.dataprovider.DataProvider;","22","import com.tngtech.java.junit.dataprovider.DataProviderRunner;","23","import com.tngtech.java.junit.dataprovider.UseDataProvider;","26","import org.junit.Rule;","28","import org.junit.rules.ExpectedException;","29","import org.junit.runner.RunWith;","35","import static org.apache.commons.lang.StringUtils.removeStart;","37","import static org.junit.rules.ExpectedException.none;","40","@RunWith(DataProviderRunner.class)","43","  private static final String SONAR_JDBC = \"sonar.jdbc.\";","44","","45","","46","  @Rule","47","  public ExpectedException expectedException = none();","66","    props.setProperty(\"sonar.jdbc.maxWait\", \"5000\");","72","    assertThat(commonsDbcpProps.getProperty(\"maxTotal\")).isEqualTo(\"5\");","73","    assertThat(commonsDbcpProps.getProperty(\"maxWaitMillis\")).isEqualTo(\"5000\");","74","  }","75","","76","  @Test","77","  @UseDataProvider(\"sonarJdbcAndDbcpProperties\")","78","  public void shouldExtractCommonsDbcpPropertiesIfDuplicatedPropertiesWithSameValue(String jdbcProperty, String dbcpProperty) {","79","    Properties props = new Properties();","80","    props.setProperty(jdbcProperty, \"100\");","81","    props.setProperty(dbcpProperty, \"100\");","82","","83","    Properties commonsDbcpProps = DefaultDatabase.extractCommonsDbcpProperties(props);","84","","85","    assertThat(commonsDbcpProps.getProperty(removeStart(dbcpProperty, SONAR_JDBC))).isEqualTo(\"100\");","86","  }","87","","88","  @Test","89","  @UseDataProvider(\"sonarJdbcAndDbcpProperties\")","90","  public void shouldThrowISEIfDuplicatedResolvedPropertiesWithDifferentValue(String jdbcProperty, String dbcpProperty) {","91","    Properties props = new Properties();","92","    props.setProperty(jdbcProperty, \"100\");","93","    props.setProperty(dbcpProperty, \"200\");","94","","95","    expectedException.expect(IllegalStateException.class);","96","    expectedException.expectMessage(String.format(\"Duplicate property declaration for resolved jdbc key '%s': conflicting values are\", removeStart(dbcpProperty, SONAR_JDBC)));","97","","98","    DefaultDatabase.extractCommonsDbcpProperties(props);","132","    assertThat(((BasicDataSource) db.getDataSource()).getMaxTotal()).isEqualTo(1);","156","","157","  @DataProvider","158","  public static Object[][] sonarJdbcAndDbcpProperties() {","159","    return new Object[][] {","160","      {\"sonar.jdbc.maxActive\", \"sonar.jdbc.maxTotal\"},","161","      {\"sonar.jdbc.maxWait\", \"sonar.jdbc.maxWaitMillis\"}","162","    };","163","  }"],"delete":["57","    assertThat(commonsDbcpProps.getProperty(\"maxActive\")).isEqualTo(\"5\");","91","    assertThat(((BasicDataSource) db.getDataSource()).getMaxTotal()).isEqualTo(8);"]}],"server\/sonar-db-core\/src\/main\/java\/org\/sonar\/db\/DefaultDatabase.java":[{"add":["23","import com.google.common.collect.ImmutableMap;","44","import static com.google.common.base.Preconditions.checkState;","59","  private static final String SONAR_JDBC_MAX_ACTIVE = \"sonar.jdbc.maxActive\";","60","  private static final String DBCP_JDBC_MAX_ACTIVE = \"maxTotal\";","61","  private static final String SONAR_JDBC_MAX_WAIT = \"sonar.jdbc.maxWait\";","62","  private static final String DBCP_JDBC_MAX_WAIT = \"maxWaitMillis\";","63","  private static final Map<String, String> SONAR_JDBC_TO_DBCP_PROPERTY_MAPPINGS = ImmutableMap.of(","64","    SONAR_JDBC_MAX_ACTIVE, DBCP_JDBC_MAX_ACTIVE,","65","    SONAR_JDBC_MAX_WAIT, DBCP_JDBC_MAX_WAIT","66","  );","180","        String resolvedKey = toDbcpPropertyKey(key);","181","        String existingValue = (String) result.setProperty(resolvedKey, (String) entry.getValue());","182","        checkState(existingValue == null || existingValue.equals(entry.getValue()),","183","          \"Duplicate property declaration for resolved jdbc key '%s': conflicting values are '%s' and '%s'\", resolvedKey, existingValue, entry.getValue());","184","        result.setProperty(toDbcpPropertyKey(key), (String) entry.getValue());","196","  private static String toDbcpPropertyKey(String key) {","197","    if (SONAR_JDBC_TO_DBCP_PROPERTY_MAPPINGS.containsKey(key)) {","198","      return SONAR_JDBC_TO_DBCP_PROPERTY_MAPPINGS.get(key);","199","    }","200","","201","    return StringUtils.removeStart(key, SONAR_JDBC);","202","  }","203",""],"delete":["170","        result.setProperty(StringUtils.removeStart(key, SONAR_JDBC), (String) entry.getValue());"]}],"server\/sonar-db-core\/build.gradle":[{"add":["28","  testCompile 'com.tngtech.java:junit-dataprovider'"],"delete":[]}]}},"8bdb9fde4be635c666ce0b09a851789a5ecfc870":{"changes":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":"MODIFY","sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/issue\/Issue.java":"MODIFY","sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/DefaultIssueTest.java":"MODIFY"},"diff":{"tests\/src\/test\/java\/org\/sonarqube\/tests\/issue\/IssueCreationTest.java":[{"add":["21","import org.apache.commons.lang.StringUtils;","35","  private static final int ISSUE_MESSAGE_MAX_LENGTH = 1_333;","79","","80","  \/**","81","   * SONAR-7493","82","   *\/","83","  @Test","84","  public void issue_message_should_support_1_333_utf8_characters_encoded_on_3_bytes() {","85","    String longMessage = StringUtils.repeat(\"を\", ISSUE_MESSAGE_MAX_LENGTH);","86","","87","    assertThat(generateIssueWithMessage(longMessage)).isEqualTo(longMessage);","88","  }","89","","90","  \/**","91","   * Test the maximum size of DB column issues.message, when all characters","92","   * are encoded on 3-bytes","93","   *","94","   * SONAR-7493","95","   *\/","96","  @Test","97","  public void issue_message_should_be_abbreviated_if_longer_than_1333_utf8_characters_encoded_on_3_bytes() {","98","    String character = \"を\";","99","    String message = generateIssueWithMessage(StringUtils.repeat(character, 10_000));","100","","101","    String abbreviatedMessage = StringUtils.repeat(character, ISSUE_MESSAGE_MAX_LENGTH - 3) + \"...\";","102","    assertThat(message).isEqualTo(abbreviatedMessage);","103","  }","104","","105","  private String generateIssueWithMessage(String longMessage) {","106","    ORCHESTRATOR.getServer().provisionProject(SAMPLE_PROJECT_KEY, SAMPLE_PROJECT_KEY);","107","    ItUtils.restoreProfile(ORCHESTRATOR, getClass().getResource(\"\/issue\/IssueCreationTest\/with-custom-message.xml\"));","108","    ORCHESTRATOR.getServer().associateProjectToQualityProfile(SAMPLE_PROJECT_KEY, \"xoo\", \"with-custom-message\");","109","","110","    runProjectAnalysis(ORCHESTRATOR, \"shared\/xoo-sample\", \"sonar.customMessage.message\", longMessage);","111","","112","    Issue issue = issueClient().find(IssueQuery.create()).list().get(0);","113","    return issue.message();","114","  }"],"delete":[]}],"sonar-plugin-api\/src\/main\/java\/org\/sonar\/api\/issue\/Issue.java":[{"add":["40","   * In theory it should be 4_000 UTF-8 characters but unfortunately","41","   * Oracle DB does not support more than 4_000 bytes, even if column","42","   * issues.message is created with type VARCHAR2(4000 CHAR).","43","   * In order to have the same behavior on all databases, message","44","   * is truncated to 4_000 \/ 3 (maximum bytes per UTF-8 character)","45","   * = 1_333 characters.","47","  int MESSAGE_MAX_SIZE = 1_333;"],"delete":["41","  int MESSAGE_MAX_SIZE = 4000;"]}],"sonar-core\/src\/test\/java\/org\/sonar\/core\/issue\/DefaultIssueTest.java":[{"add":["38","  private DefaultIssue issue = new DefaultIssue();","154","    issue.setMessage(StringUtils.repeat(\"a\", 5_000));","155","    assertThat(issue.message()).hasSize(1_333);"],"delete":["38","  DefaultIssue issue = new DefaultIssue();","154","    issue.setMessage(StringUtils.repeat(\"a\", 5000));","155","    assertThat(issue.message()).hasSize(4000);"]}]}},"bc09582c5d9305cbe391fda11730a6c05a13fa5d":{"changes":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/js\/apps\/coding-rules\/components\/App.tsx":[{"add":["263","            this.setState((state: State) => ({","264","              actives: { ...state.actives, ...actives },"],"delete":["263","            this.setState(state => ({","264","              actives: { ...state.actives, actives },"]}]}},"4df67277be75c9b41f5b434f03c2fbf6dbb8b426":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImplTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/qualityprofile\/BuiltInQProfileUpdateImplTest.java":[{"add":["23","import org.assertj.core.groups.Tuple;","35","import org.sonar.db.qualityprofile.ActiveRuleParamDto;","38","import org.sonar.db.rule.RuleParamDto;","47","import static org.assertj.core.groups.Tuple.tuple;","52","import static org.sonar.api.rules.RulePriority.MINOR;","194","  \/\/ SONAR-10473","195","  @Test","196","  public void activate_rule_on_built_in_profile_resets_severity_to_default_if_not_overridden() {","197","    RuleDefinitionDto rule = db.rules().insert(r -> r.setSeverity(Severity.MAJOR).setLanguage(\"xoo\"));","198","","199","    BuiltInQualityProfilesDefinition.Context context = new BuiltInQualityProfilesDefinition.Context();","200","    NewBuiltInQualityProfile newQp = context.createBuiltInQualityProfile(\"Sonar way\", \"xoo\");","201","    newQp.activateRule(rule.getRepositoryKey(), rule.getRuleKey());","202","    newQp.done();","203","    BuiltInQProfile builtIn = builtInProfileRepository.create(context.profile(\"xoo\", \"Sonar way\"), rule);","204","    underTest.update(db.getSession(), builtIn, persistedProfile);","205","","206","    List<ActiveRuleDto> activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","207","    assertThatRuleIsNewlyActivated(activeRules, rule, MAJOR);","208","","209","    \/\/ emulate an upgrade of analyzer that changes the default severity of the rule","210","    rule.setSeverity(Severity.MINOR);","211","    db.rules().update(rule);","212","","213","    underTest.update(db.getSession(), builtIn, persistedProfile);","214","    activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","215","    assertThatRuleIsNewlyActivated(activeRules, rule, MINOR);","216","  }","217","","218","  @Test","219","  public void activate_rule_on_built_in_profile_resets_params_to_default_if_not_overridden() {","220","    RuleDefinitionDto rule = db.rules().insert(r -> r.setLanguage(\"xoo\"));","221","    RuleParamDto ruleParam = db.rules().insertRuleParam(rule, p -> p.setName(\"min\").setDefaultValue(\"10\"));","222","","223","    BuiltInQualityProfilesDefinition.Context context = new BuiltInQualityProfilesDefinition.Context();","224","    NewBuiltInQualityProfile newQp = context.createBuiltInQualityProfile(\"Sonar way\", \"xoo\");","225","    newQp.activateRule(rule.getRepositoryKey(), rule.getRuleKey());","226","    newQp.done();","227","    BuiltInQProfile builtIn = builtInProfileRepository.create(context.profile(\"xoo\", \"Sonar way\"), rule);","228","    underTest.update(db.getSession(), builtIn, persistedProfile);","229","","230","    List<ActiveRuleDto> activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","231","    assertThat(activeRules).hasSize(1);","232","    assertThatRuleHasParams(db, activeRules.get(0), tuple(\"min\", \"10\"));","233","","234","    \/\/ emulate an upgrade of analyzer that changes the default value of parameter min","235","    ruleParam.setDefaultValue(\"20\");","236","    db.getDbClient().ruleDao().updateRuleParam(db.getSession(), rule, ruleParam);","237","","238","    underTest.update(db.getSession(), builtIn, persistedProfile);","239","    activeRules = db.getDbClient().activeRuleDao().selectByRuleProfile(db.getSession(), persistedProfile);","240","    assertThat(activeRules).hasSize(1);","241","    assertThatRuleHasParams(db, activeRules.get(0), tuple(\"min\", \"20\"));","242","  }","243","","286","  private static void assertThatRuleHasParams(DbTester db, ActiveRuleDto activeRule, Tuple... expectedParams) {","287","    assertThat(db.getDbClient().activeRuleDao().selectParamsByActiveRuleId(db.getSession(), activeRule.getId()))","288","      .extracting(ActiveRuleParamDto::getKey, ActiveRuleParamDto::getValue)","289","      .containsExactlyInAnyOrder(expectedParams);","290","  }","291",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/qualityprofile\/RuleActivator.java":[{"add":["160","   * Update severity and params","167","    \/\/ First apply severity","168","    String severity;","170","      \/\/ load severity from parent profile, else from default values","171","      severity = firstNonNull(","173","        rule.get().getSeverityString());","174","    } else if (context.getRulesProfile().isBuiltIn()) {","175","      \/\/ for builtin quality profiles, the severity from profile, when null use the default severity of the rule","176","      severity = firstNonNull(request.getSeverity(), rule.get().getSeverityString());","177","    } else {","178","      \/\/ load severity from request, else keep existing one (if already activated), else from parent, else from default","179","      severity = firstNonNull(","181","        activeRule == null ? null : activeRule.get().getSeverityString(),","183","        rule.get().getSeverityString());","184","    }","185","    change.setSeverity(severity);","186","","187","    \/\/ Apply param values","188","    for (RuleParamDto ruleParamDto : rule.getParams()) {","189","      String paramKey = ruleParamDto.getName();","190","      String paramValue;","191","      if (request.isReset()) {","192","        \/\/ load params from parent profile, else from default values","193","        paramValue = firstNonNull(","194","          parentActiveRule != null ? parentActiveRule.getParamValue(paramKey) : null,","195","          rule.getParamDefaultValue(paramKey));","196","      } else if (context.getRulesProfile().isBuiltIn()) {","197","        \/\/ use the value defined in the profile definition, else the rule default value","198","        paramValue = firstNonNull(","199","          context.getRequestedParamValue(request, paramKey),","200","          rule.getParamDefaultValue(paramKey));","201","      } else {","203","        String activeRuleValue = activeRule == null ? null : activeRule.getParamValue(paramKey);","204","        paramValue = context.hasRequestedParamValue(request, paramKey) ?","205","          \/\/ If the request contains the parameter then we're using either value from request, or parent value, or default value","212","          activeRuleValue,","213","          parentValue,","214","          rule.getParamDefaultValue(paramKey));","217","      change.setParameter(paramKey, validateParam(ruleParamDto, paramValue));"],"delete":["160","   * Severity and parameter values are :","161","   * 1. defined by end-user","162","   * 2. else inherited from parent profile","163","   * 3. else defined by rule defaults","164","   * <p\/>","165","   * On custom rules, it's always rule parameters that are used","173","      \/\/ load severity and params from parent profile, else from default values","174","      change.setSeverity(firstNonNull(","176","        rule.get().getSeverityString()));","177","","178","      for (RuleParamDto ruleParamDto : rule.getParams()) {","179","        String paramKey = ruleParamDto.getName();","180","        change.setParameter(paramKey, validateParam(ruleParamDto, firstNonNull(","181","          parentActiveRule != null ? parentActiveRule.getParamValue(paramKey) : null,","182","          rule.getParamDefaultValue(paramKey))));","183","      }","184","","185","    } else if (activeRule != null) {","186","      \/\/ already activated -> load severity and parameters from request, else keep existing ones, else from parent,","187","      \/\/ else from default","188","      change.setSeverity(firstNonNull(","190","        activeRule.get().getSeverityString(),","192","        rule.get().getSeverityString()));","193","      for (RuleParamDto ruleParamDto : rule.getParams()) {","194","        String paramKey = ruleParamDto.getName();","196","        String paramValue = context.hasRequestedParamValue(request, paramKey) ?","197","        \/\/ If the request contains the parameter then we're using either value from request, or parent value, or default value","204","            activeRule.getParamValue(paramKey),","205","            parentValue,","206","            rule.getParamDefaultValue(paramKey));","207","        change.setParameter(paramKey, validateParam(ruleParamDto, paramValue));","210","    } else {","211","      \/\/ not activated -> load severity and parameters from request, else from parent, else from defaults","212","      change.setSeverity(firstNonNull(","213","        request.getSeverity(),","214","        parentActiveRule != null ? parentActiveRule.get().getSeverityString() : null,","215","        rule.get().getSeverityString()));","216","      for (RuleParamDto ruleParamDto : rule.getParams()) {","217","        String paramKey = ruleParamDto.getName();","218","        change.setParameter(paramKey, validateParam(ruleParamDto,","219","          firstNonNull(","220","            context.getRequestedParamValue(request, paramKey),","221","            parentActiveRule != null ? parentActiveRule.getParamValue(paramKey) : null,","222","            rule.getParamDefaultValue(paramKey))));","223","      }"]}]}},"2d9bae8c4d2d03c0cccd77d567678af84ed271d5":{"changes":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ActivityActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsActionTest.java":"MODIFY","server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":"MODIFY","sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDbTester.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ActivityAction.java":"MODIFY","sonar-db\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":"MODIFY"},"diff":{"sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDaoTest.java":[{"add":["697","    componentDb.indexProjectsAndViews();","710","    componentDb.indexProjectsAndViews();","722","    componentDb.indexProjectsAndViews();","751","    componentDb.indexProjectsAndViews();","770","    componentDb.indexProjectsAndViews();","790","    componentDb.indexProjectsAndViews();","810","    componentDb.indexProjectsAndViews();","833","    componentDb.indexProjectsAndViews();","853","    componentDb.indexProjectsAndViews();","870","    componentDb.indexProjectsAndViews();","892","    componentDb.indexProjectsAndViews();","911","    componentDb.indexProjectsAndViews();","930","    componentDb.indexProjectsAndViews();"],"delete":["697","    componentDb.indexProjects();","710","    componentDb.indexProjects();","722","    componentDb.indexProjects();","751","    componentDb.indexProjects();","770","    componentDb.indexProjects();","790","    componentDb.indexProjects();","810","    componentDb.indexProjects();","833","    componentDb.indexProjects();","853","    componentDb.indexProjects();","870","    componentDb.indexProjects();","892","    componentDb.indexProjects();","911","    componentDb.indexProjects();","930","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/ce\/ws\/ActivityActionTest.java":[{"add":["45","import org.sonar.db.component.ComponentDto;","64","import static org.sonar.db.component.ComponentTesting.newDeveloper;","66","import static org.sonar.db.component.ComponentTesting.newView;","215","    ComponentDto struts = newProjectDto().setName(\"old apache struts\").setUuid(\"P1\");","216","    ComponentDto zookeeper = newProjectDto().setName(\"new apache zookeeper\").setUuid(\"P2\");","217","    ComponentDto eclipse = newProjectDto().setName(\"eclipse\").setUuid(\"P3\");","218","    componentDb.insertProjectAndSnapshot(struts);","219","    componentDb.insertProjectAndSnapshot(zookeeper);","220","    componentDb.insertProjectAndSnapshot(eclipse);","222","    componentDb.indexComponents(struts.getId(), zookeeper.getId(), eclipse.getId());","234","  public void search_activity_returns_views_and_developers() {","235","    ComponentDto developer = newDeveloper(\"Apache Developer\").setUuid(\"D1\");","236","    ComponentDto apacheView = newView().setName(\"Apache View\").setUuid(\"V1\");","237","    componentDb.insertDeveloperAndSnapshot(developer);","238","    componentDb.insertViewAndSnapshot(apacheView);","239","    componentDb.indexComponents(developer.getId(), apacheView.getId());","240","    userSession.setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN);","241","    insertActivity(\"T1\", \"D1\", CeActivityDto.Status.SUCCESS);","242","    insertActivity(\"T2\", \"V1\", CeActivityDto.Status.SUCCESS);","243","","244","    ActivityResponse activityResponse = call(ws.newRequest().setParam(PARAM_COMPONENT_QUERY, \"apac\"));","245","","246","    assertThat(activityResponse.getTasksList()).extracting(\"id\").containsOnly(\"T1\", \"T2\");","247","  }","248","","249","  @Test"],"delete":["212","    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache struts\").setUuid(\"P1\"));","213","    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"apache zookeeper\").setUuid(\"P2\"));","214","    componentDb.insertProjectAndSnapshot(newProjectDto().setName(\"eclipse\").setUuid(\"P3\"));","216","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/component\/ws\/TreeActionTest.java":[{"add":["120","    componentDb.indexProjectsAndViews();","151","    componentDb.indexProjectsAndViews();","177","    componentDb.indexProjectsAndViews();","197","    componentDb.indexProjectsAndViews();","217","    componentDb.indexProjectsAndViews();","236","    componentDb.indexProjectsAndViews();","416","    componentDb.indexProjectsAndViews();"],"delete":["120","    componentDb.indexProjects();","151","    componentDb.indexProjects();","177","    componentDb.indexProjects();","197","    componentDb.indexProjects();","217","    componentDb.indexProjects();","236","    componentDb.indexProjects();","416","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/SearchProjectPermissionsActionTest.java":[{"add":["186","    componentDb.indexProjectsAndViews();","200","    componentDb.indexProjectsAndViews();","215","    componentDb.indexProjectsAndViews();"],"delete":["186","    componentDb.indexProjects();","200","    componentDb.indexProjects();","215","    componentDb.indexProjects();"]}],"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/permission\/ws\/template\/BulkApplyTemplateActionTest.java":[{"add":["183","    componentDb.indexProjectsAndViews();"],"delete":["183","    componentDb.indexProjects();"]}],"sonar-db\/src\/test\/java\/org\/sonar\/db\/component\/ComponentDbTester.java":[{"add":["85","  public void indexProjectsAndViews() {","89","","90","  public void indexComponents(long... componentIdList) {","91","    for (long componentId : componentIdList) {","92","      dbClient.componentIndexDao().indexResource(dbSession, componentId);","93","    }","94","    db.commit();","95","  }"],"delete":["85","  public void indexProjects() {"]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/ce\/ws\/ActivityAction.java":[{"add":["76","  private static final List<String> POSSIBLE_QUALIFIERS = ImmutableList.of(Qualifiers.PROJECT, Qualifiers.VIEW, \"DEV\");","219","    query.setComponentUuids(loadComponentUuids(dbSession, request));","223","  @CheckForNull","224","  private List<String> loadComponentUuids(DbSession dbSession, ActivityWsRequest request) {","229","      return singletonList(componentUuid);","232","      ComponentQuery componentDtoQuery = ComponentQuery.builder()","233","        .setNameOrKeyQuery(componentQuery)","234","        .setQualifiers(POSSIBLE_QUALIFIERS.toArray(new String[0]))","235","        .build();","237","      return Lists.transform(componentDtos, ComponentDtoFunctions.toUuid());","239","","240","    return null;"],"delete":["218","    loadComponentUuids(dbSession, request, query);","222","  private void loadComponentUuids(DbSession dbSession, ActivityWsRequest request, CeTaskQuery query) {","227","      query.setComponentUuid(componentUuid);","230","      ComponentQuery componentDtoQuery = ComponentQuery.builder().setNameOrKeyQuery(componentQuery).setQualifiers(Qualifiers.PROJECT, Qualifiers.VIEW).build();","232","      query.setComponentUuids(Lists.transform(componentDtos, ComponentDtoFunctions.toUuid()));"]}],"sonar-db\/src\/main\/resources\/org\/sonar\/db\/component\/ComponentMapper.xml":[{"add":["269","    ORDER BY LOWER(p.name), p.name, p.id"],"delete":["269","    ORDER BY LOWER(p.name), p.name"]}]}},"585f3438a50dc49a31f05948451d1dd333268cbe":{"changes":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/PermissionCell.js":"MODIFY","server\/sonar-web\/src\/main\/js\/apps\/permissions\/shared\/components\/UserHolder.tsx":"MODIFY"},"diff":{"sonar-core\/src\/main\/resources\/org\/sonar\/l10n\/core.properties":[{"add":["2146","permission_templates.project_creators=Creators","2147","permission_templates.project_creators.explanation=When a new project, portfolio or application is created, the user who creates it will receive these permissions.","2148","permission_templates.project_creators.explanation.sonarcloud=When a new project is created, the user who creates it will receive these permissions."],"delete":["2146","permission_templates.project_creators=Project\/Portfolio\/Application Creators","2147","permission_templates.project_creators.explanation=When a new project \/ portfolio \/ application is created, the user who creates it will receive these permissions on the it."]}],"server\/sonar-web\/src\/main\/js\/apps\/permission-templates\/components\/PermissionCell.js":[{"add":["21","import HelpTooltip from '..\/..\/..\/components\/controls\/HelpTooltip';","23","import { isSonarCloud } from '..\/..\/..\/helpers\/system';","38","              <li className=\"little-spacer-bottom display-flex-center\">","40","                <HelpTooltip","41","                  className=\"little-spacer-left\"","42","                  overlay={translate(","43","                    isSonarCloud()","44","                      ? 'permission_templates.project_creators.explanation.sonarcloud'","45","                      : 'permission_templates.project_creators.explanation'","46","                  )}","47","                \/>"],"delete":["36","              <li className=\"little-spacer-bottom\">"]}],"server\/sonar-web\/src\/main\/js\/apps\/permissions\/shared\/components\/UserHolder.tsx":[{"add":["25","import { isSonarCloud } from '..\/..\/..\/..\/helpers\/system';","87","                {translate(","88","                  isSonarCloud()","89","                    ? 'permission_templates.project_creators.explanation.sonarcloud'","90","                    : 'permission_templates.project_creators.explanation'","91","                )}"],"delete":["86","                {translate('permission_templates.project_creators.explanation')}"]}]}},"ad9dd01e97b800714e76baa9a31e80db7ecc1c90":{"changes":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":"MODIFY","server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":"MODIFY"},"diff":{"server\/sonar-server\/src\/test\/java\/org\/sonar\/server\/organization\/ws\/SearchActionTest.java":[{"add":["36","import org.sonar.server.exceptions.UnauthorizedException;","293","  @Test","294","  public void fail_if_member_is_set_to_true_but_user_is_not_authenticated(){","295","    UserDto user = db.users().insertUser();","296","    OrganizationDto organization = db.organizations().insert();","297","    db.organizations().addMember(organization, user);","298","","299","    userSession.anonymous();","300","","301","    expectedException.expect(UnauthorizedException.class);","302","    expectedException.expectMessage(\"Authentication is required\");","303","","304","    call(ws.newRequest().setParam(PARAM_MEMBER, String.valueOf(true)));","305","  }","306","","307",""],"delete":[]}],"server\/sonar-server\/src\/main\/java\/org\/sonar\/server\/organization\/ws\/SearchAction.java":[{"add":["90","    boolean isMember = request.mandatoryParamAsBoolean(PARAM_MEMBER);","91","    if (isMember){","92","      userSession.checkLoggedIn();","93","    }","94",""],"delete":[]}]}},"b7c7eac477c154b56c68c070629f852d5e13e8e0":{"changes":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/lib\/authorization\/default_authorizer.rb":"MODIFY"},"diff":{"server\/sonar-web\/src\/main\/webapp\/WEB-INF\/lib\/authorization\/default_authorizer.rb":[{"add":["50","      compacted_group_ids=group_ids.compact","51","      gr_page_count=(compacted_group_ids.size\/page_size)","52","      gr_page_count+=1 if (compacted_group_ids.size % page_size)>0","53","","56","        gr_page_count.times do |gr_page_index|","57","          page_grids=compacted_group_ids[gr_page_index*page_size...(gr_page_index+1)*page_size]","58","          group_roles.concat(","59","            ActiveRecord::Base.connection.execute(\"SELECT resource_id FROM group_roles WHERE role='#{sanitized_role}' and (group_id is null or group_id in(#{page_grids.join(',')})) and resource_id in (#{page_rids.join(',')})\")","60","          )","61","        end","99","      # Oracle is limited to 1000 elements in clause \"IN\"","100","      compacted_group_ids=group_ids.compact","101","      page_size=999","102","      page_count=(compacted_group_ids.size\/page_size)","103","      page_count+=1 if (compacted_group_ids.size % page_size)>0","104","      global_group_roles=[]","105","      page_count.times do |page_index|","106","        page_ids=compacted_group_ids[page_index*page_size...(page_index+1)*page_size]","107","        global_group_roles.concat(","108","          GroupRole.all(:select => 'role', :conditions => [\"resource_id is null and (group_id is null or group_id in(?))\", page_ids]).map{|gr| gr.role.to_sym}","109","        )","110","      end"],"delete":["52","        group_roles.concat(","53","          ActiveRecord::Base.connection.execute(\"SELECT resource_id FROM group_roles WHERE role='#{sanitized_role}' and (group_id is null or group_id in(#{group_ids.join(',')})) and resource_id in (#{page_rids.join(',')})\")","54","        )","92","      global_group_roles=GroupRole.all(:select => 'role', :conditions => [\"resource_id is null and (group_id is null or group_id in(?))\", group_ids]).map{|gr| gr.role.to_sym}"]}]}}}